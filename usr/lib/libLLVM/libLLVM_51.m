_QWORD *sub_1C5C96C6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  llvm *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v28;
  _QWORD *v29;
  llvm *v30;
  uint64_t *v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v38;
  unint64_t *v39;
  unint64_t v40;
  unsigned __int8 *v41;
  __int128 *v42;
  __int128 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t *v58;
  uint64_t v59;
  int v60;
  unint64_t v61;
  const char *v62;
  _QWORD *v63;
  uint64_t v64;
  int v65;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void *v70;
  _BYTE *v71;
  llvm *v72;
  uint64_t v73;
  llvm::APInt *v74;
  BOOL v75;
  unsigned int v76;
  unsigned int v77;
  BOOL v78;
  char EVT;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  llvm::EVT **v83;
  void *v84;
  char v85;
  uint64_t v86;
  char *v87;
  int v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _DWORD *v97;
  unsigned int v98;
  uint64_t v99;
  void *v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  unsigned __int8 v105;
  int v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  BOOL v111;
  void *v112;
  void *v113;
  uint64_t ExtendedSizeInBits;
  const char *v115;
  int8x8_t v116;
  llvm *v117;
  uint8x8_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  int v124;
  unsigned int *v125;
  uint64_t v126;
  int v127;
  uint64_t *v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v133;
  int v134;
  uint64_t v136;
  _QWORD *v137;
  llvm::Type *v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  _DWORD *v142;
  void *v143;
  void *v144;
  uint64_t v145;
  unsigned int v146;
  const char *v147;
  uint64_t v148;
  unint64_t v149;
  uint64_t v150;
  unint64_t v151;
  uint64_t v152;
  void *v153;
  uint64_t v154;
  __int16 v155;
  unsigned __int8 *v156;
  int v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  unsigned int v162;
  uint8x8_t v163;
  unsigned int v164;
  const char *v165;
  llvm *v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unsigned int v171;
  char *v172;
  char *v173;
  uint64_t v174;
  _QWORD *v175;
  unsigned int v176;
  uint64_t v177;
  unsigned int v178;
  uint8x8_t v179;
  char v180;
  llvm::Type *v181;
  int v182;
  llvm::Type *v183;
  int v184;
  uint64_t v185;
  unsigned int v186;
  uint64_t *v187;
  unint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  unint64_t v192;
  uint64_t v193;
  llvm *v194;
  uint64_t v195;
  uint64_t v196;
  void *v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  unsigned int v203;
  unint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __int16 v208;
  uint64_t *v209;
  unint64_t v210;
  unint64_t v211;
  char v212;
  uint64_t v213;
  llvm::LLVMContext *v214;
  unsigned __int8 v215;
  unint64_t v216;
  const char *v217;
  unsigned int v218;
  const char *v219;
  int v220;
  BOOL v221;
  unsigned int v222;
  llvm::LLVMContext *v223;
  unint64_t v224;
  unint64_t v225;
  uint64_t v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  void *v230;
  uint64_t v231;
  llvm *v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  unint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  int v240;
  uint64_t v241;
  const char *v242;
  uint64_t v243;
  unint64_t v244;
  llvm *v245;
  uint64_t v246;
  unint64_t v247;
  uint64_t v248;
  void *v249;
  uint64_t v250;
  uint64_t v251;
  const char *v252;
  BOOL v253;
  llvm::Type *v254;
  uint64_t v255;
  llvm *v256;
  const char *v257;
  unsigned int v258;
  const char *v259;
  unsigned int v260;
  int v261;
  unint64_t v262;
  uint64_t v263;
  const char *v264;
  unint64_t v265;
  uint64_t v266;
  unint64_t v267;
  _QWORD *v268;
  const char *v269;
  uint64_t v270;
  uint64_t v271;
  unint64_t v272;
  uint64_t v273;
  uint64_t v274;
  int v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  int v280;
  char *v281;
  llvm *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  __int128 v288;
  uint64_t v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t *v294;
  uint64_t v295;
  unint64_t v296;
  uint64_t v297;
  __int16 v298;
  uint64_t v299;
  uint64_t *v300;
  uint64_t *v301;
  uint64_t *v302;
  uint64_t v303;
  uint64_t **v304;
  uint64_t v305;
  uint64_t **v306;
  int *v307;
  _DWORD *v308;
  unint64_t v309;
  int v310;
  char *v311;
  const char *v312;
  unint64_t v313;
  const char *v314;
  llvm *v315;
  const std::nothrow_t *v316;
  unint64_t v317;
  unsigned int *v318;
  BOOL v319;
  char v320;
  char *v321;
  char *v322;
  char *v323;
  char *v324;
  uint64_t v325;
  char *v326;
  _DWORD *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  uint64_t v332;
  int v333;
  unsigned int v334;
  uint64_t v335;
  unint64_t v336;
  uint64_t *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t **v341;
  unint64_t v342;
  uint64_t *v343;
  int *v344;
  uint64_t v345;
  const char *v346;
  __int128 v347;
  const char *v348;
  unsigned int v349;
  uint64_t v350;
  unint64_t v351;
  uint64_t v352;
  unint64_t v353;
  uint64_t v354;
  BOOL v355;
  BOOL v356;
  uint64_t v357;
  int v358;
  _QWORD *v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  __int128 v365;
  uint64_t v366;
  _QWORD *v367;
  uint64_t v368;
  uint64_t v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  uint64_t v377;
  _DWORD *v378;
  uint64_t v379;
  int v380;
  uint64_t v381;
  _QWORD *v382;
  int v383;
  uint64_t v384;
  llvm *v385;
  uint64_t v386;
  uint64_t *v387;
  unsigned int v388;
  unint64_t v389;
  uint64_t v390;
  _QWORD *v391;
  unint64_t v392;
  uint64_t v393;
  unsigned int v394;
  uint64_t v395;
  _QWORD *v396;
  unsigned int v397;
  _QWORD *v398;
  uint64_t v399;
  uint64_t v400;
  int v401;
  _QWORD *v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  __int128 v407;
  uint64_t v408;
  unint64_t v409;
  uint64_t v410;
  uint64_t v411;
  unsigned int v412;
  uint64_t v413;
  uint64_t *v414;
  uint64_t v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  uint64_t v419;
  llvm *v420;
  unsigned int *v421;
  int v422;
  _QWORD *v423;
  uint64_t v424;
  _QWORD *v425;
  uint64_t v426;
  unsigned int v427;
  _QWORD *v428;
  int *v429;
  uint64_t v430;
  int v431;
  int v432;
  uint64_t v433;
  uint64_t v434;
  const char *v435;
  char *v436;
  _QWORD *v437;
  _QWORD *v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  unsigned __int8 *v442;
  int v443;
  __int128 *v444;
  unsigned __int8 *v445;
  uint64_t v446;
  uint64_t v447;
  int v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  _QWORD *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  unsigned __int8 *v457;
  int v458;
  __int128 *v459;
  unsigned __int8 *v460;
  uint64_t v461;
  uint64_t v462;
  int v464;
  uint64_t v465;
  uint64_t v466;
  _DWORD *v467;
  _DWORD *v468;
  uint64_t v469;
  int v470;
  _QWORD *v471;
  char *v472;
  int v473;
  uint64_t v474;
  uint64_t v475;
  _QWORD *v476;
  char *v477;
  int v478;
  BOOL v479;
  llvm *v480;
  _QWORD *v481;
  uint64_t v482;
  uint64_t v483;
  unsigned int v484;
  _QWORD *v485;
  uint64_t *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  unsigned int v492;
  uint64_t v493;
  int v494;
  unsigned int v495;
  BOOL v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  int v501;
  uint64_t v503;
  uint64_t *v504;
  uint64_t v505;
  uint64_t *v506;
  uint64_t v507;
  uint64_t v508;
  llvm::Type *v509;
  int v510;
  int v511;
  uint64_t v512;
  int v513;
  uint64_t v514;
  uint64_t v515;
  _DWORD *v516;
  uint64_t v517;
  int v518;
  uint64_t v519;
  _QWORD *v520;
  void *v521;
  uint64_t v522;
  llvm *v523;
  uint64_t v524;
  _QWORD *v525;
  unsigned int v526;
  _QWORD *v527;
  uint64_t v528;
  unint64_t v529;
  unint64_t v530;
  uint64_t v531;
  uint64_t v532;
  unint64_t v533;
  unsigned int v534;
  unint64_t v535;
  uint64_t *v536;
  char v537;
  char v538;
  uint64_t v539;
  llvm *v540;
  llvm *v541;
  llvm *v542;
  unsigned int v543;
  uint64_t *v544;
  unsigned int v545;
  unsigned int v546;
  uint64_t *v547;
  uint64_t *v548;
  int v549;
  char v550;
  uint64_t v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  int v556[4];
  unsigned __int8 *v557;
  int v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  void *v562[2];
  _BYTE v563[64];
  void *v564[2];
  _BYTE v565[16];
  uint64_t v566;
  void *v567;
  uint64_t v568;
  _BYTE v569[32];
  void *v570[2];
  _QWORD v571[16];
  __int128 __src;
  _QWORD v573[6];

  v2 = a2;
  v3 = a1;
  v573[4] = *MEMORY[0x1E0C80C00];
  v4 = *(_QWORD *)(a2 + 40);
  v6 = *(llvm **)v4;
  v5 = *(_QWORD *)(v4 + 8);
  if (!*(_WORD *)(a2 + 56))
  {
LABEL_6:
    v552 = v5;
    if (*((_BYTE *)a1 + 33) || (v94 = sub_1C6367A48(a2, 0)) == 0)
    {
LABEL_7:
      if (!*((_BYTE *)v3 + 34))
      {
        v10 = *(unsigned __int16 *)(v2 + 56);
        if (v10 >= 2)
        {
          v11 = *(uint64_t **)(v2 + 32);
          v12 = *v11;
          if (*(_WORD *)(*v11 + 24) == 148
            && ((v13 = *(_QWORD *)(*(_QWORD *)(v12 + 32) + 40), v14 = *(unsigned __int16 *)(v13 + 24), v14 != 35)
              ? (v15 = v14 == 11)
              : (v15 = 1),
                v15))
          {
            v16 = *(_QWORD *)(v13 + 80);
            v17 = (_QWORD *)(v16 + 24);
            if (*(_DWORD *)(v16 + 32) >= 0x41u)
              v17 = (_QWORD *)*v17;
            v18 = (_QWORD *)*v17;
          }
          else
          {
            LODWORD(v18) = -1;
          }
          v19 = (int)v18;
          do
          {
            v21 = *v11;
            v11 += 5;
            v20 = v21;
            if (*(_WORD *)(v21 + 24) != 148)
              goto LABEL_34;
            v22 = *(_QWORD *)(v12 + 32);
            v23 = *(_QWORD *)(v20 + 32);
            v9 = *(_QWORD *)v22;
            if (*(_QWORD *)v22 != *(_QWORD *)v23)
              goto LABEL_34;
            v24 = *(unsigned int *)(v22 + 8);
            if ((_DWORD)v24 != *(_DWORD *)(v23 + 8))
              goto LABEL_34;
            v25 = *(_QWORD *)(v23 + 40);
            v26 = *(unsigned __int16 *)(v25 + 24);
            if (v26 != 35 && v26 != 11)
              goto LABEL_34;
            v28 = *(_QWORD *)(v25 + 80);
            v29 = (_QWORD *)(v28 + 24);
            if (*(_DWORD *)(v28 + 32) >= 0x41u)
              v29 = (_QWORD *)*v29;
            if (*v29 != v19)
              goto LABEL_34;
            ++v19;
            --v10;
          }
          while (v10);
          if ((_DWORD)v18)
          {
            if ((_DWORD)v18 == -1)
              goto LABEL_34;
            v158 = *(_QWORD *)(v2 + 40);
            v159 = *(void **)v158;
          }
          else
          {
            v156 = (unsigned __int8 *)(*(_QWORD *)(v9 + 40) + 16 * v24);
            v157 = *v156;
            v158 = *(_QWORD *)(v2 + 40);
            v159 = *(void **)v158;
            if (v157 == *(_QWORD *)v158)
            {
              v160 = *((_QWORD *)v156 + 1);
              if (v157 || v160 == *(_QWORD *)(v158 + 8))
                return (_QWORD *)v9;
            }
          }
          v227 = *(void **)(v158 + 8);
          v570[0] = v159;
          v570[1] = v227;
          if (!(v18 % sub_1C612FE00((llvm::EVT *)v570, (const char *)a2)))
          {
            v229 = *v3;
            v230 = *(void **)(v2 + 64);
            v570[0] = v230;
            if (v230)
              llvm::MetadataTracking::track((uint64_t)v570, (unsigned __int8 *)v230, 2);
            LODWORD(v570[1]) = *(_DWORD *)(v2 + 60);
            v231 = *(_QWORD *)(v2 + 40);
            v232 = *(llvm **)v231;
            v233 = *(_QWORD *)(v231 + 8);
            v234 = *(uint64_t **)(v12 + 32);
            v235 = *v234;
            v236 = v234[1];
            v237 = v234[5];
            v238 = v234[6];
            v239 = *(_QWORD *)(v229 + 832);
            if (v239)
              LOWORD(v239) = *(_WORD *)(v239 + 8);
            v209 = sub_1C5D56C70(v229, 151, (const llvm::APInt *)v570, v232, v233, v235, v236, v228, v237, v238, v239);
            goto LABEL_276;
          }
        }
      }
LABEL_34:
      if (*((_BYTE *)v3 + 33))
        goto LABEL_46;
      v30 = v6;
      v31 = *(uint64_t **)(v2 + 32);
      *(_OWORD *)v570 = *(_OWORD *)*(_QWORD *)(v2 + 40);
      v32 = *v31;
      v33 = *(unsigned __int16 *)(*v31 + 24) == 199;
      if (*(unsigned __int16 *)(*v31 + 24) - 199 <= 1)
      {
        v34 = **(_QWORD **)(v32 + 32);
        if (*(_WORD *)(v34 + 24) == 148)
        {
          v35 = *(_QWORD *)(*(_QWORD *)(v34 + 32) + 40);
          v36 = *(unsigned __int16 *)(v35 + 24);
          if (v36 == 35 || v36 == 11)
          {
            v38 = *(_QWORD *)(v35 + 80);
            v39 = (unint64_t *)(v38 + 24);
            if (*(_DWORD *)(v38 + 32) >= 0x41u)
              v39 = (unint64_t *)*v39;
            v40 = *v39;
            if ((*v39 & 0x8000000000000000) == 0
              && !(v40 % sub_1C612FE00((llvm::EVT *)v570, (const char *)a2)))
            {
              v186 = *(unsigned __int16 *)(v2 + 56);
              v187 = *(uint64_t **)(**(_QWORD **)(v32 + 32) + 32);
              v189 = *v187;
              v188 = v187[1];
              *(_OWORD *)v564 = *(_OWORD *)(*(_QWORD *)(*v187 + 40) + 16 * v188);
              v190 = sub_1C6131264((unsigned __int8 *)v564, v185, v5);
              v554 = v2;
              v192 = sub_1C4816F98(*(llvm::LLVMContext **)(*a1 + 56), v190, v191, v186, 0);
              v194 = (llvm *)v192;
              v196 = v195;
              if (!*((_BYTE *)a1 + 34) || (_BYTE)v192 && *(_QWORD *)(a1[1] + 8 * v192 + 96))
              {
                if (v186 == 1)
                {
LABEL_265:
                  v197 = *(void **)(v2 + 64);
                  v564[0] = v197;
                  if (v197)
                    llvm::MetadataTracking::track((uint64_t)v564, (unsigned __int8 *)v197, 2);
                  LODWORD(v564[1]) = *(_DWORD *)(v2 + 60);
                  v198 = *(_QWORD *)(**(_QWORD **)(v32 + 32) + 32);
                  v199 = *(_QWORD *)(v198 + 40);
                  v200 = *(_QWORD *)(v198 + 48);
                  v201 = *(_QWORD *)(*a1 + 832);
                  if (v201)
                    LOWORD(v201) = *(_WORD *)(v201 + 8);
                  v202 = sub_1C5D56C70(*a1, 151, (const llvm::APInt *)v564, v194, v196, v189, v188, v193, v199, v200, v201);
                  v204 = v188 & 0xFFFFFFFF00000000 | v203;
                  v205 = *a1;
                  if (v33)
                    v206 = 199;
                  else
                    v206 = 200;
                  v207 = *(_QWORD *)(v205 + 832);
                  if (v207)
                    v208 = *(_WORD *)(v207 + 8);
                  else
                    v208 = 0;
                  v9 = (unint64_t)sub_1C5D52060(v205, v206, (const llvm::APInt *)v564, (llvm *)v570[0], (uint64_t)v570[1], (uint64_t)v202, v204, v208);
                  if (v564[0])
                    llvm::MetadataTracking::untrack((uint64_t)v564, (unsigned __int8 *)v564[0]);
                  v6 = v30;
                  v2 = v554;
                  v3 = a1;
                  if (v9)
                    return (_QWORD *)v9;
LABEL_46:
                  if ((*((_DWORD *)v3 + 6) - 1) > 1)
                  {
LABEL_47:
                    if (!*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*v3 + 40) + 40) + 272))
                    {
                      v112 = *(void **)(v2 + 64);
                      v570[0] = v112;
                      if (v112)
                        llvm::MetadataTracking::track((uint64_t)v570, (unsigned __int8 *)v112, 2);
                      LODWORD(v570[1]) = *(_DWORD *)(v2 + 60);
                      *(_OWORD *)v564 = *(_OWORD *)*(_QWORD *)(v2 + 40);
                      v562[0] = (void *)sub_1C6131264((unsigned __int8 *)v564, (uint64_t)v112, v5);
                      v562[1] = v113;
                      if (LOBYTE(v562[0]))
                        ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)v562);
                      else
                        ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v562);
                      v116 = (int8x8_t)ExtendedSizeInBits;
                      if ((_DWORD)v115 == 1)
                      v117 = v6;
                      v118 = (uint8x8_t)vcnt_s8(v116);
                      v118.i16[0] = vaddlv_u8(v118);
                      if (v118.u32[0] == 1)
                      {
                        v119 = 0;
                        v120 = 0;
                        v121 = 0;
                        v122 = 0;
                        do
                        {
                          v123 = *(_QWORD *)(*(_QWORD *)(v2 + 32) + v120);
                          v124 = *(unsigned __int16 *)(v123 + 24);
                          if (v124 == 216)
                          {
                            v123 = **(_QWORD **)(v123 + 32);
                            v124 = *(unsigned __int16 *)(v123 + 24);
                          }
                          if (v124 != 51)
                          {
                            if (v124 != 201)
                              goto LABEL_197;
                            v125 = *(unsigned int **)(v123 + 32);
                            v126 = *(_QWORD *)v125;
                            v127 = *(unsigned __int16 *)(*(_QWORD *)v125 + 24);
                            if (v127 == 216)
                            {
                              v125 = *(unsigned int **)(v126 + 32);
                              v126 = *(_QWORD *)v125;
                              v127 = *(unsigned __int16 *)(*(_QWORD *)v125 + 24);
                            }
                            if (v127 == 177)
                            {
                              v128 = *(uint64_t **)(v126 + 32);
                              v129 = *v128;
                              v130 = v128;
                              if (*(_WORD *)(*v128 + 24) == 216)
                              {
                                v130 = *(uint64_t **)(v129 + 32);
                                v129 = *v130;
                              }
                              v131 = *((unsigned int *)v130 + 2);
                              if (v122)
                              {
                                if (v122 != v129 || (_DWORD)v121 != (_DWORD)v131)
                                  goto LABEL_197;
                              }
                              else
                              {
                                v122 = v129;
                                v121 = v131;
                              }
                              v133 = v128[5];
                              v134 = *(unsigned __int16 *)(v133 + 24);
                              if (v134 != 35 && v134 != 11)
                                goto LABEL_197;
                              v136 = *(_QWORD *)(v133 + 80);
                              v137 = (_QWORD *)(v136 + 24);
                              if (*(_DWORD *)(v136 + 32) >= 0x41u)
                                v137 = (_QWORD *)*v137;
                              if (v119 != *v137)
                                goto LABEL_197;
                            }
                            else
                            {
                              if (v120)
                                goto LABEL_197;
                              v121 = v125[2];
                              v122 = v126;
                            }
                          }
                          v120 += 40;
                          v119 += *(_QWORD *)&v116;
                        }
                        while (40 * *(unsigned __int16 *)(v2 + 56) != v120);
                        __src = *(_OWORD *)(*(_QWORD *)(v122 + 40) + 16 * v121);
                        v138 = (_BYTE)__src
                             ? (llvm::Type *)sub_1C47A8C74((unsigned __int8 *)&__src)
                             : llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&__src);
                        v181 = v138;
                        v182 = v139;
                        v183 = LOBYTE(v564[0])
                             ? (llvm::Type *)sub_1C47A8C74((unsigned __int8 *)v564)
                             : llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v564);
                        if (v181 == v183)
                        {
                          v9 = 0;
                          if (v182 == v184)
                            v9 = sub_1C6367DA8(*v3, (uint64_t)v564[0], (uint64_t)v564[1], v122, v121);
                        }
                        else
                        {
                          v9 = 0;
                        }
                      }
                      else
                      {
LABEL_197:
                        v9 = 0;
                      }
                      if (v570[0])
                        llvm::MetadataTracking::untrack((uint64_t)v570, (unsigned __int8 *)v570[0]);
                      v6 = v117;
                      if (v9)
                        return (_QWORD *)v9;
                    }
                    v41 = *(unsigned __int8 **)(v2 + 64);
                    v557 = v41;
                    if (v41)
                      llvm::MetadataTracking::track((uint64_t)&v557, v41, 2);
                    v558 = *(_DWORD *)(v2 + 60);
                    v42 = *(__int128 **)(v2 + 40);
                    v43 = *v42;
                    *(_OWORD *)v556 = *v42;
                    if (*((_BYTE *)v3 + 34) && (!(_BYTE)v43 || !*(_QWORD *)(v3[1] + 8 * v43 + 96)))
                    {
LABEL_78:
                      v9 = 0;
                      goto LABEL_131;
                    }
                    v44 = *(unsigned __int16 *)(v2 + 56);
                    if (*(_WORD *)(v2 + 56))
                    {
                      v45 = 0;
                      v46 = *v3;
                      v47 = *(_QWORD *)(v2 + 32);
                      v48 = -1;
                      v49 = v47;
                      do
                      {
                        if (*(_WORD *)(*(_QWORD *)v49 + 24) != 51)
                        {
                          if (v48 != -1)
                            goto LABEL_73;
                          v48 = v45;
                        }
                        ++v45;
                        v49 += 40;
                      }
                      while (v44 != v45);
                      if (v48 != -1)
                      {
                        *(_OWORD *)v564 = *v42;
                        *(_OWORD *)v562 = *(_OWORD *)(v47 + 40 * v48);
                        if (*((_WORD *)v562[0] + 12) == 199)
                        {
                          v50 = *((_QWORD *)v562[0] + 6);
                          if (v50)
                          {
                            v51 = 1;
                            do
                            {
                              if (*(_DWORD *)(v50 + 8) == LODWORD(v562[1]))
                              {
                                if (!v51)
                                  goto LABEL_73;
                                --v51;
                              }
                              v50 = *(_QWORD *)(v50 + 32);
                            }
                            while (v50);
                            if (!v51)
                            {
                              v52 = **((_QWORD **)v562[0] + 4);
                              if (*(_WORD *)(v52 + 24) == 148)
                              {
                                v53 = *(unsigned __int16 *)(*(_QWORD *)(*(_QWORD *)(v52 + 32) + 40) + 24);
                                if (v53 == 35 || v53 == 11)
                                {
                                  v254 = sub_1C6131A64((unsigned int *)v562);
                                  if ((_DWORD)v252 == 1)
                                  if (v254 == sub_1C6131328((unsigned __int8 *)v564, (uint64_t)v252, v253))
                                  {
                                    v255 = v2;
                                    v256 = v6;
                                    __src = *(_OWORD *)*((_QWORD *)v562[0] + 4);
                                    v258 = sub_1C6131A64((unsigned int *)v562);
                                    if ((_DWORD)v257 == 1)
                                    v260 = sub_1C6131A64((unsigned int *)&__src);
                                    if ((_DWORD)v259 == 1)
                                    v261 = v258 / v260;
                                    if (!(v258 % v260)
                                      && ((v509 = sub_1C6131A64(*(unsigned int **)(__src + 32)),
                                           v511 = v510,
                                           !LOBYTE(v564[0]))
                                        ? (v512 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v564))
                                        : (v512 = sub_1C47A8C74((unsigned __int8 *)v564)),
                                          v509 == (llvm::Type *)v512 && v511 == v513))
                                    {
                                      v514 = (v261 * v44);
                                      v570[0] = v571;
                                      v570[1] = (void *)0x2000000000;
                                      sub_1C4893E04((char *)v570, (int)v514, -1);
                                      if (v260 <= v258)
                                      {
                                        v515 = 0;
                                        v516 = v570[0];
                                        v517 = __src;
                                        do
                                        {
                                          if ((int)v515 / v261 == v48)
                                          {
                                            v518 = v261 * v44;
                                            if (!((int)v515 % v261))
                                            {
                                              v519 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v517 + 32) + 40) + 80);
                                              v520 = (_QWORD *)(v519 + 24);
                                              if (*(_DWORD *)(v519 + 32) >= 0x41u)
                                                v520 = (_QWORD *)*v520;
                                              v518 = *(_DWORD *)v520;
                                            }
                                            v516[v515] = v518;
                                          }
                                          ++v515;
                                        }
                                        while (v514 != v515);
                                      }
                                      v521 = *(void **)(v255 + 64);
                                      v567 = v521;
                                      if (v521)
                                        llvm::MetadataTracking::track((uint64_t)&v567, (unsigned __int8 *)v521, 2);
                                      LODWORD(v568) = *(_DWORD *)(v255 + 60);
                                      v522 = *(_QWORD *)(**(_QWORD **)(__src + 32) + 40)
                                           + 16 * *(unsigned int *)(*(_QWORD *)(__src + 32) + 8);
                                      v523 = *(llvm **)v522;
                                      v524 = *(_QWORD *)(v522 + 8);
                                      v525 = sub_1C6366AB4(v46, 0, (const llvm::APInt *)&v567, *(llvm **)v522, v524, 0, 0);
                                      v527 = sub_1C6376074(*(_QWORD *)(v46 + 24), v523, v524, (uint64_t)&v567, **(_QWORD **)(__src + 32), *(_QWORD *)(*(_QWORD *)(__src + 32) + 8), (uint64_t)v525, v526, v570[0], LODWORD(v570[1]), v46);
                                      if (v527)
                                        v9 = sub_1C6367DA8(v46, (uint64_t)v564[0], (uint64_t)v564[1], (uint64_t)v527, v528);
                                      else
                                        v9 = 0;
                                      if (v567)
                                        llvm::MetadataTracking::untrack((uint64_t)&v567, (unsigned __int8 *)v567);
                                      if (v570[0] != v571)
                                        free(v570[0]);
                                      v6 = v256;
                                      v3 = a1;
                                      v2 = v255;
                                      if (v9)
                                        goto LABEL_131;
                                    }
                                    else
                                    {
                                      v6 = v256;
                                      v3 = a1;
                                      v2 = v255;
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
LABEL_73:
                    if (!*((_BYTE *)v3 + 33))
                      goto LABEL_79;
                    if (!LOBYTE(v556[0]))
                    {
                      v9 = 0;
                      goto LABEL_131;
                    }
                    v55 = v3[1];
                    if (LOBYTE(v556[0]) == 1 || (v9 = 0, *(_QWORD *)(v55 + 8 * LOBYTE(v556[0]) + 96)))
                    {
                      if (*(_BYTE *)(v55 + 390 * LOBYTE(v556[0]) + 4015))
                        goto LABEL_78;
LABEL_79:
                      v9 = *(unsigned __int16 *)(v2 + 56);
                      v567 = v569;
                      v568 = 0x800000000;
                      sub_1C4893E04((char *)&v567, v9, -1);
                      v570[0] = v571;
                      v571[1] = 0;
                      v571[0] = 0;
                      v570[1] = (void *)0x800000001;
                      if (!v9)
                        goto LABEL_127;
                      v56 = 0;
                      v57 = 0;
                      do
                      {
                        v58 = (uint64_t *)(*(_QWORD *)(v2 + 32) + 40 * v56);
                        v59 = *v58;
                        v60 = *(unsigned __int16 *)(*v58 + 24);
                        if (v60 != 51)
                        {
                          if (sub_1C6368AD4(*v58) || sub_1C636F3A8(v59))
                          {
                            LODWORD(v61) = 0;
                            v57 = 1;
                          }
                          else
                          {
                            if (v60 != 148)
                              goto LABEL_125;
                            v63 = *(_QWORD **)(v59 + 32);
                            v64 = v63[5];
                            v65 = *(unsigned __int16 *)(v64 + 24);
                            if (v65 != 35 && v65 != 11)
                              goto LABEL_125;
                            v549 = v57;
                            v67 = *v63;
                            v68 = v63[1];
                            v69 = *(_QWORD *)(*v63 + 40) + 16 * v68;
                            v70 = *(void **)v69;
                            if (*(_QWORD *)v69)
                            {
                              if (*(_QWORD *)v69 - 120 < 0x33)
                                goto LABEL_125;
                              v71 = *(_BYTE **)(v69 + 8);
                            }
                            else
                            {
                              v71 = *(_BYTE **)(v69 + 8);
                              if (v71[8] == 19)
                                goto LABEL_125;
                            }
                            v72 = v6;
                            v73 = *(_QWORD *)(v64 + 80);
                            v74 = (llvm::APInt *)(v73 + 24);
                            v564[0] = v70;
                            v564[1] = v71;
                            v76 = sub_1C612FE00((llvm::EVT *)v564, v62);
                            v77 = *(_DWORD *)(v73 + 32);
                            if (v77 >= 0x41)
                            {
                              if (v77 - llvm::APInt::countLeadingZerosSlowCase(v74) > 0x40)
                                goto LABEL_315;
                              v74 = *(llvm::APInt **)v74;
                            }
                            if (*(_QWORD *)v74 >= (unint64_t)v76)
                              goto LABEL_315;
                            if (LOBYTE(v556[0]))
                            {
                              EVT = sub_1C47F37A0((unsigned __int8 *)v556);
                              v80 = 0;
                            }
                            else
                            {
                              EVT = llvm::EVT::getEVT(*(llvm::EVT **)(*(_QWORD *)&v556[2] + 24), 0, v75);
                              v80 = v81;
                            }
                            v82 = *(_QWORD *)(v67 + 40) + 16 * v68;
                            v84 = *(void **)v82;
                            v83 = *(llvm::EVT ***)(v82 + 8);
                            v564[0] = v84;
                            v564[1] = v83;
                            if ((_BYTE)v84)
                            {
                              v85 = sub_1C47F37A0((unsigned __int8 *)v564);
                              v86 = 0;
                            }
                            else
                            {
                              v85 = llvm::EVT::getEVT(v83[3], 0, v78);
                            }
                            if (EVT != v85 || !EVT && v80 != v86)
                            {
LABEL_315:
                              v9 = 0;
                              v6 = v72;
                              v3 = a1;
                              goto LABEL_127;
                            }
                            v87 = (char *)v570[0];
                            v88 = (int)v570[1];
                            v89 = (char *)v570[0];
                            if (LODWORD(v570[1]))
                            {
                              v90 = 16 * LODWORD(v570[1]);
                              v89 = (char *)v570[0];
                              do
                              {
                                if (*(_QWORD *)v89 == v67 && *((_DWORD *)v89 + 2) == (_DWORD)v68)
                                  goto LABEL_117;
                                v89 += 16;
                                v90 -= 16;
                              }
                              while (v90);
                              v89 = (char *)v570[0] + 16 * LODWORD(v570[1]);
                            }
LABEL_117:
                            v91 = v89 - (char *)v570[0];
                            if (LODWORD(v570[1]) == v91 >> 4 || (v61 = (unint64_t)v91 >> 4, (_DWORD)v61 == -1))
                            {
                              if (LODWORD(v570[1]) >= HIDWORD(v570[1]))
                              {
                                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v570, (uint64_t)v571, LODWORD(v570[1]) + 1, 16);
                                v87 = (char *)v570[0];
                              }
                              v6 = v72;
                              v92 = &v87[16 * LODWORD(v570[1])];
                              *(_QWORD *)v92 = v67;
                              *((_QWORD *)v92 + 1) = v68;
                              ++LODWORD(v570[1]);
                              LODWORD(v61) = v88;
                            }
                            else
                            {
                              v6 = v72;
                            }
                            v3 = a1;
                            v57 = v549;
                          }
                          *((_DWORD *)v567 + v56) = v61;
                        }
                        ++v56;
                      }
                      while (v56 != v9);
                      if (LODWORD(v570[1]) < 2)
                      {
LABEL_125:
                        v9 = 0;
                        goto LABEL_127;
                      }
                      v550 = v57;
                      v553 = v2;
                      if (LODWORD(v570[1]) == 2)
                      {
                        v166 = v6;
                        v167 = *((_QWORD *)v570[0] + 2);
                        v168 = *((_QWORD *)v570[0] + 3);
                        *(_OWORD *)v562 = *(_OWORD *)(*(_QWORD *)(v167 + 40) + 16 * v168);
                        v564[0] = v565;
                        v564[1] = (void *)0x800000000;
                        sub_1C4893E04((char *)v564, v9, 0);
                        v169 = 0;
                        v170 = 0;
                        v171 = 0;
                        v172 = (char *)v567;
                        v173 = (char *)v564[0];
                        do
                        {
                          if (*(int *)&v172[v169] >= 1)
                          {
                            v174 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 32) + v170) + 32)
                                                         + 40)
                                             + 80);
                            v175 = (_QWORD *)(v174 + 24);
                            if (*(_DWORD *)(v174 + 32) >= 0x41u)
                              v175 = (_QWORD *)*v175;
                            v176 = *(_DWORD *)v175;
                            *(_DWORD *)&v173[v169] = v176;
                            if (v171 <= v176)
                              v171 = v176;
                          }
                          v170 += 40;
                          v169 += 4;
                        }
                        while (40 * v9 != v170);
                        if (v171)
                        {
                          v210 = (v171 - 1) | (((unint64_t)v171 - 1) >> 1);
                          v211 = v210 | (v210 >> 2) | ((v210 | (v210 >> 2)) >> 4);
                          v177 = (v211 | (v211 >> 8) | ((v211 | (v211 >> 8)) >> 16)) + 1;
                        }
                        else
                        {
                          LODWORD(v177) = 0;
                        }
                        v212 = 0;
                        if (LOBYTE(v562[0])
                          && v177 >= 3
                          && v171 < v177
                          && 2 * (int)v9 < v177)
                        {
                          v213 = v177 >> 1;
                          v214 = *(llvm::LLVMContext **)(*v3 + 56);
                          v215 = sub_1C47F37A0((unsigned __int8 *)v562);
                          v216 = sub_1C4816F98(v214, v215, 0, v213, 0);
                          v212 = 0;
                          *(_QWORD *)&__src = v216;
                          *((_QWORD *)&__src + 1) = v217;
                          if ((_BYTE)v216)
                          {
                            if (*(_QWORD *)(v3[1] + 8 * v216 + 96)
                              && (v218 = sub_1C612FE00((llvm::EVT *)&__src, v217) + v213,
                                  v218 <= sub_1C612FE00((llvm::EVT *)v562, v219)))
                            {
                              v286 = v2;
                              v287 = *v3;
                              v288 = __src;
                              v289 = sub_1C6366C9C(*v3, v213, (uint64_t)&v557, 0);
                              v292 = *(_QWORD *)(v287 + 832);
                              if (v292)
                                LOWORD(v292) = *(_WORD *)(v292 + 8);
                              v547 = sub_1C5D56C70(v287, 151, (const llvm::APInt *)&v557, (llvm *)v288, *((uint64_t *)&v288 + 1), v167, v168, v291, v289, v290, v292);
                              v293 = *v3;
                              v542 = (llvm *)__src;
                              v544 = v294;
                              v539 = *((_QWORD *)&__src + 1);
                              v295 = sub_1C6366C9C(*v3, 0, (uint64_t)&v557, 0);
                              v298 = 0;
                              v299 = *(_QWORD *)(v293 + 832);
                              if (v299)
                                v298 = *(_WORD *)(v299 + 8);
                              v300 = sub_1C5D56C70(v293, 151, (const llvm::APInt *)&v557, v542, v539, v167, v168, v297, v295, v296, v298);
                              v302 = v301;
                              v303 = (LODWORD(v570[1]) - 1);
                              LODWORD(v570[1]) = v303;
                              if (v303 >= HIDWORD(v570[1]))
                              {
                                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v570, (uint64_t)v571, v303 + 1, 16);
                                LODWORD(v303) = v570[1];
                              }
                              v304 = (uint64_t **)((char *)v570[0] + 16 * v303);
                              *v304 = v300;
                              v304[1] = v302;
                              v305 = (LODWORD(v570[1]) + 1);
                              LODWORD(v570[1]) = v305;
                              v2 = v286;
                              if (v305 >= HIDWORD(v570[1]))
                              {
                                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v570, (uint64_t)v571, v305 + 1, 16);
                                LODWORD(v305) = v570[1];
                              }
                              v306 = (uint64_t **)((char *)v570[0] + 16 * v305);
                              *v306 = v547;
                              v306[1] = v544;
                              ++LODWORD(v570[1]);
                              v307 = (int *)v567;
                              v308 = v564[0];
                              v309 = v9;
                              do
                              {
                                if (*v307 >= 1)
                                {
                                  if (*v308 < v213)
                                    v310 = 1;
                                  else
                                    v310 = 2;
                                  *v307 = v310;
                                }
                                ++v308;
                                ++v307;
                                --v309;
                              }
                              while (v309);
                              v212 = 1;
                            }
                            else
                            {
                              v212 = 0;
                            }
                          }
                          v173 = (char *)v564[0];
                        }
                        if (v173 != v565)
                          free(v173);
                        v311 = v565;
                        v564[0] = v565;
                        v564[1] = (void *)0x800000000;
                        v6 = v166;
                        if (!LODWORD(v570[1]))
                        {
                          v312 = (const char *)&v566;
                          v313 = -1;
                          v180 = v212;
                          goto LABEL_368;
                        }
                        v180 = v212;
                      }
                      else
                      {
                        v180 = 0;
                        v564[0] = v565;
                        v564[1] = (void *)0x800000000;
                      }
                      sub_1C6273000((uint64_t)v564, (uint64_t)v570);
                      v313 = LODWORD(v564[1]) - 1;
                      v312 = (char *)v564[0] + 16;
                      v311 = (char *)v564[0] + 16 * LODWORD(v564[1]);
                      if (LODWORD(v564[1]) < 0x82)
                      {
LABEL_368:
                        sub_1C5CBF190(v312, v311, v313, 0, 0);
                      }
                      else
                      {
                        v314 = (char *)v564[0] + 16;
                        v537 = v180;
                        v315 = v6;
                        v316 = (const std::nothrow_t *)MEMORY[0x1E0DE4E10];
                        v317 = LODWORD(v564[1]) - 1;
                        while (1)
                        {
                          v318 = (unsigned int *)operator new(16 * v317, v316);
                          if (v318)
                            break;
                          v319 = v317 > 1;
                          v317 >>= 1;
                          if (!v319)
                          {
                            v2 = v553;
                            v180 = v537;
                            v312 = v314;
                            goto LABEL_368;
                          }
                        }
                        v421 = v318;
                        sub_1C5CBF190(v314, v311, v313, v318, v317);
                        operator delete(v421);
                        v6 = v315;
                        v2 = v553;
                        v180 = v537;
                      }
                      v320 = v550;
                      if ((_DWORD)v568)
                      {
                        v321 = (char *)v567;
                        v322 = (char *)v567 + 4 * v568;
                        v323 = (char *)v570[0];
                        v324 = (char *)v564[0];
                        do
                        {
                          v325 = *(unsigned int *)v321;
                          if ((int)v325 >= 1)
                          {
                            if (LODWORD(v564[1]))
                            {
                              v326 = &v323[16 * v325];
                              v329 = *(_QWORD *)v326;
                              v327 = v326 + 8;
                              v328 = v329;
                              v330 = 16 * LODWORD(v564[1]);
                              v331 = v324;
                              do
                              {
                                if (*(_QWORD *)v331 == v328 && *((_DWORD *)v331 + 2) == *v327)
                                  goto LABEL_379;
                                v331 += 16;
                                v330 -= 16;
                              }
                              while (v330);
                              v331 = &v324[16 * LODWORD(v564[1])];
                            }
                            else
                            {
                              v331 = v324;
                            }
LABEL_379:
                            v332 = v331 - v324;
                            if (LODWORD(v564[1]) == v332 >> 4)
                              v333 = -1;
                            else
                              v333 = (unint64_t)v332 >> 4;
                            *(_DWORD *)v321 = v333;
                          }
                          v321 += 4;
                        }
                        while (v321 != v322);
                      }
                      sub_1C62F45E8((uint64_t)v570, (uint64_t)v564);
                      v562[0] = v563;
                      v562[1] = (void *)0x400000000;
                      if (LODWORD(v570[1]) < 2)
                      {
                        v334 = 0;
                        goto LABEL_491;
                      }
                      v335 = 0;
                      v529 = (unint64_t)LODWORD(v570[1]) >> 1;
                      v538 = v180;
                      v540 = v6;
                      while (1)
                      {
                        v336 = 2 * v335 + 2;
                        v533 = v336;
                        if (v336 >= LODWORD(v570[1]))
                        {
                          v339 = 0;
                          v338 = 0;
                        }
                        else
                        {
                          v337 = (uint64_t *)((char *)v570[0] + 16 * v336);
                          v338 = *v337;
                          v339 = v337[1];
                        }
                        v532 = v335;
                        v340 = (2 * v335) | 1;
                        v341 = (uint64_t **)((char *)v570[0] + 16 * v340);
                        v343 = *v341;
                        v342 = (unint64_t)v341[1];
                        v344 = (int *)v567;
                        v345 = sub_1C6366C9C(*v3, 0, (uint64_t)&v557, 0);
                        v530 = (unint64_t)v346;
                        v531 = v345;
                        v561 = *(_OWORD *)*(_QWORD *)(v553 + 40);
                        v535 = v342;
                        v536 = v343;
                        v560 = *(_OWORD *)(v343[5] + 16 * v342);
                        v548 = (uint64_t *)v338;
                        if (v338)
                          v347 = *(_OWORD *)(*(_QWORD *)(v338 + 40) + 16 * v339);
                        else
                          v347 = v560;
                        v559 = v347;
                        v545 = sub_1C612FE00((llvm::EVT *)&v561, v346);
                        if ((v180 & 1) != 0)
                          v349 = 0;
                        else
                          v349 = sub_1C612FE00((llvm::EVT *)&v560, v348);
                        v534 = v349;
                        if ((_BYTE)v561)
                          v350 = sub_1C47A8C74((unsigned __int8 *)&v561);
                        else
                          v350 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v561);
                        v351 = v350;
                        if ((_BYTE)v560)
                          v352 = sub_1C47A8C74((unsigned __int8 *)&v560);
                        else
                          v352 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v560);
                        v353 = v352;
                        if ((_BYTE)v559)
                          v354 = sub_1C47A8C74((unsigned __int8 *)&v559);
                        else
                          v354 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v559);
                        if (v560 == v561
                          && (*((_QWORD *)&v560 + 1) != *((_QWORD *)&v561 + 1)
                            ? (v355 = v560 == 0)
                            : (v355 = 0),
                              !v355
                           && v559 == v560
                           && ((_BYTE)v560 || *((_QWORD *)&v559 + 1) == *((_QWORD *)&v561 + 1))))
                        {
                          v375 = v545;
                          v376 = v545;
                          v371 = v339;
                        }
                        else
                        {
                          if (v351 % v353)
                            v356 = 0;
                          else
                            v356 = v560 == v559;
                          if (v356 && ((_BYTE)v560 || *((_QWORD *)&v560 + 1) == *((_QWORD *)&v559 + 1)))
                          {
                            v398 = sub_1C61312D0(*v3, (llvm *)v560, *((uint64_t *)&v560 + 1));
                            *(_QWORD *)&__src = v573;
                            *((_QWORD *)&__src + 1) = 0x200000000;
                            sub_1C4825C80((unsigned int *)&__src, (v351 / v353), (uint64_t)v398, v399);
                            v400 = __src;
                            *(_QWORD *)__src = v536;
                            *(_DWORD *)(v400 + 8) = v535;
                            v401 = v339;
                            v402 = (_QWORD *)v338;
                            if (!v338)
                              v402 = sub_1C61312D0(*v3, (llvm *)v560, *((uint64_t *)&v560 + 1));
                            v403 = __src;
                            *(_QWORD *)(__src + 16) = v402;
                            *(_DWORD *)(v403 + 24) = v401;
                            v404 = *(_QWORD *)(*v3 + 832);
                            if (v404)
                              v405 = *(unsigned __int16 *)(v404 + 8);
                            else
                              v405 = 0;
                            v536 = sub_1C636D0C8(*v3, (const char *)0x95, (const llvm::APInt *)&v557, (llvm *)v561, *((uint64_t *)&v561 + 1), (uint64_t *)v403, DWORD2(__src), v405);
                            v418 = v417;
                            if ((_QWORD *)__src != v573)
                              free((void *)__src);
                            v548 = 0;
                            v372 = v418;
                            v371 = 0;
LABEL_445:
                            v375 = v545;
LABEL_446:
                            v376 = v375;
                            goto LABEL_451;
                          }
                          if (v353 != 2 * v351)
                          {
                            if (v351 != 2 * v354 || v353 != v351)
                              goto LABEL_490;
                            v359 = sub_1C61312D0(*v3, (llvm *)v559, *((uint64_t *)&v559 + 1));
                            *(_QWORD *)&__src = v573;
                            *((_QWORD *)&__src + 1) = 0x200000000;
                            sub_1C4825C80((unsigned int *)&__src, 2uLL, (uint64_t)v359, v360);
                            v361 = __src;
                            *(_QWORD *)__src = v338;
                            *(_DWORD *)(v361 + 8) = v339;
                            v362 = *(_QWORD *)(*v3 + 832);
                            if (v362)
                              v363 = *(unsigned __int16 *)(v362 + 8);
                            else
                              v363 = 0;
                            v372 = v535;
                            v548 = sub_1C636D0C8(*v3, (const char *)0x95, (const llvm::APInt *)&v557, (llvm *)v561, *((uint64_t *)&v561 + 1), (uint64_t *)__src, DWORD2(__src), v363);
                            v374 = v373;
                            if ((_QWORD *)__src != v573)
                              free((void *)__src);
                            v371 = v374;
                            goto LABEL_445;
                          }
                          if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v3[1] + 1408))(v3[1]))
                            goto LABEL_490;
                          if (!v338)
                          {
                            v406 = *v3;
                            v407 = v561;
                            v408 = sub_1C6366C9C(*v3, v545, (uint64_t)&v557, 0);
                            v411 = *(_QWORD *)(v406 + 832);
                            if (v411)
                              LOWORD(v411) = *(_WORD *)(v411 + 8);
                            v414 = sub_1C5D56C70(v406, 151, (const llvm::APInt *)&v557, (llvm *)v407, *((uint64_t *)&v407 + 1), (uint64_t)v536, v535, v410, v408, v409, v411);
                            v415 = *(_QWORD *)(*v3 + 832);
                            v548 = v414;
                            if (v415)
                              LOWORD(v415) = *(_WORD *)(v415 + 8);
                            v371 = v412;
                            v536 = sub_1C5D56C70(*v3, 151, (const llvm::APInt *)&v557, (llvm *)v561, *((uint64_t *)&v561 + 1), (uint64_t)v536, v535, v413, v531, v530, v415);
                            v372 = v416;
                            v375 = v545;
                            v534 = v545;
                            goto LABEL_446;
                          }
                          if (*((_BYTE *)v3 + 33))
                          {
                            v357 = v3[1];
                            v358 = v560;
                            if (v560 != 1
                              && (!(_BYTE)v560 || !*(_QWORD *)(v357 + 8 * v560 + 96))
                              || *(_BYTE *)(v357 + 390 * v560 + 4015))
                            {
LABEL_490:
                              v9 = 0;
                              v6 = v540;
                              v2 = v553;
                              goto LABEL_565;
                            }
                          }
                          else
                          {
                            v358 = v560;
                          }
                          if (v358 == v559
                            && (v358 || *((_QWORD *)&v560 + 1) == *((_QWORD *)&v559 + 1)))
                          {
                            v371 = v339;
                          }
                          else
                          {
                            if (!(_BYTE)v559 || !*(_QWORD *)(v3[1] + 8 * v559 + 96))
                              goto LABEL_490;
                            v364 = *v3;
                            v365 = v560;
                            v367 = sub_1C61312D0(*v3, (llvm *)v560, *((uint64_t *)&v560 + 1));
                            v369 = *(_QWORD *)(v364 + 832);
                            if (v369)
                              LOWORD(v369) = *(_WORD *)(v369 + 8);
                            v548 = sub_1C5D58E08(v364, (const char *)0x96, (const llvm::APInt *)&v557, (llvm *)v365, *((uint64_t *)&v365 + 1), (uint64_t)v367, v366, v368, v338, v339, v531, v530, SHIDWORD(v530), v369);
                            v371 = v370;
                          }
                          v375 = v545;
                          v376 = 2 * v545;
                        }
                        v372 = v535;
LABEL_451:
                        *(_QWORD *)&__src = v573;
                        *((_QWORD *)&__src + 1) = 0x800000000;
                        sub_1C4893E04((char *)&__src, v376, -1);
                        if (v375)
                        {
                          v377 = 0;
                          v378 = (_DWORD *)__src;
                          while (1)
                          {
                            v380 = *v344++;
                            v379 = v380;
                            if (v380 >= 1)
                            {
                              v381 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v553 + 32) + v377)
                                                                       + 32)
                                                           + 40)
                                               + 80);
                              v382 = (_QWORD *)(v381 + 24);
                              if (*(_DWORD *)(v381 + 32) >= 0x41u)
                                v382 = (_QWORD *)*v382;
                              v383 = *(_DWORD *)v382;
                              if (v340 == v379)
                                goto LABEL_459;
                              if (v533 == v379)
                                break;
                            }
LABEL_460:
                            v377 += 40;
                            ++v378;
                            if (40 * v375 == v377)
                              goto LABEL_461;
                          }
                          v383 += v534;
LABEL_459:
                          *v378 = v383;
                          goto LABEL_460;
                        }
LABEL_461:
                        v384 = v536[5] + 16 * v372;
                        v385 = *(llvm **)v384;
                        v386 = *(_QWORD *)(v384 + 8);
                        *(_QWORD *)&v560 = *(_QWORD *)v384;
                        *((_QWORD *)&v560 + 1) = v386;
                        v387 = v548;
                        if (v548)
                        {
                          v388 = v371;
                        }
                        else
                        {
                          v387 = sub_1C61312D0(*v3, v385, v386);
                          v388 = v397;
                          v386 = *((_QWORD *)&v560 + 1);
                          v385 = (llvm *)v560;
                        }
                        v2 = v553;
                        v391 = sub_1C5D41DE4(*v3, v385, v386, (uint64_t)&v557, (uint64_t)v536, v372, (uint64_t)v387, v388, (void *)__src, DWORD2(__src));
                        v392 = v389;
                        if (v376 <= v545)
                        {
                          v180 = v538;
                        }
                        else
                        {
                          v393 = *(_QWORD *)(*v3 + 832);
                          v180 = v538;
                          if (v393)
                            LOWORD(v393) = *(_WORD *)(v393 + 8);
                          v391 = sub_1C5D56C70(*v3, 151, (const llvm::APInt *)&v557, (llvm *)v561, *((uint64_t *)&v561 + 1), (uint64_t)v391, v389, v390, v531, v530, v393);
                          v392 = v392 & 0xFFFFFFFF00000000 | v394;
                        }
                        if ((_QWORD *)__src != v573)
                          free((void *)__src);
                        if (!v391)
                        {
                          v9 = 0;
                          v6 = v540;
LABEL_565:
                          if (v562[0] != v563)
                            free(v562[0]);
                          if (v564[0] != v565)
                            free(v564[0]);
LABEL_127:
                          if (v570[0] != v571)
                            free(v570[0]);
                          if (v567 != v569)
                            free(v567);
                          break;
                        }
                        v395 = LODWORD(v562[1]);
                        if (LODWORD(v562[1]) >= (unint64_t)HIDWORD(v562[1]))
                        {
                          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v562, (uint64_t)v563, LODWORD(v562[1]) + 1, 16);
                          v395 = LODWORD(v562[1]);
                        }
                        v396 = (char *)v562[0] + 16 * v395;
                        *v396 = v391;
                        v396[1] = v392;
                        v334 = ++LODWORD(v562[1]);
                        v335 = v532 + 1;
                        v6 = v540;
                        if (v532 + 1 == v529)
                        {
                          v320 = v550;
LABEL_491:
                          if ((v320 & 1) == 0)
                            goto LABEL_505;
                          if (LOBYTE(v556[0]))
                          {
                            v419 = *(_QWORD *)&v556[2];
                            if (LOBYTE(v556[0]) - 120 < 0x20 || LOBYTE(v556[0]) - 2 < 6)
                            {
                              v420 = v6;
                              goto LABEL_594;
                            }
                            v420 = v6;
                            if (LOBYTE(v556[0]) - 15 < 0x3C)
                            {
LABEL_594:
                              v423 = sub_1C6366AB4(*v3, 0, (const llvm::APInt *)&v557, *(llvm **)v556, v419, 0, 0);
LABEL_502:
                              v425 = v423;
                              v426 = v424;
                              v427 = v562[1];
                              if (LODWORD(v562[1]) >= HIDWORD(v562[1]))
                              {
                                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v562, (uint64_t)v563, LODWORD(v562[1]) + 1, 16);
                                v427 = v562[1];
                              }
                              v428 = (char *)v562[0] + 16 * v427;
                              *v428 = v425;
                              v428[1] = v426;
                              v334 = ++LODWORD(v562[1]);
                              v6 = v420;
LABEL_505:
                              if (v334 == 1)
                                goto LABEL_564;
                              if ((_DWORD)v568)
                              {
                                v429 = (int *)v567;
                                v430 = 4 * v568;
                                do
                                {
                                  v431 = *v429;
                                  if (*v429)
                                  {
                                    if (v431 >= 1)
                                      --v431;
                                    v432 = v431 >> 1;
                                  }
                                  else
                                  {
                                    v432 = LODWORD(v562[1]) - 1;
                                  }
                                  *v429++ = v432;
                                  v430 -= 4;
                                }
                                while (v430);
                                v334 = v562[1];
                              }
                              if ((v334 & 1) != 0)
                              {
                                v480 = v6;
                                v481 = sub_1C61312D0(*v3, *(llvm **)v556, *(uint64_t *)&v556[2]);
                                v483 = v482;
                                v484 = v562[1];
                                if (LODWORD(v562[1]) >= HIDWORD(v562[1]))
                                {
                                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v562, (uint64_t)v563, LODWORD(v562[1]) + 1, 16);
                                  v484 = v562[1];
                                }
                                v485 = (char *)v562[0] + 16 * v484;
                                *v485 = v481;
                                v485[1] = v483;
                                v334 = ++LODWORD(v562[1]);
                                v6 = v480;
                              }
                              if (v334 < 2)
                              {
LABEL_564:
                                v9 = *(_QWORD *)v562[0];
                                goto LABEL_565;
                              }
                              v541 = v6;
                              while (2)
                              {
                                if ((v334 & 1) != 0)
                                {
                                  v476 = sub_1C61312D0(*v3, *(llvm **)v556, *(uint64_t *)&v556[2]);
                                  v477 = (char *)v562[0] + 16 * v334;
                                  *(_QWORD *)v477 = v476;
                                  *((_DWORD *)v477 + 2) = v478;
                                  ++v334;
                                }
                                if (v334 < 2)
                                  goto LABEL_564;
                                v433 = 0;
                                v543 = v334;
                                LODWORD(v434) = v334 >> 1;
                                v546 = v334 >> 1;
                                if (v334 >> 1 <= 1)
                                  v434 = 1;
                                else
                                  v434 = v434;
                                v551 = v434;
LABEL_525:
                                *(_QWORD *)&__src = v573;
                                *((_QWORD *)&__src + 1) = 0x800000000;
                                sub_1C4893E04((char *)&__src, v9, -1);
                                v436 = (char *)v562[0];
                                v437 = (char *)v562[0] + (v433 << 33 >> 28);
                                v438 = (_QWORD *)*v437;
                                v439 = v437[1];
                                if (*(_WORD *)(*v437 + 24) == 153)
                                {
                                  v440 = v438[6];
                                  if (v440)
                                  {
                                    while (*(_DWORD *)(v440 + 8) != (_DWORD)v439)
                                    {
                                      v440 = *(_QWORD *)(v440 + 32);
                                      if (!v440)
                                        goto LABEL_529;
                                    }
                                    goto LABEL_535;
                                  }
LABEL_529:
                                  v441 = v438[4];
                                  if (*(_WORD *)(*(_QWORD *)(v441 + 40) + 24) != 51)
                                    goto LABEL_535;
                                  v442 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v441 + 40)
                                                           + 16 * *(unsigned int *)(v441 + 8));
                                  v443 = *v442;
                                  v444 = (__int128 *)v438[5];
                                  v445 = (unsigned __int8 *)&v444[v439];
                                  if (v443 != *v445)
                                    goto LABEL_535;
                                  v446 = *((_QWORD *)v445 + 1);
                                  v447 = *((_QWORD *)v442 + 1);
                                  if (!v443 && v447 != v446)
                                    goto LABEL_535;
                                  v561 = *v444;
                                  v450 = v438[10];
                                  sub_1C612FE00((llvm::EVT *)&v561, v435);
                                  v474 = v438[4];
                                  v438 = *(_QWORD **)v474;
                                  LODWORD(v439) = *(_DWORD *)(v474 + 8);
                                  v449 = 1;
                                  v436 = (char *)v562[0];
                                }
                                else
                                {
LABEL_535:
                                  v449 = 0;
                                  v450 = 0;
                                }
                                v451 = (2 * v433) | 1;
                                v452 = &v436[16 * (int)v451];
                                v453 = *(_QWORD **)v452;
                                v454 = *((_QWORD *)v452 + 1);
                                if (*(_WORD *)(*(_QWORD *)v452 + 24) == 153)
                                {
                                  v455 = v453[6];
                                  if (v455)
                                  {
                                    while (*(_DWORD *)(v455 + 8) != (_DWORD)v454)
                                    {
                                      v455 = *(_QWORD *)(v455 + 32);
                                      if (!v455)
                                        goto LABEL_540;
                                    }
                                    goto LABEL_546;
                                  }
LABEL_540:
                                  v456 = v453[4];
                                  if (*(_WORD *)(*(_QWORD *)(v456 + 40) + 24) != 51)
                                    goto LABEL_546;
                                  v457 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v456 + 40)
                                                           + 16 * *(unsigned int *)(v456 + 8));
                                  v458 = *v457;
                                  v459 = (__int128 *)v453[5];
                                  v460 = (unsigned __int8 *)&v459[v454];
                                  if (v458 != *v460)
                                    goto LABEL_546;
                                  v461 = *((_QWORD *)v460 + 1);
                                  v462 = *((_QWORD *)v457 + 1);
                                  if (!v458 && v462 != v461)
                                    goto LABEL_546;
                                  v561 = *v459;
                                  v465 = v453[10];
                                  sub_1C612FE00((llvm::EVT *)&v561, v435);
                                  v475 = v453[4];
                                  v453 = *(_QWORD **)v475;
                                  LODWORD(v454) = *(_DWORD *)(v475 + 8);
                                  v464 = 1;
                                }
                                else
                                {
LABEL_546:
                                  v464 = 0;
                                  v465 = 0;
                                }
                                v466 = 0;
                                v467 = (_DWORD *)__src;
                                v468 = v567;
LABEL_548:
                                v469 = v468[v466];
                                if (2 * v433 == v469)
                                {
                                  v467[v466] = v466;
                                  if (v449)
                                  {
                                    v470 = *(_DWORD *)(v450 + 4 * v466);
                                    goto LABEL_554;
                                  }
                                  goto LABEL_555;
                                }
                                if (v451 == v469)
                                {
                                  v467[v466] = v9 + v466;
                                  if (v464)
                                  {
                                    v470 = *(_DWORD *)(v465 + 4 * v466) + v9;
LABEL_554:
                                    v467[v466] = v470;
                                  }
LABEL_555:
                                  v468[v466] = v433;
                                }
                                if (v9 == ++v466)
                                {
                                  v3 = a1;
                                  v471 = sub_1C5D41DE4(*a1, *(llvm **)v556, *(uint64_t *)&v556[2], (uint64_t)&v557, (uint64_t)v438, v439, (uint64_t)v453, v454, v467, DWORD2(__src));
                                  v472 = (char *)v562[0] + 16 * v433;
                                  *(_QWORD *)v472 = v471;
                                  *((_DWORD *)v472 + 2) = v473;
                                  if ((_QWORD *)__src != v573)
                                    free((void *)__src);
                                  ++v433;
                                  v2 = v553;
                                  if (v433 == v551)
                                  {
                                    v6 = v541;
                                    v334 = v546;
                                    if (v543 <= 3)
                                      goto LABEL_564;
                                    continue;
                                  }
                                  goto LABEL_525;
                                }
                                goto LABEL_548;
                              }
                            }
                          }
                          else
                          {
                            v419 = *(_QWORD *)&v556[2];
                            if ((*(_DWORD *)(*(_QWORD *)&v556[2] + 8) & 0xFE) == 0x12)
                              v422 = *(unsigned __int8 *)(**(_QWORD **)(*(_QWORD *)&v556[2] + 16) + 8);
                            else
                              v422 = *(_DWORD *)(*(_QWORD *)&v556[2] + 8);
                            v420 = v6;
                            if (v422 == 13)
                              goto LABEL_594;
                          }
                          v423 = sub_1C5D404C4(*v3, (const llvm::APInt *)&v557, *(_BOOL8 *)v556, v419, 0, 0.0);
                          goto LABEL_502;
                        }
                      }
                    }
LABEL_131:
                    if (v557)
                      llvm::MetadataTracking::untrack((uint64_t)&v557, v557);
                    if (v9)
                      return (_QWORD *)v9;
                    if (!(_BYTE)v6)
                      return 0;
                    if (*(_BYTE *)(v3[1] + 390 * v6 + 4018) == 2)
                      return 0;
                    v148 = sub_1C6367A48(v2, 0);
                    if (!v148)
                      return 0;
                    v150 = v148;
                    v151 = v149;
                    v152 = *v3;
                    v153 = *(void **)(v2 + 64);
                    v570[0] = v153;
                    if (v153)
                      llvm::MetadataTracking::track((uint64_t)v570, (unsigned __int8 *)v153, 2);
                    LODWORD(v570[1]) = *(_DWORD *)(v2 + 60);
                    v154 = *(_QWORD *)(v152 + 832);
                    if (v154)
                      v155 = *(_WORD *)(v154 + 8);
                    else
                      v155 = 0;
                    v209 = sub_1C5D52060(v152, 156, (const llvm::APInt *)v570, v6, v552, v150, v151, v155);
LABEL_276:
                    v9 = (unint64_t)v209;
                    if (v570[0])
                      llvm::MetadataTracking::untrack((uint64_t)v570, (unsigned __int8 *)v570[0]);
                    return (_QWORD *)v9;
                  }
                  v99 = *(unsigned __int16 *)(v2 + 56);
                  v100 = *(void **)(v2 + 64);
                  v564[0] = v100;
                  if (v100)
                    llvm::MetadataTracking::track((uint64_t)v564, (unsigned __int8 *)v100, 2);
                  LODWORD(v564[1]) = *(_DWORD *)(v2 + 60);
                  *(_OWORD *)v562 = *(_OWORD *)*(_QWORD *)(v2 + 40);
                  v101 = 1;
                  LOBYTE(__src) = 1;
                  *((_QWORD *)&__src + 1) = 0;
                  if ((_DWORD)v99)
                  {
                    v102 = 0;
                    v103 = *(_QWORD *)(v2 + 32);
                    v104 = 1;
                    v105 = __src;
                    do
                    {
                      v106 = *(unsigned __int16 *)(*(_QWORD *)v103 + 24);
                      if (v106 != 51)
                      {
                        if ((v106 - 199) > 1)
                          goto LABEL_206;
                        v107 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)v103 + 32) + 40)
                                         + 16 * *(unsigned int *)(*(_QWORD *)(*(_QWORD *)v103 + 32) + 8));
                        v109 = *v107;
                        v108 = v107[1];
                        v110 = *v107;
                        if (v104 == 1)
                        {
                          *(_QWORD *)&__src = v109;
                          *((_QWORD *)&__src + 1) = v108;
                          v105 = v109;
                          v102 = v108;
                        }
                        else if (v110 != v105 || (!v110 ? (v111 = v108 == v102) : (v111 = 1), !v111))
                        {
LABEL_206:
                          LOBYTE(__src) = 1;
                          *((_QWORD *)&__src + 1) = 0;
                          break;
                        }
                        v101 &= v106 == 200;
                        v104 = v110;
                      }
                      v103 += 40;
                      --v99;
                    }
                    while (v99);
                  }
                  v144 = (void *)sub_1C6131264((unsigned __int8 *)v562, (uint64_t)v100, v5);
                  v567 = v144;
                  v568 = v145;
                  if (__src == 1)
                    goto LABEL_246;
                  if ((_BYTE)v144)
                    v146 = sub_1C47A8C74((unsigned __int8 *)&v567);
                  else
                    v146 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v567);
                  v162 = v146;
                  if ((_DWORD)v147 == 1)
                  v163 = (uint8x8_t)vcnt_s8((int8x8_t)v162);
                  v163.i16[0] = vaddlv_u8(v163);
                  if (v163.i32[0] != 1)
                    goto LABEL_246;
                  if ((_BYTE)__src)
                    v164 = sub_1C47A8C74((unsigned __int8 *)&__src);
                  else
                    v164 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&__src);
                  v178 = v164;
                  if ((_DWORD)v165 == 1)
                  v179 = (uint8x8_t)vcnt_s8((int8x8_t)v178);
                  v179.i16[0] = vaddlv_u8(v179);
                  if (v179.i32[0] != 1 || (v101 & 1) == 0 && (sub_1C5D4DF6C(*v3, v2, 0, 1) & 1) != 0)
                  {
LABEL_246:
                    v9 = 0;
                    goto LABEL_247;
                  }
                  v240 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(*v3 + 40) + 40) + 272);
                  if ((_BYTE)v567)
                    v241 = sub_1C47A8C74((unsigned __int8 *)&v567);
                  else
                    v241 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v567);
                  v262 = v241;
                  if ((_DWORD)v242 == 1)
                  if ((_BYTE)__src)
                    v263 = sub_1C47A8C74((unsigned __int8 *)&__src);
                  else
                    v263 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&__src);
                  v265 = v263;
                  if ((_DWORD)v264 == 1)
                  v266 = *v3;
                  v267 = v262 / v265;
                  if ((v101 & 1) != 0)
                    v268 = sub_1C61312D0(v266, (llvm *)__src, *((uint64_t *)&__src + 1));
                  else
                    v268 = sub_1C6366AB4(v266, 0, (const llvm::APInt *)v564, (llvm *)__src, *((uint64_t *)&__src + 1), 0, 0);
                  v270 = (uint64_t)v268;
                  v271 = (uint64_t)v269;
                  v272 = sub_1C612FE00((llvm::EVT *)v562, v269) * v267;
                  v570[0] = v571;
                  v570[1] = (void *)0x800000000;
                  sub_1C4825C80((unsigned int *)v570, v272, v270, v271);
                  if (*(_WORD *)(v2 + 56))
                  {
                    v273 = 0;
                    v274 = 0;
                    if (v240)
                      v275 = v267 - 1;
                    else
                      v275 = 0;
                    v276 = 40 * *(unsigned __int16 *)(v2 + 56);
                    do
                    {
                      v277 = *(_QWORD *)(*(_QWORD *)(v2 + 32) + v273);
                      if (*(_WORD *)(v277 + 24) == 51)
                      {
                        v279 = sub_1C61312D0(*a1, (llvm *)__src, *((uint64_t *)&__src + 1));
                      }
                      else
                      {
                        v278 = *(_QWORD *)(v277 + 32);
                        v279 = *(_QWORD **)v278;
                        v280 = *(_DWORD *)(v278 + 8);
                      }
                      v281 = (char *)v570[0] + 16 * (v275 + v274 * v267);
                      *(_QWORD *)v281 = v279;
                      *((_DWORD *)v281 + 2) = v280;
                      ++v274;
                      v273 += 40;
                    }
                    while (v276 != v273);
                  }
                  v3 = a1;
                  v282 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(*a1 + 56), __src, *((uint64_t *)&__src + 1), v272, 0);
                  if (*((_BYTE *)a1 + 34))
                  {
                    v284 = v282;
                    if (!(_BYTE)v282)
                      goto LABEL_581;
                    v285 = a1[1];
                    if (!*(_QWORD *)(v285 + 8 * v282 + 96))
                      goto LABEL_581;
                  }
                  else
                  {
                    v285 = a1[1];
                    v284 = v282;
                  }
                  if ((_BYTE)v282
                    && (v282 == 1
                     || (v284 ? (v479 = *(_QWORD *)(v285 + 8 * v284 + 96) == 0) : (v479 = 1), !v479))
                    && !*(_BYTE *)(v285 + 390 * v284 + 4008)
                    || LOBYTE(v562[0]) != 1 && (!LOBYTE(v562[0]) || !*(_QWORD *)(v285 + 8 * LOBYTE(v562[0]) + 96))
                    || *(_BYTE *)(v285 + 390 * LOBYTE(v562[0]) + 4008))
                  {
                    v489 = *(_QWORD *)(*a1 + 832);
                    if (v489)
                      v490 = *(unsigned __int16 *)(v489 + 8);
                    else
                      v490 = 0;
                    v506 = sub_1C636D0C8(*a1, (const char *)0x92, (const llvm::APInt *)v564, v282, v283, (uint64_t *)v570[0], LODWORD(v570[1]), v490);
                    v508 = v507;
                    v3 = a1;
                    sub_1C5C5B004((uint64_t)a1, (uint64_t)v506);
                    v9 = sub_1C6367DA8(*a1, (uint64_t)v562[0], (uint64_t)v562[1], (uint64_t)v506, v508);
LABEL_582:
                    if (v570[0] != v571)
                      free(v570[0]);
LABEL_247:
                    if (v564[0])
                      llvm::MetadataTracking::untrack((uint64_t)v564, (unsigned __int8 *)v564[0]);
                    if (v9)
                      return (_QWORD *)v9;
                    goto LABEL_47;
                  }
LABEL_581:
                  v9 = 0;
                  goto LABEL_582;
                }
                v491 = *(_QWORD *)(v2 + 32);
                v492 = 1;
                while (1)
                {
                  v493 = *(_QWORD *)(v491 + 40 * v492);
                  v494 = *(unsigned __int16 *)(v493 + 24);
                  v495 = v494 - 199;
                  v496 = v494 == 199;
                  if (v495 <= 1
                    && (v497 = **(_QWORD **)(v493 + 32), *(_WORD *)(v497 + 24) == 148)
                    && (v498 = *(_QWORD *)(**(_QWORD **)(v32 + 32) + 32),
                        v499 = *(_QWORD *)(v497 + 32),
                        *(_QWORD *)v498 == *(_QWORD *)v499)
                    && *(_DWORD *)(v498 + 8) == *(_DWORD *)(v499 + 8))
                  {
                    v500 = *(_QWORD *)(v499 + 40);
                    v501 = *(unsigned __int16 *)(v500 + 24);
                    if (v501 == 35 || v501 == 11)
                    {
                      v503 = *(_QWORD *)(v500 + 80);
                      v504 = (uint64_t *)(v503 + 24);
                      if (*(_DWORD *)(v503 + 32) >= 0x41u)
                        v504 = (uint64_t *)*v504;
                      v505 = *v504;
                    }
                    else
                    {
                      v505 = -1;
                    }
                    v2 = v554;
                  }
                  else
                  {
                    v505 = -1;
                  }
                  if (v40 + v492 != v505)
                    break;
                  v33 |= v496;
                  if (v186 == ++v492)
                    goto LABEL_265;
                }
              }
            }
          }
        }
      }
      v6 = v30;
      v3 = a1;
      goto LABEL_46;
    }
    v95 = v94;
    v96 = a2;
    if (*(_WORD *)(v94 + 24) == 216)
    {
      do
      {
        v97 = *(_DWORD **)(v95 + 32);
        v95 = *(_QWORD *)v97;
      }
      while (*(_WORD *)(*(_QWORD *)v97 + 24) == 216);
      v98 = v97[2];
    }
    else
    {
      v98 = a2;
    }
    v140 = (uint64_t)v6;
    v141 = *(_QWORD *)(v95 + 40) + 16 * v98;
    v143 = *(void **)v141;
    v142 = *(_DWORD **)(v141 + 8);
    v564[0] = v143;
    v564[1] = v142;
    if ((_BYTE)v143)
    {
      if (v143 - 15 < 0x9C)
      {
LABEL_287:
        v220 = *(unsigned __int16 *)(v2 + 56);
        v222 = sub_1C612FE00((llvm::EVT *)v564, (const char *)a2) * v220;
        v223 = *(llvm::LLVMContext **)(*v3 + 56);
        if (LOBYTE(v564[0]))
        {
          LOBYTE(v224) = sub_1C47F37A0((unsigned __int8 *)v564);
          v225 = 0;
          v226 = 0;
        }
        else
        {
          v224 = llvm::EVT::getEVT(*((llvm::EVT **)v564[1] + 3), 0, v221);
          v226 = v243;
          v225 = v224 & 0xFFFFFFFFFFFFFF00;
        }
        v244 = sub_1C4816F98(v223, v225 | v224, v226, v222, 0);
        v245 = (llvm *)v244;
        v246 = a2;
        if (!*((_BYTE *)v3 + 34) || (_BYTE)v244 && *(_QWORD *)(v3[1] + 8 * v244 + 96))
        {
          v247 = *(unsigned __int16 *)(v2 + 56);
          v570[0] = v571;
          v570[1] = (void *)0x800000000;
          sub_1C4825C80((unsigned int *)v570, v247, v95, v96 & 0xFFFFFFFF00000000 | v98);
          v248 = *v3;
          v249 = *(void **)(v2 + 64);
          v562[0] = v249;
          if (v249)
            llvm::MetadataTracking::track((uint64_t)v562, (unsigned __int8 *)v249, 2);
          LODWORD(v562[1]) = *(_DWORD *)(v2 + 60);
          v250 = *(_QWORD *)(v248 + 832);
          if (v250)
            v251 = *(unsigned __int16 *)(v250 + 8);
          else
            v251 = 0;
          v486 = sub_1C636D0C8(v248, (const char *)0x95, (const llvm::APInt *)v562, v245, v246, (uint64_t *)v570[0], LODWORD(v570[1]), v251);
          v488 = v487;
          if (v562[0])
            llvm::MetadataTracking::untrack((uint64_t)v562, (unsigned __int8 *)v562[0]);
          v9 = sub_1C6367DA8(*a1, v140, v552, (uint64_t)v486, v488);
          if (v570[0] != v571)
            free(v570[0]);
          return (_QWORD *)v9;
        }
      }
    }
    else if ((v142[2] & 0xFE) == 0x12)
    {
      goto LABEL_287;
    }
    v6 = (llvm *)v140;
    goto LABEL_7;
  }
  v7 = *(_QWORD *)(a2 + 32);
  v8 = 40 * *(unsigned __int16 *)(a2 + 56);
  do
  {
    if (*(_WORD *)(*(_QWORD *)v7 + 24) != 51)
      goto LABEL_6;
    v7 += 40;
    v8 -= 40;
  }
  while (v8);
  return sub_1C61312D0(*a1, v6, v5);
}

_QWORD *sub_1C5C9938C(uint64_t *a1, _QWORD *a2)
{
  signed int v4;
  const char *v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v16;
  unsigned int v17;
  char v18;
  unsigned int v19;
  signed int v20;
  BOOL v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  _QWORD *v26;
  unsigned __int8 *v27;
  int v28;
  _QWORD *v29;
  _BYTE *v30;
  uint64_t v31;
  __int128 v32;
  unsigned __int8 *v33;
  uint64_t v34;
  llvm *v35;
  uint64_t v36;
  _QWORD *v37;
  const char *v38;
  unsigned int v39;
  _DWORD *v40;
  unsigned int v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  const char *v46;
  unsigned int v47;
  uint64_t v48;
  int v49;
  int v50;
  _BYTE *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  uint64_t v61;
  int v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  BOOL v69;
  uint64_t v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  unsigned int v78;
  _DWORD *v79;
  const char *v80;
  int *v81;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  int *v88;
  unsigned int v89;
  uint64_t v90;
  uint64_t v91;
  const char *v92;
  void *v93;
  int v94;
  int *v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  llvm **v99;
  llvm *v100;
  uint64_t v101;
  unsigned __int8 *v102;
  const char *v103;
  uint64_t v104;
  const char *v105;
  uint64_t *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  _QWORD *v111;
  uint64_t v112;
  _BOOL4 v113;
  _BOOL4 v114;
  int v115;
  BOOL v116;
  uint64_t *v117;
  uint64_t v118;
  _QWORD *v119;
  uint64_t v120;
  BOOL v121;
  BOOL v122;
  int v123;
  uint64_t *v124;
  uint64_t v125;
  unint64_t j;
  int v127;
  uint64_t *v128;
  int v129;
  uint64_t v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  int v135;
  int v136;
  uint64_t v137;
  unsigned __int8 *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unsigned __int8 *v143;
  uint64_t v144;
  uint64_t v145;
  llvm *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  unsigned __int8 *v151;
  int v152;
  unsigned __int8 *v153;
  uint64_t v154;
  uint64_t v155;
  _QWORD *v157;
  unsigned int v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  _DWORD *v163;
  const char *v164;
  const char *v165;
  unsigned int v166;
  unsigned int v167;
  uint64_t v168;
  uint64_t v169;
  _DWORD *v170;
  llvm *v171;
  void *v172;
  unsigned __int8 *v173;
  _QWORD *v174;
  unsigned int v175;
  unint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  unsigned int v179;
  unint64_t v180;
  unsigned __int8 *v181;
  uint64_t v182;
  uint64_t *v183;
  unsigned int v184;
  const char *v185;
  signed int *v186;
  uint64_t v187;
  signed int v188;
  signed int v189;
  unsigned int v190;
  const char *v191;
  unsigned int *v192;
  uint64_t v193;
  uint64_t v194;
  unsigned int v195;
  uint64_t v196;
  int v197;
  BOOL v198;
  int v199;
  uint64_t v200;
  unsigned int *v201;
  uint64_t v202;
  void *v203;
  _DWORD *v204;
  unsigned int v205;
  uint64_t v206;
  BOOL v207;
  uint64_t v208;
  const char *v209;
  uint64_t *v210;
  unsigned int v211;
  uint64_t i;
  int v213;
  llvm::LLVMContext *v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unint64_t v218;
  uint64_t ExtendedIntegerVT;
  uint64_t v220;
  unsigned int v221;
  uint64_t v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  llvm *v226;
  uint64_t v227;
  unsigned __int8 *v228;
  int *v229;
  unsigned int v230;
  _DWORD *v231;
  const char *v232;
  uint64_t v233;
  _DWORD *v234;
  uint64_t v235;
  uint64_t v236;
  int *v237;
  const char *v238;
  unsigned int v239;
  uint64_t v240;
  BOOL v241;
  unsigned int v242;
  uint64_t v243;
  BOOL v244;
  unsigned int v245;
  uint64_t v246;
  BOOL v247;
  unsigned int v248;
  int v249;
  BOOL v250;
  int v251;
  uint64_t v252;
  int v253;
  int v254;
  _BYTE *v256;
  unsigned int v257;
  int v258;
  _DWORD *v259;
  uint64_t v260;
  const char *v261;
  uint64_t v262;
  unsigned int v263;
  int v264;
  int v265;
  int v266;
  BOOL v267;
  int v268;
  _QWORD *v269;
  uint64_t v270;
  _QWORD *v271;
  int v272;
  uint64_t v273;
  uint64_t v274;
  _DWORD *v275;
  unint64_t v276;
  int v277;
  int v278;
  _BYTE *v279;
  int *v280;
  unsigned int v281;
  int *v282;
  uint64_t v283;
  int v284;
  int v285;
  uint64_t v286;
  uint64_t *v287;
  uint64_t v288;
  int v289;
  int v290;
  uint64_t v291;
  BOOL v292;
  uint64_t v293;
  BOOL v294;
  uint64_t *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  int v300;
  char v301;
  uint64_t v302;
  char v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  int v307;
  _DWORD *v308;
  uint64_t v309;
  uint64_t v310;
  int v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  unsigned int v317;
  unsigned __int8 *v318;
  int v319;
  uint64_t v320;
  unsigned __int8 *v322;
  uint64_t v323;
  unsigned __int8 *v325;
  uint64_t v326;
  unsigned __int8 *v328;
  uint64_t v329;
  int v331;
  uint64_t v332;
  uint64_t v333;
  const char *v334;
  unsigned int v335;
  unsigned int v336;
  unint64_t v337;
  uint64_t v338;
  uint64_t v339;
  _BYTE *v340;
  uint64_t v341;
  const char *v342;
  unsigned int v343;
  unsigned int v344;
  _BYTE *v345;
  unint64_t v346;
  _QWORD *v347;
  void *v348;
  uint64_t v349;
  __int128 v350;
  _QWORD *v351;
  unsigned int v352;
  _QWORD *v353;
  unsigned int v354;
  _QWORD *v355;
  unint64_t v356;
  unint64_t v357;
  uint64_t v358;
  __int128 v359;
  _QWORD *v360;
  unsigned int v361;
  _QWORD *v362;
  unsigned int v363;
  _QWORD *v364;
  unint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  __int128 v370;
  _QWORD *v371;
  unsigned __int8 *v372;
  _QWORD *v373;
  unsigned int v374;
  _QWORD *v375;
  unsigned int v376;
  uint64_t v377;
  uint64_t *v378;
  uint64_t v379;
  uint64_t v380;
  _QWORD *v381;
  unint64_t v382;
  unint64_t v383;
  uint64_t v384;
  _QWORD *v385;
  unsigned __int8 *v386;
  uint64_t *v387;
  uint64_t v388;
  unint64_t v389;
  uint64_t v390;
  uint64_t *v391;
  unsigned int v392;
  unsigned int v393;
  uint64_t v394;
  __int128 v395;
  _QWORD *v396;
  unsigned __int8 *v397;
  unsigned int v398;
  unsigned int v399;
  uint64_t v400;
  BOOL v401;
  _QWORD *v402;
  uint64_t v403;
  int v404;
  int v405;
  uint64_t v406;
  BOOL v407;
  void *v408;
  void *v409;
  BOOL v410;
  char v411;
  __int128 *v412;
  uint64_t v413;
  int v414;
  int v415;
  unsigned __int8 *v416;
  uint64_t v417;
  uint64_t v418;
  unsigned int v419;
  uint64_t v420;
  _DWORD *v421;
  uint64_t v422;
  _DWORD *v423;
  unsigned int v424;
  uint64_t v425;
  _DWORD *v426;
  uint64_t v427;
  uint64_t v428;
  llvm *v429;
  __int128 v430;
  void *v431;
  uint64_t v432;
  __int16 v433;
  uint64_t v434;
  _DWORD *v435;
  uint64_t v436;
  uint64_t v437;
  int v438;
  _DWORD *v439;
  uint64_t v440;
  uint64_t *v441;
  uint64_t v442;
  uint64_t *v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  llvm *v448;
  uint64_t v449;
  _QWORD *v450;
  unsigned __int8 *v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  BOOL v456;
  uint64_t v457;
  int v458;
  BOOL v460;
  int *v461;
  unsigned int v462;
  uint64_t v463;
  BOOL v464;
  uint64_t v465;
  BOOL v466;
  int v467;
  int v468;
  uint64_t v469;
  int v470;
  llvm *v471;
  uint64_t v472;
  _QWORD *v473;
  int v474;
  uint64_t v475;
  int v476;
  uint64_t v477;
  int v478;
  _QWORD *v479;
  uint64_t v480;
  int v481;
  void *v482;
  uint64_t v483;
  _QWORD *v484;
  unsigned __int8 v485;
  uint64_t v486;
  uint64_t v487;
  _DWORD *v488;
  uint64_t v489;
  int v490;
  _QWORD *v491;
  int v492;
  uint64_t v493;
  uint64_t v494;
  void *v495;
  uint64_t v496;
  int v497;
  void *v498;
  llvm *v499;
  uint64_t v500;
  void *v501;
  uint64_t v502;
  uint64_t v503;
  uint64_t v504;
  unsigned int *v505;
  uint64_t v506;
  void *v507;
  void *v508;
  __int128 *v509;
  uint64_t ExtendedSizeInBits;
  int v511;
  unint64_t v512;
  int v513;
  unint64_t v514;
  int v515;
  uint64_t v516;
  uint64_t v517;
  unsigned __int8 *v518;
  uint64_t *v519;
  uint64_t v520;
  unint64_t v521;
  uint64_t v522;
  unint64_t v523;
  _QWORD *v524;
  unsigned __int8 *v525;
  llvm *v526;
  uint64_t v527;
  uint64_t v528;
  unint64_t v529;
  uint64_t v530;
  uint64_t v531;
  unint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t *v535;
  unint64_t v536;
  unint64_t v537;
  uint64_t v538;
  uint64_t *v539;
  unint64_t v540;
  uint64_t v541;
  unint64_t v542;
  uint64_t *v543;
  uint64_t v544;
  __int16 v545;
  uint64_t *v546;
  const char *v547;
  unsigned int v548;
  unsigned int v549;
  uint64_t v550;
  __int128 v551;
  _QWORD *v552;
  unsigned int v553;
  unint64_t v554;
  int v555;
  unint64_t v556;
  uint64_t v557;
  const char *v558;
  _QWORD *v559;
  uint64_t v560;
  uint64_t v561;
  _QWORD *v562;
  uint64_t v563;
  const char *v564;
  unsigned int v565;
  unint64_t v566;
  uint64_t v567;
  BOOL v568;
  unint64_t v569;
  uint64_t v570;
  _DWORD *v571;
  int v572;
  unsigned int v573;
  int v574;
  _DWORD *v575;
  uint64_t v576;
  llvm::LLVMContext *v577;
  unint64_t v578;
  uint64_t v579;
  llvm *v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t *v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t *v586;
  uint64_t v587;
  uint64_t v588;
  unsigned __int8 *v589;
  _QWORD *v590;
  unint64_t v591;
  _QWORD *v592;
  unint64_t v593;
  uint64_t v594;
  uint64_t v595;
  unsigned int v596;
  uint64_t v597;
  _DWORD *v598;
  uint64_t v599;
  _DWORD *v600;
  unsigned int v601;
  uint64_t v602;
  _DWORD *v603;
  uint64_t v604;
  unint64_t v605;
  uint64_t v606;
  unint64_t v607;
  uint64_t v608;
  const char *v609;
  unint64_t v610;
  uint64_t v611;
  unint64_t v612;
  unsigned int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  uint64_t v617;
  const char *v618;
  unint64_t v619;
  uint64_t v620;
  const char *v621;
  unint64_t v622;
  uint64_t v623;
  const char *v624;
  unint64_t v625;
  unint64_t v626;
  uint64_t v627;
  const char *v628;
  unint64_t v629;
  unint64_t v630;
  char *v631;
  unsigned int v632;
  char *v633;
  const char *v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int *v637;
  uint64_t v638;
  uint64_t v639;
  int v640;
  _BYTE *v641;
  uint64_t *v642;
  uint64_t v643;
  uint64_t v644;
  uint64_t v645;
  unint64_t v646;
  void *v647;
  int v648;
  int v649;
  int *v650;
  uint64_t v651;
  int v652;
  int v653;
  uint64_t v654;
  unint64_t v655;
  unsigned int v656;
  unsigned int v657;
  uint64_t v658;
  unsigned int v659;
  unsigned int v660;
  uint64_t v661;
  __int128 v662;
  llvm *v663;
  uint64_t v664;
  _QWORD *v665;
  unsigned __int8 *v666;
  _QWORD *v667;
  uint64_t v668;
  _QWORD *v669;
  _QWORD *v670;
  uint64_t v671;
  int v672;
  _BYTE *v673;
  uint64_t v674;
  unint64_t v675;
  BOOL v676;
  uint64_t v677;
  uint64_t v678;
  uint64_t v679;
  size_t v680;
  uint64_t v681;
  int v682[2];
  unsigned int v683;
  int v684;
  _BYTE *v685;
  int v686;
  _DWORD *v687;
  _DWORD *v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  int v692;
  uint64_t v693;
  int v694[2];
  uint64_t v695;
  int v696[2];
  unint64_t v697;
  uint64_t v698;
  unint64_t v699;
  uint64_t v700;
  unint64_t v701;
  uint64_t v702;
  uint64_t *v703;
  unint64_t v704;
  unsigned __int8 *v705;
  int v706;
  int v707[2];
  int v708[2];
  uint64_t v709[3];
  int v710[2];
  int v711[3];
  unsigned int v712;
  __int128 v713;
  _QWORD *v714;
  __int128 v715;
  int v716[4];
  void *v717[2];
  _BYTE v718[32];
  void *__src[2];
  _BYTE v720[256];
  _QWORD **v721;
  _QWORD *v722[3];
  __int128 v723;
  _QWORD v724[18];

  v724[16] = *MEMORY[0x1E0C80C00];
  v714 = a2;
  v713 = *(_OWORD *)a2[5];
  v4 = sub_1C612FE00((llvm::EVT *)&v713, (const char *)a2);
  v712 = v4;
  v6 = (uint64_t *)a2[4];
  v7 = *v6;
  v8 = v6[1];
  v10 = v6[5];
  v9 = v6[6];
  if (*(_WORD *)(*v6 + 24) == 51)
  {
    if (*(_WORD *)(v10 + 24) == 51)
      return sub_1C61312D0(*a1, (llvm *)v713, *((uint64_t *)&v713 + 1));
    v11 = v7 == v10 && (_DWORD)v9 == (_DWORD)v8;
    if (!v11)
    {
      v12 = *a1;
      return sub_1C6367B34(v12, (uint64_t)a2);
    }
LABEL_31:
    v31 = *a1;
    v32 = v713;
    v33 = (unsigned __int8 *)a2[8];
    *(_QWORD *)&v723 = v33;
    v34 = *((_QWORD *)&v713 + 1);
    v35 = (llvm *)v713;
    v36 = v31;
    if (v33)
    {
      llvm::MetadataTracking::track((uint64_t)&v723, v33, 2);
      v36 = *a1;
      v34 = *((_QWORD *)&v713 + 1);
      v35 = (llvm *)v713;
    }
    DWORD2(v723) = *((_DWORD *)a2 + 15);
    v37 = sub_1C61312D0(v36, v35, v34);
    v39 = v38;
    *(_OWORD *)__src = *(_OWORD *)a2[5];
    v40 = (_DWORD *)a2[10];
    v41 = sub_1C612FE00((llvm::EVT *)__src, v38);
    llvm::createUnaryMask(v40, v41, v712, (uint64_t)__src);
    v14 = (uint64_t)sub_1C5D41DE4(v31, (llvm *)v32, *((uint64_t *)&v32 + 1), (uint64_t)&v723, v7, v8, (uint64_t)v37, v39, __src[0], LODWORD(__src[1]));
    v42 = __src[0];
    if (__src[0] == v720)
      goto LABEL_35;
    goto LABEL_34;
  }
  if (v7 == v10 && (_DWORD)v9 == (_DWORD)v8)
    goto LABEL_31;
  if (*(_WORD *)(v10 + 24) == 51)
  {
    __src[0] = v720;
    __src[1] = (void *)0x800000000;
    if (v4)
    {
      v16 = a1;
      v17 = 0;
      v18 = 0;
      v19 = 0;
      do
      {
        v20 = *(_DWORD *)(a2[10] + 4 * v19);
        v21 = v20 >= v4;
        if (v20 >= v4)
          v22 = -1;
        else
          v22 = *(_DWORD *)(a2[10] + 4 * v19);
        if (v17 >= HIDWORD(__src[1]))
        {
          v697 = v8;
          v23 = v9;
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)__src, (uint64_t)v720, v17 + 1, 4);
          v9 = v23;
          v8 = v697;
          v17 = __src[1];
        }
        v18 |= v21;
        *((_DWORD *)__src[0] + v17) = v22;
        v17 = ++LODWORD(__src[1]);
        ++v19;
        v4 = v712;
      }
      while (v19 != v712);
      if ((v18 & 1) != 0)
      {
        v24 = *v16;
        v25 = v713;
        v26 = v714;
        v27 = (unsigned __int8 *)v714[8];
        *(_QWORD *)&v723 = v27;
        if (v27)
        {
          v28 = v9;
          llvm::MetadataTracking::track((uint64_t)&v723, v27, 2);
          LODWORD(v9) = v28;
          v17 = __src[1];
        }
        DWORD2(v723) = *((_DWORD *)v26 + 15);
        v29 = sub_1C5D41DE4(v24, (llvm *)v25, *((uint64_t *)&v25 + 1), (uint64_t)&v723, v7, v8, v10, v9, __src[0], v17);
        goto LABEL_27;
      }
      a1 = v16;
      if (__src[0] != v720)
      {
        v43 = v9;
        free(__src[0]);
        v9 = v43;
      }
    }
  }
  v44 = v9;
  v698 = *a1;
  v703 = a1;
  *(_OWORD *)__src = *(_OWORD *)a2[5];
  v45 = (char *)a2[10];
  v47 = sub_1C612FE00((llvm::EVT *)__src, v5);
  v48 = v47;
  __src[0] = v720;
  __src[1] = (void *)0x1000000000;
  if (v47 >= 0x11)
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)__src, (uint64_t)v720, v47, 4);
    v49 = (int)__src[1];
    v51 = __src[0];
    goto LABEL_42;
  }
  v49 = 0;
  v50 = 0;
  v51 = v720;
  if (v47)
  {
LABEL_42:
    memcpy(&v51[4 * v49], v45, 4 * v47);
    v50 = (int)__src[1];
  }
  v52 = v50 + v47;
  LODWORD(__src[1]) = v50 + v47;
  v53 = a2[4];
  v54 = *(_QWORD *)v53;
  v55 = *(unsigned int *)(v53 + 8);
  v57 = *(_QWORD *)(v53 + 40);
  v56 = *(_QWORD *)(v53 + 48);
  if (!(_DWORD)v48)
    goto LABEL_52;
  v58 = 0;
  v59 = -1;
  do
  {
    v60 = *(_DWORD *)&v45[4 * v58];
    if (v60 < 0 || v60 >= (int)v48)
    {
      if ((_DWORD)v48 + (_DWORD)v58 != v60)
        goto LABEL_52;
    }
    else
    {
      if (v59 != -1)
        goto LABEL_52;
      v59 = v58;
    }
    ++v58;
  }
  while (v48 != v58);
  if (v59 == -1)
  {
LABEL_52:
    if (!v52)
      goto LABEL_80;
    v61 = 0;
    v45 = (char *)__src[0];
    do
    {
      v62 = *(_DWORD *)&v45[v61];
      if ((v62 & 0x80000000) == 0)
      {
        if (v62 >= v52)
          v63 = -v52;
        else
          v63 = v52;
        *(_DWORD *)&v45[v61] = v63 + v62;
      }
      v61 += 4;
    }
    while (4 * v52 != v61);
    if (!LODWORD(__src[1]))
      goto LABEL_80;
    v64 = 0;
    v59 = -1;
    do
    {
      v65 = *(_DWORD *)&v45[4 * v64];
      if (v65 < 0 || v65 >= SLODWORD(__src[1]))
      {
        if (LODWORD(__src[1]) + (_DWORD)v64 != v65)
          goto LABEL_80;
      }
      else
      {
        if (v59 != -1)
          goto LABEL_80;
        v59 = v64;
      }
      ++v64;
    }
    while (LODWORD(__src[1]) != v64);
    if (v59 == -1)
      goto LABEL_80;
    v66 = v57;
    v46 = (const char *)v56;
    v56 = v56 & 0xFFFFFFFF00000000 | v55;
    v57 = v54;
    v54 = v66;
    LODWORD(v55) = (_DWORD)v46;
  }
  if (*(_WORD *)(v54 + 24) != 147
    || ((v67 = *(_QWORD *)(*(_QWORD *)(v54 + 32) + 80), v68 = *(unsigned __int16 *)(v67 + 24), v68 != 35)
      ? (v69 = v68 == 11)
      : (v69 = 1),
        !v69
     || ((v70 = *(_QWORD *)(v67 + 80), v71 = *(_DWORD *)(v70 + 32), v71 > 0x40)
       ? (v72 = **(_QWORD **)(v70 + 24))
       : (v72 = (uint64_t)(*(_QWORD *)(v70 + 24) << -(char)v71) >> -(char)v71),
         v72 != *(_DWORD *)&v45[4 * v59])))
  {
LABEL_80:
    v14 = 0;
    goto LABEL_81;
  }
  v681 = v57;
  v691 = v56;
  v137 = v59;
  v138 = (unsigned __int8 *)a2[8];
  *(_QWORD *)&v723 = v138;
  if (v138)
    llvm::MetadataTracking::track((uint64_t)&v723, v138, 2);
  DWORD2(v723) = *((_DWORD *)a2 + 15);
  v140 = sub_1C6366C9C(v698, v137, (uint64_t)&v723, 0);
  v142 = v141;
  if ((_QWORD)v723)
    llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
  v143 = (unsigned __int8 *)a2[8];
  *(_QWORD *)&v723 = v143;
  if (v143)
    llvm::MetadataTracking::track((uint64_t)&v723, v143, 2);
  DWORD2(v723) = *((_DWORD *)a2 + 15);
  v144 = *(_QWORD *)(v54 + 32);
  v145 = *(_QWORD *)(v54 + 40) + 16 * v55;
  v146 = *(llvm **)v145;
  v147 = *(_QWORD *)(v145 + 8);
  v148 = *(_QWORD *)(v144 + 40);
  v149 = *(_QWORD *)(v144 + 48);
  v150 = *(_QWORD *)(v698 + 832);
  if (v150)
    LOWORD(v150) = *(_WORD *)(v150 + 8);
  v14 = (uint64_t)sub_1C5D58E08(v698, (const char *)0x93, (const llvm::APInt *)&v723, v146, v147, v681, v691, v139, v148, v149, v140, v142, SHIDWORD(v142), v150);
  v46 = (const char *)v723;
  if ((_QWORD)v723)
    llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
LABEL_81:
  if (__src[0] != v720)
    free(__src[0]);
  if (v14)
    return (_QWORD *)v14;
  v74 = (uint64_t *)a2[4];
  if (*(_WORD *)(v74[5] + 24) == 51)
  {
    v75 = *v74;
    if (*v74)
    {
      if (*(_WORD *)(v75 + 24) == 153)
      {
        v76 = *v703;
        if (sub_1C636FD00(*(_QWORD *)(v75 + 80), **(const char ***)(v75 + 40), *(_QWORD *)(*(_QWORD *)(v75 + 40) + 8)))
        {
          *(_OWORD *)__src = *(_OWORD *)a2[5];
          v77 = (int *)a2[10];
          v78 = sub_1C612FE00((llvm::EVT *)__src, v46);
          *(_OWORD *)__src = *(_OWORD *)*(_QWORD *)(v75 + 40);
          v79 = *(_DWORD **)(v75 + 80);
          sub_1C612FE00((llvm::EVT *)__src, v80);
          if (v78)
          {
            v81 = v77;
            v82 = v79;
            v83 = v78;
            while (1)
            {
              v85 = *v81++;
              v84 = v85;
              if ((_DWORD)v85 != -1 && *v82 == -1 && v79[v84] != -1)
                break;
              ++v82;
              if (!--v83)
                goto LABEL_95;
            }
            v693 = v76;
            v221 = 0;
            __src[0] = v720;
            __src[1] = (void *)0x2000000000;
            v222 = 4 * v78;
            do
            {
              v223 = *v77;
              if ((_DWORD)v223 == -1)
                v224 = -1;
              else
                v224 = v79[v223];
              if (v221 >= HIDWORD(__src[1]))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)__src, (uint64_t)v720, v221 + 1, 4);
                v221 = __src[1];
              }
              *((_DWORD *)__src[0] + v221) = v224;
              v221 = ++LODWORD(__src[1]);
              ++v77;
              v222 -= 4;
            }
            while (v222);
            v225 = *(_QWORD *)(v75 + 40);
            v226 = *(llvm **)v225;
            v227 = *(_QWORD *)(v225 + 8);
            v228 = *(unsigned __int8 **)(v75 + 64);
            *(_QWORD *)&v723 = v228;
            if (v228)
            {
              llvm::MetadataTracking::track((uint64_t)&v723, v228, 2);
              v221 = __src[1];
            }
            DWORD2(v723) = *(_DWORD *)(v75 + 60);
            v14 = (uint64_t)sub_1C5D41DE4(v693, v226, v227, (uint64_t)&v723, **(_QWORD **)(v75 + 32), *(_QWORD *)(*(_QWORD *)(v75 + 32) + 8), *(_QWORD *)(*(_QWORD *)(v75 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v75 + 32) + 48), __src[0], v221);
            v46 = (const char *)v723;
            if ((_QWORD)v723)
              llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
            if (__src[0] != v720)
              free(__src[0]);
            if (v14)
              return (_QWORD *)v14;
          }
          else
          {
LABEL_95:
            v14 = *(_QWORD *)a2[4];
            if (v14)
              return (_QWORD *)v14;
          }
        }
      }
    }
  }
  v86 = (uint64_t *)a2[4];
  if (*(_WORD *)(v86[5] + 24) == 51)
  {
    v87 = *v86;
    if (*v86)
    {
      if (*(_WORD *)(v87 + 24) == 153 && *(_WORD *)(*(_QWORD *)(*(_QWORD *)(v87 + 32) + 40) + 24) == 51)
      {
        v690 = *v703;
        *(_OWORD *)__src = *(_OWORD *)a2[5];
        v88 = (int *)a2[10];
        v89 = sub_1C612FE00((llvm::EVT *)__src, v46);
        v90 = v89;
        *(_OWORD *)__src = *(_OWORD *)*(_QWORD *)(v87 + 40);
        v91 = *(_QWORD *)(v87 + 80);
        sub_1C612FE00((llvm::EVT *)__src, v92);
        __src[0] = v720;
        __src[1] = (void *)0x2000000000;
        sub_1C4893E04((char *)__src, v89, -1);
        v93 = __src[0];
        if (v89)
        {
          v94 = -1;
          v95 = (int *)__src[0];
          do
          {
            v97 = *v88++;
            v96 = v97;
            if ((_DWORD)v97 != -1)
            {
              v98 = *(_DWORD *)(v91 + 4 * v96);
              if (v98 != -1)
              {
                if (v94 != -1 && v94 != v98)
                  goto LABEL_178;
                *v95 = v98;
                v94 = v98;
              }
            }
            ++v95;
            --v90;
          }
          while (v90);
        }
        v99 = (llvm **)a2[5];
        v100 = *v99;
        v101 = (uint64_t)v99[1];
        if ((*(unsigned int (**)(_QWORD, void *, _QWORD, llvm *, uint64_t))(**(_QWORD **)(v690 + 24) + 488))(*(_QWORD *)(v690 + 24), v93, LODWORD(__src[1]), *v99, v101))
        {
          v102 = (unsigned __int8 *)a2[8];
          *(_QWORD *)&v723 = v102;
          if (v102)
            llvm::MetadataTracking::track((uint64_t)&v723, v102, 2);
          DWORD2(v723) = *((_DWORD *)a2 + 15);
          v14 = (uint64_t)sub_1C5D41DE4(v690, v100, v101, (uint64_t)&v723, **(_QWORD **)(v87 + 32), *(_QWORD *)(*(_QWORD *)(v87 + 32) + 8), *(_QWORD *)(*(_QWORD *)(v87 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v87 + 32) + 48), __src[0], LODWORD(__src[1]));
          if ((_QWORD)v723)
            llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
        }
        else
        {
LABEL_178:
          v14 = 0;
        }
        if (__src[0] != v720)
          free(__src[0]);
        if (v14)
          return (_QWORD *)v14;
      }
    }
  }
  v104 = (uint64_t)v703;
  if (sub_1C636FD00(a2[10], *(const char **)a2[5], *(_QWORD *)(a2[5] + 8)))
  {
    *(_OWORD *)__src = *(_OWORD *)a2[5];
    v184 = sub_1C612FE00((llvm::EVT *)__src, v103);
    if (v184)
    {
      v186 = (signed int *)a2[10];
      v187 = v184;
      while (1)
      {
        v189 = *v186++;
        v188 = v189;
        if ((v189 & 0x80000000) == 0)
          break;
        if (!--v187)
          goto LABEL_208;
      }
    }
    else
    {
LABEL_208:
      v188 = 0;
    }
    if (v188 < (int)v712)
    {
      *(_OWORD *)__src = *(_OWORD *)a2[5];
      v190 = sub_1C612FE00((llvm::EVT *)__src, v185);
      if (v190)
      {
        v192 = (unsigned int *)a2[10];
        v193 = v190;
        while (1)
        {
          v195 = *v192++;
          v194 = v195;
          if ((v195 & 0x80000000) == 0)
            break;
          if (!--v193)
            goto LABEL_214;
        }
      }
      else
      {
LABEL_214:
        v194 = 0;
      }
      v196 = *(_QWORD *)(v7 + 48);
      if (v196)
      {
        v197 = 1;
        do
        {
          if (*(_DWORD *)(v196 + 8) == (_DWORD)v8)
          {
            if (!v197)
              goto LABEL_225;
            --v197;
          }
          v196 = *(_QWORD *)(v196 + 32);
        }
        while (v196);
        if (!v197
          && (*(unsigned int (**)(uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)v703[1] + 1424))(v703[1], v713, *((_QWORD *)&v713 + 1), v194)&& (*(unsigned int (**)(uint64_t, _QWORD))(*(_QWORD *)v703[1] + 1136))(v703[1], *(unsigned __int16 *)(v7 + 24))&& *(_WORD *)(v7 + 58) == 1)
        {
          v519 = *(uint64_t **)(v7 + 32);
          v520 = *v519;
          v521 = v519[1];
          v522 = v519[5];
          v523 = v519[6];
          v524 = v714;
          v525 = (unsigned __int8 *)v714[8];
          *(_QWORD *)&v723 = v525;
          if (v525)
            llvm::MetadataTracking::track((uint64_t)&v723, v525, 2);
          DWORD2(v723) = *((_DWORD *)v524 + 15);
          v526 = (llvm *)sub_1C6131264((unsigned __int8 *)&v713, (uint64_t)v525, v198);
          v528 = v527;
          v531 = sub_1C6366C9C(*v703, v194, (uint64_t)&v723, 0);
          v532 = v529;
          v533 = *(_QWORD *)(*v703 + 832);
          if (v533)
            LOWORD(v533) = *(_WORD *)(v533 + 8);
          v535 = sub_1C5D56C70(*v703, 148, (const llvm::APInt *)&v723, v526, v528, v520, v521, v530, v531, v529, v533);
          v537 = v536;
          v538 = *(_QWORD *)(*v703 + 832);
          if (v538)
            LOWORD(v538) = *(_WORD *)(v538 + 8);
          v539 = sub_1C5D56C70(*v703, 148, (const llvm::APInt *)&v723, v526, v528, v522, v523, v534, v531, v532, v538);
          v543 = sub_1C5D56C70(*v703, *(unsigned __int16 *)(v7 + 24), (const llvm::APInt *)&v723, v526, v528, (uint64_t)v535, v537, v541, (uint64_t)v539, v540, *(_WORD *)(v7 + 72));
          v544 = *(_QWORD *)(*v703 + 832);
          if (v544)
            v545 = *(_WORD *)(v544 + 8);
          else
            v545 = 0;
          v546 = sub_1C5D52060(*v703, 155, (const llvm::APInt *)&v723, (llvm *)v713, *((uint64_t *)&v713 + 1), (uint64_t)v543, v542, v545);
          v548 = v547;
          v549 = sub_1C612FE00((llvm::EVT *)&v713, v547);
          __src[0] = v720;
          __src[1] = (void *)0x1000000000;
          sub_1C4893E04((char *)__src, v549, 0);
          v550 = *v703;
          v551 = v713;
          v552 = sub_1C61312D0(*v703, (llvm *)v713, *((uint64_t *)&v713 + 1));
          v14 = (uint64_t)sub_1C5D41DE4(v550, (llvm *)v551, *((uint64_t *)&v551 + 1), (uint64_t)&v723, (uint64_t)v546, v548, (uint64_t)v552, v553, __src[0], LODWORD(__src[1]));
          v42 = __src[0];
          if (__src[0] == v720)
            goto LABEL_35;
LABEL_34:
          free(v42);
LABEL_35:
          if ((_QWORD)v723)
            llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
          return (_QWORD *)v14;
        }
      }
LABEL_225:
      v199 = *(unsigned __int16 *)(v7 + 24);
      v200 = v7;
      if (v199 != 216)
        goto LABEL_569;
      v201 = *(unsigned int **)(v7 + 32);
      v200 = *(_QWORD *)v201;
      v202 = *(_QWORD *)(*(_QWORD *)v201 + 40) + 16 * v201[2];
      v203 = *(void **)v202;
      if (*(_QWORD *)v202)
      {
        if (*(_QWORD *)v202 - 15 <= 0x9B)
        {
          v204 = *(_DWORD **)(v202 + 8);
LABEL_566:
          __src[0] = v203;
          __src[1] = v204;
          if (sub_1C612FE00((llvm::EVT *)__src, v191) != v712)
            v200 = v7;
          v199 = *(unsigned __int16 *)(v200 + 24);
LABEL_569:
          v104 = (uint64_t)v703;
          if (v199 == 146)
          {
            if (v712)
            {
              v434 = *(_QWORD *)(v200 + 32);
              v435 = (_DWORD *)(v434 + 8);
              v436 = v712;
              while (1)
              {
                v437 = *((_QWORD *)v435 - 1);
                if (*(_WORD *)(v437 + 24) != 51)
                  break;
                v435 += 10;
                if (!--v436)
                  return (_QWORD *)v7;
              }
              v438 = *v435;
              v439 = (_DWORD *)(v434 + 8);
              v440 = v712;
              do
              {
                if (*((_QWORD *)v439 - 1) != v437 || *v439 != v438)
                {
                  v443 = (uint64_t *)(v434 + 40 * v194);
                  v444 = *v443;
                  v445 = v443[1];
                  __src[0] = v720;
                  __src[1] = (void *)0x800000000;
                  sub_1C4825C80((unsigned int *)__src, v712, v444, v445);
                  v446 = *v703;
                  v447 = *(_QWORD *)(v200 + 40);
                  v448 = *(llvm **)v447;
                  v449 = *(_QWORD *)(v447 + 8);
                  v450 = v714;
                  v451 = (unsigned __int8 *)v714[8];
                  *(_QWORD *)&v723 = v451;
                  if (v451)
                    llvm::MetadataTracking::track((uint64_t)&v723, v451, 2);
                  DWORD2(v723) = *((_DWORD *)v450 + 15);
                  v452 = *(_QWORD *)(v446 + 832);
                  if (v452)
                    v453 = *(unsigned __int16 *)(v452 + 8);
                  else
                    v453 = 0;
                  v14 = (uint64_t)sub_1C636D0C8(v446, (const char *)0x92, (const llvm::APInt *)&v723, v448, v449, (uint64_t *)__src[0], LODWORD(__src[1]), v453);
                  v517 = v516;
                  if ((_QWORD)v723)
                    llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
                  v518 = *(unsigned __int8 **)(v200 + 40);
                  if (*v518 != v713 || !*v518 && *((_QWORD *)v518 + 1) != *((_QWORD *)&v713 + 1))
                    v14 = sub_1C6367DA8(*v703, v713, *((uint64_t *)&v713 + 1), v14, v517);
                  v30 = __src[0];
                  if (__src[0] == v720)
                    return (_QWORD *)v14;
                  goto LABEL_30;
                }
                v439 += 10;
                --v440;
              }
              while (v440);
            }
            return (_QWORD *)v7;
          }
          goto LABEL_114;
        }
      }
      else
      {
        v204 = *(_DWORD **)(v202 + 8);
        if ((v204[2] & 0xFE) == 0x12)
          goto LABEL_566;
      }
      v104 = (uint64_t)v703;
    }
  }
LABEL_114:
  if (sub_1C5CB561C(v104, (uint64_t)v714, 0))
    return v714;
  v106 = (uint64_t *)a2[4];
  v107 = *v106;
  if (*v106 && *(_WORD *)(v107 + 24) == 153 && *(_WORD *)(v106[5] + 24) == 51)
  {
    *(_OWORD *)__src = *(_OWORD *)a2[5];
    v229 = (int *)a2[10];
    v230 = sub_1C612FE00((llvm::EVT *)__src, v105);
    *(_OWORD *)__src = *(_OWORD *)*(_QWORD *)(v107 + 40);
    v231 = *(_DWORD **)(v107 + 80);
    sub_1C612FE00((llvm::EVT *)__src, v232);
    if (v230)
    {
      v233 = v230;
      v234 = v231;
      while (1)
      {
        v236 = *v229++;
        v235 = v236;
        if ((_DWORD)v236 != -1 && v231[v235] != *v234)
          break;
        ++v234;
        if (!--v233)
          goto LABEL_277;
      }
    }
    else
    {
LABEL_277:
      v14 = *(_QWORD *)a2[4];
      if (v14)
        return (_QWORD *)v14;
    }
  }
  v109 = *(_QWORD *)v104;
  v108 = *(_QWORD *)(v104 + 8);
  v110 = *(unsigned __int8 *)(v104 + 33);
  v111 = (_QWORD *)a2[5];
  v112 = v111[1];
  *(_QWORD *)&v723 = *v111;
  *((_QWORD *)&v723 + 1) = v112;
  if ((_BYTE)v723)
  {
    v113 = v723 - 120 < 0x20;
    if (v723 - 15 < 0x3C)
      v113 = 1;
    v114 = v723 - 2 < 6 || v113;
  }
  else
  {
    if ((*(_DWORD *)(v112 + 8) & 0xFE) == 0x12)
      v115 = *(unsigned __int8 *)(**(_QWORD **)(v112 + 16) + 8);
    else
      v115 = *(_DWORD *)(v112 + 8);
    v114 = v115 == 13;
  }
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v109 + 40) + 40) + 272))
    v116 = 1;
  else
    v116 = !v114;
  if (!v116)
  {
    v700 = v108;
    v692 = v110;
    v205 = sub_1C612FE00((llvm::EVT *)&v723, v105);
    v683 = sub_1C6131328((unsigned __int8 *)&v723, v206, v207);
    *(_OWORD *)__src = *(_OWORD *)a2[5];
    v208 = a2[10];
    sub_1C612FE00((llvm::EVT *)__src, v209);
    if (v205 >= 3)
    {
      v210 = (uint64_t *)a2[4];
      v675 = v210[1];
      v677 = *v210;
      v211 = 2;
      while (((v211 - 1) & v205) != 0)
      {
LABEL_232:
        v211 *= 2;
        if (v211 >= v205)
          goto LABEL_133;
      }
      for (i = 0; i != v205; ++i)
      {
        v213 = *(_DWORD *)(v208 + 4 * i);
        if ((v213 & 0x80000000) == 0 && (((v211 - 1) & i) != 0 || v213 != i / v211))
          goto LABEL_232;
      }
      v214 = (llvm::LLVMContext *)(v211 * v683);
      if ((int)v214 > 63)
      {
        if ((_DWORD)v214 == 64)
        {
          v215 = 0;
          v216 = 0;
          v217 = 6;
          goto LABEL_248;
        }
        if ((_DWORD)v214 == 128)
        {
          v215 = 0;
          v216 = 0;
          v217 = 7;
          goto LABEL_248;
        }
      }
      else
      {
        switch((_DWORD)v214)
        {
          case 0x20:
            v215 = 0;
            v216 = 0;
            v217 = 5;
            goto LABEL_248;
          case 0x10:
            v215 = 0;
            v216 = 0;
            v217 = 4;
            goto LABEL_248;
          case 8:
            v215 = 0;
            v216 = 0;
            v217 = 3;
            goto LABEL_248;
        }
      }
      ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(v109 + 56), v214);
      v216 = v220;
      v215 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
      v217 = ExtendedIntegerVT;
LABEL_248:
      v218 = sub_1C4816F98(*(llvm::LLVMContext **)(v109 + 56), v217 | v215, v216, v205 / v211, 0);
      if (!(_BYTE)v218
        || !*(_QWORD *)(v700 + 8 * v218 + 96)
        || v692 && (*(unsigned __int8 *)(v700 + 390 * v218 + 4067) | 4) != 4)
      {
        goto LABEL_232;
      }
      v428 = (uint64_t)v105;
      v429 = (llvm *)v218;
      v430 = v723;
      v431 = (void *)a2[8];
      __src[0] = v431;
      if (v431)
        llvm::MetadataTracking::track((uint64_t)__src, (unsigned __int8 *)v431, 2);
      LODWORD(__src[1]) = *((_DWORD *)a2 + 15);
      v432 = *(_QWORD *)(v109 + 832);
      if (v432)
        v433 = *(_WORD *)(v432 + 8);
      else
        v433 = 0;
      v441 = sub_1C5D52060(v109, 205, (const llvm::APInt *)__src, v429, v428, v677, v675, v433);
      v14 = sub_1C6367DA8(v109, v430, *((uint64_t *)&v430 + 1), (uint64_t)v441, v442);
      v105 = (const char *)__src[0];
      if (__src[0])
        llvm::MetadataTracking::untrack((uint64_t)__src, (unsigned __int8 *)__src[0]);
      if (v14)
        return (_QWORD *)v14;
    }
  }
LABEL_133:
  v117 = v703;
  v118 = *v703;
  v119 = (_QWORD *)a2[5];
  v120 = v119[1];
  *(_QWORD *)&v723 = *v119;
  *((_QWORD *)&v723 + 1) = v120;
  if ((_BYTE)v723)
  {
    v121 = v723 - 120 < 0x20;
    if (v723 - 15 < 0x3C)
      v121 = 1;
    v122 = v723 - 2 < 6 || v121;
  }
  else
  {
    if ((*(_DWORD *)(v120 + 8) & 0xFE) == 0x12)
      v123 = *(unsigned __int8 *)(**(_QWORD **)(v120 + 16) + 8);
    else
      v123 = *(_DWORD *)(v120 + 8);
    v122 = v123 == 13;
  }
  if (!*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v118 + 40) + 40) + 272) && v122)
  {
    v124 = (uint64_t *)a2[4];
    v125 = *v124;
    for (j = v124[1]; ; j = j & 0xFFFFFFFF00000000 | *((unsigned int *)v128 + 2))
    {
      v127 = *(unsigned __int16 *)(v125 + 24);
      if (v127 != 216)
        break;
      v128 = *(uint64_t **)(v125 + 32);
      v125 = *v128;
    }
    v717[0] = (void *)v125;
    v717[1] = (void *)j;
    if ((v127 - 208) > 0xFFFFFFFC)
    {
      *(_OWORD *)v716 = *(_OWORD *)*(_QWORD *)(v125 + 32);
      *(_OWORD *)__src = *(_OWORD *)v119;
      v237 = (int *)a2[10];
      sub_1C612FE00((llvm::EVT *)__src, v105);
      v239 = sub_1C612FE00((llvm::EVT *)&v723, v238);
      v242 = sub_1C6131328((unsigned __int8 *)&v723, v240, v241);
      v245 = sub_1C6329368((unsigned int *)v716, v243, v244);
      v248 = sub_1C6329368((unsigned int *)v717, v246, v247);
      v249 = v248 / v245;
      if (v248 % v245)
        v250 = 0;
      else
        v250 = v242 == v245;
      if (v250)
      {
        if (!v239)
        {
LABEL_293:
          v13 = sub_1C6367DA8(v118, v723, *((uint64_t *)&v723 + 1), *(uint64_t *)v716, *(uint64_t *)&v716[2]);
          v117 = v703;
          if (v13)
            return (_QWORD *)v13;
          goto LABEL_148;
        }
        v251 = 0;
        v252 = v239;
        while (1)
        {
          v254 = *v237++;
          v253 = v254;
          if ((v254 & 0x80000000) == 0 && (v249 * v251 >= v239 || v249 * v251 != v253))
            break;
          ++v251;
          if (!--v252)
            goto LABEL_293;
        }
      }
      v117 = v703;
    }
  }
LABEL_148:
  if (*(_WORD *)(v7 + 24) != 149)
    goto LABEL_329;
  v129 = *(unsigned __int16 *)(v10 + 24);
  if (*((int *)v117 + 6) > 1)
    goto LABEL_152;
  if (v129 == 149)
  {
    v151 = (unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(v7 + 32) + 40)
                             + 16 * *(unsigned int *)(*(_QWORD *)(v7 + 32) + 8));
    v152 = *v151;
    v153 = (unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(v10 + 32) + 40)
                             + 16 * *(unsigned int *)(*(_QWORD *)(v10 + 32) + 8));
    if (v152 != *v153)
      goto LABEL_329;
    v154 = *((_QWORD *)v153 + 1);
    v155 = *((_QWORD *)v151 + 1);
    if (!v152 && v155 != v154)
      goto LABEL_329;
  }
  else if (v129 != 51)
  {
    goto LABEL_152;
  }
  v699 = v8;
  v157 = v714;
  v671 = *v117;
  v723 = *(_OWORD *)v714[5];
  v158 = sub_1C612FE00((llvm::EVT *)&v723, v105);
  v159 = (uint64_t *)v157[4];
  v160 = *v159;
  v161 = v159[1];
  v162 = v159[6];
  v674 = v159[5];
  *(_OWORD *)__src = *(_OWORD *)v157[5];
  v670 = v157;
  v163 = (_DWORD *)v157[10];
  sub_1C612FE00((llvm::EVT *)__src, v164);
  __src[0] = v720;
  __src[1] = (void *)0x400000000;
  *(_QWORD *)v682 = v160;
  *(_OWORD *)v717 = *(_OWORD *)(*(_QWORD *)(**(_QWORD **)(v160 + 32) + 40)
                              + 16 * *(unsigned int *)(*(_QWORD *)(v160 + 32) + 8));
  v166 = sub_1C612FE00((llvm::EVT *)v717, v165);
  v167 = v166;
  if (v158 != 2 * v166 || *(_WORD *)(v674 + 24) != 51)
    goto LABEL_295;
  v168 = v166;
  if (v166)
  {
    v169 = v166;
    v170 = &v163[v169];
    while (*v170 == -1)
    {
      ++v170;
      if (!(--v169 * 4))
        goto LABEL_195;
    }
LABEL_295:
    if (v166 <= v158)
    {
      v257 = 0;
      v258 = 0;
      *(_QWORD *)v694 = 4 * v166;
      v672 = v158 / v166;
      do
      {
        if (v167)
        {
          v259 = &v163[v167 * v258];
          v260 = *(_QWORD *)v694;
          while (*v259 == -1)
          {
            ++v259;
            v260 -= 4;
            if (!v260)
              goto LABEL_301;
          }
          v262 = 0;
          v263 = -1;
          do
          {
            v264 = v163[v257 + v262];
            if (v264 != -1)
            {
              if (v262 != v264 % (int)v167)
                goto LABEL_318;
              v265 = v264 / v167;
              if ((v263 & 0x80000000) != 0)
              {
                v263 = v265;
              }
              else
              {
                v11 = v265 == v263;
                v263 = v265;
                if (!v11)
                {
LABEL_318:
                  v14 = 0;
                  goto LABEL_319;
                }
              }
            }
            ++v262;
          }
          while (v167 != v262);
          v266 = *(unsigned __int16 *)(*(_QWORD *)v682 + 56);
          v267 = __OFSUB__(v263, v266);
          v268 = v263 - v266;
          if (v268 < 0 != v267)
            v269 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)v682 + 32) + 40 * v263);
          else
            v269 = (_QWORD *)(*(_QWORD *)(v674 + 32) + 40 * v268);
          v261 = (const char *)v269[1];
          v669 = (_QWORD *)*v269;
        }
        else
        {
LABEL_301:
          v669 = sub_1C61312D0(v671, (llvm *)v717[0], (uint64_t)v717[1]);
          v261 = v105;
        }
        v270 = LODWORD(__src[1]);
        if (LODWORD(__src[1]) >= (unint64_t)HIDWORD(__src[1]))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)__src, (uint64_t)v720, LODWORD(__src[1]) + 1, 16);
          v270 = LODWORD(__src[1]);
        }
        v271 = (char *)__src[0] + 16 * v270;
        *v271 = v669;
        v271[1] = v261;
        ++LODWORD(__src[1]);
        ++v258;
        v257 += v167;
      }
      while (v672 != v258);
    }
    v416 = (unsigned __int8 *)v670[8];
    *(_QWORD *)v716 = v416;
    if (v416)
      llvm::MetadataTracking::track((uint64_t)v716, v416, 2);
    v716[2] = *((_DWORD *)v670 + 15);
    v417 = *(_QWORD *)(v671 + 832);
    if (v417)
      v418 = *(unsigned __int16 *)(v417 + 8);
    else
      v418 = 0;
    v183 = sub_1C636D0C8(v671, (const char *)0x95, (const llvm::APInt *)v716, (llvm *)v723, *((uint64_t *)&v723 + 1), (uint64_t *)__src[0], LODWORD(__src[1]), v418);
    goto LABEL_564;
  }
LABEL_195:
  v171 = (llvm *)v717[0];
  v172 = v717[1];
  v173 = (unsigned __int8 *)v670[8];
  *(_QWORD *)v716 = v173;
  if (v173)
    llvm::MetadataTracking::track((uint64_t)v716, v173, 2);
  v716[2] = *((_DWORD *)v670 + 15);
  v174 = sub_1C5D41DE4(v671, v171, (uint64_t)v172, (uint64_t)v716, **(_QWORD **)(*(_QWORD *)v682 + 32), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v682 + 32) + 8), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v682 + 32) + 40), *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v682 + 32) + 48), v163, v168);
  v176 = v161 & 0xFFFFFFFF00000000 | v175;
  if (*(_QWORD *)v716)
    llvm::MetadataTracking::untrack((uint64_t)v716, *(unsigned __int8 **)v716);
  v178 = sub_1C61312D0(v671, (llvm *)v717[0], (uint64_t)v717[1]);
  v180 = v162 & 0xFFFFFFFF00000000 | v179;
  v181 = (unsigned __int8 *)v670[8];
  *(_QWORD *)v716 = v181;
  if (v181)
    llvm::MetadataTracking::track((uint64_t)v716, v181, 2);
  v716[2] = *((_DWORD *)v670 + 15);
  v182 = *(_QWORD *)(v671 + 832);
  if (v182)
    LOWORD(v182) = *(_WORD *)(v182 + 8);
  v183 = sub_1C5D56C70(v671, 149, (const llvm::APInt *)v716, (llvm *)v723, *((uint64_t *)&v723 + 1), (uint64_t)v174, v176, v177, (uint64_t)v178, v180, v182);
LABEL_564:
  v14 = (uint64_t)v183;
  v105 = *(const char **)v716;
  if (*(_QWORD *)v716)
    llvm::MetadataTracking::untrack((uint64_t)v716, *(unsigned __int8 **)v716);
LABEL_319:
  if (__src[0] != v720)
    free(__src[0]);
  v8 = v699;
  if (v14)
    return (_QWORD *)v14;
  v117 = v703;
  if (*(_WORD *)(v7 + 24) != 149)
    goto LABEL_329;
  v129 = *(unsigned __int16 *)(v10 + 24);
LABEL_152:
  if (v129 == 51 && *(_WORD *)(v7 + 56) == 2)
  {
    v130 = *(_QWORD *)(v7 + 32);
    if (*(_QWORD *)v130 == *(_QWORD *)(v130 + 40) && *(_DWORD *)(v130 + 8) == *(_DWORD *)(v130 + 48))
    {
      v131 = v712;
      if ((v712 & 0x80000000) == 0)
        v132 = v712;
      else
        v132 = v712 + 1;
      __src[0] = v720;
      __src[1] = (void *)0x800000000;
      if (v712)
      {
        v131 = 0;
        v133 = 0;
        v134 = v132 >> 1;
        do
        {
          v135 = *(_DWORD *)(a2[10] + 4 * v133);
          if (v135 >= v134)
            v136 = v134;
          else
            v136 = 0;
          if (v131 >= HIDWORD(__src[1]))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)__src, (uint64_t)v720, v131 + 1, 4);
            v131 = __src[1];
          }
          *((_DWORD *)__src[0] + v131) = v135 - v136;
          v131 = ++LODWORD(__src[1]);
          ++v133;
        }
        while (v133 != v712);
        v256 = __src[0];
      }
      else
      {
        v256 = v720;
      }
      if (((*(uint64_t (**)(uint64_t, _BYTE *, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v703[1] + 488))(v703[1], v256, v131, v713, *((_QWORD *)&v713 + 1)) & 1) != 0)
      {
        v379 = *(_QWORD *)(**(_QWORD **)(v7 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(v7 + 32) + 8);
        v381 = sub_1C61312D0(*v703, *(llvm **)v379, *(_QWORD *)(v379 + 8));
        v383 = v382;
        v384 = *v703;
        v385 = v714;
        v386 = (unsigned __int8 *)v714[8];
        *(_QWORD *)&v723 = v386;
        if (v386)
          llvm::MetadataTracking::track((uint64_t)&v723, v386, 2);
        DWORD2(v723) = *((_DWORD *)v385 + 15);
        v387 = *(uint64_t **)(v7 + 32);
        v388 = *v387;
        v389 = v387[1];
        v390 = *(_QWORD *)(v384 + 832);
        if (v390)
          LOWORD(v390) = *(_WORD *)(v390 + 8);
        v391 = sub_1C5D56C70(v384, 149, (const llvm::APInt *)&v723, (llvm *)v713, *((uint64_t *)&v713 + 1), v388, v389, v380, (uint64_t)v381, v383, v390);
        v393 = v392;
        if ((_QWORD)v723)
          llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
        v394 = *v703;
        v395 = v713;
        v396 = v714;
        v397 = (unsigned __int8 *)v714[8];
        *(_QWORD *)&v723 = v397;
        if (v397)
          llvm::MetadataTracking::track((uint64_t)&v723, v397, 2);
        DWORD2(v723) = *((_DWORD *)v396 + 15);
        v29 = sub_1C5D41DE4(v394, (llvm *)v395, *((uint64_t *)&v395 + 1), (uint64_t)&v723, (uint64_t)v391, v393, v10, v44, __src[0], LODWORD(__src[1]));
LABEL_27:
        v14 = (uint64_t)v29;
        if ((_QWORD)v723)
          llvm::MetadataTracking::untrack((uint64_t)&v723, (unsigned __int8 *)v723);
        v30 = __src[0];
        if (__src[0] == v720)
          return (_QWORD *)v14;
        goto LABEL_30;
      }
      if (__src[0] != v720)
        free(__src[0]);
      v117 = v703;
    }
  }
LABEL_329:
  v272 = *((_DWORD *)v117 + 6);
  if (v272 >= 2)
  {
LABEL_352:
    if (v272 > 2)
      goto LABEL_355;
    v273 = v713;
    if (!(_BYTE)v713)
      goto LABEL_355;
    goto LABEL_354;
  }
  v273 = v713;
  if (!(_BYTE)v713)
    goto LABEL_355;
  v274 = v703[1];
  if (*(_QWORD *)(v274 + 8 * v713 + 96)
    && (*(unsigned __int8 *)(v274 + 390 * v713 + 4012) | 4) == 4)
  {
    *(_QWORD *)&v723 = v703;
    *((_QWORD *)&v723 + 1) = &v712;
    v724[0] = &v714;
    v724[1] = &v713;
    *(_OWORD *)__src = *(_OWORD *)a2[5];
    v275 = (_DWORD *)a2[10];
    v276 = sub_1C612FE00((llvm::EVT *)__src, v105);
    if (*(_WORD *)(v10 + 24) == 149)
    {
      v13 = (uint64_t)sub_1C5CC017C((uint64_t)&v723, (const char *)v7, v8, v10, v44, v275, v276);
      if (v13)
        return (_QWORD *)v13;
    }
    if (*(_WORD *)(v7 + 24) != 149)
      goto LABEL_351;
    __src[0] = v720;
    __src[1] = (void *)0xC00000000;
    if (v276 >= 0xD)
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)__src, (uint64_t)v720, v276, 4);
      v277 = (int)__src[1];
      v279 = __src[0];
    }
    else
    {
      v277 = 0;
      v278 = 0;
      v279 = v720;
      v280 = (int *)v720;
      if (!(_DWORD)v276)
        goto LABEL_339;
    }
    memcpy(&v279[4 * v277], v275, 4 * v276);
    v278 = (int)__src[1];
    v280 = (int *)__src[0];
LABEL_339:
    v281 = v278 + v276;
    LODWORD(__src[1]) = v278 + v276;
    if (v278 + (_DWORD)v276)
    {
      v282 = v280;
      v283 = (v278 + v276);
      do
      {
        v284 = *v282;
        if ((*v282 & 0x80000000) == 0)
        {
          if (v284 >= (int)v281)
            v285 = -v281;
          else
            v285 = v278 + v276;
          *v282 = v285 + v284;
        }
        ++v282;
        --v283;
      }
      while (v283);
      v281 = __src[1];
    }
    v14 = (uint64_t)sub_1C5CC017C((uint64_t)&v723, (const char *)v10, v44, v7, v8, v280, v281);
    if (__src[0] != v720)
      free(__src[0]);
    if (v14)
      return (_QWORD *)v14;
LABEL_351:
    v272 = *((_DWORD *)v703 + 6);
    goto LABEL_352;
  }
LABEL_354:
  v286 = v703[1];
  if (!*(_QWORD *)(v286 + 8 * v273 + 96))
    goto LABEL_355;
  v695 = *v703;
  v701 = v8;
  *(_OWORD *)v716 = *(_OWORD *)a2[5];
  v684 = sub_1C612FE00((llvm::EVT *)v716, v105);
  v295 = (uint64_t *)a2[4];
  v296 = *v295;
  v297 = *(_QWORD *)(*v295 + 48);
  if (!v297 || *(_QWORD *)(v297 + 32))
    goto LABEL_383;
  v678 = v295[5];
  if (*(_WORD *)(v678 + 24) == 51)
    goto LABEL_593;
  v298 = *(_QWORD *)(v678 + 48);
  if (!v298 || *(_QWORD *)(v298 + 32))
    goto LABEL_383;
  v299 = v295[6];
  if (*(_WORD *)(v296 + 24) == 146)
  {
    if ((sub_1C5C9F100(v296, v295[1], 0) & 1) != 0)
      v300 = 1;
    else
      v300 = sub_1C6364C4C(v296);
  }
  else
  {
    v300 = 0;
  }
  if (*(_WORD *)(v678 + 24) != 146)
  {
    v415 = 0;
    if (!v300)
      goto LABEL_591;
    goto LABEL_525;
  }
  if ((sub_1C5C9F100(v678, v299, 0) & 1) == 0)
  {
    v415 = sub_1C6364C4C(v678);
    if (!v300)
      goto LABEL_591;
LABEL_525:
    if ((v415 & 1) != 0)
      goto LABEL_591;
    if ((sub_1C5D3DBE0(v296, 1, v294) & 1) != 0)
      goto LABEL_593;
LABEL_383:
    v8 = v701;
    goto LABEL_355;
  }
  v415 = 1;
LABEL_591:
  if (((v300 | v415 ^ 1) & 1) == 0 && !sub_1C5D3DBE0(v678, 1, v294))
    goto LABEL_383;
LABEL_593:
  if (*(_WORD *)(v296 + 24) == 146)
    v454 = v296;
  else
    v454 = 0;
  if (*(_WORD *)(v678 + 24) == 146)
    v455 = v678;
  else
    v455 = 0;
  if (v454)
    v456 = v455 == 0;
  else
    v456 = 1;
  if (!v456 && (v457 = sub_1C6367A48(v454, 0)) != 0)
  {
    v458 = (int)v105;
    v460 = v457 == sub_1C6367A48(v455, 0) && v458 == (_DWORD)v105;
    v676 = v460;
  }
  else
  {
    v676 = 0;
  }
  *(_QWORD *)&v723 = v724;
  *((_QWORD *)&v723 + 1) = 0x800000000;
  __src[0] = v720;
  __src[1] = (void *)0x1000000000;
  v722[1] = 0;
  v722[0] = 0;
  v721 = v722;
  *(_OWORD *)v717 = *(_OWORD *)a2[5];
  v461 = (int *)a2[10];
  v462 = sub_1C612FE00((llvm::EVT *)v717, v105);
  if (!v462)
  {
LABEL_613:
    *(_QWORD *)&v715 = sub_1C6131264((unsigned __int8 *)v716, v463, v464);
    *((_QWORD *)&v715 + 1) = v465;
    v467 = v715;
    if ((_BYTE)v715)
    {
      if (v715 - 120 >= 0x20
        && v715 - 2 >= 6
        && v715 - 15 >= 0x3C)
      {
LABEL_647:
        v485 = sub_1C6131264((unsigned __int8 *)v716, v465, v466);
        if ((v715 != v485 || !(_BYTE)v715 && *((_QWORD *)&v715 + 1) != v486) && DWORD2(v723))
        {
          v487 = 16 * DWORD2(v723);
          v488 = (_DWORD *)(v723 + 8);
          do
          {
            v489 = *((_QWORD *)v488 - 1);
            if (*(_WORD *)(v489 + 24) == 51)
            {
              *((_QWORD *)v488 - 1) = sub_1C61312D0(v695, (llvm *)v715, *((uint64_t *)&v715 + 1));
              *v488 = v490;
            }
            else
            {
              v491 = (_QWORD *)(*(_QWORD *)(v489 + 40) + 16 * *v488);
              v492 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v286 + 1192))(v286, *v491, v491[1], v715, *((_QWORD *)&v715 + 1));
              v493 = *((_QWORD *)v488 - 1);
              v494 = *(_QWORD *)v488;
              if (v492)
              {
                v495 = (void *)a2[8];
                v717[0] = v495;
                if (v495)
                  llvm::MetadataTracking::track((uint64_t)v717, (unsigned __int8 *)v495, 2);
                LODWORD(v717[1]) = *((_DWORD *)a2 + 15);
                v496 = sub_1C6366544(v695, v493, v494, (uint64_t)v717, v715, *((uint64_t *)&v715 + 1));
              }
              else
              {
                v498 = (void *)a2[8];
                v717[0] = v498;
                if (v498)
                  llvm::MetadataTracking::track((uint64_t)v717, (unsigned __int8 *)v498, 2);
                LODWORD(v717[1]) = *((_DWORD *)a2 + 15);
                v496 = sub_1C6366480(v695, v493, v494, (uint64_t)v717, v715, *((uint64_t *)&v715 + 1));
              }
              *((_QWORD *)v488 - 1) = v496;
              *v488 = v497;
              if (v717[0])
                llvm::MetadataTracking::untrack((uint64_t)v717, (unsigned __int8 *)v717[0]);
            }
            v488 += 4;
            v487 -= 16;
          }
          while (v487);
        }
        v499 = *(llvm **)v716;
        v500 = *(_QWORD *)&v716[2];
        v501 = (void *)a2[8];
        v717[0] = v501;
        if (v501)
          llvm::MetadataTracking::track((uint64_t)v717, (unsigned __int8 *)v501, 2);
        LODWORD(v717[1]) = *((_DWORD *)a2 + 15);
        v502 = *(_QWORD *)(v695 + 832);
        if (v502)
          v503 = *(unsigned __int16 *)(v502 + 8);
        else
          v503 = 0;
        v14 = (uint64_t)sub_1C636D0C8(v695, (const char *)0x92, (const llvm::APInt *)v717, v499, v500, (uint64_t *)v723, DWORD2(v723), v503);
        if (v717[0])
          llvm::MetadataTracking::untrack((uint64_t)v717, (unsigned __int8 *)v717[0]);
        goto LABEL_671;
      }
    }
    else
    {
      if ((*(_DWORD *)(v465 + 8) & 0xFE) == 0x12)
        v468 = *(unsigned __int8 *)(**(_QWORD **)(v465 + 16) + 8);
      else
        v468 = *(_DWORD *)(v465 + 8);
      if (v468 != 13)
        goto LABEL_647;
    }
    if (!DWORD2(v723))
      goto LABEL_647;
    v504 = 16 * DWORD2(v723);
    v505 = (unsigned int *)(v723 + 8);
    while (1)
    {
      v506 = *(_QWORD *)(*((_QWORD *)v505 - 1) + 40) + 16 * *v505;
      v508 = *(void **)v506;
      v507 = *(void **)(v506 + 8);
      if (v467 != *(_QWORD *)v506)
        break;
      v509 = &v715;
      if (!v467 && (void *)v465 != v507)
      {
        v717[0] = v508;
        v717[1] = v507;
        goto LABEL_682;
      }
LABEL_692:
      v465 = *((_QWORD *)v509 + 1);
      *(_QWORD *)&v715 = *(_QWORD *)v509;
      *((_QWORD *)&v715 + 1) = v465;
      v467 = v715;
      v505 += 4;
      v504 -= 16;
      if (!v504)
        goto LABEL_647;
    }
    v717[0] = *(void **)v506;
    v717[1] = v507;
    if (v467)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v715);
    else
LABEL_682:
      ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v715);
    v512 = ExtendedSizeInBits;
    v513 = v511;
    if ((_BYTE)v508)
      v514 = sub_1C47A8C74((unsigned __int8 *)v717);
    else
      v514 = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v717);
    if (v513 == 1 && v515 != 1 || v512 >= v514)
      v509 = &v715;
    else
      v509 = (__int128 *)(*(_QWORD *)(*((_QWORD *)v505 - 1) + 40) + 16 * *v505);
    goto LABEL_692;
  }
  v469 = 4 * v462;
  while (1)
  {
    v470 = *v461;
    v471 = (llvm *)sub_1C6131264((unsigned __int8 *)v716, v463, v464);
    v473 = sub_1C61312D0(v695, v471, v472);
    v717[0] = v473;
    v717[1] = (void *)v463;
    if (v470 < 0)
    {
      v479 = v473;
    }
    else
    {
      v474 = v684;
      if (v470 < v684)
        v474 = 0;
      v475 = v678;
      if (v470 < v684)
        v475 = v296;
      v476 = *(unsigned __int16 *)(v475 + 24);
      if (v476 == 155)
      {
        v480 = *(_QWORD *)(v475 + 32);
        v479 = *(_QWORD **)v480;
        v463 = *(unsigned int *)(v480 + 8);
        if (v470 != v474)
          v479 = sub_1C61312D0(v695, *(llvm **)(v479[5] + 16 * v463), *(_QWORD *)(v479[5] + 16 * v463 + 8));
        v717[0] = v479;
        LODWORD(v717[1]) = v463;
      }
      else
      {
        if (v476 != 146)
          break;
        v477 = *(_QWORD *)(v475 + 32) + 40 * (v470 - v474);
        v478 = *(_DWORD *)(v477 + 8);
        v479 = *(_QWORD **)v477;
        v717[0] = *(void **)v477;
        LODWORD(v717[1]) = v478;
      }
    }
    if (*((_WORD *)v479 + 12) == 51)
      goto LABEL_639;
    v481 = *((unsigned __int16 *)v479 + 12);
    if (v481 == 11 || v481 == 35 || v676 || v481 == 12 || v481 == 36)
      goto LABEL_639;
    if ((sub_1C5CC0834((uint64_t)__src, (uint64_t *)v717) & 0x100000000) == 0)
      break;
    v479 = v717[0];
LABEL_639:
    v482 = v717[1];
    v483 = DWORD2(v723);
    if (DWORD2(v723) >= (unint64_t)HIDWORD(v723))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v723, (uint64_t)v724, DWORD2(v723) + 1, 16);
      v483 = DWORD2(v723);
    }
    v484 = (_QWORD *)(v723 + 16 * v483);
    *v484 = v479;
    v484[1] = v482;
    ++DWORD2(v723);
    ++v461;
    v469 -= 4;
    if (!v469)
      goto LABEL_613;
  }
  v14 = 0;
LABEL_671:
  sub_1C47655E8((uint64_t)&v721, v722[0]);
  if (__src[0] != v720)
    free(__src[0]);
  if ((_QWORD *)v723 != v724)
    free((void *)v723);
  v8 = v701;
  if (v14)
    return (_QWORD *)v14;
LABEL_355:
  v287 = v703;
  if (*(_WORD *)(v7 + 24) != 216)
    goto LABEL_367;
  v288 = *(_QWORD *)(v7 + 48);
  if (!v288)
    goto LABEL_367;
  v289 = 1;
  do
  {
    if (*(_DWORD *)(v288 + 8) == (_DWORD)v8)
    {
      if (!v289)
        goto LABEL_367;
      --v289;
    }
    v288 = *(_QWORD *)(v288 + 32);
  }
  while (v288);
  if (v289 || *(_WORD *)(v10 + 24) != 51)
    goto LABEL_367;
  v290 = *((_DWORD *)v703 + 6);
  if (v290 < 2)
  {
    v287 = v703;
    if ((_BYTE)v713)
    {
      if (*(_QWORD *)(v703[1] + 8 * v713 + 96))
      {
        v400 = sub_1C636F4D4(v7, v8);
        if (*(_WORD *)(v400 + 24) == 153)
        {
          v402 = (_QWORD *)v400;
          v403 = *(_QWORD *)(v400 + 48);
          if (v403)
          {
            v404 = v8;
            v405 = 1;
            v287 = v703;
            do
            {
              if (*(_DWORD *)(v403 + 8) == (_DWORD)v105)
              {
                LODWORD(v8) = v404;
                if (!v405)
                  goto LABEL_367;
                --v405;
              }
              v403 = *(_QWORD *)(v403 + 32);
            }
            while (v403);
            v287 = v703;
            LODWORD(v8) = v404;
            if (!v405)
            {
              *(_QWORD *)v716 = sub_1C6131264((unsigned __int8 *)&v713, (uint64_t)v105, v401);
              *(_QWORD *)&v716[2] = v406;
              v715 = *(_OWORD *)v402[5];
              v408 = (void *)sub_1C6131264((unsigned __int8 *)&v715, v406, v407);
              v411 = (char)v408;
              *(_QWORD *)v710 = v408;
              *(_QWORD *)v711 = v409;
              if (LOBYTE(v716[0]) == v408)
              {
                v412 = &v715;
                if (!LOBYTE(v716[0]) && *(void **)&v716[2] != v409)
                {
                  __src[0] = v408;
                  __src[1] = v409;
                  goto LABEL_519;
                }
              }
              else
              {
                __src[0] = v408;
                __src[1] = v409;
                if (LOBYTE(v716[0]))
                  v413 = sub_1C47A8C74((unsigned __int8 *)v716);
                else
LABEL_519:
                  v413 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v716);
                v554 = v413;
                v555 = v414;
                if (v411)
                  v556 = sub_1C47A8C74((unsigned __int8 *)__src);
                else
                  v556 = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)__src);
                if (v555 == 1 && v409 != 1)
                {
                  v412 = &v715;
                }
                else
                {
                  v412 = &v715;
                  if (v554 < v556)
                    v412 = &v713;
                }
              }
              *(_OWORD *)v709 = *v412;
              *(_QWORD *)v707 = sub_1C6131264((unsigned __int8 *)v709, (uint64_t)v409, v410);
              *(_QWORD *)v708 = v105;
              if (!LOBYTE(v709[0]) || !*(_QWORD *)(v703[1] + 8 * LOBYTE(v709[0]) + 96))
                goto LABEL_809;
              if (LOBYTE(v710[0]))
                v557 = sub_1C47A8C74((unsigned __int8 *)v710);
              else
                v557 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v710);
              v605 = v557;
              if ((_DWORD)v558 == 1)
              if (LOBYTE(v707[0]))
                v606 = sub_1C47A8C74((unsigned __int8 *)v707);
              else
                v606 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v707);
              v607 = v606;
              if ((_DWORD)v105 == 1)
              if (v605 % v607)
                goto LABEL_809;
              if (LOBYTE(v716[0]))
                v608 = sub_1C47A8C74((unsigned __int8 *)v716);
              else
                v608 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v716);
              v610 = v608;
              if ((_DWORD)v609 == 1)
              if (LOBYTE(v707[0]))
                v611 = sub_1C47A8C74((unsigned __int8 *)v707);
              else
                v611 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v707);
              v612 = v611;
              if ((_DWORD)v105 == 1)
              if (v610 % v612)
              {
LABEL_809:
                v287 = v703;
                LODWORD(v8) = v404;
                goto LABEL_367;
              }
              if (LOBYTE(v710[0]))
                v617 = sub_1C47A8C74((unsigned __int8 *)v710);
              else
                v617 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v710);
              v619 = v617;
              if ((_DWORD)v618 == 1)
              if (LOBYTE(v707[0]))
                v620 = sub_1C47A8C74((unsigned __int8 *)v707);
              else
                v620 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v707);
              v622 = v620;
              if ((_DWORD)v621 == 1)
              if (LOBYTE(v716[0]))
                v623 = sub_1C47A8C74((unsigned __int8 *)v716);
              else
                v623 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v716);
              v625 = v623;
              if ((_DWORD)v624 == 1)
              v626 = v619 / v622;
              if (LOBYTE(v707[0]))
                v627 = sub_1C47A8C74((unsigned __int8 *)v707);
              else
                v627 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v707);
              v629 = v627;
              if ((_DWORD)v628 == 1)
              __src[0] = v720;
              __src[1] = (void *)0x800000000;
              *(_QWORD *)&v723 = v724;
              *((_QWORD *)&v723 + 1) = 0x800000000;
              *(_OWORD *)v717 = *(_OWORD *)v402[5];
              v630 = v625 / v629;
              v631 = (char *)v402[10];
              v632 = sub_1C612FE00((llvm::EVT *)v717, v628);
              llvm::narrowShuffleMaskElts((void *)v626, v631, v632, (uint64_t)__src);
              *(_OWORD *)v717 = *(_OWORD *)a2[5];
              v633 = (char *)a2[10];
              v635 = sub_1C612FE00((llvm::EVT *)v717, v634);
              llvm::narrowShuffleMaskElts((void *)v630, v633, v635, (uint64_t)&v723);
              v717[0] = v718;
              v717[1] = (void *)0x800000000;
              if (DWORD2(v723))
              {
                v636 = 0;
                v637 = (unsigned int *)v723;
                v638 = 4 * DWORD2(v723);
                do
                {
                  v639 = *v637;
                  if ((v639 & 0x80000000) != 0)
                    v640 = -1;
                  else
                    v640 = *((_DWORD *)__src[0] + v639);
                  if (v636 >= HIDWORD(v717[1]))
                  {
                    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v717, (uint64_t)v718, v636 + 1, 4);
                    v636 = v717[1];
                  }
                  *((_DWORD *)v717[0] + v636) = v640;
                  v636 = ++LODWORD(v717[1]);
                  ++v637;
                  v638 -= 4;
                }
                while (v638);
                v641 = v717[0];
              }
              else
              {
                v636 = 0;
                v641 = v718;
              }
              v642 = (uint64_t *)v402[4];
              v643 = *v642;
              v644 = v642[1];
              v645 = v642[5];
              v646 = v642[6];
              if (((*(uint64_t (**)(uint64_t, _BYTE *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)v703[1] + 488))(v703[1], v641, v636, v709[0], v709[1]) & 1) != 0)
              {
                v654 = v643;
              }
              else
              {
                v647 = v717[0];
                v648 = (int)v717[1];
                if (LODWORD(v717[1]))
                {
                  v649 = -LODWORD(v717[1]);
                  v650 = (int *)v717[0];
                  v651 = LODWORD(v717[1]);
                  do
                  {
                    v652 = *v650;
                    if ((*v650 & 0x80000000) == 0)
                    {
                      if (v652 >= v648)
                        v653 = v649;
                      else
                        v653 = v648;
                      *v650 = v653 + v652;
                    }
                    ++v650;
                    --v651;
                  }
                  while (v651);
                  v648 = (int)v717[1];
                }
                if (!(*(unsigned int (**)(uint64_t, void *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)v703[1]
                                                                                                + 488))(v703[1], v647, v648, v709[0], v709[1]))
                {
                  if (v717[0] != v718)
                    free(v717[0]);
                  if ((_QWORD *)v723 != v724)
                    free((void *)v723);
                  if (__src[0] != v720)
                    free(__src[0]);
                  goto LABEL_809;
                }
                v655 = v644 & 0xFFFFFFFF00000000 | v646;
                v646 = v646 & 0xFFFFFFFF00000000 | v644;
                v644 = v655;
                v654 = v645;
                v645 = v643;
              }
              v689 = sub_1C6367DA8(*v703, v709[0], v709[1], v654, v644);
              v657 = v656;
              v658 = sub_1C6367DA8(*v703, v709[0], v709[1], v645, v646);
              v660 = v659;
              v661 = *v703;
              v662 = v713;
              v663 = (llvm *)v709[0];
              v664 = v709[1];
              v665 = v714;
              v666 = (unsigned __int8 *)v714[8];
              v705 = v666;
              if (v666)
                llvm::MetadataTracking::track((uint64_t)&v705, v666, 2);
              v706 = *((_DWORD *)v665 + 15);
              v667 = sub_1C5D41DE4(v661, v663, v664, (uint64_t)&v705, v689, v657, v658, v660, v717[0], LODWORD(v717[1]));
              v14 = sub_1C6367DA8(v661, v662, *((uint64_t *)&v662 + 1), (uint64_t)v667, v668);
              if (v705)
                llvm::MetadataTracking::untrack((uint64_t)&v705, v705);
              if (v717[0] != v718)
                free(v717[0]);
              if ((_QWORD *)v723 != v724)
                free((void *)v723);
              v30 = __src[0];
LABEL_472:
              if (v30 == v720)
                return (_QWORD *)v14;
LABEL_30:
              free(v30);
              return (_QWORD *)v14;
            }
          }
        }
      }
    }
LABEL_367:
    v290 = *((_DWORD *)v287 + 6);
  }
  LODWORD(v715) = v712;
  *((_QWORD *)&v715 + 1) = &v713;
  if (v290 > 2 || !(_BYTE)v713 || !*(_QWORD *)(v703[1] + 8 * v713 + 96))
    goto LABEL_733;
  if (*(_WORD *)(v10 + 24) == 153)
  {
    if (*(_WORD *)(v7 + 24) == 153)
    {
      if (sub_1C636FD00(*(_QWORD *)(v7 + 80), **(const char ***)(v7 + 40), *(_QWORD *)(*(_QWORD *)(v7 + 40) + 8))
        && !sub_1C636FD00(*(_QWORD *)(v10 + 80), **(const char ***)(v10 + 40), *(_QWORD *)(*(_QWORD *)(v10 + 40) + 8)))
      {
        goto LABEL_380;
      }
    }
    else
    {
      v291 = *(_QWORD *)(v10 + 32);
      v292 = *(_DWORD *)(v291 + 8) == (_DWORD)v8 && v7 == *(_QWORD *)v291;
      if (v292
        || (v293 = *(_QWORD *)(v291 + 40), *(_WORD *)(v293 + 24) == 51)
        || v7 == v293 && *(_DWORD *)(v291 + 48) == (_DWORD)v8)
      {
LABEL_380:
        v12 = *v703;
        return sub_1C6367B34(v12, (uint64_t)a2);
      }
    }
  }
  v301 = 0;
  v302 = 0;
  while (2)
  {
    v303 = v301;
    v304 = v714[4];
    v305 = *(_QWORD *)(v304 + 40 * v302);
    if (*(_WORD *)(v305 + 24) != 153 || (v306 = *(_QWORD *)(v305 + 48)) == 0)
    {
LABEL_399:
      v301 = 1;
      v302 = 1;
      if ((v303 & 1) == 0)
        continue;
      v309 = *(unsigned __int16 *)(v7 + 24);
      if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)v703[1] + 1136))(v703[1], v309))
      {
        v310 = *(_QWORD *)(v7 + 48);
        if (v310)
        {
          do
          {
            if (*(_QWORD **)(v310 + 16) != v714)
              goto LABEL_733;
            v310 = *(_QWORD *)(v310 + 32);
          }
          while (v310);
          v311 = *(unsigned __int16 *)(v10 + 24);
          if (v311 == 51)
          {
            v312 = v10;
            v313 = v10;
            LODWORD(v314) = v44;
          }
          else
          {
            if ((_DWORD)v309 != v311)
              goto LABEL_733;
            v377 = *(_QWORD *)(v10 + 48);
            if (!v377)
              goto LABEL_733;
            do
            {
              if (*(_QWORD **)(v377 + 16) != v714)
                goto LABEL_733;
              v377 = *(_QWORD *)(v377 + 32);
            }
            while (v377);
            v378 = *(uint64_t **)(v10 + 32);
            v313 = *v378;
            v314 = v378[1];
            v312 = v378[5];
            v44 = v378[6];
          }
          v315 = *(_QWORD *)(v7 + 32);
          v316 = *(_QWORD *)v315;
          v317 = *(_DWORD *)(v315 + 8);
          v318 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v315 + 40) + 16 * v317);
          v319 = *v318;
          if (v319 == v713)
          {
            v320 = *((_QWORD *)v318 + 1);
            if (v319 || v320 == *((_QWORD *)&v713 + 1))
            {
              v322 = (unsigned __int8 *)(*(_QWORD *)(v313 + 40) + 16 * v314);
              if (*v322 == v319)
              {
                v323 = *((_QWORD *)v322 + 1);
                if (v319 || v323 == *((_QWORD *)&v713 + 1))
                {
                  *(_QWORD *)v696 = *(unsigned int *)(v315 + 48);
                  v702 = *(_QWORD *)(v315 + 40);
                  v325 = (unsigned __int8 *)(*(_QWORD *)(v702 + 40) + 16 * *(_QWORD *)v696);
                  if (*v325 == v319)
                  {
                    v326 = *((_QWORD *)v325 + 1);
                    if (v319 || v326 == *((_QWORD *)&v713 + 1))
                    {
                      v328 = (unsigned __int8 *)(*(_QWORD *)(v312 + 40) + 16 * v44);
                      if (*v328 == v319)
                      {
                        v329 = *((_QWORD *)v328 + 1);
                        if (v319 || v329 == *((_QWORD *)&v713 + 1))
                        {
                          v331 = *(unsigned __int16 *)(v316 + 24);
                          if (v331 == 153
                            || *(_WORD *)(v313 + 24) == 153
                            || *(_WORD *)(v702 + 24) == 153
                            || *(_WORD *)(v312 + 24) == 153)
                          {
                            *(_QWORD *)v716 = 0;
                            v716[2] = 0;
                            *(_QWORD *)v710 = 0;
                            v711[0] = 0;
                            __src[0] = v720;
                            __src[1] = (void *)0x400000000;
                            if (v331 != 153)
                              goto LABEL_436;
                            v332 = *(_QWORD *)(v316 + 48);
                            if (!v332)
                              goto LABEL_436;
                            do
                            {
                              if (*(_QWORD *)(v332 + 16) != v7)
                                goto LABEL_436;
                              v332 = *(_QWORD *)(v332 + 32);
                            }
                            while (v332);
                            if (!sub_1C5CC048C((uint64_t)&v715, 0, (uint64_t)a2, v316, v313, v314, v703[1], (uint64_t *)v716, (uint64_t *)v710, (uint64_t)__src))goto LABEL_436;
                            v723 = *(_OWORD *)*(_QWORD *)(v316 + 40);
                            v687 = *(_DWORD **)(v316 + 80);
                            v419 = sub_1C612FE00((llvm::EVT *)&v723, v105);
                            if (v419)
                            {
                              v420 = 4 * v419;
                              while ((*v687 & 0x80000000) == 0)
                              {
                                ++v687;
                                v420 -= 4;
                                if (!v420)
                                  goto LABEL_539;
                              }
                            }
                            else
                            {
LABEL_539:
                              if (LODWORD(__src[1]))
                              {
                                v421 = __src[0];
                                v422 = 4 * LODWORD(__src[1]);
                                while ((*v421 & 0x80000000) == 0)
                                {
                                  ++v421;
                                  v422 -= 4;
                                  if (!v422)
                                    goto LABEL_776;
                                }
LABEL_436:
                                if (v313)
                                {
                                  if (*(_WORD *)(v313 + 24) == 153)
                                  {
                                    v333 = *(_QWORD *)(v313 + 48);
                                    if (v333)
                                    {
                                      while (*(_QWORD *)(v333 + 16) == v10)
                                      {
                                        v333 = *(_QWORD *)(v333 + 32);
                                        if (!v333)
                                        {
                                          if (!sub_1C5CC048C((uint64_t)&v715, 1, (uint64_t)a2, v313, v316, v317, v703[1], (uint64_t *)v716, (uint64_t *)v710, (uint64_t)__src))break;
                                          v723 = *(_OWORD *)*(_QWORD *)(v313 + 40);
                                          v688 = *(_DWORD **)(v313 + 80);
                                          v596 = sub_1C612FE00((llvm::EVT *)&v723, v105);
                                          if (v596)
                                          {
                                            v597 = 4 * v596;
                                            while ((*v688 & 0x80000000) == 0)
                                            {
                                              ++v688;
                                              v597 -= 4;
                                              if (!v597)
                                                goto LABEL_772;
                                            }
                                            goto LABEL_776;
                                          }
LABEL_772:
                                          if (!LODWORD(__src[1]))
                                            goto LABEL_776;
                                          v598 = __src[0];
                                          v599 = 4 * LODWORD(__src[1]);
                                          while ((*v598 & 0x80000000) == 0)
                                          {
                                            ++v598;
                                            v599 -= 4;
                                            if (!v599)
                                              goto LABEL_776;
                                          }
                                          break;
                                        }
                                      }
                                    }
                                  }
                                }
                                v723 = *(_OWORD *)a2[5];
                                v685 = (_BYTE *)a2[10];
                                sub_1C612FE00((llvm::EVT *)&v723, v105);
                                v723 = *(_OWORD *)a2[5];
                                v679 = a2[10];
                                v335 = sub_1C612FE00((llvm::EVT *)&v723, v334);
                                v336 = 0;
                                LODWORD(__src[1]) = 0;
                                v673 = (_BYTE *)(v679 + 4 * v335);
                                v680 = v673 - v685;
                                v337 = (v673 - v685) >> 2;
                                if (v337 > HIDWORD(__src[1]))
                                {
                                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)__src, (uint64_t)v720, v337, 4);
                                  v336 = __src[1];
                                }
                                if (v685 != v673)
                                {
                                  memcpy((char *)__src[0] + 4 * v336, v685, v680);
                                  v336 = __src[1];
                                }
                                v686 = 0;
                                LODWORD(__src[1]) = v336 + (v680 >> 2);
                                *(_QWORD *)v716 = v316;
                                v716[2] = v317;
                                *(_QWORD *)v710 = v313;
                                v711[0] = v314;
LABEL_444:
                                v709[0] = 0;
                                LODWORD(v709[1]) = 0;
                                *(_QWORD *)v707 = 0;
                                v708[0] = 0;
                                *(_QWORD *)&v723 = v724;
                                *((_QWORD *)&v723 + 1) = 0x400000000;
                                if (v702)
                                {
                                  if (*(_WORD *)(v702 + 24) == 153)
                                  {
                                    v338 = *(_QWORD *)(v702 + 48);
                                    if (v338)
                                    {
                                      while (*(_QWORD *)(v338 + 16) == v7)
                                      {
                                        v338 = *(_QWORD *)(v338 + 32);
                                        if (!v338)
                                        {
                                          if (!sub_1C5CC048C((uint64_t)&v715, 0, (uint64_t)a2, v702, v312, v44, v703[1], v709, (uint64_t *)v707, (uint64_t)&v723))break;
                                          *(_OWORD *)v717 = *(_OWORD *)*(_QWORD *)(v702 + 40);
                                          v423 = *(_DWORD **)(v702 + 80);
                                          v424 = sub_1C612FE00((llvm::EVT *)v717, v105);
                                          if (v424)
                                          {
                                            v425 = 4 * v424;
                                            while ((*v423 & 0x80000000) == 0)
                                            {
                                              ++v423;
                                              v425 -= 4;
                                              if (!v425)
                                                goto LABEL_551;
                                            }
                                            goto LABEL_455;
                                          }
LABEL_551:
                                          if (!DWORD2(v723))
                                            goto LABEL_455;
                                          v426 = (_DWORD *)v723;
                                          v427 = 4 * DWORD2(v723);
                                          while ((*v426 & 0x80000000) == 0)
                                          {
                                            ++v426;
                                            v427 -= 4;
                                            if (!v427)
                                              goto LABEL_455;
                                          }
                                          break;
                                        }
                                      }
                                    }
                                  }
                                }
                                if (v312)
                                {
                                  if (*(_WORD *)(v312 + 24) == 153)
                                  {
                                    v339 = *(_QWORD *)(v312 + 48);
                                    if (v339)
                                    {
                                      while (*(_QWORD *)(v339 + 16) == v10)
                                      {
                                        v339 = *(_QWORD *)(v339 + 32);
                                        if (!v339)
                                        {
                                          if (!sub_1C5CC048C((uint64_t)&v715, 1, (uint64_t)a2, v312, v702, v696[0], v703[1], v709, (uint64_t *)v707, (uint64_t)&v723))break;
                                          *(_OWORD *)v717 = *(_OWORD *)*(_QWORD *)(v312 + 40);
                                          v600 = *(_DWORD **)(v312 + 80);
                                          v601 = sub_1C612FE00((llvm::EVT *)v717, v105);
                                          if (v601)
                                          {
                                            v602 = 4 * v601;
                                            while ((*v600 & 0x80000000) == 0)
                                            {
                                              ++v600;
                                              v602 -= 4;
                                              if (!v602)
                                                goto LABEL_784;
                                            }
                                            goto LABEL_455;
                                          }
LABEL_784:
                                          if (!DWORD2(v723))
                                            goto LABEL_455;
                                          v603 = (_DWORD *)v723;
                                          v604 = 4 * DWORD2(v723);
                                          while ((*v603 & 0x80000000) == 0)
                                          {
                                            ++v603;
                                            v604 -= 4;
                                            if (!v604)
                                              goto LABEL_455;
                                          }
                                          break;
                                        }
                                      }
                                    }
                                  }
                                }
                                *(_OWORD *)v717 = *(_OWORD *)a2[5];
                                v340 = (_BYTE *)a2[10];
                                sub_1C612FE00((llvm::EVT *)v717, v105);
                                *(_OWORD *)v717 = *(_OWORD *)a2[5];
                                v341 = a2[10];
                                v343 = sub_1C612FE00((llvm::EVT *)v717, v342);
                                v344 = 0;
                                v345 = (_BYTE *)(v341 + 4 * v343);
                                DWORD2(v723) = 0;
                                v346 = (v345 - v340) >> 2;
                                if (v346 > HIDWORD(v723))
                                {
                                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v723, (uint64_t)v724, v346, 4);
                                  v344 = DWORD2(v723);
                                }
                                if (v340 != v345)
                                {
                                  memcpy((void *)(v723 + 4 * v344), v340, v345 - v340);
                                  v344 = DWORD2(v723);
                                }
                                DWORD2(v723) = v344 + ((unint64_t)(v345 - v340) >> 2);
                                v709[0] = v702;
                                LODWORD(v709[1]) = v696[0];
                                *(_QWORD *)v707 = v312;
                                v708[0] = v44;
                                if (v686)
                                {
LABEL_455:
                                  v347 = v714;
                                  v348 = (void *)v714[8];
                                  v717[0] = v348;
                                  if (v348)
                                    llvm::MetadataTracking::track((uint64_t)v717, (unsigned __int8 *)v348, 2);
                                  LODWORD(v717[1]) = *((_DWORD *)v347 + 15);
                                  v349 = *v703;
                                  v350 = v713;
                                  v351 = *(_QWORD **)v716;
                                  if (*(_QWORD *)v716)
                                  {
                                    v352 = v716[2];
                                  }
                                  else
                                  {
                                    v351 = sub_1C61312D0(v349, (llvm *)v713, *((uint64_t *)&v713 + 1));
                                    v352 = v613;
                                  }
                                  v353 = *(_QWORD **)v710;
                                  if (*(_QWORD *)v710)
                                  {
                                    v354 = v711[0];
                                  }
                                  else
                                  {
                                    v353 = sub_1C61312D0(*v703, (llvm *)v713, *((uint64_t *)&v713 + 1));
                                    v354 = v614;
                                  }
                                  v355 = sub_1C5D41DE4(v349, (llvm *)v350, *((uint64_t *)&v350 + 1), (uint64_t)v717, (uint64_t)v351, v352, (uint64_t)v353, v354, __src[0], LODWORD(__src[1]));
                                  v357 = v356;
                                  v358 = *v703;
                                  v359 = v713;
                                  v360 = (_QWORD *)v709[0];
                                  if (v709[0])
                                  {
                                    v361 = v709[1];
                                  }
                                  else
                                  {
                                    v360 = sub_1C61312D0(v358, (llvm *)v713, *((uint64_t *)&v713 + 1));
                                    v361 = v615;
                                  }
                                  v362 = *(_QWORD **)v707;
                                  if (*(_QWORD *)v707)
                                  {
                                    v363 = v708[0];
                                  }
                                  else
                                  {
                                    v362 = sub_1C61312D0(*v703, (llvm *)v713, *((uint64_t *)&v713 + 1));
                                    v363 = v616;
                                  }
                                  v364 = sub_1C5D41DE4(v358, (llvm *)v359, *((uint64_t *)&v359 + 1), (uint64_t)v717, (uint64_t)v360, v361, (uint64_t)v362, v363, (void *)v723, DWORD2(v723));
                                  v367 = *(_QWORD *)(*v703 + 832);
                                  if (v367)
                                    LOWORD(v367) = *(_WORD *)(v367 + 8);
                                  v14 = (uint64_t)sub_1C5D56C70(*v703, v309, (const llvm::APInt *)v717, (llvm *)v713, *((uint64_t *)&v713 + 1), (uint64_t)v355, v357, v366, (uint64_t)v364, v365, v367);
                                  if (v717[0])
                                    llvm::MetadataTracking::untrack((uint64_t)v717, (unsigned __int8 *)v717[0]);
                                  if ((_QWORD *)v723 != v724)
                                    free((void *)v723);
                                  v30 = __src[0];
                                  goto LABEL_472;
                                }
                                if ((_QWORD *)v723 != v724)
                                  free((void *)v723);
                                if (__src[0] != v720)
                                  free(__src[0]);
                                goto LABEL_733;
                              }
                            }
LABEL_776:
                            v686 = 1;
                            goto LABEL_444;
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
LABEL_733:
      v559 = (_QWORD *)a2[4];
      v560 = *v559;
      if (*(_WORD *)(*v559 + 24) != 149)
        return 0;
      if (*(_WORD *)(v560 + 56) != 2)
        return 0;
      v561 = v559[5];
      if (*(_WORD *)(v561 + 24) != 149
        || *(_WORD *)(v561 + 56) != 2
        || *(_WORD *)(*(_QWORD *)(*(_QWORD *)(v560 + 32) + 40) + 24) != 51
        || *(_WORD *)(*(_QWORD *)(*(_QWORD *)(v561 + 32) + 40) + 24) != 51)
      {
        return 0;
      }
      v562 = (_QWORD *)*v703;
      *(_OWORD *)__src = *(_OWORD *)a2[5];
      v563 = a2[10];
      sub_1C612FE00((llvm::EVT *)__src, v105);
      *(_OWORD *)v717 = *(_OWORD *)a2[5];
      v565 = sub_1C612FE00((llvm::EVT *)v717, v564);
      v566 = v565 >> 1;
      __src[0] = v720;
      __src[1] = (void *)0x1000000000;
      sub_1C4893E04((char *)__src, v566, -1);
      *(_QWORD *)&v723 = v724;
      *((_QWORD *)&v723 + 1) = 0x1000000000;
      sub_1C4893E04((char *)&v723, v566, -1);
      if (v565)
      {
        v569 = 0;
        v570 = v723;
        v571 = __src[0];
        do
        {
          v572 = *(_DWORD *)(v563 + 4 * v569);
          if (v572 != -1 && v572 % v565 < v566)
          {
            if (v572 >= (int)v565)
              v573 = v565 >> 1;
            else
              v573 = 0;
            v574 = v572 - v573;
            v575 = (_DWORD *)(v570 + 4 * (v569 - v566));
            if (v569 < v566)
              v575 = v571;
            *v575 = v574;
          }
          ++v569;
          ++v571;
        }
        while (v565 != v569);
      }
      v576 = v562[3];
      v577 = (llvm::LLVMContext *)v562[7];
      v578 = sub_1C6131264((unsigned __int8 *)v717, v567, v568);
      v580 = (llvm *)sub_1C4816F98(v577, v578, v579, v566, 0);
      v582 = v581;
      if (((*(uint64_t (**)(uint64_t, void *, _QWORD, llvm *, uint64_t))(*(_QWORD *)v576 + 488))(v576, __src[0], LODWORD(__src[1]), v580, v581) & 1) != 0&& (*(unsigned int (**)(uint64_t, _QWORD, _QWORD, llvm *, uint64_t))(*(_QWORD *)v576 + 488))(v576, v723, DWORD2(v723), v580, v582))
      {
        v583 = *(uint64_t **)(v560 + 32);
        v584 = *v583;
        v585 = v583[1];
        v586 = *(uint64_t **)(v561 + 32);
        v587 = *v586;
        v588 = v586[1];
        v589 = (unsigned __int8 *)a2[8];
        *(_QWORD *)v716 = v589;
        if (v589)
          llvm::MetadataTracking::track((uint64_t)v716, v589, 2);
        v716[2] = *((_DWORD *)a2 + 15);
        v590 = sub_1C5D41DE4((uint64_t)v562, v580, v582, (uint64_t)v716, v584, v585, v587, v588, __src[0], LODWORD(__src[1]));
        v704 = v591;
        v592 = sub_1C5D41DE4((uint64_t)v562, v580, v582, (uint64_t)v716, v584, v585, v587, v588, (void *)v723, DWORD2(v723));
        v595 = v562[104];
        if (v595)
          LOWORD(v595) = *(_WORD *)(v595 + 8);
        v14 = (uint64_t)sub_1C5D56C70((uint64_t)v562, 149, (const llvm::APInt *)v716, (llvm *)v717[0], (uint64_t)v717[1], (uint64_t)v590, v704, v594, (uint64_t)v592, v593, v595);
        if (*(_QWORD *)v716)
          llvm::MetadataTracking::untrack((uint64_t)v716, *(unsigned __int8 **)v716);
      }
      else
      {
        v14 = 0;
      }
      if ((_QWORD *)v723 != v724)
        free((void *)v723);
      if (__src[0] != v720)
        free(__src[0]);
      return (_QWORD *)v14;
    }
    break;
  }
  do
  {
    if (*(_QWORD **)(v306 + 16) != v714)
      goto LABEL_399;
    v306 = *(_QWORD *)(v306 + 32);
  }
  while (v306);
  *(_QWORD *)&v723 = 0;
  DWORD2(v723) = 0;
  v717[0] = 0;
  LODWORD(v717[1]) = 0;
  __src[0] = v720;
  __src[1] = (void *)0x400000000;
  v307 = sub_1C5CC048C((uint64_t)&v715, v303 & 1, (uint64_t)a2, v305, *(_QWORD *)(v304 + 40 * (v302 ^ 1)), *(_QWORD *)(v304 + 40 * (v302 ^ 1) + 8), v703[1], (uint64_t *)&v723, (uint64_t *)v717, (uint64_t)__src);
  v308 = __src[0];
  if (!v307)
  {
    if (__src[0] != v720)
      free(__src[0]);
    goto LABEL_399;
  }
  if (LODWORD(__src[1]))
  {
    v368 = 4 * LODWORD(__src[1]);
    while ((*v308 & 0x80000000) != 0)
    {
      ++v308;
      v368 -= 4;
      if (!v368)
        goto LABEL_478;
    }
    v369 = *v703;
    v370 = v713;
    v371 = v714;
    v372 = (unsigned __int8 *)v714[8];
    *(_QWORD *)v716 = v372;
    if (v372)
      llvm::MetadataTracking::track((uint64_t)v716, v372, 2);
    v716[2] = *((_DWORD *)v371 + 15);
    v373 = (_QWORD *)v723;
    if ((_QWORD)v723)
    {
      v374 = DWORD2(v723);
    }
    else
    {
      v373 = sub_1C61312D0(*v703, (llvm *)v713, *((uint64_t *)&v713 + 1));
      v374 = v398;
    }
    v375 = v717[0];
    if (v717[0])
    {
      v376 = v717[1];
    }
    else
    {
      v375 = sub_1C61312D0(*v703, (llvm *)v713, *((uint64_t *)&v713 + 1));
      v376 = v399;
    }
    v14 = (uint64_t)sub_1C5D41DE4(v369, (llvm *)v370, *((uint64_t *)&v370 + 1), (uint64_t)v716, (uint64_t)v373, v374, (uint64_t)v375, v376, __src[0], LODWORD(__src[1]));
    if (*(_QWORD *)v716)
      llvm::MetadataTracking::untrack((uint64_t)v716, *(unsigned __int8 **)v716);
  }
  else
  {
LABEL_478:
    v14 = (uint64_t)sub_1C61312D0(*v703, (llvm *)v713, *((uint64_t *)&v713 + 1));
  }
  v30 = __src[0];
  if (__src[0] != v720)
    goto LABEL_30;
  return (_QWORD *)v14;
}

uint64_t sub_1C5C9C9CC(uint64_t a1)
{
  int v1;
  unsigned int *v2;
  uint64_t result;
  uint64_t v4;
  unsigned int *v5;
  uint64_t v6;

  v1 = *(unsigned __int16 *)(a1 + 56);
  if (!*(_WORD *)(a1 + 56))
    return 0;
  v2 = *(unsigned int **)(a1 + 32);
  result = *(_QWORD *)v2;
  if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v2 + 40) + 16 * v2[2]) == 1)
    return result;
  v4 = (v1 - 1);
  result = *(_QWORD *)&v2[10 * v4];
  if (*(_BYTE *)(*(_QWORD *)(result + 40) + 16 * v2[10 * v4 + 2]) == 1)
    return result;
  if (v4 < 2)
    return 0;
  v5 = v2 + 12;
  v6 = v4 - 1;
  while (1)
  {
    result = *((_QWORD *)v5 - 1);
    if (*(_BYTE *)(*(_QWORD *)(result + 40) + 16 * *v5) == 1)
      break;
    v5 += 10;
    if (!--v6)
      return 0;
  }
  return result;
}

void *sub_1C5C9CA70(uint64_t a1, int a2, uint64_t a3, unsigned int a4)
{
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int *v20;
  _DWORD *v21;
  uint64_t v22;
  void *result;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v8 = *(_QWORD **)a1;
  v9 = sub_1C477672C(*(_QWORD *)a1, a3);
  v10 = v8[1];
  v11 = 16;
  if (v10 == *v8)
    v11 = 20;
  if (v9 != (_QWORD *)(v10 + 8 * *(unsigned int *)((char *)v8 + v11)))
  {
    v12 = *(_BYTE **)(a1 + 16);
    **(_BYTE **)(a1 + 8) = 1;
    *v12 = 1;
    v13 = *(_QWORD *)(a1 + 24);
    v14 = *(unsigned int *)(v13 + 8);
    if ((_DWORD)v14)
    {
      v15 = 0;
      v16 = *(_QWORD **)v13;
      while (*v16 != a3)
      {
        ++v15;
        v16 += 2;
        if (v14 == v15)
        {
          v15 = v14;
          goto LABEL_11;
        }
      }
      LODWORD(v14) = v15;
    }
    else
    {
      v15 = 0;
    }
LABEL_11:
    v17 = *(_QWORD *)(a1 + 32);
    v18 = *(_DWORD *)(v17 + 8);
    if (v18 > a2 + 1)
    {
      v19 = ~a2 + v18;
      v20 = (unsigned int *)(*(_QWORD *)v17 + 16 * (a2 + 1) + 8);
      do
      {
        if (*v20 == (_DWORD)v14)
          *v20 = a4;
        v20 += 4;
        --v19;
      }
      while (v19);
    }
    v21 = *(_DWORD **)(a1 + 48);
    v22 = **(_QWORD **)(a1 + 40);
    *(_DWORD *)(v22 + 4 * a4) += *(_DWORD *)(v22 + 4 * v15);
    *(_DWORD *)(v22 + 4 * v15) = 0;
    --*v21;
  }
  result = sub_1C4774094(*(llvm::SmallPtrSetImplBase **)(a1 + 56), a3);
  if (v24)
  {
    v26 = a1 + 32;
    v25 = *(_QWORD *)(a1 + 32);
    ++*(_DWORD *)(**(_QWORD **)(v26 + 8) + 4 * a4);
    v27 = *(unsigned int *)(v25 + 8);
    if (v27 >= *(_DWORD *)(v25 + 12))
    {
      result = llvm::SmallVectorBase<unsigned int>::grow_pod(v25, v25 + 16, v27 + 1, 16);
      LODWORD(v27) = *(_DWORD *)(v25 + 8);
    }
    v28 = (uint64_t *)(*(_QWORD *)v25 + 16 * v27);
    *v28 = a3;
    v28[1] = a4;
    ++*(_DWORD *)(v25 + 8);
  }
  return result;
}

uint64_t *sub_1C5C9CC08(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unsigned __int8 *v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  llvm *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v32;
  uint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v57;
  uint64_t v60;
  unsigned int v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  _BOOL4 v65;
  unsigned int v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  __int128 v101;
  unsigned __int8 *v102;
  uint64_t v103;
  llvm *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unsigned __int8 *v111;
  uint64_t v112;
  uint64_t *v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  void (**v122)(void);
  uint64_t *v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;
  int v129;
  _QWORD *v130;
  uint64_t **v131;
  unsigned int *v132;
  int v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unint64_t v139;
  uint64_t v140;
  unint64_t v141;
  uint64_t *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  char v148;
  uint64_t v149;
  int v150;
  uint64_t v151;
  __int128 v152;
  unint64_t v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  unint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  __int16 v164;
  uint64_t v165;
  __int128 v166;
  uint64_t *v167;
  uint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  __int16 v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  unsigned __int8 *v188;
  int v189;
  __int128 v190;
  __int128 v191;
  _QWORD v192[3];
  _QWORD *v193;
  __int128 v194;
  __int128 *v195;
  uint64_t v196;
  uint64_t v197;

  v197 = *MEMORY[0x1E0C80C00];
  v4 = *(uint64_t **)(a2 + 32);
  v5 = *v4;
  v6 = v4[1];
  v7 = v4[5];
  v8 = v4[6];
  v190 = *(_OWORD *)(*(_QWORD *)(*v4 + 40) + 16 * v6);
  v9 = *(unsigned __int8 **)(a2 + 64);
  v188 = v9;
  if (v9)
    llvm::MetadataTracking::track((uint64_t)&v188, v9, 2);
  v189 = *(_DWORD *)(a2 + 60);
  if (*(_WORD *)(v5 + 24) == 51)
    goto LABEL_4;
  if (*(_WORD *)(v7 + 24) == 51)
  {
    v10 = (uint64_t *)v7;
    goto LABEL_27;
  }
  v11 = *(_QWORD *)a1;
  *(_QWORD *)&v194 = v5;
  DWORD2(v194) = v6;
  v195 = (__int128 *)v7;
  LODWORD(v196) = v8;
  v12 = sub_1C5D53628(v11, 56, (const char *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), (uint64_t)&v194, 2);
  if (v12)
    goto LABEL_26;
  if (sub_1C5D583CC(*(_QWORD *)a1, v5) && !sub_1C5D583CC(*(_QWORD *)a1, v7))
  {
    v24 = *(_QWORD *)a1;
    v26 = *((_QWORD *)&v190 + 1);
    v25 = (llvm *)v190;
    v27 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v27)
      LOWORD(v27) = *(_WORD *)(v27 + 8);
    v179 = v6;
    v180 = v27;
    v178 = v5;
    v28 = 56;
    goto LABEL_24;
  }
  if ((_BYTE)v190)
  {
    if (v190 - 15 >= 0x9C)
      goto LABEL_16;
  }
  else if ((*(_DWORD *)(*((_QWORD *)&v190 + 1) + 8) & 0xFE) != 0x12)
  {
    goto LABEL_16;
  }
  v12 = sub_1C5C9E2A0((uint64_t *)a1, a2, (const llvm::APInt *)&v188, v13, v14, v15, v16, v17);
  if (v12)
  {
LABEL_26:
    v10 = v12;
    goto LABEL_27;
  }
  if ((sub_1C5D3DBE0(v7, 0, v18) & 1) != 0)
  {
LABEL_4:
    v10 = (uint64_t *)v5;
    goto LABEL_27;
  }
LABEL_16:
  if (sub_1C6368AD4(v7))
    goto LABEL_4;
  if (sub_1C5C9F100(v7, v8, 1))
  {
    v19 = *(unsigned __int16 *)(v5 + 24);
    if (v19 == 57)
    {
      if (sub_1C5C9F100(*(_QWORD *)(*(_QWORD *)(v5 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v5 + 32) + 48), 1))
      {
        v20 = *(_QWORD *)a1;
        *(_QWORD *)&v194 = v7;
        DWORD2(v194) = v8;
        v21 = *(_QWORD *)(v5 + 32);
        v195 = *(__int128 **)(v21 + 40);
        LODWORD(v196) = *(_DWORD *)(v21 + 48);
        v22 = sub_1C5D53628(v20, 57, (const char *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), (uint64_t)&v194, 2);
LABEL_60:
        v26 = *((_QWORD *)&v190 + 1);
        v25 = (llvm *)v190;
        v48 = *(_QWORD *)(v5 + 32);
        v29 = *(uint64_t **)v48;
        v30 = *(_QWORD *)(v48 + 8);
        v49 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v49)
          LOWORD(v49) = *(_WORD *)(v49 + 8);
        v179 = v23;
        v180 = v49;
        v178 = (uint64_t)v22;
        v24 = *(_QWORD *)a1;
LABEL_63:
        v28 = 56;
        goto LABEL_25;
      }
      v19 = *(unsigned __int16 *)(v5 + 24);
      if (v19 == 57)
      {
        if (sub_1C5C9F100(**(_QWORD **)(v5 + 32), *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8), 1))
        {
          v32 = *(_QWORD *)a1;
          *(_QWORD *)&v194 = v7;
          DWORD2(v194) = v8;
          v33 = *(_QWORD *)(v5 + 32);
          v34 = *(_DWORD *)(v33 + 8);
          v195 = *(__int128 **)v33;
          LODWORD(v196) = v34;
          v29 = sub_1C5D53628(v32, 56, (const char *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), (uint64_t)&v194, 2);
          v30 = v35;
          v24 = *(_QWORD *)a1;
          v26 = *((_QWORD *)&v190 + 1);
          v25 = (llvm *)v190;
          v36 = *(_QWORD *)(v5 + 32);
          v37 = *(_QWORD *)(v36 + 40);
          v38 = *(_QWORD *)(v36 + 48);
LABEL_33:
          v39 = *(_QWORD *)(v24 + 832);
          if (v39)
            LOWORD(v39) = *(_WORD *)(v39 + 8);
          v179 = v38;
          v180 = v39;
          v178 = v37;
LABEL_36:
          v28 = 57;
          goto LABEL_25;
        }
        v19 = *(unsigned __int16 *)(v5 + 24);
      }
    }
    if (v19 == 198)
    {
      v40 = *(_QWORD *)(v5 + 48);
      if (v40)
      {
        v41 = 1;
        do
        {
          if (*(_DWORD *)(v40 + 8) == (_DWORD)v6)
          {
            if (!v41)
              goto LABEL_57;
            --v41;
          }
          v40 = *(_QWORD *)(v40 + 32);
        }
        while (v40);
        if (!v41 && sub_1C5D622B8(v7, v8, 0))
        {
          v194 = *(_OWORD *)*(_QWORD *)(v5 + 32);
          if (!*(_BYTE *)(a1 + 33)
            || *(_QWORD *)(*(_QWORD *)(v194 + 40) + 16 * DWORD2(v194))
            && ((v44 = *(_QWORD *)(a1 + 8),
                 v45 = *(_QWORD *)(*(_QWORD *)(v194 + 40) + 16 * DWORD2(v194)),
                 (_DWORD)v45 == 1)
             || *(_QWORD *)(v44 + 8 * v45 + 96))
            && !*(_BYTE *)(v44
                         + 390 * *(_QWORD *)(*(_QWORD *)(v194 + 40) + 16 * DWORD2(v194))
                         + 4035)
            && (_BYTE)v190
            && (v190 == 1 || *(_QWORD *)(v44 + 8 * v190 + 96))
            && !*(_BYTE *)(v44 + 390 * v190 + 4061))
          {
            if (sub_1C6329368((unsigned int *)&v194, v42, v43) == (llvm::Type *)1)
            {
              v160 = *(_QWORD *)(v194 + 40) + 16 * DWORD2(v194);
              v162 = sub_1C6366760(*(_QWORD *)a1, (const llvm::APInt *)&v188, v194, *((unint64_t *)&v194 + 1), *(llvm **)v160, *(_QWORD *)(v160 + 8));
              v163 = *(_QWORD *)(*(_QWORD *)a1 + 832);
              if (v163)
                v164 = *(_WORD *)(v163 + 8);
              else
                v164 = 0;
              v12 = sub_1C5D52060(*(_QWORD *)a1, 199, (const llvm::APInt *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), (uint64_t)v162, v161, v164);
              goto LABEL_26;
            }
          }
        }
      }
    }
LABEL_57:
    if (sub_1C5C9F1EC(v5, v6, *(_QWORD *)a1))
    {
      if (sub_1C5C9F100(*(_QWORD *)(*(_QWORD *)(v5 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v5 + 32) + 48), 1))
      {
        v46 = *(_QWORD *)a1;
        *(_QWORD *)&v194 = v7;
        DWORD2(v194) = v8;
        v47 = *(_QWORD *)(v5 + 32);
        v195 = *(__int128 **)(v47 + 40);
        LODWORD(v196) = *(_DWORD *)(v47 + 48);
        v22 = sub_1C5D53628(v46, 56, (const char *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), (uint64_t)&v194, 2);
        if (v22)
          goto LABEL_60;
      }
    }
  }
  v50 = sub_1C5C9F2A8((uint64_t *)a1, a2);
  if (v50)
  {
    v10 = v50;
    goto LABEL_27;
  }
  if (*(_WORD *)(v5 + 24) == 56)
  {
    v51 = *(_QWORD *)(v5 + 48);
    if (!v51)
      goto LABEL_74;
    v52 = 1;
    v53 = *(_QWORD *)(v5 + 48);
    do
    {
      if (*(_DWORD *)(v53 + 8) == (_DWORD)v6)
      {
        if (!v52)
          goto LABEL_74;
        --v52;
      }
      v53 = *(_QWORD *)(v53 + 32);
    }
    while (v53);
    if (v52)
    {
LABEL_74:
      v54 = *(_QWORD *)(*(_QWORD *)(v5 + 32) + 40);
      v55 = *(unsigned __int16 *)(v54 + 24);
      if (v55 != 35 && v55 != 11)
        v54 = 0;
      v57 = *(unsigned __int16 *)(v7 + 24);
      if ((v57 == 35 || v57 == 11) && v54 != 0)
      {
        v60 = *(_QWORD *)(v54 + 80);
        v61 = *(_DWORD *)(v60 + 32);
        if (v61 <= 0x40)
        {
          v62 = *(_QWORD *)(v7 + 80);
          if (*(_DWORD *)(v62 + 32) <= 0x40u)
          {
            v63 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v61;
            if (!v61)
              v63 = 0;
            if (v51)
            {
              v183 = (uint64_t)((v63 & (*(_QWORD *)(v62 + 24) + *(_QWORD *)(v60 + 24))) << -(char)v61) >> -(char)v61;
              do
              {
                v64 = *(_QWORD *)(v51 + 16);
                v65 = sub_1C6133268(v64);
                if (v64 && v65)
                {
                  v196 = 0;
                  v194 = 0uLL;
                  LOBYTE(v195) = 1;
                  v67 = *(_DWORD *)(v62 + 32);
                  v68 = v67 > 0x40
                      ? **(_QWORD **)(v62 + 24)
                      : (uint64_t)(*(_QWORD *)(v62 + 24) << -(char)v67) >> -(char)v67;
                  *((_QWORD *)&v194 + 1) = v68;
                  v191 = *(_OWORD *)(v64 + 80);
                  v69 = *(_DWORD *)(*(_QWORD *)(v64 + 96) + 16);
                  llvm::EVT::getTypeForEVT((llvm::EVT *)&v191, *(llvm::LLVMContext **)(*(_QWORD *)a1 + 56));
                  v185 = v70;
                  if (((*(uint64_t (**)(_QWORD, uint64_t, __int128 *))(**(_QWORD **)(a1 + 8) + 1064))(*(_QWORD *)(a1 + 8), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 40) + 272, &v194) & 1) != 0)
                  {
                    *((_QWORD *)&v194 + 1) = v183;
                    if (!(*(unsigned int (**)(_QWORD, uint64_t, __int128 *, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 1064))(*(_QWORD *)(a1 + 8), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 40) + 272, &v194, v185, v69, 0))goto LABEL_105;
                  }
                }
                v51 = *(_QWORD *)(v51 + 32);
              }
              while (v51);
            }
          }
        }
      }
    }
  }
  v12 = sub_1C5C9F740((uint64_t *)a1, 56, (const llvm::APInt *)&v188, v5, v6, v7, v8, *(_WORD *)(a2 + 72));
  if (v12)
    goto LABEL_26;
  *(_QWORD *)&v194 = a1;
  *((_QWORD *)&v194 + 1) = &v188;
  v195 = &v190;
  v12 = sub_1C5C9F8D4((uint64_t)&v194, v5, v6, v7, v8);
  if (v12)
    goto LABEL_26;
  v10 = sub_1C5C9F8D4((uint64_t)&v194, v7, v8, v5, v6);
  if (v10)
    goto LABEL_27;
LABEL_105:
  if (*(_WORD *)(v5 + 24) == 57
    && sub_1C636CD34(**(_QWORD **)(v5 + 32), *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8), 0))
  {
    v24 = *(_QWORD *)a1;
    v26 = *((_QWORD *)&v190 + 1);
    v25 = (llvm *)v190;
    v82 = *(_QWORD *)(v5 + 32);
    v83 = *(_QWORD *)(v82 + 40);
    v84 = *(_QWORD *)(v82 + 48);
    v85 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v85)
      LOWORD(v85) = *(_WORD *)(v85 + 8);
    v179 = v84;
    v180 = v85;
    v178 = v83;
    v28 = 57;
LABEL_24:
    v29 = (uint64_t *)v7;
    v30 = v8;
LABEL_25:
    v12 = sub_1C5D56C70(v24, v28, (const llvm::APInt *)&v188, v25, v26, (uint64_t)v29, v30, v17, v178, v179, v180);
    goto LABEL_26;
  }
  v71 = *(unsigned __int16 *)(v7 + 24);
  if ((_DWORD)v71 != 57)
    goto LABEL_107;
  if (sub_1C636CD34(**(_QWORD **)(v7 + 32), *(_QWORD *)(*(_QWORD *)(v7 + 32) + 8), 0))
  {
    v86 = *(_QWORD *)(v7 + 32);
    v87 = *(_QWORD *)(v86 + 40);
    v88 = *(_QWORD *)(v86 + 48);
    v89 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v89)
      LOWORD(v89) = *(_WORD *)(v89 + 8);
    v12 = sub_1C5D56C70(*(_QWORD *)a1, 57, (const llvm::APInt *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), v5, v6, v17, v87, v88, v89);
    goto LABEL_26;
  }
  v71 = *(unsigned __int16 *)(v7 + 24);
  if ((_DWORD)v71 != 57)
  {
LABEL_107:
    v72 = 0;
    v73 = *(unsigned __int16 *)(v5 + 24);
    if (v73 != 57)
    {
      v76 = 1;
      goto LABEL_142;
    }
    goto LABEL_108;
  }
  v77 = *(_QWORD *)(v7 + 32);
  v78 = *(_QWORD *)(v77 + 40);
  if (v5 == v78 && *(_DWORD *)(v77 + 48) == (_DWORD)v6)
  {
    v10 = *(uint64_t **)v77;
    goto LABEL_27;
  }
  v73 = *(unsigned __int16 *)(v5 + 24);
  v71 = 57;
  if (v73 == 57)
  {
    v72 = 1;
LABEL_108:
    v74 = *(_QWORD *)(v5 + 32);
    v75 = *(_QWORD *)(v74 + 40);
    if (v7 == v75 && *(_DWORD *)(v74 + 48) == (_DWORD)v8)
    {
      v10 = *(uint64_t **)v74;
      goto LABEL_27;
    }
    if (!v72)
    {
      v76 = 1;
      v73 = 57;
      v72 = 1;
      goto LABEL_142;
    }
    v77 = *(_QWORD *)(v7 + 32);
    v29 = *(uint64_t **)v74;
    v78 = *(_QWORD *)(v77 + 40);
    if (*(_QWORD *)v74 == v78 && *(_DWORD *)(v74 + 8) == *(_DWORD *)(v77 + 48))
    {
      v24 = *(_QWORD *)a1;
      v26 = *((_QWORD *)&v190 + 1);
      v25 = (llvm *)v190;
      v29 = *(uint64_t **)v77;
      v30 = *(_QWORD *)(v77 + 8);
      v79 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v79)
        LOWORD(v79) = *(_WORD *)(v79 + 8);
      v179 = *(_QWORD *)(v74 + 48);
      v180 = v79;
      v178 = *(_QWORD *)(v74 + 40);
      goto LABEL_36;
    }
    if (v75 == *(_QWORD *)v77 && *(_DWORD *)(v74 + 48) == *(_DWORD *)(v77 + 8))
    {
      v24 = *(_QWORD *)a1;
      v26 = *((_QWORD *)&v190 + 1);
      v25 = (llvm *)v190;
      v30 = *(_QWORD *)(v74 + 8);
      v80 = *(_QWORD *)(v77 + 48);
LABEL_138:
      v90 = *(_QWORD *)(v24 + 832);
      if (v90)
        LOWORD(v90) = *(_WORD *)(v90 + 8);
      v179 = v80;
      v180 = v90;
      v178 = v78;
      goto LABEL_36;
    }
    v72 = 1;
    v73 = 57;
    goto LABEL_123;
  }
  v72 = 0;
LABEL_123:
  if (*(_WORD *)(v78 + 24) == 56)
  {
    v81 = *(_QWORD *)(v78 + 32);
    v78 = *(_QWORD *)v81;
    if (v5 == *(_QWORD *)v81 && *(_DWORD *)(v81 + 8) == (_DWORD)v6)
    {
      v24 = *(_QWORD *)a1;
      v26 = *((_QWORD *)&v190 + 1);
      v25 = (llvm *)v190;
      v29 = *(uint64_t **)v77;
      v30 = *(_QWORD *)(v77 + 8);
      v37 = *(_QWORD *)(v81 + 40);
      v38 = *(_QWORD *)(v81 + 48);
      goto LABEL_33;
    }
    if (v5 == *(_QWORD *)(v81 + 40) && *(_DWORD *)(v81 + 48) == (_DWORD)v6)
    {
      v24 = *(_QWORD *)a1;
      v26 = *((_QWORD *)&v190 + 1);
      v25 = (llvm *)v190;
      v29 = *(uint64_t **)v77;
      v30 = *(_QWORD *)(v77 + 8);
      v80 = *(_QWORD *)(v81 + 8);
      goto LABEL_138;
    }
  }
  v76 = 0;
LABEL_142:
  if ((v71 & 0xFFFE) == 0x38)
  {
    v91 = *(_QWORD *)(v7 + 32);
    if (*(_WORD *)(*(_QWORD *)v91 + 24) == 57)
    {
      v92 = *(_QWORD *)(*(_QWORD *)v91 + 32);
      if (v5 == *(_QWORD *)(v92 + 40) && *(_DWORD *)(v92 + 48) == (_DWORD)v6)
      {
        v93 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v93)
          LOWORD(v93) = *(_WORD *)(v93 + 8);
        v12 = sub_1C5D56C70(*(_QWORD *)a1, v71, (const llvm::APInt *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), *(_QWORD *)v92, *(_QWORD *)(v92 + 8), v17, *(_QWORD *)(v91 + 40), *(_QWORD *)(v91 + 48), v93);
        goto LABEL_26;
      }
    }
  }
  if (((v76 | v72 ^ 1) & 1) == 0)
  {
    v94 = *(uint64_t **)(v5 + 32);
    v96 = *v94;
    v95 = v94[1];
    v184 = v94[6];
    v186 = v94[5];
    v97 = *(uint64_t **)(v7 + 32);
    v98 = v97[1];
    v187 = *v97;
    v181 = v97[6];
    v182 = v97[5];
    if ((sub_1C5C9F100(v96, v95, 0) & 1) != 0 || (sub_1C5C9F100(v187, v98, 0) & 1) != 0)
    {
      v100 = *(_QWORD *)a1;
      v101 = v190;
      v102 = *(unsigned __int8 **)(v5 + 64);
      *(_QWORD *)&v194 = v102;
      v103 = *((_QWORD *)&v190 + 1);
      v104 = (llvm *)v190;
      if (v102)
      {
        llvm::MetadataTracking::track((uint64_t)&v194, v102, 2);
        v103 = *((_QWORD *)&v190 + 1);
        v104 = (llvm *)v190;
      }
      DWORD2(v194) = *(_DWORD *)(v5 + 60);
      v105 = *(_QWORD *)(v100 + 832);
      if (v105)
        LOWORD(v105) = *(_WORD *)(v105 + 8);
      v107 = sub_1C5D56C70(v100, 56, (const llvm::APInt *)&v194, v104, v103, v96, v95, v99, v187, v98, v105);
      v109 = v108;
      v110 = *(_QWORD *)a1;
      v111 = *(unsigned __int8 **)(v7 + 64);
      *(_QWORD *)&v191 = v111;
      if (v111)
        llvm::MetadataTracking::track((uint64_t)&v191, v111, 2);
      DWORD2(v191) = *(_DWORD *)(v7 + 60);
      v112 = *(_QWORD *)(v110 + 832);
      if (v112)
        LOWORD(v112) = *(_WORD *)(v112 + 8);
      v113 = sub_1C5D56C70(v110, 56, (const llvm::APInt *)&v191, (llvm *)v190, *((uint64_t *)&v190 + 1), v186, v184, v106, v182, v181, v112);
      v116 = *(_QWORD *)(v100 + 832);
      if (v116)
        LOWORD(v116) = *(_WORD *)(v116 + 8);
      v10 = sub_1C5D56C70(v100, 57, (const llvm::APInt *)&v188, (llvm *)v101, *((uint64_t *)&v101 + 1), (uint64_t)v107, v109, v115, (uint64_t)v113, v114, v116);
      if ((_QWORD)v191)
        llvm::MetadataTracking::untrack((uint64_t)&v191, (unsigned __int8 *)v191);
      if ((_QWORD)v194)
        llvm::MetadataTracking::untrack((uint64_t)&v194, (unsigned __int8 *)v194);
      goto LABEL_27;
    }
    v73 = *(unsigned __int16 *)(v5 + 24);
  }
  if (v73 == 170
    && sub_1C5CA00A8(*(_QWORD *)(a1 + 8), 0x55u, v190, *((uint64_t *)&v190 + 1), *(unsigned __int8 *)(a1 + 33)))
  {
    v117 = *(_QWORD *)(v5 + 32);
    v118 = *(_QWORD *)(v117 + 40);
    v119 = *(_QWORD *)(v117 + 48);
    v192[0] = &off_1E8197F58;
    v193 = v192;
    v121 = sub_1C6364E28(v118, v119, v7, v8, (uint64_t)v192, 1, 0);
    if (v193 == v192)
    {
      v122 = (void (**)(void))(v192[0] + 32);
    }
    else
    {
      if (!v193)
        goto LABEL_174;
      v122 = (void (**)(void))(*v193 + 40);
    }
    (*v122)();
LABEL_174:
    if (v121)
    {
      v123 = *(uint64_t **)(v5 + 32);
      v124 = *v123;
      v125 = v123[1];
      v126 = v123[5];
      v127 = v123[6];
      v128 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v128)
        LOWORD(v128) = *(_WORD *)(v128 + 8);
      v12 = sub_1C5D56C70(*(_QWORD *)a1, 85, (const llvm::APInt *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), v124, v125, v120, v126, v127, v128);
      goto LABEL_26;
    }
  }
  if (sub_1C5C9FA08(a1, a2, 0))
  {
    v10 = (uint64_t *)a2;
    goto LABEL_27;
  }
  if ((sub_1C5D622B8(v7, v8, 0) & 1) == 0)
  {
    v133 = *(unsigned __int16 *)(v5 + 24);
    goto LABEL_186;
  }
  if (sub_1C5D621EC(v5, v6, 0))
  {
    v151 = *(_QWORD *)a1;
    v152 = v190;
    v154 = sub_1C6366AB4(v151, 0, (const llvm::APInt *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), 0, 0);
    v156 = *(uint64_t **)(v5 + 32);
    v157 = *v156;
    v158 = v156[1];
    v159 = *(_QWORD *)(v151 + 832);
    if (v159)
      LOWORD(v159) = *(_WORD *)(v159 + 8);
    v12 = sub_1C5D56C70(v151, 57, (const llvm::APInt *)&v188, (llvm *)v152, *((uint64_t *)&v152 + 1), (uint64_t)v154, v153, v155, v157, v158, v159);
    goto LABEL_26;
  }
  if (*(_WORD *)(v5 + 24) == 56)
  {
    v129 = sub_1C5D621EC(**(_QWORD **)(v5 + 32), *(_QWORD *)(*(_QWORD *)(v5 + 32) + 8), 0);
    v130 = *(_QWORD **)(v5 + 32);
    if (v129)
    {
      v131 = (uint64_t **)(v130 + 5);
      v132 = (unsigned int *)(v130 + 6);
    }
    else
    {
      if (!sub_1C5D621EC(v130[5], v130[6], 0))
        goto LABEL_208;
      v131 = *(uint64_t ***)(v5 + 32);
      v132 = (unsigned int *)(v131 + 1);
      v130 = v131 + 5;
    }
    v146 = *v130;
    if (v146)
    {
      v29 = *v131;
      v30 = *v132;
      v24 = *(_QWORD *)a1;
      v26 = *((_QWORD *)&v190 + 1);
      v25 = (llvm *)v190;
      v147 = *(uint64_t **)(v146 + 32);
      v37 = *v147;
      v38 = v147[1];
      goto LABEL_33;
    }
  }
LABEL_208:
  v148 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 360))(*(_QWORD *)(a1 + 8), v190, *((_QWORD *)&v190 + 1));
  v133 = *(unsigned __int16 *)(v5 + 24);
  if ((v148 & 1) == 0 && v133 == 56)
  {
    v149 = *(_QWORD *)(v5 + 48);
    if (v149)
    {
      v150 = 1;
      do
      {
        if (*(_DWORD *)(v149 + 8) == (_DWORD)v6)
        {
          if (!v150)
            goto LABEL_217;
          --v150;
        }
        v149 = *(_QWORD *)(v149 + 32);
      }
      while (v149);
      if (!v150)
      {
        v165 = *(_QWORD *)a1;
        v166 = v190;
        v167 = *(uint64_t **)(v5 + 32);
        v168 = *v167;
        v169 = v167[1];
        v170 = sub_1C63293BC(*(_QWORD *)a1, (const llvm::APInt *)&v188, v190, *((uint64_t *)&v190 + 1), 0, 0);
        v173 = *(_QWORD *)(v165 + 832);
        if (v173)
          LOWORD(v173) = *(_WORD *)(v173 + 8);
        v174 = sub_1C5D56C70(v165, 173, (const llvm::APInt *)&v188, (llvm *)v166, *((uint64_t *)&v166 + 1), v168, v169, v172, v170, v171, v173);
        v26 = *((_QWORD *)&v190 + 1);
        v25 = (llvm *)v190;
        v176 = *(_QWORD *)(v5 + 32);
        v29 = *(uint64_t **)(v176 + 40);
        v30 = *(_QWORD *)(v176 + 48);
        v177 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v177)
          LOWORD(v177) = *(_WORD *)(v177 + 8);
        v179 = v175;
        v180 = v177;
        v178 = (uint64_t)v174;
        v24 = *(_QWORD *)a1;
        goto LABEL_36;
      }
    }
    goto LABEL_217;
  }
LABEL_186:
  if (v133 == 57)
  {
    v134 = *(_QWORD *)(v5 + 48);
    if (v134)
    {
      v135 = 1;
      do
      {
        if (*(_DWORD *)(v134 + 8) == (_DWORD)v6)
        {
          if (!v135)
            goto LABEL_217;
          --v135;
        }
        v134 = *(_QWORD *)(v134 + 32);
      }
      while (v134);
      if (!v135 && sub_1C5D62374(v7, v8, 0))
      {
        v137 = *(_QWORD *)(v5 + 32);
        v138 = *(_QWORD *)(v137 + 40);
        v139 = *(_QWORD *)(v137 + 48);
        v140 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v140)
          LOWORD(v140) = *(_WORD *)(v140 + 8);
        v29 = sub_1C5D56C70(*(_QWORD *)a1, 173, (const llvm::APInt *)&v188, (llvm *)v190, *((uint64_t *)&v190 + 1), v138, v139, v136, v7, v8, v140);
        v30 = v141;
        v24 = *(_QWORD *)a1;
        v26 = *((_QWORD *)&v190 + 1);
        v25 = (llvm *)v190;
        v142 = *(uint64_t **)(v5 + 32);
        v143 = *v142;
        v144 = v142[1];
        v145 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v145)
          LOWORD(v145) = *(_WORD *)(v145 + 8);
        v179 = v144;
        v180 = v145;
        v178 = v143;
        goto LABEL_63;
      }
    }
  }
LABEL_217:
  v12 = sub_1C5C9FAB0(a1, v5, v6, v7, v8, a2);
  if (v12)
    goto LABEL_26;
  v10 = sub_1C5C9FAB0(a1, v7, v8, v5, v6, a2);
LABEL_27:
  if (v188)
    llvm::MetadataTracking::untrack((uint64_t)&v188, v188);
  return v10;
}

uint64_t *sub_1C5C9DB08(uint64_t a1, uint64_t a2)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  llvm *v23;
  unsigned __int8 *v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  size_t v38;
  unint64_t v39;
  uint64_t v40;
  void *v41;
  unsigned int v42;
  void *v43;
  unsigned int v44;
  void *v45;
  unsigned int v46;
  unsigned __int8 *v47;
  int v48;

  v2 = *(unsigned __int16 *)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = v3 + 40;
  v5 = 40;
  if (v2 == 56)
    v6 = 40;
  else
    v6 = 0;
  if (v2 == 56)
    v5 = 0;
  else
    v4 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(v3 + v6);
  v8 = *(unsigned __int16 *)(v7 + 24);
  if (v8 != 35 && v8 != 11)
    return 0;
  v10 = *(_QWORD *)(v3 + v5);
  if (*(_WORD *)(v10 + 24) != 199)
    return 0;
  v11 = *(unsigned int **)(v10 + 32);
  v12 = *(_QWORD *)v11;
  if (*(_WORD *)(*(_QWORD *)v11 + 24) != 193)
    return 0;
  if (*(_BYTE *)(*(_QWORD *)(v12 + 40) + 16 * v11[2]) != 2)
    return 0;
  v13 = *(uint64_t **)(v12 + 32);
  if (*(_DWORD *)(v13[10] + 76) != 17)
    return 0;
  v18 = *(unsigned int *)(v4 + 8);
  if (!sub_1C6368AD4(v13[5]))
    return 0;
  v19 = *v13;
  if (*(_WORD *)(*v13 + 24) != 171 || !sub_1C636F474(*(_QWORD *)(*(_QWORD *)(v19 + 32) + 40)))
    return 0;
  v20 = v13;
  v21 = *(_QWORD *)(v7 + 40) + 16 * v18;
  v23 = *(llvm **)v21;
  v22 = *(_QWORD *)(v21 + 8);
  v24 = *(unsigned __int8 **)(a1 + 64);
  v47 = v24;
  if (v24)
  {
    llvm::MetadataTracking::track((uint64_t)&v47, v24, 2);
    v20 = *(uint64_t **)(v12 + 32);
    v19 = *v20;
  }
  v48 = *(_DWORD *)(a1 + 60);
  v25 = sub_1C6366544(a2, v19, v20[1], (uint64_t)&v47, (uint64_t)v23, v22);
  v27 = v26;
  if (v2 == 56)
  {
    v28 = *(_QWORD *)(v7 + 80);
    v29 = *(unsigned int *)(v28 + 32);
    v44 = v29;
    if (v29 > 0x40)
    {
      v32 = ((unint64_t)(v29 + 63) >> 3) & 0x3FFFFFF8;
      v43 = (void *)operator new[]();
      memcpy(v43, *(const void **)(v28 + 24), v32);
    }
    else
    {
      v43 = *(void **)(v28 + 24);
    }
    llvm::APInt::operator+=((uint64_t)&v43, 1uLL);
    v46 = v44;
    v45 = v43;
    v44 = 0;
    v34 = sub_1C63666FC(a2, (llvm::LLVMContext *)&v45, (const llvm::APInt *)&v47, (uint64_t)v23, v22, 0, 0);
    v36 = v35;
    if (v46 >= 0x41 && v45)
      MEMORY[0x1CAA32F9C](v45, 0x1000C8000313F17);
    if (v44 >= 0x41 && v43)
      MEMORY[0x1CAA32F9C](v43, 0x1000C8000313F17);
    v37 = 57;
  }
  else
  {
    v30 = *(_QWORD *)(v7 + 80);
    v31 = *(unsigned int *)(v30 + 32);
    v42 = v31;
    if (v31 > 0x40)
    {
      v38 = ((unint64_t)(v31 + 63) >> 3) & 0x3FFFFFF8;
      v41 = (void *)operator new[]();
      memcpy(v41, *(const void **)(v30 + 24), v38);
    }
    else
    {
      v41 = *(void **)(v30 + 24);
    }
    llvm::APInt::operator-=((uint64_t)&v41, 1uLL);
    v46 = v42;
    v45 = v41;
    v42 = 0;
    v34 = sub_1C63666FC(a2, (llvm::LLVMContext *)&v45, (const llvm::APInt *)&v47, (uint64_t)v23, v22, 0, 0);
    v36 = v39;
    if (v46 >= 0x41 && v45)
      MEMORY[0x1CAA32F9C](v45, 0x1000C8000313F17);
    if (v42 >= 0x41 && v41)
      MEMORY[0x1CAA32F9C](v41, 0x1000C8000313F17);
    v37 = 56;
  }
  v40 = *(_QWORD *)(a2 + 832);
  if (v40)
    LOWORD(v40) = *(_WORD *)(v40 + 8);
  v14 = sub_1C5D56C70(a2, v37, (const llvm::APInt *)&v47, v23, v22, v34, v36, v33, v25, v27, v40);
  if (v47)
    llvm::MetadataTracking::untrack((uint64_t)&v47, v47);
  return v14;
}

uint64_t *sub_1C5C9DEA4(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t *v25;
  uint64_t v27;
  llvm::APInt *v28;
  llvm::Type *v29;
  uint64_t v30;
  unsigned int v31;
  unsigned __int8 *v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  llvm::Type *v48;
  unsigned __int8 *v49;
  int v50;
  __int128 v51;
  uint64_t v52;
  int v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;

  v56 = *MEMORY[0x1E0C80C00];
  v4 = *(unsigned __int16 *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 32);
  v6 = v5 + 40;
  v7 = 40;
  if (v4 == 56)
    v8 = 40;
  else
    v8 = 0;
  if (v4 == 56)
    v9 = v5 + 40;
  else
    v9 = *(_QWORD *)(a1 + 32);
  if (v4 == 56)
  {
    v7 = 0;
    v6 = *(_QWORD *)(a1 + 32);
  }
  v10 = *(_QWORD *)(v5 + v8);
  v11 = *(_QWORD *)(v9 + 8);
  v12 = *(_QWORD *)(v5 + v7);
  v13 = *(unsigned int *)(v6 + 8);
  if (!sub_1C5D583CC(a2, v10))
    return 0;
  if (*(_WORD *)(v12 + 24) != 177)
    return 0;
  v14 = *(uint64_t **)(v12 + 32);
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 48);
  if (!v16)
    return 0;
  v17 = v14[1];
  v18 = 1;
  do
  {
    if (*(_DWORD *)(v16 + 8) == (_DWORD)v17)
    {
      if (!v18)
        return 0;
      --v18;
    }
    v16 = *(_QWORD *)(v16 + 32);
  }
  while (v16);
  if (v18)
    return 0;
  if (!sub_1C5D621EC(v15, v17, 0))
    return 0;
  v19 = *(_QWORD *)(v12 + 32);
  v51 = *(_OWORD *)(*(_QWORD *)(v12 + 40) + 16 * v13);
  v20 = *(_QWORD *)(v19 + 40);
  v21 = *(_QWORD *)(v19 + 48);
  v22 = sub_1C5D4F7E8(v20, v21, 0, 0);
  if (!v22)
    return 0;
  v27 = *(_QWORD *)(v22 + 80);
  v28 = (llvm::APInt *)(v27 + 24);
  v29 = sub_1C6131328((unsigned __int8 *)&v51, v23, v24);
  v31 = *(_DWORD *)(v27 + 32);
  if (v31 >= 0x41)
  {
    v48 = v29;
    if (v31 - llvm::APInt::countLeadingZerosSlowCase(v28) > 0x40)
      return 0;
    v28 = *(llvm::APInt **)v28;
    v29 = v48;
  }
  if (*(llvm::Type **)v28 != (llvm::Type *)((char *)v29 - 1))
    return 0;
  v32 = *(unsigned __int8 **)(a1 + 64);
  v49 = v32;
  if (v32)
    llvm::MetadataTracking::track((uint64_t)&v49, v32, 2);
  v50 = *(_DWORD *)(a1 + 60);
  if (v4 == 56)
    v33 = 176;
  else
    v33 = 177;
  v34 = *(uint64_t **)(v15 + 32);
  v35 = *v34;
  v36 = v34[1];
  v37 = *(_QWORD *)(a2 + 832);
  if (v37)
    LOWORD(v37) = *(_WORD *)(v37 + 8);
  v38 = sub_1C5D56C70(a2, v33, (const llvm::APInt *)&v49, (llvm *)v51, *((uint64_t *)&v51 + 1), v35, v36, v30, v20, v21, v37);
  v40 = v39;
  v41 = v51;
  if (v4 == 56)
    v42 = 56;
  else
    v42 = 57;
  v52 = v10;
  v53 = v11;
  v54 = sub_1C6366AB4(a2, 1, (const llvm::APInt *)&v49, (llvm *)v51, *((uint64_t *)&v51 + 1), 0, 0);
  v55 = v43;
  v44 = sub_1C5D53628(a2, v42, (const char *)&v49, (llvm *)v41, *((uint64_t *)&v41 + 1), (uint64_t)&v52, 2);
  if (v44)
  {
    v47 = *(_QWORD *)(a2 + 832);
    if (v47)
      LOWORD(v47) = *(_WORD *)(v47 + 8);
    v25 = sub_1C5D56C70(a2, 56, (const llvm::APInt *)&v49, (llvm *)v51, *((uint64_t *)&v51 + 1), (uint64_t)v38, v40, v46, (uint64_t)v44, v45, v47);
  }
  else
  {
    v25 = 0;
  }
  if (v49)
    llvm::MetadataTracking::untrack((uint64_t)&v49, v49);
  return v25;
}

uint64_t sub_1C5C9E150(uint64_t a1, const llvm::APInt *a2, uint64_t a3, uint64_t a4, llvm::APInt *a5)
{
  unsigned int ExtendedSizeInBits;
  const char *v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  v23 = a3;
  v24 = a4;
  if ((_BYTE)a3)
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v23);
  else
    ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v23);
  v12 = ExtendedSizeInBits;
  if ((_DWORD)v11 == 1)
  {
    v20 = ExtendedSizeInBits;
    v12 = v20;
  }
  v13 = *((_DWORD *)a5 + 2);
  if (v13 < v12)
  {
    llvm::APInt::sext(a5, v12, (llvm::APInt *)&v21);
  }
  else if (v13 > v12)
  {
    llvm::APInt::trunc(a5, v12, (llvm::APInt *)&v21);
  }
  else
  {
    sub_1C5DD14E0((uint64_t)&v21, (uint64_t)a5);
  }
  v15 = sub_1C63666FC(a1, (llvm::LLVMContext *)&v21, a2, v23, v24, 0, 0);
  v16 = *(_QWORD *)(a1 + 832);
  if (v16)
    v17 = *(unsigned __int16 *)(v16 + 8);
  else
    v17 = 0;
  v18 = sub_1C5D52060(a1, 318, a2, a3, a4, v15, v14, v17);
  if (v22 >= 0x41 && v21)
    MEMORY[0x1CAA32F9C](v21, 0x1000C8000313F17);
  return v18;
}

uint64_t *sub_1C5C9E2A0(uint64_t *a1, uint64_t a2, const llvm::APInt *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  llvm *v33;
  unsigned __int8 *v34;
  int v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  llvm *v47;
  unsigned __int8 *v48;
  int v49;
  uint64_t v51;
  unsigned int v52;
  BOOL v53;
  int v54;
  uint64_t v56;
  uint64_t *v57;
  const llvm::APInt *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  int v63;
  _QWORD *v64;
  _QWORD *v65;
  BOOL v66;
  uint64_t v67;
  const char *v68;
  uint64_t v69;
  const char *v70;
  uint64_t v71;
  unsigned int v72;
  int v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t *v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  const char *v84;
  unsigned int v85;
  void *__src;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  int v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unsigned __int8 v101;
  unint64_t v102;
  unint64_t EVT;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  _QWORD *v109;
  unint64_t v110;
  BOOL v111;
  BOOL v112;
  uint64_t v113;
  uint64_t v114;
  llvm::EVT **v115;
  void *v116;
  unsigned __int8 v117;
  BOOL v118;
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned __int8 v123;
  uint64_t v124;
  BOOL v125;
  BOOL v126;
  uint64_t *v127;
  const char *v129;
  int v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t *v133;
  uint64_t v134;
  int v135;
  uint64_t v136;
  int v137;
  llvm *v138;
  const char *v139;
  uint64_t *v140;
  unsigned int v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  unsigned int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  unsigned int v150;
  void *v151;
  llvm *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t *v168;
  uint64_t *v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t **v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  unint64_t v176;
  uint64_t v177;
  const char *v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  unint64_t v189;
  _QWORD *v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  uint64_t v194;
  unsigned int v195;
  uint64_t v196;
  uint64_t v197;
  void *v198;
  unsigned int v199;
  int v200;
  uint64_t v202;
  uint64_t *v203;
  _QWORD *v204;
  unint64_t v205;
  _QWORD *v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t v223;
  uint64_t v224;
  const void *v225;
  uint64_t v226;
  unsigned int *v227;
  const void *v228;
  unint64_t v229;
  uint64_t v230;
  unsigned int *v231;
  uint64_t v232;
  unint64_t v234;
  const llvm::APInt *__s2;
  unsigned int __s2a;
  char *__s2b;
  uint64_t v238;
  __int16 v239;
  unsigned int v240;
  llvm *v241;
  uint64_t v242;
  _QWORD v243[2];
  uint64_t v244;
  llvm *v245;
  uint64_t v246;
  void *v247[2];
  _QWORD v248[18];

  v10 = a1;
  v248[16] = *MEMORY[0x1E0C80C00];
  v12 = *(uint64_t **)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v13 = *(_QWORD *)(v11 + 8);
  v241 = *(llvm **)v11;
  v14 = *v12;
  v15 = v12[1];
  v16 = v12[5];
  v17 = v12[6];
  v18 = *(unsigned __int16 *)(a2 + 24);
  if ((v18 - 59) <= 7 && ((1 << (v18 - 59)) & 0xCF) != 0)
    goto LABEL_5;
  v239 = *(_WORD *)(a2 + 72);
  if (*(_WORD *)(v14 + 24) == 153)
    v64 = (_QWORD *)*v12;
  else
    v64 = 0;
  if (*(_WORD *)(v16 + 24) == 153)
    v65 = (_QWORD *)v12[5];
  else
    v65 = 0;
  if (v64)
    v66 = v65 == 0;
  else
    v66 = 1;
  if (!v66)
  {
    *(_OWORD *)v247 = *(_OWORD *)v64[5];
    v228 = (const void *)v64[10];
    __s2a = sub_1C612FE00((llvm::EVT *)v247, (const char *)a2);
    *(_OWORD *)v247 = *(_OWORD *)v65[5];
    v225 = (const void *)v65[10];
    v130 = sub_1C612FE00((llvm::EVT *)v247, v129);
    if (__s2a == v130 && !memcmp(v228, v225, 4 * __s2a))
    {
      v132 = *(uint64_t **)(v14 + 32);
      if (*(_WORD *)(v132[5] + 24) == 51)
      {
        v133 = *(uint64_t **)(v16 + 32);
        if (*(_WORD *)(v133[5] + 24) == 51)
        {
          v134 = *(_QWORD *)(v14 + 48);
          if (v134)
          {
            v135 = 1;
            do
            {
              if (*(_DWORD *)(v134 + 8) == (_DWORD)v15)
              {
                if (!v135)
                  goto LABEL_148;
                --v135;
              }
              v134 = *(_QWORD *)(v134 + 32);
            }
            while (v134);
            if (!v135)
              goto LABEL_157;
          }
LABEL_148:
          v136 = *(_QWORD *)(v16 + 48);
          if (v136)
          {
            v137 = 1;
            do
            {
              if (*(_DWORD *)(v136 + 8) == (_DWORD)v17)
              {
                if (!v137)
                  goto LABEL_155;
                --v137;
              }
              v136 = *(_QWORD *)(v136 + 32);
            }
            while (v136);
            if (!v137)
            {
LABEL_157:
              v138 = v241;
              v140 = sub_1C5D56C70(*a1, v18, a3, v241, v13, *v132, v132[1], v131, *v133, v133[1], v239);
              v141 = v139;
              v142 = *(_QWORD *)(v14 + 32);
              v143 = *(_QWORD **)(v142 + 40);
              v16 = *(_QWORD *)(v142 + 48);
              v144 = v13;
              v145 = *a1;
LABEL_166:
              *(_OWORD *)v247 = *(_OWORD *)v64[5];
              v151 = (void *)v64[10];
              v221 = sub_1C612FE00((llvm::EVT *)v247, v139);
              return sub_1C5D41DE4(v145, v138, v144, (uint64_t)a3, (uint64_t)v140, v141, (uint64_t)v143, v16, v151, v221);
            }
          }
LABEL_155:
          if (v14 == v16 && (_DWORD)v15 == (_DWORD)v17)
            goto LABEL_157;
        }
      }
    }
  }
  v67 = sub_1C5D4F7E8(v16, v17, 0, 0);
  if (v64)
  {
    if (v67)
    {
      *(_OWORD *)v247 = *(_OWORD *)v64[5];
      __s2b = (char *)v64[10];
      v146 = sub_1C612FE00((llvm::EVT *)v247, v68);
      if (v146)
      {
        if (v146 == 1 || !memcmp(__s2b + 4, __s2b, 4 * v146 - 4))
        {
          v148 = v64[6];
          if (v148)
          {
            if (!*(_QWORD *)(v148 + 32))
            {
              v149 = (uint64_t *)v64[4];
              if (*(_WORD *)(v149[5] + 24) == 51 && *(_WORD *)(*v149 + 24) != 147)
              {
                v220 = v17;
                v138 = v241;
                v140 = sub_1C5D56C70(*a1, v18, a3, v241, v13, *v149, v149[1], v147, v16, v220, v239);
                v141 = v150;
                v144 = v13;
                v145 = *a1;
                v143 = sub_1C61312D0(*a1, v241, v144);
                LODWORD(v16) = (_DWORD)v139;
                goto LABEL_166;
              }
            }
          }
        }
      }
    }
  }
  v69 = sub_1C5D4F7E8(v14, v15, 0, 0);
  v10 = a1;
  if (v69)
  {
    if (v65)
    {
      *(_OWORD *)v247 = *(_OWORD *)v65[5];
      v71 = v65[10];
      v72 = sub_1C612FE00((llvm::EVT *)v247, v70);
      v10 = a1;
      if (v72)
      {
        if (v72 == 1 || (v73 = memcmp((const void *)(v71 + 4), (const void *)v71, 4 * v72 - 4), v10 = a1, !v73))
        {
          v74 = v65[6];
          if (v74)
          {
            if (!*(_QWORD *)(v74 + 32))
            {
              v75 = (uint64_t *)v65[4];
              if (*(_WORD *)(v75[5] + 24) == 51 && *(_WORD *)(*v75 + 24) != 147)
              {
                v76 = v18;
                v77 = v10;
                v78 = sub_1C5D56C70(*v10, v76, a3, v241, v13, v14, v15, a8, *v75, v75[1], v239);
                v80 = v79;
                v81 = v13;
                v82 = *v77;
                v83 = sub_1C61312D0(*v77, v241, v81);
                v85 = v84;
                *(_OWORD *)v247 = *(_OWORD *)v65[5];
                __src = (void *)v65[10];
                v219 = sub_1C612FE00((llvm::EVT *)v247, v84);
                return sub_1C5D41DE4(v82, v241, v81, (uint64_t)a3, (uint64_t)v78, v80, (uint64_t)v83, v85, __src, v219);
              }
            }
          }
        }
      }
    }
  }
LABEL_5:
  __s2 = a3;
  v238 = v13;
  v20 = *(unsigned __int16 *)(v14 + 24);
  if (v20 != 149)
  {
    if (v20 != 150)
      goto LABEL_104;
    v21 = *(_QWORD *)(v14 + 32);
    if (*(_WORD *)(*(_QWORD *)v21 + 24) != 51)
      goto LABEL_104;
    if (*(_WORD *)(v16 + 24) != 150)
      goto LABEL_104;
    v22 = *(_QWORD *)(v16 + 32);
    if (*(_WORD *)(*(_QWORD *)v22 + 24) != 51)
      goto LABEL_104;
    v23 = *(_QWORD *)(v21 + 80);
    if (v23 != *(_QWORD *)(v22 + 80) || *(_DWORD *)(v21 + 88) != *(_DWORD *)(v22 + 88))
      goto LABEL_104;
    v24 = *(_QWORD *)(v14 + 48);
    if (!v24)
      goto LABEL_19;
    v25 = 1;
    do
    {
      if (*(_DWORD *)(v24 + 8) == (_DWORD)v15)
      {
        if (!v25)
          goto LABEL_19;
        --v25;
      }
      v24 = *(_QWORD *)(v24 + 32);
    }
    while (v24);
    if (v25)
    {
LABEL_19:
      v26 = *(_QWORD *)(v16 + 48);
      if (!v26)
        goto LABEL_104;
      v27 = 1;
      do
      {
        if (*(_DWORD *)(v26 + 8) == (_DWORD)v17)
        {
          if (!v27)
            goto LABEL_104;
          --v27;
        }
        v26 = *(_QWORD *)(v26 + 32);
      }
      while (v26);
      if (v27)
        goto LABEL_104;
    }
    v29 = *(_QWORD *)(v21 + 40);
    v28 = *(_QWORD *)(v21 + 48);
    v30 = *(_QWORD *)(v22 + 40);
    v31 = *(_QWORD *)(v22 + 48);
    v32 = *(_QWORD *)(v29 + 40) + 16 * v28;
    v33 = *(llvm **)v32;
    v34 = (unsigned __int8 *)(*(_QWORD *)(v30 + 40) + 16 * v31);
    v35 = *(_QWORD *)v32;
    if (v35 != *v34)
      goto LABEL_104;
    v36 = *((_QWORD *)v34 + 1);
    if (!*(_QWORD *)v32 && *(_QWORD *)(v32 + 8) != v36)
      goto LABEL_104;
    v38 = *(_QWORD *)(v21 + 88);
    v39 = v10[1];
    v40 = *(_QWORD *)v32;
    if (!*((_BYTE *)v10 + 33))
    {
      if (!*(_QWORD *)v32 || v35 != 1 && !*(_QWORD *)(v39 + 8 * v40 + 96))
        goto LABEL_104;
      if (v18 <= 0x185)
      {
        v199 = *(unsigned __int8 *)(v39 + 390 * *(_QWORD *)v32 + v18 + 3862);
        v53 = v199 > 4;
        v200 = (1 << v199) & 0x13;
        if (v53 || v200 == 0)
          goto LABEL_104;
      }
      goto LABEL_220;
    }
    if (!*(_QWORD *)v32)
      goto LABEL_104;
    if (v35 == 1)
    {
      if (v18 >= 0x186)
        goto LABEL_104;
    }
    else if (!*(_QWORD *)(v39 + 8 * v40 + 96) || v18 > 0x185 || !*(_QWORD *)v32)
    {
      goto LABEL_104;
    }
    if (!*(_BYTE *)(v39 + 390 * *(_QWORD *)v32 + v18 + 3862))
    {
LABEL_220:
      v224 = *(_QWORD *)(v32 + 8);
      v226 = v38;
      v230 = v18;
      v202 = *v10;
      v203 = v10;
      v204 = sub_1C61312D0(*v10, v241, v13);
      v222 = v205;
      v223 = (uint64_t)v204;
      v206 = sub_1C61312D0(*v203, v241, v13);
      v209 = *(_QWORD *)(v202 + 832);
      if (v209)
        LOWORD(v209) = *(_WORD *)(v209 + 8);
      v211 = sub_1C5D56C70(v202, v230, a3, v241, v13, v223, v222, v208, (uint64_t)v206, v207, v209);
      v213 = v212;
      v214 = *(_QWORD *)(*v203 + 832);
      if (v214)
        LOWORD(v214) = *(_WORD *)(v214 + 8);
      v215 = sub_1C5D56C70(*v203, v230, __s2, v33, v224, v29, v28, v210, v30, v31, v214);
      v218 = *(_QWORD *)(*v203 + 832);
      if (v218)
        LOWORD(v218) = *(_WORD *)(v218 + 8);
      return sub_1C5D58E08(*v203, (const char *)0x96, __s2, v241, v13, (uint64_t)v211, v213, v217, (uint64_t)v215, v216, v23, v226, SHIDWORD(v226), v218);
    }
LABEL_104:
    v93 = *v10;
    v94 = *(uint64_t **)(a2 + 32);
    v95 = *(_QWORD *)(a2 + 40);
    v97 = *v94;
    v96 = v94[1];
    v98 = v94[5];
    v99 = v94[6];
    v240 = *(unsigned __int16 *)(a2 + 24);
    v100 = *(_QWORD *)(v95 + 8);
    v245 = *(llvm **)v95;
    v246 = v100;
    if ((_BYTE)v245)
    {
      v101 = sub_1C47F37A0((unsigned __int8 *)&v245);
      v102 = 0;
      v242 = 0;
    }
    else
    {
      EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v100 + 24), 0, (BOOL)a3);
      v242 = v104;
      v102 = EVT & 0xFFFFFFFFFFFFFF00;
      v101 = EVT;
    }
    v105 = *(_QWORD *)(v93 + 24);
    v244 = 0;
    v106 = sub_1C5D4E110(v93, v97, v96, (int *)&v244 + 1);
    v108 = v107;
    v109 = sub_1C5D4E110(v93, v98, v99, (int *)&v244);
    if (v106)
      v112 = v109 == 0;
    else
      v112 = 1;
    if (v112 || HIDWORD(v244) != (_DWORD)v244)
      return 0;
    v113 = (uint64_t)v109;
    v234 = v110;
    v114 = v106[5] + 16 * v108;
    v116 = *(void **)v114;
    v115 = *(llvm::EVT ***)(v114 + 8);
    v247[0] = v116;
    v247[1] = v115;
    if ((_BYTE)v116)
    {
      v117 = sub_1C47F37A0((unsigned __int8 *)v247);
      v119 = 0;
    }
    else
    {
      v117 = llvm::EVT::getEVT(v115[3], 0, v111);
    }
    if (v101 != v117 || !v101 && v119 != v242)
      return 0;
    v120 = (uint64_t *)(*(_QWORD *)(v113 + 40) + 16 * v234);
    v122 = *v120;
    v121 = v120[1];
    v243[0] = v122;
    v243[1] = v121;
    if ((_BYTE)v122)
    {
      v123 = sub_1C47F37A0((unsigned __int8 *)v243);
      v124 = 0;
    }
    else
    {
      v123 = llvm::EVT::getEVT(*(llvm::EVT **)(v121 + 24), 0, v118);
    }
    v125 = v101 || v124 == v242;
    v126 = !v125;
    if (v101 != v123
      || v126
      || !(*(unsigned int (**)(uint64_t, llvm *, uint64_t, _QWORD))(*(_QWORD *)v105 + 1424))(v105, v245, v246, HIDWORD(v244))|| !v101|| v101 != 1 && !*(_QWORD *)(v105 + 8 * v101 + 96)|| v240 < 0x186 && (*(_BYTE *)(v105 + 390 * v101 + v240 + 3862) & 0xFB) != 0)
    {
      return 0;
    }
    v152 = (llvm *)(v102 | v101);
    v153 = sub_1C6366C9C(v93, SHIDWORD(v244), (uint64_t)__s2, 0);
    v156 = v154;
    v157 = *(_QWORD *)(v93 + 832);
    if (v157)
      LOWORD(v157) = *(_WORD *)(v157 + 8);
    v158 = v153;
    v159 = sub_1C5D56C70(v93, 148, __s2, v152, v242, (uint64_t)v106, v108, v155, v153, v154, v157);
    v161 = *(_QWORD *)(v93 + 832);
    v229 = v162;
    v163 = (uint64_t)v159;
    if (v161)
      LOWORD(v161) = *(_WORD *)(v161 + 8);
    v175 = sub_1C5D56C70(v93, 148, __s2, v152, v242, v113, v234, v160, v158, v156, v161);
    v179 = sub_1C5D56C70(v93, v240, __s2, v152, v242, v163, v229, v177, (uint64_t)v175, v176, *(_WORD *)(a2 + 72));
    v180 = (uint64_t)v178;
    if (*(_WORD *)(v97 + 24) != 146 || *(_WORD *)(v98 + 24) != 146 || !*(_WORD *)(v97 + 56))
      goto LABEL_200;
    v181 = 0;
    v182 = *(uint64_t **)(v97 + 32);
    v183 = 40 * *(unsigned __int16 *)(v97 + 56);
    do
    {
      v184 = *v182;
      v182 += 5;
      if (*(_WORD *)(v184 + 24) != 51)
        ++v181;
      v183 -= 40;
    }
    while (v183);
    if (v181 != 1 || !*(_WORD *)(v98 + 56))
      goto LABEL_200;
    v185 = 0;
    v186 = *(uint64_t **)(v98 + 32);
    v187 = 40 * *(unsigned __int16 *)(v98 + 56);
    do
    {
      v188 = *v186;
      v186 += 5;
      if (*(_WORD *)(v188 + 24) != 51)
        ++v185;
      v187 -= 40;
    }
    while (v187);
    if (v185 == 1)
    {
      v189 = sub_1C612FE00((llvm::EVT *)&v245, v178);
      v190 = sub_1C61312D0(v93, v152, v242);
      v247[0] = v248;
      v247[1] = (void *)0x800000000;
      sub_1C4825C80((unsigned int *)v247, v189, (uint64_t)v190, v191);
      v192 = (char *)v247[0] + 16 * SHIDWORD(v244);
      *(_QWORD *)v192 = v179;
      *((_DWORD *)v192 + 2) = v180;
      v193 = *(_QWORD *)(v93 + 832);
      if (v193)
        v194 = *(unsigned __int16 *)(v193 + 8);
      else
        v194 = 0;
      v127 = sub_1C636D0C8(v93, (const char *)0x92, __s2, v245, v246, (uint64_t *)v247[0], LODWORD(v247[1]), v194);
      v198 = v247[0];
      if (v247[0] == v248)
        goto LABEL_205;
    }
    else
    {
LABEL_200:
      v195 = sub_1C612FE00((llvm::EVT *)&v245, v178);
      v247[0] = v248;
      v247[1] = (void *)0x800000000;
      sub_1C4825C80((unsigned int *)v247, v195, (uint64_t)v179, v180);
      v196 = *(_QWORD *)(v93 + 832);
      if (v196)
        v197 = *(unsigned __int16 *)(v196 + 8);
      else
        v197 = 0;
      v127 = sub_1C636D0C8(v93, (const char *)0x92, __s2, v245, v246, (uint64_t *)v247[0], LODWORD(v247[1]), v197);
      v198 = v247[0];
      if (v247[0] == v248)
      {
LABEL_205:
        if (v127)
          return v127;
        return 0;
      }
    }
    free(v198);
    goto LABEL_205;
  }
  v231 = *(unsigned int **)(v14 + 32);
  v41 = *(unsigned __int16 *)(v14 + 56);
  if ((_DWORD)v41 != 1)
  {
    v59 = (uint64_t *)(v231 + 10);
    v60 = 40 * *(unsigned __int16 *)(v14 + 56) - 40;
    do
    {
      if (*(_WORD *)(*v59 + 24) != 51)
      {
        v61 = v18;
        v62 = v10;
        v63 = sub_1C6364BE0(*v59);
        v10 = v62;
        v18 = v61;
        if (!v63)
          goto LABEL_104;
      }
      v59 += 5;
      v60 -= 40;
    }
    while (v60);
  }
  if (*(_WORD *)(v16 + 24) != 149)
    goto LABEL_104;
  v227 = *(unsigned int **)(v16 + 32);
  if (*(_WORD *)(v16 + 56) != 1)
  {
    v88 = (uint64_t *)(v227 + 10);
    v89 = 40 * *(unsigned __int16 *)(v16 + 56) - 40;
    do
    {
      if (*(_WORD *)(*v88 + 24) != 51)
      {
        v90 = v18;
        v91 = v10;
        v92 = sub_1C6364BE0(*v88);
        v10 = v91;
        v18 = v90;
        if (!v92)
          goto LABEL_104;
      }
      v88 += 5;
      v89 -= 40;
    }
    while (v89);
  }
  v42 = *(_QWORD *)(v14 + 48);
  if (!v42)
    goto LABEL_47;
  v43 = 1;
  do
  {
    if (*(_DWORD *)(v42 + 8) == (_DWORD)v15)
    {
      if (!v43)
        goto LABEL_47;
      --v43;
    }
    v42 = *(_QWORD *)(v42 + 32);
  }
  while (v42);
  if (v43)
  {
LABEL_47:
    v44 = *(_QWORD *)(v16 + 48);
    if (!v44)
      goto LABEL_104;
    v45 = 1;
    do
    {
      if (*(_DWORD *)(v44 + 8) == (_DWORD)v17)
      {
        if (!v45)
          goto LABEL_104;
        --v45;
      }
      v44 = *(_QWORD *)(v44 + 32);
    }
    while (v44);
    if (v45)
      goto LABEL_104;
  }
  v46 = *(_QWORD *)(*(_QWORD *)v231 + 40) + 16 * v231[2];
  v47 = *(llvm **)v46;
  v48 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v227 + 40) + 16 * v227[2]);
  v49 = *(_QWORD *)v46;
  if (v49 != *v48)
    goto LABEL_104;
  v232 = *(_QWORD *)(v46 + 8);
  if (!*(_QWORD *)v46 && *(_QWORD *)(v46 + 8) != *((_QWORD *)v48 + 1))
    goto LABEL_104;
  if (!*(_QWORD *)v46)
    goto LABEL_104;
  v51 = v10[1];
  if (v49 != 1 && !*(_QWORD *)(v51 + 8 * v47 + 96))
    goto LABEL_104;
  if (v18 <= 0x185)
  {
    v52 = *(unsigned __int8 *)(v51 + 390 * v47 + v18 + 3862);
    v53 = v52 > 4;
    v54 = (1 << v52) & 0x13;
    if (v53 || v54 == 0)
      goto LABEL_104;
  }
  v247[0] = v248;
  v247[1] = (void *)0x400000000;
  if ((_DWORD)v41)
  {
    v164 = 0;
    v165 = 40 * v41;
    v58 = __s2;
    do
    {
      v166 = *(_QWORD *)(*v10 + 832);
      v167 = v10;
      if (v166)
        LOWORD(v166) = *(_WORD *)(v166 + 8);
      v168 = sub_1C5D56C70(*v10, v18, __s2, v47, v232, *(_QWORD *)(*(_QWORD *)(v14 + 32) + v164), *(_QWORD *)(*(_QWORD *)(v14 + 32) + v164 + 8), a8, *(_QWORD *)(*(_QWORD *)(v16 + 32) + v164), *(_QWORD *)(*(_QWORD *)(v16 + 32) + v164 + 8), v166);
      v170 = v169;
      v171 = LODWORD(v247[1]);
      if (LODWORD(v247[1]) >= (unint64_t)HIDWORD(v247[1]))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v247, (uint64_t)v248, LODWORD(v247[1]) + 1, 16);
        v171 = LODWORD(v247[1]);
      }
      v10 = v167;
      v172 = (uint64_t **)((char *)v247[0] + 16 * v171);
      *v172 = v168;
      v172[1] = v170;
      v56 = ++LODWORD(v247[1]);
      v164 += 40;
    }
    while (v165 != v164);
    v57 = (uint64_t *)v247[0];
  }
  else
  {
    v56 = 0;
    v57 = v248;
    v58 = __s2;
  }
  v173 = *(_QWORD *)(*v10 + 832);
  if (v173)
    v174 = *(unsigned __int16 *)(v173 + 8);
  else
    v174 = 0;
  v127 = sub_1C636D0C8(*v10, (const char *)0x95, v58, v241, v238, v57, v56, v174);
  if (v247[0] != v248)
    free(v247[0]);
  return v127;
}

uint64_t sub_1C5C9F100(uint64_t a1, uint64_t a2, _BOOL4 a3)
{
  BOOL v3;
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  _QWORD v12[2];

  v3 = a3;
  v4 = 0;
  v12[0] = a1;
  v12[1] = a2;
  v5 = *(unsigned __int16 *)(a1 + 24);
  if (v5 <= 0x22)
  {
    if (v5 != 11)
      return v4;
    goto LABEL_16;
  }
  if (v5 == 35)
  {
LABEL_16:
    LODWORD(v4) = !a3;
    if ((*(_BYTE *)(a1 + 26) & 8) != 0)
      return v4;
    else
      return 1;
  }
  if (v5 == 146 || v5 == 156)
  {
    v6 = sub_1C6329368((unsigned int *)v12, a2, a3);
    if (*(_WORD *)(v12[0] + 56))
    {
      v7 = *(uint64_t **)(v12[0] + 32);
      v8 = 40 * *(unsigned __int16 *)(v12[0] + 56);
      while (1)
      {
        v9 = *v7;
        v10 = *(unsigned __int16 *)(*v7 + 24);
        if (v10 != 11)
        {
          if (v10 == 51)
            goto LABEL_13;
          if (v10 != 35)
            return 0;
        }
        if (*(_DWORD *)(*(_QWORD *)(v9 + 80) + 32) != v6 || (*(_BYTE *)(v9 + 26) & 8) != 0 && v3)
          return 0;
LABEL_13:
        v7 += 5;
        v4 = 1;
        v8 -= 40;
        if (!v8)
          return v4;
      }
    }
    return 1;
  }
  return v4;
}

uint64_t sub_1C5C9F1EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v3;
  uint64_t v5;
  int v6;
  uint64_t v8;
  unint64_t **v9;
  unsigned int v10;

  v3 = *(unsigned __int16 *)(a1 + 24);
  if (v3 != 173)
  {
    if (v3 == 172)
      return sub_1C5D51ADC(a3, **(_QWORD **)(a1 + 32), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48));
    return 0;
  }
  v5 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40);
  v6 = *(unsigned __int16 *)(v5 + 24);
  if (v6 != 35 && v6 != 11)
    return 0;
  v8 = *(_QWORD *)(v5 + 80);
  v9 = (unint64_t **)(v8 + 24);
  v10 = *(_DWORD *)(v8 + 32);
  if (v10 > 0x40)
  {
    if ((((*v9)[(v10 - 1) >> 6] >> (v10 - 1)) & 1) == 0)
      return 0;
    return llvm::APInt::countTrailingZerosSlowCase(v9) == v10 - 1;
  }
  else
  {
    return *v9 == (unint64_t *)(1 << (v10 - 1));
  }
}

uint64_t *sub_1C5C9F2A8(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  llvm **v6;
  llvm *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  char v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char v55;
  uint64_t v56;
  char v57;
  unsigned __int8 *v58;
  int v59;

  v4 = *(_QWORD *)(*a1 + 24);
  v5 = *(unsigned __int16 *)(a2 + 24);
  v6 = *(llvm ***)(a2 + 40);
  v7 = *v6;
  v8 = (uint64_t)v6[1];
  if ((*(unsigned int (**)(uint64_t, uint64_t, llvm *, uint64_t))(*(_QWORD *)v4 + 1392))(v4, v5, *v6, v8))
  {
    v9 = sub_1C5CA0150(a2, *a1, 0);
    if (v9)
      return v9;
    if ((*(unsigned int (**)(uint64_t, _QWORD))(*(_QWORD *)v4 + 1128))(v4, *(unsigned __int16 *)(a2 + 24)))
    {
      v9 = sub_1C5CA0150(a2, *a1, 1);
      if (v9)
        return v9;
    }
  }
  v11 = *(uint64_t **)(a2 + 32);
  v12 = *v11;
  if (*(_WORD *)(*v11 + 24) != 190)
    goto LABEL_14;
  v13 = *(_QWORD *)(v12 + 48);
  if (!v13)
    goto LABEL_14;
  v14 = v11[1];
  v15 = 1;
  do
  {
    if (*(_DWORD *)(v13 + 8) == (_DWORD)v14)
    {
      if (!v15)
        goto LABEL_14;
      --v15;
    }
    v13 = *(_QWORD *)(v13 + 32);
  }
  while (v13);
  if (!v15)
  {
    LODWORD(v10) = 1;
    v16 = 1;
  }
  else
  {
LABEL_14:
    v10 = 0;
    v12 = v11[5];
    if (*(_WORD *)(v12 + 24) != 190)
      return v10;
    v16 = 0;
    LODWORD(v14) = *((_DWORD *)v11 + 12);
  }
  v17 = *(_QWORD *)(v12 + 48);
  if (!v17)
    return 0;
  v18 = 1;
  do
  {
    if (*(_DWORD *)(v17 + 8) == (_DWORD)v14)
    {
      if (!v18)
        return 0;
      --v18;
    }
    v17 = *(_QWORD *)(v17 + 32);
  }
  while (v17);
  if (v18)
    return 0;
  v20 = *(_QWORD *)(v12 + 32);
  v21 = *(_QWORD *)(v20 + 40);
  v22 = *(_QWORD *)(v20 + 48);
  if ((sub_1C5C9F100(v21, v22, 1) & 1) == 0 && !sub_1C5D584EC(*a1, v21))
    return 0;
  v54 = v22;
  v55 = v16;
  v23 = v21;
  v24 = *(_QWORD *)(v12 + 32);
  v25 = *(_QWORD *)(v24 + 80);
  v26 = *(_QWORD *)(v24 + 88);
  if ((sub_1C5C9F100(v25, v26, 1) & 1) == 0 && !sub_1C5D584EC(*a1, v25))
    return 0;
  v52 = v26;
  v53 = v25;
  v27 = v23;
  if ((v5 - 171) <= 1
    && ((sub_1C636CD34(v23, v54, 0) & 1) != 0 || sub_1C5D62374(v23, v54, 0)))
  {
    if (sub_1C636CD34(v25, v52, 0))
    {
      v48 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v10);
      v29 = *v48;
      v30 = v48[1];
LABEL_68:
      v57 = 1;
      v31 = v55;
      goto LABEL_34;
    }
    v49 = sub_1C5D62374(v25, v52, 0);
    v50 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v10);
    v29 = *v50;
    v30 = v50[1];
    if ((v49 & 1) != 0)
      goto LABEL_68;
  }
  else
  {
    v28 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v10);
    v29 = *v28;
    v30 = v28[1];
  }
  v31 = v55;
  if ((sub_1C5C9F100(v29, v30, 1) & 1) == 0 && !sub_1C5D584EC(*a1, v29))
    return 0;
  v57 = 0;
LABEL_34:
  v33 = *(unsigned __int8 **)(v12 + 64);
  v58 = v33;
  if (v33)
    llvm::MetadataTracking::track((uint64_t)&v58, v33, 2);
  v59 = *(_DWORD *)(v12 + 60);
  v34 = *a1;
  v35 = *(_QWORD *)(*a1 + 832);
  if ((v31 & 1) != 0)
  {
    v36 = v27;
    if (v35)
      LOWORD(v35) = *(_WORD *)(v35 + 8);
    v37 = v29;
    v38 = sub_1C5D56C70(v34, v5, (const llvm::APInt *)&v58, v7, v8, v36, v54, v32, v29, v30, v35);
  }
  else
  {
    if (v35)
      LOWORD(v35) = *(_WORD *)(v35 + 8);
    v51 = v27;
    v37 = v29;
    v38 = sub_1C5D56C70(v34, v5, (const llvm::APInt *)&v58, v7, v8, v29, v30, v32, v51, v54, v35);
  }
  v41 = (uint64_t)v38;
  v56 = v39;
  if ((v57 & 1) == 0
    && *((_WORD *)v38 + 12) != 51
    && (sub_1C5C9F100((uint64_t)v38, v39, 1) & 1) == 0
    && !sub_1C5D584EC(*a1, v41))
  {
    goto LABEL_62;
  }
  v42 = *a1;
  v43 = *(_QWORD *)(*a1 + 832);
  if ((v31 & 1) != 0)
  {
    if (v43)
      LOWORD(v43) = *(_WORD *)(v43 + 8);
    v44 = sub_1C5D56C70(v42, v5, (const llvm::APInt *)&v58, v7, v8, v53, v52, v40, v37, v30, v43);
  }
  else
  {
    if (v43)
      LOWORD(v43) = *(_WORD *)(v43 + 8);
    v44 = sub_1C5D56C70(v42, v5, (const llvm::APInt *)&v58, v7, v8, v37, v30, v40, v53, v52, v43);
  }
  v46 = (uint64_t)v44;
  v47 = v45;
  if ((v57 & 1) != 0
    || *((_WORD *)v44 + 12) == 51
    || (sub_1C5C9F100((uint64_t)v44, v45, 1) & 1) != 0
    || sub_1C5D584EC(*a1, v46))
  {
    v10 = sub_1C4815A8C(*a1, (const llvm::APInt *)&v58, v7, v8, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), v41, v56, v46, v47, SHIDWORD(v47));
    *((_WORD *)v10 + 36) = *(_WORD *)(a2 + 72);
  }
  else
  {
LABEL_62:
    v10 = 0;
  }
  if (v58)
    llvm::MetadataTracking::untrack((uint64_t)&v58, v58);
  return v10;
}

uint64_t *sub_1C5C9F740(uint64_t *a1, uint64_t a2, const llvm::APInt *a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, __int16 a8)
{
  uint64_t v15;
  char v16;
  BOOL v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  char v21;
  BOOL v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t *result;

  v15 = *(_QWORD *)(a4 + 40) + 16 * a5;
  v16 = *(_BYTE *)v15;
  if (*(_BYTE *)v15)
  {
    v17 = (v16 + 104) >= 0x13u && (v16 - 8) >= 7u;
    if (!v17 || (v16 - 75) < 0x2Du)
      goto LABEL_25;
  }
  else
  {
    v18 = *(_QWORD *)(v15 + 8);
    if ((*(_DWORD *)(v18 + 8) & 0xFE) == 0x12)
      v19 = *(unsigned __int8 *)(**(_QWORD **)(v18 + 16) + 8);
    else
      v19 = *(_DWORD *)(v18 + 8);
    if (v19 < 7)
      goto LABEL_25;
  }
  v20 = *(_QWORD *)(a6 + 40) + 16 * a7;
  v21 = *(_BYTE *)v20;
  if (*(_BYTE *)v20)
  {
    v22 = (v21 + 104) >= 0x13u && (v21 - 8) >= 7u;
    if (v22 && (v21 - 75) >= 0x2Du)
      goto LABEL_26;
  }
  else
  {
    v23 = *(_QWORD *)(v20 + 8);
    if ((*(_DWORD *)(v23 + 8) & 0xFE) == 0x12)
      v24 = *(unsigned __int8 *)(**(_QWORD **)(v23 + 16) + 8);
    else
      v24 = *(_DWORD *)(v23 + 8);
    if (v24 > 6)
      goto LABEL_26;
  }
LABEL_25:
  if ((~a8 & 0x440) != 0)
    return 0;
LABEL_26:
  result = sub_1C5CA0670(a1, a2, a3, a4, a5, a6, a7);
  if (!result)
    return sub_1C5CA0670(a1, a2, a3, a6, a7, a4, a5);
  return result;
}

uint64_t *sub_1C5C9F8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  int v7;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  const llvm::APInt *v16;
  llvm *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;

  v7 = a3;
  v10 = *(uint64_t **)a1;
  if (!sub_1C5C9F1EC(a2, a3, **(_QWORD **)a1))
    return 0;
  v11 = *(_QWORD *)(a2 + 48);
  if (!v11)
    return 0;
  v12 = 1;
  do
  {
    if (*(_DWORD *)(v11 + 8) == v7)
    {
      if (!v12)
        return 0;
      --v12;
    }
    v11 = *(_QWORD *)(v11 + 32);
  }
  while (v11);
  if (v12
    || !sub_1C5C9F100(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), 1))
  {
    return 0;
  }
  v14 = *v10;
  v16 = *(const llvm::APInt **)(a1 + 8);
  v15 = *(_QWORD *)(a1 + 16);
  v17 = *(llvm **)v15;
  v18 = *(_QWORD *)(v15 + 8);
  v19 = *(uint64_t **)(a2 + 32);
  v20 = *v19;
  v21 = v19[1];
  v22 = *(_QWORD *)(v14 + 832);
  if (v22)
    LOWORD(v22) = *(_WORD *)(v22 + 8);
  v24 = sub_1C5D56C70(v14, 56, v16, v17, v18, a4, a5, v13, v20, v21, v22);
  v26 = *(_QWORD *)(a2 + 32);
  v27 = *(_QWORD *)(v26 + 40);
  v28 = *(_QWORD *)(v26 + 48);
  v29 = *(_QWORD *)(v14 + 832);
  if (v29)
    LOWORD(v29) = *(_WORD *)(v29 + 8);
  return sub_1C5D56C70(v14, 56, v16, v17, v18, (uint64_t)v24, v23, v25, v27, v28, v29);
}

uint64_t sub_1C5C9FA08(uint64_t a1, uint64_t a2, const llvm::KnownBits *a3)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v8;
  unsigned int v9;
  uint64_t v10;
  const llvm::KnownBits *v11;

  v10 = a2;
  v11 = a3;
  v4 = sub_1C6329368((unsigned int *)&v10, a2, (BOOL)a3);
  v9 = v4;
  if (v4 > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v8, -1, 1);
  }
  else
  {
    v5 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v4;
    if (!v4)
      v5 = 0;
    v8 = v5;
  }
  v6 = sub_1C5CA0B3C(a1, v10, v11, (uint64_t)&v8);
  if (v9 >= 0x41 && v8)
    MEMORY[0x1CAA32F9C](v8, 0x1000C8000313F17);
  return v6;
}

uint64_t *sub_1C5C9FAB0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  llvm *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  llvm *v63;
  uint64_t v64;
  int v65;
  uint64_t *v66;
  uint64_t v67;
  uint64_t *v69;
  unsigned int *v70;
  BOOL v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t *v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  __int16 v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _QWORD *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  _QWORD *v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  unint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  __int16 v114;
  unsigned __int8 *v115;
  int v116;

  v12 = *(_QWORD *)(a2 + 40) + 16 * a3;
  v14 = *(llvm **)v12;
  v13 = *(_QWORD *)(v12 + 8);
  v15 = *(unsigned __int8 **)(a6 + 64);
  v115 = v15;
  if (v15)
    llvm::MetadataTracking::track((uint64_t)&v115, v15, 2);
  v116 = *(_DWORD *)(a6 + 60);
  if (*(_WORD *)(a4 + 24) == 175)
  {
    v16 = **(_QWORD **)(a4 + 32);
    if (*(_WORD *)(v16 + 24) == 57)
    {
      if (sub_1C636CD34(**(_QWORD **)(v16 + 32), *(_QWORD *)(*(_QWORD *)(v16 + 32) + 8), 0))
      {
        v42 = *(_QWORD *)a1;
        v43 = *(_QWORD **)(a4 + 32);
        v44 = *(_QWORD *)(*v43 + 32);
        v45 = *(_QWORD *)(v44 + 40);
        v46 = *(_QWORD *)(v44 + 48);
        v47 = v43[5];
        v48 = v43[6];
        v49 = *(_QWORD *)(v42 + 832);
        if (v49)
          LOWORD(v49) = *(_WORD *)(v49 + 8);
        v50 = sub_1C5D56C70(v42, 175, (const llvm::APInt *)&v115, v14, v13, v45, v46, v41, v47, v48, v49);
        v52 = *(_QWORD *)(v42 + 832);
        if (v52)
          LOWORD(v52) = *(_WORD *)(v52 + 8);
        v113 = v51;
        v114 = v52;
        v112 = (uint64_t)v50;
        v35 = v42;
LABEL_79:
        v40 = 57;
        v63 = v14;
        v64 = v13;
        v31 = (uint64_t *)a2;
        v34 = a3;
        goto LABEL_80;
      }
    }
  }
  v17 = sub_1C5CA0C38(1, a2, a3, a4, a5, *(_QWORD *)a1, (const llvm::APInt *)&v115);
  if (v17)
  {
LABEL_6:
    v18 = v17;
    goto LABEL_67;
  }
  if (((*(uint64_t (**)(_QWORD, llvm *, uint64_t))(**(_QWORD **)(a1 + 8) + 360))(*(_QWORD *)(a1 + 8), v14, v13) & 1) == 0&& *(_WORD *)(a2 + 24) == 56)
  {
    v21 = *(_QWORD *)(a2 + 48);
    if (v21)
    {
      v22 = 1;
      do
      {
        if (*(_DWORD *)(v21 + 8) == (_DWORD)a3)
        {
          if (!v22)
            goto LABEL_17;
          --v22;
        }
        v21 = *(_QWORD *)(v21 + 32);
      }
      while (v21);
      if (!v22
        && sub_1C5D622B8(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), 0))
      {
        v100 = *(_QWORD *)a1;
        v101 = *(uint64_t **)(a2 + 32);
        v102 = *v101;
        v103 = v101[1];
        v104 = sub_1C63293BC(*(_QWORD *)a1, (const llvm::APInt *)&v115, (_BOOL8)v14, v13, 0, 0);
        v107 = *(_QWORD *)(v100 + 832);
        if (v107)
          LOWORD(v107) = *(_WORD *)(v107 + 8);
        v108 = sub_1C5D56C70(v100, 173, (const llvm::APInt *)&v115, v14, v13, v102, v103, v106, v104, v105, v107);
        goto LABEL_87;
      }
    }
  }
LABEL_17:
  v23 = *(unsigned __int16 *)(a2 + 24);
  if (v23 == 57)
  {
    v24 = *(_QWORD *)(a2 + 48);
    if (!v24)
      goto LABEL_46;
    v25 = 1;
    do
    {
      if (*(_DWORD *)(v24 + 8) == (_DWORD)a3)
      {
        if (!v25)
          goto LABEL_46;
        --v25;
      }
      v24 = *(_QWORD *)(v24 + 32);
    }
    while (v24);
    if (v25)
      goto LABEL_46;
    if (sub_1C5C9F100(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), 1))
    {
      v27 = *(uint64_t **)(a2 + 32);
      v28 = *v27;
      v29 = v27[1];
      v30 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v30)
        LOWORD(v30) = *(_WORD *)(v30 + 8);
      v31 = sub_1C5D56C70(*(_QWORD *)a1, 56, (const llvm::APInt *)&v115, v14, v13, v28, v29, v26, a4, a5, v30);
      v34 = v33;
      v35 = *(_QWORD *)a1;
      v36 = *(_QWORD *)(a2 + 32);
      v37 = *(_QWORD *)(v36 + 40);
      v38 = *(_QWORD *)(v36 + 48);
      v39 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v39)
        LOWORD(v39) = *(_WORD *)(v39 + 8);
      v113 = v38;
      v114 = v39;
      v112 = v37;
      v40 = 57;
LABEL_43:
      v63 = v14;
      v64 = v13;
LABEL_80:
      v17 = sub_1C5D56C70(v35, v40, (const llvm::APInt *)&v115, v63, v64, (uint64_t)v31, v34, v32, v112, v113, v114);
      goto LABEL_6;
    }
    if ((sub_1C5C9F100(**(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), 1) & 1) != 0)
    {
      v54 = *(_QWORD *)(a2 + 32);
      v55 = *(_QWORD *)(v54 + 40);
      v56 = *(_QWORD *)(v54 + 48);
      v57 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v57)
        LOWORD(v57) = *(_WORD *)(v57 + 8);
      v31 = sub_1C5D56C70(*(_QWORD *)a1, 57, (const llvm::APInt *)&v115, v14, v13, a4, a5, v53, v55, v56, v57);
      v34 = v58;
      v35 = *(_QWORD *)a1;
      v59 = *(uint64_t **)(a2 + 32);
      v60 = *v59;
      v61 = v59[1];
      v62 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v62)
        LOWORD(v62) = *(_WORD *)(v62 + 8);
      v113 = v61;
      v114 = v62;
      v112 = v60;
      v40 = 56;
      goto LABEL_43;
    }
    v23 = *(unsigned __int16 *)(a2 + 24);
  }
  if (v23 == 198
    && sub_1C6329368(*(unsigned int **)(a2 + 32), v19, v20) == (llvm::Type *)1
    && sub_1C6329468(*(unsigned int **)(a1 + 8), (char)v14, v13) == 1)
  {
    v75 = *(uint64_t **)(a2 + 32);
    v76 = *v75;
    v77 = v75[1];
    v78 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v78)
      v79 = *(_WORD *)(v78 + 8);
    else
      v79 = 0;
    v108 = sub_1C5D52060(*(_QWORD *)a1, 199, (const llvm::APInt *)&v115, v14, v13, v76, v77, v79);
LABEL_87:
    v111 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v111)
      LOWORD(v111) = *(_WORD *)(v111 + 8);
    v17 = sub_1C5D56C70(*(_QWORD *)a1, 57, (const llvm::APInt *)&v115, v14, v13, a4, a5, v110, (uint64_t)v108, v109, v111);
    goto LABEL_6;
  }
LABEL_46:
  v65 = *(unsigned __int16 *)(a4 + 24);
  if (v65 == 204)
  {
    v69 = *(uint64_t **)(a4 + 32);
    if (*(_BYTE *)(v69[5] + 80) == 2)
    {
      v80 = *(_QWORD *)a1;
      v81 = *v69;
      v82 = v69[1];
      v83 = sub_1C6366AB4(*(_QWORD *)a1, 1, (const llvm::APInt *)&v115, v14, v13, 0, 0);
      v86 = *(_QWORD *)(v80 + 832);
      if (v86)
        LOWORD(v86) = *(_WORD *)(v86 + 8);
      v87 = sub_1C5D56C70(v80, 171, (const llvm::APInt *)&v115, v14, v13, v81, v82, v85, (uint64_t)v83, v84, v86);
      v89 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v89)
        LOWORD(v89) = *(_WORD *)(v89 + 8);
      v113 = v88;
      v114 = v89;
      v112 = (uint64_t)v87;
      v35 = *(_QWORD *)a1;
      goto LABEL_79;
    }
  }
  else if (v65 == 72)
  {
    v66 = *(uint64_t **)(a4 + 32);
    if (sub_1C6368AD4(v66[5]) && a5 == 0)
    {
      v17 = sub_1C636D72C(*(_QWORD *)a1, (const char *)0x48, (const llvm::APInt *)&v115, *(_QWORD *)(a4 + 40), *(unsigned __int16 *)(a4 + 58), a2, a3, v67, *v66, v66[1], v66[10], v66[11]);
      goto LABEL_6;
    }
  }
  if ((_BYTE)v14)
  {
    v70 = *(unsigned int **)(a1 + 8);
    if (v14 == 1
      || (*(_QWORD *)&v70[2 * v14 + 24] ? (v71 = v14 == 0) : (v71 = 1), !v71))
    {
      if ((*((unsigned __int8 *)v70 + 390 * v14 + 3934) | 4) == 4)
      {
        v72 = sub_1C5CA0D28(v70, a4, a5);
        if (v72)
        {
          v90 = v72;
          v91 = v73;
          v92 = *(_QWORD *)a1;
          v93 = (uint64_t *)(*(_QWORD *)(v72 + 40) + 16 * v73);
          v94 = sub_1C636A8B4(*(_QWORD *)a1, (uint64_t)v14, v13, *v93, v93[1]);
          v96 = v95;
          v97 = sub_1C6366AB4(*(_QWORD *)a1, 0, (const llvm::APInt *)&v115, v14, v13, 0, 0);
          v17 = sub_1C636D72C(v92, (const char *)0x48, (const llvm::APInt *)&v115, v94, v96, a2, a3, v99, (uint64_t)v97, v98, v90, v91);
          goto LABEL_6;
        }
      }
    }
    v18 = 0;
  }
  else
  {
    v18 = (uint64_t *)v14;
  }
LABEL_67:
  if (v115)
    llvm::MetadataTracking::untrack((uint64_t)&v115, v115);
  return v18;
}

uint64_t sub_1C5CA00A8(uint64_t a1, unsigned int a2, unsigned __int8 a3, uint64_t a4, int a5)
{
  uint64_t v5;

  v5 = a3;
  if (a5)
  {
    if (!a3)
      return v5;
    if (a3 == 1)
    {
      if (a2 > 0x185)
        return 0;
      return *(_BYTE *)(a1 + 390 * a3 + a2 + 3862) == 0;
    }
    v5 = *(_QWORD *)(a1 + 8 * a3 + 96);
    if (v5)
    {
      v5 = 0;
      if (a2 <= 0x185)
        return *(_BYTE *)(a1 + 390 * a3 + a2 + 3862) == 0;
    }
  }
  else if (a3)
  {
    if (a3 == 1 || (v5 = *(_QWORD *)(a1 + 8 * a3 + 96)) != 0)
    {
      if (a2 > 0x185)
        return 1;
      return (*(_BYTE *)(a1 + 390 * a3 + a2 + 3862) & 0xFB) == 0;
    }
  }
  return v5;
}

uint64_t *sub_1C5CA0150(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  unint64_t v28;
  unsigned __int8 *v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  unsigned __int8 *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;
  llvm *v46;
  unsigned __int8 *v47;
  int v48;

  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)v3;
  v4 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 40);
  v7 = *(unsigned int *)(v3 + 48);
  if (a3)
    v8 = v4 & 0xFFFFFFFF00000000 | v7;
  else
    v8 = v4;
  if (a3)
    v9 = v6;
  else
    v9 = v5;
  if (a3)
  {
    v10 = v5;
  }
  else
  {
    LODWORD(v4) = v7;
    v10 = v6;
  }
  v11 = *(_QWORD *)(v10 + 48);
  if (!v11)
    return 0;
  v14 = 1;
  do
  {
    if (*(_DWORD *)(v11 + 8) == (_DWORD)v4)
    {
      if (!v14)
        return 0;
      --v14;
    }
    v11 = *(_QWORD *)(v11 + 32);
  }
  while (v11);
  if (v14 || *(_WORD *)(v10 + 24) != 191)
    return 0;
  v15 = *(unsigned __int16 *)(a1 + 24);
  v16 = *(_QWORD *)(a1 + 40);
  v17 = *(_QWORD *)(v16 + 8);
  v18 = *(uint64_t **)(v10 + 32);
  v45 = *v18;
  v46 = *(llvm **)v16;
  v44 = v18[1];
  v20 = v18[5];
  v19 = v18[6];
  v22 = v18[10];
  v21 = v18[11];
  if (sub_1C5CA0400(*(unsigned __int16 *)(a1 + 24), v20, v19))
  {
    v26 = sub_1C6368100(a2, v9, v8);
    v28 = v27;
    v29 = *(unsigned __int8 **)(a1 + 64);
    v47 = v29;
    if (v29)
      llvm::MetadataTracking::track((uint64_t)&v47, v29, 2);
    v48 = *(_DWORD *)(a1 + 60);
    v30 = sub_1C5D56C70(a2, v15, (const llvm::APInt *)&v47, v46, v17, (uint64_t)v26, v28, v25, v22, v21, *(_WORD *)(a1 + 72));
    v32 = v31;
    if (v47)
      llvm::MetadataTracking::untrack((uint64_t)&v47, v47);
    v33 = *(unsigned __int8 **)(a1 + 64);
    v47 = v33;
    if (v33)
      llvm::MetadataTracking::track((uint64_t)&v47, v33, 2);
    v48 = *(_DWORD *)(a1 + 60);
    v34 = sub_1C4815A8C(a2, (const llvm::APInt *)&v47, v46, v17, v45, v44, (uint64_t)v26, v28, (uint64_t)v30, v32, SHIDWORD(v32));
  }
  else
  {
    if (!sub_1C5CA0400(v15, v22, v21))
      return 0;
    v36 = sub_1C6368100(a2, v9, v8);
    v38 = v37;
    v39 = *(unsigned __int8 **)(a1 + 64);
    v47 = v39;
    if (v39)
      llvm::MetadataTracking::track((uint64_t)&v47, v39, 2);
    v48 = *(_DWORD *)(a1 + 60);
    v40 = sub_1C5D56C70(a2, v15, (const llvm::APInt *)&v47, v46, v17, (uint64_t)v36, v38, v35, v20, v19, *(_WORD *)(a1 + 72));
    v42 = v41;
    if (v47)
      llvm::MetadataTracking::untrack((uint64_t)&v47, v47);
    v43 = *(unsigned __int8 **)(a1 + 64);
    v47 = v43;
    if (v43)
      llvm::MetadataTracking::track((uint64_t)&v47, v43, 2);
    v48 = *(_DWORD *)(a1 + 60);
    v34 = sub_1C4815A8C(a2, (const llvm::APInt *)&v47, v46, v17, v45, v44, (uint64_t)v40, v42, (uint64_t)v36, v38, SHIDWORD(v38));
  }
  v23 = v34;
  if (v47)
    llvm::MetadataTracking::untrack((uint64_t)&v47, v47);
  return v23;
}

uint64_t sub_1C5CA0400(int a1, uint64_t a2, uint64_t a3)
{
  unsigned int v3;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t result;
  uint64_t v10;
  llvm::APInt *v11;
  unsigned int v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  llvm::APInt *v19;
  unsigned int v20;
  _QWORD v21[2];
  int v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  char v28;
  uint64_t v29;

  v3 = a3;
  v29 = *MEMORY[0x1E0C80C00];
  v6 = sub_1C5D56858(a2, a3, 0);
  if (!v6)
    goto LABEL_7;
  if ((a1 - 98) >= 2)
  {
    if (a1 == 97)
    {
      v16 = *(_QWORD *)(v6 + 80);
      if (*(_UNKNOWN **)(v16 + 32) == &unk_1C866F1C0)
        v17 = *(_BYTE *)(*(_QWORD *)(v16 + 40) + 28);
      else
        v17 = *(_BYTE *)(v16 + 52);
      if ((v17 & 7) == 3)
        return (v17 & 8) == 0;
      return 0;
    }
    if (a1 == 96)
    {
      v7 = *(_QWORD *)(v6 + 80);
      if (*(_UNKNOWN **)(v7 + 32) == &unk_1C866F1C0)
        v8 = *(unsigned __int8 *)(*(_QWORD *)(v7 + 40) + 28);
      else
        v8 = *(unsigned __int8 *)(v7 + 52);
      if ((v8 & 7) == 3)
        return (v8 >> 3) & 1;
      return 0;
    }
LABEL_7:
    result = sub_1C5D4F7E8(a2, v3, 0, 0);
    if (!result)
      return result;
    if ((a1 - 175) < 3 || (a1 - 56) < 2)
    {
      v10 = *(_QWORD *)(result + 80);
      v11 = (llvm::APInt *)(v10 + 24);
      v12 = *(_DWORD *)(v10 + 32);
      if (v12 > 0x40)
        return llvm::APInt::countLeadingZerosSlowCase(v11) == v12;
      else
        return *(_QWORD *)v11 == 0;
    }
    if (a1 == 58)
    {
      v18 = *(_QWORD *)(result + 80);
      v19 = (llvm::APInt *)(v18 + 24);
      v20 = *(_DWORD *)(v18 + 32);
      if (v20 > 0x40)
        return llvm::APInt::countLeadingZerosSlowCase(v19) == v20 - 1;
      else
        return *(_QWORD *)v19 == 1;
    }
    return 0;
  }
  v14 = *(_QWORD *)(v6 + 80);
  LODWORD(v25) = 64;
  v24 = 0x3FF0000000000000;
  llvm::detail::IEEEFloat::initFromDoubleAPInt((llvm::detail::IEEEFloat *)v21, (const llvm::APInt **)&v24);
  v25 = v21[0];
  v26 = v21[1];
  v27 = v22;
  v28 = v23 & 0xF;
  llvm::APFloat::convert((uint64_t)&v24, *(void **)(v14 + 32), 1, v21);
  result = sub_1C47ECB98(v14 + 24, (uint64_t)&v24);
  if ((_UNKNOWN *)v25 == &unk_1C866F1C0)
  {
    v15 = result;
    sub_1C4773C74(&v26);
    return v15;
  }
  if ((*(_DWORD *)(v25 + 8) - 64) <= 0xFFFFFF7F && v26)
  {
    v15 = result;
    MEMORY[0x1CAA32F9C](v26, 0x1000C8000313F17);
    return v15;
  }
  return result;
}

uint64_t *sub_1C5CA0670(uint64_t *a1, uint64_t a2, const llvm::APInt *a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unsigned int *v22;
  uint64_t v23;
  unint64_t v24;
  unsigned int *v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  llvm *v42;
  uint64_t v43;
  unint64_t v44;
  unsigned __int8 *v45;
  int v46;
  uint64_t v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  if (*(unsigned __int16 *)(a4 + 24) != (_DWORD)a2)
    return 0;
  v14 = *(uint64_t **)(a4 + 32);
  v15 = *(_QWORD *)(a4 + 40) + 16 * a5;
  v16 = *v14;
  v44 = v14[1];
  v18 = v14[5];
  v17 = v14[6];
  v19 = *a1;
  v20 = v18;
  if (*(_WORD *)(v18 + 24) == 216)
  {
    v20 = v14[5];
    v21 = v14[6];
    do
    {
      v22 = *(unsigned int **)(v20 + 32);
      v20 = *(_QWORD *)v22;
      v21 = v21 & 0xFFFFFFFF00000000 | v22[2];
    }
    while (*(_WORD *)(*(_QWORD *)v22 + 24) == 216);
  }
  v42 = *(llvm **)v15;
  v43 = *(_QWORD *)(v15 + 8);
  if (!sub_1C5D583CC(v19, v20))
  {
LABEL_25:
    if ((a2 - 171) > 1)
    {
      if ((_DWORD)a2 == 173)
      {
        if (v16 == a6 && (_DWORD)a7 == (_DWORD)v44)
          return (uint64_t *)v18;
        if (v18 == a6)
          goto LABEL_36;
      }
    }
    else
    {
      if (v16 == a6 && (_DWORD)a7 == (_DWORD)v44)
        return (uint64_t *)a4;
      if (v18 == a6)
      {
        v16 = a4;
LABEL_36:
        if ((_DWORD)a7 == (_DWORD)v17)
          return (uint64_t *)v16;
      }
    }
    return 0;
  }
  v23 = a6;
  if (*(_WORD *)(a6 + 24) == 216)
  {
    v23 = a6;
    v24 = a7;
    do
    {
      v25 = *(unsigned int **)(v23 + 32);
      v23 = *(_QWORD *)v25;
      v24 = v24 & 0xFFFFFFFF00000000 | v25[2];
    }
    while (*(_WORD *)(*(_QWORD *)v25 + 24) == 216);
  }
  if (!sub_1C5D583CC(*a1, v23))
  {
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(*(_QWORD *)a1[1] + 1512))(a1[1], *a1, a4, a5, a6, a7))
    {
      v33 = *a1;
      v34 = *(unsigned __int8 **)(a4 + 64);
      v45 = v34;
      if (v34)
        llvm::MetadataTracking::track((uint64_t)&v45, v34, 2);
      v46 = *(_DWORD *)(a4 + 60);
      v35 = *(_QWORD *)(v33 + 832);
      if (v35)
        LOWORD(v35) = *(_WORD *)(v35 + 8);
      v37 = sub_1C5D56C70(v33, a2, (const llvm::APInt *)&v45, v42, v43, v16, v44, v32, a6, a7, v35);
      v39 = v38;
      if (v45)
        llvm::MetadataTracking::untrack((uint64_t)&v45, v45);
      v40 = *(_QWORD *)(*a1 + 832);
      if (v40)
        LOWORD(v40) = *(_WORD *)(v40 + 8);
      return sub_1C5D56C70(*a1, a2, a3, v42, v43, (uint64_t)v37, v39, v36, v18, v17, v40);
    }
    goto LABEL_25;
  }
  v26 = *a1;
  v45 = (unsigned __int8 *)v18;
  v46 = v17;
  v47 = a6;
  v48 = a7;
  v27 = sub_1C5D53628(v26, a2, (const char *)a3, v42, v43, (uint64_t)&v45, 2);
  if (!v27)
    return 0;
  v30 = *(_QWORD *)(*a1 + 832);
  if (v30)
    LOWORD(v30) = *(_WORD *)(v30 + 8);
  return sub_1C5D56C70(*a1, a2, a3, v42, v43, v16, v44, v29, (uint64_t)v27, v28, v30);
}

void sub_1C5CA0980()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CA0994()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E8197F58;
  return result;
}

void sub_1C5CA09B8(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E8197F58;
}

uint64_t sub_1C5CA09D0(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  size_t v12;
  unsigned int v13;
  void *v14;
  uint64_t v15;
  BOOL v16;
  void *__s2;
  unsigned int v18;

  v3 = *a2;
  v4 = *a3;
  if (!(*a2 | *a3))
    return 1;
  if (v3)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
    return 0;
  v8 = *(_QWORD *)(v3 + 80);
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v18 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    __s2 = (void *)operator new[]();
    memcpy(__s2, *(const void **)(v9 + 24), v12);
    llvm::APInt::flipAllBitsSlowCase((uint64_t)&__s2);
  }
  else
  {
    if ((_DWORD)v10)
      v11 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v10;
    else
      v11 = 0;
    __s2 = (void *)(v11 & ~*(_QWORD *)(v9 + 24));
  }
  llvm::APInt::operator++((uint64_t)&__s2);
  v13 = v18;
  v14 = __s2;
  v18 = 0;
  v15 = *(unsigned int *)(v8 + 32);
  if (v15 > 0x40)
    v16 = memcmp(*(const void **)(v8 + 24), __s2, ((unint64_t)(v15 + 63) >> 3) & 0x3FFFFFF8) == 0;
  else
    v16 = *(_QWORD *)(v8 + 24) == (_QWORD)__s2;
  v6 = v16;
  if (v13 >= 0x41)
  {
    if (v14)
    {
      MEMORY[0x1CAA32F9C](v14, 0x1000C8000313F17);
      if (v18 >= 0x41)
      {
        if (__s2)
          MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
      }
    }
  }
  return v6;
}

uint64_t sub_1C5CA0B3C(uint64_t a1, uint64_t a2, const llvm::KnownBits *a3, uint64_t a4)
{
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  const void *v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;

  v6 = *(_BYTE *)(a1 + 34);
  v8 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v15 = v8;
  LOBYTE(v8) = *(_BYTE *)(a1 + 33);
  v16 = v6;
  v17 = v8;
  v18 = 0;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v12 = 1;
  v11 = 0;
  v14 = 1;
  v13 = 0;
  v9 = sub_1C6375E58(v7, a2, a3, a4, &v11, (uint64_t)&v15, 0, 0);
  if ((_DWORD)v9)
  {
    sub_1C5C5B004(a1, a2);
    sub_1C5C5B32C((uint64_t *)a1, &v15);
  }
  if (v14 >= 0x41 && v13)
    MEMORY[0x1CAA32F9C](v13, 0x1000C8000313F17);
  if (v12 >= 0x41 && v11)
    MEMORY[0x1CAA32F9C](v11, 0x1000C8000313F17);
  return v9;
}

uint64_t *sub_1C5CA0C38(int a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const llvm::APInt *a7)
{
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  __int128 v23;

  if (*(_WORD *)(a4 + 24) != 171)
    return 0;
  if (!sub_1C5D622B8(*(_QWORD *)(*(_QWORD *)(a4 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a4 + 32) + 48), 0))return 0;
  v23 = *(_OWORD *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  v14 = sub_1C6368B30(a6, **(_QWORD **)(a4 + 32), *(_QWORD *)(*(_QWORD *)(a4 + 32) + 8), 0);
  if (sub_1C6131328((unsigned __int8 *)&v23, v15, v16) != (llvm::Type *)v14)
    return 0;
  if (a1)
    v18 = 57;
  else
    v18 = 56;
  v19 = *(uint64_t **)(a4 + 32);
  v20 = *v19;
  v21 = v19[1];
  v22 = *(_QWORD *)(a6 + 832);
  if (v22)
    LOWORD(v22) = *(_WORD *)(v22 + 8);
  return sub_1C5D56C70(a6, v18, a7, (llvm *)v23, *((uint64_t *)&v23 + 1), a2, a3, v17, v20, v21, v22);
}

uint64_t sub_1C5CA0D28(unsigned int *a1, uint64_t a2, unint64_t a3)
{
  char i;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  BOOL v10;
  _QWORD *v11;
  uint64_t v12;
  char v13;
  char v14;
  uint64_t result;

  for (i = 0; ; i = 1)
  {
    while (1)
    {
      v7 = *(unsigned __int16 *)(a2 + 24);
      if ((_DWORD)v7 != 199 && (_DWORD)v7 != 201)
        break;
      v8 = *(uint64_t **)(a2 + 32);
      a2 = *v8;
      a3 = a3 & 0xFFFFFFFF00000000 | *((unsigned int *)v8 + 2);
    }
    if ((_DWORD)v7 != 171)
      break;
    v9 = *(uint64_t **)(a2 + 32);
    if (!sub_1C636F474(v9[5]))
      break;
    a2 = *v9;
    a3 = a3 & 0xFFFFFFFF00000000 | *((unsigned int *)v9 + 2);
  }
  if ((_DWORD)a3 != 1)
    return 0;
  v10 = (v7 - 72) > 7 || ((1 << (v7 - 72)) & 0xA3) == 0;
  if (v10)
    return 0;
  v11 = *(_QWORD **)(a2 + 40);
  v12 = *v11;
  if (!*v11)
    return 0;
  if ((_DWORD)v12 != 1 && !*(_QWORD *)&a1[2 * v12 + 24])
    return 0;
  v13 = *((_BYTE *)a1 + 390 * *v11 + v7 + 3862);
  v10 = (v13 & 0xFB) == 0;
  v14 = i | ((v13 & 0xFB) != 0);
  if (v10)
    result = a2;
  else
    result = 0;
  if ((v14 & 1) == 0)
  {
    if (sub_1C6329468(a1, v11[2], v11[3]) == 1)
      return a2;
    else
      return 0;
  }
  return result;
}

unint64_t sub_1C5CA0E64(const llvm::APInt *a1, uint64_t a2, llvm *a3, uint64_t a4, uint64_t a5, int a6)
{
  unint64_t result;

  result = a3;
  if ((_BYTE)a3)
  {
    if (a3 - 15 >= 0x9C)
      return (unint64_t)sub_1C6366AB4(a5, 0, a1, a3, a4, 0, 0);
  }
  else if ((*(_DWORD *)(a4 + 8) & 0xFE) != 0x12)
  {
    return (unint64_t)sub_1C6366AB4(a5, 0, a1, a3, a4, 0, 0);
  }
  if (!a6)
    return (unint64_t)sub_1C6366AB4(a5, 0, a1, a3, a4, 0, 0);
  if ((_BYTE)a3)
  {
    if (a3 == 1 || (result = 0, (_BYTE)a3) && *(_QWORD *)(a2 + 8 * a3 + 96))
    {
      if (*(_BYTE *)(a2 + 390 * a3 + 4008))
        return 0;
      return (unint64_t)sub_1C6366AB4(a5, 0, a1, a3, a4, 0, 0);
    }
  }
  return result;
}

uint64_t *sub_1C5CA0F18(uint64_t a1, llvm *a2, uint64_t a3, const llvm::APInt *a4, uint64_t a5, unint64_t a6)
{
  _QWORD *v6;
  uint64_t v8;
  __int16 v9;
  unsigned __int8 *v10[2];

  if (*(_WORD *)(a5 + 24) == 51)
  {
    v10[0] = 0;
    v10[1] = 0;
    v6 = sub_1C5D51E4C(a1, 51, (uint64_t)v10, a2, a3);
    if (v10[0])
      llvm::MetadataTracking::untrack((uint64_t)v10, v10[0]);
    return v6;
  }
  else
  {
    v8 = *(_QWORD *)(a1 + 832);
    if (v8)
      v9 = *(_WORD *)(v8 + 8);
    else
      v9 = 0;
    return sub_1C5D52060(a1, 156, a4, a2, a3, a5, a6, v9);
  }
}

_QWORD *sub_1C5CA0FB8(uint64_t a1, llvm *a2, uint64_t a3, const llvm::APInt *a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v8;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  llvm *v15;
  uint64_t v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[33];

  v19[32] = *MEMORY[0x1E0C80C00];
  v15 = a2;
  v16 = a3;
  if (*(_WORD *)(a5 + 24) == 51)
  {
    v17 = 0;
    v18 = 0;
    v8 = sub_1C5D51E4C(a1, 51, (uint64_t)&v17, a2, a3);
    if (v17)
      llvm::MetadataTracking::untrack((uint64_t)&v17, (unsigned __int8 *)v17);
  }
  else
  {
    v12 = sub_1C612FE00((llvm::EVT *)&v15, (const char *)a2);
    v17 = v19;
    v18 = 0x1000000000;
    sub_1C4825C80((unsigned int *)&v17, v12, a5, a6);
    v13 = *(_QWORD *)(a1 + 832);
    if (v13)
      v14 = *(unsigned __int16 *)(v13 + 8);
    else
      v14 = 0;
    v8 = sub_1C636D0C8(a1, (const char *)0x92, a4, v15, v16, (uint64_t *)v17, v18, v14);
    if (v17 != v19)
      free(v17);
  }
  return v8;
}

uint64_t *sub_1C5CA10F0(uint64_t a1, llvm *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t *v8;
  llvm **v9;
  uint64_t *v10;
  uint64_t v11;
  llvm *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v27;
  unsigned __int8 *v28;
  llvm *v29;
  uint64_t v30;
  llvm *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  _DWORD *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  llvm **v44;
  llvm *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned __int8 *v48;
  uint64_t *v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v54;
  unsigned __int8 *v55;
  unint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unsigned __int8 *v63;
  unint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  llvm *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 *v71;
  uint64_t v73;
  unsigned __int8 *v74;
  int v75;

  if (*(_WORD *)(a4 + 24) != 57)
    return 0;
  if (!*(_BYTE *)(a1 + 33))
  {
LABEL_7:
    v10 = *(uint64_t **)(a4 + 32);
    v9 = *(llvm ***)(a4 + 40);
    v12 = *v9;
    v11 = (uint64_t)v9[1];
    v14 = *v10;
    v13 = v10[1];
    v15 = v10[5];
    v16 = v10[6];
    if (*(_WORD *)(*v10 + 24) == 170)
    {
      v17 = *(_QWORD *)(v14 + 48);
      if (v17)
      {
        v18 = 1;
        do
        {
          if (*(_DWORD *)(v17 + 8) == (_DWORD)v13)
          {
            if (!v18)
              goto LABEL_15;
            --v18;
          }
          v17 = *(_QWORD *)(v17 + 32);
        }
        while (v17);
        if (!v18)
        {
          v49 = *(uint64_t **)(v14 + 32);
          v50 = *v49;
          v34 = v49[1];
          v33 = v49[5];
          v51 = v49[6];
          if (*v49 == v15 && (_DWORD)v34 == (_DWORD)v16)
          {
            v57 = *(_QWORD *)a1;
            v58 = *(unsigned __int8 **)(a4 + 64);
            v74 = v58;
            if (v58)
            {
              v59 = v51;
              v60 = v33;
              llvm::MetadataTracking::track((uint64_t)&v74, v58, 2);
              v33 = v60;
              v51 = v59;
            }
            v75 = *(_DWORD *)(a4 + 60);
            v73 = v57;
            v29 = a2;
            v30 = a3;
            v31 = v12;
            v32 = v11;
            v34 = v51;
            goto LABEL_66;
          }
          if (v33 == v15 && (_DWORD)v51 == (_DWORD)v16)
          {
            v54 = *(_QWORD *)a1;
            v55 = *(unsigned __int8 **)(a4 + 64);
            v74 = v55;
            if (v55)
            {
              v56 = v34;
              llvm::MetadataTracking::track((uint64_t)&v74, v55, 2);
              v34 = v56;
            }
            v75 = *(_DWORD *)(a4 + 60);
            v73 = v54;
            v29 = a2;
            v30 = a3;
            v31 = v12;
            v32 = v11;
            v33 = v50;
            goto LABEL_66;
          }
        }
      }
    }
LABEL_15:
    v19 = *(unsigned __int16 *)(v15 + 24);
    if (v19 != 201)
    {
      if (v19 != 169)
        return 0;
      v20 = *(_QWORD *)(v15 + 48);
      if (!v20)
        return 0;
      v21 = 1;
      do
      {
        if (*(_DWORD *)(v20 + 8) == (_DWORD)v16)
        {
          if (!v21)
            return 0;
          --v21;
        }
        v20 = *(_QWORD *)(v20 + 32);
      }
      while (v20);
      if (v21)
        return 0;
      v22 = *(uint64_t **)(v15 + 32);
      v15 = *v22;
      v16 = v22[1];
      v24 = v22[5];
      v23 = v22[6];
      if (*v22 == v14 && (_DWORD)v16 == (_DWORD)v13)
      {
        v62 = *(_QWORD *)a1;
        v63 = *(unsigned __int8 **)(a4 + 64);
        v74 = v63;
        if (v63)
        {
          v64 = v23;
          llvm::MetadataTracking::track((uint64_t)&v74, v63, 2);
          v23 = v64;
        }
        v75 = *(_DWORD *)(a4 + 60);
        v73 = v62;
        v29 = a2;
        v30 = a3;
        v31 = v12;
        v32 = v11;
        v33 = v14;
        v34 = v13;
        v61 = v24;
        goto LABEL_70;
      }
      if (v24 != v14 || (_DWORD)v23 != (_DWORD)v13)
        return 0;
      v27 = *(_QWORD *)a1;
      v28 = *(unsigned __int8 **)(a4 + 64);
      v74 = v28;
      if (v28)
        llvm::MetadataTracking::track((uint64_t)&v74, v28, 2);
      v75 = *(_DWORD *)(a4 + 60);
      v73 = v27;
      v29 = a2;
      v30 = a3;
      v31 = v12;
      v32 = v11;
      v33 = v14;
      v34 = v13;
LABEL_66:
      v61 = v15;
      v23 = v16;
LABEL_70:
      v65 = sub_1C5CA1534(v29, v30, v31, v32, v33, v34, v61, v23, v73, (const llvm::APInt *)&v74);
LABEL_71:
      v8 = v65;
      if (v74)
        llvm::MetadataTracking::untrack((uint64_t)&v74, v74);
      return v8;
    }
    v35 = *(_DWORD **)(v15 + 32);
    v36 = *(_QWORD *)v35;
    if (*(_WORD *)(*(_QWORD *)v35 + 24) != 169)
      return 0;
    v37 = *(_QWORD *)(v36 + 48);
    if (!v37)
      return 0;
    v38 = v35[2];
    v39 = 1;
    do
    {
      if (*(_DWORD *)(v37 + 8) == v38)
      {
        if (!v39)
          return 0;
        --v39;
      }
      v37 = *(_QWORD *)(v37 + 32);
    }
    while (v37);
    if (v39)
      return 0;
    v40 = *(uint64_t **)(v36 + 32);
    v41 = *v40;
    v42 = v40[1];
    v15 = v40[5];
    v16 = v40[6];
    if (*(_WORD *)(*v40 + 24) == 199)
    {
      v43 = *(_QWORD *)(v41 + 32);
      if (*(_QWORD *)v43 == v14 && *(_DWORD *)(v43 + 8) == (_DWORD)v13)
      {
        v44 = (llvm **)(*(_QWORD *)(v41 + 40) + 16 * v42);
        v45 = *v44;
        v46 = (uint64_t)v44[1];
        v47 = *(_QWORD *)a1;
        v48 = *(unsigned __int8 **)(a4 + 64);
        v74 = v48;
        if (v48)
          llvm::MetadataTracking::track((uint64_t)&v74, v48, 2);
        v75 = *(_DWORD *)(a4 + 60);
        v73 = v47;
        v29 = a2;
        v30 = a3;
        v31 = v45;
        v32 = v46;
        v33 = v41;
        v34 = v42;
        goto LABEL_66;
      }
    }
    if (*(_WORD *)(v15 + 24) == 199)
    {
      v66 = *(_QWORD *)(v15 + 32);
      if (*(_QWORD *)v66 == v14 && *(_DWORD *)(v66 + 8) == (_DWORD)v13)
      {
        v67 = *(_QWORD *)(v41 + 40) + 16 * v42;
        v68 = *(llvm **)v67;
        v69 = *(_QWORD *)(v67 + 8);
        v70 = *(_QWORD *)a1;
        v71 = *(unsigned __int8 **)(a4 + 64);
        v74 = v71;
        if (v71)
          llvm::MetadataTracking::track((uint64_t)&v74, v71, 2);
        v75 = *(_DWORD *)(a4 + 60);
        v65 = sub_1C5CA1534(a2, a3, v68, v69, v15, v16, v41, v42, v70, (const llvm::APInt *)&v74);
        goto LABEL_71;
      }
    }
    return 0;
  }
  if (!(_BYTE)a2)
    return (uint64_t *)a2;
  v7 = *(_QWORD *)(a1 + 8);
  if (a2 == 1 || (v8 = 0, *(_QWORD *)(v7 + 8 * a2 + 96)))
  {
    if (*(_BYTE *)(v7 + 390 * a2 + 3947))
      return 0;
    goto LABEL_7;
  }
  return v8;
}

uint64_t *sub_1C5CA1534(llvm *a1, uint64_t a2, llvm *a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, const llvm::APInt *a10)
{
  uint64_t v14;
  uint64_t *v15;
  unsigned int v17;
  uint64_t v18;
  BOOL v19;
  unsigned int v20;
  uint64_t v21;
  BOOL v22;
  unsigned int v23;
  uint64_t v24;
  BOOL v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unsigned int v33;
  uint64_t *v34;
  uint64_t v35;
  __int16 v36;
  uint64_t *v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  __int16 v41;
  unsigned int v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unsigned int v47;
  uint64_t v48;
  unsigned int v49;
  llvm *v50;
  uint64_t v51;
  llvm *v52;
  uint64_t v53;

  v52 = a1;
  v53 = a2;
  v50 = a3;
  v51 = a4;
  if (a1 == a3 && ((_BYTE)a1 || a2 == a4))
  {
    v14 = *(_QWORD *)(a9 + 832);
    if (v14)
      LOWORD(v14) = *(_WORD *)(v14 + 8);
    return sub_1C5D56C70(a9, 85, a10, a1, a2, a5, a6, a8, a7, a8, v14);
  }
  else
  {
    v17 = sub_1C6131328((unsigned __int8 *)&v50, a2, (BOOL)a3);
    v20 = sub_1C6131328((unsigned __int8 *)&v52, v18, v19);
    v49 = v17;
    if (v17 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v48, 0, 0);
      v17 = v49;
    }
    else
    {
      v48 = 0;
    }
    sub_1C4912E54(&v48, v20, v17);
    if (sub_1C63686D8(a9, a5, a6, (uint64_t)&v48, 0))
    {
      v23 = sub_1C6131328((unsigned __int8 *)&v50, v21, v22);
      v26 = sub_1C6131328((unsigned __int8 *)&v52, v24, v25);
      v47 = v23;
      if (v23 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v46, 0, 0);
      else
        v46 = 0;
      sub_1C4912E54(&v46, 0, v26);
      v28 = sub_1C63666FC(a9, (llvm::LLVMContext *)&v46, a10, (uint64_t)v50, v51, 0, 0);
      v30 = v29;
      if (v47 >= 0x41 && v46)
        MEMORY[0x1CAA32F9C](v46, 0x1000C8000313F17);
      v31 = a8 & 0xFFFFFFFF00000000;
      v32 = *(_QWORD *)(a9 + 832);
      if (v32)
        LOWORD(v32) = *(_WORD *)(v32 + 8);
      v34 = sub_1C5D56C70(a9, 169, a10, v50, v51, a7, a8, v27, v28, v30, v32);
      v35 = *(_QWORD *)(a9 + 832);
      if (v35)
        v36 = *(_WORD *)(v35 + 8);
      else
        v36 = 0;
      v37 = sub_1C5D52060(a9, 201, a10, v52, v53, (uint64_t)v34, v33 | v31, v36);
      v39 = v38;
      v40 = *(_QWORD *)(a9 + 832);
      if (v40)
        v41 = *(_WORD *)(v40 + 8);
      else
        v41 = 0;
      v43 = sub_1C5D52060(a9, 201, a10, v52, v53, a5, a6, v41);
      v45 = *(_QWORD *)(a9 + 832);
      if (v45)
        LOWORD(v45) = *(_WORD *)(v45 + 8);
      v15 = sub_1C5D56C70(a9, 85, a10, v52, v53, (uint64_t)v43, v42 | a6 & 0xFFFFFFFF00000000, v44, (uint64_t)v37, v39 | v31, v45);
    }
    else
    {
      v15 = 0;
    }
    if (v49 >= 0x41 && v48)
      MEMORY[0x1CAA32F9C](v48, 0x1000C8000313F17);
  }
  return v15;
}

uint64_t *sub_1C5CA1814(uint64_t *a1, uint64_t a2, unsigned int a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  llvm *v14;
  uint64_t v15;
  unsigned int *v16;
  uint64_t *v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 *v26;
  uint64_t v27;
  uint64_t v28;
  _BOOL8 v29;
  _QWORD *v30;
  _BOOL8 v31;
  uint64_t v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unsigned __int8 *v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  int v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t v46;
  uint64_t v47;
  _BOOL8 v48;
  uint64_t v49;
  unsigned __int8 *v50;
  int v51;
  unsigned __int8 *v52;
  int v53;

  v12 = *(_QWORD *)(a2 + 40) + 16 * a3;
  v14 = *(llvm **)v12;
  v13 = *(_QWORD *)(v12 + 8);
  v15 = *(_QWORD *)v12;
  if (*(_QWORD *)v12)
  {
    if ((v15 - 15) < 0x9C)
      return 0;
  }
  else if ((*(_DWORD *)(v13 + 8) & 0xFE) == 0x12)
  {
    return 0;
  }
  if (*(_WORD *)(a4 + 24) != 72)
    goto LABEL_6;
  v22 = *(uint64_t **)(a4 + 32);
  if (!sub_1C6368AD4(v22[5]))
    goto LABEL_6;
  v23 = *v22;
  v24 = v22[1];
  v25 = *a1;
  v26 = *(unsigned __int8 **)(a6 + 64);
  v52 = v26;
  v48 = v24;
  if (v26)
  {
    v46 = v25;
    v27 = v23;
    llvm::MetadataTracking::track((uint64_t)&v52, v26, 2);
    v25 = v46;
    LODWORD(v24) = v48;
    v23 = v27;
  }
  v53 = *(_DWORD *)(a6 + 60);
  v47 = v23;
  v28 = *(_QWORD *)(v23 + 40) + 16 * v24;
  v30 = sub_1C6366AB4(v25, 1, (const llvm::APInt *)&v52, *(llvm **)v28, *(_QWORD *)(v28 + 8), 0, 0);
  v31 = v29;
  if (v52)
  {
    v45 = v29;
    llvm::MetadataTracking::untrack((uint64_t)&v52, v52);
    v31 = v45;
  }
  if (!sub_1C5D4EBA4(*a1, v47, v48, (uint64_t)v30, v31))
  {
    v33 = *a1;
    v34 = *(unsigned __int8 **)(a6 + 64);
    v52 = v34;
    if (v34)
      llvm::MetadataTracking::track((uint64_t)&v52, v34, 2);
    v53 = *(_DWORD *)(a6 + 60);
    v17 = sub_1C636D72C(v33, (const char *)0x48, (const llvm::APInt *)&v52, *(_QWORD *)(a6 + 40), *(unsigned __int16 *)(a6 + 58), a2, a3, v32, v47, v48, *(_QWORD *)(*(_QWORD *)(a4 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a4 + 32) + 88));
  }
  else
  {
LABEL_6:
    if (!(_DWORD)v15)
      return (uint64_t *)v15;
    v16 = (unsigned int *)a1[1];
    if ((_DWORD)v15 == 1)
    {
      if (!(_BYTE)v14)
        return 0;
    }
    else
    {
      if ((_BYTE)v14)
        v18 = *(_QWORD *)&v16[2 * v14 + 24] == 0;
      else
        v18 = 1;
      if (v18)
        return 0;
    }
    if ((*((unsigned __int8 *)v16 + 390 * v14 + 3934) | 4) != 4)
      return 0;
    v19 = sub_1C5CA0D28(v16, a4, a5);
    if (!v19)
      return 0;
    v35 = v19;
    v36 = v20;
    v37 = *a1;
    v38 = *(unsigned __int8 **)(a6 + 64);
    v52 = v38;
    v49 = v37;
    if (v38)
    {
      llvm::MetadataTracking::track((uint64_t)&v52, v38, 2);
      v37 = *a1;
      v38 = *(unsigned __int8 **)(a6 + 64);
    }
    v39 = *(_DWORD *)(a6 + 60);
    v53 = v39;
    v40 = *(_QWORD *)(a6 + 40);
    v41 = *(unsigned __int16 *)(a6 + 58);
    v50 = v38;
    if (v38)
    {
      llvm::MetadataTracking::track((uint64_t)&v50, v38, 2);
      v39 = *(_DWORD *)(a6 + 60);
    }
    v51 = v39;
    v42 = sub_1C6366AB4(v37, 0, (const llvm::APInt *)&v50, v14, v13, 0, 0);
    v17 = sub_1C636D72C(v49, (const char *)0x48, (const llvm::APInt *)&v52, v40, v41, a2, a3, v44, (uint64_t)v42, v43, v35, v36);
    if (v50)
      llvm::MetadataTracking::untrack((uint64_t)&v50, v50);
  }
  if (v52)
    llvm::MetadataTracking::untrack((uint64_t)&v52, v52);
  return v17;
}

uint64_t *sub_1C5CA1AF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  uint64_t *v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t *v31;
  uint64_t v33;
  int v34;
  unsigned __int8 *v35;
  uint64_t *v36;
  int v37;
  int v38;
  uint64_t *v39;
  int v40;
  unsigned __int8 *v41;
  int v42;
  unsigned __int8 *v43;
  int v44;
  uint64_t *v45;
  int v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  if (!sub_1C5D621EC(a2, a3, 0)
    || (v16 = sub_1C5CA1DBC(a6, a7, *(_QWORD *)a1, *(unsigned int **)(a1 + 8), 1)) == 0)
  {
    v19 = *(unsigned __int16 *)(a2 + 24);
    if (v19 == 77)
    {
      if ((_DWORD)a3 || a2 == a6 && a7 == 1)
        goto LABEL_16;
    }
    else if (v19 != 56)
    {
      goto LABEL_16;
    }
    if (sub_1C6368AD4(a4))
    {
      v21 = *(_QWORD *)(a8 + 48);
      if (v21)
      {
        while (*(_DWORD *)(v21 + 8) != 1)
        {
          v21 = *(_QWORD *)(v21 + 32);
          if (!v21)
            goto LABEL_9;
        }
        goto LABEL_16;
      }
LABEL_9:
      v22 = *(_QWORD **)a1;
      v23 = *(unsigned __int8 **)(a8 + 64);
      v43 = v23;
      if (v23)
        llvm::MetadataTracking::track((uint64_t)&v43, v23, 2);
      v44 = *(_DWORD *)(a8 + 60);
      v24 = (uint64_t)sub_1C636D72C((uint64_t)v22, (const char *)0x48, (const llvm::APInt *)&v43, *(_QWORD *)(a8 + 40), *(unsigned __int16 *)(a8 + 58), **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), v20, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), a6, a7);
      v25 = v43;
      if (v43)
      {
        v26 = (uint64_t *)&v43;
LABEL_26:
        llvm::MetadataTracking::untrack((uint64_t)v26, v25);
        return (uint64_t *)v24;
      }
      return (uint64_t *)v24;
    }
LABEL_16:
    v27 = sub_1C5CA0D28(*(unsigned int **)(a1 + 8), a4, a5);
    if (v27
      && ((v29 = v27, v30 = v28,
                      (v31 = sub_1C5CA2040((_QWORD **)a1, *(_QWORD *)a1, a2, a3, v27, v28, a6, a7, a8)) != 0)
       || (v31 = sub_1C5CA2040((_QWORD **)a1, *(_QWORD *)a1, a2, a3, a6, a7, v29, v30, a8)) != 0))
    {
      return v31;
    }
    else
    {
      return 0;
    }
  }
  v33 = (uint64_t)v16;
  v34 = v17;
  v35 = *(unsigned __int8 **)(a8 + 64);
  v41 = v35;
  if (v35)
    llvm::MetadataTracking::track((uint64_t)&v41, v35, 2);
  v42 = *(_DWORD *)(a8 + 60);
  v36 = sub_1C636D72C(*(_QWORD *)a1, (const char *)0x49, (const llvm::APInt *)&v41, *(_QWORD *)(a8 + 40), *(unsigned __int16 *)(a8 + 58), a4, a5, v18, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), v33, v34);
  v38 = v37;
  v39 = sub_1C63667F0(*(_QWORD *)a1, (const llvm::APInt *)&v41, (uint64_t)v36, 1uLL, *(llvm **)(v36[5] + 16), *(_QWORD *)(v36[5] + 24));
  v43 = (unsigned __int8 *)v36;
  v44 = v38;
  v45 = v39;
  v46 = v40;
  v24 = sub_1C5C5B0B4((uint64_t *)a1, a8, (uint64_t *)&v43, 2, 1);
  v25 = v41;
  if (v41)
  {
    v26 = (uint64_t *)&v41;
    goto LABEL_26;
  }
  return (uint64_t *)v24;
}

uint64_t *sub_1C5CA1DBC(uint64_t a1, unint64_t a2, uint64_t a3, unsigned int *a4, int a5)
{
  int v10;
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  int v19;
  uint64_t v20;
  llvm::APInt *v21;
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  llvm::APInt *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  int64_t v31;
  unint64_t v33;
  int v34;
  unsigned __int8 *v35;
  int v36;

  v10 = *(unsigned __int16 *)(a1 + 24);
  if (!a5)
  {
    if (v10 != 173)
      return 0;
LABEL_13:
    v15 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48), 0, 0);
    if (!v15)
      return 0;
    v17 = v15;
    v18 = (_QWORD *)(*(_QWORD *)(a1 + 40) + 16 * a2);
    v19 = sub_1C6329468(a4, *v18, v18[1]);
    if (v19)
    {
      if (v19 == 2)
      {
        v23 = *(_QWORD *)(v17 + 80);
        v24 = *(_DWORD *)(v23 + 32);
        if (!v24)
          return **(uint64_t ***)(a1 + 32);
        v25 = (llvm::APInt *)(v23 + 24);
        if (v24 > 0x40)
        {
          if (llvm::APInt::countTrailingOnesSlowCase(v25) != v24)
            goto LABEL_42;
          return **(uint64_t ***)(a1 + 32);
        }
        if (*(_QWORD *)v25 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v24)
          return **(uint64_t ***)(a1 + 32);
      }
      else
      {
        if (v19 != 1)
          goto LABEL_42;
        v20 = *(_QWORD *)(v17 + 80);
        v21 = (llvm::APInt *)(v20 + 24);
        v22 = *(_DWORD *)(v20 + 32);
        if (v22 <= 0x40)
        {
          if (*(_QWORD *)v21 != 1)
            goto LABEL_42;
          return **(uint64_t ***)(a1 + 32);
        }
        if (llvm::APInt::countLeadingZerosSlowCase(v21) == v22 - 1)
          return **(uint64_t ***)(a1 + 32);
      }
    }
    else
    {
      v26 = *(_QWORD *)(v17 + 80);
      v27 = *(unsigned int *)(v26 + 32);
      if (v27 >= 0x41)
      {
        v28 = (_QWORD *)operator new[]();
        memcpy(v28, *(const void **)(v26 + 24), ((unint64_t)(v27 + 63) >> 3) & 0x3FFFFFF8);
        v29 = *v28 & 1;
        *v28 = v29;
        bzero(v28 + 1, (((unint64_t)(v27 + 63) >> 3) - 8) & 0xFFFFFFF8);
        v30 = 0;
        v31 = (unint64_t)(v27 + 63) >> 6;
        do
        {
          if (v31-- < 1)
            break;
          v33 = v28[v31];
          v30 += __clz(v33);
        }
        while (!v33);
        v34 = v27 | 0xFFFFFFC0;
        if ((v27 & 0x3F) == 0)
          v34 = 0;
        if ((v27 - v30 - v34) >= 0x41)
        {
          MEMORY[0x1CAA32F9C](v28, 0x1000C8000313F17);
          goto LABEL_42;
        }
        MEMORY[0x1CAA32F9C](v28, 0x1000C8000313F17);
        if (v29)
          return **(uint64_t ***)(a1 + 32);
      }
      else if ((*(_BYTE *)(v26 + 24) & 1) != 0)
      {
        return **(uint64_t ***)(a1 + 32);
      }
    }
LABEL_42:
    if (a5)
      goto LABEL_8;
    return 0;
  }
  if (v10 == 173)
    goto LABEL_13;
  if (v10 != 35 && v10 != 11)
    return 0;
LABEL_8:
  v12 = *(unsigned __int8 **)(a1 + 64);
  v35 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v35, v12, 2);
  v36 = *(_DWORD *)(a1 + 60);
  v13 = *(_QWORD *)(a1 + 40) + 16 * a2;
  v14 = sub_1C63667F0(a3, (const llvm::APInt *)&v35, a1, a2, *(llvm **)v13, *(_QWORD *)(v13 + 8));
  if (v35)
    llvm::MetadataTracking::untrack((uint64_t)&v35, v35);
  return v14;
}

uint64_t *sub_1C5CA2040(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  uint64_t *result;
  int v14;
  llvm *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unsigned __int8 *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD **v34;
  _QWORD **v35;
  _QWORD *v36;
  _QWORD *v37;
  int v38;
  _QWORD v39[2];
  _QWORD v40[2];

  v40[0] = a3;
  v40[1] = a4;
  v39[0] = a5;
  v39[1] = a6;
  if (a8 != 1)
    return 0;
  result = 0;
  if (a6 == 1)
  {
    if (*(_WORD *)(a7 + 24) == 77)
    {
      v14 = *(unsigned __int16 *)(a5 + 24);
      if (v14 == 77)
      {
        if (!sub_1C636F474(*(_QWORD *)(*(_QWORD *)(a5 + 32) + 40)))
          return 0;
        v15 = (llvm *)(*(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD))(*a1[1] + 400))(a1[1], *(_QWORD *)(*(_QWORD *)(*a1)[5] + 40) + 272, (*a1)[7], *(_QWORD *)(*(_QWORD *)(a5 + 40) + 16), *(_QWORD *)(*(_QWORD *)(a5 + 40) + 24));
        v17 = v16;
        v18 = *(_QWORD *)(*(_QWORD *)(a5 + 32) + 40);
        v19 = *(uint64_t **)(v18 + 64);
        v31 = (unsigned __int8 *)v19;
        if (v19)
          llvm::MetadataTracking::track((uint64_t)&v31, (unsigned __int8 *)v19, 2);
        LODWORD(v32) = *(_DWORD *)(v18 + 60);
        v37 = sub_1C6366AB4(a2, 1, (const llvm::APInt *)&v31, v15, v17, 0, 0);
        v38 = v23;
        if (v31)
          llvm::MetadataTracking::untrack((uint64_t)&v31, v31);
        v24 = *(_QWORD *)(a5 + 32);
      }
      else
      {
        if (v14 != 72)
          return 0;
        v24 = *(_QWORD *)(a5 + 32);
        if (!sub_1C6368AD4(*(_QWORD *)(v24 + 40)))
          return 0;
        v37 = *(_QWORD **)(v24 + 80);
        v38 = *(_DWORD *)(v24 + 88);
      }
      v31 = (unsigned __int8 *)&a9;
      v32 = a2;
      v33 = v39;
      v34 = &v37;
      v35 = a1;
      v36 = v40;
      if (*(_QWORD *)v24 == a7 && !*(_DWORD *)(v24 + 8))
      {
        v30 = *(uint64_t **)(a7 + 32);
        v26 = *v30;
        v27 = v30[1];
        v29 = v30[5];
        v28 = v30[6];
        return sub_1C5CA2244((uint64_t **)&v31, v26, v27, v29, v28, v20, v21, v22);
      }
      v25 = *(uint64_t **)(a7 + 32);
      v26 = *v25;
      if (*v25 == a5 && !*((_DWORD *)v25 + 2))
      {
        v27 = *(_QWORD *)(v24 + 8);
        v29 = v25[5];
        v28 = v25[6];
        v26 = *(_QWORD *)v24;
        return sub_1C5CA2244((uint64_t **)&v31, v26, v27, v29, v28, v20, v21, v22);
      }
      if (v25[5] == a5 && !*((_DWORD *)v25 + 12))
      {
        v27 = v25[1];
        v28 = *(_QWORD *)(v24 + 8);
        v29 = *(_QWORD *)v24;
        return sub_1C5CA2244((uint64_t **)&v31, v26, v27, v29, v28, v20, v21, v22);
      }
    }
    return 0;
  }
  return result;
}

uint64_t *sub_1C5CA2244(uint64_t **a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  int v25;
  uint64_t v26;
  uint64_t *v27;
  unsigned __int8 *v29;
  int v30;

  v13 = **a1;
  v14 = *(unsigned __int8 **)(v13 + 64);
  v29 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v29, v14, 2);
  v30 = *(_DWORD *)(v13 + 60);
  v15 = sub_1C636D72C((uint64_t)a1[1], (const char *)0x48, (const llvm::APInt *)&v29, *(_QWORD *)(*a1[2] + 40), *(unsigned __int16 *)(*a1[2] + 58), a2, a3, a8, a4, a5, *a1[3], a1[3][1]);
  sub_1C5C5B004((uint64_t)a1[4], (uint64_t)v15);
  v16 = (uint64_t)a1[1];
  v17 = **a1;
  v18 = *(_QWORD *)(v17 + 40);
  v19 = *(unsigned __int16 *)(v17 + 58);
  v20 = a1[5];
  v21 = *v20;
  v22 = v20[1];
  v23 = *(_QWORD *)(*v20 + 40) + 16 * v22;
  v24 = sub_1C6366AB4(v16, 0, (const llvm::APInt *)&v29, *(llvm **)v23, *(_QWORD *)(v23 + 8), 0, 0);
  v27 = sub_1C636D72C(v16, (const char *)0x48, (const llvm::APInt *)&v29, v18, v19, v21, v22, v26, (uint64_t)v24, v25, (uint64_t)v15, 1);
  if (v29)
    llvm::MetadataTracking::untrack((uint64_t)&v29, v29);
  return v27;
}

uint64_t *sub_1C5CA237C(uint64_t *a1, uint64_t a2, unint64_t a3, const llvm::APInt *a4)
{
  uint64_t v6;
  llvm *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  llvm::Type *v17;
  unint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  llvm *v23;
  uint64_t v24;

  v6 = *(_QWORD *)(a2 + 40) + 16 * a3;
  v7 = *(llvm **)v6;
  v8 = *(_QWORD *)(v6 + 8);
  v23 = *(llvm **)v6;
  v24 = v8;
  v9 = *a1;
  v10 = *(_QWORD *)(v9 + 832);
  if (v10)
    v11 = *(_WORD *)(v10 + 8);
  else
    v11 = 0;
  v12 = sub_1C5D52060(v9, 184, a4, v7, v8, a2, a3, v11);
  v14 = v13;
  v15 = *a1;
  v17 = sub_1C6131328((unsigned __int8 *)&v23, v13, v16);
  v19 = sub_1C6366AB4(v15, (uint64_t)v17 - 1, a4, v23, v24, 0, 0);
  v21 = *(_QWORD *)(*a1 + 832);
  if (v21)
    LOWORD(v21) = *(_WORD *)(v21 + 8);
  return sub_1C5D56C70(*a1, 57, a4, v23, v24, (uint64_t)v19, v18, v20, (uint64_t)v12, v14, v21);
}

void sub_1C5CA2454()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CA2468(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E8197FA0;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5CA249C(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E8197FA0;
  a2[1] = v2;
  return result;
}

BOOL sub_1C5CA24B8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  llvm::APInt *v5;
  unsigned int v6;
  unint64_t *v7;
  unint64_t v8;
  unint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  llvm::APInt *v13;
  unsigned int v14;

  v3 = *a2;
  if (*a2)
  {
    v4 = *(_QWORD *)(v3 + 80);
    v5 = (llvm::APInt *)(v4 + 24);
    v6 = *(_DWORD *)(v4 + 32);
    if (v6 > 0x40)
    {
      if (llvm::APInt::countLeadingZerosSlowCase(v5) != v6)
        goto LABEL_4;
    }
    else if (*(_QWORD *)v5)
    {
LABEL_4:
      v7 = *(unint64_t **)(a1 + 8);
      v8 = *v7;
      if ((*v7 & 1) != 0)
        v8 >>= 58;
      else
        LODWORD(v8) = *(_DWORD *)(v8 + 64);
      sub_1C496F5AC(v7, (v8 + 1), 0);
      v12 = *(_QWORD *)(v3 + 80);
      v13 = (llvm::APInt *)(v12 + 24);
      v14 = *(_DWORD *)(v12 + 32);
      if (v14 > 0x40)
        return llvm::APInt::countLeadingZerosSlowCase(v13) == v14 - 1;
      else
        return *(_QWORD *)v13 == 1;
    }
  }
  v9 = *(unint64_t **)(a1 + 8);
  v10 = *v9;
  if ((*v9 & 1) != 0)
    v10 >>= 58;
  else
    LODWORD(v10) = *(_DWORD *)(v10 + 64);
  v11 = 1;
  sub_1C496F5AC(v9, (v10 + 1), 1);
  return v11;
}

uint64_t sub_1C5CA2590(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  llvm *v11;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  llvm::APInt *v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  llvm::APInt *v23;
  unsigned int v24;
  uint64_t v25;
  _BOOL8 v26;
  _QWORD *v27;
  unsigned __int8 *v29;
  int v30;
  llvm *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  v4 = *(uint64_t **)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v6 = *v4;
  v7 = v4[1];
  v9 = v4[5];
  v8 = v4[6];
  v11 = *(llvm **)v5;
  v10 = *(_QWORD *)(v5 + 8);
  v31 = *(llvm **)v5;
  v32 = v10;
  v12 = *(unsigned __int8 **)(a1 + 64);
  v29 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v29, v12, 2);
  v30 = *(_DWORD *)(a1 + 60);
  v13 = *(unsigned __int16 *)(a1 + 24);
  v14 = sub_1C5D4F7E8(v9, v8, 0, 0);
  v33 = v6;
  v34 = v7;
  v35 = v9;
  v36 = v8;
  if (sub_1C5D557A4(a2, v13, (uint64_t)&v33))
  {
    v27 = sub_1C61312D0(a2, v11, v10);
LABEL_25:
    v6 = (uint64_t)v27;
    goto LABEL_26;
  }
  if (*(_WORD *)(v6 + 24) == 51)
    goto LABEL_21;
  v15 = sub_1C5D4F7E8(v6, v7, 0, 0);
  if (v15)
  {
    v18 = *(_QWORD *)(v15 + 80);
    v19 = (llvm::APInt *)(v18 + 24);
    v20 = *(_DWORD *)(v18 + 32);
    if (v20 > 0x40)
    {
      if (llvm::APInt::countLeadingZerosSlowCase(v19) == v20)
        goto LABEL_26;
    }
    else if (!*(_QWORD *)v19)
    {
      goto LABEL_26;
    }
  }
  v21 = v13 - 59;
  if (v6 == v9 && (_DWORD)v7 == (_DWORD)v8)
  {
    v26 = v21 < 2;
    v25 = a2;
    goto LABEL_24;
  }
  if (v14)
  {
    v22 = *(_QWORD *)(v14 + 80);
    v23 = (llvm::APInt *)(v22 + 24);
    v24 = *(_DWORD *)(v22 + 32);
    if (v24 <= 0x40)
    {
      if (*(_QWORD *)v23 != 1)
        goto LABEL_15;
LABEL_20:
      if (v21 < 2)
        goto LABEL_26;
      goto LABEL_21;
    }
    if (llvm::APInt::countLeadingZerosSlowCase(v23) == v24 - 1)
      goto LABEL_20;
  }
LABEL_15:
  if (sub_1C6131264((unsigned __int8 *)&v31, v16, v17) != 2)
  {
    v6 = 0;
    goto LABEL_26;
  }
  if (v21 >= 2)
  {
    v11 = v31;
    v10 = v32;
LABEL_21:
    v25 = a2;
    v26 = 0;
LABEL_24:
    v27 = sub_1C6366AB4(v25, v26, (const llvm::APInt *)&v29, v11, v10, 0, 0);
    goto LABEL_25;
  }
LABEL_26:
  if (v29)
    llvm::MetadataTracking::untrack((uint64_t)&v29, v29);
  return v6;
}

uint64_t *sub_1C5CA27B0(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  unsigned __int8 *v12;
  uint64_t v13;
  uint64_t v14;
  llvm *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  llvm *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  llvm *ShiftAmountTy;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  unint64_t v44;
  __int16 v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v61;
  uint64_t v62;
  llvm *v63;
  _QWORD *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  unint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t *v111;
  unsigned int v112;
  unint64_t v113;
  unint64_t v114;
  uint64_t v115;
  _QWORD *v116;
  uint64_t v117;
  __int16 v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  llvm *v133;
  uint64_t v134;
  llvm *v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  llvm *v143;
  uint64_t v144;
  unsigned __int8 *v145;
  int v146;
  void *v147;
  uint64_t v148;
  _QWORD v149[10];

  v149[8] = *MEMORY[0x1E0C80C00];
  v12 = *(unsigned __int8 **)(a6 + 64);
  v145 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v145, v12, 2);
  v146 = *(_DWORD *)(a6 + 60);
  v13 = *(_QWORD *)(a6 + 40);
  v14 = *(_QWORD *)(v13 + 8);
  v143 = *(llvm **)v13;
  v144 = v14;
  v15 = (llvm *)(*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1[1] + 400))(a1[1], *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, *(_QWORD *)(*a1 + 56));
  v17 = v16;
  v19 = sub_1C6131328((unsigned __int8 *)&v143, v16, v18);
  if ((*(_WORD *)(a6 + 72) & 8) != 0 || (v20 = v19, !sub_1C5CA32CC(a4, a5)))
  {
    v25 = *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 112);
    if (!sub_1C5C9F100(a4, a5, 0))
      goto LABEL_37;
    if (((*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)a1[1] + 144))(a1[1], **(_QWORD **)(a6 + 40), *(_QWORD *)(*(_QWORD *)(a6 + 40) + 8), v25) & 1) != 0)goto LABEL_37;
    v26 = *a1;
    v27 = *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 112);
    if (v27)
    {
      if (*(char *)(v27 + 13) < 0)
        goto LABEL_37;
    }
    v147 = v149;
    v148 = 0x800000000;
    v28 = sub_1C5D93D30((uint64_t *)a1[1], a6, v26, *((unsigned __int8 *)a1 + 33), (uint64_t)&v147);
    v29 = (uint64_t *)v147;
    if (v28 && (_DWORD)v148)
    {
      v30 = 8 * v148;
      do
      {
        v31 = *v29++;
        sub_1C5C5B004((uint64_t)a1, v31);
        v30 -= 8;
      }
      while (v30);
      v29 = (uint64_t *)v147;
    }
    if (v29 != v149)
      free(v29);
    if (!v28)
      goto LABEL_37;
    goto LABEL_38;
  }
  v141 = a2;
  v142 = a3;
  v21 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a6 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a6 + 32) + 48), 0, 0);
  if (v21)
  {
    v22 = *(_QWORD *)(v21 + 80);
    v23 = (_QWORD *)(v22 + 24);
    v24 = *(_DWORD *)(v22 + 32);
    if (v24 <= 0x40)
    {
      if (!*v23)
        goto LABEL_27;
LABEL_19:
      v147 = v149;
      v148 = 0x800000000;
      v28 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, _QWORD *, uint64_t, void **))(*(_QWORD *)a1[1]
                                                                                               + 2088))(a1[1], a6, v23, *a1, &v147);
      v32 = (uint64_t *)v147;
      if (v28 && (_DWORD)v148)
      {
        v136 = a4;
        v33 = a5;
        v34 = v17;
        v35 = v15;
        v36 = 8 * v148;
        do
        {
          v37 = *v32++;
          sub_1C5C5B004((uint64_t)a1, v37);
          v36 -= 8;
        }
        while (v36);
        v32 = (uint64_t *)v147;
        v15 = v35;
        v17 = v34;
        a5 = v33;
        a4 = v136;
      }
      if (v32 != v149)
        free(v32);
      if (v28)
        goto LABEL_38;
      goto LABEL_27;
    }
    if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v22 + 24)) != v24)
      goto LABEL_19;
  }
LABEL_27:
  v38 = (uint64_t *)(*(_QWORD *)(v141 + 40) + 16 * v142);
  ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy((uint64_t *)a1[1], *v38, v38[1], *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, *((unsigned __int8 *)a1 + 34));
  v41 = v40;
  v42 = sub_1C6366AB4(*a1, v20, (const llvm::APInt *)&v145, ShiftAmountTy, v40, 0, 0);
  v43 = *(_QWORD *)(*a1 + 832);
  v137 = v44;
  if (v43)
    v45 = *(_WORD *)(v43 + 8);
  else
    v45 = 0;
  v46 = sub_1C5D52060(*a1, 183, (const llvm::APInt *)&v145, v143, v144, a4, a5, v45);
  v48 = v47;
  v50 = sub_1C6366544(*a1, (uint64_t)v46, v47, (uint64_t)&v145, (uint64_t)ShiftAmountTy, v41);
  v52 = v48 & 0xFFFFFFFF00000000 | v51;
  v53 = *(_QWORD *)(*a1 + 832);
  if (v53)
    LOWORD(v53) = *(_WORD *)(v53 + 8);
  v54 = (uint64_t)v42;
  v55 = v50;
  v56 = sub_1C5D56C70(*a1, 57, (const llvm::APInt *)&v145, ShiftAmountTy, v41, v54, v137, v49, v50, v52, v53);
  v133 = ShiftAmountTy;
  v138 = v41;
  v57 = (uint64_t)v56;
  v59 = v58;
  if (!sub_1C5C9F100((uint64_t)v56, v58, 0))
  {
LABEL_37:
    v28 = 0;
    goto LABEL_38;
  }
  v132 = v52;
  v61 = *a1;
  v62 = v20 - 1;
  v63 = v143;
  v131 = v144;
  v64 = sub_1C6366AB4(*a1, v62, (const llvm::APInt *)&v145, v133, v138, 0, 0);
  v67 = *(_QWORD *)(v61 + 832);
  if (v67)
    LOWORD(v67) = *(_WORD *)(v67 + 8);
  v68 = sub_1C5D56C70(v61, 176, (const llvm::APInt *)&v145, v63, v131, v141, v142, v66, (uint64_t)v64, v65, v67);
  v70 = v69;
  sub_1C5C5B004((uint64_t)a1, (uint64_t)v68);
  v72 = *(_QWORD *)(*a1 + 832);
  if (v72)
    LOWORD(v72) = *(_WORD *)(v72 + 8);
  v73 = sub_1C5D56C70(*a1, 177, (const llvm::APInt *)&v145, v143, v144, (uint64_t)v68, v70, v71, v57, v59, v72);
  v75 = v74;
  sub_1C5C5B004((uint64_t)a1, (uint64_t)v73);
  v77 = *(_QWORD *)(*a1 + 832);
  if (v77)
    LOWORD(v77) = *(_WORD *)(v77 + 8);
  v78 = sub_1C5D56C70(*a1, 56, (const llvm::APInt *)&v145, v143, v144, v141, v142, v76, (uint64_t)v73, v75, v77);
  v80 = v79;
  sub_1C5C5B004((uint64_t)a1, (uint64_t)v78);
  v82 = *(_QWORD *)(*a1 + 832);
  if (v82)
    LOWORD(v82) = *(_WORD *)(v82 + 8);
  v83 = sub_1C5D56C70(*a1, 176, (const llvm::APInt *)&v145, v143, v144, (uint64_t)v78, v80, v81, v55, v132, v82);
  v139 = v84;
  v85 = (uint64_t)v83;
  sub_1C5C5B004((uint64_t)a1, (uint64_t)v83);
  v86 = sub_1C6366AB4(*a1, 1, (const llvm::APInt *)&v145, v143, v144, 0, 0);
  v88 = v87;
  v89 = sub_1C63293BC(*a1, (const llvm::APInt *)&v145, (_BOOL8)v143, v144, 0, 0);
  v134 = v90;
  v91 = *a1;
  v92 = sub_1C6367818((_QWORD *)*a1, 0x11u);
  v95 = *(_QWORD *)(v91 + 832);
  if (v95)
    LOWORD(v95) = *(_WORD *)(v95 + 8);
  v96 = sub_1C5D58E08(v91, (const char *)0xC1, (const llvm::APInt *)&v145, v15, v17, a4, a5, v94, (uint64_t)v86, v88, v92, v93, SHIDWORD(v93), v95);
  v98 = v97;
  v99 = *a1;
  v100 = sub_1C6367818((_QWORD *)*a1, 0x11u);
  v103 = *(_QWORD *)(v99 + 832);
  if (v103)
    LOWORD(v103) = *(_WORD *)(v103 + 8);
  v104 = sub_1C5D58E08(v99, (const char *)0xC1, (const llvm::APInt *)&v145, v15, v17, a4, a5, v102, v89, v134, v100, v101, SHIDWORD(v101), v103);
  v107 = *(_QWORD *)(*a1 + 832);
  if (v107)
    LOWORD(v107) = *(_WORD *)(v107 + 8);
  v108 = v139;
  v135 = v15;
  v140 = v17;
  v109 = sub_1C5D56C70(*a1, 172, (const llvm::APInt *)&v145, v15, v17, (uint64_t)v96, v98, v106, (uint64_t)v104, v105, v107);
  v111 = sub_1C4815A8C(*a1, (const llvm::APInt *)&v145, v143, v144, (uint64_t)v109, v110, v141, v142, v85, v108, SHIDWORD(v108));
  v113 = v108 & 0xFFFFFFFF00000000 | v112;
  v116 = sub_1C6366AB4(*a1, 0, (const llvm::APInt *)&v145, v143, v144, 0, 0);
  v117 = v114;
  v118 = 0;
  v119 = *(_QWORD *)(*a1 + 832);
  if (v119)
    v118 = *(_WORD *)(v119 + 8);
  v120 = v113;
  v121 = sub_1C5D56C70(*a1, 57, (const llvm::APInt *)&v145, v143, v144, (uint64_t)v116, v114, v115, (uint64_t)v111, v113, v118);
  v123 = v122;
  v124 = *a1;
  v125 = sub_1C6367818((_QWORD *)*a1, 0x14u);
  v128 = *(_QWORD *)(v124 + 832);
  if (v128)
    LOWORD(v128) = *(_WORD *)(v128 + 8);
  v129 = sub_1C5D58E08(v124, (const char *)0xC1, (const llvm::APInt *)&v145, v135, v140, a4, a5, v127, (uint64_t)v116, v117, v125, v126, SHIDWORD(v126), v128);
  v28 = sub_1C4815A8C(*a1, (const llvm::APInt *)&v145, v143, v144, (uint64_t)v129, v130, (uint64_t)v121, v123, (uint64_t)v111, v120, SHIDWORD(v120));
LABEL_38:
  if (v145)
    llvm::MetadataTracking::untrack((uint64_t)&v145, v145);
  return v28;
}

uint64_t *sub_1C5CA2F20(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  BOOL v5;
  int v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL4 v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  BOOL v34;
  uint64_t v36;
  uint64_t v37;
  uint64_t *result;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unsigned __int8 *v58;
  uint64_t v59;

  if (!*(_QWORD *)(a2 + 48))
    return 0;
  v4 = *(unsigned __int16 *)(a2 + 24);
  v5 = (_DWORD)v4 == 59 || (_DWORD)v4 == 61;
  v6 = v5;
  if (v5)
    v7 = 65;
  else
    v7 = 66;
  v8 = *(uint64_t **)(a2 + 40);
  v9 = *v8;
  v10 = v8[1];
  v11 = *v8;
  if (*v8)
  {
    if ((v11 - 2) >= 6)
      return 0;
  }
  else if ((*(_DWORD *)(v10 + 8) & 0xFE) == 0x12 || *(_DWORD *)(v10 + 8) != 13)
  {
    return 0;
  }
  v13 = *v8;
  if (!(_BYTE)v9)
    return 0;
  v14 = a1[1];
  v15 = *(_QWORD *)(v14 + 8 * v13 + 96);
  if (!v15 && *(_BYTE *)(v14 + 390 * v13 + v7 + 3862) != 4)
    return 0;
  if (!v11)
    return 0;
  v16 = v11 != 1 && v15 == 0;
  if (v16 || (*(_BYTE *)(v14 + 390 * v13 + v7 + 3862) & 0xFB) != 0)
  {
    switch(v11)
    {
      case 3:
        v17 = v6 == 0;
        v18 = 51;
        v19 = 45;
        break;
      case 4:
        v17 = v6 == 0;
        v18 = 52;
        v19 = 46;
        break;
      case 5:
        v17 = v6 == 0;
        v18 = 53;
        v19 = 47;
        break;
      case 6:
        v17 = v6 == 0;
        v18 = 54;
        v19 = 48;
        break;
      case 7:
        v17 = v6 == 0;
        v18 = 55;
        v19 = 49;
        break;
      default:
        return 0;
    }
    if (!v17)
      v18 = v19;
    if (!*(_QWORD *)(v14 + 8 * v18 + 174048))
      return 0;
  }
  v21 = v11 == 1 || v15 != 0;
  if ((v4 - 59) > 1)
  {
    if (v6)
      v22 = 59;
    else
      v22 = 60;
    if (v21)
    {
      v23 = v14 + 390 * v13 + v22;
LABEL_54:
      if ((*(_BYTE *)(v23 + 3862) & 0xFB) == 0)
        return 0;
    }
  }
  else
  {
    if (v6)
      v22 = 61;
    else
      v22 = 62;
    if (v21)
    {
      v23 = v14 + 390 * v13 + v4;
      goto LABEL_54;
    }
  }
  v24 = *(uint64_t **)(a2 + 32);
  v25 = *v24;
  v26 = *(_QWORD *)(*v24 + 48);
  if (v26)
  {
    v27 = 0;
    v28 = 0;
    v29 = v24[5];
    v30 = v24[6];
    v31 = v24[1];
    while (1)
    {
      v32 = *(_QWORD *)(v26 + 16);
      if (v32 == a2)
        goto LABEL_82;
      v33 = *(unsigned __int16 *)(v32 + 24);
      if (!*(_WORD *)(v32 + 24) || !*(_QWORD *)(v32 + 48))
        goto LABEL_82;
      v34 = v33 == (_DWORD)v4 || v22 == v33;
      if (!v34 && (_DWORD)v7 != v33)
        goto LABEL_82;
      v36 = *(_QWORD *)(v32 + 32);
      if (*(_QWORD *)v36 != v25
        || *(_DWORD *)(v36 + 8) != (_DWORD)v31
        || *(_QWORD *)(v36 + 40) != v29
        || *(_DWORD *)(v36 + 48) != (_DWORD)v30)
      {
        goto LABEL_82;
      }
      if (v27)
      {
        v37 = v28;
        goto LABEL_76;
      }
      if (v22 == v33)
        break;
      v37 = 0;
      result = 0;
      v27 = *(uint64_t **)(v26 + 16);
      if ((_DWORD)v7 == v33)
        goto LABEL_76;
LABEL_83:
      v26 = *(_QWORD *)(v26 + 32);
      v27 = result;
      if (!v26)
        return result;
    }
    v53 = v31;
    v55 = v30;
    v49 = *(_QWORD *)(v26 + 16);
    v51 = v29;
    v57 = v25;
    v40 = sub_1C636A8B4(*a1, v9, v10, v9, v10);
    v46 = v42;
    v47 = v40;
    v43 = *a1;
    v44 = *(unsigned __int8 **)(a2 + 64);
    v58 = v44;
    if (v44)
      llvm::MetadataTracking::track((uint64_t)&v58, v44, 2);
    LODWORD(v59) = *(_DWORD *)(a2 + 60);
    v27 = sub_1C636D6B4(v43, (const char *)v7, (const llvm::APInt *)&v58, v47, v46, v57, v53, v41, v51, v55);
    v48 = v45;
    if (v58)
      llvm::MetadataTracking::untrack((uint64_t)&v58, v58);
    v37 = v48;
    v32 = v49;
    v29 = v51;
    v30 = v55;
    v25 = v57;
    v31 = v53;
LABEL_76:
    if ((v33 - 59) > 1)
    {
      if ((v33 - 61) > 1)
      {
        v28 = v37;
        goto LABEL_82;
      }
      v58 = (unsigned __int8 *)v27;
      v59 = 1;
    }
    else
    {
      v58 = (unsigned __int8 *)v27;
      v59 = v37;
    }
    v54 = v30;
    v56 = v25;
    v39 = v29;
    v50 = v37;
    v52 = v31;
    sub_1C5C5B0B4(a1, v32, (uint64_t *)&v58, 1, 1);
    v31 = v52;
    v30 = v54;
    v29 = v39;
    v25 = v56;
    v28 = v50;
LABEL_82:
    result = v27;
    goto LABEL_83;
  }
  return 0;
}

uint64_t sub_1C5CA32CC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  void (**v3)(void);
  _QWORD v5[3];
  _QWORD *v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v5[0] = &off_1E8197FE8;
  v6 = v5;
  v2 = sub_1C6364CB8(a1, a2, (uint64_t)v5, 0);
  if (v6 == v5)
  {
    v3 = (void (**)(void))(v5[0] + 32);
    goto LABEL_5;
  }
  if (v6)
  {
    v3 = (void (**)(void))(*v6 + 40);
LABEL_5:
    (*v3)();
  }
  return v2;
}

void sub_1C5CA3374()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CA3388()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E8197FE8;
  return result;
}

void sub_1C5CA33AC(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E8197FE8;
}

BOOL sub_1C5CA33C4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  llvm::APInt *v4;
  uint64_t v5;
  uint8x8_t v6;
  int v8;
  unint64_t v9;
  int8x8_t *v10;
  int8x8_t v11;
  uint8x8_t v12;

  v2 = *a2;
  v3 = *(_QWORD *)(*a2 + 80);
  v4 = (llvm::APInt *)(v3 + 24);
  v5 = *(unsigned int *)(v3 + 32);
  if (v5 > 0x40)
  {
    if (llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v3 + 24)) != (_DWORD)v5
      && (*(_BYTE *)(v2 + 26) & 8) == 0)
    {
      v8 = 0;
      v9 = (unint64_t)(v5 + 63) >> 6;
      v10 = *(int8x8_t **)v4;
      do
      {
        v11 = *v10++;
        v12 = (uint8x8_t)vcnt_s8(v11);
        v12.i16[0] = vaddlv_u8(v12);
        v8 += v12.i32[0];
        --v9;
      }
      while (v9);
      if (v8 == 1)
        return 1;
      return sub_1C57EDD40(v4);
    }
  }
  else if (*(_QWORD *)v4 && (*(_BYTE *)(v2 + 26) & 8) == 0)
  {
    v6 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v4);
    v6.i16[0] = vaddlv_u8(v6);
    if (v6.u32[0] == 1)
      return 1;
    return sub_1C57EDD40(v4);
  }
  return 0;
}

uint64_t *sub_1C5CA3490(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6)
{
  unsigned __int8 *v12;
  uint64_t v13;
  llvm *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  unint64_t ShiftAmountTy;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  llvm *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unsigned __int8 *v53;
  int v54;
  void *v55;
  uint64_t v56;
  _QWORD v57[9];

  v57[8] = *MEMORY[0x1E0C80C00];
  v12 = *(unsigned __int8 **)(a6 + 64);
  v53 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v53, v12, 2);
  v54 = *(_DWORD *)(a6 + 60);
  v13 = *(_QWORD *)(a6 + 40);
  v14 = *(llvm **)v13;
  v15 = *(_QWORD *)(v13 + 8);
  if (sub_1C5C9F100(a4, a5, 1) && sub_1C5D4F2E0(*(_QWORD *)a1, a4, a5))
  {
    v27 = sub_1C5CA237C((uint64_t *)a1, a4, a5, (const llvm::APInt *)&v53);
    v29 = v28;
    sub_1C5C5B004(a1, (uint64_t)v27);
    v30 = (uint64_t *)(*(_QWORD *)(a2 + 40) + 16 * a3);
    ShiftAmountTy = llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a1 + 8), *v30, v30[1], *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 40) + 272, *(unsigned __int8 *)(a1 + 34));
    v33 = sub_1C6366544(*(_QWORD *)a1, (uint64_t)v27, v29, (uint64_t)&v53, ShiftAmountTy, v32);
  }
  else
  {
    if (*(_WORD *)(a4 + 24) != 175
      || (v16 = *(uint64_t **)(a4 + 32), v17 = *v16, v18 = v16[1], !sub_1C5C9F100(*v16, v18, 1))
      || !sub_1C5D4F2E0(*(_QWORD *)a1, v17, v18))
    {
      v19 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 112);
      if (!sub_1C5C9F100(a4, a5, 0))
        goto LABEL_20;
      if (((*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 144))(*(_QWORD *)(a1 + 8), **(_QWORD **)(a6 + 40), *(_QWORD *)(*(_QWORD *)(a6 + 40) + 8), v19) & 1) != 0)goto LABEL_20;
      v20 = *(_QWORD *)a1;
      v21 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 112);
      if (v21)
      {
        if (*(char *)(v21 + 13) < 0)
          goto LABEL_20;
      }
      v55 = v57;
      v56 = 0x800000000;
      v22 = sub_1C5D94A78(*(uint64_t **)(a1 + 8), a6, v20, *(_BYTE *)(a1 + 33), (uint64_t)&v55);
      v23 = (uint64_t *)v55;
      if (v22 && (_DWORD)v56)
      {
        v24 = 8 * v56;
        do
        {
          v25 = *v23++;
          sub_1C5C5B004(a1, v25);
          v24 -= 8;
        }
        while (v24);
        v23 = (uint64_t *)v55;
      }
      if (v23 != v57)
        free(v23);
      if (!v22)
LABEL_20:
        v22 = 0;
      goto LABEL_21;
    }
    v35 = sub_1C5CA237C((uint64_t *)a1, v17, v18, (const llvm::APInt *)&v53);
    v37 = v36;
    sub_1C5C5B004(a1, (uint64_t)v35);
    v38 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 32) + 40) + 40)
                    + 16 * *(unsigned int *)(*(_QWORD *)(a4 + 32) + 48));
    v39 = (llvm *)*v38;
    v40 = v38[1];
    v41 = sub_1C6366544(*(_QWORD *)a1, (uint64_t)v35, v37, (uint64_t)&v53, *v38, v40);
    v43 = v42;
    sub_1C5C5B004(a1, v41);
    v45 = *(_QWORD *)(a4 + 32);
    v46 = *(_QWORD *)(v45 + 40);
    v47 = *(_QWORD *)(v45 + 48);
    v48 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v48)
      LOWORD(v48) = *(_WORD *)(v48 + 8);
    v33 = (uint64_t)sub_1C5D56C70(*(_QWORD *)a1, 56, (const llvm::APInt *)&v53, v39, v40, v46, v47, v44, v41, v43, v48);
  }
  v49 = v33;
  v50 = v34;
  sub_1C5C5B004(a1, v33);
  v52 = *(_QWORD *)(*(_QWORD *)a1 + 832);
  if (v52)
    LOWORD(v52) = *(_WORD *)(v52 + 8);
  v22 = sub_1C5D56C70(*(_QWORD *)a1, 177, (const llvm::APInt *)&v53, v14, v15, a2, a3, v51, v49, v50, v52);
LABEL_21:
  if (v53)
    llvm::MetadataTracking::untrack((uint64_t)&v53, v53);
  return v22;
}

uint64_t sub_1C5CA3804(uint64_t a1, uint64_t a2, const char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t *v20;
  uint64_t v21;
  llvm *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  llvm *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  _QWORD *v32;
  int v33;
  int v34;
  uint64_t result;
  unsigned int v36;
  unsigned int v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  unsigned __int8 *v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  unsigned __int8 *v50;
  _QWORD *v51;
  uint64_t v52;
  unsigned int v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  uint64_t v63;

  v63 = *MEMORY[0x1E0C80C00];
  v11 = *(_QWORD *)(a2 + 48);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 48);
    while (*(_DWORD *)(v12 + 8) != 1)
    {
      v12 = *(_QWORD *)(v12 + 32);
      if (!v12)
        goto LABEL_5;
    }
    while (*(_DWORD *)(v11 + 8))
    {
      v11 = *(_QWORD *)(v11 + 32);
      if (!v11)
      {
        if (!*(_BYTE *)(a1 + 33))
          goto LABEL_47;
        v16 = 1;
        goto LABEL_26;
      }
    }
    return 0;
  }
LABEL_5:
  if (!*(_BYTE *)(a1 + 33)
    || (v13 = *(_QWORD *)(a2 + 40), *(_QWORD *)v13)
    && ((v14 = *(_QWORD *)(a1 + 8), v15 = *(_QWORD *)v13, (_DWORD)v15 == 1)
     || (*(_QWORD *)v13 ? (v17 = *(_QWORD *)(v14 + 8 * v15 + 96) == 0) : (v17 = 1), !v17))
    && (*(unsigned __int8 *)(v14 + 390 * *(_QWORD *)v13 + 3920) | 4) == 4)
  {
    v18 = *(_QWORD *)a1;
    v19 = *(unsigned __int8 **)(a2 + 64);
    v59 = v19;
    if (v19)
      llvm::MetadataTracking::track((uint64_t)&v59, v19, 2);
    v60 = *(_DWORD *)(a2 + 60);
    v20 = *(uint64_t **)(a2 + 32);
    v21 = *(_QWORD *)(a2 + 40);
    v22 = *(llvm **)v21;
    v23 = *(_QWORD *)(v21 + 8);
    v24 = *(unsigned __int16 *)(a2 + 56);
    v25 = v18;
    v26 = 58;
LABEL_50:
    v46 = (unsigned __int8 *)sub_1C636CE6C(v25, (const char *)v26, (const llvm::APInt *)&v59, v22, v23, v20, v24, a8);
    v48 = v47;
    if (v59)
      llvm::MetadataTracking::untrack((uint64_t)&v59, v59);
    v59 = v46;
    v60 = v48;
    v61 = (uint64_t)v46;
    v62 = v48;
    return sub_1C5C5B0B4((uint64_t *)a1, a2, (uint64_t *)&v59, 2, 1);
  }
  if (v11)
  {
    while (*(_DWORD *)(v11 + 8))
    {
      v11 = *(_QWORD *)(v11 + 32);
      if (!v11)
        goto LABEL_25;
    }
    v49 = *(_QWORD *)a1;
    v50 = *(unsigned __int8 **)(a2 + 64);
    v59 = v50;
    if (v50)
    {
      llvm::MetadataTracking::track((uint64_t)&v59, v50, 2);
      v13 = *(_QWORD *)(a2 + 40);
    }
    v60 = *(_DWORD *)(a2 + 60);
    v51 = sub_1C636CE6C(v49, (const char *)0x3A, (const llvm::APInt *)&v59, *(llvm **)v13, *(_QWORD *)(v13 + 8), *(uint64_t **)(a2 + 32), *(unsigned __int16 *)(a2 + 56), a8);
    if (v59)
      llvm::MetadataTracking::untrack((uint64_t)&v59, v59);
    sub_1C5C5B004(a1, (uint64_t)v51);
    v52 = sub_1C5C5BC68(a1, v51);
    v54 = v53;
    v40 = 0;
    if (v52)
    {
      v55 = v52;
      result = 0;
      if ((_QWORD *)v55 == v51)
        return result;
      if (!*(_BYTE *)(a1 + 33))
      {
LABEL_70:
        v59 = (unsigned __int8 *)v55;
        v60 = v54;
        v61 = v55;
        v62 = v54;
        return sub_1C5C5B0B4((uint64_t *)a1, a2, (uint64_t *)&v59, 2, 1);
      }
      v56 = *(_QWORD *)(*(_QWORD *)(v55 + 40) + 16 * v54);
      v40 = v56;
      if ((_BYTE)v56)
      {
        v57 = *(_QWORD *)(a1 + 8);
        v58 = *(unsigned __int16 *)(v55 + 24);
        if ((_DWORD)v40 != 1 && !*(_QWORD *)(v57 + 8 * v40 + 96)
          || v58 <= 0x185 && (*(_BYTE *)(v57 + 390 * v40 + v58 + 3862) & 0xFB) != 0)
        {
          return 0;
        }
        goto LABEL_70;
      }
    }
    return v40;
  }
LABEL_25:
  v16 = 0;
LABEL_26:
  v27 = *(_QWORD *)(a2 + 40);
  v28 = *(llvm **)(v27 + 16);
  if ((_BYTE)v28)
  {
    v29 = *(_QWORD *)(a1 + 8);
    if ((*(_QWORD *)(v27 + 16) == 1 || *(_QWORD *)(v29 + 8 * v28 + 96))
      && (*(_BYTE *)(v29 + 390 * v28 + a3 + 3862) & 0xFB) == 0)
    {
LABEL_47:
      v43 = *(_QWORD *)a1;
      v44 = *(unsigned __int8 **)(a2 + 64);
      v59 = v44;
      if (v44)
        llvm::MetadataTracking::track((uint64_t)&v59, v44, 2);
      v60 = *(_DWORD *)(a2 + 60);
      v20 = *(uint64_t **)(a2 + 32);
      v45 = *(_QWORD *)(a2 + 40);
      v22 = *(llvm **)(v45 + 16);
      v23 = *(_QWORD *)(v45 + 24);
      v24 = *(unsigned __int16 *)(a2 + 56);
      v25 = v43;
      v26 = (uint64_t)a3;
      goto LABEL_50;
    }
  }
  if (!v16)
    return 0;
  v30 = *(_QWORD *)a1;
  v31 = *(unsigned __int8 **)(a2 + 64);
  v59 = v31;
  if (v31)
  {
    llvm::MetadataTracking::track((uint64_t)&v59, v31, 2);
    v27 = *(_QWORD *)(a2 + 40);
    v28 = *(llvm **)(v27 + 16);
  }
  v60 = *(_DWORD *)(a2 + 60);
  v32 = sub_1C636CE6C(v30, a3, (const llvm::APInt *)&v59, v28, *(_QWORD *)(v27 + 24), *(uint64_t **)(a2 + 32), *(unsigned __int16 *)(a2 + 56), a8);
  v34 = v33;
  if (v59)
    llvm::MetadataTracking::untrack((uint64_t)&v59, v59);
  sub_1C5C5B004(a1, (uint64_t)v32);
  result = sub_1C5C5BC68(a1, v32);
  if (result)
  {
    v37 = v36;
    if ((_QWORD *)result != v32 || v36 != v34)
    {
      if (!*(_BYTE *)(a1 + 33))
        goto LABEL_46;
      v39 = *(_QWORD *)(*(_QWORD *)(result + 40) + 16 * v36);
      v40 = v39;
      if (!(_BYTE)v39)
        return v40;
      v41 = *(_QWORD *)(a1 + 8);
      v42 = *(unsigned __int16 *)(result + 24);
      if (((_DWORD)v40 == 1 || *(_QWORD *)(v41 + 8 * v40 + 96))
        && (v42 > 0x185 || (*(_BYTE *)(v41 + 390 * v40 + v42 + 3862) & 0xFB) == 0))
      {
LABEL_46:
        v59 = (unsigned __int8 *)result;
        v60 = v37;
        v61 = result;
        v62 = v37;
        return sub_1C5C5B0B4((uint64_t *)a1, a2, (uint64_t *)&v59, 2, 1);
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C5CA3C40(uint64_t a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8, int a9, uint64_t a10)
{
  uint64_t v12;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  BOOL v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v39;
  int v40;
  unsigned __int8 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  size_t v49;
  const void **v50;
  unsigned int v51;
  unint64_t v52;
  uint64_t v53;
  void *v54;
  int8x8_t *v55;
  unint64_t v56;
  BOOL v57;
  int v58;
  unint64_t v59;
  int8x8_t v60;
  uint8x8_t v61;
  unsigned int v62;
  uint64_t v63;
  int v64;
  uint64_t v66;
  int v67;
  uint8x8_t v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  int v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  llvm *v76;
  llvm::LLVMContext *v77;
  llvm::Type *v78;
  uint64_t v79;
  uint64_t v80;
  BOOL v81;
  void *v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  llvm::LLVMContext *v99;
  void *v100;
  uint64_t v101;
  uint64_t ExtendedIntegerVT;
  uint64_t v103;
  void *__s1;
  unsigned int v105;
  void *v106;
  uint64_t v107;
  void *__s2;
  uint64_t v109;

  v12 = a3;
  v14 = sub_1C5CA496C(a1, a2, a3, a4, a5, a6, a7, a8, a9);
  if (!v14)
    return 0;
  v15 = v14;
  v16 = *(unsigned __int16 *)(a1 + 24);
  if ((v16 - 167) < 2)
  {
    v28 = *(_QWORD *)(a1 + 32);
    v19 = *(_QWORD *)v28;
    v20 = *(_DWORD *)(v28 + 8);
    v21 = *(_QWORD *)(v28 + 40);
    if (v16 == 167)
      v29 = 20;
    else
      v29 = 18;
    v22 = *(_DWORD *)(v28 + 48);
    v24 = *(_DWORD *)(v28 + 8);
    v23 = *(_QWORD *)v28;
    v26 = v22;
    v25 = *(_QWORD *)(v28 + 40);
  }
  else
  {
    if ((v16 - 190) >= 2)
    {
      if (v16 != 192)
        return 0;
      v30 = *(_QWORD *)(a1 + 32);
      v19 = *(_QWORD *)v30;
      v20 = *(_DWORD *)(v30 + 8);
      v21 = *(_QWORD *)(v30 + 40);
      v22 = *(_DWORD *)(v30 + 48);
      v23 = *(_QWORD *)(v30 + 80);
      v24 = *(_DWORD *)(v30 + 88);
      v25 = *(_QWORD *)(v30 + 120);
      v26 = *(_DWORD *)(v30 + 128);
      v27 = *(_QWORD *)(v30 + 160);
    }
    else
    {
      v17 = *(_QWORD *)(a1 + 32);
      if (*(_WORD *)(*(_QWORD *)v17 + 24) != 193)
        return 0;
      v18 = *(_QWORD *)(*(_QWORD *)v17 + 32);
      v19 = *(_QWORD *)v18;
      v20 = *(_DWORD *)(v18 + 8);
      v21 = *(_QWORD *)(v18 + 40);
      v22 = *(_DWORD *)(v18 + 48);
      v23 = *(_QWORD *)(v17 + 40);
      v24 = *(_DWORD *)(v17 + 48);
      v25 = *(_QWORD *)(v17 + 80);
      v26 = *(_DWORD *)(v17 + 88);
      v27 = *(_QWORD *)(v18 + 80);
    }
    v29 = *(_DWORD *)(v27 + 76);
  }
  v31 = sub_1C5CA496C(v19, v20, v21, v22, v23, v24, v25, v26, v29);
  if (v31)
    v32 = v15 == v31;
  else
    v32 = 1;
  if (v32)
    return 0;
  v33 = v15 == 167 ? v12 : v21;
  v34 = v15 == 167 ? a4 : v22;
  if (v15 == 167)
  {
    v12 = v21;
    v35 = v22;
  }
  else
  {
    v35 = a4;
  }
  v36 = sub_1C5D4F7E8(v33, v34, 0, 0);
  v37 = sub_1C5D4F7E8(v12, v35, 0, 0);
  if (!v36 || v37 == 0)
    return 0;
  v39 = *(unsigned __int8 **)(v36 + 40);
  v40 = *v39;
  v41 = *(unsigned __int8 **)(v37 + 40);
  if (v40 != *v41)
    return 0;
  v42 = *((_QWORD *)v41 + 1);
  v43 = *((_QWORD *)v39 + 1);
  if (!v40 && v43 != v42)
    return 0;
  v45 = *(_QWORD *)(v36 + 80);
  v46 = *(_QWORD *)(v37 + 80);
  v47 = *(unsigned int *)(v45 + 32);
  LODWORD(v107) = v47;
  if (v47 > 0x40)
  {
    v49 = ((unint64_t)(v47 + 63) >> 3) & 0x3FFFFFF8;
    v48 = (void *)operator new[]();
    memcpy(v48, *(const void **)(v45 + 24), v49);
  }
  else
  {
    v48 = *(void **)(v45 + 24);
  }
  v50 = (const void **)(v46 + 24);
  v106 = v48;
  llvm::APInt::operator+=((uint64_t)&v106, 1uLL);
  LODWORD(v109) = v107;
  __s2 = v106;
  LODWORD(v107) = 0;
  v51 = *(_DWORD *)(v46 + 32);
  v105 = v51;
  if (v51 <= 0x40)
  {
    v52 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v51;
    if (!v51)
      v52 = 0;
    __s1 = (void *)(v52 & ~(unint64_t)*v50);
  }
  else
  {
    __s1 = (void *)operator new[]();
    memcpy(__s1, *v50, (((unint64_t)v105 + 63) >> 3) & 0x3FFFFFF8);
    llvm::APInt::flipAllBitsSlowCase((uint64_t)&__s1);
  }
  llvm::APInt::operator++((uint64_t)&__s1);
  v53 = v105;
  v54 = __s1;
  v105 = 0;
  if (v53 > 0x40)
  {
    v56 = (unint64_t)__s2;
    if (memcmp(__s1, __s2, ((unint64_t)(v53 + 63) >> 3) & 0x3FFFFFF8))
    {
      if (v54)
      {
        MEMORY[0x1CAA32F9C](v54, 0x1000C8000313F17);
        if (v105 >= 0x41)
        {
          if (__s1)
            MEMORY[0x1CAA32F9C](__s1, 0x1000C8000313F17);
        }
      }
      goto LABEL_68;
    }
    v55 = (int8x8_t *)v56;
  }
  else
  {
    v55 = (int8x8_t *)__s2;
    v56 = (unint64_t)__s1;
    if (__s1 != __s2)
      goto LABEL_68;
  }
  if (v109 > 0x40)
  {
    v58 = 0;
    v59 = ((unint64_t)v109 + 63) >> 6;
    do
    {
      v60 = *v55++;
      v61 = (uint8x8_t)vcnt_s8(v60);
      v61.i16[0] = vaddlv_u8(v61);
      v58 += v61.i32[0];
      --v59;
    }
    while (v59);
    v57 = v58 == 1;
  }
  else
  {
    if (!v56)
      goto LABEL_62;
    v57 = (v56 & (v56 - 1)) == 0;
  }
  LODWORD(v56) = v57;
LABEL_62:
  if (v53 >= 0x41)
  {
    if (v54)
    {
      MEMORY[0x1CAA32F9C](v54, 0x1000C8000313F17);
      if (v105 >= 0x41)
      {
        if (__s1)
          MEMORY[0x1CAA32F9C](__s1, 0x1000C8000313F17);
      }
    }
  }
  if ((_DWORD)v56)
  {
    v64 = 0;
    v63 = sub_1C614D48C((unsigned int *)&__s2) + 1;
    goto LABEL_73;
  }
LABEL_68:
  v62 = *(_DWORD *)(v46 + 32);
  if (v62 >= 0x41)
  {
    if (v62 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v46 + 24)) > 0x40)
    {
LABEL_72:
      v63 = 0;
      v64 = 0;
      v23 = 0;
      goto LABEL_73;
    }
    v50 = (const void **)*v50;
  }
  if (*v50)
    goto LABEL_72;
  if (v109 <= 0x40)
  {
    if (__s2)
    {
      if (((unint64_t)__s2 & ((unint64_t)__s2 - 1)) != 0)
        goto LABEL_72;
      goto LABEL_101;
    }
    return 0;
  }
  v66 = 0;
  v67 = 0;
  do
  {
    v68 = (uint8x8_t)vcnt_s8(*(int8x8_t *)((char *)__s2 + v66));
    v68.i16[0] = vaddlv_u8(v68);
    v67 += v68.i32[0];
    v66 += 8;
  }
  while (((((unint64_t)v109 + 63) >> 3) & 0x3FFFFFF8) != v66);
  if (v67 != 1)
  {
    v63 = 0;
    v64 = 0;
    v23 = 0;
LABEL_87:
    MEMORY[0x1CAA32F9C]();
    goto LABEL_88;
  }
LABEL_101:
  v63 = sub_1C614D48C((unsigned int *)&__s2);
  v64 = 1;
LABEL_73:
  if (v109 >= 0x41 && __s2 != 0)
    goto LABEL_87;
LABEL_88:
  if (!v23)
    return v23;
  if (*(_WORD *)(v23 + 24) != 208)
    return 0;
  v69 = *(_QWORD *)(**(_QWORD **)(v23 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(v23 + 32) + 8);
  v70 = *(void **)v69;
  v71 = *(_QWORD *)(v69 + 8);
  __s2 = v70;
  v109 = v71;
  v72 = v70;
  if ((int)v63 <= 31)
  {
    switch((_DWORD)v63)
    {
      case 1:
        v73 = 0;
        v74 = 0;
        v75 = 2;
        goto LABEL_104;
      case 0x10:
        v73 = 0;
        v74 = 0;
        v75 = 4;
        goto LABEL_104;
      case 8:
        v73 = 0;
        v74 = 0;
        v75 = 3;
        goto LABEL_104;
    }
  }
  else
  {
    switch((_DWORD)v63)
    {
      case 0x20:
        v73 = 0;
        v74 = 0;
        v75 = 5;
        goto LABEL_104;
      case 0x40:
        v73 = 0;
        v74 = 0;
        v75 = 6;
        goto LABEL_104;
      case 0x80:
        v73 = 0;
        v74 = 0;
        v75 = 7;
        goto LABEL_104;
    }
  }
  v99 = (llvm::LLVMContext *)v63;
  v100 = v70;
  v101 = v71;
  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a10 + 56), v99);
  v71 = v101;
  v70 = v100;
  v74 = v103;
  v73 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
  v75 = ExtendedIntegerVT;
LABEL_104:
  v76 = (llvm *)(v75 | v73);
  v106 = (void *)(v75 | v73);
  v107 = v74;
  if (v72)
  {
    if ((v72 - 15) >= 0x9C)
      goto LABEL_107;
    goto LABEL_106;
  }
  if ((*(_DWORD *)(v71 + 8) & 0xFE) == 0x12)
  {
LABEL_106:
    v77 = *(llvm::LLVMContext **)(a10 + 56);
    v78 = (llvm::Type *)sub_1C52B71D4((unsigned __int8 *)&__s2);
    v76 = (llvm *)sub_1C47AC578(v77, (uint64_t)v76, v74, v78);
    v74 = v79;
    v106 = v76;
    v107 = v79;
    v70 = __s2;
    v71 = v109;
  }
LABEL_107:
  if (v64)
    v80 = 211;
  else
    v80 = 210;
  if (!(*(unsigned int (**)(_QWORD, uint64_t, void *, uint64_t, llvm *, uint64_t))(**(_QWORD **)(a10 + 24)
                                                                                          + 1472))(*(_QWORD *)(a10 + 24), v80, v70, v71, v76, v74))return 0;
  v83 = *(void **)(v23 + 64);
  __s1 = v83;
  if (v83)
    llvm::MetadataTracking::track((uint64_t)&__s1, (unsigned __int8 *)v83, 2);
  v105 = *(_DWORD *)(v23 + 60);
  v84 = *(uint64_t **)(v23 + 32);
  v85 = *v84;
  v86 = v84[1];
  v87 = sub_1C6131264((unsigned __int8 *)&v106, (uint64_t)v83, v81);
  v89 = sub_1C6367494(a10, v87, v88);
  v92 = *(_QWORD *)(a10 + 832);
  if (v92)
    LOWORD(v92) = *(_WORD *)(v92 + 8);
  v94 = sub_1C5D56C70(a10, v80, (const llvm::APInt *)&__s1, v76, v74, v85, v86, v91, v89, v90, v92);
  v95 = *(uint64_t **)(a5 + 40);
  v96 = *v95;
  v97 = v95[1];
  if (v64)
    v98 = sub_1C6366544(a10, (uint64_t)v94, v93, (uint64_t)&__s1, v96, v97);
  else
    v98 = sub_1C6366480(a10, (uint64_t)v94, v93, (uint64_t)&__s1, v96, v97);
  v23 = v98;
  if (__s1)
    llvm::MetadataTracking::untrack((uint64_t)&__s1, (unsigned __int8 *)__s1);
  return v23;
}

uint64_t sub_1C5CA438C(uint64_t a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8, int a9, uint64_t a10)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int8x8_t *v19;
  uint64_t v20;
  size_t v21;
  uint64_t v22;
  int8x8_t v23;
  uint8x8_t v24;
  int v25;
  unint64_t v26;
  int8x8_t *v27;
  int8x8_t v28;
  uint8x8_t v29;
  unsigned int v30;
  unsigned int v31;
  char v32;
  uint64_t v33;
  void *v34;
  BOOL v35;
  char v36;
  uint64_t v38;
  size_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  int v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  llvm *v48;
  llvm::LLVMContext *v49;
  llvm::Type *v50;
  uint64_t v51;
  BOOL v52;
  unsigned __int8 *v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int8 *v66;
  llvm::LLVMContext *v67;
  void *v68;
  uint64_t v69;
  uint64_t ExtendedIntegerVT;
  uint64_t v71;
  unsigned __int8 *v72;
  int v73;
  unint64_t v74;
  uint64_t v75;
  void *v76;
  unsigned int v77;
  void *__s2;
  uint64_t v79;
  int8x8_t *v80;
  unsigned int v81;

  if (a1 != a5 || a2 != a6)
  {
    if (*(_WORD *)(a5 + 24) != 201)
      return 0;
    v20 = *(_QWORD *)(a5 + 32);
    if (*(_QWORD *)v20 != a1 || *(_DWORD *)(v20 + 8) != a2)
      return 0;
  }
  if (a9 != 12)
    return 0;
  v13 = 0;
  if (*(_WORD *)(a1 + 24) != 209)
    return v13;
  v14 = sub_1C5D4F7E8(a3, a4, 0, 0);
  v15 = sub_1C5D4F7E8(a7, a8, 0, 0);
  if (!v14)
    return 0;
  v13 = 0;
  if (!v15)
    return v13;
  v16 = *(_QWORD *)(v14 + 80);
  v17 = *(_QWORD *)(v15 + 80);
  v18 = *(unsigned int *)(v16 + 32);
  v81 = v18;
  if (v18 > 0x40)
  {
    v21 = ((unint64_t)(v18 + 63) >> 3) & 0x3FFFFFF8;
    v19 = (int8x8_t *)operator new[]();
    memcpy(v19, *(const void **)(v16 + 24), v21);
  }
  else
  {
    v19 = *(int8x8_t **)(v16 + 24);
  }
  v80 = v19;
  llvm::APInt::operator+=((uint64_t)&v80, 1uLL);
  v22 = v81;
  v23 = (int8x8_t)v80;
  v81 = 0;
  if (v22 > 0x40)
  {
    v25 = 0;
    v26 = (unint64_t)(v22 + 63) >> 6;
    v27 = v80;
    do
    {
      v28 = *v27++;
      v29 = (uint8x8_t)vcnt_s8(v28);
      v29.i16[0] = vaddlv_u8(v29);
      v25 += v29.i32[0];
      --v26;
    }
    while (v26);
    if (v25 != 1)
    {
      v32 = 1;
LABEL_36:
      if (v23)
        MEMORY[0x1CAA32F9C](*(_QWORD *)&v23, 0x1000C8000313F17);
      goto LABEL_38;
    }
  }
  else
  {
    v24 = (uint8x8_t)vcnt_s8((int8x8_t)v80);
    v24.i16[0] = vaddlv_u8(v24);
    if (v24.u32[0] != 1)
      return 0;
  }
  v30 = *(_DWORD *)(v16 + 32);
  v31 = *(_DWORD *)(v17 + 32);
  if (v30 >= v31)
  {
    if (v31 < v30)
      llvm::APInt::zext((llvm::APInt *)(v17 + 24), v30, (uint64_t)&__s2);
    else
      sub_1C5DD14E0((uint64_t)&__s2, v17 + 24);
    v33 = *(unsigned int *)(v16 + 32);
    v34 = __s2;
    if (v33 > 0x40)
      v35 = memcmp(*(const void **)(v16 + 24), __s2, ((unint64_t)(v33 + 63) >> 3) & 0x3FFFFFF8) == 0;
    else
      v35 = *(_QWORD *)(v16 + 24) == (_QWORD)__s2;
    v36 = v35;
    v32 = v36 ^ 1;
    if (v79 >= 0x41 && v34)
      MEMORY[0x1CAA32F9C](v34, 0x1000C8000313F17);
  }
  else
  {
    v32 = 1;
  }
  if (v22 >= 0x41)
    goto LABEL_36;
LABEL_38:
  if (v81 >= 0x41 && v80)
    MEMORY[0x1CAA32F9C](v80, 0x1000C8000313F17);
  if ((v32 & 1) != 0)
    return 0;
  v38 = *(unsigned int *)(v16 + 32);
  v77 = v38;
  if (v38 > 0x40)
  {
    v39 = ((unint64_t)(v38 + 63) >> 3) & 0x3FFFFFF8;
    v76 = (void *)operator new[]();
    memcpy(v76, *(const void **)(v16 + 24), v39);
  }
  else
  {
    v76 = *(void **)(v16 + 24);
  }
  llvm::APInt::operator+=((uint64_t)&v76, 1uLL);
  LODWORD(v79) = v77;
  __s2 = v76;
  v77 = 0;
  v40 = sub_1C614D48C((unsigned int *)&__s2);
  if (v79 >= 0x41 && __s2)
    MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
  if (v77 >= 0x41 && v76)
    MEMORY[0x1CAA32F9C](v76, 0x1000C8000313F17);
  v41 = *(_QWORD *)(**(_QWORD **)(a1 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a1 + 32) + 8);
  v42 = *(void **)v41;
  v43 = *(_QWORD *)(v41 + 8);
  __s2 = v42;
  v79 = v43;
  v44 = v42;
  if ((int)v40 <= 31)
  {
    switch((_DWORD)v40)
    {
      case 1:
        v45 = 0;
        v46 = 0;
        v47 = 2;
        goto LABEL_65;
      case 0x10:
        v45 = 0;
        v46 = 0;
        v47 = 4;
        goto LABEL_65;
      case 8:
        v45 = 0;
        v46 = 0;
        v47 = 3;
        goto LABEL_65;
    }
  }
  else
  {
    switch((_DWORD)v40)
    {
      case 0x20:
        v45 = 0;
        v46 = 0;
        v47 = 5;
        goto LABEL_65;
      case 0x40:
        v45 = 0;
        v46 = 0;
        v47 = 6;
        goto LABEL_65;
      case 0x80:
        v45 = 0;
        v46 = 0;
        v47 = 7;
        goto LABEL_65;
    }
  }
  v67 = (llvm::LLVMContext *)v40;
  v68 = v42;
  v69 = v43;
  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a10 + 56), v67);
  v43 = v69;
  v42 = v68;
  v46 = v71;
  v45 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
  v47 = ExtendedIntegerVT;
LABEL_65:
  v48 = (llvm *)(v47 | v45);
  v74 = v47 | v45;
  v75 = v46;
  if (!v44)
  {
    if ((*(_DWORD *)(v43 + 8) & 0xFE) != 0x12)
      goto LABEL_68;
    goto LABEL_67;
  }
  if ((v44 - 15) < 0x9C)
  {
LABEL_67:
    v49 = *(llvm::LLVMContext **)(a10 + 56);
    v50 = (llvm::Type *)sub_1C52B71D4((unsigned __int8 *)&__s2);
    v48 = (llvm *)sub_1C47AC578(v49, (uint64_t)v48, v46, v50);
    v46 = v51;
    v74 = (unint64_t)v48;
    v75 = v51;
    v42 = __s2;
    v43 = v79;
  }
LABEL_68:
  if (!(*(unsigned int (**)(_QWORD, uint64_t, void *, uint64_t, llvm *, uint64_t))(**(_QWORD **)(a10 + 24)
                                                                                          + 1472))(*(_QWORD *)(a10 + 24), 211, v42, v43, v48, v46))return 0;
  v53 = *(unsigned __int8 **)(a1 + 64);
  v72 = v53;
  if (v53)
    llvm::MetadataTracking::track((uint64_t)&v72, v53, 2);
  v73 = *(_DWORD *)(a1 + 60);
  v54 = *(uint64_t **)(a1 + 32);
  v55 = *v54;
  v56 = v54[1];
  v57 = sub_1C6131264((unsigned __int8 *)&v74, (uint64_t)v53, v52);
  v59 = sub_1C6367494(a10, v57, v58);
  v62 = *(_QWORD *)(a10 + 832);
  if (v62)
    LOWORD(v62) = *(_WORD *)(v62 + 8);
  v63 = sub_1C5D56C70(a10, 211, (const llvm::APInt *)&v72, v48, v46, v55, v56, v61, v59, v60, v62);
  v65 = v64;
  if (v72)
    llvm::MetadataTracking::untrack((uint64_t)&v72, v72);
  v66 = *(unsigned __int8 **)(a1 + 64);
  v72 = v66;
  if (v66)
    llvm::MetadataTracking::track((uint64_t)&v72, v66, 2);
  v73 = *(_DWORD *)(a1 + 60);
  v13 = sub_1C6366544(a10, (uint64_t)v63, v65, (uint64_t)&v72, *(_QWORD *)(*(_QWORD *)(a7 + 40) + 16 * a8), *(_QWORD *)(*(_QWORD *)(a7 + 40) + 16 * a8 + 8));
  if (v72)
    llvm::MetadataTracking::untrack((uint64_t)&v72, v72);
  return v13;
}

uint64_t sub_1C5CA496C(uint64_t a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8, int a9)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;
  void *v21;
  BOOL v22;
  const void *v23;
  int v24;
  unsigned int v25;
  void *__s2;
  unsigned int v27;

  if (a1 != a5 || a2 != a6)
  {
    if (*(_WORD *)(a5 + 24) != 201)
      return 0;
    v18 = *(_QWORD *)(a5 + 32);
    if (*(_QWORD *)v18 != a1 || *(_DWORD *)(v18 + 8) != a2)
      return 0;
  }
  v11 = sub_1C5D4F7E8(a3, a4, 0, 0);
  v12 = sub_1C5D4F7E8(a7, a8, 0, 0);
  result = 0;
  if (v11 && v12)
  {
    v14 = *(_QWORD *)(v11 + 80);
    v15 = *(_QWORD *)(v12 + 80);
    v16 = *(_DWORD *)(v14 + 32);
    v17 = *(_DWORD *)(v15 + 32);
    if (v16 < v17)
      return 0;
    if (v17 < v16)
      llvm::APInt::sext((llvm::APInt *)(v15 + 24), v16, (llvm::APInt *)&__s2);
    else
      sub_1C5DD14E0((uint64_t)&__s2, v15 + 24);
    v19 = *(unsigned int *)(v14 + 32);
    if (v19 > 0x40)
    {
      v23 = *(const void **)(v14 + 24);
      v21 = __s2;
      v22 = memcmp(v23, __s2, ((unint64_t)(v19 + 63) >> 3) & 0x3FFFFFF8) == 0;
    }
    else
    {
      v20 = *(void **)(v14 + 24);
      v21 = __s2;
      v22 = v20 == __s2;
    }
    v24 = v22;
    if (v27 >= 0x41 && v21)
      MEMORY[0x1CAA32F9C](v21, 0x1000C8000313F17);
    if (!v24)
      return 0;
    if (a9 == 18)
      v25 = 168;
    else
      v25 = 0;
    if (a9 == 20)
      return 167;
    else
      return v25;
  }
  return result;
}

uint64_t *sub_1C5CA4AE4(uint64_t a1, unsigned int *a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  _BOOL4 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  unsigned __int8 *v30;
  unsigned int v32;
  unsigned __int8 *v33;
  int v34;

  v12 = sub_1C5CA0D28(a2, a3, a4);
  if (!v12)
    return 0;
  v13 = v12;
  v14 = sub_1C5CA0D28(a2, a5, a6);
  if (!v14)
    return 0;
  v16 = v14;
  v17 = 0;
  v18 = *(unsigned __int16 *)(v13 + 24);
  if (v18 != *(unsigned __int16 *)(v14 + 24))
    return (uint64_t *)v17;
  v19 = 0;
  if ((v18 & 0xFFFFFFFD) != 0x4D)
    return v19;
  if (*(_WORD *)(v13 + 56))
  {
    v20 = *(_QWORD **)(v13 + 32);
    v21 = 40 * *(unsigned __int16 *)(v13 + 56);
    while (*v20 != v14)
    {
      v20 += 5;
      v21 -= 40;
      if (!v21)
        goto LABEL_11;
    }
    v16 = v13;
    v13 = v14;
  }
LABEL_11:
  v22 = *(_QWORD *)(v16 + 32);
  if (*(_QWORD *)v22 == v13 && !*(_DWORD *)(v22 + 8))
  {
    v23 = 1;
  }
  else
  {
    if (*(_QWORD *)(v22 + 40) != v13 || *(_DWORD *)(v22 + 48))
      return 0;
    v23 = *(_QWORD *)v22 == v13 && *(_DWORD *)(v22 + 8) == 0;
    if (v18 == 79 && !v23)
      return 0;
  }
  v24 = v18 == 77 ? 72 : 73;
  v17 = **(_QWORD **)(v13 + 40);
  if (!**(_QWORD **)(v13 + 40))
    return (uint64_t *)v17;
  v25 = *(_QWORD *)(v22 + 40 * v23);
  if ((_DWORD)v17 != 1 && !*(_QWORD *)&a2[2 * v17 + 24])
    return 0;
  if ((*((_BYTE *)a2 + 390 * **(_QWORD **)(v13 + 40) + v24 + 3862) & 0xFB) != 0)
    return 0;
  if (*(_WORD *)(v25 + 24) != 199)
    return 0;
  v26 = *(_QWORD *)(v25 + 32);
  v27 = *(_QWORD *)v26;
  v28 = *(unsigned int *)(v26 + 8);
  if (*(_BYTE *)(*(_QWORD *)(v27 + 40) + 16 * v28) != 2)
    return 0;
  v29 = v28;
  v30 = *(unsigned __int8 **)(a7 + 64);
  v33 = v30;
  if (v30)
  {
    v32 = v24;
    llvm::MetadataTracking::track((uint64_t)&v33, v30, 2);
    v24 = v32;
  }
  v34 = *(_DWORD *)(a7 + 60);
  v19 = sub_1C636D72C(a1, (const char *)v24, (const llvm::APInt *)&v33, *(_QWORD *)(v16 + 40), *(unsigned __int16 *)(v16 + 58), **(_QWORD **)(v13 + 32), *(_QWORD *)(*(_QWORD *)(v13 + 32) + 8), v15, *(_QWORD *)(*(_QWORD *)(v13 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v13 + 32) + 48), v27, v29);
  sub_1C5D6146C(a1, v16, 0, (uint64_t)v19, 0);
  if (*(_WORD *)(a7 + 24) == 171)
    v19 = sub_1C6366AB4(a1, 0, (const llvm::APInt *)&v33, (llvm *)2, 0, 0, 0);
  if (v33)
    llvm::MetadataTracking::untrack((uint64_t)&v33, v33);
  return v19;
}

uint64_t *sub_1C5CA4D78(uint64_t *a1, uint64_t a2, BOOL a3)
{
  int v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned int v16;
  uint64_t v17;
  int v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  BOOL v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  unint64_t ExtendedSizeInBits;
  const char *v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  BOOL v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  llvm::Type *v37;
  uint64_t v38;
  llvm::LLVMContext *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char v53;
  unsigned __int8 *v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  __int16 v63;
  __int128 v64;
  uint64_t *v65;
  unsigned int v66;
  uint64_t v67;
  int v68;
  uint64_t v70;
  int v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t *v77;
  uint64_t v79;
  int v80;
  _QWORD *v81;
  uint64_t *v82;
  uint64_t v83;
  int v84;
  BOOL v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  __int16 v89;
  __int128 v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  int v96;
  llvm::LLVMContext *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t ExtendedIntegerVT;
  unsigned int v102;
  uint64_t v103;
  BOOL v104;
  unsigned int v105;
  uint64_t v106;
  BOOL v107;
  llvm::Type *v108;
  uint64_t v109;
  __int128 v110;
  _QWORD *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  unsigned int v116;
  _QWORD *v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  int v128;
  BOOL v129;
  uint64_t v130;
  int v131;
  BOOL v132;
  uint64_t v133;
  llvm::LLVMContext *v134;
  unint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  llvm::Type *v139;
  uint64_t v140;
  BOOL v141;
  uint64_t v142;
  uint64_t v143;
  unsigned __int8 v144;
  uint64_t v145;
  llvm::EVT *v146;
  llvm::EVT *v147;
  llvm::EVT *v148;
  int v149;
  uint64_t v150;
  unsigned int v151;
  int v152;
  unsigned int v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  unsigned __int8 *v159;
  int v160;
  unsigned int v161;
  __int128 v162;
  __int128 v163;

  v5 = *(unsigned __int16 *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD **)(a2 + 40);
  v8 = *(_QWORD *)v6;
  v9 = *(_DWORD *)(v6 + 8);
  v10 = v7[1];
  *(_QWORD *)&v163 = *v7;
  v11 = v163;
  *((_QWORD *)&v163 + 1) = v10;
  v162 = v163;
  v12 = v163;
  if ((_BYTE)v163)
  {
    if (v163 - 15 < 0x9C)
      return 0;
  }
  else if ((*(_DWORD *)(v10 + 8) & 0xFE) == 0x12)
  {
    return 0;
  }
  v161 = 0;
  if (v5 == 204)
  {
    v13 = 0;
    v162 = *(_OWORD *)(*(_QWORD *)(v6 + 40) + 80);
    v14 = 2;
    goto LABEL_7;
  }
  if ((v5 & 0xFFFE) != 0xB0)
  {
    if (v5 != 171)
    {
      v14 = 0;
      goto LABEL_81;
    }
    v67 = *(_QWORD *)(v6 + 40);
    v68 = *(unsigned __int16 *)(v67 + 24);
    if (v68 != 35 && v68 != 11)
      return 0;
    v70 = *(_QWORD *)(v67 + 80);
    LODWORD(v156) = 0;
    v71 = sub_1C49AB31C((llvm::APInt *)(v70 + 24));
    if (v71)
    {
      if (*(_DWORD *)(v70 + 32) > 0x40u)
        v72 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)(v70 + 24));
      else
        v72 = __clz(__rbit64(~*(_QWORD *)(v70 + 24)));
    }
    else
    {
      if (!sub_1C6329630((int8x8_t **)(v70 + 24), &v161, &v156))
        return 0;
      v72 = v156;
    }
    v13 = v71 ^ 1;
    if ((int)v72 <= 31)
    {
      switch((_DWORD)v72)
      {
        case 1:
          v73 = 0;
          v74 = 0;
          v75 = 2;
          goto LABEL_114;
        case 0x10:
          v73 = 0;
          v74 = 0;
          v75 = 4;
          goto LABEL_114;
        case 8:
          v73 = 0;
          v74 = 0;
          v75 = 3;
          goto LABEL_114;
      }
    }
    else
    {
      switch((_DWORD)v72)
      {
        case 0x20:
          v73 = 0;
          v74 = 0;
          v75 = 5;
LABEL_114:
          *(_QWORD *)&v162 = v75 | v73;
          *((_QWORD *)&v162 + 1) = v74;
          v14 = 3;
          goto LABEL_7;
        case 0x40:
          v73 = 0;
          v74 = 0;
          v75 = 6;
          goto LABEL_114;
        case 0x80:
          v73 = 0;
          v74 = 0;
          v75 = 7;
          goto LABEL_114;
      }
    }
    ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*a1 + 56), (llvm::LLVMContext *)v72);
    v73 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
    v75 = ExtendedIntegerVT;
    v13 = v71 ^ 1;
    goto LABEL_114;
  }
  if (*(_WORD *)(v8 + 24) == 253)
    v30 = v8;
  else
    v30 = 0;
  v31 = *(_QWORD *)(v6 + 40);
  v32 = *(unsigned __int16 *)(v31 + 24);
  v33 = v32 == 35 || v32 == 11;
  if (!v33 || !v30)
    return 0;
  v34 = *(_QWORD *)(v31 + 80);
  v35 = (_QWORD *)(v34 + 24);
  if (*(_DWORD *)(v34 + 32) >= 0x41u)
    v35 = (_QWORD *)*v35;
  v36 = (_QWORD *)*v35;
  v161 = *v35;
  v156 = *(_OWORD *)(v30 + 80);
  v37 = sub_1C6131328((unsigned __int8 *)&v156, a2, a3);
  if ((unint64_t)v37 <= v36)
    return 0;
  v38 = 2;
  if (v5 == 177)
    v14 = 3;
  else
    v14 = 2;
  v39 = (llvm::LLVMContext *)((_DWORD)v37 - (_DWORD)v36);
  if ((int)v39 <= 31)
  {
    switch((_DWORD)v39)
    {
      case 1:
        v40 = 0;
        v41 = 0;
        goto LABEL_137;
      case 0x10:
        v40 = 0;
        v41 = 0;
        v38 = 4;
        goto LABEL_137;
      case 8:
        v40 = 0;
        v41 = 0;
        v38 = 3;
        goto LABEL_137;
    }
LABEL_158:
    v122 = v14;
    v123 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*a1 + 56), v39);
    v14 = v122;
    v40 = v123 & 0xFFFFFFFFFFFFFF00;
    v38 = v123;
    goto LABEL_137;
  }
  if ((_DWORD)v39 != 32)
  {
    if ((_DWORD)v39 == 64)
    {
      v40 = 0;
      v41 = 0;
      v38 = 6;
      goto LABEL_137;
    }
    if ((_DWORD)v39 == 128)
    {
      v40 = 0;
      v41 = 0;
      v38 = 7;
      goto LABEL_137;
    }
    goto LABEL_158;
  }
  v40 = 0;
  v41 = 0;
  v38 = 5;
LABEL_137:
  *(_QWORD *)&v162 = v38 | v40;
  *((_QWORD *)&v162 + 1) = v41;
  v102 = *(unsigned __int16 *)(v30 + 26);
  if ((v102 & 0x800) != 0 && (_DWORD)v14 != ((v102 >> 10) & 3))
    return 0;
LABEL_81:
  v13 = 0;
  v16 = 0;
  v15 = (_QWORD *)a2;
  if (v5 == 177)
    goto LABEL_9;
LABEL_7:
  if (*(_WORD *)(v8 + 24) == 177)
  {
    v15 = (_QWORD *)v8;
    v16 = v9;
LABEL_9:
    v17 = v15[6];
    if (!v17)
      return 0;
    v18 = 1;
    do
    {
      if (*(_DWORD *)(v17 + 8) == v16)
      {
        if (!v18)
          return 0;
        --v18;
      }
      v17 = *(_QWORD *)(v17 + 32);
    }
    while (v17);
    if (v18)
      return 0;
    v19 = (_QWORD *)v15[4];
    v20 = *(_WORD *)(*v19 + 24) == 253 ? *v19 : 0;
    v21 = v19[5];
    v22 = *(unsigned __int16 *)(v21 + 24);
    v23 = v22 == 35 || v22 == 11;
    if (!v23 || !v20)
      return 0;
    v24 = *(_QWORD *)(v21 + 80);
    v25 = (_QWORD *)(v24 + 24);
    if (*(_DWORD *)(v24 + 32) >= 0x41u)
      v25 = (_QWORD *)*v25;
    v151 = v14;
    v149 = v13;
    v26 = (_QWORD *)*v25;
    v161 = *v25;
    v156 = *(_OWORD *)(v20 + 80);
    if ((_BYTE)v156)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v156);
    else
      ExtendedSizeInBits = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v156);
    if ((_DWORD)v28 == 1)
    {
      v148 = (llvm::EVT *)ExtendedSizeInBits;
      ExtendedSizeInBits = (unint64_t)v148;
    }
    if (ExtendedSizeInBits <= v26 || (*(_WORD *)(v20 + 26) & 0xC00) == 0x800)
      return 0;
    v96 = ExtendedSizeInBits;
    v76 = ExtendedSizeInBits - v26;
    if ((unint64_t)sub_1C6131328((unsigned __int8 *)&v162, (uint64_t)v28, v29) <= v76)
    {
      v14 = v151;
LABEL_164:
      v124 = v15[6];
      v125 = *(_QWORD *)(v124 + 16);
      v126 = 1;
      do
      {
        if (*(_DWORD *)(v124 + 8) == v16)
        {
          if (!v126)
            goto LABEL_177;
          --v126;
        }
        v124 = *(_QWORD *)(v124 + 32);
      }
      while (v124);
      if (v126
        || *(_WORD *)(v125 + 24) != 171
        || ((v127 = *(_QWORD *)(*(_QWORD *)(v125 + 32) + 40), v128 = *(unsigned __int16 *)(v127 + 24), v128 != 35)
          ? (v129 = v128 == 11)
          : (v129 = 1),
            !v129
         || (v130 = *(_QWORD *)(v127 + 80),
             v153 = v14,
             v131 = sub_1C49AB31C((llvm::APInt *)(v130 + 24)),
             v14 = v153,
             !v131)))
      {
LABEL_177:
        v133 = v15[4];
        v8 = *(_QWORD *)v133;
        v9 = *(_DWORD *)(v133 + 8);
        v13 = v149;
        if (!(_DWORD)v26)
          goto LABEL_49;
LABEL_60:
        v44 = 0;
        goto LABEL_61;
      }
      v147 = *(llvm::EVT **)(*a1 + 56);
      if (*(_DWORD *)(v130 + 32) > 0x40u)
        v134 = (llvm::LLVMContext *)llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)(v130 + 24));
      else
        v134 = (llvm::LLVMContext *)__clz(__rbit64(~*(_QWORD *)(v130 + 24)));
      if ((int)v134 <= 31)
      {
        switch((_DWORD)v134)
        {
          case 1:
            v135 = 0;
            v136 = 0;
            v137 = 2;
            goto LABEL_196;
          case 0x10:
            v135 = 0;
            v136 = 0;
            v137 = 4;
            goto LABEL_196;
          case 8:
            v135 = 0;
            v136 = 0;
            v137 = 3;
            goto LABEL_196;
        }
      }
      else
      {
        switch((_DWORD)v134)
        {
          case 0x20:
            v135 = 0;
            v136 = 0;
            v137 = 5;
            goto LABEL_196;
          case 0x40:
            v135 = 0;
            v136 = 0;
            v137 = 6;
            goto LABEL_196;
          case 0x80:
            v135 = 0;
            v136 = 0;
            v137 = 7;
            goto LABEL_196;
        }
      }
      v142 = llvm::EVT::getExtendedIntegerVT(v147, v134);
      v135 = v142 & 0xFFFFFFFFFFFFFF00;
      v137 = v142;
LABEL_196:
      *(_QWORD *)&v156 = v137 | v135;
      *((_QWORD *)&v156 + 1) = v136;
      v139 = sub_1C6131328((unsigned __int8 *)&v162, v136, v132);
      if (v139 > sub_1C6131328((unsigned __int8 *)&v156, v140, v141)
        && *(_BYTE *)(v15[5] + 16 * v16)
        && (_BYTE)v156
        && ((*(unsigned __int16 *)(a1[1]
                                 + 358 * *(unsigned __int8 *)(v15[5] + 16 * v16)
                                 + 2 * v156
                                 + 73672) >> (4 * v153)) & 0xF) == 0)
      {
        v162 = v156;
      }
      v14 = v153;
      goto LABEL_177;
    }
    if (v151 != 2)
    {
      v97 = (llvm::LLVMContext *)(v96 - (_DWORD)v26);
      if ((int)v97 <= 31)
      {
        switch((_DWORD)v97)
        {
          case 1:
            v98 = 0;
            v99 = 0;
            v100 = 2;
            goto LABEL_163;
          case 0x10:
            v98 = 0;
            v99 = 0;
            v100 = 4;
            goto LABEL_163;
          case 8:
            v98 = 0;
            v99 = 0;
            v100 = 3;
            goto LABEL_163;
        }
      }
      else
      {
        switch((_DWORD)v97)
        {
          case 0x20:
            v98 = 0;
            v99 = 0;
            v100 = 5;
LABEL_163:
            *(_QWORD *)&v162 = v100 | v98;
            *((_QWORD *)&v162 + 1) = v99;
            v14 = 3;
            goto LABEL_164;
          case 0x40:
            v98 = 0;
            v99 = 0;
            v100 = 6;
            goto LABEL_163;
          case 0x80:
            v98 = 0;
            v99 = 0;
            v100 = 7;
            goto LABEL_163;
        }
      }
      v138 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*a1 + 56), v97);
      v98 = v138 & 0xFFFFFFFFFFFFFF00;
      v100 = v138;
      goto LABEL_163;
    }
    return 0;
  }
  LODWORD(v26) = v161;
  if (v161)
    goto LABEL_60;
LABEL_49:
  if (*(_WORD *)(v8 + 24) != 175)
    goto LABEL_60;
  v42 = *(_QWORD *)(v8 + 48);
  if (!v42)
    goto LABEL_60;
  v43 = 1;
  do
  {
    if (*(_DWORD *)(v42 + 8) == v9)
    {
      if (!v43)
        goto LABEL_60;
      --v43;
    }
    v42 = *(_QWORD *)(v42 + 32);
  }
  while (v42);
  v44 = 0;
  if (!v43 && v162 == v12)
  {
    if (!v12 && *((_QWORD *)&v162 + 1) != v10)
      goto LABEL_60;
    v79 = v14;
    v80 = v13;
    v81 = (_QWORD *)(*(_QWORD *)(v8 + 40) + 16 * v9);
    if ((*(unsigned int (**)(uint64_t, _QWORD, _QWORD, uint64_t, uint64_t))(*(_QWORD *)a1[1] + 1384))(a1[1], *v81, v81[1], v11, v10))
    {
      v82 = *(uint64_t **)(v8 + 32);
      v83 = v82[5];
      v84 = *(unsigned __int16 *)(v83 + 24);
      v85 = v84 == 35 || v84 == 11;
      v14 = v79;
      if (v85)
      {
        v86 = *(_QWORD *)(v83 + 80);
        v87 = (_QWORD *)(v86 + 24);
        if (*(_DWORD *)(v86 + 32) >= 0x41u)
          v87 = (_QWORD *)*v87;
        v13 = v80;
        v44 = *(_DWORD *)v87;
        v8 = *v82;
      }
      else
      {
        v44 = 0;
        v13 = v80;
      }
    }
    else
    {
      v44 = 0;
      v13 = v80;
      v14 = v79;
    }
  }
LABEL_61:
  if (*(_WORD *)(v8 + 24) != 253)
    return 0;
  if ((*(_WORD *)(*(_QWORD *)(v8 + 96) + 36) & 0xF00) != 0)
    return 0;
  if ((*(_BYTE *)(v8 + 26) & 8) != 0)
    return 0;
  v45 = v13;
  v46 = v14;
  if (!sub_1C5CA7840((uint64_t)a1, v8, v14, (unsigned __int8 *)&v162, v26))
    return 0;
  v152 = v46;
  v47 = v161;
  v48 = v161;
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272))
  {
    v156 = *(_OWORD *)(v8 + 80);
    v49 = 8 * sub_1C47C1C70((unsigned __int8 *)&v156);
    v48 = v49 - (v47 + 8 * sub_1C47C1C70((unsigned __int8 *)&v162));
  }
  v143 = v47;
  v50 = v48 >> 3;
  v51 = (1 << *(_BYTE *)(*(_QWORD *)(v8 + 96) + 34)) | *(_QWORD *)(*(_QWORD *)(v8 + 96) + 8);
  v52 = (1 << (63 - __clz(v51 & -v51))) | v50;
  v53 = __clz(v52 & -v52);
  v54 = *(unsigned __int8 **)(v8 + 64);
  v159 = v54;
  if (v54)
    llvm::MetadataTracking::track((uint64_t)&v159, v54, 2);
  v144 = 63 - v53;
  v160 = *(_DWORD *)(v8 + 60);
  v55 = sub_1C6369954(*a1, *(_QWORD *)(*(_QWORD *)(v8 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v8 + 32) + 48), v50, 0, (const llvm::APInt *)&v159, 3);
  v150 = v56;
  sub_1C5C5B004((uint64_t)a1, (uint64_t)v55);
  v57 = *((_QWORD *)&v163 + 1);
  v145 = v163;
  v146 = (llvm::EVT *)*a1;
  v58 = *(uint64_t **)(v8 + 32);
  v59 = *v58;
  v60 = v58[1];
  v61 = *(uint64_t **)(v8 + 96);
  if (v152)
  {
    sub_1C4824250(v61, v50, (uint64_t)&v155);
    v88 = *(_QWORD *)(v8 + 96);
    v89 = *(_WORD *)(v88 + 32);
    v90 = *(_OWORD *)(v88 + 56);
    v156 = *(_OWORD *)(v88 + 40);
    v157 = v90;
    v65 = sub_1C636B4C8((uint64_t)v146, v152, (uint64_t)&v159, v145, v57, v59, v60, v91, (uint64_t)v55, v150, &v155, v162, *((uint64_t *)&v162 + 1), v144 | 0x100u, (v144 | 0x100uLL) >> 32, v89, (uint64_t)&v156);
  }
  else
  {
    sub_1C4824250(v61, v50, (uint64_t)&v158);
    v62 = *(_QWORD *)(v8 + 96);
    v63 = *(_WORD *)(v62 + 32);
    v64 = *(_OWORD *)(v62 + 56);
    v156 = *(_OWORD *)(v62 + 40);
    v157 = v64;
    v65 = sub_1C63681B0((uint64_t)v146, v145, v57, (uint64_t)&v159, v59, v60, (uint64_t)v55, v150, &v158, v144 | 0x100u, (v144 | 0x100uLL) >> 32, v63, (uint64_t)&v156, 0);
  }
  v77 = v65;
  v92 = v66;
  v93 = *a1;
  v94 = *(_QWORD *)(*a1 + 656);
  *(_QWORD *)(v93 + 656) = &v156;
  *(_QWORD *)&v156 = &off_1E8197EE8;
  *((_QWORD *)&v156 + 1) = v94;
  *(_QWORD *)&v157 = v93;
  *((_QWORD *)&v157 + 1) = a1;
  sub_1C5D6146C(v93, v8, 1, (uint64_t)v77, 1);
  v95 = v92;
  if (v44)
  {
    *(_QWORD *)&v154 = llvm::TargetLoweringBase::getShiftAmountTy((uint64_t *)a1[1], *(_QWORD *)(v77[5] + 16 * v92), *(_QWORD *)(v77[5] + 16 * v92 + 8), *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, *((unsigned __int8 *)a1 + 34));
    *((_QWORD *)&v154 + 1) = v103;
    v105 = sub_1C6131328((unsigned __int8 *)&v154, v103, v104);
    if ((v105 & 0xFFFFFFC0) == 0 && 0xFFFFFFFFFFFFFFFFLL >> -(char)v105 < v44)
      v154 = v163;
    v108 = sub_1C6131328((unsigned __int8 *)&v163, v106, v107);
    v109 = *a1;
    v110 = v163;
    if ((unint64_t)v108 <= v44)
    {
      v115 = sub_1C6366AB4(*a1, 0, (const llvm::APInt *)&v159, (llvm *)v163, *((uint64_t *)&v163 + 1), 0, 0);
    }
    else
    {
      v111 = sub_1C6366AB4(*a1, v44, (const llvm::APInt *)&v159, (llvm *)v154, *((uint64_t *)&v154 + 1), 0, 0);
      v114 = *(_QWORD *)(v109 + 832);
      if (v114)
        LOWORD(v114) = *(_WORD *)(v114 + 8);
      v115 = sub_1C5D56C70(v109, 175, (const llvm::APInt *)&v159, (llvm *)v110, *((uint64_t *)&v110 + 1), (uint64_t)v77, v95, v113, (uint64_t)v111, v112, v114);
    }
    v77 = v115;
    v95 = v116;
    if (!v45)
      goto LABEL_122;
    goto LABEL_149;
  }
  if (v45)
  {
LABEL_149:
    v117 = sub_1C6366AB4(*a1, v143, (const llvm::APInt *)&v159, (llvm *)v163, *((uint64_t *)&v163 + 1), 0, 0);
    v120 = *(_QWORD *)(*a1 + 832);
    if (v120)
      LOWORD(v120) = *(_WORD *)(v120 + 8);
    v77 = sub_1C5D56C70(*a1, 175, (const llvm::APInt *)&v159, (llvm *)v163, *((uint64_t *)&v163 + 1), (uint64_t)v77, v95, v119, (uint64_t)v117, v118, v120);
    sub_1C5D6146C(*a1, a2, 0, (uint64_t)v77, v121);
  }
LABEL_122:
  *(_QWORD *)(v157 + 656) = *((_QWORD *)&v156 + 1);
  if (v159)
    llvm::MetadataTracking::untrack((uint64_t)&v159, v159);
  return v77;
}

_QWORD *sub_1C5CA598C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  _QWORD *v6;
  unsigned __int8 *v12;
  uint64_t *v13;
  int v14;
  uint64_t v15;
  const char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v22;
  uint64_t v24;
  int v25;
  unsigned int ExtendedSizeInBits;
  const char *v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  llvm::APInt *v40;
  int v41;
  unsigned int v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  const char *v50;
  unint64_t v51;
  _QWORD *v52;
  int v53;
  int64_t v54;
  unint64_t v56;
  int v57;
  uint64_t v58;
  unsigned int v59;
  llvm *v60;
  llvm *ShiftAmountTy;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  uint64_t *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  __int16 v70;
  unsigned int v71;
  const char *v72;
  uint64_t ExtendedIntegerVT;
  uint64_t v74;
  unsigned int v75;
  _QWORD *v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  unsigned __int8 *v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unsigned __int8 *v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unsigned __int8 *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  unint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unsigned __int8 *v102;
  uint64_t v103;
  uint64_t *v104;
  unint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unsigned __int8 *v108;
  uint64_t v109;
  __int16 v110;
  unsigned __int8 *v111;
  uint64_t v112;
  __int128 v113;
  uint64_t *v114;
  unint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int8 *v125;
  int v126;
  unint64_t v127;
  unsigned int v128;
  unint64_t v129;
  unsigned int v130;
  unsigned __int8 *v131;
  int v132;
  __int128 v133;
  unsigned __int8 *v134;
  uint64_t v135;

  v6 = (_QWORD *)a6;
  v133 = *(_OWORD *)(*(_QWORD *)(a4 + 40) + 16 * a5);
  v12 = *(unsigned __int8 **)(a6 + 64);
  v131 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v131, v12, 2);
  v132 = *((_DWORD *)v6 + 15);
  if (*(_WORD *)(a2 + 24) == 51 || *(_WORD *)(a4 + 24) == 51)
  {
    v6 = sub_1C6366AB4(*(_QWORD *)a1, 0, (const llvm::APInt *)&v131, (llvm *)v133, *((uint64_t *)&v133 + 1), 0, 0);
    goto LABEL_28;
  }
  v13 = sub_1C5CA83DC((_QWORD **)a1, 1, a2, a3, a4, a5, (const llvm::APInt *)&v131);
  if (v13)
  {
    v6 = v13;
    goto LABEL_28;
  }
  v14 = *(unsigned __int16 *)(a2 + 24);
  if (v14 != 56)
  {
LABEL_19:
    if (v14 != 177)
      goto LABEL_27;
    v19 = *(_QWORD *)(a2 + 48);
    if (!v19)
      goto LABEL_27;
    v20 = 1;
    do
    {
      if (*(_DWORD *)(v19 + 8) == a3)
      {
        if (!v20)
          goto LABEL_27;
        --v20;
      }
      v19 = *(_QWORD *)(v19 + 32);
    }
    while (v19);
    if (v20)
      goto LABEL_27;
    v22 = *(unsigned __int16 *)(a4 + 24);
    if (v22 != 35 && v22 != 11)
      goto LABEL_27;
    v24 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40);
    v25 = *(unsigned __int16 *)(v24 + 24);
    if (v25 != 35 && v25 != 11)
      goto LABEL_27;
    if ((_BYTE)v133)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v133);
    else
      ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v133);
    v35 = ExtendedSizeInBits;
    if ((_DWORD)v28 == 1)
    v36 = *(_QWORD *)(v24 + 80);
    v37 = (_QWORD *)(v36 + 24);
    if (*(_DWORD *)(v36 + 32) >= 0x41u)
      v37 = (_QWORD *)*v37;
    v38 = (_QWORD *)*v37;
    if (!*v37)
      goto LABEL_27;
    v39 = *(_QWORD *)(a4 + 80);
    v40 = (llvm::APInt *)(v39 + 24);
    if (*(_DWORD *)(v39 + 32) > 0x40u)
      v41 = llvm::APInt::countTrailingOnesSlowCase(v40);
    else
      v41 = __clz(__rbit64(~*(_QWORD *)v40));
    v42 = v35 >> 1;
    if (v35 >> 1 <= 0x1F)
    {
      switch(v42)
      {
        case 1u:
          v43 = 0;
          v44 = 0;
          v45 = 2;
          goto LABEL_99;
        case 0x10u:
          v43 = 0;
          v44 = 0;
          v45 = 4;
          goto LABEL_99;
        case 8u:
          v43 = 0;
          v44 = 0;
          v45 = 3;
          goto LABEL_99;
      }
    }
    else
    {
      switch(v42)
      {
        case 0x20u:
          v43 = 0;
          v44 = 0;
          v45 = 5;
          goto LABEL_99;
        case 0x40u:
          v43 = 0;
          v44 = 0;
          v45 = 6;
          goto LABEL_99;
        case 0x80u:
          v43 = 0;
          v44 = 0;
          v45 = 7;
          goto LABEL_99;
      }
    }
    ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)a1 + 56), (llvm::LLVMContext *)(v35 >> 1));
    v44 = v74;
    v43 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
    v45 = ExtendedIntegerVT;
LABEL_99:
    if (!sub_1C49AB31C(v40))
    {
      v6 = 0;
      goto LABEL_28;
    }
    v59 = v41 + (_DWORD)v38;
    v6 = 0;
    if (v59 > v42)
      goto LABEL_28;
    v60 = (llvm *)(v45 | v43);
    if ((*(unsigned int (**)(_QWORD, _QWORD, _QWORD, unint64_t, uint64_t))(**(_QWORD **)(a1 + 8)
                                                                                           + 1384))(*(_QWORD *)(a1 + 8), v133, *((_QWORD *)&v133 + 1), v45 | v43, v44)&& (*(unsigned int (**)(_QWORD, uint64_t, unint64_t, uint64_t))(**(_QWORD **)(a1 + 8) + 1744))(*(_QWORD *)(a1 + 8), 171, v45 | v43, v44)&& (*(unsigned int (**)(_QWORD, uint64_t, unint64_t, uint64_t))(**(_QWORD **)(a1 + 8) + 1744))(*(_QWORD *)(a1 + 8), 177, v45 | v43, v44)&& (*(unsigned int (**)(_QWORD, _QWORD, _QWORD, unint64_t, uint64_t))(**(_QWORD **)(a1 + 8)+ 1160))(*(_QWORD *)(a1 + 8), v133,
           *((_QWORD *)&v133 + 1),
           v45 | v43,
           v44)
      && (*(unsigned int (**)(_QWORD, unint64_t, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(a1 + 8)
                                                                                           + 1192))(*(_QWORD *)(a1 + 8), v45 | v43, v44, v133, *((_QWORD *)&v133 + 1)))
    {
      ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a1 + 8), v45 | v43, v44, *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 40) + 272, 1);
      v63 = v62;
      v64 = *(_QWORD *)a1;
      v65 = *(unsigned __int8 **)(a2 + 64);
      v134 = v65;
      if (v65)
        llvm::MetadataTracking::track((uint64_t)&v134, v65, 2);
      LODWORD(v135) = *(_DWORD *)(a2 + 60);
      v66 = *(uint64_t **)(a2 + 32);
      v67 = *v66;
      v68 = v66[1];
      v69 = *(_QWORD *)(v64 + 832);
      if (v69)
        v70 = *(_WORD *)(v69 + 8);
      else
        v70 = 0;
      v82 = sub_1C5D52060(v64, 201, (const llvm::APInt *)&v134, v60, v44, v67, v68, v70);
      v121 = v83;
      v122 = (uint64_t)v82;
      if (v134)
        llvm::MetadataTracking::untrack((uint64_t)&v134, v134);
      v84 = *(_QWORD *)a1;
      llvm::APInt::trunc(v40, v42, (llvm::APInt *)&v134);
      v85 = *(unsigned __int8 **)(a2 + 64);
      v129 = (unint64_t)v85;
      if (v85)
        llvm::MetadataTracking::track((uint64_t)&v129, v85, 2);
      v130 = *(_DWORD *)(a2 + 60);
      v123 = sub_1C63666FC(v84, (llvm::LLVMContext *)&v134, (const llvm::APInt *)&v129, (uint64_t)v60, v44, 0, 0);
      v87 = v86;
      if (v129)
        llvm::MetadataTracking::untrack((uint64_t)&v129, (unsigned __int8 *)v129);
      if (v135 >= 0x41 && v134)
        MEMORY[0x1CAA32F9C](v134, 0x1000C8000313F17);
      v88 = *(_QWORD *)a1;
      v89 = *(unsigned __int8 **)(a2 + 64);
      v134 = v89;
      if (v89)
        llvm::MetadataTracking::track((uint64_t)&v134, v89, 2);
      LODWORD(v135) = *(_DWORD *)(a2 + 60);
      v91 = sub_1C6366AB4(v88, v38, (const llvm::APInt *)&v134, ShiftAmountTy, v63, 0, 0);
      v93 = v92;
      if (v134)
        llvm::MetadataTracking::untrack((uint64_t)&v134, v134);
      v94 = *(_QWORD *)a1;
      v95 = *(unsigned __int8 **)(a2 + 64);
      v134 = v95;
      if (v95)
        llvm::MetadataTracking::track((uint64_t)&v134, v95, 2);
      LODWORD(v135) = *(_DWORD *)(a2 + 60);
      v96 = *(_QWORD *)(v94 + 832);
      if (v96)
        LOWORD(v96) = *(_WORD *)(v96 + 8);
      v98 = sub_1C5D56C70(v94, 177, (const llvm::APInt *)&v134, v60, v44, v122, v121, v90, (uint64_t)v91, v93, v96);
      v100 = v99;
      if (v134)
        llvm::MetadataTracking::untrack((uint64_t)&v134, v134);
      v101 = *(_QWORD *)a1;
      v102 = *(unsigned __int8 **)(a2 + 64);
      v134 = v102;
      if (v102)
        llvm::MetadataTracking::track((uint64_t)&v134, v102, 2);
      LODWORD(v135) = *(_DWORD *)(a2 + 60);
      v103 = *(_QWORD *)(v101 + 832);
      if (v103)
        LOWORD(v103) = *(_WORD *)(v103 + 8);
      v104 = sub_1C5D56C70(v101, 171, (const llvm::APInt *)&v134, v60, v44, (uint64_t)v98, v100, v97, v123, v87, v103);
      v106 = v105;
      if (v134)
        llvm::MetadataTracking::untrack((uint64_t)&v134, v134);
      v107 = *(_QWORD *)a1;
      v108 = *(unsigned __int8 **)(a2 + 64);
      v134 = v108;
      if (v108)
        llvm::MetadataTracking::track((uint64_t)&v134, v108, 2);
      LODWORD(v135) = *(_DWORD *)(a2 + 60);
      v109 = *(_QWORD *)(v107 + 832);
      if (v109)
        v110 = *(_WORD *)(v109 + 8);
      else
        v110 = 0;
      v6 = sub_1C5D52060(v107, 199, (const llvm::APInt *)&v134, (llvm *)v133, *((uint64_t *)&v133 + 1), (uint64_t)v104, v106, v110);
      if (v134)
        llvm::MetadataTracking::untrack((uint64_t)&v134, v134);
      goto LABEL_28;
    }
LABEL_27:
    v6 = 0;
    goto LABEL_28;
  }
  if (*(_WORD *)(a4 + 24) != 177)
    goto LABEL_27;
  if ((_BYTE)v133)
    v15 = sub_1C47A8C74((unsigned __int8 *)&v133);
  else
    v15 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v133);
  v17 = v15;
  if ((_DWORD)v16 == 1)
  if (v17 > 0x40
    || (v18 = *(_QWORD *)(a2 + 48)) == 0
    || *(_QWORD *)(v18 + 32)
    || (v29 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), v30 = *(unsigned __int16 *)(v29 + 24), v30 != 35) && v30 != 11
    || (v31 = *(_QWORD *)(*(_QWORD *)(a4 + 32) + 40), v32 = *(unsigned __int16 *)(v31 + 24), v32 != 35) && v32 != 11)
  {
LABEL_18:
    v14 = *(unsigned __int16 *)(a2 + 24);
    goto LABEL_19;
  }
  v33 = *(_QWORD *)(v29 + 80);
  v34 = *(_DWORD *)(v33 + 32);
  v130 = v34;
  if (v34 > 0x40)
  {
    v129 = operator new[]();
    v34 = v130;
    memcpy((void *)v129, *(const void **)(v33 + 24), (((unint64_t)v130 + 63) >> 3) & 0x3FFFFFF8);
  }
  else
  {
    v129 = *(_QWORD *)(v33 + 24);
  }
  v46 = *(_QWORD *)(v31 + 80);
  v47 = *(unsigned int *)(v46 + 32);
  if (v47 > 0x40)
  {
    v48 = (_QWORD *)operator new[]();
    memcpy(v48, *(const void **)(v46 + 24), ((unint64_t)(v47 + 63) >> 3) & 0x3FFFFFF8);
    v34 = v130;
  }
  else
  {
    v48 = *(_QWORD **)(v46 + 24);
  }
  if (v34 - sub_1C4959174((llvm::APInt *)&v129) + 1 > 0x40)
    goto LABEL_91;
  if ((_BYTE)v133)
    v49 = sub_1C47A8C74((unsigned __int8 *)&v133);
  else
    v49 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v133);
  v51 = v49;
  if ((_DWORD)v50 == 1)
  if (v47 > 0x40)
  {
    v53 = 0;
    v54 = (unint64_t)(v47 + 63) >> 6;
    do
    {
      if (v54-- < 1)
        break;
      v56 = v48[v54];
      v53 += __clz(v56);
    }
    while (!v56);
    v57 = v47 | 0xFFFFFFC0;
    if ((v47 & 0x3F) == 0)
      v57 = 0;
    if ((v47 - v53 - v57) > 0x40)
      goto LABEL_91;
    v52 = (_QWORD *)*v48;
  }
  else
  {
    v52 = v48;
  }
  if ((unint64_t)v52 >= v51
    || (v130 > 0x40 ? (v58 = *(_QWORD *)v129) : (v58 = (uint64_t)(v129 << -(uint64_t)v130) >> -(uint64_t)v130),
        ((*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 1088))(*(_QWORD *)(a1 + 8), v58) & 1) != 0))
  {
LABEL_91:
    if (v47 >= 0x41 && v48)
      MEMORY[0x1CAA32F9C](v48, 0x1000C8000313F17);
    if (v130 >= 0x41 && v129)
      MEMORY[0x1CAA32F9C](v129, 0x1000C8000313F17);
    goto LABEL_18;
  }
  if ((_BYTE)v133)
    v71 = sub_1C47A8C74((unsigned __int8 *)&v133);
  else
    v71 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v133);
  v75 = v71;
  if ((_DWORD)v72 == 1)
  LODWORD(v76) = (_DWORD)v48;
  if (v47 >= 0x41)
    v76 = (_QWORD *)*v48;
  v128 = v75;
  if (v75 > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v127, 0, 0);
    v75 = v128;
  }
  else
  {
    v127 = 0;
  }
  sub_1C4912E54(&v127, v75 - (_DWORD)v76, v75);
  if (!sub_1C63686D8(*(_QWORD *)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), (uint64_t)&v127, 0))goto LABEL_131;
  if (v130 >= 0x41)
  {
    v78 = (_QWORD *)v129;
    v79 = (uint64_t *)v127;
    v80 = ((unint64_t)v130 + 63) >> 6;
    do
    {
      v81 = *v79++;
      *v78++ |= v81;
      --v80;
    }
    while (v80);
    v77 = *(_QWORD *)v129;
  }
  else
  {
    v129 |= v127;
    v77 = (uint64_t)(v129 << -(char)v130) >> -(char)v130;
  }
  if (!(*(unsigned int (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 1088))(*(_QWORD *)(a1 + 8), v77))
  {
LABEL_131:
    if (v128 >= 0x41 && v127)
      MEMORY[0x1CAA32F9C](v127, 0x1000C8000313F17);
    goto LABEL_91;
  }
  v111 = *(unsigned __int8 **)(a2 + 64);
  v125 = v111;
  if (v111)
    llvm::MetadataTracking::track((uint64_t)&v125, v111, 2);
  v126 = *(_DWORD *)(a2 + 60);
  v112 = *(_QWORD *)a1;
  v113 = v133;
  v114 = *(uint64_t **)(a2 + 32);
  v115 = v114[1];
  v124 = *v114;
  v116 = sub_1C63666FC(*(_QWORD *)a1, (llvm::LLVMContext *)&v129, (const llvm::APInt *)&v131, v133, *((uint64_t *)&v133 + 1), 0, 0);
  v119 = *(_QWORD *)(v112 + 832);
  if (v119)
    LOWORD(v119) = *(_WORD *)(v119 + 8);
  v134 = (unsigned __int8 *)sub_1C5D56C70(v112, 56, (const llvm::APInt *)&v125, (llvm *)v113, *((uint64_t *)&v113 + 1), v124, v115, v118, v116, v117, v119);
  v135 = v120;
  sub_1C5C5B0B4((uint64_t *)a1, a2, (uint64_t *)&v134, 1, 1);
  if (v125)
    llvm::MetadataTracking::untrack((uint64_t)&v125, v125);
  if (v128 >= 0x41 && v127)
    MEMORY[0x1CAA32F9C](v127, 0x1000C8000313F17);
  if (v47 >= 0x41 && v48)
    MEMORY[0x1CAA32F9C](v48, 0x1000C8000313F17);
  if (v130 >= 0x41 && v129)
    MEMORY[0x1CAA32F9C](v129, 0x1000C8000313F17);
LABEL_28:
  if (v131)
    llvm::MetadataTracking::untrack((uint64_t)&v131, v131);
  return v6;
}

uint64_t *sub_1C5CA64D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v11;
  _QWORD *v12;
  int v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  llvm *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  unsigned __int8 *v28;
  llvm *v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  const void *v61;
  unsigned int v62;
  const void *v63;
  const char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  __int16 v82;
  int v83;
  unsigned __int8 *v84;
  uint64_t v85;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  llvm *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  unint64_t v105;
  unsigned int v106;
  unsigned int v108;
  uint64_t v109;
  unint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t *v114;
  const char *v115;
  unsigned int v116;
  uint64_t v117;
  void *__src;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  const char *v125;
  unsigned int v126;
  uint64_t v127;
  void *v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  uint64_t v132;
  llvm *v133;
  uint64_t v134;
  unint64_t v136;
  uint64_t v137;
  unsigned __int8 *v138;
  int v139;
  __int128 v140;

  v8 = *(uint64_t **)(a2 + 32);
  v9 = *v8;
  if (!*(_WORD *)(*v8 + 56))
    return 0;
  v11 = *((unsigned int *)v8 + 2);
  v12 = (_QWORD *)v8[5];
  v13 = *((_DWORD *)v8 + 12);
  v14 = *(uint64_t **)(v9 + 32);
  v15 = *(_QWORD *)(v9 + 40) + 16 * v11;
  v16 = *(_QWORD *)(v15 + 8);
  v132 = *(unsigned __int16 *)(a2 + 24);
  v133 = *(llvm **)v15;
  v17 = *(unsigned __int16 *)(v9 + 24);
  v18 = *v14;
  v19 = (uint64_t *)v12[4];
  v20 = *v19;
  v136 = v19[1];
  v131 = v14[1];
  v21 = *(_QWORD *)(*v14 + 40) + 16 * v131;
  v22 = *(llvm **)v21;
  v134 = *(_QWORD *)(v21 + 8);
  v23 = *(unsigned __int8 **)(a2 + 64);
  v137 = v20;
  v138 = v23;
  if (v23)
    llvm::MetadataTracking::track((uint64_t)&v138, v23, 2);
  v139 = *(_DWORD *)(a2 + 60);
  if ((v17 - 198) <= 2)
  {
    v24 = *(_QWORD *)(v9 + 48);
    if (!v24)
      goto LABEL_12;
    v25 = 1;
    do
    {
      if (*(_DWORD *)(v24 + 8) == (_DWORD)v11)
      {
        if (!v25)
          goto LABEL_12;
        --v25;
      }
      v24 = *(_QWORD *)(v24 + 32);
    }
    while (v24);
    if (v25)
    {
LABEL_12:
      v26 = v12[6];
      if (!v26)
        goto LABEL_185;
      v27 = 1;
      do
      {
        if (*(_DWORD *)(v26 + 8) == v13)
        {
          if (!v27)
            goto LABEL_185;
          --v27;
        }
        v26 = *(_QWORD *)(v26 + 32);
      }
      while (v26);
      if (v27)
        goto LABEL_185;
    }
    v28 = (unsigned __int8 *)(*(_QWORD *)(v137 + 40) + 16 * v136);
    if (v22 == *v28 && ((_BYTE)v22 || v134 == *((_QWORD *)v28 + 1)))
    {
      v29 = v133;
      if ((_BYTE)v133)
      {
        v30 = a1;
        if (v133 - 15 < 0x9C)
          goto LABEL_130;
      }
      else
      {
        v30 = a1;
        if ((*(_DWORD *)(v16 + 8) & 0xFE) == 0x12)
          goto LABEL_130;
      }
      if (!*(_BYTE *)(v30 + 33))
        goto LABEL_135;
LABEL_130:
      if ((_BYTE)v22)
      {
        v87 = *(_QWORD *)(v30 + 8);
        if ((v22 == 1 || *(_QWORD *)(v87 + 8 * v22 + 96))
          && (v132 > 0x185 || (*(_BYTE *)(v87 + 390 * v22 + v132 + 3862) & 0xFB) == 0))
        {
LABEL_135:
          if ((_DWORD)v17 != 200
            || !*(_BYTE *)(v30 + 34)
            || (*(unsigned int (**)(_QWORD, uint64_t, llvm *, uint64_t))(**(_QWORD **)(v30 + 8) + 1744))(*(_QWORD *)(v30 + 8), v132, v22, v134))
          {
            v88 = *(_QWORD *)(*(_QWORD *)v30 + 832);
            if (v88)
              LOWORD(v88) = *(_WORD *)(v88 + 8);
            v89 = sub_1C5D56C70(*(_QWORD *)v30, v132, (const llvm::APInt *)&v138, v22, v134, v18, v131, a8, v137, v136, v88);
LABEL_165:
            v77 = v89;
            v79 = v90;
            v80 = *(_QWORD *)v30;
            v98 = *(_QWORD *)(*(_QWORD *)v30 + 832);
            if (v98)
              v82 = *(_WORD *)(v98 + 8);
            else
              v82 = 0;
            v99 = v17;
LABEL_169:
            v100 = v29;
            v101 = v16;
LABEL_170:
            v48 = sub_1C5D52060(v80, v99, (const llvm::APInt *)&v138, v100, v101, (uint64_t)v77, v79, v82);
LABEL_171:
            v31 = v48;
            goto LABEL_186;
          }
          goto LABEL_185;
        }
        goto LABEL_185;
      }
LABEL_141:
      v31 = 0;
      goto LABEL_186;
    }
LABEL_185:
    v31 = 0;
    goto LABEL_186;
  }
  if ((int)v17 > 174)
  {
    if ((int)v17 <= 181)
    {
      v32 = v16;
      v31 = 0;
      if ((v17 - 175) >= 3)
        goto LABEL_186;
LABEL_33:
      v33 = *(_QWORD *)(v9 + 32);
      v34 = v12[4];
      if (*(_QWORD *)(v33 + 40) == *(_QWORD *)(v34 + 40) && *(_DWORD *)(v33 + 48) == *(_DWORD *)(v34 + 48))
      {
        v35 = *(_QWORD *)(v9 + 48);
        if (v35)
        {
          v36 = 1;
          v37 = v32;
          do
          {
            if (*(_DWORD *)(v35 + 8) == (_DWORD)v11)
            {
              if (!v36)
                goto LABEL_185;
              --v36;
            }
            v35 = *(_QWORD *)(v35 + 32);
          }
          while (v35);
          if (!v36)
          {
            v38 = v12[6];
            if (v38)
            {
              v39 = 1;
              do
              {
                if (*(_DWORD *)(v38 + 8) == v13)
                {
                  if (!v39)
                    goto LABEL_185;
                  --v39;
                }
                v38 = *(_QWORD *)(v38 + 32);
              }
              while (v38);
              if (!v39)
              {
                v40 = *(_QWORD *)(*(_QWORD *)a1 + 832);
                if (v40)
                  LOWORD(v40) = *(_WORD *)(v40 + 8);
                v42 = sub_1C5D56C70(*(_QWORD *)a1, v132, (const llvm::APInt *)&v138, v22, v134, v18, v131, a8, v137, v136, v40);
                v44 = *(_QWORD *)(v9 + 32);
                v45 = *(_QWORD *)(v44 + 40);
                v46 = *(_QWORD *)(v44 + 48);
                v47 = *(_QWORD *)(*(_QWORD *)a1 + 832);
                if (v47)
                  LOWORD(v47) = *(_WORD *)(v47 + 8);
                v48 = sub_1C5D56C70(*(_QWORD *)a1, v17, (const llvm::APInt *)&v138, v133, v37, (uint64_t)v42, v41, v43, v45, v46, v47);
                goto LABEL_171;
              }
            }
          }
        }
      }
      goto LABEL_185;
    }
    if ((_DWORD)v17 == 182)
    {
      v72 = *(_QWORD *)(v9 + 48);
      if (v72)
      {
        v73 = 1;
        do
        {
          if (*(_DWORD *)(v72 + 8) == (_DWORD)v11)
          {
            if (!v73)
              goto LABEL_185;
            --v73;
          }
          v72 = *(_QWORD *)(v72 + 32);
        }
        while (v72);
        if (!v73)
        {
          v74 = v12[6];
          if (v74)
          {
            v75 = 1;
            do
            {
              if (*(_DWORD *)(v74 + 8) == v13)
              {
                if (!v75)
                  goto LABEL_185;
                --v75;
              }
              v74 = *(_QWORD *)(v74 + 32);
            }
            while (v74);
            if (!v75)
            {
              v76 = *(_QWORD *)(*(_QWORD *)a1 + 832);
              if (v76)
                LOWORD(v76) = *(_WORD *)(v76 + 8);
              v29 = v133;
              v77 = sub_1C5D56C70(*(_QWORD *)a1, v132, (const llvm::APInt *)&v138, v22, v134, v18, v131, a8, v137, v136, v76);
              v79 = v78;
              v80 = *(_QWORD *)a1;
              v81 = *(_QWORD *)(*(_QWORD *)a1 + 832);
              if (v81)
                v82 = *(_WORD *)(v81 + 8);
              else
                v82 = 0;
              v99 = 182;
              goto LABEL_169;
            }
          }
        }
      }
      goto LABEL_185;
    }
    if ((_DWORD)v17 != 216)
    {
      v49 = v16;
      v31 = 0;
      if ((_DWORD)v17 != 201)
        goto LABEL_186;
      v50 = *(_QWORD *)(v9 + 48);
      if (!v50)
        goto LABEL_64;
      v51 = 1;
      do
      {
        if (*(_DWORD *)(v50 + 8) == (_DWORD)v11)
        {
          if (!v51)
            goto LABEL_64;
          --v51;
        }
        v50 = *(_QWORD *)(v50 + 32);
      }
      while (v50);
      if (v51)
      {
LABEL_64:
        v52 = v12[6];
        if (!v52)
          goto LABEL_185;
        v53 = 1;
        do
        {
          if (*(_DWORD *)(v52 + 8) == v13)
          {
            if (!v53)
              goto LABEL_185;
            --v53;
          }
          v52 = *(_QWORD *)(v52 + 32);
        }
        while (v52);
        if (v53)
          goto LABEL_185;
      }
      v54 = (unsigned __int8 *)(*(_QWORD *)(v137 + 40) + 16 * v136);
      if (v22 == *v54 && ((_BYTE)v22 || v134 == *((_QWORD *)v54 + 1)))
      {
        v55 = a1;
        v56 = *(_QWORD *)(a1 + 8);
        if (*(_BYTE *)(a1 + 33))
        {
          if (!(_BYTE)v22)
            goto LABEL_141;
          if (v22 == 1)
          {
            if (v132 > 0x185)
              goto LABEL_185;
          }
          else
          {
            if (!*(_QWORD *)(v56 + 8 * v22 + 96))
              goto LABEL_185;
            v31 = 0;
            if (v132 >= 0x186)
              goto LABEL_186;
          }
          v55 = a1;
          if (*(_BYTE *)(v56 + 390 * v22 + v132 + 3862))
            goto LABEL_185;
        }
        v92 = v49;
        if ((!(*(unsigned int (**)(uint64_t, llvm *, uint64_t, llvm *, uint64_t))(*(_QWORD *)v56 + 1192))(v56, v133, v49, v22, v134)|| ((*(uint64_t (**)(_QWORD, llvm *, uint64_t, llvm *, uint64_t))(**(_QWORD **)(v55 + 8) + 1160))(*(_QWORD *)(v55 + 8), v22, v134, v133, v92) & 1) == 0)&& (_BYTE)v22&& *(_QWORD *)(*(_QWORD *)(v55 + 8) + 8 * v22 + 96))
        {
          v94 = *(_QWORD *)(*(_QWORD *)v55 + 832);
          if (v94)
            LOWORD(v94) = *(_WORD *)(v94 + 8);
          v77 = sub_1C5D56C70(*(_QWORD *)v55, v132, (const llvm::APInt *)&v138, v22, v134, v18, v131, v93, v137, v136, v94);
          v79 = v95;
          v80 = *(_QWORD *)v55;
          v96 = *(_QWORD *)(*(_QWORD *)v55 + 832);
          if (v96)
            v82 = *(_WORD *)(v96 + 8);
          else
            v82 = 0;
          v99 = 201;
          v100 = v133;
          v101 = v92;
          goto LABEL_170;
        }
        goto LABEL_185;
      }
      goto LABEL_185;
    }
    goto LABEL_79;
  }
  if ((_DWORD)v17 != 153)
  {
    if ((_DWORD)v17 != 155)
    {
      v32 = v16;
      v31 = 0;
      if ((_DWORD)v17 != 171)
        goto LABEL_186;
      goto LABEL_33;
    }
LABEL_79:
    v30 = a1;
    if (*(int *)(a1 + 24) > 1)
      goto LABEL_185;
    if ((_BYTE)v22)
    {
      v57 = v22 - 120 >= 0x20 && v22 - 2 >= 6;
      v29 = v133;
      v58 = v134;
      if (v57 && v22 - 15 >= 0x3C)
        goto LABEL_185;
    }
    else
    {
      v29 = v133;
      v58 = v134;
      if ((*(_DWORD *)(v134 + 8) & 0xFE) == 0x12)
        v83 = *(unsigned __int8 *)(**(_QWORD **)(v134 + 16) + 8);
      else
        v83 = *(_DWORD *)(v134 + 8);
      if (v83 != 13)
        goto LABEL_185;
    }
    v84 = (unsigned __int8 *)(*(_QWORD *)(v137 + 40) + 16 * v136);
    if (v22 != *v84)
      goto LABEL_185;
    v85 = *((_QWORD *)v84 + 1);
    if (!(_BYTE)v22 && v58 != v85)
      goto LABEL_185;
    if ((_BYTE)v29)
    {
      if (v29 - 15 >= 0x9C)
        goto LABEL_162;
    }
    else if ((*(_DWORD *)(v16 + 8) & 0xFE) != 0x12)
    {
      goto LABEL_162;
    }
    if (!(_BYTE)v29)
      goto LABEL_162;
    v91 = *(_QWORD *)(a1 + 8);
    if (!*(_QWORD *)(v91 + 8 * v29 + 96))
      goto LABEL_162;
    if ((_BYTE)v22)
    {
      if (v22 - 15 < 0x9C)
        goto LABEL_162;
    }
    else if ((*(_DWORD *)(v58 + 8) & 0xFE) == 0x12)
    {
      goto LABEL_162;
    }
    if (!(_BYTE)v22 || !*(_QWORD *)(v91 + 8 * v22 + 96))
      goto LABEL_185;
LABEL_162:
    v97 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v97)
      LOWORD(v97) = *(_WORD *)(v97 + 8);
    v89 = sub_1C5D56C70(*(_QWORD *)a1, v132, (const llvm::APInt *)&v138, v22, v58, v18, v131, a8, v137, v136, v97);
    goto LABEL_165;
  }
  if (*(int *)(a1 + 24) > 2)
    goto LABEL_185;
  v59 = *(_QWORD *)(v9 + 48);
  if (!v59)
    goto LABEL_185;
  if (*(_QWORD *)(v59 + 32))
    goto LABEL_185;
  v60 = v12[6];
  if (!v60)
    goto LABEL_185;
  if (*(_QWORD *)(v60 + 32))
    goto LABEL_185;
  v140 = *(_OWORD *)*(_QWORD *)(v9 + 40);
  v61 = *(const void **)(v9 + 80);
  v62 = sub_1C612FE00((llvm::EVT *)&v140, (const char *)v23);
  v140 = *(_OWORD *)v12[5];
  v63 = (const void *)v12[10];
  if (v62 != sub_1C612FE00((llvm::EVT *)&v140, v64))
    goto LABEL_185;
  v65 = v16;
  if (memcmp(v61, v63, 4 * v62))
    goto LABEL_185;
  v67 = *(uint64_t **)(v9 + 32);
  v68 = v67[5];
  v69 = v67[6];
  if ((_DWORD)v132 == 173)
  {
    v70 = v67[5];
    if (*(_WORD *)(v68 + 24) != 51)
    {
      v70 = sub_1C5CA0E64((const llvm::APInt *)&v138, *(_QWORD *)(a1 + 8), v133, v16, *(_QWORD *)a1, *(unsigned __int8 *)(a1 + 33));
      LODWORD(v69) = v71;
      v67 = *(uint64_t **)(v9 + 32);
      v68 = v67[5];
    }
  }
  else
  {
    v70 = v67[5];
  }
  v102 = v12[4];
  if (v68 == *(_QWORD *)(v102 + 40) && *((_DWORD *)v67 + 12) == *(_DWORD *)(v102 + 48) && v70)
  {
    v119 = *v67;
    v120 = v67[1];
    v121 = *(_QWORD *)v102;
    v122 = *(_QWORD *)(v102 + 8);
    v123 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v123)
      LOWORD(v123) = *(_WORD *)(v123 + 8);
    v124 = sub_1C5D56C70(*(_QWORD *)a1, v132, (const llvm::APInt *)&v138, v133, v16, v119, v120, v66, v121, v122, v123);
    v126 = v125;
    v127 = *(_QWORD *)a1;
    v140 = *(_OWORD *)*(_QWORD *)(v9 + 40);
    v128 = *(void **)(v9 + 80);
    v130 = sub_1C612FE00((llvm::EVT *)&v140, v125);
    v48 = sub_1C5D41DE4(v127, v133, v16, (uint64_t)&v138, (uint64_t)v124, v126, v70, v69, v128, v130);
    goto LABEL_171;
  }
  v103 = *v67;
  v104 = *((_DWORD *)v67 + 2);
  if ((_DWORD)v132 == 173)
  {
    v105 = *v67;
    if (*(_WORD *)(v103 + 24) != 51)
    {
      v105 = sub_1C5CA0E64((const llvm::APInt *)&v138, *(_QWORD *)(a1 + 8), v133, v16, *(_QWORD *)a1, *(unsigned __int8 *)(a1 + 33));
      v104 = v106;
      v67 = *(uint64_t **)(v9 + 32);
      v102 = v12[4];
      v103 = *v67;
    }
  }
  else
  {
    v105 = *v67;
  }
  if (v103 != *(_QWORD *)v102)
    goto LABEL_185;
  if (*((_DWORD *)v67 + 2) == *(_DWORD *)(v102 + 8))
  {
    v31 = 0;
    if (v105)
    {
      v108 = v104;
      v109 = v67[5];
      v110 = v67[6];
      v111 = *(_QWORD *)(v102 + 40);
      v112 = *(_QWORD *)(v102 + 48);
      v113 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v113)
        LOWORD(v113) = *(_WORD *)(v113 + 8);
      v114 = sub_1C5D56C70(*(_QWORD *)a1, v132, (const llvm::APInt *)&v138, v133, v65, v109, v110, v66, v111, v112, v113);
      v116 = v115;
      v117 = *(_QWORD *)a1;
      v140 = *(_OWORD *)*(_QWORD *)(v9 + 40);
      __src = *(void **)(v9 + 80);
      v129 = sub_1C612FE00((llvm::EVT *)&v140, v115);
      v48 = sub_1C5D41DE4(v117, v133, v65, (uint64_t)&v138, v105, v108, (uint64_t)v114, v116, __src, v129);
      goto LABEL_171;
    }
  }
  else
  {
    v31 = 0;
  }
LABEL_186:
  if (v138)
    llvm::MetadataTracking::untrack((uint64_t)&v138, v138);
  return v31;
}

uint64_t *sub_1C5CA6F54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  llvm *v43;
  uint64_t v44;
  unint64_t v45;
  unsigned __int8 *v46;
  int v47;

  v8 = *(_QWORD *)(a2 + 48);
  if (!v8)
    return 0;
  v11 = *(unsigned __int16 *)(a1 + 24);
  v12 = 1;
  do
  {
    if (*(_DWORD *)(v8 + 8) == a3)
    {
      if (!v12)
        return 0;
      --v12;
    }
    v8 = *(_QWORD *)(v8 + 32);
  }
  while (v8);
  if (v12)
    return 0;
  v15 = *(_QWORD *)(a4 + 48);
  if (!v15)
    return 0;
  v16 = 1;
  do
  {
    if (*(_DWORD *)(v15 + 8) == a5)
    {
      if (!v16)
        return 0;
      --v16;
    }
    v15 = *(_QWORD *)(v15 + 32);
  }
  while (v15);
  if (v16)
    return 0;
  v17 = *(unsigned __int16 *)(a4 + 24);
  if (*(unsigned __int16 *)(a2 + 24) != (_DWORD)v11 || (v17 - 175) > 2)
    return 0;
  v19 = *(uint64_t **)(a4 + 32);
  v20 = *v19;
  v21 = v19[1];
  v23 = v19[5];
  v22 = v19[6];
  v24 = *(_QWORD *)(a2 + 32);
  v25 = *(_QWORD *)v24;
  if (*(unsigned __int16 *)(*(_QWORD *)v24 + 24) != (_DWORD)v17
    || (v26 = *(_QWORD *)(v25 + 32), *(_QWORD *)(v26 + 40) != v23)
    || *(_DWORD *)(v26 + 48) != (_DWORD)v22)
  {
    v28 = *(_QWORD *)(v24 + 40);
    if (*(unsigned __int16 *)(v28 + 24) == (_DWORD)v17)
    {
      v26 = *(_QWORD *)(v28 + 32);
      if (*(_QWORD *)(v26 + 40) == v23 && *(_DWORD *)(v26 + 48) == (_DWORD)v22)
        goto LABEL_28;
    }
    return 0;
  }
  v27 = *(_QWORD *)(v24 + 40);
  v24 += 40;
  v25 = v27;
LABEL_28:
  v45 = *(unsigned int *)(v24 + 8);
  v29 = *(_QWORD *)v26;
  v30 = *(unsigned int *)(v26 + 8);
  v31 = *(_QWORD *)(a1 + 40);
  v43 = *(llvm **)v31;
  v44 = *(_QWORD *)(v31 + 8);
  v32 = *(unsigned __int8 **)(a1 + 64);
  v46 = v32;
  if (v32)
  {
    v42 = v20;
    llvm::MetadataTracking::track((uint64_t)&v46, v32, 2);
    v20 = v42;
  }
  v47 = *(_DWORD *)(a1 + 60);
  v33 = *(_QWORD *)(a6 + 832);
  if (v33)
    LOWORD(v33) = *(_WORD *)(v33 + 8);
  v35 = sub_1C5D56C70(a6, v11, (const llvm::APInt *)&v46, v43, v44, v29, v30, a8, v20, v21, v33);
  v37 = *(_QWORD *)(a6 + 832);
  if (v37)
    LOWORD(v37) = *(_WORD *)(v37 + 8);
  v39 = sub_1C5D56C70(a6, v17, (const llvm::APInt *)&v46, v43, v44, (uint64_t)v35, v34, v36, v23, v22, v37);
  v41 = *(_QWORD *)(a6 + 832);
  if (v41)
    LOWORD(v41) = *(_WORD *)(v41 + 8);
  v13 = sub_1C5D56C70(a6, v11, (const llvm::APInt *)&v46, v43, v44, (uint64_t)v39, v38, v40, v25, v45, v41);
  if (v46)
    llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
  return v13;
}

uint64_t *sub_1C5CA7198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  int v10;
  BOOL v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  int v28;
  uint64_t v30;
  _QWORD *v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *result;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  int v40;
  uint64_t *v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  unint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  uint64_t v68;
  const char *v69;
  unsigned int v70;
  uint64_t v71;
  unsigned __int8 *v72;
  uint64_t v73;
  __int16 v74;
  uint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  unsigned __int8 *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  llvm *ShiftAmountTy;
  uint64_t v83;
  _QWORD *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  _BOOL4 v90;
  unsigned __int8 *v91;
  unsigned int v92;
  __int128 v93;

  if (!*(_BYTE *)(a1 + 33))
    return 0;
  v7 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v93 = v7;
  if (v7 - 4 > 2)
    return 0;
  v8 = *(_QWORD *)(a1 + 8);
  v9 = !(_BYTE)v7 || *(_QWORD *)(v8 + 8 * v7 + 96) == 0;
  if (v9 || (*(unsigned __int8 *)(v8 + 390 * v7 + 4044) | 4) != 4)
    return 0;
  if (*(_WORD *)(a3 + 24) == 171)
  {
    v10 = *(unsigned __int16 *)(**(_QWORD **)(a3 + 32) + 24);
    v11 = v10 == 177;
    if (v10 == 177)
      v12 = a3;
    else
      v12 = a5;
    if (v11)
      a3 = a5;
    a5 = v12;
  }
  if (*(_WORD *)(a5 + 24) == 171)
  {
    v13 = *(unsigned __int16 *)(**(_QWORD **)(a5 + 32) + 24);
    v14 = v13 == 175;
    if (v13 == 175)
      v15 = a3;
    else
      v15 = a5;
    if (v14)
      a3 = a5;
    a5 = v15;
  }
  v16 = *(unsigned __int16 *)(a3 + 24);
  if (v16 == 171)
  {
    v17 = *(_QWORD *)(a3 + 48);
    if (!v17 || *(_QWORD *)(v17 + 32))
      return 0;
    v18 = *(uint64_t **)(a3 + 32);
    v19 = v18[5];
    v20 = *(unsigned __int16 *)(v19 + 24);
    if (v20 != 35 && v20 != 11)
      return 0;
    v22 = *(_QWORD *)(v19 + 80);
    v23 = *(_DWORD *)(v22 + 32) > 0x40u ? **(_QWORD **)(v22 + 24) : *(_QWORD *)(v22 + 24);
    if (v23 != 65280 && v23 != 0xFFFF)
      return 0;
    a3 = *v18;
  }
  v24 = *(unsigned __int16 *)(a5 + 24);
  if (v24 == 171)
  {
    v25 = *(_QWORD *)(a5 + 48);
    if (!v25 || *(_QWORD *)(v25 + 32))
      return 0;
    v26 = *(uint64_t **)(a5 + 32);
    v27 = v26[5];
    v28 = *(unsigned __int16 *)(v27 + 24);
    if (v28 != 35 && v28 != 11)
      return 0;
    v30 = *(_QWORD *)(v27 + 80);
    v31 = (_QWORD *)(v30 + 24);
    if (*(_DWORD *)(v30 + 32) >= 0x41u)
      v31 = (_QWORD *)*v31;
    if (*v31 != 255)
      return 0;
    a5 = *v26;
  }
  v32 = *(unsigned __int16 *)(a3 + 24);
  if (v32 == 177)
  {
    v33 = *(unsigned __int16 *)(a5 + 24);
    if (v33 == 175)
      v34 = a3;
    else
      v34 = a5;
    if (v33 == 175)
      a3 = a5;
    v32 = *(unsigned __int16 *)(a3 + 24);
    a5 = v34;
  }
  if (v32 != 175)
    return 0;
  if (*(_WORD *)(a5 + 24) != 177)
    return 0;
  v35 = *(_QWORD *)(a3 + 48);
  if (!v35)
    return 0;
  if (*(_QWORD *)(v35 + 32))
    return 0;
  v37 = *(_QWORD *)(a5 + 48);
  if (!v37 || *(_QWORD *)(v37 + 32))
    return 0;
  v38 = *(uint64_t **)(a3 + 32);
  v39 = v38[5];
  v40 = *(unsigned __int16 *)(v39 + 24);
  if (v40 != 35 && v40 != 11)
    v39 = 0;
  v41 = *(uint64_t **)(a5 + 32);
  v42 = v41[5];
  v43 = *(unsigned __int16 *)(v42 + 24);
  if (v43 != 35 && v43 != 11)
    return 0;
  if (!v39)
    return 0;
  v44 = *(_QWORD *)(v39 + 80);
  v45 = (_QWORD *)(v44 + 24);
  if (*(_DWORD *)(v44 + 32) >= 0x41u)
    v45 = (_QWORD *)*v45;
  if (*v45 != 8)
    return 0;
  v49 = *(_QWORD *)(v42 + 80);
  v50 = (_QWORD *)(v49 + 24);
  if (*(_DWORD *)(v49 + 32) >= 0x41u)
    v50 = (_QWORD *)*v50;
  if (*v50 != 8)
    return 0;
  v52 = *v38;
  v51 = v38[1];
  if (v16 == 171)
    goto LABEL_76;
  if (*(_WORD *)(v52 + 24) == 171)
  {
    v54 = *(_QWORD *)(v52 + 48);
    if (!v54)
      return 0;
    if (*(_QWORD *)(v54 + 32))
      return 0;
    v55 = *(_QWORD *)(v52 + 32);
    v56 = *(_QWORD *)(v55 + 40);
    v57 = *(unsigned __int16 *)(v56 + 24);
    if (v57 != 35 && v57 != 11)
      return 0;
    v58 = *(_QWORD *)(v56 + 80);
    v59 = (_QWORD *)(v58 + 24);
    if (*(_DWORD *)(v58 + 32) >= 0x41u)
      v59 = (_QWORD *)*v59;
    if (*v59 != 255)
      return 0;
    v52 = *(_QWORD *)v55;
    v51 = v51 & 0xFFFFFFFF00000000 | *(unsigned int *)(v55 + 8);
LABEL_76:
    v53 = 1;
    goto LABEL_87;
  }
  v53 = 0;
LABEL_87:
  v60 = *v41;
  v61 = v41[1];
  if (v24 != 171)
  {
    if (*(_WORD *)(v60 + 24) != 171)
    {
      v62 = 0;
      goto LABEL_97;
    }
    v63 = *(_QWORD *)(v60 + 48);
    if (!v63)
      return 0;
    if (*(_QWORD *)(v63 + 32))
      return 0;
    v64 = *(uint64_t **)(v60 + 32);
    v65 = v64[5];
    v66 = *(unsigned __int16 *)(v65 + 24);
    if (v66 != 35 && v66 != 11)
      return 0;
    v67 = *(_QWORD *)(v65 + 80);
    v68 = *(_DWORD *)(v67 + 32) > 0x40u ? **(_QWORD **)(v67 + 24) : *(_QWORD *)(v67 + 24);
    if (v68 != 65280 && v68 != 0xFFFF)
      return 0;
    v60 = *v64;
    v61 = v61 & 0xFFFFFFFF00000000 | *((unsigned int *)v64 + 2);
  }
  v62 = 1;
LABEL_97:
  result = 0;
  if (v52 != v60 || (_DWORD)v51 != (_DWORD)v61)
    return result;
  v70 = sub_1C47A8C74((unsigned __int8 *)&v93);
  if ((_DWORD)v69 == 1)
  {
    if (a7)
      goto LABEL_101;
  }
  else if (a7)
  {
LABEL_101:
    if (v70 < 0x11)
      goto LABEL_104;
    if (v53)
    {
      if ((v62 & 1) != 0)
        goto LABEL_104;
      v88 = *(_QWORD *)a1;
      v92 = v70;
      if (v70 > 0x40)
      {
        llvm::APInt::initSlowCase((llvm::APInt *)&v91, 0, 0);
        v89 = v92;
      }
      else
      {
        v91 = 0;
        v89 = v70;
      }
      sub_1C4912E54(&v91, v89 - v70 + 16, v89);
      v90 = sub_1C63686D8(v88, v52, v61, (uint64_t)&v91, 0);
      if (v92 >= 0x41 && v91)
        MEMORY[0x1CAA32F9C](v91, 0x1000C8000313F17);
      if (v90)
        goto LABEL_104;
    }
    return 0;
  }
LABEL_104:
  v71 = *(_QWORD *)a1;
  v72 = *(unsigned __int8 **)(a2 + 64);
  v91 = v72;
  if (v72)
    llvm::MetadataTracking::track((uint64_t)&v91, v72, 2);
  v92 = *(_DWORD *)(a2 + 60);
  v73 = *(_QWORD *)(v71 + 832);
  if (v73)
    v74 = *(_WORD *)(v73 + 8);
  else
    v74 = 0;
  v75 = sub_1C5D52060(v71, 182, (const llvm::APInt *)&v91, (llvm *)v93, *((uint64_t *)&v93 + 1), v52, v51, v74);
  v77 = v76;
  if (v91)
    llvm::MetadataTracking::untrack((uint64_t)&v91, v91);
  if (v70 >= 0x11)
  {
    v78 = *(unsigned __int8 **)(a2 + 64);
    v91 = v78;
    if (v78)
      llvm::MetadataTracking::track((uint64_t)&v91, v78, 2);
    v92 = *(_DWORD *)(a2 + 60);
    v79 = v93;
    v80 = v70 - 16;
    v81 = *(_QWORD *)a1;
    ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a1 + 8), v93, *((uint64_t *)&v93 + 1), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 40) + 272, *(unsigned __int8 *)(a1 + 34));
    v84 = sub_1C6366AB4(v81, v80, (const llvm::APInt *)&v91, ShiftAmountTy, v83, 0, 0);
    v87 = *(_QWORD *)(v81 + 832);
    if (v87)
      LOWORD(v87) = *(_WORD *)(v87 + 8);
    v75 = sub_1C5D56C70(v81, 177, (const llvm::APInt *)&v91, (llvm *)v79, *((uint64_t *)&v79 + 1), (uint64_t)v75, v77, v86, (uint64_t)v84, v85, v87);
    if (v91)
      llvm::MetadataTracking::untrack((uint64_t)&v91, v91);
  }
  return v75;
}

void sub_1C5CA7788()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CA779C()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E8198030;
  return result;
}

void sub_1C5CA77C0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E8198030;
}

BOOL sub_1C5CA77D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 result;
  uint64_t *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v15;

  v3 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v5 = *(unsigned int *)(v3 + 32);
  if (v5 <= 0x40)
    return (*(_QWORD *)(v3 + 24) & ~*(_QWORD *)(v4 + 24)) == 0;
  v7 = *(uint64_t **)(v3 + 24);
  v8 = *(uint64_t **)(v4 + 24);
  v9 = ((unint64_t)(v5 + 63) >> 6) - 1;
  do
  {
    v11 = *v7++;
    v10 = v11;
    v12 = *v8++;
    v13 = v10 & ~v12;
    result = v13 == 0;
    v15 = v9-- != 0;
  }
  while (!v13 && v15);
  return result;
}

uint64_t sub_1C5CA7840(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, unsigned int a5)
{
  uint64_t result;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  unint64_t v18;
  int v19;
  unint64_t ExtendedSizeInBits;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  int v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  const char *v32;
  uint64_t v33;
  const char *v34;
  unint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  llvm::Type *v41;
  const char *v42;
  llvm::Type *v43;
  _QWORD v44[2];
  __int128 v45;

  result = 0;
  if (!a2)
    return result;
  if ((a5 & 7) != 0)
    return result;
  result = sub_1C5098958(a4);
  if (!(_DWORD)result)
    return result;
  if ((*(_WORD *)(*(_QWORD *)(a2 + 96) + 36) & 0xF00) != 0 || (*(_BYTE *)(a2 + 26) & 8) != 0)
    return 0;
  v11 = *(_QWORD *)(a2 + 88);
  v44[0] = *(_QWORD *)(a2 + 80);
  v44[1] = v11;
  v12 = LOBYTE(v44[0]) ? LOBYTE(v44[0]) - 120 < 0x33 : *(_BYTE *)(v11 + 8) == 19;
  v13 = *a4 ? *a4 - 120 < 0x33 : *(_BYTE *)(*((_QWORD *)a4 + 1) + 8) == 19;
  if (v12 != v13)
    return 0;
  v15 = *(_QWORD *)a4;
  v14 = *((_QWORD *)a4 + 1);
  if (LOBYTE(v44[0]) != *(_QWORD *)a4)
  {
    *(_QWORD *)&v45 = *(_QWORD *)a4;
    *((_QWORD *)&v45 + 1) = v14;
    if (LOBYTE(v44[0]))
    {
      v16 = sub_1C47A8C74((unsigned __int8 *)v44);
LABEL_20:
      v18 = v16;
      v19 = v17;
      if ((_BYTE)v15)
        ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v45);
      else
        ExtendedSizeInBits = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v45);
      if ((v19 != 1 || v21 == 1) && v18 < ExtendedSizeInBits)
        return 0;
      goto LABEL_27;
    }
LABEL_17:
    v16 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v44);
    goto LABEL_20;
  }
  if (!LOBYTE(v44[0]) && v11 != v14)
  {
    *(_QWORD *)&v45 = *(_QWORD *)a4;
    *((_QWORD *)&v45 + 1) = v14;
    goto LABEL_17;
  }
LABEL_27:
  if (!a5
    || (v22 = *(_QWORD *)(a2 + 96),
        v23 = (1 << *(_BYTE *)(v22 + 34)) | *(_QWORD *)(v22 + 8),
        v24 = (1 << (63 - __clz(v23 & -v23))) | (a5 >> 3),
        result = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 664))(*(_QWORD *)(a1 + 8), *(_QWORD *)(*(_QWORD *)a1 + 56), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a1 + 40) + 40) + 272, *(_QWORD *)a4, *((_QWORD *)a4 + 1), *(unsigned int *)(v22 + 16), (63 - __clz(v24 & -v24)), *(unsigned __int16 *)(v22 + 32), 0), (_DWORD)result))
  {
    v25 = (unsigned int *)sub_1C6131AB0(a2);
    result = 0;
    v26 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v25 + 40) + 16 * v25[2]);
    if (v26)
    {
      if (v26 != 174)
      {
        if (*(_WORD *)(a2 + 24) == 253)
        {
          v27 = *(_QWORD *)(a2 + 48);
          if (!v27)
            return 0;
          v28 = 1;
          do
          {
            if (!*(_DWORD *)(v27 + 8))
            {
              if (!v28)
                return 0;
              --v28;
            }
            v27 = *(_QWORD *)(v27 + 32);
          }
          while (v27);
          if (v28)
            return 0;
          if (*(_BYTE *)(a1 + 33))
          {
            v29 = *a4;
            v30 = !**(_BYTE **)(a2 + 40) || v29 == 0;
            if (v30
              || ((*(unsigned __int16 *)(*(_QWORD *)(a1 + 8) + 358 * **(unsigned __int8 **)(a2 + 40) + 2 * v29 + 73672) >> (4 * a3)) & 0xF) != 0)
            {
              return 0;
            }
          }
          if (*(unsigned __int16 *)(a2 + 58) > 2u)
            return 0;
          if ((*(_WORD *)(a2 + 26) & 0xC00) != 0)
          {
            v45 = *(_OWORD *)(a2 + 80);
            if ((_BYTE)v45)
              v31 = sub_1C47A8C74((unsigned __int8 *)&v45);
            else
              v31 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v45);
            v40 = v31;
            if ((_DWORD)v32 == 1)
            v41 = *a4 ? (llvm::Type *)sub_1C47A8C74(a4) : llvm::EVT::getExtendedSizeInBits((llvm::EVT *)a4);
            v43 = v41;
            if ((_DWORD)v42 == 1)
            if (v40 < (unint64_t)v43 + a5)
              return 0;
          }
          if (((*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 624))(*(_QWORD *)(a1 + 8), a2, a3, *(_QWORD *)a4, *((_QWORD *)a4 + 1)) & 1) == 0)return 0;
        }
        else
        {
          v45 = *(_OWORD *)(a2 + 80);
          if ((_BYTE)v45)
            v33 = sub_1C47A8C74((unsigned __int8 *)&v45);
          else
            v33 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v45);
          v35 = v33;
          if ((_DWORD)v34 == 1)
          if (*a4)
            v36 = sub_1C47A8C74(a4);
          else
            v36 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)a4);
          v38 = v36;
          if ((_DWORD)v37 == 1)
          if (v35 < v38 + (unint64_t)a5)
            return 0;
          if (*(_BYTE *)(a1 + 33))
          {
            if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 40)
                           + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 48)))
              return 0;
            v39 = *(_QWORD *)(a1 + 8);
            if (!*(_QWORD *)(v39
                            + 8
                            * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 40)
                                                 + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 48))
                            + 96)
              || !*a4
              || *(_BYTE *)(v39
                          + 179
                          * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 40)
                                               + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 48))
                          + *a4
                          + 137754))
            {
              return 0;
            }
          }
        }
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_1C5CA7C70(uint64_t a1, uint64_t a2, uint64_t a3, llvm::SmallPtrSetImplBase *a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int *v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  unsigned __int8 *v16;
  int v17;
  unsigned int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  llvm::SmallPtrSetImplBase *v29;
  uint64_t *v30;
  size_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  BOOL v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  llvm::APInt *v46;
  llvm::LLVMContext *v47;
  uint64_t *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  BOOL v60;
  unint64_t v61;
  int v62;
  unsigned __int8 *v63;
  int v64;
  int v65;
  _BOOL4 v66;
  _BOOL4 v67;
  uint64_t *v68;
  uint64_t ExtendedIntegerVT;
  uint64_t result;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;

  if (!*(_WORD *)(a2 + 56))
    return 1;
  v8 = a3;
  v9 = a2;
  v11 = *(unsigned int **)(a2 + 32);
  v12 = &v11[10 * *(unsigned __int16 *)(a2 + 56)];
  v71 = a3 + 16;
  while (1)
  {
    v13 = *(_QWORD *)v11;
    v14 = v11[2];
    v15 = *(_QWORD **)(*(_QWORD *)v11 + 40);
    v16 = (unsigned __int8 *)&v15[2 * v14];
    if (*v16)
    {
      if (*v16 - 15 < 0x9C)
        return 0;
    }
    else if ((*(_DWORD *)(*((_QWORD *)v16 + 1) + 8) & 0xFE) == 0x12)
    {
      return 0;
    }
    v17 = *(unsigned __int16 *)(v13 + 24);
    if (v17 == 35 || v17 == 11)
    {
      if ((*(_WORD *)(v9 + 24) & 0xFFFE) == 0xAC)
      {
        v19 = v12;
        v20 = *(_QWORD *)(a5 + 80);
        v21 = *(unsigned int *)(v20 + 32);
        if (v21 >= 0x41)
        {
          v72 = a1;
          v73 = v9;
          v27 = a5;
          v28 = v8;
          v29 = a4;
          v30 = a6;
          v31 = ((unint64_t)(v21 + 63) >> 3) & 0x3FFFFFF8;
          v32 = (char *)operator new[]();
          memcpy(v32, *(const void **)(v20 + 24), v31);
          v33 = 0;
          v34 = *(_QWORD *)(v13 + 80);
          v35 = *(_QWORD *)(v34 + 24);
          do
          {
            *(_QWORD *)&v32[v33] &= *(_QWORD *)(v35 + v33);
            v33 += 8;
          }
          while (v31 != v33);
          v36 = memcmp(v32, *(const void **)(v34 + 24), v31);
          MEMORY[0x1CAA32F9C](v32, 0x1000C8000313F17);
          a6 = v30;
          a4 = v29;
          v8 = v28;
          a5 = v27;
          a1 = v72;
          v9 = v73;
          v12 = v19;
          if (!v36)
            goto LABEL_31;
        }
        else
        {
          v22 = *(_QWORD *)(v20 + 24);
          v12 = v19;
          if ((*(_QWORD *)(*(_QWORD *)(v13 + 80) + 24) & ~v22) == 0)
            goto LABEL_31;
        }
        v37 = a6;
        sub_1C4774094(a4, v9);
        a6 = v37;
      }
      goto LABEL_31;
    }
    v23 = *(_QWORD *)(v13 + 48);
    if (!v23)
      return 0;
    v24 = 1;
    do
    {
      if (*(_DWORD *)(v23 + 8) == (_DWORD)v14)
      {
        if (!v24)
          return 0;
        --v24;
      }
      v23 = *(_QWORD *)(v23 + 32);
    }
    while (v23);
    if (v24)
      return 0;
    if (*(unsigned __int16 *)(v13 + 24) <= 0xC6u)
      break;
    if (v17 == 199)
      goto LABEL_49;
    if (v17 != 253)
      goto LABEL_70;
    v38 = a6;
    LOBYTE(v74) = 0;
    v75 = 0;
    if (!sub_1C5CA818C(a1, a5, v13, *v15, v15[1], (unsigned __int8 *)&v74)
      || !sub_1C5CA7840(a1, v13, 3, (unsigned __int8 *)&v74, 0))
    {
      return 0;
    }
    a6 = v38;
    if ((~*(unsigned __int16 *)(v13 + 26) & 0xC00) != 0
      || ((v39 = *(_QWORD *)(v13 + 80), v40 = *(_QWORD *)(v13 + 88), v74 != v39)
       || !(_BYTE)v74 && v75 != v40)
      && (v41 = sub_1C6329714((unsigned __int8 *)&v74, v39, v40), a6 = v38, !v41))
    {
      if ((v42 = *(_QWORD *)(v13 + 80), v43 = *(_QWORD *)(v13 + 88), v74 == v42)
        && ((_BYTE)v74 || v75 == v43)
        || (v67 = sub_1C632979C((unsigned __int8 *)&v74, v42, v43), a6 = v38, v67))
      {
        v44 = *(unsigned int *)(v8 + 8);
        if (v44 >= *(unsigned int *)(v8 + 12))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod(v8, v71, v44 + 1, 8);
          a6 = v38;
          v44 = *(unsigned int *)(v8 + 8);
        }
        *(_QWORD *)(*(_QWORD *)v8 + 8 * v44) = v13;
        ++*(_DWORD *)(v8 + 8);
      }
    }
LABEL_31:
    v11 += 10;
    if (v11 == v12)
      return 1;
  }
  if ((v17 - 171) < 3)
  {
    v25 = a6;
    v26 = sub_1C5CA7C70(a1, *(_QWORD *)v11, v8, a4, a5);
    a6 = v25;
    if ((v26 & 1) == 0)
      return 0;
    goto LABEL_31;
  }
  if (v17 != 4)
    goto LABEL_70;
LABEL_49:
  v45 = *(_QWORD *)(a5 + 80);
  v46 = (llvm::APInt *)(v45 + 24);
  if (*(_DWORD *)(v45 + 32) > 0x40u)
  {
    v48 = a6;
    v49 = llvm::APInt::countTrailingOnesSlowCase(v46);
    a6 = v48;
    v47 = (llvm::LLVMContext *)v49;
  }
  else
  {
    v47 = (llvm::LLVMContext *)__clz(__rbit64(~*(_QWORD *)v46));
  }
  if ((int)v47 <= 31)
  {
    switch((_DWORD)v47)
    {
      case 1:
        v50 = 0;
        v51 = 0;
        v52 = 2;
        goto LABEL_63;
      case 0x10:
        v50 = 0;
        v51 = 0;
        v52 = 4;
        goto LABEL_63;
      case 8:
        v50 = 0;
        v51 = 0;
        v52 = 3;
        goto LABEL_63;
    }
  }
  else
  {
    switch((_DWORD)v47)
    {
      case 0x20:
        v50 = 0;
        v51 = 0;
        v52 = 5;
        goto LABEL_63;
      case 0x40:
        v50 = 0;
        v51 = 0;
        v52 = 6;
        goto LABEL_63;
      case 0x80:
        v50 = 0;
        v51 = 0;
        v52 = 7;
        goto LABEL_63;
    }
  }
  v68 = a6;
  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)a1 + 56), v47);
  a6 = v68;
  v50 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
  v52 = ExtendedIntegerVT;
  v17 = *(unsigned __int16 *)(v13 + 24);
LABEL_63:
  v74 = v52 | v50;
  v75 = v51;
  v53 = *(_QWORD *)(v13 + 32);
  if (v17 == 4)
  {
    v54 = *(_QWORD *)(v53 + 40);
    v55 = (uint64_t *)(v54 + 80);
    v56 = (uint64_t *)(v54 + 88);
  }
  else
  {
    v55 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v53 + 40) + 16 * *(unsigned int *)(v53 + 8));
    v56 = v55 + 1;
  }
  v57 = *v56;
  v58 = *v55;
  if ((_DWORD)v52 == v58 && ((_DWORD)v52 || v51 == v57))
    goto LABEL_31;
  v59 = a6;
  v60 = sub_1C6329714((unsigned __int8 *)&v74, v58, v57);
  a6 = v59;
  if (v60)
    goto LABEL_31;
LABEL_70:
  if (*a6)
    return 0;
  *a6 = v13;
  v61 = *(unsigned __int16 *)(v13 + 58);
  if (v61 < 2)
    goto LABEL_31;
  v62 = 0;
  v63 = *(unsigned __int8 **)(v13 + 40);
  while (1)
  {
    v65 = *v63;
    v63 += 16;
    v64 = v65;
    if (v65 != 172)
      break;
LABEL_76:
    if (!--v61)
      goto LABEL_31;
  }
  v66 = v64 != 1;
  if ((v66 & v62) != 1)
  {
    v62 |= v66;
    goto LABEL_76;
  }
  result = 0;
  *a6 = 0;
  return result;
}

uint64_t sub_1C5CA818C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 a4, uint64_t a5, unsigned __int8 *a6)
{
  uint64_t result;
  uint64_t v12;
  llvm::APInt *v13;
  llvm::LLVMContext *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t ExtendedIntegerVT;
  uint64_t v24;
  _QWORD v25[2];

  result = sub_1C49AB31C((llvm::APInt *)(*(_QWORD *)(a2 + 80) + 24));
  if (!(_DWORD)result)
    return result;
  v12 = *(_QWORD *)(a2 + 80);
  v13 = (llvm::APInt *)(v12 + 24);
  if (*(_DWORD *)(v12 + 32) > 0x40u)
    v14 = (llvm::LLVMContext *)llvm::APInt::countTrailingOnesSlowCase(v13);
  else
    v14 = (llvm::LLVMContext *)__clz(__rbit64(~*(_QWORD *)v13));
  if ((int)v14 <= 31)
  {
    switch((_DWORD)v14)
    {
      case 1:
        v15 = 0;
        v16 = 0;
        v17 = 2;
        goto LABEL_16;
      case 0x10:
        v15 = 0;
        v16 = 0;
        v17 = 4;
        goto LABEL_16;
      case 8:
        v15 = 0;
        v16 = 0;
        v17 = 3;
        goto LABEL_16;
    }
  }
  else
  {
    switch((_DWORD)v14)
    {
      case 0x20:
        v15 = 0;
        v16 = 0;
        v17 = 5;
        goto LABEL_16;
      case 0x40:
        v15 = 0;
        v16 = 0;
        v17 = 6;
        goto LABEL_16;
      case 0x80:
        v15 = 0;
        v16 = 0;
        v17 = 7;
        goto LABEL_16;
    }
  }
  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)a1 + 56), v14);
  v16 = v24;
  v15 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
  v17 = ExtendedIntegerVT;
LABEL_16:
  v18 = v17 | v15;
  *(_QWORD *)a6 = v17 | v15;
  *((_QWORD *)a6 + 1) = v16;
  v20 = *(_QWORD *)(a3 + 80);
  v19 = *(_QWORD *)(a3 + 88);
  v25[0] = v20;
  v25[1] = v19;
  if ((_DWORD)v17 == v20
    && ((_DWORD)v17 || v16 == v19)
    && (!*(_BYTE *)(a1 + 33)
     || a4 && v17 && *(unsigned __int16 *)(*(_QWORD *)(a1 + 8) + 358 * a4 + 2 * v17 + 73672) < 0x1000u))
  {
    return 1;
  }
  if ((*(_WORD *)(*(_QWORD *)(a3 + 96) + 36) & 0xF00) != 0 || (*(_BYTE *)(a3 + 26) & 8) != 0)
    return 0;
  if ((_DWORD)v17 != v20 || (result = 0, !(_DWORD)v17) && v19 != v16)
  {
    result = sub_1C50989E0((unsigned __int8 *)v25, v18, v16);
    if ((_DWORD)result)
    {
      result = sub_1C5098958(a6);
      if ((_DWORD)result)
      {
        if (!*(_BYTE *)(a1 + 33))
        {
          v22 = *(_QWORD *)(a1 + 8);
          v21 = *(_QWORD *)a6;
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v22 + 624))(v22, a3, 3, v21, *((_QWORD *)a6 + 1));
        }
        result = 0;
        if (a4)
        {
          v21 = *(_QWORD *)a6;
          if (*(_QWORD *)a6)
          {
            v22 = *(_QWORD *)(a1 + 8);
            if (*(unsigned __int16 *)(v22 + 358 * a4 + 2 * *(_QWORD *)a6 + 73672) > 0xFFFu)
              return 0;
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v22 + 624))(v22, a3, 3, v21, *((_QWORD *)a6 + 1));
          }
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1C5CA83DC(_QWORD **a1, int a2, uint64_t a3, unsigned int a4, uint64_t a5, unsigned int a6, const llvm::APInt *a7)
{
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  unsigned __int8 *v24;
  uint64_t *result;
  unsigned int v26;
  unsigned int v27;
  _BOOL4 v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  unsigned __int8 v39;
  unsigned int v40;
  unsigned int v41;
  _QWORD *v42;
  uint64_t v43;
  _QWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  unsigned __int8 v54;
  int v55;
  int v56;
  int v57;
  int v58;
  char v59;
  int v60;
  uint64_t v61;
  unsigned __int8 *v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  _BOOL4 v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  llvm::Type *v78;
  _BOOL4 v79;
  _BOOL4 v80;
  uint64_t v81;
  BOOL v82;
  _QWORD *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unsigned __int8 *v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unsigned __int8 *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  const llvm::APInt *v114;
  llvm *v115;
  uint64_t v116;
  _BOOL4 v117;
  _BOOL4 v118;
  uint64_t v119;
  unsigned __int8 *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unsigned __int8 *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  unint64_t v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  uint64_t v135;
  _QWORD *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  unint64_t v145;
  unint64_t v146;
  unint64_t v147;
  uint8x8_t v148;
  BOOL v149;
  char *v150;
  uint64_t v151;
  _BOOL8 v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unint64_t v156;
  unint64_t v157;
  unint64_t v158;
  _BOOL4 v159;
  unint64_t v160;
  _BOOL4 v161;
  uint64_t v162;
  int v163;
  uint8x8_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t *v167;
  unint64_t v168;
  unint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t *v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t *v177;
  unint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  unint64_t v182;
  uint64_t *v183;
  unint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  __int16 v191;
  int v192;
  uint64_t v193;
  uint64_t v194;
  _BOOL4 v195;
  uint64_t *v196;
  _BOOL4 v197;
  int v198;
  unsigned int v199;
  int v200;
  int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  unsigned int v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  llvm *v219;
  uint64_t v220;
  __int128 v221;
  uint64_t v222;
  int v223;
  uint64_t v224;
  int v225;
  uint64_t v226;
  unint64_t v227;
  __int128 v228;
  uint64_t v229;
  unint64_t v230;
  uint64_t v231;
  unint64_t v232;
  _OWORD v233[2];

  v231 = 0;
  LODWORD(v232) = 0;
  v229 = 0;
  LODWORD(v230) = 0;
  *(_QWORD *)&v228 = 0;
  DWORD2(v228) = 0;
  v226 = 0;
  LODWORD(v227) = 0;
  v224 = 0;
  v225 = 0;
  v222 = 0;
  v223 = 0;
  if (!sub_1C5CA91A0((uint64_t)a1, a3, a4, (uint64_t)&v231, (uint64_t)&v229, (uint64_t)&v224, 0)
    || !sub_1C5CA91A0((uint64_t)a1, a5, a6, (uint64_t)&v228, (uint64_t)&v226, (uint64_t)&v222, 0))
  {
    return 0;
  }
  v221 = *(_OWORD *)(*(_QWORD *)(a3 + 40) + 16 * a4);
  v16 = v231;
  v17 = v232;
  v18 = *(_QWORD *)(v231 + 40) + 16 * v232;
  v19 = *(_QWORD *)(v18 + 8);
  v219 = *(llvm **)v18;
  v220 = v19;
  if (*((_BYTE *)a1 + 33) || sub_1C6131264((unsigned __int8 *)&v221, v14, v15) != 2)
  {
    v20 = (*(uint64_t (**)(_QWORD *, uint64_t, _QWORD))(*a1[1] + 400))(a1[1], *(_QWORD *)(*(_QWORD *)(*a1)[5] + 40) + 272, (*a1)[7]);
    if (v221 != v20 || !(_BYTE)v221 && *((_QWORD *)&v221 + 1) != v21)
      return 0;
  }
  v22 = v228;
  v23 = DWORD2(v228);
  v24 = (unsigned __int8 *)(*(_QWORD *)(v228 + 40) + 16 * DWORD2(v228));
  if (v219 != *v24 || !(_BYTE)v219 && v220 != *((_QWORD *)v24 + 1))
    return 0;
  v26 = *(_DWORD *)(v224 + 76);
  v27 = *(_DWORD *)(v222 + 76);
  if ((_BYTE)v219)
  {
    v28 = 1;
    if (v219 - 2 >= 6 && v219 - 15 >= 0x3C)
      v28 = v219 - 120 < 0x20;
  }
  else
  {
    if ((*(_DWORD *)(v220 + 8) & 0xFE) == 0x12)
      v29 = *(unsigned __int8 *)(**(_QWORD **)(v220 + 16) + 8);
    else
      v29 = *(_DWORD *)(v220 + 8);
    v28 = v29 == 13;
  }
  v30 = v229;
  v31 = v226;
  v32 = v230;
  v33 = v227;
  if (v229 == v226 && (_DWORD)v230 == (_DWORD)v227 && v26 == v27 && v28)
  {
    v195 = v28;
    v199 = v227;
    v202 = v230;
    v205 = *(_DWORD *)(v222 + 76);
    v208 = v226;
    v211 = v228;
    v193 = v230;
    v214 = *(_DWORD *)(v224 + 76);
    v217 = v229;
    v192 = sub_1C636CD34(v229, v230, 0);
    v52 = sub_1C5D62374(v217, v193, 0);
    v26 = v214;
    if (v214 == 17)
      v54 = a2;
    else
      v54 = 0;
    if (v214 == 18)
      v55 = a2;
    else
      v55 = 0;
    if (v214 == 22)
      v56 = a2 ^ 1;
    else
      v56 = 0;
    if (v214 == 20)
      v57 = a2 ^ 1;
    else
      v57 = 0;
    if ((v54 & v192 & 1) != 0 || (v55 & v52 & 1) != 0 || (v56 & v192 & 1) != 0 || (v57 & v192) != 0)
    {
      v102 = (uint64_t)*a1;
      v103 = *(unsigned __int8 **)(a3 + 64);
      *(_QWORD *)&v233[0] = v103;
      if (v103)
        llvm::MetadataTracking::track((uint64_t)v233, v103, 2);
      DWORD2(v233[0]) = *(_DWORD *)(a3 + 60);
      v104 = *(_QWORD *)(v102 + 832);
      if (v104)
        LOWORD(v104) = *(_WORD *)(v104 + 8);
      v64 = sub_1C5D56C70(v102, 172, (const llvm::APInt *)v233, v219, v220, v16, v232, v53, v211, *((unint64_t *)&v228 + 1), v104);
    }
    else
    {
      if (v214 == 20)
        v58 = a2;
      else
        v58 = 0;
      v59 = v54 & v52;
      if (v214 == 18)
        v60 = a2 ^ 1;
      else
        v60 = 0;
      v30 = v217;
      v31 = v208;
      v22 = v211;
      v32 = v202;
      v27 = v205;
      v33 = v199;
      v28 = v195;
      if ((v59 & 1) == 0 && (v58 & v192 & 1) == 0 && (v56 & v52 & 1) == 0 && (v60 & v52) == 0)
        goto LABEL_25;
      v61 = (uint64_t)*a1;
      v62 = *(unsigned __int8 **)(a3 + 64);
      *(_QWORD *)&v233[0] = v62;
      if (v62)
        llvm::MetadataTracking::track((uint64_t)v233, v62, 2);
      DWORD2(v233[0]) = *(_DWORD *)(a3 + 60);
      v63 = *(_QWORD *)(v61 + 832);
      if (v63)
        LOWORD(v63) = *(_WORD *)(v63 + 8);
      v64 = sub_1C5D56C70(v61, 171, (const llvm::APInt *)v233, v219, v220, v16, v232, v53, v211, *((unint64_t *)&v228 + 1), v63);
    }
    v105 = (uint64_t)v64;
    v106 = v65;
    if (*(_QWORD *)&v233[0])
      llvm::MetadataTracking::untrack((uint64_t)v233, *(unsigned __int8 **)&v233[0]);
    sub_1C5C5B004((uint64_t)a1, v105);
    v107 = (uint64_t)*a1;
    v108 = v221;
    v109 = sub_1C6367818(*a1, v214);
    v112 = *(_QWORD *)(v107 + 832);
    if (v112)
      LOWORD(v112) = *(_WORD *)(v112 + 8);
    v190 = v110;
    v191 = v112;
    v188 = v193;
    v189 = v109;
    v187 = v217;
    v113 = v107;
    v114 = a7;
    v116 = *((_QWORD *)&v108 + 1);
    v115 = (llvm *)v108;
    return sub_1C5D58E08(v113, (const char *)0xC1, v114, v115, v116, v105, v106, v111, v187, v188, v189, v190, SHIDWORD(v190), v191);
  }
LABEL_25:
  if (a2 && v16 == v22 && (_DWORD)v17 == v23 && v26 == v27)
  {
    v215 = v26;
    v218 = v30;
    v209 = v31;
    v212 = v22;
    v203 = v32;
    v206 = v27;
    v200 = v33;
    v197 = v28;
    v78 = sub_1C6131328((unsigned __int8 *)&v219, v33, v32);
    v28 = v197;
    LODWORD(v33) = v200;
    v32 = v203;
    v27 = v206;
    v31 = v209;
    v22 = v212;
    v30 = v218;
    v26 = v215;
    v79 = (unint64_t)v78 > 1 && v197;
    if (v79 && v215 == 22)
    {
      v80 = sub_1C6368AD4(v218);
      v81 = v218;
      if (v80)
      {
        v82 = sub_1C636F400(v209);
        v81 = v218;
        if (v82)
          goto LABEL_122;
      }
      v117 = sub_1C636F400(v81);
      v28 = v197;
      LODWORD(v33) = v200;
      v32 = v203;
      v27 = v206;
      v31 = v209;
      v22 = v212;
      v30 = v218;
      v26 = v215;
      if (v117)
      {
        v118 = sub_1C6368AD4(v209);
        v28 = v197;
        LODWORD(v33) = v200;
        v32 = v203;
        v27 = v206;
        v31 = v209;
        v22 = v212;
        v30 = v218;
        v26 = v215;
        if (v118)
        {
LABEL_122:
          v83 = sub_1C6366AB4((uint64_t)*a1, 1, a7, v219, v220, 0, 0);
          v85 = v84;
          v87 = sub_1C6366AB4((uint64_t)*a1, 2, a7, v219, v220, 0, 0);
          v89 = v88;
          v90 = (uint64_t)*a1;
          v91 = *(unsigned __int8 **)(a3 + 64);
          *(_QWORD *)&v233[0] = v91;
          if (v91)
            llvm::MetadataTracking::track((uint64_t)v233, v91, 2);
          DWORD2(v233[0]) = *(_DWORD *)(a3 + 60);
          v92 = *(_QWORD *)(v90 + 832);
          if (v92)
            LOWORD(v92) = *(_WORD *)(v92 + 8);
          v93 = sub_1C5D56C70(v90, 56, (const llvm::APInt *)v233, v219, v220, v16, v232, v86, (uint64_t)v83, v85, v92);
          v95 = v94;
          if (*(_QWORD *)&v233[0])
            llvm::MetadataTracking::untrack((uint64_t)v233, *(unsigned __int8 **)&v233[0]);
          sub_1C5C5B004((uint64_t)a1, (uint64_t)v93);
          v96 = (uint64_t)*a1;
          v97 = v221;
          v98 = sub_1C6367818(*a1, 0xBu);
          v101 = *(_QWORD *)(v96 + 832);
          if (v101)
            LOWORD(v101) = *(_WORD *)(v101 + 8);
          return sub_1C5D58E08(v96, (const char *)0xC1, a7, (llvm *)v97, *((uint64_t *)&v97 + 1), (uint64_t)v93, v95, v100, (uint64_t)v87, v89, v98, v99, SHIDWORD(v99), v101);
        }
      }
    }
  }
  if (v28)
  {
    v198 = v33;
    v201 = v32;
    v213 = v26;
    v216 = v30;
    v207 = v31;
    v210 = v22;
    v204 = v27;
    v34 = (*(uint64_t (**)(_QWORD *, llvm *, uint64_t))(*a1[1] + 288))(a1[1], v219, v220);
    LODWORD(v33) = v198;
    v32 = v201;
    v27 = v204;
    v31 = v207;
    v22 = v210;
    v30 = v216;
    v26 = v213;
    if (v34)
    {
      if (v213 == v204)
      {
        v36 = *(_QWORD *)(a3 + 48);
        if (v36)
        {
          v37 = 1;
          do
          {
            if (*(_DWORD *)(v36 + 8) == a4)
            {
              if (!v37)
                goto LABEL_39;
              --v37;
            }
            v36 = *(_QWORD *)(v36 + 32);
          }
          while (v36);
          if (!v37)
          {
            v66 = *(_QWORD *)(a5 + 48);
            if (v66)
            {
              v67 = 1;
              do
              {
                if (*(_DWORD *)(v66 + 8) == a6)
                {
                  if (!v67)
                    goto LABEL_39;
                  --v67;
                }
                v66 = *(_QWORD *)(v66 + 32);
              }
              while (v66);
              if (!v67)
              {
                if (a2 && v213 == 17 || !a2 && v213 == 22)
                {
                  v119 = (uint64_t)*a1;
                  v120 = *(unsigned __int8 **)(a3 + 64);
                  *(_QWORD *)&v233[0] = v120;
                  if (v120)
                    llvm::MetadataTracking::track((uint64_t)v233, v120, 2);
                  DWORD2(v233[0]) = *(_DWORD *)(a3 + 60);
                  v121 = *(_QWORD *)(v119 + 832);
                  if (v121)
                    LOWORD(v121) = *(_WORD *)(v121 + 8);
                  v123 = sub_1C5D56C70(v119, 173, (const llvm::APInt *)v233, v219, v220, v16, v232, v35, v216, v230, v121);
                  v125 = v124;
                  if (*(_QWORD *)&v233[0])
                    llvm::MetadataTracking::untrack((uint64_t)v233, *(unsigned __int8 **)&v233[0]);
                  v126 = (uint64_t)*a1;
                  v127 = *(unsigned __int8 **)(a5 + 64);
                  *(_QWORD *)&v233[0] = v127;
                  if (v127)
                    llvm::MetadataTracking::track((uint64_t)v233, v127, 2);
                  DWORD2(v233[0]) = *(_DWORD *)(a5 + 60);
                  v128 = *(_QWORD *)(v126 + 832);
                  if (v128)
                    LOWORD(v128) = *(_WORD *)(v128 + 8);
                  v130 = sub_1C5D56C70(v126, 173, (const llvm::APInt *)v233, v219, v220, v210, *((unint64_t *)&v228 + 1), v122, v207, v227, v128);
                  v132 = v131;
                  if (*(_QWORD *)&v233[0])
                    llvm::MetadataTracking::untrack((uint64_t)v233, *(unsigned __int8 **)&v233[0]);
                  v133 = (*a1)[104];
                  if (v133)
                    LOWORD(v133) = *(_WORD *)(v133 + 8);
                  v134 = sub_1C5D56C70((uint64_t)*a1, 172, a7, v219, v220, (uint64_t)v123, v125, v129, (uint64_t)v130, v132, v133);
LABEL_162:
                  v105 = (uint64_t)v134;
                  v106 = v135;
                  v136 = sub_1C6366AB4((uint64_t)*a1, 0, a7, v219, v220, 0, 0);
                  v138 = v137;
                  v139 = (uint64_t)*a1;
                  v140 = v221;
                  v141 = sub_1C6367818(*a1, v213);
                  v143 = *(_QWORD *)(v139 + 832);
                  if (v143)
                    LOWORD(v143) = *(_WORD *)(v143 + 8);
                  v190 = v142;
                  v191 = v143;
                  v188 = v138;
                  v189 = v141;
                  v187 = (uint64_t)v136;
                  v113 = v139;
                  v114 = a7;
                  v116 = *((_QWORD *)&v140 + 1);
                  v115 = (llvm *)v140;
                  return sub_1C5D58E08(v113, (const char *)0xC1, v114, v115, v116, v105, v106, v111, v187, v188, v189, v190, SHIDWORD(v190), v191);
                }
                v68 = v213 == 22;
                if (!a2)
                  v68 = v213 == 17;
                if (!v68)
                  goto LABEL_39;
                v69 = v230;
                v70 = sub_1C5D4F7E8(v216, v230, 0, 0);
                v71 = v227;
                v72 = sub_1C5D4F7E8(v207, v227, 0, 0);
                LODWORD(v33) = v198;
                v32 = v201;
                v27 = v204;
                v31 = v207;
                v22 = v210;
                v30 = v216;
                v26 = v213;
                if (v16 != v210
                  || (_DWORD)v17 != v23
                  || !v70
                  || !v72
                  || (*(_BYTE *)(v70 + 26) & 8) != 0
                  || (*(_BYTE *)(v72 + 26) & 8) != 0)
                {
                  goto LABEL_39;
                }
                v74 = *(_QWORD *)(v70 + 80);
                v75 = (uint64_t *)(v74 + 24);
                v196 = (uint64_t *)(*(_QWORD *)(v72 + 80) + 24);
                v76 = *(unsigned int *)(v74 + 32);
                if (v76 > 0x40)
                {
                  v144 = ((unint64_t)(v76 + 63) >> 3) & 0x3FFFFFF8;
                  while (v144)
                  {
                    v145 = *(_QWORD *)(*v75 - 8 + v144);
                    v146 = *(_QWORD *)(*v196 - 8 + v144);
                    v144 -= 8;
                    if (v145 != v146)
                    {
                      if (v145 <= v146)
                        goto LABEL_114;
                      goto LABEL_166;
                    }
                  }
                }
                else
                {
                  if (*v75 < (unint64_t)*v196)
                  {
LABEL_114:
                    v77 = *(_QWORD *)(v72 + 80) + 24;
                    v196 = v75;
LABEL_173:
                    v194 = *(unsigned int *)(v77 + 8);
                    if (v194 >= 0x41)
                    {
                      v150 = (char *)operator new[]();
                      memcpy(v150, *(const void **)v77, ((unint64_t)(v194 + 63) >> 3) & 0x3FFFFFF8);
                      v151 = 0;
                      v152 = 0;
                      v153 = *v196;
                      v154 = (unint64_t)(v194 + 63) >> 6;
                      v155 = 8 * v154;
                      do
                      {
                        v156 = *(_QWORD *)&v150[v151];
                        v157 = *(_QWORD *)(v153 + v151);
                        v158 = v156 - v157;
                        v159 = v156 < v157;
                        v160 = v156 + ~v157;
                        v161 = v160 >= v156;
                        if (v152)
                        {
                          v152 = v161;
                        }
                        else
                        {
                          v160 = v158;
                          v152 = v159;
                        }
                        *(_QWORD *)&v150[v151] = v160;
                        v151 += 8;
                      }
                      while (v155 != v151);
                      v162 = 0;
                      v163 = 0;
                      *(_QWORD *)&v150[8 * (v154 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v194;
                      do
                      {
                        v164 = (uint8x8_t)vcnt_s8(*(int8x8_t *)&v150[v162]);
                        v164.i16[0] = vaddlv_u8(v164);
                        v163 += v164.i32[0];
                        v162 += 8;
                      }
                      while (v155 != v162);
                      MEMORY[0x1CAA32F9C](v150, 0x1000C8000313F17);
                      v149 = v163 == 1;
                    }
                    else
                    {
                      v147 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v194;
                      if (!(_DWORD)v194)
                        v147 = 0;
                      v148 = (uint8x8_t)vcnt_s8((int8x8_t)(v147 & (*(_QWORD *)v77 - *v196)));
                      v148.i16[0] = vaddlv_u8(v148);
                      v149 = v148.u32[0] == 1;
                    }
                    v26 = v213;
                    v30 = v216;
                    v31 = v207;
                    v22 = v210;
                    v32 = v201;
                    v27 = v204;
                    LODWORD(v33) = v198;
                    if (!v149)
                      goto LABEL_39;
                    v165 = (*a1)[104];
                    if (v165)
                      LOWORD(v165) = *(_WORD *)(v165 + 8);
                    v167 = sub_1C5D56C70((uint64_t)*a1, 170, a7, v219, v220, v216, v69, v73, v207, v71, v165);
                    v169 = v168;
                    v170 = (*a1)[104];
                    if (v170)
                      LOWORD(v170) = *(_WORD *)(v170 + 8);
                    v173 = sub_1C5D56C70((uint64_t)*a1, 169, a7, v219, v220, v216, v69, v166, v207, v71, v170);
                    v174 = v171;
                    v175 = (*a1)[104];
                    if (v175)
                      LOWORD(v175) = *(_WORD *)(v175 + 8);
                    v177 = sub_1C5D56C70((uint64_t)*a1, 57, a7, v219, v220, v16, v232, v172, (uint64_t)v173, v171, v175);
                    v179 = v178;
                    v180 = (*a1)[104];
                    if (v180)
                      LOWORD(v180) = *(_WORD *)(v180 + 8);
                    v181 = sub_1C5D56C70((uint64_t)*a1, 57, a7, v219, v220, (uint64_t)v167, v169, v176, (uint64_t)v173, v174, v180);
                    v183 = sub_1C6366760((uint64_t)*a1, a7, (uint64_t)v181, v182, v219, v220);
                    v186 = (*a1)[104];
                    if (v186)
                      LOWORD(v186) = *(_WORD *)(v186 + 8);
                    v134 = sub_1C5D56C70((uint64_t)*a1, 171, a7, v219, v220, (uint64_t)v177, v179, v185, (uint64_t)v183, v184, v186);
                    goto LABEL_162;
                  }
                  if (*v75 > (unint64_t)*v196)
                  {
LABEL_166:
                    v77 = (uint64_t)v75;
                    goto LABEL_173;
                  }
                }
                v77 = *(_QWORD *)(v72 + 80) + 24;
                goto LABEL_173;
              }
            }
          }
        }
      }
    }
  }
LABEL_39:
  if (v16 == v31 && (_DWORD)v17 == (_DWORD)v33 && v30 == v22 && v32 == v23)
  {
    v27 = (v27 >> 1) & 2 | v27 & 0xFFFFFFF9 | (4 * ((v27 >> 1) & 1));
    v233[0] = v228;
    v23 = v227;
    DWORD2(v228) = v227;
    v22 = v226;
    *(_QWORD *)&v228 = v226;
    v226 = *(_QWORD *)&v233[0];
    LODWORD(v227) = DWORD2(v233[0]);
  }
  if (v16 != v22)
    return 0;
  result = 0;
  if ((_DWORD)v17 != v23)
    return result;
  if (v30 != v226)
    return 0;
  result = 0;
  if (v32 == (_DWORD)v227)
  {
    v38 = v30;
    v39 = v219;
    if (a2)
      v40 = sub_1C63651D0(v26, v27, v219, v220);
    else
      v40 = sub_1C5D3DE74(v26, v27, v219, v220);
    v41 = v40;
    if (v40 == 24)
      return 0;
    if (!*((_BYTE *)a1 + 33))
    {
LABEL_57:
      v44 = *a1;
      v45 = v221;
      v46 = v232;
      v47 = v230;
      v48 = sub_1C6367818(v44, v41);
      v51 = v44[104];
      if (v51)
        LOWORD(v51) = *(_WORD *)(v51 + 8);
      return sub_1C5D58E08((uint64_t)v44, (const char *)0xC1, a7, (llvm *)v45, *((uint64_t *)&v45 + 1), v16, v46, v50, v38, v47, v48, v49, SHIDWORD(v49), v51);
    }
    v42 = a1[1];
    v43 = *(_QWORD *)(*(_QWORD *)(v16 + 40) + 16 * v17);
    if (((*((_DWORD *)v42 + 23 * v40 + (v43 >> 3) + 42897) >> (4 * (v43 & 7))) & 0xF) != 0)
      return 0;
    if (!v39)
      return 0;
    if (v39 == 1 || (result = 0, v42[v39 + 12]))
    {
      if (!*((_BYTE *)v42 + 390 * v39 + 4055))
        goto LABEL_57;
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C5CA91A0(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v11;
  uint64_t v12;
  uint64_t *v13;
  unsigned int v14;
  unsigned int v15;
  uint64_t *v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v11 = *(unsigned __int16 *)(a2 + 24);
  if (v11 == 193)
  {
    v13 = (uint64_t *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 32);
    v14 = 2;
    v15 = 1;
LABEL_13:
    v19 = v13;
    goto LABEL_14;
  }
  if ((v11 & 0xFFFE) == 0x8A && a7 != 0)
  {
    v13 = (uint64_t *)(a2 + 32);
    v12 = *(_QWORD *)(a2 + 32) + 40;
    v14 = 3;
    v15 = 2;
    goto LABEL_13;
  }
  if (v11 != 192)
    return 0;
  v19 = (uint64_t *)(a2 + 32);
  result = sub_1C63762F8(*(unsigned int **)(a1 + 8), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 88));
  if ((_DWORD)result)
  {
    result = sub_1C5D8C6A0(*(unsigned int **)(a1 + 8), *(_QWORD *)(*v19 + 120));
    if ((_DWORD)result)
    {
      v21 = (_QWORD *)(*(_QWORD *)(a2 + 40) + 16 * a3);
      result = sub_1C6329468(*(unsigned int **)(a1 + 8), *v21, v21[1]);
      if ((_DWORD)result)
      {
        v12 = *v19;
        v14 = 4;
        v15 = 1;
LABEL_14:
        v22 = *(_QWORD *)v12;
        *(_DWORD *)(a4 + 8) = *(_DWORD *)(v12 + 8);
        *(_QWORD *)a4 = v22;
        v23 = *v19 + 40 * v15;
        v24 = *(_QWORD *)v23;
        *(_DWORD *)(a5 + 8) = *(_DWORD *)(v23 + 8);
        *(_QWORD *)a5 = v24;
        v25 = *v19 + 40 * v14;
        v26 = *(_QWORD *)v25;
        *(_DWORD *)(a6 + 8) = *(_DWORD *)(v25 + 8);
        *(_QWORD *)a6 = v26;
        return 1;
      }
    }
  }
  return result;
}

uint64_t *sub_1C5CA92D4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  uint64_t v12;
  uint64_t v13;
  llvm *v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  int v23;
  BOOL v24;
  uint64_t v25;
  int v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  size_t v57;
  uint64_t *v58;
  unint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  _BOOL4 v62;
  uint64_t v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;
  uint64_t v71;
  unsigned __int8 *v72;
  uint64_t *v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  void *v85;
  size_t v86;
  uint64_t *v87;
  unint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t *v95;
  unint64_t v96;
  _QWORD *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  void *v101;
  unsigned int v102;
  unint64_t v103;
  unsigned int v104;
  void *v105;
  unsigned int v106;
  unsigned __int8 *v107;
  unsigned int v108;
  unsigned __int8 *v109;
  int v110;

  v12 = *(_QWORD *)(a4 + 40) + 16 * a5;
  v14 = *(llvm **)v12;
  v13 = *(_QWORD *)(v12 + 8);
  v15 = *(unsigned __int8 **)(a6 + 64);
  v109 = v15;
  if (v15)
    llvm::MetadataTracking::track((uint64_t)&v109, v15, 2);
  v110 = *(_DWORD *)(a6 + 60);
  if (!*(_BYTE *)(a1 + 33) && (*(_WORD *)(a2 + 24) == 51 || *(_WORD *)(a4 + 24) == 51))
  {
    v16 = sub_1C63293BC(*(_QWORD *)a1, (const llvm::APInt *)&v109, (_BOOL8)v14, v13, 0, 0);
    goto LABEL_7;
  }
  v16 = (uint64_t)sub_1C5CA83DC((_QWORD **)a1, 0, a2, a3, a4, a5, (const llvm::APInt *)&v109);
  if (v16)
  {
LABEL_7:
    v18 = (uint64_t *)v16;
    goto LABEL_33;
  }
  if (*(_WORD *)(a2 + 24) != 171 || *(_WORD *)(a4 + 24) != 171)
    goto LABEL_32;
  v19 = *(_QWORD *)(a2 + 48);
  if (!v19 || *(_QWORD *)(v19 + 32))
  {
    v20 = *(_QWORD *)(a4 + 48);
    if (!v20 || *(_QWORD *)(v20 + 32))
      goto LABEL_26;
  }
  v21 = *(uint64_t **)(a2 + 32);
  v22 = v21[5];
  v23 = *(unsigned __int16 *)(v22 + 24);
  v24 = v23 == 35 || v23 == 11;
  if (!v24 || (*(_BYTE *)(v22 + 26) & 8) != 0)
    goto LABEL_26;
  v25 = *(_QWORD *)(*(_QWORD *)(a4 + 32) + 40);
  v26 = *(unsigned __int16 *)(v25 + 24);
  v27 = v26 == 35 || v26 == 11;
  if (!v27 || (*(_BYTE *)(v25 + 26) & 8) != 0)
    goto LABEL_26;
  v48 = *(_QWORD *)(v22 + 80);
  v49 = *(_QWORD *)(v25 + 80);
  v50 = *(_QWORD *)a1;
  v51 = *v21;
  v52 = v21[1];
  v53 = *(unsigned int *)(v48 + 32);
  v106 = v53;
  v100 = v48;
  if (v53 <= 0x40)
  {
    v54 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v53;
    if (!(_DWORD)v53)
      v54 = 0;
    v55 = v54 & ~*(_QWORD *)(v48 + 24);
    v105 = (void *)v55;
    v106 = 0;
    goto LABEL_52;
  }
  v99 = v50;
  v56 = v49;
  v57 = ((unint64_t)(v53 + 63) >> 3) & 0x3FFFFFF8;
  v105 = (void *)operator new[]();
  memcpy(v105, *(const void **)(v48 + 24), v57);
  llvm::APInt::flipAllBitsSlowCase((uint64_t)&v105);
  v53 = v106;
  v55 = (unint64_t)v105;
  v106 = 0;
  if (v53 <= 0x40)
  {
    v49 = v56;
    v50 = v99;
LABEL_52:
    v55 &= *(_QWORD *)(v49 + 24);
    goto LABEL_56;
  }
  v49 = v56;
  v58 = *(uint64_t **)(v56 + 24);
  v59 = (unint64_t)(v53 + 63) >> 6;
  v60 = v105;
  do
  {
    v61 = *v58++;
    *v60++ &= v61;
    --v59;
  }
  while (v59);
  v50 = v99;
LABEL_56:
  v108 = v53;
  v107 = (unsigned __int8 *)v55;
  v62 = 0;
  if (!sub_1C63686D8(v50, v51, v52, (uint64_t)&v107, 0))
    goto LABEL_57;
  v63 = *(_QWORD *)a1;
  v64 = *(uint64_t **)(a4 + 32);
  v65 = *v64;
  v66 = v64[1];
  v67 = v49;
  v68 = *(unsigned int *)(v49 + 32);
  v102 = v68;
  if (v68 > 0x40)
  {
    v86 = ((unint64_t)(v68 + 63) >> 3) & 0x3FFFFFF8;
    v101 = (void *)operator new[]();
    memcpy(v101, *(const void **)(v67 + 24), v86);
    llvm::APInt::flipAllBitsSlowCase((uint64_t)&v101);
    LODWORD(v68) = v102;
    v70 = (unint64_t)v101;
    if (v102 > 0x40)
    {
      v95 = *(uint64_t **)(v100 + 24);
      v96 = ((unint64_t)v102 + 63) >> 6;
      v97 = v101;
      do
      {
        v98 = *v95++;
        *v97++ &= v98;
        --v96;
      }
      while (v96);
      goto LABEL_87;
    }
  }
  else
  {
    v69 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v68;
    if (!(_DWORD)v68)
      v69 = 0;
    v70 = v69 & ~*(_QWORD *)(v49 + 24);
  }
  v70 &= *(_QWORD *)(v100 + 24);
LABEL_87:
  v104 = v68;
  v103 = v70;
  v62 = sub_1C63686D8(v63, v65, v66, (uint64_t)&v103, 0);
  if (v104 >= 0x41 && v103)
    MEMORY[0x1CAA32F9C](v103, 0x1000C8000313F17);
  v49 = v67;
LABEL_57:
  if (v108 >= 0x41 && v107)
    MEMORY[0x1CAA32F9C](v107, 0x1000C8000313F17);
  if (!v62)
  {
    if (*(_WORD *)(a2 + 24) != 171 || *(_WORD *)(a4 + 24) != 171)
    {
LABEL_32:
      v18 = 0;
      goto LABEL_33;
    }
LABEL_26:
    v28 = *(_QWORD *)(a2 + 32);
    v29 = *(_QWORD *)(a4 + 32);
    if (*(_QWORD *)v28 == *(_QWORD *)v29
      && *(_DWORD *)(v28 + 8) == *(_DWORD *)(v29 + 8)
      && ((v30 = *(_QWORD *)(a2 + 48)) != 0 && !*(_QWORD *)(v30 + 32)
       || (v31 = *(_QWORD *)(a4 + 48)) != 0 && !*(_QWORD *)(v31 + 32)))
    {
      v33 = *(_QWORD *)a1;
      v34 = *(unsigned __int8 **)(a2 + 64);
      v107 = v34;
      if (v34)
      {
        llvm::MetadataTracking::track((uint64_t)&v107, v34, 2);
        v28 = *(_QWORD *)(a2 + 32);
        v29 = *(_QWORD *)(a4 + 32);
      }
      v108 = *(_DWORD *)(a2 + 60);
      v35 = *(_QWORD *)(v28 + 40);
      v36 = *(_QWORD *)(v28 + 48);
      v37 = *(_QWORD *)(v29 + 40);
      v38 = *(_QWORD *)(v29 + 48);
      v39 = *(_QWORD *)(v33 + 832);
      if (v39)
        LOWORD(v39) = *(_WORD *)(v39 + 8);
      v41 = sub_1C5D56C70(v33, 172, (const llvm::APInt *)&v107, v14, v13, v35, v36, v17, v37, v38, v39);
      v43 = v42;
      if (v107)
        llvm::MetadataTracking::untrack((uint64_t)&v107, v107);
      v44 = *(uint64_t **)(a2 + 32);
      v45 = *v44;
      v46 = v44[1];
      v47 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v47)
        LOWORD(v47) = *(_WORD *)(v47 + 8);
      v16 = (uint64_t)sub_1C5D56C70(*(_QWORD *)a1, 171, (const llvm::APInt *)&v109, v14, v13, v45, v46, v40, (uint64_t)v41, v43, v47);
      goto LABEL_7;
    }
    goto LABEL_32;
  }
  v71 = *(_QWORD *)a1;
  v72 = *(unsigned __int8 **)(a2 + 64);
  v107 = v72;
  if (v72)
    llvm::MetadataTracking::track((uint64_t)&v107, v72, 2);
  v108 = *(_DWORD *)(a2 + 60);
  v73 = *(uint64_t **)(a2 + 32);
  v74 = *v73;
  v75 = v73[1];
  v76 = *(uint64_t **)(a4 + 32);
  v77 = *v76;
  v78 = v76[1];
  v79 = *(_QWORD *)(v71 + 832);
  if (v79)
    LOWORD(v79) = *(_WORD *)(v79 + 8);
  v80 = sub_1C5D56C70(v71, 172, (const llvm::APInt *)&v107, v14, v13, v74, v75, v17, v77, v78, v79);
  v82 = v81;
  if (v107)
    llvm::MetadataTracking::untrack((uint64_t)&v107, v107);
  v83 = *(_QWORD *)a1;
  v84 = *(unsigned int *)(v100 + 32);
  if (v84 > 0x40)
  {
    v85 = (void *)operator new[]();
    memcpy(v85, *(const void **)(v100 + 24), ((unint64_t)(v84 + 63) >> 3) & 0x3FFFFFF8);
    v87 = *(uint64_t **)(v49 + 24);
    v88 = (unint64_t)(v84 + 63) >> 6;
    v89 = v85;
    do
    {
      v90 = *v87++;
      *v89++ |= v90;
      --v88;
    }
    while (v88);
  }
  else
  {
    v85 = (void *)(*(_QWORD *)(v49 + 24) | *(_QWORD *)(v100 + 24));
  }
  v108 = v84;
  v107 = (unsigned __int8 *)v85;
  v91 = sub_1C63666FC(v83, (llvm::LLVMContext *)&v107, (const llvm::APInt *)&v109, (uint64_t)v14, v13, 0, 0);
  v94 = *(_QWORD *)(v83 + 832);
  if (v94)
    LOWORD(v94) = *(_WORD *)(v94 + 8);
  v18 = sub_1C5D56C70(v83, 171, (const llvm::APInt *)&v109, v14, v13, (uint64_t)v80, v82, v93, v91, v92, v94);
  if (v108 >= 0x41 && v107)
    MEMORY[0x1CAA32F9C](v107, 0x1000C8000313F17);
LABEL_33:
  if (v109)
    llvm::MetadataTracking::untrack((uint64_t)&v109, v109);
  return v18;
}

uint64_t *sub_1C5CA9964(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, unint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t *v12;
  uint64_t v14;
  uint64_t v15;
  llvm *v16;
  int v17;
  uint64_t *v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t v26;
  uint64_t *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _DWORD *v38;
  uint64_t v39;
  unsigned __int8 *v41;
  int v42;

  v12 = (uint64_t *)a2;
  if (*(_WORD *)(a2 + 24) != 171)
    goto LABEL_18;
  v14 = *(_QWORD *)(a2 + 40) + 16 * a3;
  v16 = *(llvm **)v14;
  v15 = *(_QWORD *)(v14 + 8);
  v17 = sub_1C5D621EC(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), 0);
  v18 = (uint64_t *)v12[4];
  if (!v17 || (v19 = *(_QWORD *)(v18[5] + 32), *(_QWORD *)v19 != a4) || *(_DWORD *)(v19 + 8) != (_DWORD)a5)
  {
    if (sub_1C5D621EC(*v18, v18[1], 0))
    {
      v23 = (_QWORD *)v12[4];
      v24 = *(_QWORD *)(*v23 + 32);
      if (*(_QWORD *)v24 == a4 && *(_DWORD *)(v24 + 8) == (_DWORD)a5)
      {
        v25 = *(unsigned __int8 **)(a6 + 64);
        v41 = v25;
        if (v25)
        {
          llvm::MetadataTracking::track((uint64_t)&v41, v25, 2);
          v23 = (_QWORD *)v12[4];
        }
        v42 = *(_DWORD *)(a6 + 60);
        v21 = v23[5];
        v22 = v23[6];
        goto LABEL_14;
      }
    }
LABEL_18:
    v27 = sub_1C5CA6F54(a6, (uint64_t)v12, a3, a4, a5, a1, a7, a8);
    if (v27)
      return v27;
    v28 = *((unsigned __int16 *)v12 + 12);
    if (v28 == 181)
    {
      if (*(_WORD *)(a4 + 24) != 177)
        return 0;
      v29 = v12[4];
      v30 = *(_QWORD *)(a4 + 32);
      if (*(_QWORD *)(v29 + 40) != *(_QWORD *)v30)
        return 0;
      v31 = *(_DWORD *)(v29 + 48);
    }
    else
    {
      if (v28 != 180)
        return 0;
      if (*(_WORD *)(a4 + 24) != 175)
        return 0;
      v29 = v12[4];
      v30 = *(_QWORD *)(a4 + 32);
      if (*(_QWORD *)v29 != *(_QWORD *)v30)
        return 0;
      v31 = *(_DWORD *)(v29 + 8);
    }
    if (v31 == *(_DWORD *)(v30 + 8))
    {
      v32 = *(_QWORD *)(v29 + 80);
      if (*(_WORD *)(v32 + 24) == 199)
      {
        v33 = *(uint64_t **)(v32 + 32);
        v35 = *v33;
        v34 = v33 + 1;
        v32 = v35;
      }
      else
      {
        v34 = (_QWORD *)(v29 + 88);
      }
      v36 = *(_QWORD *)(v30 + 40);
      if (*(_WORD *)(v36 + 24) == 199)
      {
        v37 = *(_QWORD **)(v36 + 32);
        v39 = *v37;
        v38 = v37 + 1;
        v36 = v39;
      }
      else
      {
        v38 = (_DWORD *)(v30 + 48);
      }
      if (v32 == v36 && *v34 == *v38)
        return v12;
    }
    return 0;
  }
  v20 = *(unsigned __int8 **)(a6 + 64);
  v41 = v20;
  if (v20)
  {
    llvm::MetadataTracking::track((uint64_t)&v41, v20, 2);
    v18 = (uint64_t *)v12[4];
  }
  v42 = *(_DWORD *)(a6 + 60);
  v21 = *v18;
  v22 = v18[1];
LABEL_14:
  v26 = *(_QWORD *)(a1 + 832);
  if (v26)
    LOWORD(v26) = *(_WORD *)(v26 + 8);
  v12 = sub_1C5D56C70(a1, 172, (const llvm::APInt *)&v41, v16, v15, v21, v22, a8, a4, a5, v26);
  if (v41)
    llvm::MetadataTracking::untrack((uint64_t)&v41, v41);
  return v12;
}

uint64_t *sub_1C5CA9BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const llvm::APInt *a6)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  llvm *v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  unsigned __int8 *v21;
  int v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  llvm *v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  unsigned int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t *result;
  uint64_t *v47;
  unsigned int v48;
  uint64_t *v49;
  uint64_t v50;
  BOOL v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unsigned int v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  BOOL v68;
  int v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t (***v74)();
  void (**v75)(uint64_t (***)());
  uint64_t v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  uint64_t v83;
  int v84;
  int v85;
  uint64_t v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unsigned int v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  int v101;
  uint64_t v102;
  BOOL v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  llvm *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t *v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  unsigned int v130;
  unint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  unint64_t v135;
  unint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  llvm *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned int v155;
  uint64_t v156;
  uint64_t v157;
  int v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t *v165;
  unint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  unint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  int v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t *v181;
  unint64_t v182;
  unint64_t v183;
  uint64_t v184;
  uint64_t *v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  char v191;
  uint64_t v192;
  uint64_t v193;
  unint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  int v199;
  unint64_t v200;
  int v201;
  uint64_t v202;
  uint64_t v203;
  int v204;
  int v205;
  const llvm::APInt *v206;
  unint64_t v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  __int128 v215;
  llvm *v216;
  uint64_t v217;
  _OWORD v218[2];
  uint64_t (**v219)();
  unsigned int v220;
  uint64_t (***v221)();
  uint64_t (**v222)();
  unsigned int v223;
  uint64_t (***v224)();
  uint64_t v225;

  v8 = a3;
  v9 = a2;
  v225 = *MEMORY[0x1E0C80C00];
  v11 = *(_QWORD *)(a2 + 40) + 16 * a3;
  v12 = *(llvm **)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v216 = v12;
  v217 = v13;
  v209 = sub_1C5CA00A8(*(_QWORD *)(a1 + 8), 0xB2u, v12, v13, *(unsigned __int8 *)(a1 + 33));
  v14 = sub_1C5CA00A8(*(_QWORD *)(a1 + 8), 0xB3u, v12, v13, *(unsigned __int8 *)(a1 + 33));
  v15 = sub_1C5CA00A8(*(_QWORD *)(a1 + 8), 0xB4u, v12, v13, *(unsigned __int8 *)(a1 + 33));
  v16 = sub_1C5CA00A8(*(_QWORD *)(a1 + 8), 0xB5u, v12, v13, *(unsigned __int8 *)(a1 + 33));
  if ((_BYTE)v12)
  {
    if (v12 - 2 >= 6)
      goto LABEL_13;
  }
  else if (*(_BYTE *)(v13 + 8) != 13)
  {
    goto LABEL_13;
  }
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)(a1 + 8), *(llvm::EVT **)(*(_QWORD *)a1 + 56), (_BOOL8)v12, v13, (uint64_t)v218);
  if (LOBYTE(v218[0]) == 1)
  {
    if ((_BYTE)v216)
    {
      v17 = *(_QWORD *)(a1 + 8) + 390 * v216;
      v18 = v209;
      if (*(_BYTE *)(v17 + 4040) == 4)
        v18 = 1;
      v209 = v18;
      v19 = *(unsigned __int8 *)(v17 + 4041);
    }
    else
    {
      v19 = 2;
    }
    if (v19 == 4)
      v14 = 1;
  }
LABEL_13:
  v20 = v209;
  if (!*(_BYTE *)(a1 + 33))
    v20 = 1;
  if ((v20 | v14 | v15 | v16) != 1)
    return 0;
  v206 = a6;
  if (*(_WORD *)(v9 + 24) == 201 && *(_WORD *)(a4 + 24) == 201)
  {
    v21 = (unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(v9 + 32) + 40)
                            + 16 * *(unsigned int *)(*(_QWORD *)(v9 + 32) + 8));
    v22 = *v21;
    v23 = (unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a4 + 32) + 40)
                            + 16 * *(unsigned int *)(*(_QWORD *)(a4 + 32) + 8));
    if (v22 == *v23)
    {
      v24 = *((_QWORD *)v23 + 1);
      v25 = *((_QWORD *)v21 + 1);
      if (v22 || v25 == v24)
      {
        v27 = sub_1C5CA9BD8(a1);
        if (v27)
        {
          v29 = v27;
          v30 = v28;
          v31 = *(_QWORD *)a1;
          v32 = *(unsigned __int8 **)(v9 + 64);
          *(_QWORD *)&v218[0] = v32;
          if (v32)
            llvm::MetadataTracking::track((uint64_t)v218, v32, 2);
          DWORD2(v218[0]) = *(_DWORD *)(v9 + 60);
          v33 = *(_QWORD *)(v9 + 40) + 16 * v8;
          v34 = *(llvm **)v33;
          v35 = *(_QWORD *)(v33 + 8);
          v36 = *(_QWORD *)(v31 + 832);
          if (v36)
            v37 = *(_WORD *)(v36 + 8);
          else
            v37 = 0;
          result = sub_1C5D52060(v31, 201, (const llvm::APInt *)v218, v34, v35, v29, v30, v37);
          if (*(_QWORD *)&v218[0])
          {
            v56 = result;
            llvm::MetadataTracking::untrack((uint64_t)v218, *(unsigned __int8 **)&v218[0]);
            return v56;
          }
          return result;
        }
      }
    }
  }
  v205 = v15;
  *(_QWORD *)&v215 = 0;
  DWORD2(v215) = 0;
  v39 = sub_1C5CAC1F4(*(_QWORD *)a1, v9, v8, (uint64_t)&v215);
  v40 = *(unsigned __int16 *)(v39 + 24);
  v204 = v16;
  if (v40 == 177 || v40 == 175)
  {
    v41 = v38;
  }
  else
  {
    v39 = 0;
    v41 = 0;
  }
  v201 = v8;
  v213 = 0;
  LODWORD(v214) = 0;
  v43 = sub_1C5CAC1F4(*(_QWORD *)a1, a4, a5, (uint64_t)&v213);
  v44 = *(unsigned __int16 *)(v43 + 24);
  if (v44 == 177 || v44 == 175)
  {
    v45 = v42;
    if (!v39)
      goto LABEL_41;
  }
  else
  {
    v43 = 0;
    v45 = 0;
    result = 0;
    if (!v39)
      return result;
  }
  v47 = sub_1C5CAB0A4(*(_QWORD *)a1, v39, v41, a4, a5, (uint64_t)&v213, v206);
  if (v47)
  {
    v43 = (uint64_t)v47;
    v45 = v48;
  }
  if (!v43)
    return 0;
LABEL_41:
  v49 = sub_1C5CAB0A4(*(_QWORD *)a1, v43, v45, v9, v8, (uint64_t)&v215, v206);
  if (v49)
    v52 = (uint64_t)v49;
  else
    v52 = v39;
  if (!v52)
    return 0;
  v53 = *(unsigned __int16 *)(v43 + 24);
  if (*(unsigned __int16 *)(v52 + 24) == v53)
    return 0;
  if (v53 == 175)
  {
    v54 = a4;
    LODWORD(v8) = a5;
    v218[0] = v215;
    DWORD2(v215) = v214;
    *(_QWORD *)&v215 = v213;
    v213 = *(_QWORD *)&v218[0];
    v55 = v52;
    LODWORD(v214) = DWORD2(v218[0]);
    v52 = v43;
    a4 = v9;
    LODWORD(a5) = v201;
    v9 = v54;
  }
  else
  {
    v55 = v43;
  }
  v57 = sub_1C6131328((unsigned __int8 *)&v216, v50, v51);
  v58 = *(uint64_t **)(v52 + 32);
  v59 = *v58;
  v60 = v58[1];
  v62 = v58[5];
  v61 = v58[6];
  v63 = *(uint64_t **)(v55 + 32);
  v64 = *v63;
  v65 = v63[1];
  v67 = v63[5];
  v66 = v63[6];
  v68 = v59 == *v63 && (_DWORD)v60 == (_DWORD)v65;
  v69 = v68;
  v70 = v205;
  if (v68)
    v70 = 1;
  if (((v70 | v204) & 1) != 0)
  {
    v200 = v65;
    v202 = v64;
    v208 = v60;
    v71 = v59;
    v219 = &off_1E81980C0;
    v220 = v57;
    v221 = &v219;
    v73 = sub_1C6364E28(v62, v61, v67, v66, (uint64_t)&v219, 0, 0);
    v74 = v221;
    if (v221 == &v219)
    {
      v75 = (void (**)(uint64_t (***)()))(v219 + 4);
      v74 = &v219;
    }
    else
    {
      if (!v221)
        goto LABEL_88;
      v75 = (void (**)(uint64_t (***)()))(*v221 + 5);
    }
    (*v75)(v74);
LABEL_88:
    if (v73)
    {
      if (v69 && ((v209 | v14) == 1 || ((v205 | v204) & 1) == 0))
      {
        v101 = v209;
        if (!*(_BYTE *)(a1 + 33))
          v101 = 1;
        v102 = *(_QWORD *)a1;
        v103 = v101 == 0;
        if (v101)
          v104 = 178;
        else
          v104 = 179;
        if (v101)
          v105 = v62;
        else
          v105 = v67;
        if (v103)
          v106 = v66;
        else
          v106 = v61;
        v107 = *(_QWORD *)(v102 + 832);
        if (v107)
          LOWORD(v107) = *(_WORD *)(v107 + 8);
        result = sub_1C5D56C70(v102, v104, v206, v216, v217, v71, v208, v72, v105, v106, v107);
      }
      else
      {
        v85 = v205;
        if (!*(_BYTE *)(a1 + 33))
          v85 = 1;
        v86 = *(_QWORD *)a1;
        v87 = v85 == 0;
        if (v85)
          v88 = 180;
        else
          v88 = 181;
        if (v85)
          v89 = v62;
        else
          v89 = v67;
        if (v87)
          v90 = v66;
        else
          v90 = v61;
        v91 = *(_QWORD *)(v86 + 832);
        if (v91)
          LOWORD(v91) = *(_WORD *)(v91 + 8);
        result = sub_1C5D58E08(v86, (const char *)v88, v206, v216, v217, v71, v208, v72, v202, v200, v89, v90, SHIDWORD(v90), v91);
      }
      v108 = v92;
      v109 = v215;
      v110 = v213;
      if ((unint64_t)v215 | v213)
      {
        v210 = (uint64_t)result;
        v111 = v67;
        v194 = v61;
        v112 = sub_1C63293BC(*(_QWORD *)a1, v206, (_BOOL8)v216, v217, 0, 0);
        v115 = v112;
        v116 = v113;
        v192 = v62;
        if (v109)
        {
          v117 = *(_QWORD *)(*(_QWORD *)a1 + 832);
          if (v117)
            LOWORD(v117) = *(_WORD *)(v117 + 8);
          v118 = sub_1C5D56C70(*(_QWORD *)a1, 177, v206, v216, v217, v112, v113, v114, v111, v66, v117);
          v121 = *(_QWORD *)a1;
          v122 = v216;
          v123 = v217;
          v124 = *(_QWORD *)(*(_QWORD *)a1 + 832);
          if (v124)
            LOWORD(v124) = *(_WORD *)(v124 + 8);
          v125 = sub_1C5D56C70(v121, 172, v206, v216, v217, v109, *((unint64_t *)&v215 + 1), v120, (uint64_t)v118, v119, v124);
          v128 = *(_QWORD *)(v121 + 832);
          if (v128)
            LOWORD(v128) = *(_WORD *)(v128 + 8);
          v129 = sub_1C5D56C70(v121, 171, v206, v122, v123, v115, v116, v127, (uint64_t)v125, v126, v128);
          v131 = v116 & 0xFFFFFFFF00000000 | v130;
        }
        else
        {
          v129 = (uint64_t *)v112;
          v131 = v113;
        }
        if (v110)
        {
          v143 = *(_QWORD *)(*(_QWORD *)a1 + 832);
          if (v143)
            LOWORD(v143) = *(_WORD *)(v143 + 8);
          v144 = sub_1C5D56C70(*(_QWORD *)a1, 175, v206, v216, v217, v115, v116, v114, v192, v194, v143);
          v147 = *(_QWORD *)a1;
          v148 = v216;
          v149 = v217;
          v150 = *(_QWORD *)(*(_QWORD *)a1 + 832);
          if (v150)
            LOWORD(v150) = *(_WORD *)(v150 + 8);
          v151 = sub_1C5D56C70(v147, 172, v206, v216, v217, v110, v214, v146, (uint64_t)v144, v145, v150);
          v154 = *(_QWORD *)(v147 + 832);
          if (v154)
            LOWORD(v154) = *(_WORD *)(v154 + 8);
          v129 = sub_1C5D56C70(v147, 171, v206, v148, v149, (uint64_t)v129, v131, v153, (uint64_t)v151, v152, v154);
          v131 = v131 & 0xFFFFFFFF00000000 | v155;
        }
        v156 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v156)
          LOWORD(v156) = *(_WORD *)(v156 + 8);
        return sub_1C5D56C70(*(_QWORD *)a1, 171, v206, v216, v217, v210, v108, v114, (uint64_t)v129, v131, v156);
      }
      return result;
    }
    if ((v209 | v14 | v205 | v204) == 1 && !((unint64_t)v215 | v213))
    {
      if (*(unsigned __int16 *)(v62 + 24) - 198 > 3
        || *(unsigned __int16 *)(v67 + 24) - 198 > 3)
      {
        v96 = v67;
        v98 = v67;
        v99 = v66;
        v100 = v66;
        v94 = v62;
        v95 = v61;
      }
      else
      {
        v93 = *(_QWORD *)(v62 + 32);
        v94 = *(_QWORD *)v93;
        v95 = v61 & 0xFFFFFFFF00000000 | *(unsigned int *)(v93 + 8);
        v96 = v67;
        v97 = *(_QWORD *)(v67 + 32);
        v98 = *(_QWORD *)v97;
        v99 = v66;
        v100 = v66 & 0xFFFFFFFF00000000 | *(unsigned int *)(v97 + 8);
      }
      v132 = v71;
      if (((v209 | v14) & v69 & 1) == 0)
        goto LABEL_199;
      v191 = v209;
      v133 = v96;
      v134 = v96;
      v135 = v99;
      v136 = v99;
      v137 = v94;
      v138 = v98;
      v211 = v95;
      v198 = v100;
      result = sub_1C5CABB28((uint64_t *)a1, v71, v208, v62, v61, v134, v136, v72, v94, v95, v98, v100, v191, 0xB2u, 0xB3u, v206);
      if (!result)
      {
        v190 = v137;
        v189 = v138;
        v196 = v137;
        v96 = v133;
        v140 = v133;
        v141 = v138;
        v99 = v135;
        result = sub_1C5CABB28((uint64_t *)a1, v202, v200, v140, v135, v62, v61, v139, v189, v198, v190, v211, v14, 0xB3u, 0xB2u, v206);
        v132 = v71;
        v94 = v196;
        v98 = v141;
        v95 = v211;
        v100 = v198;
        if (!result)
        {
LABEL_199:
          v212 = v95;
          v197 = v94;
          v199 = v100;
          v193 = v132;
          v195 = v98;
          result = sub_1C5CABC18((uint64_t *)a1, v132, v208, v202, v200, v62, v61, v72, v96, v99, v94, v95, v98, v100, v205, 0xB4u, 0xB5u, v206);
          if (!result)
            return sub_1C5CABC18((uint64_t *)a1, v193, v208, v202, v200, v96, v99, v142, v62, v61, v195, v199, v197, v212, v204, 0xB5u, 0xB4u, v206);
        }
      }
      return result;
    }
    return 0;
  }
  if (!(_BYTE)v216)
    return 0;
  if (!*(_QWORD *)(*(_QWORD *)(a1 + 8) + 8 * v216 + 96))
    return 0;
  v76 = *(_QWORD *)(v9 + 48);
  if (!v76)
    return 0;
  v77 = v59;
  v78 = 1;
  do
  {
    if (*(_DWORD *)(v76 + 8) == (_DWORD)v8)
    {
      if (!v78)
        return 0;
      --v78;
    }
    v76 = *(_QWORD *)(v76 + 32);
  }
  while (v76);
  if (v78)
    return 0;
  v79 = *(_QWORD *)(a4 + 48);
  if (!v79)
    return 0;
  v80 = 1;
  do
  {
    if (*(_DWORD *)(v79 + 8) == (_DWORD)a5)
    {
      if (!v80)
        return 0;
      --v80;
    }
    v79 = *(_QWORD *)(v79 + 32);
  }
  while (v79);
  v203 = v64;
  if (v80)
    return 0;
  v81 = v65;
  v82 = v60;
  v222 = &off_1E81980C0;
  v223 = v57;
  v224 = &v222;
  v84 = sub_1C6364E28(v62, v61, v67, v66, (uint64_t)&v222, 0, 0);
  if (v224 == &v222)
  {
    ((void (*)(uint64_t (***)()))v222[4])(&v222);
  }
  else
  {
    if (!v224)
    {
      if (!v84)
        return 0;
      goto LABEL_157;
    }
    ((void (*)(uint64_t (***)()))(*v224)[5])(v224);
  }
  if ((v84 & 1) == 0)
    return 0;
LABEL_157:
  v157 = *(_QWORD *)(v77 + 48);
  if (v157)
  {
    v158 = 1;
    do
    {
      if (*(_DWORD *)(v157 + 8) == v82)
      {
        if (!v158)
          goto LABEL_177;
        --v158;
      }
      v157 = *(_QWORD *)(v157 + 32);
    }
    while (v157);
    if (!v158 && *(_WORD *)(v77 + 24) == 172)
    {
      v159 = *(_QWORD *)(v77 + 32);
      v160 = *(_QWORD *)v159;
      if (*(_QWORD *)v159 == v203 && *(_DWORD *)(v159 + 8) == v81)
      {
        v161 = *(_QWORD *)(v159 + 40);
        v159 += 40;
        v160 = v161;
LABEL_170:
        v162 = *(unsigned int *)(v159 + 8);
        v163 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v163)
          LOWORD(v163) = *(_WORD *)(v163 + 8);
        v165 = sub_1C5D56C70(*(_QWORD *)a1, 178, v206, v216, v217, v203, v81, v83, v62, v61, v163);
        v167 = v166;
        v168 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v168)
          LOWORD(v168) = *(_WORD *)(v168 + 8);
        v169 = sub_1C5D56C70(*(_QWORD *)a1, 175, v206, v216, v217, v160, v162, v164, v62, v61, v168);
        v172 = *(_QWORD *)(*(_QWORD *)a1 + 832);
        if (v172)
          LOWORD(v172) = *(_WORD *)(v172 + 8);
        return sub_1C5D56C70(*(_QWORD *)a1, 172, v206, v216, v217, (uint64_t)v165, v167, v171, (uint64_t)v169, v170, v172);
      }
      if (*(_QWORD *)(v159 + 40) == v203 && *(_DWORD *)(v159 + 48) == v81)
        goto LABEL_170;
    }
  }
LABEL_177:
  v173 = *(_QWORD *)(v203 + 48);
  if (!v173)
    return 0;
  v174 = 1;
  do
  {
    if (*(_DWORD *)(v173 + 8) == v81)
    {
      if (!v174)
        return 0;
      --v174;
    }
    v173 = *(_QWORD *)(v173 + 32);
  }
  while (v173);
  if (v174 || *(_WORD *)(v203 + 24) != 172)
    return 0;
  v175 = *(_QWORD *)(v203 + 32);
  v176 = *(_QWORD *)v175;
  if (*(_QWORD *)v175 == v77 && *(_DWORD *)(v175 + 8) == v82)
  {
    v177 = *(_QWORD *)(v175 + 40);
    v175 += 40;
    v176 = v177;
  }
  else if (*(_QWORD *)(v175 + 40) != v77 || *(_DWORD *)(v175 + 48) != v82)
  {
    return 0;
  }
  v178 = *(unsigned int *)(v175 + 8);
  v179 = *(_QWORD *)(*(_QWORD *)a1 + 832);
  if (v179)
    LOWORD(v179) = *(_WORD *)(v179 + 8);
  v181 = sub_1C5D56C70(*(_QWORD *)a1, 178, v206, v216, v217, v77, v82, v83, v62, v61, v179);
  v183 = v182;
  v184 = *(_QWORD *)(*(_QWORD *)a1 + 832);
  if (v184)
    LOWORD(v184) = *(_WORD *)(v184 + 8);
  v185 = sub_1C5D56C70(*(_QWORD *)a1, 177, v206, v216, v217, v176, v178, v180, v67, v66, v184);
  v188 = *(_QWORD *)(*(_QWORD *)a1 + 832);
  if (v188)
    LOWORD(v188) = *(_WORD *)(v188 + 8);
  return sub_1C5D56C70(*(_QWORD *)a1, 172, v206, v216, v217, (uint64_t)v181, v183, v187, (uint64_t)v185, v186, v188);
}

uint64_t *sub_1C5CAA8FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, llvm *a9, uint64_t a10, llvm *a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unsigned int v25;
  uint64_t v26;
  _QWORD *v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  unsigned int v36;
  uint64_t v37;
  _QWORD *v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned __int8 *v43;
  unint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t *v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  int v56;

  v13 = a9;
  if (!(_BYTE)a9)
    return (uint64_t *)v13;
  if (a9 != 1 && !*(_QWORD *)(a1 + 8 * a9 + 96))
    return 0;
  if ((*(unsigned __int8 *)(a1 + 390 * a9 + 4041) | 4) != 4)
    return 0;
  if (*(_WORD *)(a4 + 24) != 171)
    return 0;
  if (*(_WORD *)(a6 + 24) != 171)
    return 0;
  v17 = *(_QWORD *)(a4 + 48);
  if (!v17)
    return 0;
  if (*(_QWORD *)(v17 + 32))
    return 0;
  v19 = *(_QWORD *)(a6 + 48);
  if (!v19 || *(_QWORD *)(v19 + 32))
    return 0;
  v20 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a4 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a4 + 32) + 48), 0, 0);
  v21 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a6 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a6 + 32) + 48), 0, 0);
  v13 = 0;
  if (!v20)
    return (uint64_t *)v13;
  v22 = v21;
  v18 = 0;
  if (!v21)
    return v18;
  v23 = *(_QWORD *)(v20 + 80);
  v24 = (_QWORD *)(v23 + 24);
  v25 = *(_DWORD *)(v23 + 32);
  if (v25 >= 0x41)
  {
    if (v25 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v23 + 24)) > 0x40)
      return 0;
    v24 = (_QWORD *)*v24;
  }
  if (*v24 != 4278255360)
    return 0;
  v26 = *(_QWORD *)(v22 + 80);
  v27 = (_QWORD *)(v26 + 24);
  v28 = *(_DWORD *)(v26 + 32);
  if (v28 >= 0x41)
  {
    if (v28 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v26 + 24)) > 0x40)
      return 0;
    v27 = (_QWORD *)*v27;
  }
  if (*v27 != 16711935)
    return 0;
  v29 = **(_QWORD **)(a4 + 32);
  if (*(_WORD *)(v29 + 24) != 175)
    return 0;
  v30 = **(_QWORD **)(a6 + 32);
  if (*(_WORD *)(v30 + 24) != 177)
    return 0;
  v31 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(v29 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v29 + 32) + 48), 0, 0);
  v32 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(v30 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v30 + 32) + 48), 0, 0);
  v13 = 0;
  if (!v31)
    return (uint64_t *)v13;
  v33 = v32;
  v18 = 0;
  if (!v32)
    return v18;
  v34 = *(_QWORD *)(v31 + 80);
  v35 = (_QWORD *)(v34 + 24);
  v36 = *(_DWORD *)(v34 + 32);
  if (v36 >= 0x41)
  {
    if (v36 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v34 + 24)) > 0x40)
      return 0;
    v35 = (_QWORD *)*v35;
  }
  if (*v35 != 8)
    return 0;
  v37 = *(_QWORD *)(v33 + 80);
  v38 = (_QWORD *)(v37 + 24);
  v39 = *(_DWORD *)(v37 + 32);
  if (v39 >= 0x41)
  {
    if (v39 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v37 + 24)) <= 0x40)
    {
      v38 = (_QWORD *)*v38;
      goto LABEL_33;
    }
    return 0;
  }
LABEL_33:
  if (*v38 != 8)
    return 0;
  v40 = *(_QWORD *)(v29 + 32);
  v41 = *(_QWORD *)(v30 + 32);
  v42 = *(_QWORD *)v40;
  if (*(_QWORD *)v40 != *(_QWORD *)v41 || *(_DWORD *)(v40 + 8) != *(_DWORD *)(v41 + 8))
    return 0;
  v43 = *(unsigned __int8 **)(a3 + 64);
  v55 = v43;
  if (v43)
  {
    llvm::MetadataTracking::track((uint64_t)&v55, v43, 2);
    v40 = *(_QWORD *)(v29 + 32);
    v42 = *(_QWORD *)v40;
  }
  v56 = *(_DWORD *)(a3 + 60);
  v44 = *(_QWORD *)(v40 + 8);
  v45 = *(_QWORD *)(a2 + 832);
  if (v45)
    v46 = *(_WORD *)(v45 + 8);
  else
    v46 = 0;
  v48 = sub_1C5D52060(a2, 182, (const llvm::APInt *)&v55, a9, a10, v42, v44, v46);
  v50 = v49;
  v51 = sub_1C6366AB4(a2, 16, (const llvm::APInt *)&v55, a11, a12, 0, 0);
  v54 = *(_QWORD *)(a2 + 832);
  if (v54)
    LOWORD(v54) = *(_WORD *)(v54 + 8);
  v18 = sub_1C5D56C70(a2, 179, (const llvm::APInt *)&v55, a9, a10, (uint64_t)v48, v50, v53, (uint64_t)v51, v52, v54);
  if (v55)
    llvm::MetadataTracking::untrack((uint64_t)&v55, v55);
  return v18;
}

uint64_t sub_1C5CAAC70(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  int v5;
  uint64_t result;
  uint64_t *v7;
  uint64_t v8;
  _QWORD *v9;
  unsigned int v10;
  uint64_t v11;

  v5 = *(unsigned __int16 *)(a1 + 24);
  if (v5 == 177)
  {
    v7 = *(uint64_t **)(a1 + 32);
    if (*(_WORD *)(*v7 + 24) == 182)
    {
      result = sub_1C5D4F7E8(v7[5], v7[6], 0, 0);
      if (!result)
        return result;
      v8 = *(_QWORD *)(result + 80);
      v9 = (_QWORD *)(v8 + 24);
      v10 = *(_DWORD *)(v8 + 32);
      if (v10 >= 0x41)
      {
        if (v10 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v8 + 24)) > 0x40)
          return 0;
        v9 = (_QWORD *)*v9;
      }
      if (*v9 == 16)
      {
        v11 = **(_QWORD **)(**(_QWORD **)(a1 + 32) + 32);
        *a3 = v11;
        a3[1] = v11;
        return 1;
      }
    }
    return 0;
  }
  if (v5 != 172)
    return 0;
  result = sub_1C5CAAD64(**(_QWORD **)(a1 + 32), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8), (uint64_t)a3);
  if ((_DWORD)result)
    return sub_1C5CAAD64(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48), (uint64_t)a3);
  return result;
}

uint64_t sub_1C5CAAD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t result;
  int v5;
  _QWORD *v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  BOOL v25;
  uint64_t v26;
  int v27;
  int v29;
  uint64_t v30;
  _QWORD *v31;

  v3 = *(_QWORD *)(a1 + 48);
  if (!v3 || *(_QWORD *)(v3 + 32))
    return 0;
  v5 = *(unsigned __int16 *)(a1 + 24);
  if ((v5 - 171) > 6 || ((1 << (v5 + 85)) & 0x51) == 0)
    return 0;
  v7 = *(_QWORD **)(a1 + 32);
  v8 = *v7;
  v9 = *(unsigned __int16 *)(*v7 + 24);
  if ((v9 - 171) > 6 || ((1 << (v9 + 85)) & 0x51) == 0)
    return 0;
  if (v5 == 171)
  {
    v11 = v7[5];
    v12 = *(unsigned __int16 *)(v11 + 24);
    if (v12 != 11 && v12 != 35)
      return 0;
  }
  else
  {
    if (v9 != 171)
      return 0;
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 32) + 40);
    v13 = *(unsigned __int16 *)(v11 + 24);
    if (v13 != 35 && v13 != 11)
      return 0;
  }
  v15 = *(_QWORD *)(v11 + 80);
  v16 = (uint64_t *)(v15 + 24);
  if (*(_DWORD *)(v15 + 32) >= 0x41u)
    v16 = (uint64_t *)*v16;
  result = 0;
  v17 = *v16;
  if (v17 <= 65534)
  {
    if (v17 == 255)
    {
      v21 = 0;
      v20 = 1;
      v18 = 1;
      v22 = 0;
      v23 = 1;
      v19 = 1;
    }
    else
    {
      if (v17 != 65280)
        return result;
      v20 = 0;
      v19 = 0;
      LODWORD(result) = 0;
      v18 = 1;
      v22 = 1;
      v23 = 1;
      v21 = 1;
    }
  }
  else
  {
    switch(v17)
    {
      case 65535:
        v20 = 0;
        v25 = v5 == 171 && v9 == 175;
        v21 = 1;
        v18 = 1;
        v22 = 1;
        v23 = 1;
        v19 = 0;
        result = 0;
        if (v5 != 177 && !v25)
          return result;
        break;
      case 16711680:
        v23 = 0;
        v19 = 0;
        v20 = 1;
        v21 = 2;
        v18 = 1;
        v22 = 1;
        LODWORD(result) = 1;
        break;
      case 4278190080:
        v18 = 0;
        v19 = 0;
        LODWORD(result) = 0;
        v20 = 1;
        v21 = 3;
        v22 = 1;
        v23 = 1;
        break;
      default:
        return result;
    }
  }
  if (v5 == 171)
  {
    if ((v19 | result) == 1)
    {
      if (v9 == 177)
      {
LABEL_51:
        v26 = *(_QWORD *)(*(_QWORD *)(v8 + 32) + 40);
        v27 = *(unsigned __int16 *)(v26 + 24);
        if (v27 != 35 && v27 != 11)
          return 0;
        goto LABEL_59;
      }
    }
    else if (v9 == 175)
    {
      goto LABEL_51;
    }
    return 0;
  }
  if (v5 == 175)
  {
    if ((v22 & v23 & 1) != 0)
      return 0;
  }
  else if ((v20 & v18 & 1) != 0)
  {
    return 0;
  }
  v26 = v7[5];
  v29 = *(unsigned __int16 *)(v26 + 24);
  if (v29 != 35 && v29 != 11)
    return 0;
LABEL_59:
  v30 = *(_QWORD *)(v26 + 80);
  v31 = (_QWORD *)(v30 + 24);
  if (*(_DWORD *)(v30 + 32) >= 0x41u)
    v31 = (_QWORD *)*v31;
  if (*v31 != 8 || *(_QWORD *)(a3 + 8 * v21))
    return 0;
  *(_QWORD *)(a3 + 8 * v21) = **(_QWORD **)(v8 + 32);
  return 1;
}

void sub_1C5CAAFD8()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CAAFEC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E8198078;
  return result;
}

void sub_1C5CAB010(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E8198078;
}

uint64_t sub_1C5CAB028(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  BOOL v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;

  v3 = *a3;
  if (*(_QWORD *)a2)
    v4 = v3 == 0;
  else
    v4 = 1;
  if (v4)
    return 1;
  v6 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v7 = *(_QWORD *)(v3 + 80);
  v8 = *(unsigned int *)(v6 + 32);
  if (v8 <= 0x40)
    return (*(_QWORD *)(v7 + 24) & *(_QWORD *)(v6 + 24)) != 0;
  v9 = *(uint64_t **)(v6 + 24);
  v10 = *(uint64_t **)(v7 + 24);
  v11 = ((unint64_t)(v8 + 63) >> 6) - 1;
  do
  {
    v13 = *v9++;
    v12 = v13;
    v14 = *v10++;
    v15 = v14 & v12;
    result = v15 != 0;
    if (v15)
      v16 = 1;
    else
      v16 = v11 == 0;
    --v11;
  }
  while (!v16);
  return result;
}

uint64_t *sub_1C5CAB0A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, const llvm::APInt *a7)
{
  uint64_t v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  int v20;
  uint64_t *v22;
  uint64_t v23;
  int v24;
  int v25;
  BOOL v26;
  BOOL v27;
  int v28;
  _BOOL4 v29;
  _BOOL4 v30;
  int v31;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  llvm::APInt *v41;
  unsigned int v42;
  BOOL v43;
  uint64_t v44;
  llvm::APInt *v45;
  llvm::Type *v46;
  unsigned int v47;
  __int128 v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  int v54;
  char v55;
  uint64_t v56;
  llvm::APInt *v57;
  unsigned int v58;
  BOOL v59;
  uint64_t v60;
  int v61;
  uint64_t v63;
  llvm::APInt *v64;
  unsigned int v65;
  uint64_t v66;
  unsigned int v68;
  uint64_t v69;
  const void **v70;
  unsigned int v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  llvm::APInt *v76;
  const void **v77;
  const void *v78;
  unint64_t v79;
  uint64_t v80;
  unsigned int v81;
  _QWORD *v82;
  _QWORD *v83;
  int v84;
  int64_t v85;
  unint64_t v87;
  unsigned int v88;
  unsigned int v89;
  unint64_t v90;
  unsigned int v91;
  unint64_t v92;
  unint64_t v93;
  void *v94;
  BOOL v95;
  int v96;
  uint64_t *v97;
  uint64_t v98;
  llvm *v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t *v106;
  llvm::APInt *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  unint64_t v111;
  _BOOL4 v112;
  unint64_t v113;
  uint64_t v114;
  unsigned int v115;
  uint64_t v116;
  const llvm::APInt *v117;
  llvm::Type *v118;
  _QWORD *v119;
  unsigned int v120;
  void *v121;
  unsigned int v122;
  unint64_t v123;
  unsigned int v124;
  void *__s1;
  unsigned int v126;
  llvm::APInt *v127;
  unsigned int v128;
  void *v129;
  unsigned int v130;
  void *v131;
  unsigned int v132;
  uint64_t v133[4];

  v10 = sub_1C5CAC1F4(a1, a4, a5, a6);
  v12 = v11;
  v13 = *(uint64_t **)(a2 + 32);
  v14 = *v13;
  v15 = v13[1];
  *(_OWORD *)v133 = *(_OWORD *)(*(_QWORD *)(*v13 + 40) + 16 * v15);
  v16 = sub_1C5D4F7E8(v13[5], v13[6], 0, 0);
  v19 = v16;
  v20 = *(unsigned __int16 *)(a2 + 24);
  if (v20 != 177 || v16 == 0)
  {
LABEL_15:
    if (v20 == 175)
    {
      v117 = a7;
      v28 = *(unsigned __int16 *)(v10 + 24);
      v29 = v28 == 60;
      if (v28 == 177 || v28 == 60)
        v31 = 177;
      else
        v31 = 0;
      if (v28 != 177 && v28 != 60)
        return 0;
    }
    else
    {
      if (v20 != 177)
        return 0;
      v117 = a7;
      v28 = *(unsigned __int16 *)(v10 + 24);
      v29 = v28 == 58;
      v30 = v28 == 175 || v28 == 58;
      v31 = v30 ? 175 : 0;
      if (v28 != 58 && v28 != 175)
        return 0;
    }
    if (*(unsigned __int16 *)(v14 + 24) == v28)
    {
      v33 = *(_QWORD *)(v14 + 32);
      v34 = *(_QWORD *)(v10 + 32);
      if (*(_QWORD *)v33 == *(_QWORD *)v34 && *(_DWORD *)(v33 + 8) == *(_DWORD *)(v34 + 8))
      {
        v35 = (unsigned __int8 *)(*(_QWORD *)(v10 + 40) + 16 * v12);
        if (LOBYTE(v133[0]) == *v35 && (LOBYTE(v133[0]) || v133[1] == *((_QWORD *)v35 + 1)))
        {
          v116 = sub_1C5D4F7E8(*(_QWORD *)(v33 + 40), *(_QWORD *)(v33 + 48), 0, 0);
          v36 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(v10 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v10 + 32) + 48), 0, 0);
          if (v19)
          {
            v39 = v36;
            v40 = *(_QWORD *)(v19 + 80);
            v41 = (llvm::APInt *)(v40 + 24);
            v42 = *(_DWORD *)(v40 + 32);
            if (v42 > 0x40)
            {
              v114 = v39;
              v54 = llvm::APInt::countLeadingZerosSlowCase(v41);
              v39 = v114;
              v43 = v54 == v42;
            }
            else
            {
              v43 = *(_QWORD *)v41 == 0;
            }
            v55 = v43;
            if ((v55 & 1) != 0)
              return 0;
            v115 = v31;
            v53 = 0;
            if (!v116)
              return v53;
            v56 = *(_QWORD *)(v116 + 80);
            v57 = (llvm::APInt *)(v56 + 24);
            v58 = *(_DWORD *)(v56 + 32);
            if (v58 > 0x40)
            {
              v60 = v39;
              v61 = llvm::APInt::countLeadingZerosSlowCase(v57);
              v39 = v60;
              v59 = v61 == v58;
            }
            else
            {
              v59 = *(_QWORD *)v57 == 0;
            }
            if (v59)
              return 0;
            v53 = 0;
            if (!v39)
              return v53;
            v63 = *(_QWORD *)(v39 + 80);
            v64 = (llvm::APInt *)(v63 + 24);
            v65 = *(_DWORD *)(v63 + 32);
            v66 = v39;
            if (v65 > 0x40)
            {
              if (llvm::APInt::countLeadingZerosSlowCase(v64) == v65)
                return 0;
            }
            else if (!*(_QWORD *)v64)
            {
              return 0;
            }
            v68 = sub_1C6131328((unsigned __int8 *)v133, v37, v38);
            v69 = *(_QWORD *)(v19 + 80);
            v70 = (const void **)(v69 + 24);
            v113 = v68;
            v71 = *(_DWORD *)(v69 + 32);
            if (v71 >= 0x41)
            {
              if (v71 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v69 + 24)) <= 0x40
                && *(_QWORD *)*v70 <= v113)
              {
                v130 = v71;
                v129 = (void *)operator new[]();
                memcpy(v129, *v70, (((unint64_t)v71 + 63) >> 3) & 0x3FFFFFF8);
                llvm::APInt::flipAllBitsSlowCase((uint64_t)&v129);
LABEL_80:
                llvm::APInt::operator++((uint64_t)&v129);
                llvm::APInt::operator+=((uint64_t)&v129, v113);
                v132 = v130;
                v131 = v129;
                v130 = 0;
                v74 = *(_QWORD *)(v66 + 80);
                v128 = *(_DWORD *)(v74 + 32);
                if (v128 > 0x40)
                {
                  v127 = (llvm::APInt *)operator new[]();
                  memcpy(v127, *(const void **)(v74 + 24), (((unint64_t)v128 + 63) >> 3) & 0x3FFFFFF8);
                }
                else
                {
                  v127 = *(llvm::APInt **)(v74 + 24);
                }
                v75 = *(_QWORD *)(v116 + 80);
                v126 = *(_DWORD *)(v75 + 32);
                if (v126 > 0x40)
                {
                  __s1 = (void *)operator new[]();
                  memcpy(__s1, *(const void **)(v75 + 24), (((unint64_t)v126 + 63) >> 3) & 0x3FFFFFF8);
                }
                else
                {
                  __s1 = *(void **)(v75 + 24);
                }
                sub_1C5CAC260((llvm::APInt *)&v127, (llvm::APInt *)&__s1, 0);
                if (!v29)
                {
                  if (v132 >= v128)
                  {
                    if (v132 > v128)
                    {
                      llvm::APInt::trunc((llvm::APInt *)&v131, v128, (llvm::APInt *)&v123);
                    }
                    else
                    {
                      v124 = v132;
                      if (v132 > 0x40)
                      {
                        v123 = operator new[]();
                        memcpy((void *)v123, v131, (((unint64_t)v124 + 63) >> 3) & 0x3FFFFFF8);
                      }
                      else
                      {
                        v123 = (unint64_t)v131;
                      }
                    }
                  }
                  else
                  {
                    llvm::APInt::zext((llvm::APInt *)&v131, v128, (uint64_t)&v123);
                  }
                  if (v124 > 0x40)
                  {
                    llvm::APInt::flipAllBitsSlowCase((uint64_t)&v123);
                  }
                  else
                  {
                    if (v124)
                      v90 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v124;
                    else
                      v90 = 0;
                    v123 = v90 & ~v123;
                  }
                  llvm::APInt::operator++((uint64_t)&v123);
                  v91 = v124;
                  if (v124 >= 0x41)
                  {
                    v105 = 0;
                    v106 = (unint64_t *)v123;
                    v107 = v127;
                    v108 = ((unint64_t)v124 + 63) >> 6;
                    v109 = v108;
                    do
                    {
                      v110 = *(_QWORD *)v107;
                      v107 = (llvm::APInt *)((char *)v107 + 8);
                      v111 = v110 + *v106;
                      v112 = v111 + 1 <= *v106;
                      if (v105)
                      {
                        ++v111;
                        v105 = v112;
                      }
                      else
                      {
                        v105 = v111 < *v106;
                      }
                      *v106++ = v111;
                      --v109;
                    }
                    while (v109);
                    *(_QWORD *)(v123 + 8 * (v108 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v91;
                    v91 = v124;
                    v94 = (void *)v123;
                  }
                  else
                  {
                    v92 = (unint64_t)v127 + v123;
                    if (v124)
                      v93 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v124;
                    else
                      v93 = 0;
                    v94 = (void *)(v93 & v92);
                    v123 = v93 & v92;
                  }
                  v124 = 0;
                  if (v126 > 0x40)
                    v95 = memcmp(__s1, v94, (((unint64_t)v126 + 63) >> 3) & 0x3FFFFFF8) == 0;
                  else
                    v95 = __s1 == v94;
                  v96 = v95;
                  if (v91 >= 0x41)
                  {
                    if (v94)
                    {
                      MEMORY[0x1CAA32F9C](v94, 0x1000C8000313F17);
                      if (v124 >= 0x41)
                      {
                        if (v123)
                          MEMORY[0x1CAA32F9C](v123, 0x1000C8000313F17);
                      }
                    }
                  }
                  if (!v96)
                    goto LABEL_138;
LABEL_158:
                  v97 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 40)
                                  + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 48));
                  v98 = *(_QWORD *)(v10 + 40) + 16 * v12;
                  v99 = *(llvm **)v98;
                  v100 = *(_QWORD *)(v98 + 8);
                  v101 = sub_1C63666FC(a1, (llvm::LLVMContext *)&v131, v117, *v97, v97[1], 0, 0);
                  v104 = *(_QWORD *)(a1 + 832);
                  if (v104)
                    LOWORD(v104) = *(_WORD *)(v104 + 8);
                  v53 = sub_1C5D56C70(a1, v115, v117, v99, v100, v14, v15, v103, v101, v102, v104);
                  goto LABEL_139;
                }
                v77 = (const void **)&v131;
                if (v132 >= 0x41)
                  v77 = (const void **)v131;
                v78 = *v77;
                v124 = v128;
                if (v128 > 0x40)
                {
                  llvm::APInt::initSlowCase((llvm::APInt *)&v123, 0, 0);
                  v80 = 1 << (char)v78;
                  if (v124 > 0x40)
                  {
                    *(_QWORD *)(v123 + 8 * (v78 >> 6)) |= v80;
LABEL_92:
                    v122 = 1;
                    v121 = 0;
                    v120 = 1;
                    v119 = 0;
                    llvm::APInt::udivrem(&v127, (const llvm::APInt *)&v123, (const llvm::APInt *)&v121, (llvm::APInt *)&v119, v76);
                    v81 = v120;
                    v82 = v119;
                    v83 = v119;
                    if (v120 >= 0x41)
                    {
                      v84 = 0;
                      v85 = ((unint64_t)v120 + 63) >> 6;
                      do
                      {
                        if (v85-- < 1)
                          break;
                        v87 = v119[v85];
                        v84 += __clz(v87);
                      }
                      while (!v87);
                      v88 = v120 | 0xFFFFFFC0;
                      if ((v120 & 0x3F) == 0)
                        v88 = 0;
                      if (v120 - v84 - v88 > 0x40)
                        goto LABEL_104;
                      v83 = (_QWORD *)*v119;
                    }
                    if (!v83)
                    {
                      v89 = v122;
                      if (v122 <= 0x40)
                      {
                        if (v121 != __s1)
                          goto LABEL_103;
                        goto LABEL_149;
                      }
                      if (!memcmp(v121, __s1, (((unint64_t)v122 + 63) >> 3) & 0x3FFFFFF8))
                      {
LABEL_149:
                        if (v81 >= 0x41 && v82)
                        {
                          MEMORY[0x1CAA32F9C](v82, 0x1000C8000313F17);
                          v89 = v122;
                        }
                        if (v89 >= 0x41 && v121)
                          MEMORY[0x1CAA32F9C](v121, 0x1000C8000313F17);
                        if (v124 >= 0x41 && v123)
                          MEMORY[0x1CAA32F9C](v123, 0x1000C8000313F17);
                        goto LABEL_158;
                      }
                    }
LABEL_103:
                    if (v81 < 0x41)
                    {
LABEL_106:
                      if (v122 >= 0x41 && v121)
                        MEMORY[0x1CAA32F9C](v121, 0x1000C8000313F17);
                      if (v124 >= 0x41 && v123)
                        MEMORY[0x1CAA32F9C](v123, 0x1000C8000313F17);
LABEL_138:
                      v53 = 0;
LABEL_139:
                      if (v126 >= 0x41 && __s1)
                        MEMORY[0x1CAA32F9C](__s1, 0x1000C8000313F17);
                      if (v128 >= 0x41 && v127)
                        MEMORY[0x1CAA32F9C](v127, 0x1000C8000313F17);
                      if (v132 >= 0x41 && v131)
                        MEMORY[0x1CAA32F9C](v131, 0x1000C8000313F17);
                      return v53;
                    }
LABEL_104:
                    if (v82)
                      MEMORY[0x1CAA32F9C](v82, 0x1000C8000313F17);
                    goto LABEL_106;
                  }
                  v79 = v123;
                }
                else
                {
                  v79 = 0;
                  v80 = 1 << (char)v78;
                }
                v123 = v79 | v80;
                goto LABEL_92;
              }
            }
            else if ((unint64_t)*v70 <= v68)
            {
              v72 = (unint64_t)*v70;
              v130 = *(_DWORD *)(v69 + 32);
              if (v71)
                v73 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v71;
              else
                v73 = 0;
              v129 = (void *)(v73 & ~v72);
              goto LABEL_80;
            }
          }
        }
      }
    }
    return 0;
  }
  if (*(_WORD *)(v10 + 24) != 56
    || (v22 = *(uint64_t **)(v10 + 32), v23 = *v22, *v22 != v22[5])
    || ((v24 = *((_DWORD *)v22 + 2), v25 = *((_DWORD *)v22 + 12), v24 == (_DWORD)v15) ? (v26 = v23 == v14) : (v26 = 0),
        v26 ? (v27 = v24 == v25) : (v27 = 0),
        !v27))
  {
LABEL_14:
    v20 = *(unsigned __int16 *)(a2 + 24);
    goto LABEL_15;
  }
  v44 = *(_QWORD *)(v16 + 80);
  v45 = (llvm::APInt *)(v44 + 24);
  v46 = sub_1C6131328((unsigned __int8 *)v133, v17, v18);
  v47 = *(_DWORD *)(v44 + 32);
  if (v47 >= 0x41)
  {
    v118 = v46;
    if (v47 - llvm::APInt::countLeadingZerosSlowCase(v45) > 0x40)
      goto LABEL_14;
    v45 = *(llvm::APInt **)v45;
    v46 = v118;
  }
  if (*(llvm::Type **)v45 != (llvm::Type *)((char *)v46 - 1))
    goto LABEL_14;
  v48 = *(_OWORD *)v133;
  v49 = sub_1C6366C2C(a1, 1, v133[0], v133[1], a7, 1);
  v52 = *(_QWORD *)(a1 + 832);
  if (v52)
    LOWORD(v52) = *(_WORD *)(v52 + 8);
  return sub_1C5D56C70(a1, 175, a7, (llvm *)v48, *((uint64_t *)&v48 + 1), v14, v15, v51, (uint64_t)v49, v50, v52);
}

uint64_t *sub_1C5CABB28(uint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, char a13, unsigned int a14, unsigned int a15, const llvm::APInt *a16)
{
  unsigned int v22;
  int8x8_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int128 v32;

  v32 = *(_OWORD *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  v22 = sub_1C6131328((unsigned __int8 *)&v32, a2, a3);
  if (!sub_1C5CAC568(a9, a10, a11, v23, a12, v22, *a1, 1))
    return 0;
  v25 = *a1;
  if (a13)
    v26 = a14;
  else
    v26 = a15;
  if (a13)
    v27 = a4;
  else
    v27 = a6;
  v28 = a7;
  if (a13)
    v28 = a5;
  v29 = *(_QWORD *)(v25 + 832);
  if (v29)
    LOWORD(v29) = *(_WORD *)(v29 + 8);
  return sub_1C5D56C70(v25, v26, a16, (llvm *)v32, *((uint64_t *)&v32 + 1), a2, a3, v24, v27, v28, v29);
}

uint64_t *sub_1C5CABC18(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, char a15, unsigned int a16, unsigned int a17, const llvm::APInt *a18)
{
  unsigned int v23;
  int8x8_t v24;
  unsigned int v25;
  BOOL v26;
  int v27;
  uint64_t v28;
  int8x8_t v29;
  uint64_t v30;
  uint64_t v31;
  llvm *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const llvm::APInt *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *result;
  uint8x8_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  unsigned int v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unsigned int v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int16 v83;
  uint64_t *v84;
  uint64_t v86;
  __int128 v88;

  v88 = *(_OWORD *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  v23 = sub_1C6131328((unsigned __int8 *)&v88, a2, a3);
  v86 = a2;
  v26 = a2 == a4;
  v25 = v23;
  v26 = v26 && (_DWORD)a3 == (_DWORD)a5;
  v27 = v26;
  if (sub_1C5CAC568(a11, a12, a13, v24, a14, v23, *a1, v27))
  {
    v30 = *a1;
    if (a15)
      v31 = a16;
    else
      v31 = a17;
    v33 = *((_QWORD *)&v88 + 1);
    v32 = (llvm *)v88;
    v34 = a6;
    if (!a15)
      v34 = a9;
    v35 = a7;
    if (!a15)
      v35 = a10;
    v36 = *(_QWORD *)(v30 + 832);
    if (v36)
      LOWORD(v36) = *(_WORD *)(v36 + 8);
    v37 = a18;
    v38 = v86;
    v82 = v35;
    v83 = v36;
    v81 = v34;
    v79 = a4;
    v80 = a5;
    v39 = a3;
    return sub_1C5D58E08(v30, (const char *)v31, v37, v32, v33, v38, v39, v28, v79, v80, v81, v82, SHIDWORD(v82), v83);
  }
  v84 = a1;
  if (a16 != 180 || !v25)
    return 0;
  v29.i32[0] = v25;
  v41 = (uint8x8_t)vcnt_s8(v29);
  v41.i16[0] = vaddlv_u8(v41);
  result = 0;
  if (v41.i32[0] > 1u)
    return result;
  if (*(_WORD *)(a4 + 24) == 177)
  {
    v42 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a4 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a4 + 32) + 48), 0, 0);
    if (v42)
    {
      v43 = *(_QWORD *)(v42 + 80);
      v44 = (_QWORD *)(v43 + 24);
      v45 = *(_DWORD *)(v43 + 32);
      if (v45 >= 0x41)
      {
        if (v45 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v43 + 24)) > 0x40)
          goto LABEL_43;
        v44 = (_QWORD *)*v44;
      }
      if (*v44 == 1 && *(_WORD *)(a13 + 24) == 173)
      {
        v46 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a13 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a13 + 32) + 48), 0, 0);
        if (v46)
        {
          v48 = *(_QWORD *)(v46 + 80);
          v49 = (_QWORD *)(v48 + 24);
          v50 = *(_DWORD *)(v48 + 32);
          if (v50 >= 0x41)
          {
            if (v50 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v48 + 24)) > 0x40)
              goto LABEL_43;
            v49 = (_QWORD *)*v49;
          }
          if (*v49 == v25 - 1)
          {
            v51 = *(_QWORD *)(a13 + 32);
            if (*(_QWORD *)v51 == a11 && *(_DWORD *)(v51 + 8) == a12)
            {
              if ((_BYTE)v88)
              {
                v52 = a1[1];
                if ((v88 == 1 || *(_QWORD *)(v52 + 8 * v88 + 96))
                  && (*(unsigned __int8 *)(v52 + 390 * v88 + 4042) | 4) == 4)
                {
                  v53 = *(uint64_t **)(a4 + 32);
                  v54 = *v53;
                  v55 = v53[1];
                  v56 = *(_QWORD *)(*a1 + 832);
                  if (v56)
                    LOWORD(v56) = *(_WORD *)(v56 + 8);
                  return sub_1C5D58E08(*a1, (const char *)0xB4, a18, (llvm *)v88, *((uint64_t *)&v88 + 1), v86, a3, v47, v54, v55, a6, a7, SHIDWORD(a7), v56);
                }
              }
            }
          }
        }
      }
    }
  }
LABEL_43:
  v57 = *(unsigned __int16 *)(v86 + 24);
  if (v57 == 175)
  {
    v58 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(v86 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v86 + 32) + 48), 0, 0);
    if (v58)
    {
      v59 = *(_QWORD *)(v58 + 80);
      v60 = (_QWORD *)(v59 + 24);
      v61 = *(_DWORD *)(v59 + 32);
      if (v61 >= 0x41)
      {
        if (v61 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v59 + 24)) > 0x40)
          goto LABEL_65;
        v60 = (_QWORD *)*v60;
      }
      if (*v60 == 1 && *(_WORD *)(a11 + 24) == 173)
      {
        v62 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a11 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a11 + 32) + 48), 0, 0);
        if (v62)
        {
          v63 = *(_QWORD *)(v62 + 80);
          v64 = (_QWORD *)(v63 + 24);
          v65 = *(_DWORD *)(v63 + 32);
          if (v65 < 0x41)
          {
            v66 = a4;
            goto LABEL_55;
          }
          if (v65 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v63 + 24)) <= 0x40)
          {
            v66 = a4;
            v64 = (_QWORD *)*v64;
LABEL_55:
            if (*v64 == v25 - 1)
            {
              v67 = *(_QWORD *)(a11 + 32);
              if (*(_QWORD *)v67 == a13 && *(_DWORD *)(v67 + 8) == (_DWORD)a14)
              {
                v32 = (llvm *)v88;
                if ((_BYTE)v88)
                {
                  v68 = v84[1];
                  if ((v88 == 1 || *(_QWORD *)(v68 + 8 * v88 + 96))
                    && (*(unsigned __int8 *)(v68 + 390 * v88 + 4043) | 4) == 4)
                  {
                    v30 = *v84;
                    v33 = *((_QWORD *)&v88 + 1);
                    v69 = *(uint64_t **)(v86 + 32);
                    v38 = *v69;
                    v39 = v69[1];
                    v70 = *(_QWORD *)(*v84 + 832);
                    if (v70)
                      LOWORD(v70) = *(_WORD *)(v70 + 8);
                    v37 = a18;
                    v82 = a10;
                    v83 = v70;
                    v80 = a5;
                    v81 = a9;
                    v79 = v66;
LABEL_87:
                    v31 = 181;
                    return sub_1C5D58E08(v30, (const char *)v31, v37, v32, v33, v38, v39, v28, v79, v80, v81, v82, SHIDWORD(v82), v83);
                  }
                }
              }
            }
          }
        }
      }
    }
LABEL_65:
    v57 = *(unsigned __int16 *)(v86 + 24);
  }
  if (v57 != 56)
    return 0;
  v71 = *(_QWORD *)(v86 + 32);
  if (*(_QWORD *)v71 != *(_QWORD *)(v71 + 40)
    || *(_DWORD *)(v71 + 8) != *(_DWORD *)(v71 + 48)
    || *(_WORD *)(a11 + 24) != 173)
  {
    return 0;
  }
  result = (uint64_t *)sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a11 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a11 + 32) + 48), 0, 0);
  if (!result)
    return result;
  v72 = result[10];
  v73 = (_QWORD *)(v72 + 24);
  v74 = *(_DWORD *)(v72 + 32);
  if (v74 >= 0x41)
  {
    if (v74 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v72 + 24)) > 0x40)
      return 0;
    v73 = (_QWORD *)*v73;
  }
  if (*v73 != v25 - 1)
    return 0;
  v75 = *(_QWORD *)(a11 + 32);
  if (*(_QWORD *)v75 != a13 || *(_DWORD *)(v75 + 8) != (_DWORD)a14)
    return 0;
  v32 = (llvm *)v88;
  if (!(_BYTE)v88)
    return (uint64_t *)v88;
  v76 = v84[1];
  if (v88 == 1 || (result = 0, *(_QWORD *)(v76 + 8 * v88 + 96)))
  {
    if ((*(unsigned __int8 *)(v76 + 390 * v88 + 4043) | 4) == 4)
    {
      v30 = *v84;
      v33 = *((_QWORD *)&v88 + 1);
      v77 = *(uint64_t **)(v86 + 32);
      v38 = *v77;
      v39 = v77[1];
      v78 = *(_QWORD *)(*v84 + 832);
      if (v78)
        LOWORD(v78) = *(_WORD *)(v78 + 8);
      v37 = a18;
      v83 = v78;
      v81 = a9;
      v82 = a10;
      v79 = a4;
      v80 = a5;
      goto LABEL_87;
    }
    return 0;
  }
  return result;
}

uint64_t sub_1C5CAC1F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;

  v4 = a2;
  if (*(_WORD *)(a2 + 24) == 171 && sub_1C5D583CC(a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40)))
  {
    v6 = *(_QWORD *)(v4 + 32);
    v7 = *(_QWORD *)(v6 + 40);
    *(_DWORD *)(a4 + 8) = *(_DWORD *)(v6 + 48);
    *(_QWORD *)a4 = v7;
    return **(_QWORD **)(v4 + 32);
  }
  return v4;
}

void sub_1C5CAC260(llvm::APInt *this, llvm::APInt *a2, int a3)
{
  unsigned int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  int v9;

  v5 = *((_DWORD *)this + 2);
  v6 = *((_DWORD *)a2 + 2);
  if (v5 > v6)
    v6 = *((_DWORD *)this + 2);
  v7 = v6 + a3;
  if (v5 < v6 + a3)
    llvm::APInt::zext(this, v6 + a3, (uint64_t)&v8);
  else
    sub_1C5DD14E0((uint64_t)&v8, (uint64_t)this);
  if (*((_DWORD *)this + 2) >= 0x41u && *(_QWORD *)this)
    MEMORY[0x1CAA32F9C](*(_QWORD *)this, 0x1000C8000313F17);
  *(_QWORD *)this = v8;
  *((_DWORD *)this + 2) = v9;
  if (*((_DWORD *)a2 + 2) < v7)
    llvm::APInt::zext(a2, v7, (uint64_t)&v8);
  else
    sub_1C5DD14E0((uint64_t)&v8, (uint64_t)a2);
  if (*((_DWORD *)a2 + 2) >= 0x41u && *(_QWORD *)a2)
    MEMORY[0x1CAA32F9C](*(_QWORD *)a2, 0x1000C8000313F17);
  *(_QWORD *)a2 = v8;
  *((_DWORD *)a2 + 2) = v9;
}

void sub_1C5CAC36C()
{
  JUMPOUT(0x1CAA32FC0);
}

_DWORD *sub_1C5CAC380(uint64_t a1)
{
  _DWORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_1E81980C0;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_1C5CAC3B8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_1E81980C0;
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 8);
  return result;
}

BOOL sub_1C5CAC3D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _BOOL8 v8;
  _QWORD *v9;
  uint64_t v10;
  _BOOL8 v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  _BOOL4 v16;
  _BOOL4 v17;
  int v18;
  uint64_t v19;
  unint64_t v21;
  int v22;

  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  if (v6 >= 0x41)
  {
    v9 = (_QWORD *)operator new[]();
    memcpy(v9, *(const void **)(v5 + 24), ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8);
    v10 = 0;
    v11 = 0;
    v12 = *(_QWORD *)(*(_QWORD *)(v4 + 80) + 24);
    v13 = (unint64_t)(v6 + 63) >> 6;
    do
    {
      v14 = v9[v10];
      v15 = *(_QWORD *)(v12 + v10 * 8) + v14;
      v16 = v15 < v14;
      v17 = v15 + 1 <= v14;
      if (v11)
      {
        ++v15;
        v11 = v17;
      }
      else
      {
        v11 = v16;
      }
      v9[v10++] = v15;
    }
    while (v13 != v10);
    v18 = 0;
    v9[(v13 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v6;
    v19 = *(unsigned int *)(a1 + 8);
    do
    {
      if (v13-- < 1)
        break;
      v21 = v9[v13];
      v18 += __clz(v21);
    }
    while (!v21);
    v8 = 0;
    v22 = v6 | 0xFFFFFFC0;
    if ((v6 & 0x3F) == 0)
      v22 = 0;
    if ((v6 - v18 - v22) <= 0x40)
      v8 = *v9 == v19;
    MEMORY[0x1CAA32F9C](v9, 0x1000C8000313F17);
  }
  else
  {
    v7 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v6;
    if (!(_DWORD)v6)
      v7 = 0;
    return (v7 & (*(_QWORD *)(*(_QWORD *)(v4 + 80) + 24) + *(_QWORD *)(v5 + 24))) == *(unsigned int *)(a1 + 8);
  }
  return v8;
}

uint64_t sub_1C5CAC568(uint64_t a1, int a2, uint64_t a3, int8x8_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8)
{
  uint64_t v10;
  uint8x8_t v13;
  BOOL v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unsigned int v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  const void **v38;
  uint64_t v39;
  size_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  unsigned int v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  unint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  _BOOL4 v56;
  char *v57;
  const void *v58;
  size_t v59;
  uint64_t v60;
  char *v61;
  unsigned int v62;
  uint64_t *v63;
  void **p_dst;
  int v65;
  int64_t v66;
  BOOL v67;
  unint64_t v68;
  int v69;
  unsigned int v70;
  _QWORD *v71;
  int64_t v72;
  uint64_t *v73;
  int64_t v74;
  uint64_t v75;
  int v76;
  unint64_t v77;
  unsigned int v78;
  _BOOL8 v79;
  unint64_t v80;
  unsigned int v81;
  void *__dst;
  unsigned int v83;
  uint64_t v84;
  unsigned int v85;

  v10 = a3;
  if (!a8
    || ((a4.i32[0] = a6, v13 = (uint8x8_t)vcnt_s8(a4), v13.i16[0] = vaddlv_u8(v13), *(_WORD *)(a3 + 24) == 171)
      ? (v14 = v13.i32[0] == 1)
      : (v14 = 0),
        !v14
     || (v15 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a3 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a3 + 32) + 48), 0, 0)) == 0))
  {
    v16 = 0;
    goto LABEL_9;
  }
  v36 = v15;
  sub_1C6368768(a7, **(_QWORD **)(v10 + 32), *(_QWORD *)(*(_QWORD *)(v10 + 32) + 8), 0, (uint64_t)&__dst);
  v16 = __clz(a6) ^ 0x1F;
  v37 = *(_QWORD *)(v36 + 80);
  v38 = (const void **)(v37 + 24);
  v39 = *(unsigned int *)(v37 + 32);
  if (v39 > 0x40)
  {
    if (v39 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v37 + 24)) <= v16)
    {
      v40 = ((unint64_t)(v39 + 63) >> 3) & 0x3FFFFFF8;
      v41 = (char *)operator new[]();
      memcpy(v41, *v38, v40);
      v42 = 0;
      v43 = (char *)__dst;
      do
      {
        *(_QWORD *)&v41[v42] |= *(_QWORD *)&v43[v42];
        v42 += 8;
      }
      while (v40 != v42);
      v81 = v39;
      v80 = (unint64_t)v41;
      v44 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&v80);
      MEMORY[0x1CAA32F9C](v41, 0x1000C8000313F17);
      if (v44 >= v16)
        goto LABEL_60;
    }
LABEL_49:
    v16 = 0;
    goto LABEL_61;
  }
  if (64 - __clz((unint64_t)*v38) > v16
    || v16 > __clz(__rbit64(~((unint64_t)__dst | (unint64_t)*v38))))
  {
    goto LABEL_49;
  }
LABEL_60:
  v10 = **(_QWORD **)(v10 + 32);
LABEL_61:
  if (v85 >= 0x41 && v84)
    MEMORY[0x1CAA32F9C](v84, 0x1000C8000313F17);
  if (v83 >= 0x41 && __dst)
    MEMORY[0x1CAA32F9C](__dst, 0x1000C8000313F17);
LABEL_9:
  if (*(_WORD *)(v10 + 24) != 57)
    return 0;
  v17 = sub_1C5D4F7E8(**(_QWORD **)(v10 + 32), *(_QWORD *)(*(_QWORD *)(v10 + 32) + 8), 0, 0);
  if (!v17)
    return 0;
  v18 = v17;
  v19 = *(_QWORD *)(v10 + 32);
  v20 = *(_QWORD *)(v19 + 40);
  v21 = *(_DWORD *)(v19 + 48);
  if (!v16)
    goto LABEL_14;
  if (*(_WORD *)(a1 + 24) != 171)
    goto LABEL_14;
  v22 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48), 0, 0);
  if (!v22)
    goto LABEL_14;
  v45 = v22;
  sub_1C6368768(a7, **(_QWORD **)(a1 + 32), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 8), 0, (uint64_t)&__dst);
  v46 = *(_QWORD *)(v45 + 80);
  v47 = (unint64_t *)(v46 + 24);
  v48 = *(unsigned int *)(v46 + 32);
  if (v48 > 0x40)
  {
    if (v48 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v46 + 24)) > v16)
      goto LABEL_70;
    v57 = (char *)operator new[]();
    v58 = (const void *)*v47;
    v59 = ((unint64_t)(v48 + 63) >> 3) & 0x3FFFFFF8;
    memcpy(v57, v58, v59);
    v60 = 0;
    v61 = (char *)__dst;
    do
    {
      *(_QWORD *)&v57[v60] |= *(_QWORD *)&v61[v60];
      v60 += 8;
    }
    while (v59 != v60);
    v81 = v48;
    v80 = (unint64_t)v57;
    v62 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&v80);
    MEMORY[0x1CAA32F9C](v57, 0x1000C8000313F17);
    if (v62 < v16)
      goto LABEL_70;
  }
  else if (64 - __clz(*v47) > v16
         || v16 > __clz(__rbit64(~((unint64_t)__dst | *v47))))
  {
    goto LABEL_70;
  }
  v63 = *(uint64_t **)(a1 + 32);
  a1 = *v63;
  a2 = *((_DWORD *)v63 + 2);
LABEL_70:
  if (v85 >= 0x41 && v84)
    MEMORY[0x1CAA32F9C](v84, 0x1000C8000313F17);
  if (v83 >= 0x41 && __dst)
    MEMORY[0x1CAA32F9C](__dst, 0x1000C8000313F17);
LABEL_14:
  v83 = 1;
  __dst = 0;
  if (a1 != v20 || v21 != a2)
  {
    if (*(_WORD *)(v20 + 24) != 201
      || (v24 = *(_QWORD *)(v20 + 32), a1 != *(_QWORD *)v24)
      || *(_DWORD *)(v24 + 8) != a2)
    {
      if (*(_WORD *)(a1 + 24) == 56)
      {
        v28 = *(_QWORD *)(a1 + 32);
        if (*(_QWORD *)v28 == v20 && *(_DWORD *)(v28 + 8) == v21)
        {
          v29 = sub_1C5D4F7E8(*(_QWORD *)(v28 + 40), *(_QWORD *)(v28 + 48), 0, 0);
          if (v29)
          {
            v30 = *(_QWORD *)(v29 + 80);
            v26 = *(unsigned int *)(v30 + 32);
            if (v26 >= 0x41)
            {
              v27 = operator new[]();
              memcpy((void *)v27, *(const void **)(v30 + 24), ((unint64_t)(v26 + 63) >> 3) & 0x3FFFFFF8);
              v49 = 0;
              v50 = *(uint64_t **)(*(_QWORD *)(v18 + 80) + 24);
              v51 = (unint64_t)(v26 + 63) >> 6;
              v52 = (unint64_t *)v27;
              v53 = v51;
              do
              {
                v54 = *v50++;
                v55 = v54 + *v52;
                v56 = v55 + 1 <= *v52;
                if (v49)
                {
                  ++v55;
                  v49 = v56;
                }
                else
                {
                  v49 = v55 < *v52;
                }
                *v52++ = v55;
                --v53;
              }
              while (v53);
              *(_QWORD *)(v27 + 8 * (v51 - 1)) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v26;
            }
            else
            {
              v31 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v26;
              if (!(_DWORD)v26)
                v31 = 0;
              v27 = v31 & (*(_QWORD *)(*(_QWORD *)(v18 + 80) + 24) + *(_QWORD *)(v30 + 24));
            }
            goto LABEL_23;
          }
        }
      }
      return 0;
    }
  }
  v25 = *(_QWORD *)(v18 + 80);
  LODWORD(v26) = *(_DWORD *)(v25 + 32);
  if (v26 > 0x40)
  {
    llvm::APInt::reallocate((uint64_t)&__dst, *(_DWORD *)(v25 + 32));
    LODWORD(v26) = v83;
    if (v83 <= 0x40)
    {
      v27 = *(_QWORD *)(v25 + 24);
      __dst = (void *)v27;
      if (v16)
        goto LABEL_37;
    }
    else
    {
      v27 = (uint64_t)__dst;
      memcpy(__dst, *(const void **)(v25 + 24), (((unint64_t)v83 + 63) >> 3) & 0x3FFFFFF8);
      if (v16)
        goto LABEL_37;
    }
LABEL_75:
    if (v26 >= 0x41)
    {
      v65 = 0;
      v66 = ((unint64_t)v26 + 63) >> 6;
      do
      {
        v67 = v66-- < 1;
        if (v67)
          break;
        v68 = *(_QWORD *)(v27 + 8 * v66);
        v65 += __clz(v68);
      }
      while (!v68);
      v32 = 0;
      v69 = v26 | 0xFFFFFFC0;
      if ((v26 & 0x3F) == 0)
        v69 = 0;
      v70 = v26 - v65 - v69;
      p_dst = (void **)v27;
      if (v70 > 0x40)
        goto LABEL_87;
    }
    else
    {
      p_dst = &__dst;
    }
    v35 = *p_dst == (void *)a6;
    goto LABEL_84;
  }
  v27 = *(_QWORD *)(v25 + 24);
LABEL_23:
  __dst = (void *)v27;
  v83 = v26;
  if (!v16)
    goto LABEL_75;
LABEL_37:
  v81 = v26;
  if (v26 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v80, 0, 0);
  else
    v80 = 0;
  sub_1C4912E54(&v80, 0, v16);
  v34 = v81;
  if (v81 > 0x40)
  {
    v71 = (_QWORD *)v80;
    v72 = ((unint64_t)v81 + 63) >> 6;
    v73 = (uint64_t *)v27;
    v74 = v72;
    do
    {
      v75 = *v73++;
      *v71++ &= v75;
      --v74;
    }
    while (v74);
    v76 = 0;
    do
    {
      v67 = v72-- < 1;
      if (v67)
        break;
      v77 = *(_QWORD *)(v80 + 8 * v72);
      v76 += __clz(v77);
    }
    while (!v77);
    v78 = v34 | 0xFFFFFFC0;
    if ((v34 & 0x3F) == 0)
      v78 = 0;
    if (v34 - v76 - v78 > 0x40)
    {
      v79 = 0;
      v32 = 0;
      if (!v80)
        goto LABEL_87;
    }
    else
    {
      v79 = *(_QWORD *)v80 == 0;
    }
    MEMORY[0x1CAA32F9C](v80, 0x1000C8000313F17);
    v32 = v79;
    goto LABEL_87;
  }
  v35 = (v80 & v27) == 0;
LABEL_84:
  v32 = v35;
LABEL_87:
  if (v26 >= 0x41 && v27)
    MEMORY[0x1CAA32F9C](v27, 0x1000C8000313F17);
  return v32;
}

uint64_t sub_1C5CACC8C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5, char a6)
{
  uint64_t v6;
  uint64_t v9;
  int v10;
  const char *v11;
  BOOL v12;
  unsigned int v13;
  const char *v14;
  uint64_t *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  _QWORD v36[2];

  v6 = result;
  v36[0] = a2;
  v36[1] = a3;
  if (a5 == 10)
    goto LABEL_10;
  if ((a6 & 1) == 0)
  {
    v9 = *(_QWORD *)(a2 + 48);
    if (!v9)
      goto LABEL_10;
    v10 = 1;
    do
    {
      if (*(_DWORD *)(v9 + 8) == (_DWORD)a3)
      {
        if (!v10)
          goto LABEL_10;
        --v10;
      }
      v9 = *(_QWORD *)(v9 + 32);
    }
    while (v9);
    if (v10)
      goto LABEL_10;
  }
  result = (uint64_t)sub_1C6131A64((unsigned int *)v36);
  if ((_DWORD)v11 == 1)
  {
    v31 = result;
    result = v31;
  }
  if ((result & 7) != 0)
    goto LABEL_10;
  v13 = *(unsigned __int16 *)(v36[0] + 24);
  if (v13 > 0xB5)
  {
    if (v13 != 182)
    {
      if (v13 == 253)
      {
        if ((*(_WORD *)(*(_QWORD *)(v36[0] + 96) + 36) & 0xF00) == 0
          && (*(_BYTE *)(v36[0] + 26) & 8) == 0
          && (*(_WORD *)(v36[0] + 26) & 0x380) == 0)
        {
          v30 = v36[0];
          v34 = *(_OWORD *)(v36[0] + 80);
          result = (_BYTE)v34
                 ? sub_1C47A8C74((unsigned __int8 *)&v34)
                 : (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v34);
          v29 = result;
          if ((_DWORD)v14 == 1)
          if ((v29 & 7) == 0)
          {
            if (v29 >> 3 > (unint64_t)a4)
            {
              *(_QWORD *)v6 = v30;
              *(_QWORD *)(v6 + 8) = a4;
              goto LABEL_31;
            }
            if ((~*(unsigned __int16 *)(v30 + 26) & 0xC00) == 0)
            {
LABEL_30:
              *(_QWORD *)v6 = 0;
              *(_QWORD *)(v6 + 8) = 0;
LABEL_31:
              *(_BYTE *)(v6 + 16) = 1;
              return result;
            }
          }
        }
LABEL_10:
        *(_BYTE *)v6 = 0;
        *(_BYTE *)(v6 + 16) = 0;
        return result;
      }
      if (v13 - 198 >= 3)
        goto LABEL_10;
      v34 = *(_OWORD *)*(_QWORD *)(v36[0] + 32);
      result = (uint64_t)sub_1C6329368((unsigned int *)&v34, (uint64_t)v11, v12);
      if ((result & 7) != 0)
        goto LABEL_10;
      if (result >> 3 <= (unint64_t)a4)
      {
        if (*(_WORD *)(v36[0] + 24) == 199)
          goto LABEL_30;
        goto LABEL_10;
      }
      v25 = *((_QWORD *)&v34 + 1);
      v24 = v34;
      v27 = (a5 + 1);
      v28 = v6;
      v26 = a4;
      return sub_1C5CACC8C(v28, v24, v25, v26, v27, 0);
    }
    v23 = *(uint64_t **)(v36[0] + 32);
    v24 = *v23;
    v25 = v23[1];
    v26 = ~(_DWORD)a4 + (result >> 3);
LABEL_38:
    v27 = (a5 + 1);
    v28 = v6;
    return sub_1C5CACC8C(v28, v24, v25, v26, v27, 0);
  }
  if (v13 != 172)
  {
    if (v13 != 175)
      goto LABEL_10;
    v15 = *(uint64_t **)(v36[0] + 32);
    v16 = v15[5];
    v17 = *(unsigned __int16 *)(v16 + 24);
    if (v17 != 11 && v17 != 35)
      goto LABEL_10;
    v18 = *(_QWORD *)(v16 + 80);
    v19 = (unint64_t *)(v18 + 24);
    if (*(_DWORD *)(v18 + 32) >= 0x41u)
      v19 = (unint64_t *)*v19;
    v20 = *v19;
    if ((v20 & 7) != 0)
      goto LABEL_10;
    if (a4 < v20 >> 3)
      goto LABEL_30;
    v24 = *v15;
    v25 = v15[1];
    v26 = a4 - (v20 >> 3);
    goto LABEL_38;
  }
  v21 = (a5 + 1);
  result = sub_1C5CACC8C(&v34, **(_QWORD **)(v36[0] + 32), *(_QWORD *)(*(_QWORD *)(v36[0] + 32) + 8), a4, v21, 0);
  if (!(_BYTE)v35)
    goto LABEL_10;
  result = sub_1C5CACC8C(&v32, *(_QWORD *)(*(_QWORD *)(v36[0] + 32) + 40), *(_QWORD *)(*(_QWORD *)(v36[0] + 32) + 48), a4, v21, 0);
  if (!(_BYTE)v33)
    goto LABEL_10;
  if ((_QWORD)v34)
  {
    if ((_QWORD)v32)
      goto LABEL_10;
    *(_OWORD *)v6 = v34;
    v22 = v35;
  }
  else
  {
    *(_OWORD *)v6 = v32;
    v22 = v33;
  }
  *(_QWORD *)(v6 + 16) = v22;
  return result;
}

BOOL sub_1C5CACF7C(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v4;
  _BOOL8 result;
  uint64_t v6;
  _BYTE v7[16];
  _BYTE v8[16];

  result = 0;
  if (sub_1C5CA91A0(a1, a2, a3, (uint64_t)v8, (uint64_t)v7, (uint64_t)&v6, 0))
  {
    v4 = *(_QWORD *)(a2 + 48);
    if (v4)
    {
      if (!*(_QWORD *)(v4 + 32))
        return 1;
    }
  }
  return result;
}

uint64_t *sub_1C5CACFD4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v9;
  llvm *v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned __int8 *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t *v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  __int16 v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unsigned __int8 *v33;
  int v34;

  v2 = *(_QWORD *)(a2 + 48);
  if (!v2)
    return 0;
  if (*(_QWORD *)(v2 + 32))
    return 0;
  v6 = *(_DWORD **)(a2 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)v6 + 48);
  if (!v7)
    return 0;
  v9 = *(_QWORD *)(a2 + 40);
  v10 = *(llvm **)v9;
  v11 = *(_QWORD *)(v9 + 8);
  v12 = v6[2];
  v13 = 1;
  do
  {
    if (*(_DWORD *)(v7 + 8) == v12)
    {
      if (!v13)
        return 0;
      --v13;
    }
    v7 = *(_QWORD *)(v7 + 32);
  }
  while (v7);
  if (v13)
    return 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, llvm *, uint64_t))(*(_QWORD *)a1[1] + 1744))(a1[1], 171, v10, v11))return 0;
  v14 = *(_QWORD *)(**(_QWORD **)(a2 + 32) + 32);
  v15 = *(_QWORD *)(v14 + 40);
  v16 = *(_QWORD *)(v14 + 48);
  if (!sub_1C5C9F100(v15, v16, 1))
    return 0;
  v17 = *(unsigned __int8 **)(a2 + 64);
  v33 = v17;
  if (v17)
    llvm::MetadataTracking::track((uint64_t)&v33, v17, 2);
  v34 = *(_DWORD *)(a2 + 60);
  v18 = *(uint64_t **)(**(_QWORD **)(a2 + 32) + 32);
  v19 = *v18;
  v20 = v18[1];
  v21 = *(_QWORD *)(*a1 + 832);
  if (v21)
    v22 = *(_WORD *)(v21 + 8);
  else
    v22 = 0;
  v23 = sub_1C5D52060(*a1, 201, (const llvm::APInt *)&v33, v10, v11, v19, v20, v22);
  v25 = v24;
  v26 = *(_QWORD *)(*a1 + 832);
  if (v26)
    v27 = *(_WORD *)(v26 + 8);
  else
    v27 = 0;
  v28 = sub_1C5D52060(*a1, 201, (const llvm::APInt *)&v33, v10, v11, v15, v16, v27);
  v30 = v29;
  sub_1C5C5B004((uint64_t)a1, (uint64_t)v23);
  sub_1C5C5B004((uint64_t)a1, (uint64_t)v28);
  v32 = *(_QWORD *)(*a1 + 832);
  if (v32)
    LOWORD(v32) = *(_WORD *)(v32 + 8);
  v3 = sub_1C5D56C70(*a1, 171, (const llvm::APInt *)&v33, v10, v11, (uint64_t)v23, v25, v31, (uint64_t)v28, v30, v32);
  if (v33)
    llvm::MetadataTracking::untrack((uint64_t)&v33, v33);
  return v3;
}

uint64_t *sub_1C5CAD1C0(uint64_t *a1, uint64_t a2)
{
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  int v15;
  int v16;
  BOOL v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  _QWORD **v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;
  uint64_t v33;
  llvm *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  const void **v62;
  uint64_t v63;
  unint64_t v64;
  void *v65;
  uint64_t v66;
  uint64_t *v67;
  unint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  _BOOL4 v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t __n;
  unint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  llvm *v97;
  void *v98;
  unsigned int v99;
  unsigned __int8 *v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  unsigned __int8 *v105;
  _QWORD **v106;
  unsigned int v107;

  if ((sub_1C5D621EC(**(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), 0) & 1) != 0)
    return 0;
  v4 = *(_DWORD **)(a2 + 32);
  v5 = *(_QWORD *)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 48);
  if (!v6)
    return 0;
  v7 = v4[2];
  v8 = 1;
  do
  {
    if (*(_DWORD *)(v6 + 8) == v7)
    {
      if (!v8)
        return 0;
      --v8;
    }
    v6 = *(_QWORD *)(v6 + 32);
  }
  while (v6);
  if (v8
    || !(*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1[1] + 1736))(a1[1], a2, *((unsigned int *)a1 + 6)))
  {
    return 0;
  }
  if (*((_BYTE *)a1 + 34))
    goto LABEL_11;
  v18 = *(uint64_t **)(a2 + 32);
  v19 = *v18;
  v20 = *(_QWORD *)(*v18 + 48);
  if (!v20)
    goto LABEL_11;
  v21 = *a1;
  v22 = 1;
  do
  {
    if (*(_DWORD *)(v20 + 8) == *((_DWORD *)v18 + 2))
    {
      if (!v22)
        goto LABEL_11;
      --v22;
    }
    v20 = *(_QWORD *)(v20 + 32);
  }
  while (v20);
  if (v22)
    goto LABEL_11;
  v23 = *(unsigned __int16 *)(v19 + 24);
  if ((v23 - 174) < 0xFFFFFFFD)
    goto LABEL_11;
  v107 = *(unsigned __int16 *)(a2 + 24);
  v24 = v18[5];
  v25 = v18[6];
  v26 = (_QWORD **)(*(_QWORD *)(sub_1C5D4F7E8(v24, v25, 0, 0) + 80) + 24);
  v105 = (unsigned __int8 *)&v107;
  v106 = v26;
  v103 = 0;
  LODWORD(v104) = 0;
  v102 = 0;
  v27 = sub_1C5CAE7D8((uint64_t)&v105, **(_QWORD **)(v19 + 32), *(_QWORD *)(*(_QWORD *)(v19 + 32) + 8), (uint64_t)&v103, &v102);
  v28 = *(_QWORD *)(v19 + 32);
  if (v27)
  {
    v29 = v28 + 40;
  }
  else
  {
    if (!sub_1C5CAE7D8((uint64_t)&v105, *(_QWORD *)(v28 + 40), *(_QWORD *)(v28 + 48), (uint64_t)&v103, &v102))
      goto LABEL_11;
    v29 = *(_QWORD *)(v19 + 32);
  }
  v94 = *(unsigned int *)(v29 + 8);
  v95 = *(_QWORD *)v29;
  v57 = *(unsigned __int8 **)(a2 + 64);
  v100 = v57;
  if (v57)
    llvm::MetadataTracking::track((uint64_t)&v100, v57, 2);
  v101 = *(_DWORD *)(a2 + 60);
  v58 = *(_QWORD *)(a2 + 40);
  v96 = *(_QWORD *)(v58 + 8);
  v97 = *(llvm **)v58;
  v59 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 40)
                  + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 48));
  v60 = *v59;
  v61 = v59[1];
  v62 = (const void **)v102;
  v63 = *(unsigned int *)(v102 + 8);
  if (v63 >= 0x41)
  {
    v92 = *v59;
    v93 = v59[1];
    v90 = v63 + 63;
    v91 = *(_DWORD *)(v102 + 8);
    __n = ((unint64_t)(v63 + 63) >> 3) & 0x3FFFFFF8;
    v65 = (void *)operator new[]();
    memcpy(v65, *v62, __n);
    v66 = 0;
    v67 = *v26;
    v68 = (unint64_t *)v65;
    v69 = v90 >> 6;
    do
    {
      v70 = *v67++;
      v71 = v70 + *v68;
      v72 = v71 + 1 <= *v68;
      if (v66)
      {
        ++v71;
        v66 = v72;
      }
      else
      {
        v66 = v71 < *v68;
      }
      *v68++ = v71;
      --v69;
    }
    while (v69);
    LODWORD(v63) = v91;
    v60 = v92;
    *((_QWORD *)v65 + (v90 >> 6) - 1) &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v91;
    v61 = v93;
  }
  else
  {
    v64 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v63;
    if (!(_DWORD)v63)
      v64 = 0;
    v65 = (void *)(v64 & ((unint64_t)*v26 + *(_QWORD *)v102));
  }
  v99 = v63;
  v98 = v65;
  v73 = sub_1C63666FC(v21, (llvm::LLVMContext *)&v98, (const llvm::APInt *)&v100, v60, v61, 0, 0);
  if (v99 >= 0x41 && v98)
  {
    v76 = v73;
    v77 = v74;
    MEMORY[0x1CAA32F9C](v98, 0x1000C8000313F17);
    v74 = v77;
    v73 = v76;
  }
  v78 = *(_QWORD *)(v21 + 832);
  if (v78)
    LOWORD(v78) = *(_WORD *)(v78 + 8);
  v79 = sub_1C5D56C70(v21, v107, (const llvm::APInt *)&v100, v97, v96, v103, v104, v75, v73, v74, v78);
  v81 = *(_QWORD *)(v21 + 832);
  v83 = v82;
  v84 = (uint64_t)v79;
  if (v81)
    LOWORD(v81) = *(_WORD *)(v81 + 8);
  v85 = sub_1C5D56C70(v21, v107, (const llvm::APInt *)&v100, v97, v96, v95, v94, v80, v24, v25, v81);
  v88 = *(_QWORD *)(v21 + 832);
  if (v88)
    LOWORD(v88) = *(_WORD *)(v88 + 8);
  v55 = sub_1C5D56C70(v21, v23, (const llvm::APInt *)&v100, v97, v96, v84, v83, v87, (uint64_t)v85, v86, v88);
  if (v100)
    llvm::MetadataTracking::untrack((uint64_t)&v100, v100);
  if (!v55)
  {
LABEL_11:
    v10 = *(unsigned __int16 *)(v5 + 24);
    if ((v10 - 171) >= 3 && (v10 != 56 || *(_WORD *)(a2 + 24) != 175))
      return 0;
    v11 = *(_QWORD **)(v5 + 32);
    v12 = v11[5];
    v13 = *(unsigned __int16 *)(v12 + 24);
    v14 = v13 == 35 || v13 == 11;
    if (!v14 || (*(_BYTE *)(v12 + 26) & 8) != 0)
      return 0;
    v15 = *(unsigned __int16 *)(*v11 + 24);
    if ((v15 - 175) <= 2
      && ((v16 = *(unsigned __int16 *)(*(_QWORD *)(*(_QWORD *)(*v11 + 32) + 40) + 24), v16 != 35)
        ? (v17 = v16 == 11)
        : (v17 = 1),
          v17))
    {
      if (v15 != 190 && v15 != 50)
        goto LABEL_45;
    }
    else if (v15 != 50 && v15 != 190)
    {
      return 0;
    }
    v30 = *(_QWORD *)(a2 + 48);
    if (!v30 || *(_QWORD *)(v30 + 32))
    {
LABEL_45:
      v31 = *(unsigned __int8 **)(a2 + 64);
      v105 = v31;
      if (v31)
      {
        llvm::MetadataTracking::track((uint64_t)&v105, v31, 2);
        v11 = *(_QWORD **)(v5 + 32);
        v12 = v11[5];
      }
      LODWORD(v106) = *(_DWORD *)(a2 + 60);
      v33 = *(_QWORD *)(a2 + 32);
      v32 = *(_QWORD *)(a2 + 40);
      v34 = *(llvm **)v32;
      v35 = *(_QWORD *)(v32 + 8);
      v36 = v11[6];
      v37 = *(_QWORD *)(v33 + 40);
      v38 = *(_QWORD *)(v33 + 48);
      v39 = *(_QWORD *)(*a1 + 832);
      if (v39)
        LOWORD(v39) = *(_WORD *)(v39 + 8);
      v41 = sub_1C5D56C70(*a1, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v105, v34, v35, v12, v36, v9, v37, v38, v39);
      v43 = v42;
      v44 = *(uint64_t **)(v5 + 32);
      v45 = *v44;
      v46 = v44[1];
      v47 = *(_QWORD *)(a2 + 32);
      v48 = *(_QWORD *)(v47 + 40);
      v49 = *(_QWORD *)(v47 + 48);
      v50 = *(_QWORD *)(*a1 + 832);
      if (v50)
        LOWORD(v50) = *(_WORD *)(v50 + 8);
      v52 = sub_1C5D56C70(*a1, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v105, v34, v35, v45, v46, v40, v48, v49, v50);
      v54 = *(_QWORD *)(*a1 + 832);
      if (v54)
        LOWORD(v54) = *(_WORD *)(v54 + 8);
      v55 = sub_1C5D56C70(*a1, *(unsigned __int16 *)(v5 + 24), (const llvm::APInt *)&v105, v34, v35, (uint64_t)v52, v51, v53, (uint64_t)v41, v43, v54);
      if (v105)
        llvm::MetadataTracking::untrack((uint64_t)&v105, v105);
      return v55;
    }
    return 0;
  }
  return v55;
}

void sub_1C5CAD75C()
{
  JUMPOUT(0x1CAA32FC0);
}

_DWORD *sub_1C5CAD770(uint64_t a1)
{
  _DWORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_1E8198108;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_1C5CAD7A8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_1E8198108;
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 8);
  return result;
}

BOOL sub_1C5CAD7C8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  unsigned int v13;
  unint64_t v14;
  _BOOL8 v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BOOL8 v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BOOL4 v24;
  _BOOL4 v25;
  int v26;
  unint64_t v28;
  unsigned int v29;
  char *v31;
  unsigned int v32;
  void *__src;
  unsigned int v34;

  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  v34 = v6;
  if (v6 > 0x40)
  {
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v7 = (void *)operator new[]();
    memcpy(v7, *(const void **)(v5 + 24), v8);
  }
  else
  {
    v7 = *(void **)(v5 + 24);
  }
  __src = v7;
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v32 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v11 = (char *)operator new[]();
    memcpy(v11, *(const void **)(v9 + 24), v12);
  }
  else
  {
    v11 = *(char **)(v9 + 24);
  }
  v31 = v11;
  sub_1C5CAC260((llvm::APInt *)&__src, (llvm::APInt *)&v31, 1);
  v13 = v34;
  if (v34 >= 0x41)
  {
    v16 = v34 + 63;
    v17 = (_QWORD *)operator new[]();
    memcpy(v17, __src, (v16 >> 3) & 0x3FFFFFF8);
    v18 = 0;
    v19 = 0;
    v20 = v31;
    v21 = v16 >> 6;
    do
    {
      v22 = v17[v18];
      v23 = *(_QWORD *)&v20[v18 * 8] + v22;
      v24 = v23 < v22;
      v25 = v23 + 1 <= v22;
      if (v19)
      {
        ++v23;
        v19 = v25;
      }
      else
      {
        v19 = v24;
      }
      v17[v18++] = v23;
    }
    while (v16 >> 6 != v18);
    v26 = 0;
    v17[(v21 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
    do
    {
      if (v21-- < 1)
        break;
      v28 = v17[v21];
      v26 += __clz(v28);
    }
    while (!v28);
    v29 = v13 | 0xFFFFFFC0;
    if ((v13 & 0x3F) == 0)
      v29 = 0;
    v15 = v13 - v26 - v29 > 0x40 || *v17 >= (unint64_t)*(unsigned int *)(a1 + 8);
    MEMORY[0x1CAA32F9C](v17, 0x1000C8000313F17);
  }
  else
  {
    v14 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v34;
    if (!v34)
      v14 = 0;
    v15 = (v14 & ((unint64_t)__src + (_QWORD)v31)) >= *(unsigned int *)(a1 + 8);
  }
  if (v32 >= 0x41 && v31)
    MEMORY[0x1CAA32F9C](v31, 0x1000C8000313F17);
  if (v34 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return v15;
}

void sub_1C5CADA5C()
{
  JUMPOUT(0x1CAA32FC0);
}

_DWORD *sub_1C5CADA70(uint64_t a1)
{
  _DWORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_1E8198150;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_1C5CADAA8(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_1E8198150;
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 8);
  return result;
}

BOOL sub_1C5CADAC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  unsigned int v13;
  unint64_t v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  _BOOL8 v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BOOL4 v24;
  _BOOL4 v25;
  int v26;
  unint64_t v27;
  unint64_t v29;
  unsigned int v30;
  char *v32;
  unsigned int v33;
  void *__src;
  unsigned int v35;

  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  v35 = v6;
  if (v6 > 0x40)
  {
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v7 = (void *)operator new[]();
    memcpy(v7, *(const void **)(v5 + 24), v8);
  }
  else
  {
    v7 = *(void **)(v5 + 24);
  }
  __src = v7;
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v33 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v11 = (char *)operator new[]();
    memcpy(v11, *(const void **)(v9 + 24), v12);
  }
  else
  {
    v11 = *(char **)(v9 + 24);
  }
  v32 = v11;
  sub_1C5CAC260((llvm::APInt *)&__src, (llvm::APInt *)&v32, 1);
  v13 = v35;
  if (v35 >= 0x41)
  {
    v16 = v35 + 63;
    v17 = (unint64_t *)operator new[]();
    memcpy(v17, __src, (v16 >> 3) & 0x3FFFFFF8);
    v18 = 0;
    v19 = 0;
    v20 = v32;
    v21 = v16 >> 6;
    do
    {
      v22 = v17[v18];
      v23 = *(_QWORD *)&v20[v18 * 8] + v22;
      v24 = v23 < v22;
      v25 = v23 + 1 <= v22;
      if (v19)
      {
        ++v23;
        v19 = v25;
      }
      else
      {
        v19 = v24;
      }
      v17[v18++] = v23;
    }
    while (v16 >> 6 != v18);
    v26 = 0;
    v17[(v21 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
    v27 = *(unsigned int *)(a1 + 8);
    do
    {
      if (v21-- < 1)
        break;
      v29 = v17[v21];
      v26 += __clz(v29);
    }
    while (!v29);
    v15 = 0;
    v30 = v13 | 0xFFFFFFC0;
    if ((v13 & 0x3F) == 0)
      v30 = 0;
    if (v13 - v26 - v30 <= 0x40)
      v15 = *v17 < v27;
    MEMORY[0x1CAA32F9C](v17, 0x1000C8000313F17);
  }
  else
  {
    v14 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v35;
    if (!v35)
      v14 = 0;
    v15 = (v14 & ((unint64_t)__src + (_QWORD)v32)) < *(unsigned int *)(a1 + 8);
  }
  if (v33 >= 0x41 && v32)
    MEMORY[0x1CAA32F9C](v32, 0x1000C8000313F17);
  if (v35 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return v15;
}

void sub_1C5CADD58()
{
  JUMPOUT(0x1CAA32FC0);
}

__n128 sub_1C5CADD6C(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_1E8198198;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1C5CADDA4(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E8198198;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_1C5CADDC4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  size_t v12;
  _QWORD *v13;
  unint64_t v14;
  unsigned int v15;
  int v16;
  int64_t v17;
  BOOL v18;
  unint64_t v19;
  unsigned int v20;
  _BOOL8 v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _BOOL8 v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL4 v32;
  _BOOL4 v33;
  int v34;
  unint64_t v35;
  unsigned int v36;
  _QWORD *v38;
  unsigned int v39;
  void *__src;
  unsigned int v41;

  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  v41 = v6;
  if (v6 > 0x40)
  {
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v7 = (void *)operator new[]();
    memcpy(v7, *(const void **)(v5 + 24), v8);
  }
  else
  {
    v7 = *(void **)(v5 + 24);
  }
  __src = v7;
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v39 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v11 = (void *)operator new[]();
    memcpy(v11, *(const void **)(v9 + 24), v12);
  }
  else
  {
    v11 = *(void **)(v9 + 24);
  }
  v38 = v11;
  v13 = &v38;
  sub_1C5CAC260((llvm::APInt *)&__src, (llvm::APInt *)&v38, 1);
  v14 = *(unsigned int *)(a1 + 8);
  v15 = v39;
  if (v39 >= 0x41)
  {
    v16 = 0;
    v13 = v38;
    v17 = ((unint64_t)v39 + 63) >> 6;
    do
    {
      v18 = v17-- < 1;
      if (v18)
        break;
      v19 = v38[v17];
      v16 += __clz(v19);
    }
    while (!v19);
    v20 = v39 | 0xFFFFFFC0;
    if ((v39 & 0x3F) == 0)
      v20 = 0;
    if (v39 - v16 - v20 > 0x40)
      goto LABEL_16;
  }
  if (*v13 >= v14 - *(_QWORD *)(a1 + 16))
  {
LABEL_16:
    v22 = v41;
    if (v41 >= 0x41)
    {
      v24 = v41 + 63;
      v25 = (_QWORD *)operator new[]();
      memcpy(v25, __src, (v24 >> 3) & 0x3FFFFFF8);
      v26 = 0;
      v27 = 0;
      v28 = v38;
      v29 = v24 >> 6;
      do
      {
        v30 = v25[v26];
        v31 = v28[v26] + v30;
        v32 = v31 < v30;
        v33 = v31 + 1 <= v30;
        if (v27)
        {
          ++v31;
          v27 = v33;
        }
        else
        {
          v27 = v32;
        }
        v25[v26++] = v31;
      }
      while (v24 >> 6 != v26);
      v34 = 0;
      v25[(v29 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v22;
      do
      {
        v18 = v29-- < 1;
        if (v18)
          break;
        v35 = v25[v29];
        v34 += __clz(v35);
      }
      while (!v35);
      v36 = v22 | 0xFFFFFFC0;
      if ((v22 & 0x3F) == 0)
        v36 = 0;
      v21 = v22 - v34 - v36 > 0x40 || *v25 >= (unint64_t)*(unsigned int *)(a1 + 8);
      MEMORY[0x1CAA32F9C](v25, 0x1000C8000313F17);
      v15 = v39;
    }
    else
    {
      v23 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v41;
      if (!v41)
        v23 = 0;
      v21 = (v23 & ((unint64_t)v38 + (_QWORD)__src)) >= v14;
    }
  }
  else
  {
    v21 = 0;
  }
  if (v15 >= 0x41 && v38)
    MEMORY[0x1CAA32F9C](v38, 0x1000C8000313F17);
  if (v41 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return v21;
}

void sub_1C5CAE0C8()
{
  JUMPOUT(0x1CAA32FC0);
}

__n128 sub_1C5CAE0DC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_1E81981E0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1C5CAE114(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E81981E0;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

BOOL sub_1C5CAE134(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  size_t v12;
  _QWORD *v13;
  unint64_t v14;
  unsigned int v15;
  int v16;
  int64_t v17;
  BOOL v18;
  unint64_t v19;
  unsigned int v20;
  _BOOL8 v21;
  unsigned int v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t *v25;
  uint64_t v26;
  _BOOL8 v27;
  _QWORD *v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  _BOOL4 v32;
  _BOOL4 v33;
  int v34;
  unint64_t v35;
  unint64_t v36;
  unsigned int v37;
  _QWORD *v39;
  unsigned int v40;
  void *__src;
  unsigned int v42;

  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  v42 = v6;
  if (v6 > 0x40)
  {
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v7 = (void *)operator new[]();
    memcpy(v7, *(const void **)(v5 + 24), v8);
  }
  else
  {
    v7 = *(void **)(v5 + 24);
  }
  __src = v7;
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v40 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v11 = (void *)operator new[]();
    memcpy(v11, *(const void **)(v9 + 24), v12);
  }
  else
  {
    v11 = *(void **)(v9 + 24);
  }
  v39 = v11;
  v13 = &v39;
  sub_1C5CAC260((llvm::APInt *)&__src, (llvm::APInt *)&v39, 1);
  v14 = *(unsigned int *)(a1 + 8);
  v15 = v40;
  if (v40 >= 0x41)
  {
    v16 = 0;
    v13 = v39;
    v17 = ((unint64_t)v40 + 63) >> 6;
    do
    {
      v18 = v17-- < 1;
      if (v18)
        break;
      v19 = v39[v17];
      v16 += __clz(v19);
    }
    while (!v19);
    v20 = v40 | 0xFFFFFFC0;
    if ((v40 & 0x3F) == 0)
      v20 = 0;
    if (v40 - v16 - v20 > 0x40)
      goto LABEL_16;
  }
  if (*v13 >= v14 - *(_QWORD *)(a1 + 16))
  {
LABEL_16:
    v22 = v42;
    if (v42 >= 0x41)
    {
      v24 = v42 + 63;
      v25 = (unint64_t *)operator new[]();
      memcpy(v25, __src, (v24 >> 3) & 0x3FFFFFF8);
      v26 = 0;
      v27 = 0;
      v28 = v39;
      v29 = v24 >> 6;
      do
      {
        v30 = v25[v26];
        v31 = v28[v26] + v30;
        v32 = v31 < v30;
        v33 = v31 + 1 <= v30;
        if (v27)
        {
          ++v31;
          v27 = v33;
        }
        else
        {
          v27 = v32;
        }
        v25[v26++] = v31;
      }
      while (v24 >> 6 != v26);
      v34 = 0;
      v25[(v29 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v22;
      v35 = *(unsigned int *)(a1 + 8);
      do
      {
        v18 = v29-- < 1;
        if (v18)
          break;
        v36 = v25[v29];
        v34 += __clz(v36);
      }
      while (!v36);
      v21 = 0;
      v37 = v22 | 0xFFFFFFC0;
      if ((v22 & 0x3F) == 0)
        v37 = 0;
      if (v22 - v34 - v37 <= 0x40)
        v21 = *v25 < v35;
      MEMORY[0x1CAA32F9C](v25, 0x1000C8000313F17);
      v15 = v40;
    }
    else
    {
      v23 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v42;
      if (!v42)
        v23 = 0;
      v21 = (v23 & ((unint64_t)v39 + (_QWORD)__src)) < v14;
    }
  }
  else
  {
    v21 = 0;
  }
  if (v15 >= 0x41 && v39)
    MEMORY[0x1CAA32F9C](v39, 0x1000C8000313F17);
  if (v42 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return v21;
}

void sub_1C5CAE434()
{
  JUMPOUT(0x1CAA32FC0);
}

__n128 sub_1C5CAE448(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_1E8198228;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1C5CAE480(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E8198228;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1C5CAE4A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unsigned __int8 *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  size_t v12;
  uint64_t v13;
  BOOL v14;
  llvm::Type *v15;
  unsigned int v16;
  BOOL v17;
  int v18;
  int64_t v19;
  unint64_t v21;
  uint64_t v22;
  unsigned int v23;
  void *__s2;
  unsigned int v26;
  void *__s1;
  unsigned int v28;

  v3 = (unsigned __int8 *)(a1 + 8);
  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  v28 = v6;
  if (v6 > 0x40)
  {
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v7 = (void *)operator new[]();
    memcpy(v7, *(const void **)(v5 + 24), v8);
  }
  else
  {
    v7 = *(void **)(v5 + 24);
  }
  __s1 = v7;
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v26 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v11 = (void *)operator new[]();
    memcpy(v11, *(const void **)(v9 + 24), v12);
  }
  else
  {
    v11 = *(void **)(v9 + 24);
  }
  __s2 = v11;
  sub_1C5CAC260((llvm::APInt *)&__s1, (llvm::APInt *)&__s2, 0);
  v15 = sub_1C6131328(v3, v13, v14);
  v16 = v28;
  if (v28 < 0x41)
  {
    if (__s1 < v15)
    {
      v17 = __s1 == __s2;
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  v18 = 0;
  v19 = ((unint64_t)v28 + 63) >> 6;
  do
  {
    if (v19-- < 1)
      break;
    v21 = *((_QWORD *)__s1 + v19);
    v18 += __clz(v21);
  }
  while (!v21);
  v22 = 0;
  v23 = v28 | 0xFFFFFFC0;
  if ((v28 & 0x3F) == 0)
    v23 = 0;
  if (v28 - v18 - v23 < 0x41)
  {
    if (*(_QWORD *)__s1 < (unint64_t)v15)
    {
      v17 = memcmp(__s1, __s2, (((unint64_t)v28 + 63) >> 3) & 0x3FFFFFF8) == 0;
LABEL_18:
      v22 = v17;
      goto LABEL_22;
    }
LABEL_21:
    v22 = 0;
  }
LABEL_22:
  if (v26 >= 0x41 && __s2)
  {
    MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
    v16 = v28;
  }
  if (v16 >= 0x41 && __s1)
    MEMORY[0x1CAA32F9C](__s1, 0x1000C8000313F17);
  return v22;
}

void sub_1C5CAE690()
{
  JUMPOUT(0x1CAA32FC0);
}

_DWORD *sub_1C5CAE6A4(uint64_t a1)
{
  _DWORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_1E8198270;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_1C5CAE6DC(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_1E8198270;
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 8);
  return result;
}

BOOL sub_1C5CAE6FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  llvm::APInt *v4;
  uint64_t v5;
  unint64_t v6;
  unsigned int v7;
  llvm::APInt *v8;
  llvm::APInt *v9;
  unsigned int v10;
  llvm::APInt *v11;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v4 = (llvm::APInt *)(v3 + 24);
  v5 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v6 = *(unsigned int *)(a1 + 8);
  v7 = *(_DWORD *)(v3 + 32);
  v8 = (llvm::APInt *)(v3 + 24);
  if (v7 >= 0x41)
  {
    if (v7 - llvm::APInt::countLeadingZerosSlowCase(v4) > 0x40)
      return 0;
    v8 = *(llvm::APInt **)v4;
  }
  if (*(_QWORD *)v8 >= v6)
    return 0;
  v9 = (llvm::APInt *)(v5 + 24);
  v10 = *(_DWORD *)(v5 + 32);
  v11 = v9;
  if (v10 < 0x41)
    goto LABEL_8;
  if (v10 - llvm::APInt::countLeadingZerosSlowCase(v9) > 0x40)
    return 0;
  v11 = *(llvm::APInt **)v9;
LABEL_8:
  if (*(_QWORD *)v11 >= v6)
    return 0;
  if (v7 >= 0x41)
    v4 = *(llvm::APInt **)v4;
  if (v10 >= 0x41)
    v9 = *(llvm::APInt **)v9;
  return *(_QWORD *)v4 <= *(_QWORD *)v9;
}

BOOL sub_1C5CAE7D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v6;
  int v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  const void **v17;
  uint64_t v18;
  uint64_t v19;
  _BOOL8 v20;
  unint64_t v22;
  unint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  _BOOL8 v28;
  uint64_t v29;
  int64_t v30;
  unint64_t v31;
  unint64_t v32;
  _BOOL4 v33;
  _BOOL4 v34;
  llvm::Type *v35;
  int v36;
  unint64_t v38;
  int v39;
  _QWORD v40[2];

  v40[0] = a2;
  v40[1] = a3;
  if (**(_DWORD **)a1 != *(unsigned __int16 *)(a2 + 24))
    return 0;
  v6 = *(_QWORD *)(a2 + 48);
  if (!v6)
    return 0;
  v10 = 1;
  do
  {
    if (*(_DWORD *)(v6 + 8) == (_DWORD)a3)
    {
      if (!v10)
        return 0;
      --v10;
    }
    v6 = *(_QWORD *)(v6 + 32);
  }
  while (v6);
  if (v10)
    return 0;
  v11 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), 0, 0);
  if (!v11)
    return 0;
  v14 = *(uint64_t **)(a2 + 32);
  v15 = *v14;
  *(_DWORD *)(a4 + 8) = *((_DWORD *)v14 + 2);
  *(_QWORD *)a4 = v15;
  v16 = *(_QWORD *)(v11 + 80);
  v17 = (const void **)(v16 + 24);
  *a5 = v16 + 24;
  v18 = *(unsigned int *)(v16 + 32);
  v19 = *(_QWORD *)(a1 + 8);
  if ((_DWORD)v18 != *(_DWORD *)(v19 + 8))
    return 0;
  if (v18 >= 0x41)
  {
    v24 = (_QWORD *)operator new[]();
    memcpy(v24, *v17, ((unint64_t)(v18 + 63) >> 3) & 0x3FFFFFF8);
    v27 = 0;
    v28 = 0;
    v29 = **(_QWORD **)(a1 + 8);
    v30 = (unint64_t)(v18 + 63) >> 6;
    do
    {
      v31 = v24[v27];
      v32 = *(_QWORD *)(v29 + v27 * 8) + v31;
      v33 = v32 < v31;
      v34 = v32 + 1 <= v31;
      if (v28)
      {
        ++v32;
        v28 = v34;
      }
      else
      {
        v28 = v33;
      }
      v24[v27++] = v32;
    }
    while (v30 != v27);
    v24[(v30 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v18;
    v35 = sub_1C6329368((unsigned int *)v40, v25, v26);
    v36 = 0;
    do
    {
      if (v30-- < 1)
        break;
      v38 = v24[v30];
      v36 += __clz(v38);
    }
    while (!v38);
    v20 = 0;
    v39 = v18 | 0xFFFFFFC0;
    if ((v18 & 0x3F) == 0)
      v39 = 0;
    if ((v18 - v36 - v39) <= 0x40)
      v20 = *v24 < (unint64_t)v35;
    MEMORY[0x1CAA32F9C](v24, 0x1000C8000313F17);
  }
  else
  {
    v22 = (unint64_t)*v17 + *(_QWORD *)v19;
    v23 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v18;
    if (!(_DWORD)v18)
      v23 = 0;
    return (v23 & v22) < (unint64_t)sub_1C6329368((unsigned int *)v40, v12, v13);
  }
  return v20;
}

uint64_t sub_1C5CAEA00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  llvm::APInt *v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int *v27;
  uint64_t v28;
  unint64_t v29;
  unsigned __int8 *v30;
  int v31;
  llvm::APInt *v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  unsigned __int8 *v47;
  int v48;

  v7 = sub_1C5D4F7E8(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a1 + 32) + 48), 0, 0);
  if (!v7)
    return 0;
  v8 = *(unsigned __int8 **)(a1 + 64);
  v47 = v8;
  if (v8)
    llvm::MetadataTracking::track((uint64_t)&v47, v8, 2);
  v48 = *(_DWORD *)(a1 + 60);
  v9 = **(_QWORD **)(a1 + 32);
  if (*(_WORD *)(v9 + 24) != 58)
    goto LABEL_6;
  v10 = *(uint64_t **)(v9 + 32);
  v11 = *v10;
  v12 = *(unsigned __int16 *)(*v10 + 24);
  if ((v12 & 0xFFFE) != 0xC6)
    goto LABEL_6;
  v15 = *((unsigned int *)v10 + 2);
  v17 = v10[5];
  v16 = v10[6];
  v46 = *(_OWORD *)(*(_QWORD *)(**(_QWORD **)(v11 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(v11 + 32) + 8));
  v18 = sub_1C6131328((unsigned __int8 *)&v46, (uint64_t)v8, v6);
  v19 = sub_1C5D4F7E8(v17, v16, 0, 0);
  if (v19)
  {
    v22 = v19;
    v23 = *(_QWORD *)(v19 + 80);
    v24 = (llvm::APInt *)(v23 + 24);
    v25 = *(_DWORD *)(v23 + 32);
    if (v12 == 198)
    {
      v26 = v25 - sub_1C4959174(v24) + 1;
    }
    else
    {
      if (v25 > 0x40)
        v31 = llvm::APInt::countLeadingZerosSlowCase(v24);
      else
        v31 = v25 + __clz(*(_QWORD *)v24) - 64;
      v26 = v25 - v31;
    }
    if (v26 > v18)
      goto LABEL_6;
    v32 = (llvm::APInt *)(*(_QWORD *)(v22 + 80) + 24);
    v33 = sub_1C6131328((unsigned __int8 *)&v46, v20, v21);
    llvm::APInt::trunc(v32, v33, (llvm::APInt *)&v45);
    v28 = sub_1C63666FC(a2, (llvm::LLVMContext *)&v45, (const llvm::APInt *)&v47, v46, *((uint64_t *)&v46 + 1), 0, 0);
    v29 = v20;
    if (DWORD2(v45) >= 0x41 && (_QWORD)v45)
      MEMORY[0x1CAA32F9C](v45, 0x1000C8000313F17);
  }
  else
  {
    if (*(unsigned __int16 *)(v11 + 24) != *(unsigned __int16 *)(v17 + 24))
      goto LABEL_6;
    v27 = *(unsigned int **)(v17 + 32);
    v28 = *(_QWORD *)v27;
    v29 = v27[2];
    v30 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v27 + 40) + 16 * v29);
    if (v46 != *v30 || !(_BYTE)v46 && *((_QWORD *)&v46 + 1) != *((_QWORD *)v30 + 1))
      goto LABEL_6;
  }
  v45 = *(_OWORD *)(*(_QWORD *)(v11 + 40) + 16 * v15);
  if (sub_1C6131328((unsigned __int8 *)&v45, v20, v21) == (llvm::Type *)(2 * v18))
  {
    v35 = *(_QWORD *)(v7 + 80);
    v36 = (_QWORD *)(v35 + 24);
    if (*(_DWORD *)(v35 + 32) >= 0x41u)
      v36 = (_QWORD *)*v36;
    if (*(_DWORD *)v36 == v18)
    {
      v37 = v12 == 198 ? 160 : 159;
      if ((_BYTE)v46
        && (v46 == 1 || *(_QWORD *)(a3 + 8 * v46 + 96))
        && (*(_BYTE *)(a3 + 390 * v46 + v37 + 3862) & 0xFB) == 0)
      {
        v38 = *(uint64_t **)(v11 + 32);
        v39 = *v38;
        v40 = v38[1];
        v41 = *(_QWORD *)(a2 + 832);
        if (v41)
          LOWORD(v41) = *(_WORD *)(v41 + 8);
        v43 = sub_1C5D56C70(a2, v37, (const llvm::APInt *)&v47, (llvm *)v46, *((uint64_t *)&v46 + 1), v39, v40, v34, v28, v29, v41);
        if (*(_WORD *)(a1 + 24) == 176)
          v44 = sub_1C6366480(a2, (uint64_t)v43, v42, (uint64_t)&v47, v45, *((uint64_t *)&v45 + 1));
        else
          v44 = sub_1C6366544(a2, (uint64_t)v43, v42, (uint64_t)&v47, v45, *((uint64_t *)&v45 + 1));
        v13 = v44;
        goto LABEL_7;
      }
    }
  }
LABEL_6:
  v13 = 0;
LABEL_7:
  if (v47)
    llvm::MetadataTracking::untrack((uint64_t)&v47, v47);
  return v13;
}

void sub_1C5CAED24()
{
  JUMPOUT(0x1CAA32FC0);
}

__n128 sub_1C5CAED38(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x30uLL);
  *(_QWORD *)v2 = &off_1E81982B8;
  *(_OWORD *)(v2 + 8) = *(_OWORD *)(a1 + 8);
  result = *(__n128 *)(a1 + 24);
  *(__n128 *)(v2 + 24) = result;
  *((_QWORD *)v2 + 5) = *(_QWORD *)(a1 + 40);
  return result;
}

__n128 sub_1C5CAED80(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  *(_QWORD *)a2 = &off_1E81982B8;
  result = *(__n128 *)(a1 + 8);
  v3 = *(_OWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 40) = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a2 + 24) = v3;
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1C5CAEDB0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  size_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  size_t v13;
  unsigned int v14;
  unint64_t v15;
  unint64_t v16;
  unsigned int v17;
  _QWORD *v18;
  unint64_t v19;
  uint64_t v20;
  _BOOL8 v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  _BOOL4 v26;
  _BOOL4 v27;
  int v28;
  unint64_t v30;
  unsigned int v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v39;
  unsigned int v40;
  void *__src;
  unsigned int v42;

  v4 = *a3;
  v5 = *(uint64_t **)(a1 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v7 = *(unsigned int *)(v6 + 32);
  v42 = v7;
  if (v7 > 0x40)
  {
    v9 = ((unint64_t)(v7 + 63) >> 3) & 0x3FFFFFF8;
    v8 = (void *)operator new[]();
    memcpy(v8, *(const void **)(v6 + 24), v9);
  }
  else
  {
    v8 = *(void **)(v6 + 24);
  }
  __src = v8;
  v10 = *(_QWORD *)(v4 + 80);
  v11 = *(unsigned int *)(v10 + 32);
  v40 = v11;
  if (v11 > 0x40)
  {
    v13 = ((unint64_t)(v11 + 63) >> 3) & 0x3FFFFFF8;
    v12 = (char *)operator new[]();
    memcpy(v12, *(const void **)(v10 + 24), v13);
  }
  else
  {
    v12 = *(char **)(v10 + 24);
  }
  v39 = v12;
  sub_1C5CAC260((llvm::APInt *)&__src, (llvm::APInt *)&v39, 1);
  v14 = v42;
  if (v42 < 0x41)
  {
    v15 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v42;
    if (!v42)
      v15 = 0;
    v16 = v15 & ((unint64_t)__src + (_QWORD)v39);
    v17 = **(_DWORD **)(a1 + 8);
    v18 = (_QWORD *)v16;
LABEL_23:
    if (v16 < v17)
      goto LABEL_25;
    goto LABEL_24;
  }
  v19 = v42 + 63;
  v18 = (_QWORD *)operator new[]();
  memcpy(v18, __src, (v19 >> 3) & 0x3FFFFFF8);
  v20 = 0;
  v21 = 0;
  v22 = v39;
  v23 = v19 >> 6;
  do
  {
    v24 = v18[v20];
    v25 = *(_QWORD *)&v22[v20 * 8] + v24;
    v26 = v25 < v24;
    v27 = v25 + 1 <= v24;
    if (v21)
    {
      ++v25;
      v21 = v27;
    }
    else
    {
      v21 = v26;
    }
    v18[v20++] = v25;
  }
  while (v19 >> 6 != v20);
  v28 = 0;
  v18[(v23 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v14;
  v17 = **(_DWORD **)(a1 + 8);
  do
  {
    if (v23-- < 1)
      break;
    v30 = v18[v23];
    v28 += __clz(v30);
  }
  while (!v30);
  v31 = v14 | 0xFFFFFFC0;
  if ((v14 & 0x3F) == 0)
    v31 = 0;
  if (v14 - v28 - v31 <= 0x40)
  {
    v16 = *v18;
    goto LABEL_23;
  }
LABEL_24:
  LODWORD(v16) = v17 - 1;
LABEL_25:
  v32 = *(_QWORD *)(a1 + 16);
  v33 = sub_1C6366AB4(*v5, v16, *(const llvm::APInt **)(a1 + 32), **(llvm ***)(a1 + 40), *(_QWORD *)(*(_QWORD *)(a1 + 40) + 8), 0, 0);
  v35 = v34;
  v36 = *(unsigned int *)(v32 + 8);
  if (v36 >= *(_DWORD *)(v32 + 12))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod(v32, v32 + 16, v36 + 1, 16);
    LODWORD(v36) = *(_DWORD *)(v32 + 8);
  }
  v37 = (_QWORD *)(*(_QWORD *)v32 + 16 * v36);
  *v37 = v33;
  v37[1] = v35;
  ++*(_DWORD *)(v32 + 8);
  if (v14 >= 0x41 && v18)
    MEMORY[0x1CAA32F9C](v18, 0x1000C8000313F17);
  if (v40 >= 0x41 && v39)
    MEMORY[0x1CAA32F9C](v39, 0x1000C8000313F17);
  if (v42 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return 1;
}

void sub_1C5CAF0BC()
{
  JUMPOUT(0x1CAA32FC0);
}

_DWORD *sub_1C5CAF0D0(uint64_t a1)
{
  _DWORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_1E8198300;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_1C5CAF108(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_1E8198300;
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 8);
  return result;
}

BOOL sub_1C5CAF128(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  unsigned int v13;
  unint64_t v14;
  _BOOL8 v15;
  unint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _BOOL8 v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BOOL4 v24;
  _BOOL4 v25;
  int v26;
  unint64_t v28;
  unsigned int v29;
  char *v31;
  unsigned int v32;
  void *__src;
  unsigned int v34;

  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  v34 = v6;
  if (v6 > 0x40)
  {
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v7 = (void *)operator new[]();
    memcpy(v7, *(const void **)(v5 + 24), v8);
  }
  else
  {
    v7 = *(void **)(v5 + 24);
  }
  __src = v7;
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v32 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v11 = (char *)operator new[]();
    memcpy(v11, *(const void **)(v9 + 24), v12);
  }
  else
  {
    v11 = *(char **)(v9 + 24);
  }
  v31 = v11;
  sub_1C5CAC260((llvm::APInt *)&__src, (llvm::APInt *)&v31, 1);
  v13 = v34;
  if (v34 >= 0x41)
  {
    v16 = v34 + 63;
    v17 = (_QWORD *)operator new[]();
    memcpy(v17, __src, (v16 >> 3) & 0x3FFFFFF8);
    v18 = 0;
    v19 = 0;
    v20 = v31;
    v21 = v16 >> 6;
    do
    {
      v22 = v17[v18];
      v23 = *(_QWORD *)&v20[v18 * 8] + v22;
      v24 = v23 < v22;
      v25 = v23 + 1 <= v22;
      if (v19)
      {
        ++v23;
        v19 = v25;
      }
      else
      {
        v19 = v24;
      }
      v17[v18++] = v23;
    }
    while (v16 >> 6 != v18);
    v26 = 0;
    v17[(v21 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
    do
    {
      if (v21-- < 1)
        break;
      v28 = v17[v21];
      v26 += __clz(v28);
    }
    while (!v28);
    v29 = v13 | 0xFFFFFFC0;
    if ((v13 & 0x3F) == 0)
      v29 = 0;
    v15 = v13 - v26 - v29 > 0x40 || *v17 >= (unint64_t)*(unsigned int *)(a1 + 8);
    MEMORY[0x1CAA32F9C](v17, 0x1000C8000313F17);
  }
  else
  {
    v14 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v34;
    if (!v34)
      v14 = 0;
    v15 = (v14 & ((unint64_t)__src + (_QWORD)v31)) >= *(unsigned int *)(a1 + 8);
  }
  if (v32 >= 0x41 && v31)
    MEMORY[0x1CAA32F9C](v31, 0x1000C8000313F17);
  if (v34 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return v15;
}

void sub_1C5CAF3BC()
{
  JUMPOUT(0x1CAA32FC0);
}

_DWORD *sub_1C5CAF3D0(uint64_t a1)
{
  _DWORD *result;

  result = operator new(0x10uLL);
  *(_QWORD *)result = &off_1E8198348;
  result[2] = *(_DWORD *)(a1 + 8);
  return result;
}

uint64_t sub_1C5CAF408(uint64_t result, uint64_t a2)
{
  *(_QWORD *)a2 = &off_1E8198348;
  *(_DWORD *)(a2 + 8) = *(_DWORD *)(result + 8);
  return result;
}

BOOL sub_1C5CAF428(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  size_t v12;
  unsigned int v13;
  unint64_t v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t *v17;
  uint64_t v18;
  _BOOL8 v19;
  char *v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  _BOOL4 v24;
  _BOOL4 v25;
  int v26;
  unint64_t v27;
  unint64_t v29;
  unsigned int v30;
  char *v32;
  unsigned int v33;
  void *__src;
  unsigned int v35;

  v4 = *a3;
  v5 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v6 = *(unsigned int *)(v5 + 32);
  v35 = v6;
  if (v6 > 0x40)
  {
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v7 = (void *)operator new[]();
    memcpy(v7, *(const void **)(v5 + 24), v8);
  }
  else
  {
    v7 = *(void **)(v5 + 24);
  }
  __src = v7;
  v9 = *(_QWORD *)(v4 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v33 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v11 = (char *)operator new[]();
    memcpy(v11, *(const void **)(v9 + 24), v12);
  }
  else
  {
    v11 = *(char **)(v9 + 24);
  }
  v32 = v11;
  sub_1C5CAC260((llvm::APInt *)&__src, (llvm::APInt *)&v32, 1);
  v13 = v35;
  if (v35 >= 0x41)
  {
    v16 = v35 + 63;
    v17 = (unint64_t *)operator new[]();
    memcpy(v17, __src, (v16 >> 3) & 0x3FFFFFF8);
    v18 = 0;
    v19 = 0;
    v20 = v32;
    v21 = v16 >> 6;
    do
    {
      v22 = v17[v18];
      v23 = *(_QWORD *)&v20[v18 * 8] + v22;
      v24 = v23 < v22;
      v25 = v23 + 1 <= v22;
      if (v19)
      {
        ++v23;
        v19 = v25;
      }
      else
      {
        v19 = v24;
      }
      v17[v18++] = v23;
    }
    while (v16 >> 6 != v18);
    v26 = 0;
    v17[(v21 - 1)] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v13;
    v27 = *(unsigned int *)(a1 + 8);
    do
    {
      if (v21-- < 1)
        break;
      v29 = v17[v21];
      v26 += __clz(v29);
    }
    while (!v29);
    v15 = 0;
    v30 = v13 | 0xFFFFFFC0;
    if ((v13 & 0x3F) == 0)
      v30 = 0;
    if (v13 - v26 - v30 <= 0x40)
      v15 = *v17 < v27;
    MEMORY[0x1CAA32F9C](v17, 0x1000C8000313F17);
  }
  else
  {
    v14 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v35;
    if (!v35)
      v14 = 0;
    v15 = (v14 & ((unint64_t)__src + (_QWORD)v32)) < *(unsigned int *)(a1 + 8);
  }
  if (v33 >= 0x41 && v32)
    MEMORY[0x1CAA32F9C](v32, 0x1000C8000313F17);
  if (v35 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return v15;
}

void sub_1C5CAF6B8()
{
  JUMPOUT(0x1CAA32FC0);
}

__n128 sub_1C5CAF6CC(uint64_t a1)
{
  char *v2;
  __n128 result;

  v2 = (char *)operator new(0x18uLL);
  *(_QWORD *)v2 = &off_1E8198390;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(v2 + 8) = result;
  return result;
}

__n128 sub_1C5CAF704(uint64_t a1, uint64_t a2)
{
  __n128 result;

  *(_QWORD *)a2 = &off_1E8198390;
  result = *(__n128 *)(a1 + 8);
  *(__n128 *)(a2 + 8) = result;
  return result;
}

uint64_t sub_1C5CAF724(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t *v4;
  unint64_t v5;
  unsigned int v6;
  BOOL v7;

  v3 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v4 = (unint64_t *)(v3 + 24);
  v5 = *(unsigned int *)(a1 + 8);
  v6 = *(_DWORD *)(v3 + 32);
  if (v6 >= 0x41)
  {
    if (v6 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v3 + 24)) > 0x40)
    {
      v7 = 1;
      goto LABEL_6;
    }
    v4 = (unint64_t *)*v4;
  }
  v7 = *v4 >= v5;
LABEL_6:
  **(_BYTE **)(a1 + 16) |= v7;
  return 1;
}

uint64_t *sub_1C5CAF7A4(uint64_t a1, uint64_t a2, BOOL a3)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v19;
  BOOL v20;
  unsigned __int8 *v21;
  llvm *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  BOOL v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  int v32;
  unsigned __int8 *v33;
  uint64_t *v34;
  unint64_t v35;
  unint64_t v36;
  unsigned __int8 *v37;
  uint64_t v38;
  unsigned __int8 *v39;
  unint64_t v40;
  unsigned __int8 *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int16 v45;
  unsigned __int8 *v46;
  int v47;
  llvm *v48;
  uint64_t v49;

  v3 = *(uint64_t **)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 40);
  v6 = *v3;
  v5 = v3[1];
  v7 = v3[5];
  v8 = v3[6];
  v9 = v3[10];
  v10 = v3[11];
  v11 = *(_QWORD *)(v4 + 8);
  v48 = *(llvm **)v4;
  v49 = v11;
  v12 = (unsigned __int8 *)(*(_QWORD *)(v6 + 40) + 16 * v5);
  if (v48 != *v12)
    return 0;
  v13 = *((_QWORD *)v12 + 1);
  v14 = (_BYTE)v48 || v11 == v13;
  if (!v14 || sub_1C6131328((unsigned __int8 *)&v48, a2, a3) != (llvm::Type *)1)
    return 0;
  v20 = v6 == v7 && (_DWORD)v5 == (_DWORD)v8;
  if (v20 || sub_1C5D622B8(v7, v8, 1))
  {
    v21 = *(unsigned __int8 **)(a1 + 64);
    v46 = v21;
    if (v21)
      llvm::MetadataTracking::track((uint64_t)&v46, v21, 2);
    v47 = *(_DWORD *)(a1 + 60);
    v22 = v48;
    v23 = v49;
    v24 = *(_QWORD *)(a2 + 832);
    if (v24)
      LOWORD(v24) = *(_WORD *)(v24 + 8);
    v44 = v10;
    v45 = v24;
    v43 = v9;
    v25 = a2;
    v26 = 172;
LABEL_29:
    v30 = v6;
    v31 = v5;
    goto LABEL_30;
  }
  v27 = v6 == v9 && (_DWORD)v5 == (_DWORD)v10;
  if (v27 || (v32 = sub_1C636CD34(v9, v10, 1)) != 0)
  {
    v28 = *(unsigned __int8 **)(a1 + 64);
    v46 = v28;
    if (v28)
      llvm::MetadataTracking::track((uint64_t)&v46, v28, 2);
    v47 = *(_DWORD *)(a1 + 60);
    v22 = v48;
    v23 = v49;
    v29 = *(_QWORD *)(a2 + 832);
    if (v29)
      LOWORD(v29) = *(_WORD *)(v29 + 8);
    v44 = v8;
    v45 = v29;
    v43 = v7;
    v25 = a2;
    v26 = 171;
    goto LABEL_29;
  }
  if (!sub_1C5D622B8(v9, v10, 1))
  {
    if (sub_1C636CD34(v7, v8, 1))
    {
      v39 = *(unsigned __int8 **)(a1 + 64);
      v46 = v39;
      if (v39)
        llvm::MetadataTracking::track((uint64_t)&v46, v39, 2);
      v47 = *(_DWORD *)(a1 + 60);
      v34 = sub_1C6366760(a2, (const llvm::APInt *)&v46, v6, v5, v48, v49);
      v36 = v40;
      if (v46)
        llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
      v41 = *(unsigned __int8 **)(a1 + 64);
      v46 = v41;
      if (v41)
        llvm::MetadataTracking::track((uint64_t)&v46, v41, 2);
      v47 = *(_DWORD *)(a1 + 60);
      v22 = v48;
      v23 = v49;
      v42 = *(_QWORD *)(a2 + 832);
      if (v42)
        LOWORD(v42) = *(_WORD *)(v42 + 8);
      v44 = v10;
      v45 = v42;
      v43 = v9;
      v25 = a2;
      v26 = 171;
      goto LABEL_43;
    }
    return 0;
  }
  v33 = *(unsigned __int8 **)(a1 + 64);
  v46 = v33;
  if (v33)
    llvm::MetadataTracking::track((uint64_t)&v46, v33, 2);
  v47 = *(_DWORD *)(a1 + 60);
  v34 = sub_1C6366760(a2, (const llvm::APInt *)&v46, v6, v5, v48, v49);
  v36 = v35;
  if (v46)
    llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
  v37 = *(unsigned __int8 **)(a1 + 64);
  v46 = v37;
  if (v37)
    llvm::MetadataTracking::track((uint64_t)&v46, v37, 2);
  v47 = *(_DWORD *)(a1 + 60);
  v22 = v48;
  v23 = v49;
  v38 = *(_QWORD *)(a2 + 832);
  if (v38)
    LOWORD(v38) = *(_WORD *)(v38 + 8);
  v44 = v8;
  v45 = v38;
  v43 = v7;
  v25 = a2;
  v26 = 172;
LABEL_43:
  v30 = (uint64_t)v34;
  v31 = v36;
LABEL_30:
  v15 = sub_1C5D56C70(v25, v26, (const llvm::APInt *)&v46, v22, v23, v30, v31, v19, v43, v44, v45);
  if (v46)
    llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
  return v15;
}

uint64_t sub_1C5CAFA98(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  int v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  uint64_t v29;
  int v30;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unsigned int v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned __int8 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  llvm *v72;
  uint64_t v73;
  uint64_t *v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  __int16 v82;
  __int16 v83;
  int v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  unsigned __int8 *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  unsigned int v93;
  unsigned __int8 *v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD v108[2];
  uint64_t v109;
  _QWORD v110[2];
  unsigned __int8 *v111;
  int v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  int v116;
  _BYTE v117[256];
  void *v118;
  uint64_t v119;
  _BYTE v120[128];
  __int128 v121;
  __int128 v122;
  uint64_t v123;

  v8 = a4;
  v123 = *MEMORY[0x1E0C80C00];
  v12 = sub_1C5D56858(a3, a4, 0);
  if (v12)
  {
    v13 = *(_QWORD *)(v12 + 80);
    v14 = *(_UNKNOWN **)(v13 + 32) == &unk_1C866F1C0 ? *(_QWORD *)(v13 + 40) : v13 + 24;
    if ((*(_BYTE *)(v14 + 28) & 7) == 1 && *(_WORD *)(a5 + 24) == 224)
    {
      v15 = *(uint64_t **)(a2 + 32);
      if (*(_WORD *)(a2 + 24) == 192)
      {
        v16 = v15 + 20;
      }
      else
      {
        v17 = *v15;
        if (*(_WORD *)(v17 + 24) != 193)
          goto LABEL_23;
        v15 = *(uint64_t **)(v17 + 32);
        v16 = v15 + 10;
      }
      v18 = *(_DWORD *)(*v16 + 76);
      v19 = *v15;
      v20 = *((_DWORD *)v15 + 2);
      v21 = sub_1C5D56858(v15[5], v15[6], 0);
      if (v21)
      {
        v22 = *(_QWORD *)(v21 + 80);
        v23 = *(_UNKNOWN **)(v22 + 32) == &unk_1C866F1C0 ? *(_QWORD *)(v22 + 40) : v22 + 24;
        if ((*(_BYTE *)(v23 + 28) & 7) == 3)
        {
          v24 = *(_QWORD *)(a5 + 32);
          if (*(_QWORD *)v24 == v19 && *(_DWORD *)(v24 + 8) == v20 && v18 <= 0x14 && ((1 << v18) & 0x101010) != 0)
          {
            v113 = (_BYTE *)a5;
            v114 = a6;
            v26 = 1;
            sub_1C5C5B0B4(a1, a2, (uint64_t *)&v113, 1, 1);
            return v26;
          }
        }
      }
    }
  }
LABEL_23:
  v27 = (unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40)
                          + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
  if (*v27)
  {
    if (*v27 - 15 < 0x9C)
      return 0;
  }
  else if ((*(_DWORD *)(*((_QWORD *)v27 + 1) + 8) & 0xFE) == 0x12)
  {
    return 0;
  }
  v28 = *(unsigned __int16 *)(a3 + 24);
  if (v28 != *(unsigned __int16 *)(a5 + 24))
    return 0;
  v29 = *(_QWORD *)(a3 + 48);
  if (!v29)
    return 0;
  v30 = 1;
  do
  {
    if (*(_DWORD *)(v29 + 8) == v8)
    {
      if (!v30)
        return 0;
      --v30;
    }
    v29 = *(_QWORD *)(v29 + 32);
  }
  while (v29);
  if (v30)
    return 0;
  v32 = *(_QWORD *)(a5 + 48);
  if (!v32)
    return 0;
  v33 = 1;
  do
  {
    if (*(_DWORD *)(v32 + 8) == (_DWORD)a6)
    {
      if (!v33)
        return 0;
      --v33;
    }
    v32 = *(_QWORD *)(v32 + 32);
  }
  while (v32);
  v26 = 0;
  if (v28 == 253 && !v33)
  {
    v34 = *(_QWORD *)(a3 + 32);
    v35 = *(_QWORD *)(a5 + 32);
    if (*(_QWORD *)v34 != *(_QWORD *)v35)
      return 0;
    if (*(_DWORD *)(v34 + 8) != *(_DWORD *)(v35 + 8))
      return 0;
    v36 = *(_QWORD *)(a3 + 96);
    if ((*(_WORD *)(v36 + 36) & 0xF00) != 0)
      return 0;
    if ((*(_BYTE *)(a3 + 26) & 8) != 0)
      return 0;
    v37 = *(_QWORD *)(a5 + 96);
    if ((*(_WORD *)(v37 + 36) & 0xF00) != 0)
      return 0;
    if ((*(_BYTE *)(a5 + 26) & 8) != 0)
      return 0;
    v38 = *(unsigned __int16 *)(a3 + 26);
    if ((v38 & 0x380) != 0)
      return 0;
    v39 = *(unsigned __int16 *)(a5 + 26);
    if ((v39 & 0x380) != 0
      || *(unsigned __int8 *)(a3 + 80) != *(unsigned __int8 *)(a5 + 80)
      || !*(_BYTE *)(a3 + 80) && *(_QWORD *)(a3 + 88) != *(_QWORD *)(a5 + 88))
    {
      return 0;
    }
    v40 = (v39 >> 10) & 3;
    if (v40 != 1)
    {
      v41 = (v38 >> 10) & 3;
      if (v41 != 1 && v41 != v40)
        return 0;
    }
    if (*(_DWORD *)(v36 + 16))
      return 0;
    if (*(_DWORD *)(v37 + 16))
      return 0;
    v42 = *(_QWORD *)(v34 + 40);
    if (*(_WORD *)(v42 + 24) == 39)
      return 0;
    if (*(_WORD *)(*(_QWORD *)(v35 + 40) + 24) == 39)
      return 0;
    v43 = *(_QWORD *)(*(_QWORD *)(v42 + 40) + 16 * *(unsigned int *)(v34 + 48));
    if (!(_BYTE)v43)
      return 0;
    v44 = a1[1];
    v45 = *(unsigned __int16 *)(a2 + 24);
    if (v43 != 1 && !*(_QWORD *)(v44 + 8 * v43 + 96))
      return 0;
    if (v45 <= 0x185 && (*(_BYTE *)(v44 + 390 * v43 + v45 + 3862) & 0xFB) != 0
      || (sub_1C636F90C(a5, a3) & 1) != 0
      || (sub_1C636F90C(a3, a5) & 1) != 0)
    {
      return 0;
    }
    v113 = v117;
    v114 = v117;
    v115 = 32;
    v116 = 0;
    v118 = v120;
    v119 = 0x1000000000;
    sub_1C4774094((llvm::SmallPtrSetImplBase *)&v113, a2);
    v46 = v119;
    if (v119 >= HIDWORD(v119))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v118, (uint64_t)v120, v119 + 1, 8);
      v46 = v119;
    }
    *((_QWORD *)v118 + v46) = a3;
    v47 = (v119 + 1);
    LODWORD(v119) = v47;
    if (v47 >= HIDWORD(v119))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v118, (uint64_t)v120, v47 + 1, 8);
      LODWORD(v47) = v119;
    }
    *((_QWORD *)v118 + v47) = a5;
    LODWORD(v119) = v119 + 1;
    v26 = 0;
    if ((sub_1C5CB0A7C(a3, (uint64_t)&v113, (unsigned int *)&v118, 0, 0) & 1) != 0)
      goto LABEL_131;
    v26 = 0;
    if ((sub_1C5CB0A7C(a5, (uint64_t)&v113, (unsigned int *)&v118, 0, 0) & 1) != 0)
      goto LABEL_131;
    v49 = *(uint64_t **)(a2 + 32);
    v50 = *v49;
    if (*(_WORD *)(a2 + 24) == 190)
    {
      v51 = v119;
      if (v119 >= HIDWORD(v119))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v118, (uint64_t)v120, v119 + 1, 8);
        v51 = v119;
      }
      *((_QWORD *)v118 + v51) = v50;
      LODWORD(v119) = v119 + 1;
      v52 = *(_QWORD *)(a3 + 48);
      if (v52)
      {
        while (*(_DWORD *)(v52 + 8) != 1)
        {
          v52 = *(_QWORD *)(v52 + 32);
          if (!v52)
            goto LABEL_92;
        }
        v26 = 0;
        if ((sub_1C5CB0A7C(a3, (uint64_t)&v113, (unsigned int *)&v118, 0, 0) & 1) != 0)
          goto LABEL_131;
      }
LABEL_92:
      v57 = *(_QWORD *)(a5 + 48);
      if (!v57)
        goto LABEL_97;
      while (*(_DWORD *)(v57 + 8) != 1)
      {
        v57 = *(_QWORD *)(v57 + 32);
        if (!v57)
          goto LABEL_97;
      }
      v26 = 0;
      if ((sub_1C5CB0A7C(a5, (uint64_t)&v113, (unsigned int *)&v118, 0, 0) & 1) == 0)
      {
LABEL_97:
        v58 = *a1;
        v59 = *(unsigned __int8 **)(a2 + 64);
        *(_QWORD *)&v121 = v59;
        if (v59)
          llvm::MetadataTracking::track((uint64_t)&v121, v59, 2);
        DWORD2(v121) = *(_DWORD *)(a2 + 60);
        v60 = *(_QWORD *)(a3 + 32);
        v61 = *(_QWORD *)(v60 + 40);
        v62 = *(_QWORD *)(v61 + 40) + 16 * *(unsigned int *)(v60 + 48);
        v63 = sub_1C4815A8C(v58, (const llvm::APInt *)&v121, *(llvm **)v62, *(_QWORD *)(v62 + 8), **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), v61, *(_QWORD *)(v60 + 48), *(_QWORD *)(*(_QWORD *)(a5 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a5 + 32) + 48), HIDWORD(*(_QWORD *)(*(_QWORD *)(a5 + 32) + 48)));
        goto LABEL_109;
      }
    }
    else
    {
      v53 = v49[5];
      v54 = v119;
      if (v119 >= HIDWORD(v119))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v118, (uint64_t)v120, v119 + 1, 8);
        v54 = v119;
      }
      *((_QWORD *)v118 + v54) = v50;
      v55 = (v119 + 1);
      LODWORD(v119) = v55;
      if (v55 >= HIDWORD(v119))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v118, (uint64_t)v120, v55 + 1, 8);
        LODWORD(v55) = v119;
      }
      *((_QWORD *)v118 + v55) = v53;
      LODWORD(v119) = v119 + 1;
      v56 = *(_QWORD *)(a3 + 48);
      if (v56)
      {
        while (*(_DWORD *)(v56 + 8) != 1)
        {
          v56 = *(_QWORD *)(v56 + 32);
          if (!v56)
            goto LABEL_101;
        }
        v26 = 0;
        if ((sub_1C5CB0A7C(a3, (uint64_t)&v113, (unsigned int *)&v118, 0, 0) & 1) != 0)
          goto LABEL_131;
      }
LABEL_101:
      v66 = *(_QWORD *)(a5 + 48);
      if (!v66)
        goto LABEL_106;
      while (*(_DWORD *)(v66 + 8) != 1)
      {
        v66 = *(_QWORD *)(v66 + 32);
        if (!v66)
          goto LABEL_106;
      }
      v26 = 0;
      if ((sub_1C5CB0A7C(a5, (uint64_t)&v113, (unsigned int *)&v118, 0, 0) & 1) == 0)
      {
LABEL_106:
        v67 = *a1;
        v68 = *(unsigned __int8 **)(a2 + 64);
        *(_QWORD *)&v121 = v68;
        if (v68)
          llvm::MetadataTracking::track((uint64_t)&v121, v68, 2);
        DWORD2(v121) = *(_DWORD *)(a2 + 60);
        v69 = *(_QWORD *)(a3 + 32);
        v70 = *(_QWORD *)(v69 + 40);
        v71 = *(_QWORD *)(v70 + 40) + 16 * *(unsigned int *)(v69 + 48);
        v72 = *(llvm **)v71;
        v73 = *(_QWORD *)(v71 + 8);
        v74 = *(uint64_t **)(a2 + 32);
        v63 = sub_1C63698B8(v67, (const char *)0xC0, (const llvm::APInt *)&v121, v72, v73, *v74, v74[1], v48, v74[5], v74[6], v70, *(_QWORD *)(v69 + 48), *(_QWORD *)(*(_QWORD *)(a5 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a5 + 32) + 48), v74[20], v74[21]);
LABEL_109:
        v106 = (uint64_t)v63;
        v75 = v64;
        if ((_QWORD)v121)
          llvm::MetadataTracking::untrack((uint64_t)&v121, (unsigned __int8 *)v121);
        v76 = *(_QWORD *)(a3 + 96);
        v77 = (1 << *(_BYTE *)(v76 + 34)) | *(_QWORD *)(v76 + 8);
        v78 = 63 - __clz(v77 & -v77);
        v79 = (1 << *(_BYTE *)(*(_QWORD *)(a5 + 96) + 34)) | *(_QWORD *)(*(_QWORD *)(a5 + 96) + 8);
        v80 = (63 - __clz(v79 & -v79));
        if (v80 >= v78)
          v81 = v78;
        else
          v81 = v80;
        v82 = *(_WORD *)(v76 + 32);
        if ((*(_BYTE *)(a5 + 26) & 0x40) == 0)
          v82 &= 0x1DFu;
        if ((*(_BYTE *)(a5 + 26) & 0x20) != 0)
          v83 = v82;
        else
          v83 = v82 & 0x1EF;
        v84 = (*(unsigned __int16 *)(a3 + 26) >> 10) & 3;
        v85 = *a1;
        if (v84 == 1)
        {
          v84 = (*(unsigned __int16 *)(a5 + 26) >> 10) & 3;
        }
        else if (!v84)
        {
          v86 = *(uint64_t **)(a2 + 40);
          v87 = v86[1];
          v105 = *v86;
          v88 = *(unsigned __int8 **)(a2 + 64);
          v111 = v88;
          if (v88)
            llvm::MetadataTracking::track((uint64_t)&v111, v88, 2);
          v112 = *(_DWORD *)(a2 + 60);
          v89 = *(uint64_t **)(a3 + 32);
          v90 = *v89;
          v91 = v89[1];
          v109 = 0;
          v110[0] = 0;
          *(_QWORD *)((char *)v110 + 5) = 0;
          v121 = 0u;
          v122 = 0u;
          v92 = sub_1C63681B0(v85, v105, v87, (uint64_t)&v111, v90, v91, v106, v75, (__int128 *)&v109, (unsigned __int16)v81 | 0x100u, (v81 | 0x100uLL) >> 32, v83, (uint64_t)&v121, 0);
LABEL_128:
          v103 = v92;
          v104 = v93;
          if (v111)
            llvm::MetadataTracking::untrack((uint64_t)&v111, v111);
          *(_QWORD *)&v121 = v103;
          *((_QWORD *)&v121 + 1) = v104;
          v26 = 1;
          sub_1C5C5B0B4(a1, a2, (uint64_t *)&v121, 1, 1);
          *(_QWORD *)&v121 = v103;
          DWORD2(v121) = 0;
          *(_QWORD *)&v122 = v103;
          DWORD2(v122) = 1;
          sub_1C5C5B0B4(a1, a3, (uint64_t *)&v121, 2, 1);
          *(_QWORD *)&v121 = v103;
          DWORD2(v121) = 0;
          *(_QWORD *)&v122 = v103;
          DWORD2(v122) = 1;
          sub_1C5C5B0B4(a1, a5, (uint64_t *)&v121, 2, 1);
          goto LABEL_131;
        }
        v94 = *(unsigned __int8 **)(a2 + 64);
        v111 = v94;
        if (v94)
          llvm::MetadataTracking::track((uint64_t)&v111, v94, 2);
        v112 = *(_DWORD *)(a2 + 60);
        v95 = *(uint64_t **)(a2 + 40);
        v96 = *v95;
        v97 = v95[1];
        v98 = *(uint64_t **)(a3 + 32);
        v99 = *v98;
        v100 = v98[1];
        v107 = 0;
        v108[0] = 0;
        *(_QWORD *)((char *)v108 + 5) = 0;
        v101 = *(_QWORD *)(a3 + 80);
        v102 = *(_QWORD *)(a3 + 88);
        v121 = 0u;
        v122 = 0u;
        v92 = sub_1C636B4C8(v85, v84, (uint64_t)&v111, v96, v97, v99, v100, v65, v106, v75, (__int128 *)&v107, v101, v102, (unsigned __int16)v81 | 0x100u, (v81 | 0x100uLL) >> 32, v83, (uint64_t)&v121);
        goto LABEL_128;
      }
    }
LABEL_131:
    if (v118 != v120)
      free(v118);
    if (v114 != v113)
      free(v114);
  }
  return v26;
}

uint64_t sub_1C5CB0470(_QWORD **a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  unsigned int v15;

  if ((*((_WORD *)*a1 + 510) & 0x10) != 0)
  {
    v11 = (uint64_t *)(*(_QWORD *)(a2 + 40) + 16 * a3);
    v12 = *v11;
    v13 = v11[1];
    if (*v11)
    {
      v14 = (v12 + 104) >= 0x13u && (v12 - 8) >= 7u;
      if (v14 && (v12 - 75) >= 0x2Du)
        return 0;
    }
    else
    {
      if ((*(_DWORD *)(v13 + 8) & 0xFE) == 0x12)
        v15 = *(unsigned __int8 *)(**(_QWORD **)(v13 + 16) + 8);
      else
        v15 = *(_DWORD *)(v13 + 8);
      if (v15 > 6)
        return 0;
    }
    if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)a6 + 1008))(a6)
      && sub_1C5D51784(a1, a2, a3, 0, 0))
    {
      return sub_1C5D51784(a1, a4, a5, 0, 0);
    }
  }
  return 0;
}

uint64_t *sub_1C5CB0584(const llvm::APInt *a1, llvm *a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, int a12, int a13, unsigned int a14, unint64_t a15, uint64_t a16)
{
  _BOOL4 v23;
  uint64_t v28;
  uint64_t *result;
  uint64_t v30;
  uint64_t v31;
  _BYTE v33[8];
  unsigned __int8 v34;

  v23 = a4 == a9 && (_DWORD)a5 == a10;
  if (!v23 || a6 != a11 || (_DWORD)a7 != a12)
  {
    if (a4 != a11 || (_DWORD)a5 != a12)
      return 0;
    if (a6 != a9 || (_DWORD)a7 != a10)
      return 0;
  }
  llvm::TargetLoweringBase::getTypeConversion(a15, *(llvm::EVT **)(a16 + 56), (_BOOL8)a2, a3, (uint64_t)v33);
  if (a14 > 0x15)
    return 0;
  if (((1 << a14) & 0xC0C0C) != 0)
  {
    if (v23)
      v30 = 249;
    else
      v30 = 248;
    if ((_BYTE)a2
      && (a2 == 1 || *(_QWORD *)(a15 + 8 * a2 + 96))
      && (*(_BYTE *)(a15 + 390 * a2 + v30 + 3862) & 0xFB) == 0)
    {
      goto LABEL_55;
    }
    if (v23)
      v30 = 247;
    else
      v30 = 246;
    if (!v34)
      return (uint64_t *)v34;
  }
  else
  {
    result = 0;
    if (((1 << a14) & 0x303030) == 0)
      return result;
    if (v23)
      v30 = 248;
    else
      v30 = 249;
    if ((_BYTE)a2
      && (a2 == 1 || *(_QWORD *)(a15 + 8 * a2 + 96))
      && (*(_BYTE *)(a15 + 390 * a2 + v30 + 3862) & 0xFB) == 0)
    {
      goto LABEL_55;
    }
    if (v23)
      v30 = 246;
    else
      v30 = 247;
    if (!v34)
      return (uint64_t *)v34;
  }
  if (v34 != 1 && !*(_QWORD *)(a15 + 8 * v34 + 96)
    || (*(_BYTE *)(a15 + 390 * v34 + v30 + 3862) & 0xFB) != 0)
  {
    return 0;
  }
LABEL_55:
  v31 = *(_QWORD *)(a16 + 832);
  if (v31)
    LOWORD(v31) = *(_WORD *)(v31 + 8);
  return sub_1C5D56C70(a16, v30, a1, a2, a3, a4, a5, v28, a6, a7, v31);
}

uint64_t *sub_1C5CB07A4(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  llvm *v13;
  uint64_t v14;
  int v15;
  uint64_t *v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  BOOL v21;
  unsigned __int8 *v22;
  llvm::Type *v23;
  _QWORD *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  BOOL v33;
  uint64_t *v34;
  unsigned __int8 *v36;
  llvm::Type *v37;
  _QWORD *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned __int8 *v46;
  int v47;
  __int128 v48;

  v4 = *(uint64_t **)(a1 + 32);
  v5 = *v4;
  v6 = *((_DWORD *)v4 + 2);
  v7 = v4[5];
  v8 = v4[6];
  v10 = v4[10];
  v9 = v4[11];
  if (!sub_1C5C9F100(v7, v8, 0))
    return 0;
  if (!sub_1C5C9F100(v10, v9, 0))
    return 0;
  if (*(_WORD *)(v5 + 24) != 193)
    return 0;
  v11 = *(_QWORD *)(v5 + 48);
  if (!v11)
    return 0;
  v12 = *(_QWORD *)(a1 + 40);
  v13 = *(llvm **)v12;
  v14 = *(_QWORD *)(v12 + 8);
  v15 = 1;
  do
  {
    if (*(_DWORD *)(v11 + 8) == v6)
    {
      if (!v15)
        return 0;
      --v15;
    }
    v11 = *(_QWORD *)(v11 + 32);
  }
  while (v11);
  if (v15)
    return 0;
  v16 = *(uint64_t **)(v5 + 32);
  v17 = (unsigned __int8 *)(*(_QWORD *)(*v16 + 40) + 16 * *((unsigned int *)v16 + 2));
  if (v13 != *v17 || !(_BYTE)v13 && v14 != *((_QWORD *)v17 + 1))
    return 0;
  v48 = *(_OWORD *)v16;
  v18 = v16[5];
  v19 = v16[6];
  v20 = *(_DWORD *)(v16[10] + 76);
  if (v20 == 18)
  {
    if (sub_1C5D62374(v18, v19, 0) && sub_1C5D62374(v10, v9, 0))
    {
      v36 = *(unsigned __int8 **)(a1 + 64);
      v46 = v36;
      if (v36)
        llvm::MetadataTracking::track((uint64_t)&v46, v36, 2);
      v47 = *(_DWORD *)(a1 + 60);
      v37 = sub_1C6329368((unsigned int *)&v48, (uint64_t)v36, v33);
      v38 = sub_1C6366AB4(a2, (uint64_t)v37 - 1, (const llvm::APInt *)&v46, v13, v14, 0, 0);
      v41 = *(_QWORD *)(a2 + 832);
      if (v41)
        LOWORD(v41) = *(_WORD *)(v41 + 8);
      v43 = sub_1C5D56C70(a2, 176, (const llvm::APInt *)&v46, v13, v14, v48, *((unint64_t *)&v48 + 1), v40, (uint64_t)v38, v39, v41);
      v45 = *(_QWORD *)(a2 + 832);
      if (v45)
        LOWORD(v45) = *(_WORD *)(v45 + 8);
      v32 = sub_1C5D56C70(a2, 172, (const llvm::APInt *)&v46, v13, v14, (uint64_t)v43, v42, v44, v7, v8, v45);
      goto LABEL_36;
    }
    return 0;
  }
  if (v20 != 20 || !sub_1C636CD34(v18, v19, 0) || !sub_1C636CD34(v10, v9, 0))
    return 0;
  v22 = *(unsigned __int8 **)(a1 + 64);
  v46 = v22;
  if (v22)
    llvm::MetadataTracking::track((uint64_t)&v46, v22, 2);
  v47 = *(_DWORD *)(a1 + 60);
  v23 = sub_1C6329368((unsigned int *)&v48, (uint64_t)v22, v21);
  v24 = sub_1C6366AB4(a2, (uint64_t)v23 - 1, (const llvm::APInt *)&v46, v13, v14, 0, 0);
  v27 = *(_QWORD *)(a2 + 832);
  if (v27)
    LOWORD(v27) = *(_WORD *)(v27 + 8);
  v29 = sub_1C5D56C70(a2, 176, (const llvm::APInt *)&v46, v13, v14, v48, *((unint64_t *)&v48 + 1), v26, (uint64_t)v24, v25, v27);
  v31 = *(_QWORD *)(a2 + 832);
  if (v31)
    LOWORD(v31) = *(_WORD *)(v31 + 8);
  v32 = sub_1C5D56C70(a2, 171, (const llvm::APInt *)&v46, v13, v14, (uint64_t)v29, v28, v30, v7, v8, v31);
LABEL_36:
  v34 = v32;
  if (v46)
    llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
  return v34;
}

uint64_t sub_1C5CB0A7C(uint64_t a1, uint64_t a2, unsigned int *a3, unsigned int a4, int a5)
{
  _QWORD *v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  int v15;
  int v16;
  unsigned int v17;
  uint64_t v18;
  int v19;
  BOOL v20;
  uint64_t v22;
  char v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  unint64_t v28;
  void *__src;
  uint64_t v31;
  _QWORD v32[9];

  v32[8] = *MEMORY[0x1E0C80C00];
  __src = v32;
  v31 = 0x800000000;
  v10 = sub_1C477672C(a2, a1);
  v11 = *(_QWORD *)(a2 + 8);
  if (v11 == *(_QWORD *)a2)
    v12 = (unsigned int *)(a2 + 20);
  else
    v12 = (unsigned int *)(a2 + 16);
  if (v10 != (_QWORD *)(v11 + 8 * *v12))
  {
LABEL_5:
    v13 = 1;
    goto LABEL_6;
  }
  v15 = *(_DWORD *)(a1 + 28);
  if (v15 >= -1)
    v16 = *(_DWORD *)(a1 + 28);
  else
    v16 = ~v15;
  v17 = a3[2];
  if (v17)
  {
    while (1)
    {
      v18 = *(_QWORD *)(*(_QWORD *)a3 + 8 * v17-- - 8);
      a3[2] = v17;
      if (a5)
      {
        if (v16 >= 1)
        {
          v19 = *(_DWORD *)(v18 + 28);
          v20 = *(_WORD *)(v18 + 24) == 2 || v19 < 1;
          if (!v20 && v19 < v16)
            break;
        }
      }
      if (*(_WORD *)(v18 + 56))
      {
        v23 = 0;
        v24 = *(uint64_t **)(v18 + 32);
        v25 = 40 * *(unsigned __int16 *)(v18 + 56);
        do
        {
          v26 = *v24;
          sub_1C4774094((llvm::SmallPtrSetImplBase *)a2, *v24);
          if (v27)
          {
            v28 = a3[2];
            if (v28 >= a3[3])
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)a3, (uint64_t)(a3 + 4), v28 + 1, 8);
              v28 = a3[2];
            }
            *(_QWORD *)(*(_QWORD *)a3 + 8 * v28) = v26;
            ++a3[2];
          }
          v23 |= v26 == a1;
          v24 += 5;
          v25 -= 40;
        }
        while (v25);
        if ((v23 & 1) != 0)
        {
          v13 = 1;
          goto LABEL_14;
        }
        v17 = a3[2];
      }
      if (a4)
      {
        if (*(_DWORD *)(a2 + 20) - *(_DWORD *)(a2 + 24) >= a4 || v17 == 0)
          goto LABEL_13;
      }
      else
      {
LABEL_46:
        if (!v17)
          goto LABEL_13;
      }
    }
    v22 = v31;
    if (v31 >= (unint64_t)HIDWORD(v31))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&__src, (uint64_t)v32, v31 + 1, 8);
      v22 = v31;
    }
    *((_QWORD *)__src + v22) = v18;
    LODWORD(v31) = v31 + 1;
    v17 = a3[2];
    goto LABEL_46;
  }
LABEL_13:
  v13 = 0;
LABEL_14:
  sub_1C618A450(a3, __src, (_BYTE *)__src + 8 * v31);
  if (a4 && *(_DWORD *)(a2 + 20) - *(_DWORD *)(a2 + 24) >= a4)
    goto LABEL_5;
LABEL_6:
  if (__src != v32)
    free(__src);
  return v13;
}

uint64_t *sub_1C5CB0CE8(_QWORD **a1, const llvm::APInt *a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unint64_t a8, uint64_t a9, unint64_t a10, unsigned int a11, unsigned __int8 a12)
{
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD **v20;
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23;
  uint64_t v24;
  llvm *v25;
  int v26;
  int v27;
  int v28;
  _QWORD *v29;
  _QWORD *v30;
  int v31;
  uint64_t v33;
  llvm::APInt *v34;
  unsigned int v35;
  BOOL v36;
  uint64_t *v38;
  _QWORD *v40;
  int v41;
  _QWORD *v42;
  int v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  llvm::PoisonValue *v50;
  unsigned __int8 v51;
  uint64_t v52;
  unint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  const char *v56;
  unsigned int v57;
  uint64_t v58;
  unsigned __int8 *v59;
  uint64_t v60;
  _QWORD *v61;
  llvm *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  llvm *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unsigned int v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t ConstantPool;
  int v85;
  uint64_t v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  _BOOL4 v91;
  const char *v92;
  BOOL v93;
  unsigned int v94;
  unsigned __int8 *v95;
  _BOOL4 v96;
  uint64_t *v97;
  _BOOL4 v98;
  int v99;
  int v100;
  uint64_t v101;
  llvm::APInt *v102;
  unsigned int v103;
  int v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  int v108;
  int v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  uint64_t v120;
  llvm::APInt *v121;
  unsigned int v122;
  _BOOL4 v123;
  llvm::APInt *v124;
  unsigned int v125;
  uint64_t v126;
  uint64_t v127;
  unsigned int v128;
  uint64_t v129;
  llvm *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  const void *v138;
  uint64_t v139;
  uint64_t v140;
  llvm::APInt *v141;
  unsigned int v142;
  uint64_t v143;
  int v144;
  int v145;
  BOOL v146;
  int v147;
  int v148;
  int v149;
  uint64_t v150;
  __int128 v151;
  unsigned int v152;
  int v153;
  int v154;
  uint64_t v155;
  llvm *v156;
  uint64_t v157;
  llvm::Type *v158;
  _QWORD *v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  unint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  int v175;
  unint64_t v176;
  int8x8_t *v177;
  int8x8_t v178;
  uint8x8_t v179;
  int v180;
  unint64_t v181;
  int8x8_t *v182;
  int8x8_t v183;
  uint8x8_t v184;
  llvm::APInt *v185;
  int v186;
  uint64_t v187;
  unsigned int v188;
  int v189;
  _BOOL4 v190;
  _BOOL4 v191;
  uint64_t *v192;
  uint64_t v193;
  int v194;
  int8x8_t *v195;
  int8x8_t *v196;
  uint64_t v197;
  uint8x8_t v198;
  __int32 v199;
  uint64_t v200;
  _QWORD *v201;
  uint64_t v202;
  uint64_t v203;
  int64_t v204;
  int v205;
  unint64_t v207;
  _BOOL4 v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  __int16 v213;
  uint64_t v214;
  const char *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  llvm::APInt *v219;
  unsigned int v220;
  int v221;
  unint64_t v222;
  unsigned int v223;
  const char *v224;
  unsigned int v225;
  uint64_t v226;
  _QWORD *v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t *v231;
  unint64_t v232;
  uint64_t v233;
  unsigned int v234;
  _QWORD *v235;
  unsigned __int8 *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t *v241;
  unsigned int v242;
  unint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unsigned int v248;
  uint64_t *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  unint64_t v254;
  int v255;
  unint64_t ExtendedSizeInBits;
  int v257;
  uint64_t v258;
  unsigned __int8 *v259;
  uint64_t *v260;
  unsigned int v261;
  uint64_t v262;
  unsigned __int8 *v263;
  uint64_t v264;
  __int16 v265;
  unsigned int v266;
  unint64_t v267;
  uint64_t v268;
  llvm::APInt *v269;
  unsigned int v270;
  int v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  llvm *v275;
  uint64_t v276;
  unsigned __int8 *v277;
  uint64_t v278;
  llvm *v279;
  uint64_t v280;
  _QWORD *v281;
  unint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _QWORD *v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t *v289;
  unint64_t v290;
  uint64_t v291;
  uint64_t v292;
  __int16 v293;
  unsigned int v294;
  uint64_t v295;
  unsigned int v296;
  unint64_t v297;
  int8x8_t *v298;
  int8x8_t v299;
  uint8x8_t v300;
  uint64_t v301;
  char v302;
  uint64_t v303;
  unsigned int v304;
  unsigned int v305;
  uint64_t v306;
  unsigned __int8 *v307;
  uint64_t v308;
  uint64_t *v309;
  llvm *ShiftAmountTy;
  uint64_t v311;
  uint64_t v312;
  _QWORD *v313;
  unint64_t v314;
  unint64_t v315;
  uint64_t v316;
  unsigned __int8 *v317;
  uint64_t v318;
  uint64_t *v319;
  unint64_t v320;
  unint64_t v321;
  uint64_t v322;
  unsigned __int8 *v323;
  uint64_t v324;
  uint64_t *v325;
  llvm *v326;
  uint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  unint64_t v330;
  unint64_t v331;
  uint64_t v332;
  unsigned __int8 *v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t *v336;
  unint64_t v337;
  unint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _QWORD *v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  llvm *v347;
  unsigned __int8 v348;
  const llvm::APInt *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  unint64_t v354;
  uint64_t v355;
  uint64_t *v356;
  unint64_t v357;
  unint64_t v358;
  llvm *v359;
  uint64_t v360;
  _QWORD **v361;
  llvm::APInt *v362;
  int8x8_t *v363;
  uint64_t v364;
  uint64_t v365;
  llvm *v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v374;
  void *v375;
  int v376;
  __int128 v377;
  llvm *v378;
  uint64_t v379;
  _OWORD v380[2];
  __int128 v381;
  int v382;
  char v383;
  _QWORD v384[4];

  v13 = a7;
  v15 = a9;
  v14 = a10;
  v384[2] = *MEMORY[0x1E0C80C00];
  if (a7 != a9 || (_DWORD)a8 != (_DWORD)a10)
  {
    v20 = a1;
    v21 = *(_QWORD *)(a3 + 40) + 16 * a4;
    v23 = *(_QWORD *)(v21 + 8);
    v378 = *(llvm **)v21;
    v22 = v378;
    v379 = v23;
    v25 = (llvm *)(*(uint64_t (**)(_QWORD *, uint64_t, _QWORD, llvm *, uint64_t))(*a1[1] + 400))(a1[1], *(_QWORD *)(*(_QWORD *)(*v20)[5] + 40) + 272, (*v20)[7], v378, v23);
    v377 = *(_OWORD *)(*(_QWORD *)(v13 + 40) + 16 * a8);
    v26 = *(unsigned __int16 *)(a5 + 24);
    if (v26 == 35 || v26 == 11)
      v368 = a5;
    else
      v368 = 0;
    v27 = *(unsigned __int16 *)(v13 + 24);
    if (v27 == 35 || v27 == 11)
      v370 = v13;
    else
      v370 = 0;
    v28 = *(unsigned __int16 *)(a9 + 24);
    if (v28 == 35 || v28 == 11)
      v369 = a9;
    else
      v369 = 0;
    v365 = v24;
    v366 = v25;
    v371 = a3;
    v29 = sub_1C5D443A8(*v20, v25, v24, a3, a4, a5, a6, a11, a2);
    if (v29)
    {
      v30 = v29;
      sub_1C5C5B004((uint64_t)v20, (uint64_t)v29);
      v31 = *((unsigned __int16 *)v30 + 12);
      if (v31 == 35 || v31 == 11)
      {
        v33 = v30[10];
        v34 = (llvm::APInt *)(v33 + 24);
        v35 = *(_DWORD *)(v33 + 32);
        if (v35 > 0x40)
          v36 = llvm::APInt::countLeadingZerosSlowCase(v34) == v35;
        else
          v36 = *(_QWORD *)v34 == 0;
        if (v36)
          return (uint64_t *)a9;
        else
          return (uint64_t *)v13;
      }
    }
    v364 = a8;
    v40 = (_QWORD *)(*(_QWORD *)(v371 + 40) + 16 * a4);
    v349 = a2;
    v361 = v20;
    v355 = a5;
    if ((*(unsigned int (**)(_QWORD *, _QWORD, _QWORD))(*v20[1] + 112))(v20[1], *v40, v40[1]))
    {
      v41 = *(unsigned __int16 *)(v13 + 24);
      if (v41 == 36 || v41 == 12)
        v42 = (_QWORD *)v13;
      else
        v42 = 0;
      v43 = *(unsigned __int16 *)(a9 + 24);
      if (v43 == 36 || v43 == 12)
      {
        if (v42)
        {
          if (*(_BYTE *)(*(_QWORD *)(v13 + 40) + 16 * a8))
          {
            v44 = v20[1];
            if (v44[*(unsigned __int8 *)(*(_QWORD *)(v13 + 40) + 16 * a8) + 12])
            {
              if (*((_BYTE *)v44 + 390 * *(unsigned __int8 *)(*(_QWORD *)(v13 + 40) + 16 * a8) + 3874)
                && ((*(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD))(*v44 + 480))(v44, v42[10] + 24, *(_QWORD *)v42[5], *(_QWORD *)(v42[5] + 8), *((unsigned __int8 *)v20 + 35)) & 1) == 0&& ((*(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD))(*v20[1] + 480))(v20[1], *(_QWORD *)(a9 + 80) + 24, **(_QWORD **)(a9 + 40), *(_QWORD *)(*(_QWORD *)(a9 + 40) + 8), *((unsigned __int8 *)v20 + 35)) & 1) == 0&& ((v45 = v42[6]) != 0 && !*(_QWORD *)(v45 + 32)|| (v46 = *(_QWORD *)(a9 + 48)) != 0 && !*(_QWORD *)(v46 + 32)))
              {
                v47 = v42[10];
                v384[0] = *(_QWORD *)(a9 + 80);
                v384[1] = v47;
                v48 = *(_QWORD *)v384[0];
                v49 = *(_QWORD *)(*(_QWORD *)(*v20)[5] + 40) + 272;
                llvm::ArrayType::get(*(llvm::ArrayType **)v384[0], (llvm::Type *)2);
                v356 = (uint64_t *)llvm::ConstantArray::get(v50, (llvm::Type *)v384, 2);
                v350 = (uint64_t)*v20;
                v348 = (*(uint64_t (**)(_QWORD *, uint64_t, _QWORD))(*v20[1] + 32))(v20[1], *(_QWORD *)(*(_QWORD *)(*v20)[5] + 40) + 272, 0);
                llvm::DataLayout::getAlignment(v49, v48);
                v52 = sub_1C5D40C8C(v350, v356, (llvm *)v348, 0, v51 | 0x100u, 0, 0, 0);
                v357 = v53;
                v351 = v52;
                v346 = *(unsigned __int8 *)(v52 + 92);
                v54 = sub_1C63662D4((uint64_t)*v20, 0, a2, 0);
                v344 = v55;
                v57 = sub_1C4E3D148(v49, *(_QWORD *)v384[0]);
                if ((_DWORD)v56 == 1)
                v58 = (uint64_t)*v20;
                v59 = *(unsigned __int8 **)(a9 + 64);
                *(_QWORD *)&v380[0] = v59;
                if (v59)
                  llvm::MetadataTracking::track((uint64_t)v380, v59, 2);
                DWORD2(v380[0]) = *(_DWORD *)(a9 + 60);
                v341 = sub_1C63662D4(v58, v57, (const llvm::APInt *)v380, 0);
                v345 = v60;
                if (*(_QWORD *)&v380[0])
                  llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                v61 = *v361;
                v62 = (llvm *)(*(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD))(*v361[1] + 400))(v361[1], *(_QWORD *)(*(_QWORD *)(*v361)[5] + 40) + 272, (*v361)[7], *(_QWORD *)(*(_QWORD *)(v371 + 40) + 16 * a4), *(_QWORD *)(*(_QWORD *)(v371 + 40) + 16 * a4 + 8));
                v342 = v63;
                v64 = sub_1C6367818(v61, a11);
                v67 = v61[104];
                if (v67)
                  LOWORD(v67) = *(_WORD *)(v67 + 8);
                v68 = sub_1C5D58E08((uint64_t)v61, (const char *)0xC1, a2, v62, v342, v371, a4, v66, v355, a6, v64, v65, SHIDWORD(v65), v67);
                v343 = v69;
                sub_1C5C5B004((uint64_t)v361, (uint64_t)v68);
                v70 = sub_1C4815A8C((uint64_t)*v361, a2, *(llvm **)(v54[5] + 16 * v344), *(_QWORD *)(v54[5] + 16 * v344 + 8), (uint64_t)v68, v343, (uint64_t)v341, v345, (uint64_t)v54, v344, SHIDWORD(v344));
                v72 = v71;
                sub_1C5C5B004((uint64_t)v361, (uint64_t)v70);
                v74 = *(_QWORD *)(v351 + 40) + 16 * v357;
                v75 = *(llvm **)v74;
                v76 = *(_QWORD *)(v74 + 8);
                v77 = (*v361)[104];
                if (v77)
                  LOWORD(v77) = *(_WORD *)(v77 + 8);
                v78 = sub_1C5D56C70((uint64_t)*v361, 56, a2, v75, v76, v351, v357, v73, (uint64_t)v70, v72, v77);
                v358 = v357 & 0xFFFFFFFF00000000 | v79;
                v20 = v361;
                sub_1C5C5B004((uint64_t)v361, (uint64_t)v78);
                v80 = (uint64_t)*v361;
                v81 = (uint64_t *)v42[5];
                v82 = *v81;
                v83 = v81[1];
                v352 = (uint64_t)(*v361 + 14);
                ConstantPool = llvm::PseudoSourceValueManager::getConstantPool(*(llvm::PseudoSourceValueManager **)((*v361)[5] + 432));
                v85 = 0;
                *(_QWORD *)&v381 = ConstantPool | 4;
                *((_QWORD *)&v381 + 1) = 0;
                v383 = 0;
                if (ConstantPool)
                  v85 = *(_DWORD *)(ConstantPool + 12);
                v382 = v85;
                memset(v380, 0, sizeof(v380));
                v86 = (uint64_t)sub_1C63681B0(v80, v82, v83, (uint64_t)v349, v352, 0, (uint64_t)v78, v358, &v381, (unsigned __int16)v346 | 0x100u, (v346 | 0x100uLL) >> 32, 0, (uint64_t)v380, 0);
                v14 = a10;
                v15 = a9;
                a5 = v355;
                if (v86)
                  return (uint64_t *)v86;
              }
            }
          }
        }
      }
    }
    v87 = (uint64_t *)(*(_QWORD *)(v371 + 40) + 16 * a4);
    v89 = *v87;
    v88 = v87[1];
    *(_QWORD *)&v380[0] = *v87;
    *((_QWORD *)&v380[0] + 1) = v88;
    v90 = *(_QWORD *)(v13 + 40) + 16 * a8;
    v359 = *(llvm **)v90;
    v353 = *(_QWORD *)(v90 + 8);
    v91 = sub_1C6368AD4(v15);
    v94 = a11;
    if (!v91
      || (v89 != v359 || !(_BYTE)v89 && v88 != v353)
      && (v123 = sub_1C6329714((unsigned __int8 *)v380, (uint64_t)v359, v353), v94 = a11, !v123))
    {
LABEL_72:
      if (v94 == 17 && *(_WORD *)(v371 + 24) == 171)
      {
        v95 = *(unsigned __int8 **)(v371 + 40);
        if (*v95 == v377 && (*v95 || *((_QWORD *)v95 + 1) == *((_QWORD *)&v377 + 1)))
        {
          v190 = sub_1C6368AD4(a5);
          v94 = a11;
          if (v190)
          {
            v191 = sub_1C6368AD4(v13);
            v94 = a11;
            if (v191)
            {
              v192 = *(uint64_t **)(v371 + 32);
              v360 = *v192;
              v354 = v192[1];
              v193 = v192[5];
              v194 = *(unsigned __int16 *)(v193 + 24);
              if (v194 == 35 || v194 == 11)
              {
                v195 = *(int8x8_t **)(v193 + 80);
                v363 = v195 + 3;
                v196 = v195;
                v197 = v195[4].u32[0];
                if (v197 > 0x40)
                {
                  v199 = 0;
                  v297 = (unint64_t)(v197 + 63) >> 6;
                  v298 = (int8x8_t *)*v363;
                  do
                  {
                    v299 = *v298++;
                    v300 = (uint8x8_t)vcnt_s8(v299);
                    v300.i16[0] = vaddlv_u8(v300);
                    v199 += v300.i32[0];
                    --v297;
                  }
                  while (v297);
                }
                else
                {
                  v198 = (uint8x8_t)vcnt_s8(*v363);
                  v198.i16[0] = vaddlv_u8(v198);
                  v199 = v198.i32[0];
                }
                v94 = a11;
                if (v199 == 1)
                {
                  v301 = (v197 - 1);
                  v302 = (*(uint64_t (**)(_QWORD *, _QWORD, _QWORD))(*v361[1] + 1456))(v361[1], v377, *((_QWORD *)&v377 + 1));
                  v94 = a11;
                  if ((v302 & 1) == 0)
                  {
                    v303 = (uint64_t)*v361;
                    v304 = v196[4].u32[0];
                    if (v304 > 0x40)
                      v305 = llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)v363);
                    else
                      v305 = v304 + __clz((unint64_t)*v363) - 64;
                    v306 = v305;
                    v307 = *(unsigned __int8 **)(v360 + 64);
                    *(_QWORD *)&v380[0] = v307;
                    v308 = v303;
                    if (v307)
                    {
                      llvm::MetadataTracking::track((uint64_t)v380, v307, 2);
                      v308 = (uint64_t)*v361;
                    }
                    DWORD2(v380[0]) = *(_DWORD *)(v360 + 60);
                    v309 = (uint64_t *)(*(_QWORD *)(v360 + 40) + 16 * v354);
                    ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(v361[1], *v309, v309[1], *(_QWORD *)(**(_QWORD **)(v308 + 40) + 40) + 272, *((unsigned __int8 *)v361 + 34));
                    v313 = sub_1C6366AB4(v303, v306, (const llvm::APInt *)v380, ShiftAmountTy, v311, 0, 0);
                    v315 = v314;
                    if (*(_QWORD *)&v380[0])
                      llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                    v316 = (uint64_t)*v361;
                    v317 = *(unsigned __int8 **)(v371 + 64);
                    *(_QWORD *)&v380[0] = v317;
                    if (v317)
                      llvm::MetadataTracking::track((uint64_t)v380, v317, 2);
                    DWORD2(v380[0]) = *(_DWORD *)(v371 + 60);
                    v318 = *(_QWORD *)(v316 + 832);
                    if (v318)
                      LOWORD(v318) = *(_WORD *)(v318 + 8);
                    v319 = sub_1C5D56C70(v316, 175, (const llvm::APInt *)v380, (llvm *)v377, *((uint64_t *)&v377 + 1), v360, v354, v312, (uint64_t)v313, v315, v318);
                    v321 = v320;
                    if (*(_QWORD *)&v380[0])
                      llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                    v322 = (uint64_t)*v361;
                    v323 = (unsigned __int8 *)v319[8];
                    *(_QWORD *)&v380[0] = v323;
                    v324 = v322;
                    if (v323)
                    {
                      llvm::MetadataTracking::track((uint64_t)v380, v323, 2);
                      v324 = (uint64_t)*v361;
                    }
                    DWORD2(v380[0]) = *((_DWORD *)v319 + 15);
                    v325 = (uint64_t *)(v319[5] + 16 * v321);
                    v326 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(v361[1], *v325, v325[1], *(_QWORD *)(**(_QWORD **)(v324 + 40) + 40) + 272, *((unsigned __int8 *)v361 + 34));
                    v329 = sub_1C6366AB4(v322, v301, (const llvm::APInt *)v380, v326, v327, 0, 0);
                    v331 = v330;
                    if (*(_QWORD *)&v380[0])
                      llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                    v332 = (uint64_t)*v361;
                    v333 = *(unsigned __int8 **)(v371 + 64);
                    *(_QWORD *)&v380[0] = v333;
                    if (v333)
                      llvm::MetadataTracking::track((uint64_t)v380, v333, 2);
                    DWORD2(v380[0]) = *(_DWORD *)(v371 + 60);
                    v334 = *(_QWORD *)(v332 + 832);
                    if (v334)
                      LOWORD(v334) = *(_WORD *)(v334 + 8);
                    v336 = sub_1C5D56C70(v332, 176, (const llvm::APInt *)v380, (llvm *)v377, *((uint64_t *)&v377 + 1), (uint64_t)v319, v321, v328, (uint64_t)v329, v331, v334);
                    v338 = v337;
                    if (*(_QWORD *)&v380[0])
                      llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                    v339 = (*v361)[104];
                    if (v339)
                      LOWORD(v339) = *(_WORD *)(v339 + 8);
                    return sub_1C5D56C70((uint64_t)*v361, 171, v349, (llvm *)v377, *((uint64_t *)&v377 + 1), (uint64_t)v336, v338, v335, v15, v14, v339);
                  }
                }
              }
            }
          }
        }
      }
LABEL_77:
      if (v370)
      {
        v97 = (uint64_t *)v361;
        if (sub_1C6368AD4(v15))
        {
          v112 = *(_QWORD *)(v370 + 80);
          v113 = *(unsigned int *)(v112 + 32);
          v94 = a11;
          if (v113 > 0x40)
          {
            v175 = 0;
            v176 = (unint64_t)(v113 + 63) >> 6;
            v177 = *(int8x8_t **)(v112 + 24);
            do
            {
              v178 = *v177++;
              v179 = (uint8x8_t)vcnt_s8(v178);
              v179.i16[0] = vaddlv_u8(v179);
              v175 += v179.i32[0];
              --v176;
            }
            while (v176);
            v96 = v175 == 1;
          }
          else
          {
            v114 = *(_QWORD *)(v112 + 24);
            if (v114)
              v96 = (v114 & (v114 - 1)) == 0;
            else
              v96 = 0;
          }
        }
        else
        {
          v96 = 0;
          v94 = a11;
        }
      }
      else
      {
        v96 = 0;
        v97 = (uint64_t *)v361;
      }
      if (v369)
      {
        if (sub_1C6368AD4(v13))
        {
          v115 = *(_QWORD *)(v369 + 80);
          v116 = *(unsigned int *)(v115 + 32);
          v94 = a11;
          if (v116 > 0x40)
          {
            v180 = 0;
            v181 = (unint64_t)(v116 + 63) >> 6;
            v182 = *(int8x8_t **)(v115 + 24);
            do
            {
              v183 = *v182++;
              v184 = (uint8x8_t)vcnt_s8(v183);
              v184.i16[0] = vaddlv_u8(v184);
              v180 += v184.i32[0];
              --v181;
            }
            while (v181);
            v98 = v180 == 1;
          }
          else
          {
            v117 = *(_QWORD *)(v115 + 24);
            if (v117)
              v98 = (v117 & (v117 - 1)) == 0;
            else
              v98 = 0;
          }
        }
        else
        {
          v98 = 0;
          v94 = a11;
        }
      }
      else
      {
        v98 = 0;
      }
      v99 = a12;
      if (v96 || v98)
      {
        v118 = sub_1C6329468((unsigned int *)v97[1], v22, v23);
        v99 = a12;
        v94 = a11;
        if (v118 == 1)
        {
          if (!*((_BYTE *)v97 + 33)
            || v22
            && ((v119 = v97[1], v22 == 1) || *(_QWORD *)(v119 + 8 * v22 + 96))
            && !*(_BYTE *)(v119 + 390 * v22 + 4055))
          {
            if (v98)
            {
              v94 = sub_1C6365158(a11, v22, v23);
              if (!a12)
                goto LABEL_266;
            }
            else
            {
              v369 = v370;
              if (!a12)
                goto LABEL_266;
            }
            v120 = *(_QWORD *)(v369 + 80);
            v121 = (llvm::APInt *)(v120 + 24);
            v122 = *(_DWORD *)(v120 + 32);
            if (v122 > 0x40)
            {
              v188 = v94;
              v189 = llvm::APInt::countLeadingZerosSlowCase(v121);
              v94 = v188;
              if (v189 != v122 - 1)
                goto LABEL_266;
            }
            else if (*(_QWORD *)v121 != 1)
            {
LABEL_266:
              v234 = v94;
              v235 = (_QWORD *)*v97;
              if (!*((_BYTE *)v97 + 34))
              {
                v236 = *(unsigned __int8 **)(v371 + 64);
                *(_QWORD *)&v380[0] = v236;
                if (v236)
                  llvm::MetadataTracking::track((uint64_t)v380, v236, 2);
                DWORD2(v380[0]) = *(_DWORD *)(v371 + 60);
                v237 = sub_1C6367818(v235, v234);
                v240 = v235[104];
                if (v240)
                  LOWORD(v240) = *(_WORD *)(v240 + 8);
                v241 = sub_1C5D58E08((uint64_t)v235, (const char *)0xC1, (const llvm::APInt *)v380, (llvm *)2, 0, v371, a4, v239, a5, a6, v237, v238, SHIDWORD(v238), v240);
                v243 = v242;
                if (*(_QWORD *)&v380[0])
                  llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                goto LABEL_293;
              }
              v244 = sub_1C6367818((_QWORD *)*v97, v94);
              v247 = v235[104];
              if (v247)
                LOWORD(v247) = *(_WORD *)(v247 + 8);
              v241 = sub_1C5D58E08((uint64_t)v235, (const char *)0xC1, v349, v366, v365, v371, a4, v246, a5, a6, v244, v245, SHIDWORD(v245), v247);
              v243 = v248;
              v249 = (uint64_t *)(v241[5] + 16 * v248);
              v251 = *v249;
              v250 = v249[1];
              if (v377 == v251)
              {
                if ((_BYTE)v377 || *((_QWORD *)&v377 + 1) == v250)
                  goto LABEL_293;
                *(_QWORD *)&v380[0] = v251;
                *((_QWORD *)&v380[0] + 1) = v250;
              }
              else
              {
                *(_QWORD *)&v380[0] = v251;
                *((_QWORD *)&v380[0] + 1) = v250;
                if ((_BYTE)v377)
                {
                  v252 = sub_1C47A8C74((unsigned __int8 *)&v377);
LABEL_285:
                  v254 = v252;
                  v255 = v253;
                  if ((_BYTE)v251)
                    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)v380);
                  else
                    ExtendedSizeInBits = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v380);
                  if ((v255 != 1 || v257 == 1) && v254 < ExtendedSizeInBits)
                  {
                    v258 = (uint64_t)*v361;
                    v259 = *(unsigned __int8 **)(v13 + 64);
                    *(_QWORD *)&v380[0] = v259;
                    if (v259)
                      llvm::MetadataTracking::track((uint64_t)v380, v259, 2);
                    DWORD2(v380[0]) = *(_DWORD *)(v13 + 60);
                    v260 = sub_1C5D3F9A0(v258, (uint64_t)v241, v243, (const llvm::APInt *)v380, v377, *((uint64_t *)&v377 + 1));
                    goto LABEL_299;
                  }
LABEL_293:
                  v262 = (uint64_t)*v361;
                  v263 = *(unsigned __int8 **)(v13 + 64);
                  *(_QWORD *)&v380[0] = v263;
                  if (v263)
                    llvm::MetadataTracking::track((uint64_t)v380, v263, 2);
                  DWORD2(v380[0]) = *(_DWORD *)(v13 + 60);
                  v264 = *(_QWORD *)(v262 + 832);
                  if (v264)
                    v265 = *(_WORD *)(v264 + 8);
                  else
                    v265 = 0;
                  v260 = sub_1C5D52060(v262, 199, (const llvm::APInt *)v380, (llvm *)v377, *((uint64_t *)&v377 + 1), (uint64_t)v241, v243, v265);
LABEL_299:
                  v38 = v260;
                  v266 = v261;
                  if (*(_QWORD *)&v380[0])
                    llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                  v267 = v266;
                  sub_1C5C5B004((uint64_t)v361, (uint64_t)v241);
                  sub_1C5C5B004((uint64_t)v361, (uint64_t)v38);
                  v268 = *(_QWORD *)(v369 + 80);
                  v269 = (llvm::APInt *)(v268 + 24);
                  v270 = *(_DWORD *)(v268 + 32);
                  if (v270 > 0x40)
                  {
                    v271 = llvm::APInt::countLeadingZerosSlowCase(v269);
                    if (v271 == v270 - 1)
                      return v38;
                  }
                  else
                  {
                    if (*(_QWORD *)v269 == 1)
                      return v38;
                    v271 = v270 + __clz(*(_QWORD *)v269) - 64;
                  }
                  v272 = v270 + ~v271;
                  if (((*(uint64_t (**)(_QWORD *, _QWORD, _QWORD, uint64_t))(*v361[1] + 1456))(v361[1], v377, *((_QWORD *)&v377 + 1), v272) & 1) == 0)
                  {
                    v273 = (uint64_t)*v361;
                    v274 = *(_QWORD *)(v13 + 40) + 16 * v364;
                    v275 = *(llvm **)v274;
                    v276 = *(_QWORD *)(v274 + 8);
                    v277 = (unsigned __int8 *)v38[8];
                    *(_QWORD *)&v380[0] = v277;
                    v278 = v273;
                    if (v277)
                    {
                      llvm::MetadataTracking::track((uint64_t)v380, v277, 2);
                      v278 = (uint64_t)*v361;
                    }
                    DWORD2(v380[0]) = *((_DWORD *)v38 + 15);
                    v279 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(v361[1], *(_QWORD *)(v38[5] + 16 * v267), *(_QWORD *)(v38[5] + 16 * v267 + 8), *(_QWORD *)(**(_QWORD **)(v278 + 40) + 40) + 272, *((unsigned __int8 *)v361 + 34));
                    v281 = sub_1C6366AB4(v273, v272, (const llvm::APInt *)v380, v279, v280, 0, 0);
                    v284 = *(_QWORD *)(v273 + 832);
                    if (v284)
                      LOWORD(v284) = *(_WORD *)(v284 + 8);
                    v38 = sub_1C5D56C70(v273, 175, v349, v275, v276, (uint64_t)v38, v267, v283, (uint64_t)v281, v282, v284);
                    if (*(_QWORD *)&v380[0])
                      llvm::MetadataTracking::untrack((uint64_t)v380, *(unsigned __int8 **)&v380[0]);
                    return v38;
                  }
                  return 0;
                }
              }
              v252 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v377);
              goto LABEL_285;
            }
            return 0;
          }
        }
      }
      v100 = a4;
      if (!v368)
        goto LABEL_179;
      v101 = *(_QWORD *)(v368 + 80);
      v102 = (llvm::APInt *)(v101 + 24);
      v103 = *(_DWORD *)(v101 + 32);
      if (v103 > 0x40)
      {
        v104 = v99;
        v105 = llvm::APInt::countLeadingZerosSlowCase(v102);
        v99 = v104;
        v94 = a11;
        if (v105 != v103)
          goto LABEL_146;
      }
      else if (*(_QWORD *)v102)
      {
        goto LABEL_146;
      }
      if (v94 == 22 || v94 == 17)
      {
        v106 = v94 == 22 ? v15 : v13;
        v107 = v94 == 22 ? v13 : v15;
        v108 = *(unsigned __int16 *)(v106 + 24);
        if (v108 == 35 || v108 == 11)
        {
          v367 = v107;
          v109 = v99;
          v110 = *(_QWORD *)(v106 + 80);
          if ((_BYTE)v377)
            v111 = sub_1C47A8C74((unsigned __int8 *)&v377);
          else
            v111 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v377);
          if ((_DWORD)v92 == 1)
          {
            v340 = v111;
            v111 = v340;
          }
          v124 = (llvm::APInt *)(v110 + 24);
          v125 = *(_DWORD *)(v110 + 32);
          if (v125 >= 0x41)
          {
            v127 = v111;
            v128 = v125 - llvm::APInt::countLeadingZerosSlowCase(v124);
            v100 = a4;
            v94 = a11;
            v99 = v109;
            v126 = v367;
            if (v128 > 0x40)
              goto LABEL_146;
            v124 = *(llvm::APInt **)v124;
            v111 = v127;
          }
          else
          {
            v100 = a4;
            v94 = a11;
            v99 = v109;
            v126 = v367;
          }
          if (*(_QWORD *)v124 != v111)
            goto LABEL_146;
          switch(*(_WORD *)(v126 + 24))
          {
            case 0xB7:
            case 0xBC:
              v129 = *(_QWORD *)(v126 + 32);
              if (*(_QWORD *)v129 == v371
                && *(_DWORD *)(v129 + 8) == v100
                && ((v130 = (llvm *)v377, !*((_BYTE *)v97 + 33))
                 || (_BYTE)v377
                 && ((v131 = v97[1], v377 == 1) || *(_QWORD *)(v131 + 8 * v377 + 96))
                 && !*(_BYTE *)(v131 + 390 * v377 + 4045)))
              {
                v210 = *v97;
                v211 = *((_QWORD *)&v377 + 1);
                v216 = *(_QWORD *)(*v97 + 832);
                if (v216)
                  v213 = *(_WORD *)(v216 + 8);
                else
                  v213 = 0;
                v233 = 183;
              }
              else
              {
                if (*(_WORD *)(v126 + 24) != 184)
                  break;
LABEL_139:
                v132 = *(_QWORD *)(v126 + 32);
                if (*(_QWORD *)v132 != v371 || *(_DWORD *)(v132 + 8) != v100)
                  break;
                v130 = (llvm *)v377;
                if (*((_BYTE *)v97 + 33))
                {
                  if (!(_BYTE)v377)
                    break;
                  v133 = v97[1];
                  if (v377 != 1 && !*(_QWORD *)(v133 + 8 * v377 + 96))
                    break;
                  if (*(_BYTE *)(v133 + 390 * v377 + 4046))
                    break;
                }
                v210 = *v97;
                v211 = *((_QWORD *)&v377 + 1);
                v212 = *(_QWORD *)(*v97 + 832);
                if (v212)
                  v213 = *(_WORD *)(v212 + 8);
                else
                  v213 = 0;
                v233 = 184;
              }
              return sub_1C5D52060(v210, v233, v349, v130, v211, v371, a4, v213);
            case 0xB8:
            case 0xBD:
              goto LABEL_139;
            default:
              break;
          }
        }
      }
LABEL_146:
      if (v370 && !v99 && v369)
      {
        v134 = *(_QWORD *)(v370 + 80);
        v135 = *(_QWORD *)(v369 + 80);
        v136 = *(unsigned int *)(v135 + 32);
        v376 = v136;
        if (v136 > 0x40)
        {
          v375 = (void *)operator new[]();
          memcpy(v375, *(const void **)(v135 + 24), ((unint64_t)(v136 + 63) >> 3) & 0x3FFFFFF8);
          llvm::APInt::flipAllBitsSlowCase((uint64_t)&v375);
          LODWORD(v136) = v376;
          v138 = v375;
        }
        else
        {
          v137 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v136;
          if (!(_DWORD)v136)
            v137 = 0;
          v138 = (const void *)(v137 & ~*(_QWORD *)(v135 + 24));
        }
        v139 = *(unsigned int *)(v134 + 32);
        if (v139 > 0x40)
        {
          v144 = memcmp(*(const void **)(v134 + 24), v138, ((unint64_t)(v139 + 63) >> 3) & 0x3FFFFFF8);
          v94 = a11;
          if (!v144)
          {
LABEL_156:
            v140 = *(_QWORD *)(v368 + 80);
            v141 = (llvm::APInt *)(v140 + 24);
            v142 = *(_DWORD *)(v140 + 32);
            if (v142)
            {
              if (v142 > 0x40)
              {
                v147 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)(v140 + 24));
                if (a11 == 18 && v147 == v142)
                  goto LABEL_174;
                v148 = llvm::APInt::countLeadingZerosSlowCase(v141);
                v94 = a11;
                v146 = v148 == v142;
                goto LABEL_169;
              }
              v143 = *(_QWORD *)v141;
              if (v94 == 18 && v143 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v142)
                goto LABEL_174;
            }
            else
            {
              if (v94 == 18)
              {
LABEL_174:
                v150 = v97[1];
                v151 = v377;
                v152 = sub_1C6131328((unsigned __int8 *)&v378, (uint64_t)v92, v93);
                v153 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v150 + 1456))(v150, v151, *((_QWORD *)&v151 + 1), v152 - 1);
                v94 = a11;
                v145 = v153 ^ 1;
                goto LABEL_175;
              }
              v143 = *(_QWORD *)v141;
            }
            v146 = v143 == 0;
LABEL_169:
            v149 = v146;
            v145 = 0;
            if (v94 == 20 && v149)
              goto LABEL_174;
LABEL_175:
            if (v136 >= 0x41 && v138)
            {
              MEMORY[0x1CAA32F9C](v138, 0x1000C8000313F17);
              v94 = a11;
            }
            v100 = a4;
            if (v145)
            {
              v155 = *v97;
              v156 = v378;
              v157 = v379;
              v158 = sub_1C6131328((unsigned __int8 *)&v378, (uint64_t)v92, v93);
              v159 = sub_1C6366AB4(v155, (uint64_t)v158 - 1, v349, v378, v379, 0, 0);
              v162 = *(_QWORD *)(v155 + 832);
              if (v162)
                LOWORD(v162) = *(_WORD *)(v162 + 8);
              v163 = sub_1C5D56C70(v155, 176, v349, v156, v157, v371, a4, v161, (uint64_t)v159, v160, v162);
              v164 = *v97;
              v165 = v377;
              v374 = sub_1C6366480(*v97, (uint64_t)v163, v166, (uint64_t)v349, v377, *((uint64_t *)&v377 + 1));
              v168 = v167;
              if (a11 == 20)
                v169 = v15;
              else
                v169 = v13;
              if (a11 == 20)
                v170 = v14;
              else
                v170 = a8;
              v171 = sub_1C6366480(*v97, v169, v170, (uint64_t)v349, v377, *((uint64_t *)&v377 + 1));
              v174 = *(_QWORD *)(v164 + 832);
              if (v174)
                LOWORD(v174) = *(_WORD *)(v174 + 8);
              return sub_1C5D56C70(v164, 173, v349, (llvm *)v165, *((uint64_t *)&v165 + 1), v374, v168, v173, v171, v172, v174);
            }
            goto LABEL_179;
          }
        }
        else
        {
          v94 = a11;
          if (*(const void **)(v134 + 24) == v138)
            goto LABEL_156;
        }
        v145 = 0;
        goto LABEL_175;
      }
LABEL_179:
      v154 = v94;
      v86 = sub_1C5CA3C40(v371, v100, a5, a6, v13, a8, v15, v14, v94, *v97);
      if (!v86)
        return (uint64_t *)sub_1C5CA438C(v371, v100, v355, a6, v13, a8, v15, v14, v154, *v97);
      return (uint64_t *)v86;
    }
    if (v94 == 18)
    {
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, unint64_t))(*v20[1] + 312))(v20[1], v13, a8))
      {
LABEL_70:
        v94 = a11;
        goto LABEL_77;
      }
      if (sub_1C636F400(a5))
      {
LABEL_205:
        v347 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(v20[1], *(_QWORD *)(*(_QWORD *)(v371 + 40) + 16 * a4), *(_QWORD *)(*(_QWORD *)(v371 + 40) + 16 * a4 + 8), *(_QWORD *)(*(_QWORD *)(*v20)[5] + 40) + 272, *((unsigned __int8 *)v20 + 34));
        v362 = v185;
        v186 = *(unsigned __int16 *)(v13 + 24);
        if (v186 != 35 && v186 != 11)
          goto LABEL_254;
        v187 = *(_QWORD *)(v13 + 80);
        DWORD2(v381) = *(_DWORD *)(v187 + 32);
        if (DWORD2(v381) > 0x40)
        {
          *(_QWORD *)&v381 = operator new[]();
          memcpy((void *)v381, *(const void **)(v187 + 24), (((unint64_t)DWORD2(v381) + 63) >> 3) & 0x3FFFFFF8);
        }
        else
        {
          *(_QWORD *)&v381 = *(_QWORD *)(v187 + 24);
        }
        llvm::APInt::operator-=((uint64_t)&v381, 1uLL);
        v200 = DWORD2(v381);
        v201 = (_QWORD *)v381;
        DWORD2(v381) = 0;
        if (v200 < 0x41)
        {
          if ((*(_QWORD *)(v187 + 24) & (unint64_t)v381) != 0)
            goto LABEL_254;
          goto LABEL_243;
        }
        v202 = 0;
        v203 = *(_QWORD *)(v187 + 24);
        v204 = (unint64_t)(v200 + 63) >> 6;
        do
        {
          v201[v202] &= *(_QWORD *)(v203 + v202 * 8);
          ++v202;
        }
        while (v204 != v202);
        v205 = 0;
        do
        {
          if (v204-- < 1)
            break;
          v207 = v201[v204];
          v205 += __clz(v207);
        }
        while (!v207);
        v208 = 0;
        v209 = v200 | 0xFFFFFFC0;
        if ((v200 & 0x3F) == 0)
          v209 = 0;
        if ((v200 - v205 - v209) < 0x41)
          v208 = *v201 == 0;
        if (v201)
        {
          MEMORY[0x1CAA32F9C](v201, 0x1000C8000313F17);
          if (DWORD2(v381) < 0x41 || !(_QWORD)v381)
          {
            if (!v208)
              goto LABEL_254;
            goto LABEL_243;
          }
          MEMORY[0x1CAA32F9C](v381, 0x1000C8000313F17);
        }
        if (!v208)
          goto LABEL_254;
LABEL_243:
        if (LOBYTE(v380[0]))
          v214 = sub_1C47A8C74((unsigned __int8 *)v380);
        else
          v214 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v380);
        v217 = v214;
        if ((_DWORD)v215 == 1)
        v218 = *(_QWORD *)(v13 + 80);
        v219 = (llvm::APInt *)(v218 + 24);
        v220 = *(_DWORD *)(v218 + 32);
        if (v220 > 0x40)
          v221 = llvm::APInt::countLeadingZerosSlowCase(v219);
        else
          v221 = v220 + __clz(*(_QWORD *)v219) - 64;
        v222 = v217 + ~(unint64_t)(v220 + ~v221);
        if (((*(uint64_t (**)(_QWORD *, _QWORD, _QWORD, unint64_t))(*v20[1] + 1456))(v20[1], *(_QWORD *)&v380[0], *((_QWORD *)&v380[0] + 1), v222) & 1) == 0)
        {
          v285 = sub_1C6366AB4((uint64_t)*v20, v222, v349, v347, (uint64_t)v362, 0, 0);
          v288 = (*v20)[104];
          if (v288)
            LOWORD(v288) = *(_WORD *)(v288 + 8);
          v231 = sub_1C5D56C70((uint64_t)*v20, 177, v349, *(llvm **)&v380[0], *((uint64_t *)&v380[0] + 1), v371, a4, v287, (uint64_t)v285, v286, v288);
          goto LABEL_315;
        }
LABEL_254:
        if (LOBYTE(v380[0]))
          v223 = sub_1C47A8C74((unsigned __int8 *)v380);
        else
          v223 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v380);
        v225 = v223;
        if ((_DWORD)v224 == 1)
        v226 = v225 - 1;
        if (((*(uint64_t (**)(_QWORD *, _QWORD, _QWORD, uint64_t))(*v20[1] + 1456))(v20[1], *(_QWORD *)&v380[0], *((_QWORD *)&v380[0] + 1), v226) & 1) != 0)goto LABEL_70;
        v227 = sub_1C6366AB4((uint64_t)*v20, v226, v349, v347, (uint64_t)v362, 0, 0);
        v230 = (*v20)[104];
        if (v230)
          LOWORD(v230) = *(_WORD *)(v230 + 8);
        v231 = sub_1C5D56C70((uint64_t)*v20, 176, v349, *(llvm **)&v380[0], *((uint64_t *)&v380[0] + 1), v371, a4, v229, (uint64_t)v227, v228, v230);
LABEL_315:
        v289 = v231;
        v290 = v232;
        sub_1C5C5B004((uint64_t)v361, (uint64_t)v231);
        if ((LOBYTE(v380[0]) != v359 || !(_BYTE)v359 && *((_QWORD *)&v380[0] + 1) != v353)
          && sub_1C50989E0((unsigned __int8 *)v380, (uint64_t)v359, v353))
        {
          v292 = (*v361)[104];
          if (v292)
            v293 = *(_WORD *)(v292 + 8);
          else
            v293 = 0;
          v289 = sub_1C5D52060((uint64_t)*v361, 201, v349, v359, v353, (uint64_t)v289, v290, v293);
          v290 = v290 & 0xFFFFFFFF00000000 | v294;
          sub_1C5C5B004((uint64_t)v361, (uint64_t)v289);
        }
        if (a11 == 18)
        {
          v289 = sub_1C6366760((uint64_t)*v361, v349, (uint64_t)v289, v290, v359, v353);
          v290 = v290 & 0xFFFFFFFF00000000 | v296;
        }
        v295 = (*v361)[104];
        if (v295)
          LOWORD(v295) = *(_WORD *)(v295 + 8);
        v86 = (uint64_t)sub_1C5D56C70((uint64_t)*v361, 171, v349, v359, v353, (uint64_t)v289, v290, v291, v13, a8, v295);
        v94 = a11;
        if (v86)
          return (uint64_t *)v86;
        goto LABEL_77;
      }
      if (!sub_1C6368AD4(a5))
        goto LABEL_70;
    }
    else
    {
      if (v94 != 20)
        goto LABEL_72;
      if (sub_1C6368AD4(a5))
        goto LABEL_205;
      if (!sub_1C636F474(a5))
        goto LABEL_70;
    }
    if (v371 != v13 || (_DWORD)a4 != (_DWORD)a8)
      goto LABEL_70;
    goto LABEL_205;
  }
  return (uint64_t *)v13;
}

void sub_1C5CB27A8()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CB27BC()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E81983D8;
  return result;
}

void sub_1C5CB27E0(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E81983D8;
}

uint64_t sub_1C5CB27F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  const void *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  void *v12;
  int v13;

  v3 = *(_QWORD *)(*(_QWORD *)a3 + 80);
  v4 = *(_QWORD *)(*(_QWORD *)a2 + 80);
  v5 = *(unsigned int *)(v4 + 32);
  v13 = v5;
  if (v5 > 0x40)
  {
    v12 = (void *)operator new[]();
    memcpy(v12, *(const void **)(v4 + 24), ((unint64_t)(v5 + 63) >> 3) & 0x3FFFFFF8);
    llvm::APInt::flipAllBitsSlowCase((uint64_t)&v12);
    LODWORD(v5) = v13;
    v7 = v12;
  }
  else
  {
    v6 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v5;
    if (!(_DWORD)v5)
      v6 = 0;
    v7 = (const void *)(v6 & ~*(_QWORD *)(v4 + 24));
  }
  v8 = *(unsigned int *)(v3 + 32);
  if (v8 > 0x40)
    v9 = memcmp(*(const void **)(v3 + 24), v7, ((unint64_t)(v8 + 63) >> 3) & 0x3FFFFFF8) == 0;
  else
    v9 = *(_QWORD *)(v3 + 24) == (_QWORD)v7;
  v10 = v9;
  if (v5 >= 0x41 && v7)
    MEMORY[0x1CAA32F9C](v7, 0x1000C8000313F17);
  return v10;
}

void sub_1C5CB290C()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CB2920()
{
  _QWORD *result;

  result = operator new(0x10uLL);
  *result = &off_1E8198420;
  return result;
}

void sub_1C5CB2944(uint64_t a1, _QWORD *a2)
{
  *a2 = &off_1E8198420;
}

uint64_t sub_1C5CB295C(uint64_t a1, uint64_t *a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  size_t v12;
  unsigned int v13;
  void *v14;
  uint64_t v15;
  BOOL v16;
  void *v17;
  unsigned int v18;
  void *__s2;
  unsigned int v20;

  v3 = *a2;
  v4 = *a3;
  if (!(*a2 | *a3))
    return 1;
  if (v3)
    v5 = v4 == 0;
  else
    v5 = 1;
  if (v5)
    return 0;
  v8 = *(_QWORD *)(v4 + 80);
  v9 = *(_QWORD *)(v3 + 80);
  v10 = *(unsigned int *)(v9 + 32);
  v18 = v10;
  if (v10 > 0x40)
  {
    v12 = ((unint64_t)(v10 + 63) >> 3) & 0x3FFFFFF8;
    v17 = (void *)operator new[]();
    memcpy(v17, *(const void **)(v9 + 24), v12);
    llvm::APInt::flipAllBitsSlowCase((uint64_t)&v17);
  }
  else
  {
    if ((_DWORD)v10)
      v11 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v10;
    else
      v11 = 0;
    v17 = (void *)(v11 & ~*(_QWORD *)(v9 + 24));
  }
  llvm::APInt::operator++((uint64_t)&v17);
  v20 = v18;
  __s2 = v17;
  v18 = 0;
  llvm::APInt::operator-=((uint64_t)&__s2, 1uLL);
  v13 = v20;
  v14 = __s2;
  v20 = 0;
  v15 = *(unsigned int *)(v8 + 32);
  if (v15 > 0x40)
    v16 = memcmp(*(const void **)(v8 + 24), __s2, ((unint64_t)(v15 + 63) >> 3) & 0x3FFFFFF8) == 0;
  else
    v16 = *(_QWORD *)(v8 + 24) == (_QWORD)__s2;
  v6 = v16;
  if (v13 >= 0x41)
  {
    if (v14)
    {
      MEMORY[0x1CAA32F9C](v14, 0x1000C8000313F17);
      if (v20 >= 0x41)
      {
        if (__s2)
          MEMORY[0x1CAA32F9C](__s2, 0x1000C8000313F17);
      }
    }
  }
  if (v18 >= 0x41 && v17)
    MEMORY[0x1CAA32F9C](v17, 0x1000C8000313F17);
  return v6;
}

uint64_t sub_1C5CB2B10(int a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unsigned int v7;
  llvm::APInt *v8;
  llvm::APInt *v9;
  BOOL v10;
  llvm::APInt *v11;
  unint64_t **v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  llvm::APInt *v16;
  llvm::APInt *v17;
  llvm::APInt *v18;
  unint64_t **v19;
  BOOL v20;
  int v21;

  v4 = 0;
  HIDWORD(v5) = a1;
  LODWORD(v5) = a1 - 10;
  switch((v5 >> 1))
  {
    case 0u:
      v6 = *(_QWORD *)(a2 + 80);
      v7 = *(_DWORD *)(v6 + 32);
      goto LABEL_3;
    case 1u:
      v6 = *(_QWORD *)(a2 + 80);
      v11 = (llvm::APInt *)(v6 + 24);
      v7 = *(_DWORD *)(v6 + 32);
      if (v7 > 0x40)
      {
        if (llvm::APInt::countLeadingZerosSlowCase(v11) == v7)
          goto LABEL_28;
      }
      else if (!*(_QWORD *)v11)
      {
        goto LABEL_28;
      }
      if (a1 != 10)
      {
        if (a1 == 18)
          goto LABEL_8;
        if (a1 != 20)
          goto LABEL_30;
LABEL_17:
        v12 = (unint64_t **)(v6 + 24);
        if (v7 > 0x40)
        {
          if ((((*v12)[(v7 - 1) >> 6] >> (v7 - 1)) & 1) != 0
            && llvm::APInt::countTrailingZerosSlowCase(v12) == v7 - 1)
          {
            goto LABEL_28;
          }
        }
        else
        {
          v4 = 1;
          if (*v12 == (unint64_t *)(1 << (v7 - 1)))
            goto LABEL_31;
        }
        if (a1 == 18)
        {
LABEL_8:
          v9 = (llvm::APInt *)(v6 + 24);
          if (v7 > 0x40)
          {
            if (((*(_QWORD *)(*(_QWORD *)v9 + 8 * ((v7 - 1) >> 6)) >> (v7 - 1)) & 1) != 0)
              goto LABEL_30;
            v10 = llvm::APInt::countTrailingOnesSlowCase(v9) == v7 - 1;
          }
          else
          {
            v10 = *(_QWORD *)v9 == ~(-1 << (v7 - 1));
          }
          v4 = v10;
          goto LABEL_31;
        }
        if (a1 != 10)
          goto LABEL_30;
      }
LABEL_3:
      if (!v7)
        goto LABEL_28;
      v8 = (llvm::APInt *)(v6 + 24);
      if (v7 > 0x40)
      {
        if (llvm::APInt::countTrailingOnesSlowCase(v8) != v7)
          goto LABEL_29;
LABEL_28:
        v4 = 1;
        goto LABEL_31;
      }
      if (*(_QWORD *)v8 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v7)
        goto LABEL_28;
LABEL_29:
      if (a1 == 18)
        goto LABEL_8;
LABEL_30:
      v4 = 0;
LABEL_31:
      HIDWORD(v13) = a1 - 11;
      LODWORD(v13) = a1 - 11;
      switch((v13 >> 1))
      {
        case 0u:
          v14 = *(_QWORD *)(a2 + 80);
          v15 = *(_DWORD *)(v14 + 32);
          goto LABEL_33;
        case 1u:
          v14 = *(_QWORD *)(a2 + 80);
          v15 = *(_DWORD *)(v14 + 32);
          if (!v15)
            return 1;
          v17 = (llvm::APInt *)(v14 + 24);
          if (v15 > 0x40)
          {
            if (llvm::APInt::countTrailingOnesSlowCase(v17) == v15)
              return 1;
          }
          else if (*(_QWORD *)v17 == 0xFFFFFFFFFFFFFFFFLL >> -(char)v15)
          {
            return 1;
          }
          if (a1 != 11)
          {
            if (a1 == 19)
              goto LABEL_49;
            if (a1 != 21)
              return v4;
LABEL_42:
            v18 = (llvm::APInt *)(v14 + 24);
            if (v15 > 0x40)
            {
              if (((*(_QWORD *)(*(_QWORD *)v18 + 8 * ((v15 - 1) >> 6)) >> (v15 - 1)) & 1) == 0
                && llvm::APInt::countTrailingOnesSlowCase(v18) == v15 - 1)
              {
                return 1;
              }
            }
            else if (*(_QWORD *)v18 == ~(-1 << (v15 - 1)))
            {
              return 1;
            }
            if (a1 == 19)
              goto LABEL_49;
            if (a1 != 11)
              return v4;
          }
LABEL_33:
          v16 = (llvm::APInt *)(v14 + 24);
          if (v15 <= 0x40)
          {
            if (!*(_QWORD *)v16)
              return 1;
            goto LABEL_48;
          }
          if (llvm::APInt::countLeadingZerosSlowCase(v16) != v15)
          {
LABEL_48:
            if (a1 != 19)
              return v4;
LABEL_49:
            v19 = (unint64_t **)(v14 + 24);
            if (v15 > 0x40)
            {
              if ((((*v19)[(v15 - 1) >> 6] >> (v15 - 1)) & 1) == 0)
              {
                v21 = 0;
                return v21 | v4;
              }
              v20 = llvm::APInt::countTrailingZerosSlowCase(v19) == v15 - 1;
            }
            else
            {
              v20 = *v19 == (unint64_t *)(1 << (v15 - 1));
            }
            v21 = v20;
            return v21 | v4;
          }
          return 1;
        case 4u:
          v14 = *(_QWORD *)(a2 + 80);
          v15 = *(_DWORD *)(v14 + 32);
          goto LABEL_49;
        case 5u:
          v14 = *(_QWORD *)(a2 + 80);
          v15 = *(_DWORD *)(v14 + 32);
          goto LABEL_42;
        default:
          return v4;
      }
    case 4u:
      v6 = *(_QWORD *)(a2 + 80);
      v7 = *(_DWORD *)(v6 + 32);
      goto LABEL_8;
    case 5u:
      v6 = *(_QWORD *)(a2 + 80);
      v7 = *(_DWORD *)(v6 + 32);
      goto LABEL_17;
    default:
      goto LABEL_31;
  }
}

uint64_t *sub_1C5CB2E58(_QWORD **a1, uint64_t a2, unint64_t a3)
{
  unint64_t v3;
  uint64_t *v4;
  int v6;
  unsigned int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  llvm::APInt *v18;
  uint64_t v19;
  uint8x8_t v20;
  int v21;
  int v22;
  unint64_t v23;
  int8x8_t *v24;
  int8x8_t v25;
  uint8x8_t v26;
  uint64_t v27;
  _QWORD *v28;
  unsigned int v29;
  uint64_t *v31;
  unsigned int v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  llvm *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned __int8 *v56;
  uint64_t v57;
  _QWORD *v58;
  llvm *v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  int v70;
  unsigned __int8 *v71;
  int v72;
  uint64_t *v73;
  unsigned int v74;

  v3 = a3;
  v4 = (uint64_t *)a2;
  v6 = *(unsigned __int16 *)(a2 + 24);
  if (v6 == 177)
  {
    v8 = a2;
  }
  else
  {
    if (v6 != 201)
      goto LABEL_28;
    v7 = *(unsigned int **)(a2 + 32);
    v8 = *(_QWORD *)v7;
    v9 = *(_QWORD *)(*(_QWORD *)v7 + 48);
    if (!v9)
      goto LABEL_28;
    v10 = v7[2];
    v11 = 1;
    do
    {
      if (*(_DWORD *)(v9 + 8) == (_DWORD)v10)
      {
        if (!v11)
          goto LABEL_28;
        --v11;
      }
      v9 = *(_QWORD *)(v9 + 32);
    }
    while (v9);
    if (v11 || *(_WORD *)(v8 + 24) != 177)
      goto LABEL_28;
    v3 = a3 & 0xFFFFFFFF00000000 | v10;
  }
  v12 = *(uint64_t **)(v8 + 32);
  v13 = *v12;
  if (*(_WORD *)(*v12 + 24) == 171)
  {
    v14 = v12[5];
    if (*(_WORD *)(v14 + 24) == 11)
    {
      v15 = *(_QWORD *)(*(_QWORD *)(v13 + 32) + 40);
      if (*(_WORD *)(v15 + 24) == 11)
      {
        v16 = v12[1];
        v17 = *(_QWORD *)(v15 + 80);
        v18 = (llvm::APInt *)(v17 + 24);
        v19 = *(unsigned int *)(v17 + 32);
        if (v19 > 0x40)
        {
          v22 = 0;
          v23 = (unint64_t)(v19 + 63) >> 6;
          v24 = *(int8x8_t **)v18;
          do
          {
            v25 = *v24++;
            v26 = (uint8x8_t)vcnt_s8(v25);
            v26.i16[0] = vaddlv_u8(v26);
            v22 += v26.i32[0];
            --v23;
          }
          while (v23);
          if (v22 != 1)
            goto LABEL_27;
          v21 = llvm::APInt::countLeadingZerosSlowCase(v18);
        }
        else
        {
          v20 = (uint8x8_t)vcnt_s8(*(int8x8_t *)v18);
          v20.i16[0] = vaddlv_u8(v20);
          if (v20.u32[0] != 1)
            goto LABEL_27;
          v21 = v19 + __clz(*(_QWORD *)v18) - 64;
        }
        v27 = *(_QWORD *)(v14 + 80);
        v28 = (_QWORD *)(v27 + 24);
        v29 = *(_DWORD *)(v27 + 32);
        if (v29 < 0x41)
          goto LABEL_26;
        if (v29 - llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)(v27 + 24)) <= 0x40)
        {
          v28 = (_QWORD *)*v28;
LABEL_26:
          if (*v28 == (_DWORD)v19 + ~v21)
          {
            v56 = *(unsigned __int8 **)(v8 + 64);
            v71 = v56;
            if (v56)
              llvm::MetadataTracking::track((uint64_t)&v71, v56, 2);
            v72 = *(_DWORD *)(v8 + 60);
            v57 = 16 * v16;
            v58 = *a1;
            v59 = (llvm *)(*(uint64_t (**)(_QWORD *, uint64_t, _QWORD, _QWORD, _QWORD))(*a1[1] + 400))(a1[1], *(_QWORD *)(*(_QWORD *)(*a1)[5] + 40) + 272, (*a1)[7], *(_QWORD *)(*(_QWORD *)(v13 + 40) + v57), *(_QWORD *)(*(_QWORD *)(v13 + 40) + v57 + 8));
            v61 = v60;
            v62 = sub_1C6366AB4((uint64_t)*a1, 0, (const llvm::APInt *)&v71, *(llvm **)(*(_QWORD *)(v13 + 40) + v57), *(_QWORD *)(*(_QWORD *)(v13 + 40) + v57 + 8), 0, 0);
            v64 = v63;
            v65 = sub_1C6367818(v58, 0x16u);
            v68 = v58[104];
            if (v68)
              LOWORD(v68) = *(_WORD *)(v68 + 8);
            v4 = sub_1C5D58E08((uint64_t)v58, (const char *)0xC1, (const llvm::APInt *)&v71, v59, v61, v13, v16, v67, (uint64_t)v62, v64, v65, v66, SHIDWORD(v66), v68);
            if (v71)
              llvm::MetadataTracking::untrack((uint64_t)&v71, v71);
            return v4;
          }
        }
      }
    }
  }
LABEL_27:
  v4 = (uint64_t *)v8;
LABEL_28:
  if (*((_WORD *)v4 + 12) != 173)
    return 0;
  sub_1C6329230((uint64_t)&v71, (uint64_t)v4, v3);
  while (*((_WORD *)v4 + 12) == 173)
  {
    v31 = sub_1C5C8CDAC((uint64_t)a1, (uint64_t)v4);
    if (!v31)
    {
      if (*((_WORD *)v4 + 12) == 173)
      {
        v35 = (uint64_t *)v4[4];
        v36 = *v35;
        if (*(_WORD *)(*v35 + 24) == 193 || (v37 = v35[5], *(_WORD *)(v37 + 24) == 193))
        {
          sub_1C636F550((uint64_t)&v71);
          return 0;
        }
        v38 = v35[1];
        v39 = v35[6];
        if (!sub_1C5D621EC((uint64_t)v4, v3, 0))
          goto LABEL_53;
        v40 = *(_QWORD *)(v36 + 48);
        if (!v40)
          goto LABEL_53;
        v41 = 1;
        do
        {
          if (*(_DWORD *)(v40 + 8) == (_DWORD)v38)
          {
            if (!v41)
              goto LABEL_53;
            --v41;
          }
          v40 = *(_QWORD *)(v40 + 32);
        }
        while (v40);
        if (!v41
          && *(_WORD *)(v36 + 24) == 173
          && (v42 = v38, *(_BYTE *)(*(_QWORD *)(v36 + 40) + 16 * v38) == 2))
        {
          v43 = *(_QWORD *)(v36 + 32);
          v44 = *(_QWORD *)v43;
          v38 = v38 & 0xFFFFFFFF00000000 | *(unsigned int *)(v43 + 8);
          v37 = *(_QWORD *)(v43 + 40);
          v39 = v39 & 0xFFFFFFFF00000000 | *(unsigned int *)(v43 + 48);
          v45 = 17;
          v4 = (uint64_t *)v36;
          LODWORD(v3) = v42;
        }
        else
        {
LABEL_53:
          v45 = 22;
          v44 = v36;
        }
        v46 = v4[5] + 16 * v3;
        v47 = *(llvm **)v46;
        v48 = *(_QWORD *)(v46 + 8);
        if (*((_BYTE *)a1 + 34))
        {
          v47 = (llvm *)(*(uint64_t (**)(_QWORD *, uint64_t, _QWORD, llvm *, uint64_t))(*a1[1] + 400))(a1[1], *(_QWORD *)(*(_QWORD *)(*a1)[5] + 40) + 272, (*a1)[7], v47, v48);
          v48 = v49;
        }
        v50 = *a1;
        v51 = (unsigned __int8 *)v4[8];
        v69 = v51;
        if (v51)
          llvm::MetadataTracking::track((uint64_t)&v69, v51, 2);
        v70 = *((_DWORD *)v4 + 15);
        v52 = sub_1C6367818(v50, v45);
        v55 = v50[104];
        if (v55)
          LOWORD(v55) = *(_WORD *)(v55 + 8);
        v4 = sub_1C5D58E08((uint64_t)v50, (const char *)0xC1, (const llvm::APInt *)&v69, v47, v48, v44, v38, v54, v37, v39, v52, v53, SHIDWORD(v53), v55);
        if (v69)
          llvm::MetadataTracking::untrack((uint64_t)&v69, v69);
      }
      break;
    }
    if (v4 == v31)
    {
      v4 = v73;
      v34 = v74;
      v33 = v3 & 0xFFFFFFFF00000000;
    }
    else
    {
      v33 = v32;
      v34 = v3 & 0xFFFFFFFF00000000;
      v4 = v31;
    }
    v3 = v33 | v34;
  }
  sub_1C636F550((uint64_t)&v71);
  return v4;
}

uint64_t *sub_1C5CB331C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;
  __int16 v15;
  uint64_t *v16;
  uint64_t v17;
  int v18;
  uint64_t v20;
  int v21;
  uint64_t v23;
  unint64_t v24;
  llvm *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t *v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t *v40;
  int v41;
  int v42;
  uint64_t *v43;
  llvm *v45;
  char v46;
  uint64_t v47;
  int v48;
  unsigned int ExtendedSizeInBits;
  const char *v50;
  BOOL v51;
  unsigned int v52;
  uint64_t v53;
  unsigned int v54;
  const char *v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  unsigned __int8 *v65;
  uint64_t v66;
  llvm::APInt *v67;
  unsigned int v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int v82;
  unsigned __int8 *v83;
  int v84;
  llvm *v85;
  uint64_t v86;
  unsigned __int8 *v87;
  int v88;
  __int128 v89;
  void *v90[2];
  _QWORD v91[18];

  v91[16] = *MEMORY[0x1E0C80C00];
  v8 = *(unsigned __int16 *)(a1 + 24);
  v9 = *(uint64_t **)(a1 + 32);
  v10 = *v9;
  v11 = v9[1];
  v89 = *(_OWORD *)*(_QWORD *)(a1 + 40);
  v12 = *(unsigned __int8 **)(a1 + 64);
  v87 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v87, v12, 2);
  v88 = *(_DWORD *)(a1 + 60);
  v13 = *(unsigned __int16 *)(v10 + 24);
  switch(v13)
  {
    case 11:
      goto LABEL_6;
    case 190:
      v16 = *(uint64_t **)(v10 + 32);
      v17 = v16[5];
      v18 = *(unsigned __int16 *)(v17 + 24);
      if (v18 == 35 || v18 == 11)
      {
        v20 = v16[10];
        v21 = *(unsigned __int16 *)(v20 + 24);
        if (v21 == 35 || v21 == 11)
        {
          v23 = v10;
          v24 = v16[6];
          v78 = v16[11];
          v26 = *((_QWORD *)&v89 + 1);
          v25 = (llvm *)v89;
          if ((_DWORD)v8 == 199)
          {
            v27 = (_QWORD *)(*(_QWORD *)(v23 + 40) + 16 * v11);
            v10 = v23;
            if (((*(uint64_t (**)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)a2 + 1192))(a2, *v27, v27[1], v89, *((_QWORD *)&v89 + 1)) & 1) != 0)break;
            v28 = v10;
            v26 = *((_QWORD *)&v89 + 1);
            v25 = (llvm *)v89;
            v16 = *(uint64_t **)(v28 + 32);
          }
          if ((_DWORD)v8 == 200)
            v29 = 198;
          else
            v29 = v8;
          v30 = *v16;
          v31 = v16[1];
          v32 = *(_QWORD *)(a3 + 832);
          if (v32)
            v33 = *(_WORD *)(v32 + 8);
          else
            v33 = 0;
          v35 = sub_1C5D52060(a3, v29, (const llvm::APInt *)&v87, v25, v26, v17, v24, v33);
          v37 = v36;
          v38 = *(_QWORD *)(a3 + 832);
          if (v38)
            v39 = *(_WORD *)(v38 + 8);
          else
            v39 = 0;
          v40 = sub_1C5D52060(a3, v29, (const llvm::APInt *)&v87, (llvm *)v89, *((uint64_t *)&v89 + 1), v20, v78, v39);
          v34 = sub_1C4815A8C(a3, (const llvm::APInt *)&v87, v25, v26, v30, v31, (uint64_t)v35, v37, (uint64_t)v40, v41, v42);
          goto LABEL_33;
        }
      }
      break;
    case 35:
LABEL_6:
      v14 = *(_QWORD *)(a3 + 832);
      if (v14)
        v15 = *(_WORD *)(v14 + 8);
      else
        v15 = 0;
      v34 = sub_1C5D52060(a3, v8, (const llvm::APInt *)&v87, (llvm *)v89, *((uint64_t *)&v89 + 1), v10, v11, v15);
LABEL_33:
      v43 = v34;
      goto LABEL_34;
  }
  v45 = (llvm *)sub_1C6131264((unsigned __int8 *)&v89, (uint64_t)v12, a3);
  v46 = (char)v45;
  v85 = v45;
  v86 = v47;
  if ((_BYTE)v89)
  {
    if (v89 - 15 >= 0x9C)
      goto LABEL_44;
  }
  else if ((*(_DWORD *)(*((_QWORD *)&v89 + 1) + 8) & 0xFE) != 0x12)
  {
LABEL_44:
    v43 = 0;
    goto LABEL_34;
  }
  if (a4 && (!(_BYTE)v45 || !*(_QWORD *)(a2 + 8 * v45 + 96)) || !sub_1C6364BE0(v10))
    goto LABEL_44;
  v48 = v8;
  if (v46)
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v85);
  else
    ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v85);
  v52 = ExtendedSizeInBits;
  if ((_DWORD)v50 == 1)
  v53 = v10;
  *(_OWORD *)v90 = *(_OWORD *)*(_QWORD *)(v10 + 40);
  v54 = sub_1C6131328((unsigned __int8 *)v90, (uint64_t)v50, v51);
  v90[0] = v91;
  v90[1] = (void *)0x800000000;
  v56 = sub_1C612FE00((llvm::EVT *)&v89, v55);
  if (v56)
  {
    v59 = 0;
    v60 = v48 & 0xFFFFFFF7;
    v61 = 40 * v56;
    do
    {
      v62 = *(_QWORD *)(*(_QWORD *)(v53 + 32) + v59);
      if (*(_WORD *)(v62 + 24) == 51)
      {
        if (v60 == 199)
          v63 = sub_1C6366AB4(a3, 0, (const llvm::APInt *)&v87, v85, v86, 0, 0);
        else
          v63 = sub_1C61312D0(a3, v85, v86);
        v69 = v63;
        v70 = v64;
        v71 = LODWORD(v90[1]);
        if (LODWORD(v90[1]) >= (unint64_t)HIDWORD(v90[1]))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v90, (uint64_t)v91, LODWORD(v90[1]) + 1, 16);
          v71 = LODWORD(v90[1]);
        }
        v72 = (char *)v90[0] + 16 * v71;
        *v72 = v69;
        v72[1] = v70;
        ++LODWORD(v90[1]);
      }
      else
      {
        v65 = *(unsigned __int8 **)(v62 + 64);
        v83 = v65;
        if (v65)
          llvm::MetadataTracking::track((uint64_t)&v83, v65, 2);
        v84 = *(_DWORD *)(v62 + 60);
        v66 = *(_QWORD *)(v62 + 80);
        v67 = (llvm::APInt *)(v66 + 24);
        v68 = *(_DWORD *)(v66 + 32);
        if (v68 >= v54)
        {
          if (v68 > v54)
            llvm::APInt::trunc(v67, v54, (llvm::APInt *)&v81);
          else
            sub_1C5DD14E0((uint64_t)&v81, (uint64_t)v67);
        }
        else
        {
          llvm::APInt::zext(v67, v54, (uint64_t)&v81);
        }
        if (v60 == 198)
          llvm::APInt::sext((llvm::APInt *)&v81, v52, (llvm::APInt *)&v79);
        else
          llvm::APInt::zext((llvm::APInt *)&v81, v52, (uint64_t)&v79);
        v73 = sub_1C63666FC(a3, (llvm::LLVMContext *)&v79, (const llvm::APInt *)&v83, (uint64_t)v85, v86, 0, 0);
        v75 = v74;
        v76 = LODWORD(v90[1]);
        if (LODWORD(v90[1]) >= (unint64_t)HIDWORD(v90[1]))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v90, (uint64_t)v91, LODWORD(v90[1]) + 1, 16);
          v76 = LODWORD(v90[1]);
        }
        v77 = (uint64_t *)((char *)v90[0] + 16 * v76);
        *v77 = v73;
        v77[1] = v75;
        ++LODWORD(v90[1]);
        if (v80 >= 0x41 && v79)
          MEMORY[0x1CAA32F9C](v79, 0x1000C8000313F17);
        if (v82 >= 0x41 && v81)
          MEMORY[0x1CAA32F9C](v81, 0x1000C8000313F17);
        if (v83)
          llvm::MetadataTracking::untrack((uint64_t)&v83, v83);
      }
      v59 += 40;
    }
    while (v61 != v59);
  }
  v57 = *(_QWORD *)(a3 + 832);
  if (v57)
    v58 = *(unsigned __int16 *)(v57 + 8);
  else
    v58 = 0;
  v43 = sub_1C636D0C8(a3, (const char *)0x92, (const llvm::APInt *)&v87, (llvm *)v89, *((uint64_t *)&v89 + 1), (uint64_t *)v90[0], LODWORD(v90[1]), v58);
  if (v90[0] != v91)
    free(v90[0]);
LABEL_34:
  if (v87)
    llvm::MetadataTracking::untrack((uint64_t)&v87, v87);
  return v43;
}

uint64_t sub_1C5CB389C(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, int a12, unsigned int a13)
{
  __int16 v13;
  uint64_t v14;
  int v22;
  uint64_t v23;
  int v24;
  _BOOL4 v25;
  unsigned __int8 *v26;
  uint64_t *v27;
  unsigned __int8 *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  unsigned __int8 *v34;
  uint64_t v35;
  llvm *v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t *v40;
  int v41;
  int v42;
  void *v43[2];
  _BYTE v44[32];
  unsigned __int8 *v45;
  unint64_t v46;
  unsigned __int8 *v47;
  int v48;
  uint64_t v49;

  v49 = *MEMORY[0x1E0C80C00];
  if (*(_WORD *)(a9 + 24) != 253)
    return 0;
  v13 = *(_WORD *)(a9 + 26);
  if ((v13 & 0xF80) != 0)
    return 0;
  v22 = a4;
  if ((a6 & 1) != 0)
    goto LABEL_11;
  if (!(_BYTE)a4)
  {
    if (*(_BYTE *)(a5 + 8) == 18)
      goto LABEL_11;
LABEL_10:
    if (!(*(_WORD *)(*(_QWORD *)(a9 + 96) + 36) & 0xF00 | v13 & 8))
      goto LABEL_14;
    goto LABEL_11;
  }
  if (a4 - 15 >= 0x69)
    goto LABEL_10;
LABEL_11:
  v14 = 0;
  if (!(_BYTE)a4 || !*(_BYTE *)(*(_QWORD *)(a9 + 40) + 16 * a10))
    return v14;
  if (((*(unsigned __int16 *)(a3
                             + 358 * a4
                             + 2 * *(unsigned __int8 *)(*(_QWORD *)(a9 + 40) + 16 * a10)
                             + 73672) >> (4 * a12)) & 0xF) != 0)
    return 0;
LABEL_14:
  v43[0] = v44;
  v43[1] = (void *)0x400000000;
  v23 = *(_QWORD *)(a9 + 48);
  if (!v23)
    goto LABEL_21;
  v24 = 1;
  do
  {
    if (*(_DWORD *)(v23 + 8) == a10)
    {
      if (!v24)
        goto LABEL_21;
      --v24;
    }
    v23 = *(_QWORD *)(v23 + 32);
  }
  while (v23);
  if (!v24)
    v25 = 1;
  else
LABEL_21:
    v25 = sub_1C5CB47B0(a4, a5, a7, a9, a10, a13, (uint64_t)v43, a3);
  if (v22)
  {
    if ((v22 - 15) < 0x9C)
      goto LABEL_24;
  }
  else if ((*(_DWORD *)(a5 + 8) & 0xFE) == 0x12)
  {
LABEL_24:
    v14 = 0;
    if ((v25 & (*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a3 + 1312))(a3, a7, 0) & 1) != 0)
      goto LABEL_32;
    goto LABEL_29;
  }
  if (v25)
  {
LABEL_32:
    v26 = *(unsigned __int8 **)(a9 + 64);
    v45 = v26;
    if (v26)
      llvm::MetadataTracking::track((uint64_t)&v45, v26, 2);
    LODWORD(v46) = *(_DWORD *)(a9 + 60);
    v27 = (uint64_t *)(*(_QWORD *)(a9 + 40) + 16 * a10);
    v28 = (unsigned __int8 *)sub_1C636B5B0(a1, a12, (uint64_t)&v45, a4, a5, **(_QWORD **)(a9 + 32), *(_QWORD *)(*(_QWORD *)(a9 + 32) + 8), a8, *(_QWORD *)(*(_QWORD *)(a9 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a9 + 32) + 48), *v27, v27[1], *(_QWORD *)(a9 + 96));
    v30 = v29;
    if (v45)
      llvm::MetadataTracking::untrack((uint64_t)&v45, v45);
    sub_1C5CB4994(a2, (uint64_t)v43, a9, a10, (uint64_t)v28, v30, a13);
    v31 = *(_QWORD *)(a9 + 48);
    if (v31)
    {
      v32 = 1;
      while (1)
      {
        if (!*(_DWORD *)(v31 + 8))
        {
          if (!v32)
          {
            v33 = 0;
            goto LABEL_45;
          }
          --v32;
        }
        v31 = *(_QWORD *)(v31 + 32);
        if (!v31)
          goto LABEL_44;
      }
    }
    v32 = 1;
LABEL_44:
    v33 = 1;
LABEL_45:
    v45 = v28;
    v46 = v30;
    sub_1C5C5B0B4(a2, a7, (uint64_t *)&v45, 1, 1);
    if (!v33 || v32)
    {
      v34 = *(unsigned __int8 **)(a9 + 64);
      v45 = v34;
      if (v34)
        llvm::MetadataTracking::track((uint64_t)&v45, v34, 2);
      LODWORD(v46) = *(_DWORD *)(a9 + 60);
      v35 = *(_QWORD *)(a9 + 40) + 16 * a10;
      v36 = *(llvm **)v35;
      v37 = *(_QWORD *)(v35 + 8);
      v38 = *(_QWORD *)(a1 + 832);
      if (v38)
        v39 = *(_WORD *)(v38 + 8);
      else
        v39 = 0;
      v40 = sub_1C5D52060(a1, 201, (const llvm::APInt *)&v45, v36, v37, (uint64_t)v28, v30, v39);
      v42 = v41;
      if (v45)
        llvm::MetadataTracking::untrack((uint64_t)&v45, v45);
      v45 = (unsigned __int8 *)v40;
      LODWORD(v46) = v42;
      v47 = v28;
      v48 = 1;
      sub_1C5C5B0B4(a2, a9, (uint64_t *)&v45, 2, 1);
    }
    else
    {
      sub_1C5D6146C(a1, a9, 1, (uint64_t)v28, 1);
      sub_1C5C5B190(a2, a9);
    }
    v14 = a7;
    goto LABEL_29;
  }
  v14 = 0;
LABEL_29:
  if (v43[0] != v44)
    free(v43[0]);
  return v14;
}

_QWORD *sub_1C5CB3C78(uint64_t a1, uint64_t a2, llvm *a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, unsigned int a9)
{
  uint64_t v9;
  int v15;
  _QWORD *v16;
  int v18;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t *v26;
  uint64_t *v27;
  unsigned int v28;
  int v29;
  uint64_t v30;
  unsigned __int8 *v31;
  int v32;

  v9 = *(_QWORD *)(a6 + 48);
  if (!v9)
    return 0;
  v15 = 1;
  do
  {
    if (*(_DWORD *)(v9 + 8) == a7)
    {
      if (!v15)
        return 0;
      --v15;
    }
    v9 = *(_QWORD *)(v9 + 32);
  }
  while (v9);
  if (v15)
    return 0;
  if (!a6)
    return 0;
  v16 = 0;
  if (*(_WORD *)(a6 + 24) != 308)
    return v16;
  if ((*(_WORD *)(a6 + 26) & 0xC00) != 0)
    return 0;
  if (!(_BYTE)a3)
    return 0;
  v16 = 0;
  if (!**(_BYTE **)(a6 + 40))
    return v16;
  v18 = (*(unsigned __int16 *)(a2 + 358 * a3 + 2 * **(unsigned __int8 **)(a6 + 40) + 73672) >> (4 * a8)) & 0xF;
  if (v18 && v18 != 4)
    return 0;
  v16 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a2 + 1312))(a2, a5, 0))
  {
    v20 = *(unsigned __int8 **)(a6 + 64);
    v31 = v20;
    if (v20)
      llvm::MetadataTracking::track((uint64_t)&v31, v20, 2);
    v32 = *(_DWORD *)(a6 + 60);
    v21 = *(_QWORD *)(a6 + 32);
    v22 = *(_QWORD *)(v21 + 160);
    v23 = *(_QWORD *)(v21 + 168);
    v24 = *(_QWORD *)(a1 + 832);
    if (v24)
      v25 = *(_WORD *)(v24 + 8);
    else
      v25 = 0;
    v26 = sub_1C5D52060(a1, a9, (const llvm::APInt *)&v31, a3, a4, v22, v23, v25);
    v27 = *(uint64_t **)(a6 + 32);
    v28 = *(unsigned __int16 *)(a6 + 26);
    LODWORD(v30) = (v28 >> 7) & 7;
    HIDWORD(v30) = a8;
    v16 = sub_1C5D5FD20(a1, (uint64_t)a3, a4, (uint64_t)&v31, *v27, v27[1], v27[5], v27[6], v27[10], v27[11], v27[15], v27[16], (uint64_t)v26, v29, *(_QWORD *)(a6 + 80), *(_QWORD *)(a6 + 88), *(_QWORD *)(a6 + 96), v30, (v28 & 0x1000) != 0);
    sub_1C5D6146C(a1, a6, 1, (uint64_t)v16, 1);
    if (v31)
      llvm::MetadataTracking::untrack((uint64_t)&v31, v31);
  }
  return v16;
}

uint64_t sub_1C5CB3E80(uint64_t *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v11;
  int v14;
  int v15;
  const char *v16;
  int v17;
  char v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v23;
  int v24;
  int v25;
  BOOL v27;
  BOOL v28;
  unsigned int v29;
  int v30;
  int v31;
  BOOL v32;
  unsigned __int8 *v33;
  unsigned int v34;
  const char *v35;
  unsigned int v36;
  const char *v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  unsigned __int8 *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  __int128 v56;
  uint64_t v57;
  _QWORD *v58;
  unsigned int v59;
  unsigned int v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unsigned __int8 *v76;
  uint64_t v77;
  llvm *v78;
  uint64_t v79;
  uint64_t v80;
  __int16 v81;
  uint64_t *v82;
  int v83;
  int v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  int v91;
  __int128 v92;
  unint64_t v93;
  __int128 v94;
  unsigned __int8 *v95;
  int v96;
  unsigned __int8 *v97;
  int v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  void *v102;
  uint64_t v103;
  _BYTE v104[64];
  __int128 v105;
  _BYTE v106[64];
  void *v107[2];
  _BYTE v108[32];
  __int128 v109;
  __int128 v110;
  uint64_t v111;

  v111 = *MEMORY[0x1E0C80C00];
  v2 = *(uint64_t **)(a2 + 32);
  v3 = *(uint64_t **)(a2 + 40);
  v4 = *v2;
  v5 = v2[1];
  v7 = *v3;
  v6 = v3[1];
  *(_QWORD *)&v101 = *v3;
  *((_QWORD *)&v101 + 1) = v6;
  if (*(_WORD *)(v4 + 24) != 253)
    return 0;
  v8 = *(_WORD *)(v4 + 26);
  if ((v8 & 0xF80) != 0)
    return 0;
  v11 = *(_QWORD *)(v4 + 48);
  if (!v11)
    return 0;
  v14 = 1;
  do
  {
    if (*(_DWORD *)(v11 + 8) == (_DWORD)v5)
    {
      if (!v14)
        return 0;
      --v14;
    }
    v11 = *(_QWORD *)(v11 + 32);
  }
  while (v11);
  if (v14 || *(_WORD *)(*(_QWORD *)(v4 + 96) + 36) & 0xF00 | v8 & 8)
    return 0;
  if (!(_BYTE)v7)
  {
    if ((*(_DWORD *)(v6 + 8) & 0xFE) == 0x12)
      goto LABEL_17;
    return 0;
  }
  if (v7 - 15 >= 0x9C)
    return 0;
LABEL_17:
  v92 = *(_OWORD *)(*(_QWORD *)(v4 + 40) + 16 * v5);
  v15 = sub_1C52B71D4((unsigned __int8 *)&v101);
  if ((v15 & (v15 - 1)) != 0)
    return 0;
  v9 = 0;
  if ((*(unsigned int (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1[1] + 1312))(a1[1], a2, 0))
  {
    v107[0] = v108;
    v107[1] = (void *)0x400000000;
    if (sub_1C5CB47B0(v101, *((uint64_t *)&v101 + 1), a2, v4, v5, *(unsigned __int16 *)(a2 + 24), (uint64_t)v107, a1[1]))
    {
      if (*(_WORD *)(a2 + 24) == 198)
        v17 = 2;
      else
        v17 = 3;
      v91 = v17;
      v18 = 4 * v17;
      v99 = v101;
      v100 = v92;
      v19 = 15 << (4 * v17);
      for (LOBYTE(v20) = v92; ; LOBYTE(v20) = v105)
      {
        v21 = v99;
        v20 = v20;
        if ((_BYTE)v99 && v20 != 0)
        {
          v23 = *(unsigned __int16 *)(a1[1] + 358 * v99 + 2 * v20 + 73672);
          v24 = v19 & v23;
          v25 = (v23 >> v18) & 0xF;
          if (!v24 || v25 == 4)
            break;
        }
        if (sub_1C612FE00((llvm::EVT *)&v100, v16) <= 1)
        {
          v21 = v99;
          v20 = v100;
          break;
        }
        sub_1C636F9DC(*a1, (_BOOL8 *)&v99, v27, (unint64_t *)&v105);
        v99 = v105;
        sub_1C636F9DC(*a1, (_BOOL8 *)&v100, v28, (unint64_t *)&v105);
        v100 = v105;
      }
      v9 = 0;
      if (v21 && v20)
      {
        v29 = *(unsigned __int16 *)(a1[1] + 358 * v21 + 2 * v20 + 73672);
        v30 = v19 & v29;
        v31 = (v29 >> v18) & 0xF;
        if (v30)
          v32 = v31 == 4;
        else
          v32 = 1;
        if (v32)
        {
          v33 = *(unsigned __int8 **)(a2 + 64);
          v97 = v33;
          if (v33)
            llvm::MetadataTracking::track((uint64_t)&v97, v33, 2);
          v98 = *(_DWORD *)(a2 + 60);
          v34 = sub_1C612FE00((llvm::EVT *)&v101, (const char *)v33);
          v36 = sub_1C612FE00((llvm::EVT *)&v99, v35);
          v85 = sub_1C47C1C70((unsigned __int8 *)&v100);
          if ((_DWORD)v37 == 1)
          *(_QWORD *)&v105 = v106;
          *((_QWORD *)&v105 + 1) = 0x400000000;
          v102 = v104;
          v103 = 0x400000000;
          if (v36 <= v34)
          {
            v40 = 0;
            v41 = *(_QWORD *)(v4 + 32);
            if (v34 / v36 <= 1)
              v42 = 1;
            else
              v42 = v34 / v36;
            v93 = *(_QWORD *)(v41 + 48);
            v90 = *(uint64_t **)(v41 + 40);
            do
            {
              v43 = *(_QWORD *)(v4 + 96);
              v44 = *(_BYTE *)(v43 + 34);
              v45 = *(_QWORD *)(v43 + 8);
              v87 = *a1;
              v88 = v42;
              v46 = *(unsigned __int8 **)(v4 + 64);
              v95 = v46;
              if (v46)
              {
                llvm::MetadataTracking::track((uint64_t)&v95, v46, 2);
                v43 = *(_QWORD *)(v4 + 96);
              }
              v89 = v40;
              v47 = v40;
              v48 = (1 << (63 - __clz(((1 << v44) | v45) & -((1 << v44) | v45)))) | v40;
              v49 = 63 - __clz(v48 & -v48);
              v96 = *(_DWORD *)(v4 + 60);
              v50 = *((_QWORD *)&v99 + 1);
              v86 = v99;
              v51 = *(uint64_t **)(v4 + 32);
              v53 = *v51;
              v52 = v51[1];
              sub_1C4824250((uint64_t *)v43, v47, (uint64_t)&v94);
              v54 = *(_QWORD *)(v4 + 96);
              v55 = *(_WORD *)(v54 + 32);
              v56 = *(_OWORD *)(v54 + 56);
              v109 = *(_OWORD *)(v54 + 40);
              v110 = v56;
              v58 = sub_1C636B4C8(v87, v91, (uint64_t)&v95, v86, v50, v53, v52, v57, (uint64_t)v90, v93, &v94, v100, *((uint64_t *)&v100 + 1), v49 | 0x100u, (v49 | 0x100uLL) >> 32, v55, (uint64_t)&v109);
              if (v95)
                llvm::MetadataTracking::untrack((uint64_t)&v95, v95);
              v90 = sub_1C6369954(*a1, (uint64_t)v90, v93, v85, 0, (const llvm::APInt *)&v97, 0);
              v60 = v59;
              v61 = DWORD2(v105);
              if (DWORD2(v105) >= (unint64_t)HIDWORD(v105))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v105, (uint64_t)v106, DWORD2(v105) + 1, 16);
                v61 = DWORD2(v105);
              }
              v62 = (_QWORD *)(v105 + 16 * v61);
              *v62 = v58;
              v62[1] = 0;
              ++DWORD2(v105);
              v63 = v103;
              if (v103 >= (unint64_t)HIDWORD(v103))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v102, (uint64_t)v104, v103 + 1, 16);
                v63 = v103;
              }
              v93 = v93 & 0xFFFFFFFF00000000 | v60;
              v64 = (char *)v102 + 16 * v63;
              *v64 = v58;
              v64[1] = 1;
              v38 = (v103 + 1);
              LODWORD(v103) = v103 + 1;
              v40 = v89 + v85;
              v42 = v88 - 1;
            }
            while (v88 != 1);
            v39 = (uint64_t *)v102;
          }
          else
          {
            v38 = 0;
            v39 = (uint64_t *)v104;
          }
          v65 = *(_QWORD *)(*a1 + 832);
          if (v65)
            v66 = *(unsigned __int16 *)(v65 + 8);
          else
            v66 = 0;
          v67 = sub_1C636D0C8(*a1, (const char *)2, (const llvm::APInt *)&v97, (llvm *)1, 0, v39, v38, v66);
          v69 = v68;
          v70 = 0;
          v71 = *(_QWORD *)(*a1 + 832);
          if (v71)
            v70 = *(unsigned __int16 *)(v71 + 8);
          v72 = sub_1C636D0C8(*a1, (const char *)0x95, (const llvm::APInt *)&v97, (llvm *)v101, *((uint64_t *)&v101 + 1), (uint64_t *)v105, DWORD2(v105), v70);
          v74 = v73;
          sub_1C5C5B004((uint64_t)a1, (uint64_t)v67);
          *(_QWORD *)&v109 = v72;
          *((_QWORD *)&v109 + 1) = v74;
          sub_1C5C5B0B4(a1, a2, (uint64_t *)&v109, 1, 1);
          v75 = *a1;
          v76 = *(unsigned __int8 **)(v4 + 64);
          *(_QWORD *)&v109 = v76;
          if (v76)
            llvm::MetadataTracking::track((uint64_t)&v109, v76, 2);
          DWORD2(v109) = *(_DWORD *)(v4 + 60);
          v77 = *(_QWORD *)(v4 + 40) + 16 * v5;
          v78 = *(llvm **)v77;
          v79 = *(_QWORD *)(v77 + 8);
          v80 = *(_QWORD *)(v75 + 832);
          if (v80)
            v81 = *(_WORD *)(v80 + 8);
          else
            v81 = 0;
          v82 = sub_1C5D52060(v75, 201, (const llvm::APInt *)&v109, v78, v79, (uint64_t)v72, v74, v81);
          v84 = v83;
          if ((_QWORD)v109)
            llvm::MetadataTracking::untrack((uint64_t)&v109, (unsigned __int8 *)v109);
          sub_1C5CB4994(a1, (uint64_t)v107, v4, v5, (uint64_t)v72, v74, *(unsigned __int16 *)(a2 + 24));
          *(_QWORD *)&v109 = v82;
          DWORD2(v109) = v84;
          *(_QWORD *)&v110 = v67;
          DWORD2(v110) = v69;
          sub_1C5C5B0B4(a1, v4, (uint64_t *)&v109, 2, 1);
          if (v102 != v104)
            free(v102);
          if ((_BYTE *)v105 != v106)
            free((void *)v105);
          if (v97)
            llvm::MetadataTracking::untrack((uint64_t)&v97, v97);
          v9 = a2;
        }
        else
        {
          v9 = 0;
        }
      }
    }
    else
    {
      v9 = 0;
    }
    if (v107[0] != v108)
      free(v107[0]);
  }
  return v9;
}

uint64_t sub_1C5CB4588(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12)
{
  int v17;
  __int16 v18;
  int v19;
  uint64_t result;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unsigned __int8 *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  unsigned __int8 *v31;
  uint64_t v32;

  v17 = *(unsigned __int16 *)(a9 + 24);
  if (a12 == 2)
  {
    if (v17 != 253)
      return 0;
    v18 = *(_WORD *)(a9 + 26);
    v19 = v18 & 0xC00;
    if (v19 == 2048)
      goto LABEL_8;
    goto LABEL_7;
  }
  if (v17 != 253)
    return 0;
  v18 = *(_WORD *)(a9 + 26);
  v19 = v18 & 0xC00;
  if (v19 != 3072)
  {
LABEL_7:
    if (v19 != 1024)
      return 0;
  }
LABEL_8:
  if ((v18 & 0x380) != 0)
    return 0;
  v21 = *(_QWORD *)(a9 + 48);
  if (!v21)
    return 0;
  v22 = 1;
  do
  {
    if (*(_DWORD *)(v21 + 8) == a10)
    {
      if (!v22)
        return 0;
      --v22;
    }
    v21 = *(_QWORD *)(v21 + 32);
  }
  while (v21);
  if (v22)
    return 0;
  v23 = *(_QWORD *)(a9 + 80);
  v24 = *(_QWORD *)(a9 + 88);
  if ((a6 & 1) == 0)
  {
    v25 = v18 & 8;
    if ((*(_WORD *)(*(_QWORD *)(a9 + 96) + 36) & 0xF00) == 0 && v25 == 0)
    {
      if ((_BYTE)a4)
      {
        if (a4 - 15 >= 0x9C)
          goto LABEL_31;
      }
      else if ((*(_DWORD *)(a5 + 8) & 0xFE) != 0x12)
      {
        goto LABEL_31;
      }
    }
  }
  result = 0;
  if (!(_BYTE)a4 || !*(_QWORD *)(a9 + 80))
    return result;
  if (((*(unsigned __int16 *)(a3 + 358 * a4 + 2 * *(_QWORD *)(a9 + 80) + 73672) >> (4 * a12)) & 0xF) != 0)
    return 0;
LABEL_31:
  v27 = *(unsigned __int8 **)(a9 + 64);
  v31 = v27;
  if (v27)
    llvm::MetadataTracking::track((uint64_t)&v31, v27, 2);
  LODWORD(v32) = *(_DWORD *)(a9 + 60);
  v28 = (unsigned __int8 *)sub_1C636B5B0(a1, a12, (uint64_t)&v31, a4, a5, **(_QWORD **)(a9 + 32), *(_QWORD *)(*(_QWORD *)(a9 + 32) + 8), a8, *(_QWORD *)(*(_QWORD *)(a9 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a9 + 32) + 48), v23, v24, *(_QWORD *)(a9 + 96));
  v30 = v29;
  if (v31)
    llvm::MetadataTracking::untrack((uint64_t)&v31, v31);
  v31 = v28;
  v32 = v30;
  sub_1C5C5B0B4(a2, a7, (uint64_t *)&v31, 1, 1);
  sub_1C5D6146C(a1, a9, 1, (uint64_t)v28, 1);
  if (!*(_QWORD *)(a9 + 48))
    sub_1C5C5B190(a2, a9);
  return a7;
}

BOOL sub_1C5CB47B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v13;
  int v14;
  uint64_t v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  char v23;
  char v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  int v29;
  BOOL v30;
  BOOL v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v35;

  v13 = (_QWORD *)(*(_QWORD *)(a4 + 40) + 16 * a5);
  v14 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)a8 + 1160))(a8, a1, a2, *v13, v13[1]);
  v15 = *(_QWORD *)(a4 + 48);
  if (!v15)
    return 1;
  v16 = v14;
  v17 = 0;
  v18 = a7 + 16;
  do
  {
    v19 = *(_QWORD *)(v15 + 16);
    if (v19 != a3 && *(_DWORD *)(v15 + 8) == a5)
    {
      if (a6 == 200 || *(_WORD *)(v19 + 24) != 193)
      {
        if (!v16)
          return 0;
        v17 |= *(_WORD *)(v19 + 24) == 49;
      }
      else
      {
        v20 = *(_QWORD *)(v19 + 32);
        if (a6 == 199 && (*(_DWORD *)(*(_QWORD *)(v20 + 80) + 76) - 18) < 4)
          return 0;
        v21 = 0;
        v22 = 0;
        v23 = 0;
        do
        {
          v24 = v21;
          v25 = (uint64_t *)(v20 + 40 * v22);
          v26 = *v25;
          v27 = *((_DWORD *)v25 + 2);
          if (v26 != a4 || v27 != a5)
          {
            v29 = *(unsigned __int16 *)(v26 + 24);
            v30 = v29 == 11;
            if (v29 == 35)
            {
              v30 = 1;
              v31 = 1;
            }
            else
            {
              v31 = v29 == 11;
            }
            if (!v31)
              return 0;
            v23 |= v30;
          }
          v21 = 1;
          v22 = 1;
        }
        while ((v24 & 1) == 0);
        if ((v23 & 1) != 0)
        {
          v32 = *(unsigned int *)(a7 + 8);
          if (v32 >= *(unsigned int *)(a7 + 12))
          {
            v35 = v18;
            llvm::SmallVectorBase<unsigned int>::grow_pod(a7, v18, v32 + 1, 8);
            v18 = v35;
            v32 = *(unsigned int *)(a7 + 8);
          }
          *(_QWORD *)(*(_QWORD *)a7 + 8 * v32) = v19;
          ++*(_DWORD *)(a7 + 8);
        }
      }
    }
    v15 = *(_QWORD *)(v15 + 32);
  }
  while (v15);
  if ((v17 & 1) == 0)
    return 1;
  v33 = *(_QWORD *)(a3 + 48);
  if (!v33)
    return 1;
  while (*(_DWORD *)(v33 + 8) || *(_WORD *)(*(_QWORD *)(v33 + 16) + 24) != 49)
  {
    v33 = *(_QWORD *)(v33 + 32);
    if (!v33)
      return 1;
  }
  return *(_DWORD *)(a7 + 8) != 0;
}

void sub_1C5CB4994(uint64_t *a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v24;
  __int16 v25;
  char *v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  llvm *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t *v41;
  unsigned __int8 *v43;
  int v44;
  uint64_t v45[2];
  void *v46;
  uint64_t v47;
  _QWORD v48[10];

  v48[8] = *MEMORY[0x1E0C80C00];
  v13 = *(unsigned __int8 **)(a5 + 64);
  v43 = v13;
  if (v13)
    llvm::MetadataTracking::track((uint64_t)&v43, v13, 2);
  v44 = *(_DWORD *)(a5 + 60);
  v14 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v14)
  {
    v15 = *(uint64_t **)a2;
    v40 = *(_QWORD *)a2 + 8 * v14;
    do
    {
      LODWORD(v16) = 0;
      v17 = 0;
      v18 = 0;
      v41 = v15;
      v19 = *v15;
      v46 = v48;
      v47 = 0x400000000;
      do
      {
        v20 = v17;
        v21 = (uint64_t *)(*(_QWORD *)(v19 + 32) + 40 * v18);
        v22 = v21[1];
        if (*v21 == a3 && (_DWORD)v22 == a4)
        {
          if (v16 >= HIDWORD(v47))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v46, (uint64_t)v48, v16 + 1, 16);
            LODWORD(v16) = v47;
          }
          v26 = (char *)v46 + 16 * v16;
          *(_QWORD *)v26 = a5;
          v27 = a6;
        }
        else
        {
          v24 = *(_QWORD *)(*a1 + 832);
          if (v24)
            v25 = *(_WORD *)(v24 + 8);
          else
            v25 = 0;
          v28 = sub_1C5D52060(*a1, a7, (const llvm::APInt *)&v43, **(llvm ***)(a5 + 40), *(_QWORD *)(*(_QWORD *)(a5 + 40) + 8), *v21, v22, v25);
          v27 = v29;
          v30 = v47;
          if (v47 >= (unint64_t)HIDWORD(v47))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v46, (uint64_t)v48, v47 + 1, 16);
            v30 = v47;
          }
          v26 = (char *)v46 + 16 * v30;
          *(_QWORD *)v26 = v28;
        }
        *((_QWORD *)v26 + 1) = v27;
        v16 = (v47 + 1);
        LODWORD(v47) = v47 + 1;
        v17 = 1;
        v18 = 1;
      }
      while ((v20 & 1) == 0);
      v31 = *(_OWORD *)(*(_QWORD *)(v19 + 32) + 80);
      if (v16 >= HIDWORD(v47))
      {
        v39 = *(_OWORD *)(*(_QWORD *)(v19 + 32) + 80);
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v46, (uint64_t)v48, v16 + 1, 16);
        v31 = v39;
        LODWORD(v16) = v47;
      }
      *((_OWORD *)v46 + v16) = v31;
      v32 = (v47 + 1);
      LODWORD(v47) = v47 + 1;
      v33 = *(_QWORD *)(v19 + 40);
      v34 = *(llvm **)v33;
      v35 = *(_QWORD *)(v33 + 8);
      v36 = *(_QWORD *)(*a1 + 832);
      if (v36)
        v37 = *(unsigned __int16 *)(v36 + 8);
      else
        v37 = 0;
      v45[0] = (uint64_t)sub_1C636D0C8(*a1, (const char *)0xC1, (const llvm::APInt *)&v43, v34, v35, (uint64_t *)v46, v32, v37);
      v45[1] = v38;
      sub_1C5C5B0B4(a1, v19, v45, 1, 1);
      if (v46 != v48)
        free(v46);
      v15 = v41 + 1;
    }
    while (v41 + 1 != (uint64_t *)v40);
  }
  if (v43)
    llvm::MetadataTracking::untrack((uint64_t)&v43, v43);
}

uint64_t *sub_1C5CB4C44(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *result;
  unsigned int *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  int v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  llvm **v17;
  uint64_t v18;
  llvm *v19;
  unsigned __int8 *v20;
  uint64_t v21;
  int v22;
  unsigned __int8 *v23;
  unsigned int ExtendedSizeInBits;
  const char *v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  _QWORD *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unsigned __int8 *v37;
  int v38;
  llvm *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  if ((a3 & 1) != 0)
    return 0;
  v41 = v3;
  v42 = v4;
  v7 = *(unsigned int **)(a1 + 32);
  v8 = *(_QWORD **)v7;
  if (*(_WORD *)(*(_QWORD *)v7 + 24) != 193)
    return 0;
  v9 = v8[6];
  if (!v9)
    return 0;
  v11 = v7[2];
  v12 = 1;
  do
  {
    if (*(_DWORD *)(v9 + 8) == (_DWORD)v11)
    {
      if (!v12)
        return 0;
      --v12;
    }
    v9 = *(_QWORD *)(v9 + 32);
  }
  while (v9);
  if (v12)
    return 0;
  if (*(_BYTE *)(v8[5] + 16 * v11) != 2)
    return 0;
  v13 = (uint64_t *)v8[4];
  v14 = *v13;
  v15 = v13[1];
  v16 = v13[5];
  LODWORD(v13) = *(_DWORD *)(v13[10] + 76);
  v17 = *(llvm ***)(a1 + 40);
  v19 = *v17;
  v18 = (uint64_t)v17[1];
  v39 = *v17;
  v40 = v18;
  if ((_DWORD)v13 != 18)
    return 0;
  v20 = (unsigned __int8 *)(*(_QWORD *)(v14 + 40) + 16 * v15);
  v21 = *((_QWORD *)v20 + 1);
  v22 = *v20;
  if (!sub_1C636F400(v16))
    return 0;
  result = 0;
  if (v19 == v22)
  {
    if (!(_BYTE)v19 && v18 != v21)
      return 0;
    v23 = *(unsigned __int8 **)(a1 + 64);
    v37 = v23;
    if (v23)
      llvm::MetadataTracking::track((uint64_t)&v37, v23, 2);
    v38 = *(_DWORD *)(a1 + 60);
    if ((_BYTE)v19)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v39);
    else
      ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v39);
    v26 = ExtendedSizeInBits;
    if ((_DWORD)v25 == 1)
    v27 = v26 - 1;
    if (((*(uint64_t (**)(_QWORD, llvm *, uint64_t, uint64_t))(**(_QWORD **)(a2 + 24) + 1456))(*(_QWORD *)(a2 + 24), v39, v40, v27) & 1) != 0)
    {
      if (v37)
        llvm::MetadataTracking::untrack((uint64_t)&v37, v37);
      return 0;
    }
    v28 = sub_1C6366760(a2, (const llvm::APInt *)&v37, v14, v15, v39, v40);
    v30 = v29;
    v31 = sub_1C6366AB4(a2, v27, (const llvm::APInt *)&v37, v39, v40, 0, 0);
    if (*(_WORD *)(a1 + 24) == 198)
      v34 = 176;
    else
      v34 = 177;
    v35 = *(_QWORD *)(a2 + 832);
    if (v35)
      LOWORD(v35) = *(_WORD *)(v35 + 8);
    v36 = sub_1C5D56C70(a2, v34, (const llvm::APInt *)&v37, v39, v40, (uint64_t)v28, v30, v33, (uint64_t)v31, v32, v35);
    if (v37)
      llvm::MetadataTracking::untrack((uint64_t)&v37, v37);
    return v36;
  }
  return result;
}

uint64_t *sub_1C5CB4E80(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  __int128 v3;
  uint64_t *v4;
  uint64_t v8;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t ExtendedSizeInBits;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  __int16 v48;
  unsigned int v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  unsigned __int8 *v53;
  int v54;
  _QWORD v55[2];
  __int128 v56;

  v2 = *(unsigned __int16 *)(a2 + 24);
  v3 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v56 = v3;
  if (*((_BYTE *)a1 + 33) || !(_BYTE)v3)
    return 0;
  v8 = a1[1];
  if (v3 != 1 && (!*(_QWORD *)(v8 + 8 * v3 + 96) || v3 == 0))
    return 0;
  if ((*(unsigned __int8 *)(v8 + 390 * v3 + 4053) | 4) != 4)
    return 0;
  v10 = *(_DWORD **)(a2 + 32);
  v11 = *(_QWORD *)v10;
  if (*(_WORD *)(*(_QWORD *)v10 + 24) != 191)
    return 0;
  v12 = *(_QWORD *)(v11 + 48);
  if (!v12)
    return 0;
  v13 = v10[2];
  v14 = 1;
  do
  {
    if (*(_DWORD *)(v12 + 8) == v13)
    {
      if (!v14)
        return 0;
      --v14;
    }
    v12 = *(_QWORD *)(v12 + 32);
  }
  while (v12);
  if (v14)
    return 0;
  v15 = *(uint64_t **)(v11 + 32);
  v16 = *v15;
  if (*(_WORD *)(*v15 + 24) != 193)
    return 0;
  v17 = v15[1];
  v18 = (_QWORD *)(*(_QWORD *)(**(_QWORD **)(v16 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(v16 + 32) + 8));
  v55[0] = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v8 + 400))(v8, *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, *(_QWORD *)(*a1 + 56), *v18, v18[1]);
  v55[1] = v19;
  if (LOBYTE(v55[0]))
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)v55);
  else
    ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v55);
  v22 = v21;
  if (ExtendedSizeInBits != sub_1C47A8C74((unsigned __int8 *)&v56))
    return 0;
  v4 = 0;
  if (v22 == v23)
  {
    v25 = *(_QWORD **)(v11 + 32);
    v27 = v25[5];
    v26 = v25[6];
    v29 = v25[10];
    v28 = v25[11];
    v30 = *(unsigned __int8 **)(a2 + 64);
    v53 = v30;
    if (v30)
      llvm::MetadataTracking::track((uint64_t)&v53, v30, 2);
    v54 = *(_DWORD *)(a2 + 60);
    v31 = *a1;
    if ((_DWORD)v2 == 212)
    {
      v32 = *(_QWORD *)(a2 + 32);
      v33 = *(_QWORD *)(v32 + 40);
      v34 = *(_QWORD *)(v32 + 48);
      v35 = *(_QWORD *)(v31 + 832);
      if (v35)
        LOWORD(v35) = *(_WORD *)(v35 + 8);
      v37 = sub_1C5D56C70(v31, 212, (const llvm::APInt *)&v53, (llvm *)v56, *((uint64_t *)&v56 + 1), v27, v26, v24, v33, v34, v35);
      v39 = v38;
      v40 = *(_QWORD *)(a2 + 32);
      v41 = *(_QWORD *)(v40 + 40);
      v42 = *(_QWORD *)(v40 + 48);
      v43 = *(_QWORD *)(*a1 + 832);
      if (v43)
        LOWORD(v43) = *(_WORD *)(v43 + 8);
      v44 = sub_1C5D56C70(*a1, 212, (const llvm::APInt *)&v53, (llvm *)v56, *((uint64_t *)&v56 + 1), v29, v28, v36, v41, v42, v43);
    }
    else
    {
      v47 = *(_QWORD *)(v31 + 832);
      if (v47)
        v48 = *(_WORD *)(v47 + 8);
      else
        v48 = 0;
      v37 = sub_1C5D52060(v31, v2, (const llvm::APInt *)&v53, (llvm *)v56, *((uint64_t *)&v56 + 1), v27, v26, v48);
      v39 = v49;
      v50 = *(_QWORD *)(*a1 + 832);
      if (v50)
        v51 = *(_WORD *)(v50 + 8);
      else
        v51 = 0;
      v44 = sub_1C5D52060(*a1, v2, (const llvm::APInt *)&v53, (llvm *)v56, *((uint64_t *)&v56 + 1), v29, v28, v51);
    }
    v52 = *(_QWORD *)(*a1 + 832);
    if (v52)
      LOWORD(v52) = *(_WORD *)(v52 + 8);
    v4 = sub_1C5D58E08(*a1, (const char *)0xBF, (const llvm::APInt *)&v53, (llvm *)v56, *((uint64_t *)&v56 + 1), v16, v17, v46, (uint64_t)v37, v39, (uint64_t)v44, v45, 0, v52);
    if (v53)
      llvm::MetadataTracking::untrack((uint64_t)&v53, v53);
  }
  return v4;
}

uint64_t *sub_1C5CB5194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  llvm *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  int v15;
  _QWORD *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  __int16 v23;
  __int16 v24;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int16 v33;
  uint64_t *v34;
  int v35;
  int v36;
  unint64_t v37;
  unsigned __int8 *v38;
  int v39;

  v6 = *(unsigned __int16 *)(a1 + 24);
  v7 = *(uint64_t **)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *v7;
  v10 = *((_DWORD *)v7 + 2);
  v11 = *(llvm **)v8;
  v12 = *(_QWORD *)(v8 + 8);
  v13 = *(unsigned __int8 **)(a1 + 64);
  v38 = v13;
  if (v13)
    llvm::MetadataTracking::track((uint64_t)&v38, v13, 2);
  v39 = *(_DWORD *)(a1 + 60);
  if ((*(_WORD *)(v9 + 24) & 0xFFFE) != 0xBE)
    goto LABEL_22;
  v14 = *(_QWORD *)(v9 + 48);
  if (!v14)
    goto LABEL_22;
  v15 = 1;
  do
  {
    if (*(_DWORD *)(v14 + 8) == v10)
    {
      if (!v15)
        goto LABEL_22;
      --v15;
    }
    v14 = *(_QWORD *)(v14 + 32);
  }
  while (v14);
  if (v15
    || (v16 = *(_QWORD **)(v9 + 32), v18 = v16[5], v17 = v16[6], v19 = v16[10], !sub_1C5CB53DC(v18, v17, v6))
    || (v20 = v16[11], !sub_1C5CB53DC(v19, v20, v6)))
  {
LABEL_22:
    v22 = 0;
    goto LABEL_23;
  }
  v37 = v20;
  if ((_BYTE)v11)
  {
    v21 = v19;
    v22 = 0;
    if (!*(_BYTE *)(v18 + 80))
      goto LABEL_23;
    if ((_DWORD)v6 == 199)
      v23 = -4096;
    else
      v23 = 240;
    if ((_DWORD)v6 == 198)
      v24 = 3840;
    else
      v24 = v23;
    if (((unsigned __int16)v24 & *(_WORD *)(a2
                                           + 358 * v11
                                           + 2 * *(unsigned __int8 *)(v18 + 80)
                                           + 73672)) == 0
      && *(_BYTE *)(v21 + 80)
      && ((unsigned __int16)v24 & *(_WORD *)(a2
                                           + 358 * v11
                                           + 2 * *(unsigned __int8 *)(v21 + 80)
                                           + 73672)) == 0)
    {
      v26 = v21;
      v27 = *(_QWORD *)(a3 + 832);
      if (v27)
        v28 = *(_WORD *)(v27 + 8);
      else
        v28 = 0;
      v29 = sub_1C5D52060(a3, v6, (const llvm::APInt *)&v38, v11, v12, v18, v17, v28);
      v31 = v30;
      v32 = *(_QWORD *)(a3 + 832);
      if (v32)
        v33 = *(_WORD *)(v32 + 8);
      else
        v33 = 0;
      v34 = sub_1C5D52060(a3, v6, (const llvm::APInt *)&v38, v11, v12, v26, v37, v33);
      v22 = sub_1C4815A8C(a3, (const llvm::APInt *)&v38, v11, v12, **(_QWORD **)(v9 + 32), *(_QWORD *)(*(_QWORD *)(v9 + 32) + 8), (uint64_t)v29, v31, (uint64_t)v34, v35, v36);
      goto LABEL_23;
    }
    goto LABEL_22;
  }
  v22 = 0;
LABEL_23:
  if (v38)
    llvm::MetadataTracking::untrack((uint64_t)&v38, v38);
  return v22;
}

BOOL sub_1C5CB53DC(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  int v4;
  unsigned int v5;

  v3 = *(_QWORD *)(a1 + 48);
  if (!v3)
    return 0;
  v4 = 1;
  do
  {
    if (*(_DWORD *)(v3 + 8) == a2)
    {
      if (!v4)
        return 0;
      --v4;
    }
    v3 = *(_QWORD *)(v3 + 32);
  }
  while (v3);
  if (v4 || *(_WORD *)(a1 + 24) != 253)
    return 0;
  v5 = (*(unsigned __int16 *)(a1 + 26) >> 10) & 3;
  if (v5 < 2)
    return 1;
  if (a3 != 198 && v5 == 2)
    return 0;
  return a3 == 199 || v5 != 3;
}

uint64_t *sub_1C5CB5454(uint64_t a1, uint64_t a2)
{
  unsigned int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  int v8;
  uint64_t *v9;
  uint64_t v11;
  llvm *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  unsigned __int8 *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  unsigned __int8 *v23;
  int v24;

  v2 = *(unsigned int **)(a1 + 32);
  v3 = *(_QWORD *)v2;
  if (*(_WORD *)(*(_QWORD *)v2 + 24) != 185)
    return 0;
  v4 = *(_QWORD *)(v3 + 48);
  if (!v4)
    return 0;
  v7 = v2[2];
  v8 = 1;
  do
  {
    if (*(_DWORD *)(v4 + 8) == (_DWORD)v7)
    {
      if (!v8)
        return 0;
      --v8;
    }
    v4 = *(_QWORD *)(v4 + 32);
  }
  while (v4);
  if (v8)
    return 0;
  v11 = *(_QWORD *)(a1 + 40);
  v12 = *(llvm **)v11;
  v13 = *(_QWORD *)(v11 + 8);
  v14 = *(_QWORD *)(a2 + 24);
  v15 = *(_QWORD *)(*(_QWORD *)(v3 + 40) + 16 * v7);
  if ((_BYTE)v15)
  {
    if ((v15 == 1 || !(v16 = *(_QWORD *)(v14 + 8 * v15 + 96) == 0))
      && (*(unsigned __int8 *)(v14 + 390 * v15 + 4047) | 4) == 4)
    {
      return 0;
    }
  }
  if (!(_BYTE)v12)
    return (uint64_t *)v12;
  if (v12 != 1 && (!*(_QWORD *)(v14 + 8 * v12 + 96) || v12 == 0))
    return 0;
  if ((*(unsigned __int8 *)(v14 + 390 * v12 + 4047) | 4) != 4)
    return 0;
  v18 = *(unsigned __int8 **)(a1 + 64);
  v23 = v18;
  if (v18)
    llvm::MetadataTracking::track((uint64_t)&v23, v18, 2);
  v24 = *(_DWORD *)(a1 + 60);
  v20 = sub_1C6366544(a2, **(_QWORD **)(v3 + 32), *(_QWORD *)(*(_QWORD *)(v3 + 32) + 8), (uint64_t)&v23, (uint64_t)v12, v13);
  v21 = *(_QWORD *)(a2 + 832);
  if (v21)
    v22 = *(_WORD *)(v21 + 8);
  else
    v22 = 0;
  v9 = sub_1C5D52060(a2, 185, (const llvm::APInt *)&v23, v12, v13, v20, v19, v22);
  if (v23)
    llvm::MetadataTracking::untrack((uint64_t)&v23, v23);
  return v9;
}

uint64_t sub_1C5CB561C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unsigned int v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;

  v6 = (unint64_t *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  v8 = *v6;
  v7 = v6[1];
  if ((_BYTE)v8)
  {
    if (v8 - 120 < 0x33)
      return 0;
  }
  else if (*(_BYTE *)(v7 + 8) == 19)
  {
    return 0;
  }
  v13 = v8;
  v14 = v7;
  v11 = sub_1C612FE00((llvm::EVT *)&v13, (const char *)a2);
  LODWORD(v14) = v11;
  if (v11 > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v13, -1, 1);
  }
  else
  {
    v12 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v11;
    if (!v11)
      v12 = 0;
    v13 = v12;
  }
  v9 = sub_1C5CB5710(a1, a2, a3, (uint64_t)&v13, 0);
  if (v14 >= 0x41 && v13)
    MEMORY[0x1CAA32F9C](v13, 0x1000C8000313F17);
  return v9;
}

uint64_t sub_1C5CB5710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  char v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;

  v7 = *(_BYTE *)(a1 + 34);
  v9 = *(_QWORD *)a1;
  v8 = *(unsigned int **)(a1 + 8);
  v16 = v9;
  LOBYTE(v9) = *(_BYTE *)(a1 + 33);
  v17 = v7;
  v18 = v9;
  v19 = 0;
  v20 = 0;
  v21 = 0;
  v22 = 0;
  v15 = 1;
  v14 = 0;
  v13 = 1;
  v12 = 0;
  v10 = sub_1C5D88238(v8, a2, a3, a4, &v14, &v12, (uint64_t)&v16, 0, a5);
  if ((_DWORD)v10)
  {
    sub_1C5C5B004(a1, a2);
    sub_1C5C5B32C((uint64_t *)a1, &v16);
  }
  if (v13 >= 0x41 && v12)
    MEMORY[0x1CAA32F9C](v12, 0x1000C8000313F17);
  if (v15 >= 0x41 && v14)
    MEMORY[0x1CAA32F9C](v14, 0x1000C8000313F17);
  return v10;
}

uint64_t sub_1C5CB5808(uint64_t *a1, uint64_t *a2, llvm *a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  unint64_t EVT;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  unsigned int ExtendedSizeInBits;
  const char *v14;
  unsigned int v15;
  unsigned int v16;
  const char *v17;
  unsigned int v18;
  llvm::EVT *v19;
  uint64_t v20;
  const char *v21;
  unsigned int v22;
  llvm::LLVMContext *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  llvm::LLVMContext *v27;
  llvm *v28;
  uint64_t v29;
  unsigned int v30;
  llvm *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t **v38;
  uint64_t **v39;
  unint64_t v40;
  uint64_t *v41;
  unsigned __int8 *v42;
  int v43;
  llvm *v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  void *v48;
  uint64_t v49;
  __int16 v50;
  unsigned int v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  void *v58;
  unint64_t v59;
  llvm::EVT *v60;
  uint64_t v61;
  const char *v62;
  unsigned int v63;
  llvm::LLVMContext *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  unsigned __int8 *v71;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  llvm *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t ExtendedIntegerVT;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned __int8 *v93;
  int v94;
  llvm *v95;
  uint64_t v96;
  llvm *v97;
  uint64_t v98;
  void *v99;
  uint64_t v100;
  _BYTE v101[48];
  void *v102[2];
  _DWORD v103[14];
  void *v104;
  uint64_t v105;
  _QWORD v106[17];

  v4 = a2;
  v106[16] = *MEMORY[0x1E0C80C00];
  v97 = a3;
  v98 = a4;
  v6 = a2[5];
  v8 = *(void **)v6;
  v7 = *(_QWORD *)(v6 + 8);
  v104 = v8;
  v105 = v7;
  if ((_BYTE)v8)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v104);
    v10 = 0;
    v11 = 0;
    v12 = v97;
  }
  else
  {
    v12 = a3;
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v7 + 24), 0, (BOOL)a3);
    v10 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  v95 = (llvm *)(v10 | EVT);
  v96 = v11;
  if (EVT == v12)
  {
    if ((_BYTE)EVT || v11 == v98)
      return (uint64_t)v4;
  }
  else if ((_BYTE)EVT)
  {
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v95);
    goto LABEL_11;
  }
  ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v95);
LABEL_11:
  v15 = ExtendedSizeInBits;
  if ((_DWORD)v14 == 1)
  if ((_BYTE)v97)
    v16 = sub_1C47A8C74((unsigned __int8 *)&v97);
  else
    v16 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v97);
  v18 = v16;
  if ((_DWORD)v17 == 1)
  if (v15 == v18)
  {
    v104 = v106;
    v105 = 0x800000000;
    if (*((_WORD *)v4 + 28))
    {
      v38 = (uint64_t **)v4[4];
      v39 = &v38[5 * *((unsigned __int16 *)v4 + 28)];
      do
      {
        v41 = *v38;
        v40 = (unint64_t)v38[1];
        v42 = (unsigned __int8 *)((*v38)[5] + 16 * v40);
        v43 = *v42;
        v44 = v95;
        if (v43 != v95 || ((v45 = *((_QWORD *)v42 + 1), !v43) ? (v46 = v45 == v96) : (v46 = 1), !v46))
        {
          v47 = *a1;
          v48 = (void *)v4[8];
          v102[0] = v48;
          if (v48)
          {
            llvm::MetadataTracking::track((uint64_t)v102, (unsigned __int8 *)v48, 2);
            v44 = v95;
          }
          LODWORD(v102[1]) = *((_DWORD *)v4 + 15);
          v49 = *(_QWORD *)(v47 + 832);
          if (v49)
            v50 = *(_WORD *)(v49 + 8);
          else
            v50 = 0;
          v41 = sub_1C5D52060(v47, 201, (const llvm::APInt *)v102, v44, v96, (uint64_t)v41, v40, v50);
          v52 = v51;
          if (v102[0])
            llvm::MetadataTracking::untrack((uint64_t)v102, (unsigned __int8 *)v102[0]);
          v40 = v40 & 0xFFFFFFFF00000000 | v52;
        }
        v53 = sub_1C6367DA8(*a1, (uint64_t)v97, v98, (uint64_t)v41, v40);
        v55 = v54;
        v56 = v105;
        if (v105 >= (unint64_t)HIDWORD(v105))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v104, (uint64_t)v106, v105 + 1, 16);
          v56 = v105;
        }
        v57 = (uint64_t *)((char *)v104 + 16 * v56);
        *v57 = v53;
        v57[1] = v55;
        LODWORD(v105) = v105 + 1;
        sub_1C5C5B004((uint64_t)a1, *((_QWORD *)v104 + 2 * v105 - 2));
        v38 += 5;
      }
      while (v38 != v39);
    }
    v27 = *(llvm::LLVMContext **)(*a1 + 56);
    v28 = v97;
    v29 = v98;
    *(_OWORD *)v102 = *(_OWORD *)v4[5];
    v30 = sub_1C612FE00((llvm::EVT *)v102, v17);
    v31 = (llvm *)sub_1C4816F98(v27, (uint64_t)v28, v29, v30, 0);
    v33 = v32;
    v34 = *a1;
    v35 = (void *)v4[8];
    v102[0] = v35;
    if (v35)
      llvm::MetadataTracking::track((uint64_t)v102, (unsigned __int8 *)v35, 2);
    LODWORD(v102[1]) = *((_DWORD *)v4 + 15);
    v36 = *(_QWORD *)(v34 + 832);
    if (v36)
      v37 = *(unsigned __int16 *)(v36 + 8);
    else
      v37 = 0;
    v4 = sub_1C636D0C8(v34, (const char *)0x92, (const llvm::APInt *)v102, v31, v33, (uint64_t *)v104, v105, v37);
    if (v102[0])
      llvm::MetadataTracking::untrack((uint64_t)v102, (unsigned __int8 *)v102[0]);
    v58 = v104;
    if (v104 != v106)
      goto LABEL_98;
    return (uint64_t)v4;
  }
  if ((_BYTE)v95)
  {
    if (((_BYTE)v95 + 104) < 0x13u
      || ((_BYTE)v95 - 8) < 7u
      || ((_BYTE)v95 - 75) < 0x2Du)
    {
      v19 = *(llvm::EVT **)(*a1 + 56);
      v20 = sub_1C47A8C74((unsigned __int8 *)&v95);
      goto LABEL_29;
    }
  }
  else
  {
    if ((*(_DWORD *)(v96 + 8) & 0xFE) == 0x12)
      v22 = *(unsigned __int8 *)(**(_QWORD **)(v96 + 16) + 8);
    else
      v22 = *(_DWORD *)(v96 + 8);
    if (v22 < 7)
    {
      v19 = *(llvm::EVT **)(*a1 + 56);
      v20 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v95);
LABEL_29:
      v23 = (llvm::LLVMContext *)v20;
      if ((_DWORD)v21 == 1)
      if ((int)v23 <= 31)
      {
        switch((_DWORD)v23)
        {
          case 1:
            v24 = 0;
            v25 = 0;
            v26 = 2;
            goto LABEL_70;
          case 0x10:
            v24 = 0;
            v25 = 0;
            v26 = 4;
            goto LABEL_70;
          case 8:
            v24 = 0;
            v25 = 0;
            v26 = 3;
            goto LABEL_70;
        }
      }
      else
      {
        switch((_DWORD)v23)
        {
          case 0x20:
            v24 = 0;
            v25 = 0;
            v26 = 5;
LABEL_70:
            v59 = v26 | v24;
            v4 = (uint64_t *)sub_1C5CB5808(a1, v4, v26 | v24, v25);
            v95 = (llvm *)v59;
            v96 = v25;
            goto LABEL_71;
          case 0x40:
            v24 = 0;
            v25 = 0;
            v26 = 6;
            goto LABEL_70;
          case 0x80:
            v24 = 0;
            v25 = 0;
            v26 = 7;
            goto LABEL_70;
        }
      }
      ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(v19, v23);
      v25 = v90;
      v24 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
      v26 = ExtendedIntegerVT;
      goto LABEL_70;
    }
  }
LABEL_71:
  if ((_BYTE)v97)
  {
    if (((_BYTE)v97 + 104) < 0x13u
      || ((_BYTE)v97 - 8) < 7u
      || ((_BYTE)v97 - 75) < 0x2Du)
    {
      v60 = *(llvm::EVT **)(*a1 + 56);
      v61 = sub_1C47A8C74((unsigned __int8 *)&v97);
      goto LABEL_81;
    }
  }
  else
  {
    if ((*(_DWORD *)(v98 + 8) & 0xFE) == 0x12)
      v63 = *(unsigned __int8 *)(**(_QWORD **)(v98 + 16) + 8);
    else
      v63 = *(_DWORD *)(v98 + 8);
    if (v63 < 7)
    {
      v60 = *(llvm::EVT **)(*a1 + 56);
      v61 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v97);
LABEL_81:
      v64 = (llvm::LLVMContext *)v61;
      if ((_DWORD)v62 == 1)
      if ((int)v64 <= 31)
      {
        switch((_DWORD)v64)
        {
          case 1:
            v65 = 0;
            v66 = 0;
            v67 = 2;
            goto LABEL_113;
          case 0x10:
            v65 = 0;
            v66 = 0;
            v67 = 4;
            goto LABEL_113;
          case 8:
            v65 = 0;
            v66 = 0;
            v67 = 3;
            goto LABEL_113;
        }
      }
      else
      {
        switch((_DWORD)v64)
        {
          case 0x20:
            v65 = 0;
            v66 = 0;
            v67 = 5;
LABEL_113:
            v78 = sub_1C5CB5808(a1, v4, v67 | v65, v66);
            return sub_1C5CB5808(a1, v78, v97, v98);
          case 0x40:
            v65 = 0;
            v66 = 0;
            v67 = 6;
            goto LABEL_113;
          case 0x80:
            v65 = 0;
            v66 = 0;
            v67 = 7;
            goto LABEL_113;
        }
      }
      v91 = llvm::EVT::getExtendedIntegerVT(v60, v64);
      v66 = v92;
      v65 = v91 & 0xFFFFFFFFFFFFFF00;
      v67 = v91;
      goto LABEL_113;
    }
  }
  v102[0] = v103;
  v102[1] = (void *)0x600000000;
  v103[12] = 0;
  v99 = v101;
  v100 = 0x300000000;
  if (sub_1C636912C((uint64_t)v4, *(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272) == 0, v18, (uint64_t)&v99, (uint64_t *)v102))
  {
    v71 = (unsigned __int8 *)v4[8];
    v93 = v71;
    if (v71)
      llvm::MetadataTracking::track((uint64_t)&v93, v71, 2);
    v94 = *((_DWORD *)v4 + 15);
    v104 = v106;
    v105 = 0x800000000;
    v72 = v100;
    if ((_DWORD)v100)
    {
      v80 = 0;
      v81 = 0;
      do
      {
        v82 = *a1;
        if (((*((_QWORD *)v102[0] + (v81 >> 6)) >> v81) & 1) != 0)
          v83 = (uint64_t)sub_1C61312D0(v82, v97, v98);
        else
          v83 = sub_1C63666FC(v82, (llvm::LLVMContext *)((char *)v99 + v80), (const llvm::APInt *)&v93, (uint64_t)v97, v98, 0, 0);
        v85 = v83;
        v86 = v84;
        v87 = v105;
        if (v105 >= (unint64_t)HIDWORD(v105))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v104, (uint64_t)v106, v105 + 1, 16);
          v87 = v105;
        }
        v88 = (uint64_t *)((char *)v104 + 16 * v87);
        *v88 = v85;
        v88[1] = v86;
        v73 = v105 + 1;
        LODWORD(v105) = v105 + 1;
        ++v81;
        v80 += 16;
      }
      while (v72 != v81);
    }
    else
    {
      v73 = 0;
    }
    v75 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(*a1 + 56), (uint64_t)v97, v98, v73, 0);
    v76 = *(_QWORD *)(*a1 + 832);
    if (v76)
      v77 = *(unsigned __int16 *)(v76 + 8);
    else
      v77 = 0;
    v4 = sub_1C636D0C8(*a1, (const char *)0x92, (const llvm::APInt *)&v93, v75, v74, (uint64_t *)v104, v105, v77);
    if (v104 != v106)
      free(v104);
    if (v93)
      llvm::MetadataTracking::untrack((uint64_t)&v93, v93);
  }
  else
  {
    v4 = 0;
  }
  v68 = (char *)v99;
  if ((_DWORD)v100)
  {
    v69 = 16 * v100;
    do
    {
      if (*(_DWORD *)&v68[v69 - 8] >= 0x41u)
      {
        v70 = *(_QWORD *)&v68[v69 - 16];
        if (v70)
          MEMORY[0x1CAA32F9C](v70, 0x1000C8000313F17);
      }
      v69 -= 16;
    }
    while (v69);
    v68 = (char *)v99;
  }
  if (v68 != v101)
    free(v68);
  v58 = v102[0];
  if (v102[0] != v103)
LABEL_98:
    free(v58);
  return (uint64_t)v4;
}

_QWORD *sub_1C5CB60C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  _QWORD *result;
  uint64_t v18;
  uint64_t v19;
  const char *v20;
  int v21;
  uint64_t v22;
  uint64_t v24;
  unsigned __int8 *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  int v35;
  _OWORD v36[2];
  __int128 v37;
  uint64_t v38;
  unsigned __int8 *v39;
  int v40;
  __int128 v41;
  char v42;

  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)v8;
  v10 = *(unsigned __int16 *)(*(_QWORD *)v8 + 24);
  if (v10 == 55)
  {
    v9 = *(_QWORD *)(*(_QWORD *)(v9 + 32) + 40 * *(unsigned int *)(v8 + 8));
    v10 = *(unsigned __int16 *)(v9 + 24);
  }
  if (v10 != 253)
    v9 = 0;
  v11 = *(_QWORD *)(v8 + 40);
  v12 = *(unsigned __int16 *)(v11 + 24);
  if (v12 == 55)
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v11 + 32) + 40 * *(unsigned int *)(v8 + 48));
    v12 = *(unsigned __int16 *)(v11 + 24);
  }
  if (v12 == 253)
    v13 = v11;
  else
    v13 = 0;
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272))
    v14 = v9;
  else
    v14 = v13;
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272))
    v15 = v13;
  else
    v15 = v9;
  if (v15)
    v16 = v14 == 0;
  else
    v16 = 1;
  if (v16)
    return 0;
  if (*(_WORD *)(v15 + 24) != 253)
    return 0;
  if ((*(_WORD *)(v15 + 26) & 0xC00) != 0)
    return 0;
  if (*(_WORD *)(v14 + 24) != 253)
    return 0;
  if ((*(_WORD *)(v14 + 26) & 0xC00) != 0)
    return 0;
  v18 = *(_QWORD *)(v15 + 48);
  if (!v18)
    return 0;
  if (*(_QWORD *)(v18 + 32))
    return 0;
  v19 = *(_QWORD *)(v14 + 48);
  if (!v19
    || *(_QWORD *)(v19 + 32)
    || *(_DWORD *)(*(_QWORD *)(v15 + 96) + 16) != *(_DWORD *)(*(_QWORD *)(v14 + 96) + 16))
  {
    return 0;
  }
  v42 = 0;
  v41 = *(_OWORD *)*(_QWORD *)(v15 + 40);
  v21 = sub_1C47C1C70((unsigned __int8 *)&v41);
  if ((_DWORD)v20 == 1)
  {
    v35 = v21;
    v21 = v35;
  }
  if (!*((_BYTE *)a1 + 33))
  {
LABEL_38:
    if (sub_1C5D63254(*a1, v14, v15, v21, 1))
    {
      if (llvm::TargetLoweringBase::allowsMemoryAccess(a1[1], *(_QWORD *)(*a1 + 56), *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, a3, a4, *(_QWORD *)(v15 + 96), (uint64_t)&v42)&& v42 != 0)
      {
        v24 = *a1;
        v25 = *(unsigned __int8 **)(a2 + 64);
        v39 = v25;
        if (v25)
          llvm::MetadataTracking::track((uint64_t)&v39, v25, 2);
        v40 = *(_DWORD *)(a2 + 60);
        v26 = *(uint64_t **)(v15 + 32);
        v27 = *v26;
        v28 = v26[1];
        v29 = v26[5];
        v30 = v26[6];
        v31 = *(_QWORD *)(v15 + 96);
        v32 = *(_QWORD *)(v31 + 8);
        v38 = *(_QWORD *)(v31 + 16);
        v33 = (63
                              - __clz(((1 << *(_BYTE *)(v31 + 34)) | v32) & -((1 << *(_BYTE *)(v31 + 34)) | v32))) | 0x100;
        v37 = *(_OWORD *)v31;
        memset(v36, 0, sizeof(v36));
        v34 = sub_1C63681B0(v24, a3, a4, (uint64_t)&v39, v27, v28, v29, v30, &v37, v33, SHIDWORD(v33), 0, (uint64_t)v36, 0);
        if (v39)
          llvm::MetadataTracking::untrack((uint64_t)&v39, v39);
        return v34;
      }
    }
    return 0;
  }
  if (!(_BYTE)a3)
    return 0;
  v22 = a1[1];
  if (a3 == 1 || (result = 0, *(_QWORD *)(v22 + 8 * a3 + 96)))
  {
    if (*(_BYTE *)(v22 + 390 * a3 + 4115))
      return 0;
    goto LABEL_38;
  }
  return result;
}

uint64_t *sub_1C5CB63B4(uint64_t *a1, uint64_t a2, unint64_t a3, __int16 a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t RecipEstimateSqrtEnabled;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  BOOL v21;
  unsigned int v22;
  __int16 v23;
  uint64_t v24;
  llvm *v25;
  unsigned __int8 *v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  llvm *v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t *v45;
  unsigned int v46;
  uint64_t v47;
  unsigned int v48;
  int v49;
  unsigned __int8 *v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t *v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t *v68;
  unsigned int v69;
  uint64_t v70;
  unsigned int v71;
  unsigned __int8 *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t **v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unsigned __int8 *v81;
  _BOOL4 v82;
  int v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t *v98;
  unint64_t v99;
  llvm *v100;
  uint64_t *v101;
  unsigned int v102;
  uint64_t v103;
  unsigned int v104;
  __int16 DenormalMode;
  char v106;
  unsigned int SqrtRefinementSteps;
  __int128 v108;
  unsigned __int8 *v109;
  int v110;

  if (*((_BYTE *)a1 + 32))
    return 0;
  v108 = *(_OWORD *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  if (sub_1C6131264((unsigned __int8 *)&v108, a2, a3) != 9
    && sub_1C6131264((unsigned __int8 *)&v108, v12, v13) != 10
    && sub_1C6131264((unsigned __int8 *)&v108, v14, v15) != 11)
  {
    return 0;
  }
  v16 = *(uint64_t **)(*a1 + 40);
  RecipEstimateSqrtEnabled = llvm::TargetLoweringBase::getRecipEstimateSqrtEnabled(a1[1], v108, *((uint64_t *)&v108 + 1), v16);
  if (!(_DWORD)RecipEstimateSqrtEnabled)
    return 0;
  v18 = RecipEstimateSqrtEnabled;
  SqrtRefinementSteps = 0;
  SqrtRefinementSteps = llvm::TargetLoweringBase::getSqrtRefinementSteps(a1[1], v108, *((uint64_t *)&v108 + 1), v16);
  v106 = 0;
  v5 = (uint64_t *)(*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unsigned int *, char *, uint64_t))(*(_QWORD *)a1[1] + 2112))(a1[1], a2, a3, *a1, v18, &SqrtRefinementSteps, &v106, a5);
  if (v5)
  {
    v20 = v19;
    sub_1C5C5B004((uint64_t)a1, (uint64_t)v5);
    v22 = SqrtRefinementSteps;
    if (SqrtRefinementSteps)
    {
      v23 = a4;
      v24 = *(_QWORD *)(a2 + 40) + 16 * a3;
      v25 = *(llvm **)v24;
      v103 = *(_QWORD *)(v24 + 8);
      v102 = SqrtRefinementSteps;
      v100 = *(llvm **)v24;
      if (v106)
      {
        v26 = *(unsigned __int8 **)(a2 + 64);
        v109 = v26;
        if (v26)
          llvm::MetadataTracking::track((uint64_t)&v109, v26, 2);
        v110 = *(_DWORD *)(a2 + 60);
        v27 = sub_1C5D404C4(*a1, (const llvm::APInt *)&v109, (_BOOL8)v25, v103, 0, 1.5);
        v95 = v28;
        v97 = (uint64_t)v27;
        v30 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v25, v103, (uint64_t)v27, v28, v29, a2, a3, a4);
        v31 = v25;
        v33 = v32;
        v91 = sub_1C5D56C70(*a1, 97, (const llvm::APInt *)&v109, v31, v103, (uint64_t)v30, v32, v34, a2, a3, a4);
        v93 = v33 & 0xFFFFFFFF00000000 | v35;
        v37 = v20;
        do
        {
          v38 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, (uint64_t)v5, v37, v36, (uint64_t)v5, v37, v23);
          v40 = v39;
          v42 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, (uint64_t)v91, v93, v41, (uint64_t)v38, v39, v23);
          v45 = sub_1C5D56C70(*a1, 97, (const llvm::APInt *)&v109, v100, v103, v97, v95, v44, (uint64_t)v42, v40 & 0xFFFFFFFF00000000 | v43, v23);
          v5 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, (uint64_t)v5, v37, v47, (uint64_t)v45, v40 & 0xFFFFFFFF00000000 | v46, v23);
          v37 = v37 & 0xFFFFFFFF00000000 | v48;
          --v22;
        }
        while (v22);
        if ((a5 & 1) == 0)
        {
          v5 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, (uint64_t)v5, v37, v36, a2, a3, v23);
          LODWORD(v37) = v49;
        }
      }
      else
      {
        v50 = *(unsigned __int8 **)(a2 + 64);
        v109 = v50;
        if (v50)
          llvm::MetadataTracking::track((uint64_t)&v109, v50, 2);
        v110 = *(_DWORD *)(a2 + 60);
        v51 = sub_1C5D404C4(*a1, (const llvm::APInt *)&v109, (_BOOL8)v25, v103, 0, -3.0);
        v92 = v52;
        v94 = (uint64_t)v51;
        v53 = sub_1C5D404C4(*a1, (const llvm::APInt *)&v109, (_BOOL8)v25, v103, 0, -0.5);
        v89 = v55;
        v90 = (uint64_t)v53;
        v56 = 0;
        v37 = v20;
        do
        {
          v57 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, a2, a3, v54, (uint64_t)v5, v37, a4);
          v96 = v58;
          v98 = v57;
          v60 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, (uint64_t)v57, v58, v59, (uint64_t)v5, v37, a4);
          v101 = sub_1C5D56C70(*a1, 96, (const llvm::APInt *)&v109, v100, v103, (uint64_t)v60, v61, v62, v94, v92, a4);
          v99 = v64;
          if (++v56 < v102)
            v65 = 1;
          else
            v65 = a5;
          if (v65)
            v66 = (uint64_t)v5;
          else
            v66 = (uint64_t)v98;
          if (v65)
            v67 = v37;
          else
            v67 = v96;
          v68 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, v66, v67, v63, v90, v89, a4);
          v5 = sub_1C5D56C70(*a1, 98, (const llvm::APInt *)&v109, v100, v103, (uint64_t)v68, v69, v70, (uint64_t)v101, v99, a4);
          v37 = v37 & 0xFFFFFFFF00000000 | v71;
        }
        while (v102 != v56);
      }
      if (v109)
        llvm::MetadataTracking::untrack((uint64_t)&v109, v109);
      v20 = v20 & 0xFFFFFFFF00000000 | v37;
    }
    if ((a5 & 1) == 0)
    {
      v72 = *(unsigned __int8 **)(a2 + 64);
      v109 = v72;
      if (v72)
        llvm::MetadataTracking::track((uint64_t)&v109, v72, 2);
      v110 = *(_DWORD *)(a2 + 60);
      v74 = *a1;
      v73 = a1[1];
      v75 = *(uint64_t ***)(*a1 + 40);
      sub_1C632993C(v108, *((uint64_t *)&v108 + 1), v21);
      DenormalMode = llvm::Function::getDenormalMode(*v75, v76);
      v77 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t, __int16 *))(*(_QWORD *)v73 + 2128))(v73, a2, a3, v74, &DenormalMode);
      v79 = v78;
      v80 = *a1;
      v81 = (unsigned __int8 *)(*(_QWORD *)(v77 + 40) + 16 * v78);
      if (*v81)
        v82 = *v81 - 15 < 0x9C;
      else
        v82 = (*(_DWORD *)(*((_QWORD *)v81 + 1) + 8) & 0xFE) == 18;
      if (v82)
        v83 = 191;
      else
        v83 = 190;
      v104 = v83;
      v84 = v108;
      v85 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t, uint64_t))(*(_QWORD *)a1[1] + 2136))(a1[1], a2, a3, v80);
      v88 = *(_QWORD *)(v80 + 832);
      if (v88)
        LOWORD(v88) = *(_WORD *)(v88 + 8);
      v5 = sub_1C5D58E08(v80, (const char *)v104, (const llvm::APInt *)&v109, (llvm *)v84, *((uint64_t *)&v84 + 1), v77, v79, v87, v85, v86, (uint64_t)v5, v20, SHIDWORD(v20), v88);
      if (v109)
        llvm::MetadataTracking::untrack((uint64_t)&v109, v109);
    }
  }
  return v5;
}

uint64_t *sub_1C5CB69A4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;
  llvm *v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v10;
  int v11;
  uint64_t *v12;
  unsigned int *v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unint64_t v16;
  uint64_t v17;
  __int16 v18;
  unsigned __int8 *v20;
  int v21;

  v3 = *(_QWORD *)(a1 + 40);
  v4 = *(llvm **)v3;
  v5 = *(_QWORD *)v3;
  if (!*(_QWORD *)v3)
    return (uint64_t *)*(_QWORD *)v3;
  v8 = *(_QWORD *)(v3 + 8);
  if (*(_QWORD *)v3 != 1 && (!*(_QWORD *)v3 || *(_QWORD *)(a3 + 8 * v5 + 96) == 0))
    return 0;
  if (*(_BYTE *)(a3 + 390 * *(_QWORD *)v3 + 4098) || (*(_WORD *)(*a2 + 1020) & 0x10) == 0)
    return 0;
  v10 = **(_QWORD **)(a1 + 32);
  v11 = *(unsigned __int16 *)(a1 + 24);
  if (v11 == 203)
  {
    if (*(_WORD *)(v10 + 24) != 209)
      return 0;
  }
  else if (v11 != 202 || *(_WORD *)(v10 + 24) != 208)
  {
    return 0;
  }
  v13 = *(unsigned int **)(v10 + 32);
  v14 = *(_QWORD *)v13;
  if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v13 + 40) + 16 * v13[2]) != (_DWORD)v5)
    return 0;
  v15 = *(unsigned __int8 **)(a1 + 64);
  v20 = v15;
  if (v15)
  {
    llvm::MetadataTracking::track((uint64_t)&v20, v15, 2);
    v13 = *(unsigned int **)(v10 + 32);
    v14 = *(_QWORD *)v13;
  }
  v21 = *(_DWORD *)(a1 + 60);
  v16 = *((_QWORD *)v13 + 1);
  v17 = a2[104];
  if (v17)
    v18 = *(_WORD *)(v17 + 8);
  else
    v18 = 0;
  v12 = sub_1C5D52060((uint64_t)a2, 236, (const llvm::APInt *)&v20, v4, v8, v14, v16, v18);
  if (v20)
    llvm::MetadataTracking::untrack((uint64_t)&v20, v20);
  return v12;
}

uint64_t sub_1C5CB6B14(uint64_t a1, uint64_t a2, BOOL a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t *v7;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  BOOL v17;
  BOOL v18;
  unsigned int v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  llvm::Type *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  BOOL v27;
  uint64_t v29;
  unsigned __int8 *v30;
  llvm *v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  uint64_t v35;
  uint64_t v36;
  llvm::Type *v37;
  uint64_t v38;
  BOOL v39;
  unsigned __int8 *v40;
  uint64_t v41;
  unsigned __int8 *v42;
  int v43;
  __int128 v44;
  __int128 v45;

  v3 = *(uint64_t **)(a1 + 32);
  v4 = *v3;
  v5 = *((unsigned int *)v3 + 2);
  v45 = *(_OWORD *)*(_QWORD *)(a1 + 40);
  v6 = *(unsigned __int16 *)(v4 + 24);
  if ((v6 & 0xFFFE) != 0xCA)
    return 0;
  v11 = *(uint64_t **)(v4 + 32);
  v13 = *v11;
  v12 = v11[1];
  v44 = *(_OWORD *)(*(_QWORD *)(*v11 + 40) + 16 * v12);
  v14 = *(unsigned __int16 *)(a1 + 24);
  v15 = sub_1C6131328((unsigned __int8 *)&v44, a2, a3) - (v6 == 202);
  v19 = sub_1C6131328((unsigned __int8 *)&v45, v16, v17) - (v14 == 208);
  if (v19 < v15)
    v15 = v19;
  sub_1C632993C(*(_QWORD *)(*(_QWORD *)(v4 + 40) + 16 * v5), *(_QWORD *)(*(_QWORD *)(v4 + 40) + 16 * v5 + 8), v18);
  if (*(_DWORD *)(v22 + 8) < v15)
    return 0;
  v23 = sub_1C6131328((unsigned __int8 *)&v45, v20, v21);
  if (v23 <= sub_1C6131328((unsigned __int8 *)&v44, v24, v25))
  {
    v37 = sub_1C6131328((unsigned __int8 *)&v45, v26, v27);
    if (v37 >= sub_1C6131328((unsigned __int8 *)&v44, v38, v39))
      return sub_1C6367DA8(a2, v45, *((uint64_t *)&v45 + 1), v13, v12);
    v40 = *(unsigned __int8 **)(a1 + 64);
    v42 = v40;
    if (v40)
      llvm::MetadataTracking::track((uint64_t)&v42, v40, 2);
    v43 = *(_DWORD *)(a1 + 60);
    v32 = *((_QWORD *)&v45 + 1);
    v31 = (llvm *)v45;
    v41 = *(_QWORD *)(a2 + 832);
    if (v41)
      v34 = *(_WORD *)(v41 + 8);
    else
      v34 = 0;
    v35 = a2;
    v36 = 201;
  }
  else
  {
    if (v14 == 208 && v6 == 202)
      v29 = 198;
    else
      v29 = 199;
    v30 = *(unsigned __int8 **)(a1 + 64);
    v42 = v30;
    if (v30)
      llvm::MetadataTracking::track((uint64_t)&v42, v30, 2);
    v43 = *(_DWORD *)(a1 + 60);
    v32 = *((_QWORD *)&v45 + 1);
    v31 = (llvm *)v45;
    v33 = *(_QWORD *)(a2 + 832);
    if (v33)
      v34 = *(_WORD *)(v33 + 8);
    else
      v34 = 0;
    v35 = a2;
    v36 = v29;
  }
  v7 = sub_1C5D52060(v35, v36, (const llvm::APInt *)&v42, v31, v32, v13, v12, v34);
  if (v42)
    llvm::MetadataTracking::untrack((uint64_t)&v42, v42);
  return (uint64_t)v7;
}

uint64_t sub_1C5CB6D14(uint64_t a1, uint64_t a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  BOOL v21;
  char v22;
  unsigned __int8 *v24;
  unsigned int v25;
  const char *v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned __int8 *v30;
  unint64_t v31;
  void *v32;
  unsigned int v33;
  unsigned int v34;
  unsigned __int8 *v35;
  unint64_t v36;
  void *v37;
  uint64_t ExtendedSizeInBits;
  const char *v39;
  llvm::APInt *v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  uint64_t v44;
  llvm *v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unsigned int v52;
  unint64_t v53;
  void *v54;
  unsigned int v55;
  void *v56;
  unsigned int v57;
  unint64_t v58;
  unsigned int v59;
  void *__src;
  unsigned int v61;
  llvm *v62;
  uint64_t v63;
  __int128 v64;

  v3 = *(uint64_t **)(a2 + 40);
  v64 = *(_OWORD *)*(_QWORD *)(a2 + 32);
  v4 = *v3;
  v5 = v3[1];
  v6 = *(unsigned __int16 *)(a2 + 24);
  v7 = **(_QWORD **)(a1 + 8);
  if (v6 == 223)
    v8 = *(uint64_t (**)(void))(v7 + 1328);
  else
    v8 = *(uint64_t (**)(void))(v7 + 1320);
  if ((v8() & 1) != 0)
    return 0;
  if (*(_WORD *)(v64 + 24) != 216)
    return 0;
  v11 = *(_QWORD *)(v64 + 48);
  if (!v11)
    return 0;
  v12 = 1;
  do
  {
    if (*(_DWORD *)(v11 + 8) == DWORD2(v64))
    {
      if (!v12)
        return 0;
      --v12;
    }
    v11 = *(_QWORD *)(v11 + 32);
  }
  while (v11);
  if (v12)
    return 0;
  v15 = *(uint64_t **)(v64 + 32);
  v17 = *v15;
  v16 = v15[1];
  v18 = (uint64_t *)(*(_QWORD *)(*v15 + 40) + 16 * v16);
  v19 = v18[1];
  v62 = (llvm *)*v18;
  v63 = v19;
  if ((_BYTE)v62)
  {
    v21 = v62 - 8 < 0xFFFFFFFA && v62 - 75 < 0xFFFFFFC4;
    v13 = 0;
    if (v62 - 15 < 0x9C || v21)
      return v13;
  }
  else
  {
    v22 = *(_DWORD *)(v19 + 8);
    if ((v22 & 0xFE) == 0x12 || v22 != 13)
      return 0;
  }
  v61 = 1;
  __src = 0;
  v24 = (unsigned __int8 *)(*(_QWORD *)(v64 + 40) + 16 * DWORD2(v64));
  if (*v24)
  {
    if (*v24 - 15 >= 0x9C)
      goto LABEL_32;
LABEL_35:
    v27 = sub_1C6329368((unsigned int *)&v64, v9, v10);
    v28 = v27;
    v59 = v27;
    if (v27 > 0x40)
    {
      v30 = (unsigned __int8 *)&v58;
      llvm::APInt::initSlowCase((llvm::APInt *)&v58, 0, 0);
      v29 = v28 - 1;
      if (v59 >= 0x41)
        v30 = (unsigned __int8 *)(v58 + 8 * (v29 >> 6));
      v28 = v59;
    }
    else
    {
      v58 = 0;
      LOBYTE(v29) = v27 - 1;
      v30 = (unsigned __int8 *)&v58;
    }
    *(_QWORD *)v30 |= 1 << v29;
    if (v61 >= 0x41 && __src)
      MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
    __src = (void *)v58;
    v61 = v28;
    if (v6 == 223)
    {
      v57 = v28;
      if (v28 > 0x40)
      {
        v56 = (void *)operator new[]();
        memcpy(v56, __src, (((unint64_t)v28 + 63) >> 3) & 0x3FFFFFF8);
        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v56);
        v28 = v57;
        v32 = v56;
        if (v61 > 0x40 && __src)
          MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
      }
      else
      {
        if (v28)
          v31 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v28;
        else
          v31 = 0;
        v32 = (void *)(v31 & ~v58);
      }
      __src = v32;
      v61 = v28;
    }
    if ((_BYTE)v62)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v62);
    else
      ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v62);
    v40 = (llvm::APInt *)ExtendedSizeInBits;
    if ((_DWORD)v39 == 1)
    llvm::APInt::getSplat(v40, (llvm::APInt *)&__src, (uint64_t)&v58);
    if (v61 >= 0x41 && __src)
      MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
    __src = (void *)v58;
    v61 = v59;
    goto LABEL_75;
  }
  if ((*(_DWORD *)(*((_QWORD *)v24 + 1) + 8) & 0xFE) == 0x12)
    goto LABEL_35;
LABEL_32:
  if ((_BYTE)v62)
    v25 = sub_1C47A8C74((unsigned __int8 *)&v62);
  else
    v25 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v62);
  v33 = v25;
  if ((_DWORD)v26 == 1)
  v59 = v33;
  if (v33 > 0x40)
  {
    v35 = (unsigned __int8 *)&v58;
    llvm::APInt::initSlowCase((llvm::APInt *)&v58, 0, 0);
    v34 = v33 - 1;
    if (v59 >= 0x41)
      v35 = (unsigned __int8 *)(v58 + 8 * (v34 >> 6));
    v33 = v59;
  }
  else
  {
    v58 = 0;
    LOBYTE(v34) = v33 - 1;
    v35 = (unsigned __int8 *)&v58;
  }
  *(_QWORD *)v35 |= 1 << v34;
  if (v61 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  __src = (void *)v58;
  v61 = v33;
  if (v6 == 223)
  {
    v55 = v33;
    if (v33 > 0x40)
    {
      v54 = (void *)operator new[]();
      memcpy(v54, __src, (((unint64_t)v33 + 63) >> 3) & 0x3FFFFFF8);
      llvm::APInt::flipAllBitsSlowCase((uint64_t)&v54);
      v33 = v55;
      v37 = v54;
      if (v61 > 0x40 && __src)
        MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
    }
    else
    {
      if (v33)
        v36 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v33;
      else
        v36 = 0;
      v37 = (void *)(v36 & ~v58);
    }
    __src = v37;
    v61 = v33;
  }
LABEL_75:
  v41 = v64;
  v42 = *(unsigned __int8 **)(v64 + 64);
  v58 = (unint64_t)v42;
  if (v42)
    llvm::MetadataTracking::track((uint64_t)&v58, v42, 2);
  v59 = *(_DWORD *)(v41 + 60);
  v43 = *(_QWORD *)a1;
  if (v6 == 223)
    v44 = 171;
  else
    v44 = 173;
  v45 = v62;
  v46 = v63;
  v47 = sub_1C63666FC(*(_QWORD *)a1, (llvm::LLVMContext *)&__src, (const llvm::APInt *)&v58, (uint64_t)v62, v63, 0, 0);
  v50 = *(_QWORD *)(v43 + 832);
  if (v50)
    LOWORD(v50) = *(_WORD *)(v50 + 8);
  v51 = sub_1C5D56C70(v43, v44, (const llvm::APInt *)&v58, v45, v46, v17, v16, v49, v47, v48, v50);
  v53 = v16 & 0xFFFFFFFF00000000 | v52;
  sub_1C5C5B004(a1, (uint64_t)v51);
  v13 = sub_1C6367DA8(*(_QWORD *)a1, v4, v5, (uint64_t)v51, v53);
  if (v58)
    llvm::MetadataTracking::untrack((uint64_t)&v58, (unsigned __int8 *)v58);
  if (v61 >= 0x41 && __src)
    MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  return v13;
}

uint64_t *sub_1C5CB72E0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __int16 v10;
  _QWORD *v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t *v24;
  unsigned __int8 *v26;
  int v27;

  v10 = *(_WORD *)(a2 + 26);
  v11 = *(_QWORD **)(a2 + 32);
  v12 = v11[5];
  v13 = v11[6];
  v14 = (_QWORD *)v11[10];
  v15 = v11[11];
  if (*((_WORD *)v14 + 12) == 35)
  {
    v16 = *a1;
    v17 = v14[10];
    v18 = (unsigned __int8 *)v14[8];
    v26 = v18;
    if (v18)
      llvm::MetadataTracking::track((uint64_t)&v26, v18, 2);
    v27 = *((_DWORD *)v14 + 15);
    v14 = sub_1C5D3FAF8(v16, v17, (const llvm::APInt *)&v26, *(llvm **)v14[5], *(_QWORD *)(v14[5] + 8), 0, 0);
    v15 = v15 & 0xFFFFFFFF00000000 | v19;
    if (v26)
      llvm::MetadataTracking::untrack((uint64_t)&v26, v26);
  }
  if ((v10 & 0x280) == 0x80)
    v20 = 56;
  else
    v20 = 57;
  v21 = *a1;
  v22 = *(unsigned __int8 **)(a2 + 64);
  v26 = v22;
  if (v22)
    llvm::MetadataTracking::track((uint64_t)&v26, v22, 2);
  v27 = *(_DWORD *)(a2 + 60);
  v23 = *(_QWORD *)(v21 + 832);
  if (v23)
    LOWORD(v23) = *(_WORD *)(v23 + 8);
  v24 = sub_1C5D56C70(v21, v20, (const llvm::APInt *)&v26, (llvm *)*(unsigned __int8 *)(*(_QWORD *)(v12 + 40) + 16 * v13), 0, v12, v13, a8, (uint64_t)v14, v15, v23);
  if (v26)
    llvm::MetadataTracking::untrack((uint64_t)&v26, v26);
  return v24;
}

uint64_t *sub_1C5CB743C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t *v5;
  BOOL v8;
  unsigned int v9;
  unsigned int v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  unsigned int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  __int128 v20;
  BOOL v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t **v30;
  uint64_t v31;
  unsigned __int8 *v32;
  __int128 v34;
  BOOL v35;
  unsigned __int8 *v36;
  unsigned __int8 *v37;
  uint64_t v38;
  int v39;
  _BYTE v40[128];
  void *v41;
  uint64_t v42;
  _BYTE v43[128];
  _OWORD *v44;
  unsigned int v45;
  unsigned int v46;
  _QWORD v47[18];

  v5 = a3;
  v47[16] = *MEMORY[0x1E0C80C00];
  if (!*(_DWORD *)(a1 + 28))
    return v5;
  v8 = 0;
  v41 = v43;
  v42 = 0x800000000;
  v44 = v47;
  v46 = 8;
  v36 = v40;
  v37 = v40;
  v38 = 16;
  v39 = 0;
  if (*(_WORD *)(a2 + 24) == 253)
    v8 = (*(_WORD *)(*(_QWORD *)(a2 + 96) + 36) & 0xF00) == 0 && (*(_BYTE *)(a2 + 26) & 8) == 0;
  v35 = v8;
  v9 = 0;
  v47[0] = a3;
  v47[1] = a4;
  v10 = 1;
  v45 = 1;
  while (1)
  {
    v11 = (char *)&v44[v10];
    v13 = *((_QWORD *)v11 - 2);
    v12 = *((_QWORD *)v11 - 1);
    v45 = v10 - 1;
    sub_1C4774094((llvm::SmallPtrSetImplBase *)&v36, v13);
    if (v14)
      break;
LABEL_38:
    v10 = v45;
    if (!v45)
      goto LABEL_43;
  }
  if (v9 <= *(_DWORD *)(*(_QWORD *)(a1 + 8) + 184248))
  {
    v15 = *(unsigned __int16 *)(v13 + 24);
    if (v15 <= 0xFC)
    {
      if (v15 == 1)
      {
LABEL_37:
        ++v9;
        goto LABEL_38;
      }
      if (v15 == 2)
      {
        v16 = *(unsigned __int16 *)(v13 + 56);
        if (v16 > 0x10)
          goto LABEL_30;
        if (*(_WORD *)(v13 + 56))
        {
          v17 = v45;
          v18 = v16 - 1;
          do
          {
            v19 = v18;
            v20 = *(_OWORD *)(*(_QWORD *)(v13 + 32) + 40 * v18);
            if (v17 >= v46)
            {
              v34 = *(_OWORD *)(*(_QWORD *)(v13 + 32) + 40 * v18);
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v44, (uint64_t)v47, v17 + 1, 16);
              v20 = v34;
              v17 = v45;
            }
            v44[v17] = v20;
            v17 = ++v45;
            --v18;
          }
          while (v19);
        }
        goto LABEL_37;
      }
      if (v15 != 50)
        goto LABEL_30;
LABEL_33:
      v24 = *(uint64_t **)(v13 + 32);
      v25 = *v24;
      if (*v24)
      {
        v26 = *((unsigned int *)v24 + 2);
        v27 = v45;
        if (v45 >= (unint64_t)v46)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v44, (uint64_t)v47, v45 + 1, 16);
          v27 = v45;
        }
        v28 = &v44[v27];
        *v28 = v25;
        v28[1] = v12 & 0xFFFFFFFF00000000 | v26;
        ++v45;
      }
      goto LABEL_37;
    }
    if (v15 - 312 >= 2)
    {
      if (v15 == 253)
      {
        if ((*(_WORD *)(*(_QWORD *)(v13 + 96) + 36) & 0xF00) == 0)
        {
          v21 = v35;
          if ((*(_BYTE *)(v13 + 26) & 8) != 0)
            v21 = 0;
          if (v21)
            goto LABEL_33;
        }
      }
      else if (v15 != 254)
      {
        goto LABEL_30;
      }
    }
    if (sub_1C5CB89D8((uint64_t *)a1, a2, v13))
    {
LABEL_30:
      v22 = v42;
      if (v42 >= (unint64_t)HIDWORD(v42))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v41, (uint64_t)v43, v42 + 1, 16);
        v22 = v42;
      }
      v23 = (uint64_t *)((char *)v41 + 16 * v22);
      *v23 = v13;
      v23[1] = v12;
      LODWORD(v42) = v42 + 1;
      goto LABEL_38;
    }
    goto LABEL_33;
  }
  LODWORD(v42) = 0;
  if (HIDWORD(v42))
  {
    v29 = 0;
  }
  else
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v41, (uint64_t)v43, 1uLL, 16);
    v29 = v42;
  }
  v30 = (uint64_t **)((char *)v41 + 16 * v29);
  *v30 = v5;
  v30[1] = a4;
  LODWORD(v42) = v42 + 1;
LABEL_43:
  if (v37 != v36)
    free(v37);
  if (v44 != (_OWORD *)v47)
    free(v44);
  if ((_DWORD)v42 == 1)
  {
    v5 = *(uint64_t **)v41;
  }
  else if ((_DWORD)v42)
  {
    v31 = *(_QWORD *)a1;
    v32 = *(unsigned __int8 **)(a2 + 64);
    v36 = v32;
    if (v32)
      llvm::MetadataTracking::track((uint64_t)&v36, v32, 2);
    LODWORD(v37) = *(_DWORD *)(a2 + 60);
    v5 = sub_1C5D63E30(v31, (const llvm::APInt *)&v36, (uint64_t)&v41);
    if (v36)
      llvm::MetadataTracking::untrack((uint64_t)&v36, v36);
  }
  else
  {
    v5 = (uint64_t *)(*(_QWORD *)a1 + 112);
  }
  if (v41 != v43)
    free(v41);
  return v5;
}

uint64_t sub_1C5CB7840(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int v8;
  _BOOL4 v9;
  unsigned __int16 *v10;
  unsigned int v11;
  int v12;
  uint64_t i;
  uint64_t v14;
  uint64_t v15;
  unsigned int *v16;
  int v17;
  BOOL v18;
  unsigned __int8 *v19;
  int v20;
  unsigned __int8 *v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  _QWORD *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t j;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  _BOOL4 v45;
  int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  const void *v54;
  unint64_t v55;
  void *v56;
  int v57;
  unint64_t v58;
  void *v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t *v62;
  void *v63;
  uint64_t v64;
  uint64_t *v65;
  unint64_t v66;
  unint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  _BOOL4 v71;
  unint64_t v72;
  unint64_t *v73;
  uint64_t v74;
  unint64_t *v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  _BOOL4 v79;
  unint64_t v80;
  unsigned int v81;
  uint64_t v82;
  unsigned __int8 *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  llvm *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  int v92;
  __n128 v93;
  unsigned __int8 *v94;
  unsigned __int8 *v95;
  unsigned __int8 *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  unsigned int v100;
  uint64_t v101;
  unint64_t v102;
  unsigned __int8 *v103;
  int v104;
  void *v105;
  unsigned int v106;
  __int128 v107;
  uint64_t v108;
  uint64_t *v109;
  __int128 v110;
  uint64_t v111;
  int v112;
  _BYTE v113[260];
  int v114;
  unsigned __int16 *v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  unsigned __int8 v121;
  void *__src[2];
  void *v123;
  uint64_t v124;
  _BYTE v125[128];
  void *v126[2];
  _QWORD v127[19];

  v127[16] = *MEMORY[0x1E0C80C00];
  if (*((int *)a1 + 6) < 3)
    return 0;
  v121 = 1;
  v120 = 0;
  v118 = 0;
  LODWORD(v119) = 0;
  v2 = 0;
  if (!sub_1C5CB8E4C(a2, 1u, 2u, &v121, &v120, (uint64_t)&v118, a1[1]))
    return v2;
  v5 = v118;
  if ((*(_WORD *)(v118 + 24) & 0xFFFE) != 0x38)
    return 0;
  v6 = *(_QWORD *)(v118 + 48);
  if (v6)
  {
    if (!*(_QWORD *)(v6 + 32))
      return 0;
  }
  *(_QWORD *)&v117 = 0;
  DWORD2(v117) = 0;
  v115 = 0;
  LODWORD(v116) = 0;
  v114 = 0;
  v2 = 0;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, __int128 *, unsigned __int16 **, int *, uint64_t))(*(_QWORD *)a1[1] + 1528))(a1[1], a2, &v117, &v115, &v114, *a1))return v2;
  v8 = *(unsigned __int16 *)(v117 + 24);
  v9 = v8 == 35 || v8 == 11;
  if (v8 == 35 || v8 == 11)
  {
    v110 = v117;
    DWORD2(v117) = v116;
    *(_QWORD *)&v117 = v115;
    v115 = (unsigned __int16 *)v110;
    LODWORD(v116) = DWORD2(v110);
  }
  v10 = v115;
  if (sub_1C6368AD4((uint64_t)v115))
    return 0;
  v11 = *(unsigned __int16 *)(v117 + 24);
  if (v11 <= 0x27 && ((1 << v11) & 0x8000008200) != 0)
    return 0;
  v102 = v121;
  if (!v121)
  {
    v26 = *(_QWORD *)(a2 + 32);
    v27 = *(_QWORD *)(v26 + 40);
    v28 = *(_DWORD *)(v26 + 48);
    if ((v27 != (_QWORD)v117 || v28 != DWORD2(v117))
      && (v27 != v5 || v28 != (_DWORD)v119)
      && (sub_1C636F90C(v27, v5) & 1) == 0)
    {
      v10 = v115;
      goto LABEL_19;
    }
    return 0;
  }
LABEL_19:
  *(_QWORD *)&v110 = v113;
  *((_QWORD *)&v110 + 1) = v113;
  v111 = 32;
  v112 = 0;
  v126[0] = v127;
  v127[0] = a2;
  v126[1] = (void *)0x1000000001;
  v123 = v125;
  v124 = 0x1000000000;
  v12 = v10[12];
  if (v12 == 35 || v12 == 11)
  {
    for (i = *(_QWORD *)(v117 + 48); i; i = *(_QWORD *)(i + 32))
    {
      v14 = *(_QWORD *)(i + 16);
      if (v14 != v5
        && *(_QWORD *)i == (_QWORD)v117
        && *(_DWORD *)(i + 8) == DWORD2(v117)
        && (sub_1C5CB0A7C(v14, (uint64_t)&v110, (unsigned int *)v126, 0, 0) & 1) == 0)
      {
        v15 = *(_QWORD *)(i + 16);
        if ((*(_WORD *)(v15 + 24) & 0xFFFE) != 0x38)
          goto LABEL_49;
        v16 = (unsigned int *)(*(_QWORD *)(v15 + 32)
                             + 40 * ((((_DWORD)i - *(_QWORD *)(v15 + 32)) & 8) == 0));
        v17 = *(unsigned __int16 *)(*(_QWORD *)v16 + 24);
        v18 = v17 == 35 || v17 == 11;
        if (!v18
          || (v19 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v16 + 40) + 16 * v16[2]),
              v20 = *v19,
              v21 = (unsigned __int8 *)(*((_QWORD *)v115 + 5) + 16 * v116),
              v20 != *v21)
          || ((v22 = *((_QWORD *)v21 + 1), v23 = *((_QWORD *)v19 + 1), !v20) ? (v24 = v23 == v22) : (v24 = 1), !v24))
        {
LABEL_49:
          LODWORD(v124) = 0;
          break;
        }
        v25 = v124;
        if (v124 >= (unint64_t)HIDWORD(v124))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v123, (uint64_t)v125, v124 + 1, 8);
          v25 = v124;
        }
        *((_QWORD *)v123 + v25) = v15;
        LODWORD(v124) = v124 + 1;
      }
    }
  }
  if (v8 == 35 || v8 == 11)
  {
    v107 = v117;
    DWORD2(v117) = v116;
    *(_QWORD *)&v117 = v115;
    v115 = (unsigned __int16 *)v107;
    LODWORD(v116) = DWORD2(v107);
  }
  v2 = *(_QWORD *)(v5 + 48);
  if (v2)
  {
    v29 = 0;
    do
    {
      v30 = *(_QWORD *)(v2 + 16);
      if (v30 != a2)
      {
        if ((sub_1C5CB0A7C(*(_QWORD *)(v2 + 16), (uint64_t)&v110, (unsigned int *)v126, 0, 0) & 1) != 0)
          goto LABEL_69;
        v29 |= sub_1C5CB9080(v5, v30, *(_QWORD *)(*a1 + 40), *(llvm::LLVMContext **)(*a1 + 56), a1[1]) ^ 1;
      }
      v2 = *(_QWORD *)(v2 + 32);
    }
    while (v2);
    if ((v29 & 1) != 0)
    {
      v31 = *a1;
      if (v120)
      {
        if ((_DWORD)v102)
        {
          v96 = *(unsigned __int8 **)(a2 + 64);
          *(_QWORD *)&v107 = v96;
          if (v96)
            llvm::MetadataTracking::track((uint64_t)&v107, v96, 2);
          DWORD2(v107) = *(_DWORD *)(a2 + 60);
          v33 = sub_1C636C83C(v31, a2, 0, (uint64_t)&v107, v117, DWORD2(v117), (uint64_t)v115, v116, v114);
        }
        else
        {
          v94 = *(unsigned __int8 **)(a2 + 64);
          *(_QWORD *)&v107 = v94;
          if (v94)
            llvm::MetadataTracking::track((uint64_t)&v107, v94, 2);
          DWORD2(v107) = *(_DWORD *)(a2 + 60);
          v33 = sub_1C636CA20(v31, a2, 0, (uint64_t)&v107, v117, DWORD2(v117), (uint64_t)v115, v116, v114);
        }
      }
      else if ((_DWORD)v102)
      {
        v95 = *(unsigned __int8 **)(a2 + 64);
        *(_QWORD *)&v107 = v95;
        if (v95)
          llvm::MetadataTracking::track((uint64_t)&v107, v95, 2);
        DWORD2(v107) = *(_DWORD *)(a2 + 60);
        v33 = sub_1C636B664(v31, a2, 0, (uint64_t)&v107, v117, *((uint64_t *)&v117 + 1), (uint64_t)v115, v116, v114);
      }
      else
      {
        v32 = *(unsigned __int8 **)(a2 + 64);
        *(_QWORD *)&v107 = v32;
        if (v32)
          llvm::MetadataTracking::track((uint64_t)&v107, v32, 2);
        DWORD2(v107) = *(_DWORD *)(a2 + 60);
        v33 = sub_1C5D5E02C(v31, a2, 0, (uint64_t)&v107, v117, DWORD2(v117), (uint64_t)v115, v116, v114);
      }
      v101 = (uint64_t)v33;
      if ((_QWORD)v107)
        llvm::MetadataTracking::untrack((uint64_t)&v107, (unsigned __int8 *)v107);
      v34 = 0;
      v35 = *a1;
      v36 = *(_QWORD *)(*a1 + 656);
      *(_QWORD *)(v35 + 656) = &v107;
      *(_QWORD *)&v107 = &off_1E8197EE8;
      *((_QWORD *)&v107 + 1) = v36;
      v108 = v35;
      v109 = a1;
      if ((_DWORD)v102)
      {
        sub_1C5D6146C(v35, a2, 0, v101, 0);
        v35 = *a1;
        v37 = a2;
        v34 = 1;
        v38 = v101;
        v39 = 2;
      }
      else
      {
        v37 = a2;
        v38 = v101;
        v39 = 1;
      }
      sub_1C5D6146C(v35, v37, v34, v38, v39);
      sub_1C5C5B9D4(a1, a2);
      if (v8 == 35 || v8 == 11)
      {
        *(_OWORD *)__src = v117;
        DWORD2(v117) = v116;
        *(_QWORD *)&v117 = v115;
        v115 = (unsigned __int16 *)__src[0];
        LODWORD(v116) = __src[1];
      }
      v97 = v124;
      if ((_DWORD)v124)
      {
        for (j = 0; j != v97; ++j)
        {
          v41 = *((_QWORD *)v123 + j);
          v42 = *(_QWORD *)(v41 + 32);
          v99 = *(_QWORD *)(v42 + 40 * (*(_QWORD *)(v42 + 40) != (_QWORD)v117));
          v43 = *(_QWORD *)(v99 + 80);
          v98 = *((_QWORD *)v115 + 10);
          v44 = *(unsigned __int16 *)(v41 + 24);
          v45 = v44 == 57 && *(_QWORD *)(v42 + 40) != (_QWORD)v117;
          if (v44 != 57 || *(_QWORD *)(v42 + 40) != (_QWORD)v117)
            v47 = 1;
          else
            v47 = -1;
          v48 = v114 == 2 && !v9;
          if (v9 && v114 == 2)
            v49 = -1;
          else
            v49 = 1;
          if (v49 * v47 >= 0)
            v50 = 56;
          else
            v50 = 57;
          v100 = v50;
          v51 = *(_DWORD *)(v43 + 32);
          LODWORD(__src[1]) = v51;
          if (v51 > 0x40)
          {
            v52 = operator new[]();
            __src[0] = (void *)v52;
            v54 = *(const void **)(v43 + 24);
            v53 = __src[1];
            memcpy((void *)v52, v54, (((unint64_t)LODWORD(__src[1]) + 63) >> 3) & 0x3FFFFFF8);
          }
          else
          {
            v52 = *(_QWORD *)(v43 + 24);
            __src[0] = (void *)v52;
            v53 = v51;
          }
          if (v45)
          {
            v106 = v53;
            if (v53 >= 0x41
              && (v52 = operator new[](),
                  v105 = (void *)v52,
                  v53 = v106,
                  memcpy((void *)v52, __src[0], (((unint64_t)v106 + 63) >> 3) & 0x3FFFFFF8),
                  v53 > 0x40))
            {
              llvm::APInt::flipAllBitsSlowCase((uint64_t)&v105);
            }
            else
            {
              v55 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v53;
              if (!v53)
                v55 = 0;
              v105 = (void *)(v55 & ~v52);
            }
            llvm::APInt::operator++((uint64_t)&v105);
            v53 = v106;
            v56 = v105;
            v106 = 0;
            if (LODWORD(__src[1]) > 0x40 && __src[0])
            {
              MEMORY[0x1CAA32F9C](__src[0], 0x1000C8000313F17);
              __src[0] = v56;
              LODWORD(__src[1]) = v53;
              if (v106 >= 0x41 && v105)
              {
                MEMORY[0x1CAA32F9C](v105, 0x1000C8000313F17);
                v53 = __src[1];
              }
            }
            else
            {
              __src[0] = v105;
              LODWORD(__src[1]) = v53;
            }
          }
          if (v48)
            v57 = -v47;
          else
            v57 = v47;
          if (v57 * v49 < 0)
          {
            if (v53 < 0x41)
            {
              v58 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v53;
              if (!v53)
                v58 = 0;
              v59 = (void *)(v58 & ((unint64_t)__src[0] + *(_QWORD *)(v98 + 24)));
              goto LABEL_130;
            }
            v61 = v53 + 63;
            v62 = (unint64_t *)operator new[]();
            v63 = __src[0];
            memcpy(v62, __src[0], (v61 >> 3) & 0x3FFFFFF8);
            v64 = 0;
            v65 = *(uint64_t **)(v98 + 24);
            v66 = v61 >> 6;
            v67 = v62;
            v68 = v66;
            do
            {
              v69 = *v65++;
              v70 = v69 + *v62;
              v71 = v70 + 1 <= *v62;
              if (v64)
              {
                ++v70;
                v64 = v71;
              }
              else
              {
                v64 = v70 < *v62;
              }
              *v62++ = v70;
              --v68;
            }
            while (v68);
          }
          else
          {
            if (v53 < 0x41)
            {
              if (v53)
                v60 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v53;
              else
                v60 = 0;
              v59 = (void *)(v60 & ((unint64_t)__src[0] - *(_QWORD *)(v98 + 24)));
              goto LABEL_130;
            }
            v72 = v53 + 63;
            v73 = (unint64_t *)operator new[]();
            v63 = __src[0];
            memcpy(v73, __src[0], (v72 >> 3) & 0x3FFFFFF8);
            v74 = 0;
            v75 = *(unint64_t **)(v98 + 24);
            v66 = v72 >> 6;
            v67 = v73;
            v76 = v66;
            do
            {
              v77 = *v75++;
              v78 = *v73 - v77;
              v79 = *v73 < v77;
              v80 = *v73 + ~v77;
              if (v74)
              {
                v74 = v80 >= *v73;
              }
              else
              {
                v80 = v78;
                v74 = v79;
              }
              *v73++ = v80;
              --v76;
            }
            while (v76);
          }
          v81 = v66 - 1;
          v59 = v67;
          v67[v81] &= 0xFFFFFFFFFFFFFFFFLL >> -(char)v53;
          if (LODWORD(__src[1]) > 0x40)
          {
            if (v63)
              MEMORY[0x1CAA32F9C](v63, 0x1000C8000313F17);
            __src[0] = v67;
            goto LABEL_134;
          }
LABEL_130:
          __src[0] = v59;
LABEL_134:
          LODWORD(__src[1]) = v53;
          v82 = *((_QWORD *)v123 + j);
          v83 = *(unsigned __int8 **)(v82 + 64);
          v103 = v83;
          if (v83)
            llvm::MetadataTracking::track((uint64_t)&v103, v83, 2);
          v104 = *(_DWORD *)(v82 + 60);
          v85 = sub_1C63666FC(*a1, (llvm::LLVMContext *)__src, (const llvm::APInt *)&v103, **(_QWORD **)(v99 + 40), *(_QWORD *)(*(_QWORD *)(v99 + 40) + 8), 0, 0);
          v87 = *(_QWORD *)(*((_QWORD *)v123 + j) + 40);
          v88 = *(llvm **)v87;
          v89 = *(_QWORD *)(v87 + 8);
          v90 = *(_QWORD *)(*a1 + 832);
          if (v90)
            LOWORD(v90) = *(_WORD *)(v90 + 8);
          v91 = sub_1C5D56C70(*a1, v100, (const llvm::APInt *)&v103, v88, v89, v85, v84, v86, v101, v102, v90);
          sub_1C5D6146C(*a1, *((_QWORD *)v123 + j), 0, (uint64_t)v91, v92);
          v93.n128_u64[0] = (unint64_t)sub_1C5C5B9D4(a1, *((_QWORD *)v123 + j));
          if (v103)
            llvm::MetadataTracking::untrack((uint64_t)&v103, v103);
          if (LODWORD(__src[1]) >= 0x41 && __src[0])
            MEMORY[0x1CAA32F9C](__src[0], 0x1000C8000313F17, v93);
        }
      }
      sub_1C5D6146C(*a1, v5, v119, v101, v102);
      sub_1C5C5B9D4(a1, v5);
      sub_1C5C5B004((uint64_t)a1, v101);
      *(_QWORD *)(v108 + 656) = *((_QWORD *)&v107 + 1);
      v2 = 1;
    }
    else
    {
LABEL_69:
      v2 = 0;
    }
  }
  if (v123 != v125)
    free(v123);
  if (v126[0] != v127)
    free(v126[0]);
  if (*((_QWORD *)&v110 + 1) != (_QWORD)v110)
    free(*((void **)&v110 + 1));
  return v2;
}

uint64_t sub_1C5CB83E4(uint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  _QWORD *v11;
  uint64_t v12;
  unsigned int v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unsigned __int8 *v27;
  _QWORD *v28;
  uint64_t v29;
  int v30;
  int v31;
  char v32;
  uint64_t v33;
  unsigned __int8 *v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  unsigned __int8 *v38;
  unsigned __int8 *v39;
  _QWORD *v40;
  unsigned __int8 *v41;
  uint64_t v42;
  unsigned __int8 *v43;
  void *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  char v52;
  char v53;
  _BYTE v54[22];
  char v55;
  char v56;
  unsigned __int8 *v57;
  unsigned __int8 *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  _QWORD v64[10];

  v64[8] = *MEMORY[0x1E0C80C00];
  if (*((int *)a1 + 6) < 3)
    return 0;
  v53 = 1;
  v52 = 0;
  v50 = 0;
  v51 = 0;
  v48 = 0;
  LODWORD(v49) = 0;
  v46 = 0;
  LODWORD(v47) = 0;
  v45 = 0;
  v5 = *a1;
  v6 = a1[1];
  v7 = sub_1C5CB8E4C(a2, 3u, 4u, &v53, &v52, (uint64_t)&v50, v6);
  result = 0;
  if (!v7)
    return result;
  v8 = v50;
  v9 = *(_QWORD *)(v50 + 48);
  if (!v9 || !*(_QWORD *)(v9 + 32))
    return 0;
  v10 = (unsigned __int8 *)&v61;
  v11 = v64;
  while (1)
  {
    v12 = *(_QWORD *)(v9 + 16);
    if (v12 == a2
      || (*(_WORD *)(v12 + 24) & 0xFFFE) != 0x38
      || !(*(unsigned int (**)(uint64_t, uint64_t, _QWORD, uint64_t *, uint64_t *, int *, uint64_t))(*(_QWORD *)v6 + 1536))(v6, a2, *(_QWORD *)(v9 + 16), &v48, &v46, &v45, v5)|| sub_1C6368AD4(v46))
    {
      goto LABEL_10;
    }
    v13 = *(unsigned __int16 *)(v48 + 24);
    v14 = v13 > 0x27;
    v15 = (1 << v13) & 0x8000008200;
    if (!v14 && v15 != 0)
      goto LABEL_10;
    v44 = v11;
    v57 = v10;
    v58 = v10;
    v59 = 32;
    LODWORD(v60) = 0;
    v17 = *(_QWORD *)(v48 + 48);
    if (v17)
    {
      v43 = v10;
      while (1)
      {
        v18 = *(_QWORD *)(v17 + 16);
        if (v18 != v8)
        {
          if (sub_1C6133268(*(_QWORD *)(v17 + 16))
            && sub_1C5CB8E4C(v18, 3u, 4u, &v56, &v55, (uint64_t)v54, v6))
          {
            v62 = v44;
            v64[0] = v18;
            v63 = 0x200000001;
            v19 = sub_1C5CB0A7C(a2, (uint64_t)&v57, (unsigned int *)&v62, 0, 0);
            if (v62 != v44)
            {
              v20 = v19;
              free(v62);
              v19 = v20;
            }
            if ((v19 & 1) != 0)
              goto LABEL_34;
          }
          if ((*(_WORD *)(v18 + 24) & 0xFFFE) == 0x38)
          {
            v21 = *(_QWORD *)(v18 + 48);
            if (v21)
              break;
          }
        }
LABEL_21:
        v17 = *(_QWORD *)(v17 + 32);
        if (!v17)
        {
          v22 = 1;
          goto LABEL_35;
        }
      }
      while ((sub_1C5CB9080(v18, *(_QWORD *)(v21 + 16), *(_QWORD *)(v5 + 40), *(llvm::LLVMContext **)(v5 + 56), v6) & 1) == 0)
      {
        v21 = *(_QWORD *)(v21 + 32);
        if (!v21)
          goto LABEL_21;
      }
LABEL_34:
      v22 = 0;
LABEL_35:
      v10 = v43;
    }
    else
    {
      v22 = 1;
    }
    if (v58 != v57)
      free(v58);
    if (v22)
      break;
LABEL_52:
    v11 = v44;
LABEL_10:
    v9 = *(_QWORD *)(v9 + 32);
    if (!v9)
      return 0;
  }
  v57 = v10;
  v58 = v10;
  v59 = 32;
  LODWORD(v60) = 0;
  v62 = v44;
  v63 = 0x800000000;
  sub_1C4774094((llvm::SmallPtrSetImplBase *)&v57, v8);
  v23 = v63;
  if (v63 >= (unint64_t)HIDWORD(v63))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v62, (uint64_t)v44, v63 + 1, 8);
    v23 = v63;
  }
  *((_QWORD *)v62 + v23) = a2;
  v24 = (v63 + 1);
  LODWORD(v63) = v24;
  if (v24 >= HIDWORD(v63))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v62, (uint64_t)v44, v24 + 1, 8);
    LODWORD(v24) = v63;
  }
  *((_QWORD *)v62 + v24) = v12;
  LODWORD(v63) = v63 + 1;
  if ((sub_1C5CB0A7C(a2, (uint64_t)&v57, (unsigned int *)&v62, 0, 0) & 1) != 0
    || (v25 = 0, sub_1C5CB0A7C(v12, (uint64_t)&v57, (unsigned int *)&v62, 0, 0)))
  {
    v25 = 1;
    v12 = v42;
  }
  if (v62 != v44)
    free(v62);
  if (v58 != v57)
    free(v58);
  if (v25)
  {
    v42 = v12;
    goto LABEL_52;
  }
  if (!v12)
    return 0;
  v26 = *a1;
  if (v52)
  {
    if (v53)
    {
      v41 = *(unsigned __int8 **)(a2 + 64);
      v57 = v41;
      if (v41)
        llvm::MetadataTracking::track((uint64_t)&v57, v41, 2);
      LODWORD(v58) = *(_DWORD *)(a2 + 60);
      v40 = sub_1C636C83C(v26, a2, 0, (uint64_t)&v57, v48, v49, v46, v47, v45);
      goto LABEL_77;
    }
    v38 = *(unsigned __int8 **)(a2 + 64);
    v57 = v38;
    if (v38)
      llvm::MetadataTracking::track((uint64_t)&v57, v38, 2);
    LODWORD(v58) = *(_DWORD *)(a2 + 60);
    v28 = sub_1C636CA20(v26, a2, 0, (uint64_t)&v57, v48, v49, v46, v47, v45);
LABEL_59:
    v29 = (uint64_t)v28;
    if (v57)
      llvm::MetadataTracking::untrack((uint64_t)&v57, v57);
    v30 = 0;
    v31 = 0;
    v32 = 1;
  }
  else
  {
    if (!v53)
    {
      v27 = *(unsigned __int8 **)(a2 + 64);
      v57 = v27;
      if (v27)
        llvm::MetadataTracking::track((uint64_t)&v57, v27, 2);
      LODWORD(v58) = *(_DWORD *)(a2 + 60);
      v28 = sub_1C5D5E02C(v26, a2, 0, (uint64_t)&v57, v48, v49, v46, v47, v45);
      goto LABEL_59;
    }
    v39 = *(unsigned __int8 **)(a2 + 64);
    v57 = v39;
    if (v39)
      llvm::MetadataTracking::track((uint64_t)&v57, v39, 2);
    LODWORD(v58) = *(_DWORD *)(a2 + 60);
    v40 = sub_1C636B664(v26, a2, 0, (uint64_t)&v57, v48, v49, v46, v47, v45);
LABEL_77:
    v29 = (uint64_t)v40;
    if (v57)
      llvm::MetadataTracking::untrack((uint64_t)&v57, v57);
    v30 = 0;
    v32 = 0;
    v31 = 1;
  }
  v33 = *a1;
  v34 = *(unsigned __int8 **)(*a1 + 656);
  *(_QWORD *)(v33 + 656) = &v57;
  v57 = (unsigned __int8 *)&off_1E8197EE8;
  v58 = v34;
  v59 = v33;
  v60 = a1;
  v35 = a2;
  v36 = v29;
  if ((v32 & 1) != 0)
  {
    v37 = 1;
  }
  else
  {
    sub_1C5D6146C(v33, a2, 0, v29, 0);
    v33 = *a1;
    v35 = a2;
    v30 = 1;
    v36 = v29;
    v37 = 2;
  }
  sub_1C5D6146C(v33, v35, v30, v36, v37);
  sub_1C5C5B9D4(a1, a2);
  sub_1C5D6146C(*a1, v12, 0, v29, v31);
  sub_1C5C5B9D4(a1, v12);
  *(_QWORD *)(v59 + 656) = v58;
  return 1;
}

BOOL sub_1C5CB89D8(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  BOOL v6;
  BOOL v7;
  _BOOL8 result;
  uint64_t *v9;
  uint64_t *v10;
  BOOL v11;
  int v12;
  __int16 v13;
  __int16 v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  char v18;
  __int16 v19;
  __int16 v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  unint64_t v37;
  unint64_t v38;
  __int128 v39;
  _QWORD v40[2];
  __int128 v41;
  __int128 v42;
  _QWORD v43[2];
  __int128 v44;
  __int128 v45;
  char v46;
  _BYTE v47[8];
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t *v53;
  _BYTE v54[8];
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;

  sub_1C5CB8CAC((uint64_t)v54, a2);
  sub_1C5CB8CAC((uint64_t)v47, a3);
  if (v55)
  {
    v6 = v55 == v48 && v56 == v49;
    if (v6 && v57 == v50)
      return 1;
  }
  v7 = !v54[0] || v47[0] == 0;
  if (!v7 || v54[1] && v47[1])
    return 1;
  v9 = v60;
  v10 = v53;
  if (v60)
    v11 = v53 == 0;
  else
    v11 = 1;
  v12 = !v11;
  if (!v11)
  {
    v13 = *((_WORD *)v60 + 16);
    v14 = *((_WORD *)v53 + 16);
    if ((v13 & 0x20) != 0 && (v14 & 2) != 0)
      return 0;
    if ((v13 & 2) != 0 && (v14 & 0x20) != 0)
      return 0;
  }
  v46 = 0;
  v15 = v58;
  v16 = v59;
  v17 = v51;
  v18 = v52;
  if (sub_1C5D655C0(a2, v58, v59, a3, v51, v52, *a1, &v46))
    return v46 != 0;
  if (!v12)
    return 1;
  v19 = *((_WORD *)v9 + 16);
  v20 = *((_WORD *)v10 + 16);
  if ((v19 & 0x20) != 0 && (v20 & 2) != 0)
    return 0;
  if ((v19 & 2) != 0 && (v20 & 0x20) != 0)
    return 0;
  v21 = v9[1];
  v22 = v10[1];
  v23 = *((unsigned __int8 *)v9 + 34);
  v24 = *((unsigned __int8 *)v10 + 34);
  if (v23 != v24
    || v21 == v22
    || !v16
    || !v18
    || v15 != v17
    || (unint64_t)v15 >> v23
    || v21 % v15
    || v22 % v15
    || (result = 0, v25 = v21 & ~(-1 << v23), v26 = v22 & ~(-1 << v24), v25 + v15 > v26) && v26 + v15 > v25)
  {
    if (word_1ED823AC0)
    {
      if (!byte_1ED823B38)
        return 1;
    }
    else
    {
      v27 = *(_QWORD *)(*(_QWORD *)(*a1 + 40) + 16);
      if (!(*(unsigned int (**)(uint64_t))(*(_QWORD *)v27 + 368))(v27))
        return 1;
    }
    v28 = a1[180];
    if (!v28)
      return 1;
    v29 = *v9;
    if ((unint64_t)*v9 < 8)
      return 1;
    if ((v29 & 4) != 0)
      return 1;
    v30 = *v10;
    if ((unint64_t)*v10 < 8 || (v30 & 4) != 0 || !v16 || !v18)
      return 1;
    if (v22 >= v21)
      v31 = v21;
    else
      v31 = v22;
    v32 = v21 + v15 - v31;
    v33 = v22 + v17 - v31;
    if (v32 > 0x7FFFFFFFFFFFFFFBLL)
      v32 = -2;
    v34 = 0uLL;
    v35 = 0uLL;
    v36 = 0uLL;
    if (byte_1ED823BF8)
    {
      v35 = *(_OWORD *)(v9 + 5);
      v36 = *(_OWORD *)(v9 + 7);
    }
    v43[0] = v29 & 0xFFFFFFFFFFFFFFF8;
    v43[1] = v32;
    v44 = v35;
    v45 = v36;
    v37 = v30 & 0xFFFFFFFFFFFFFFF8;
    v38 = v33 <= 0x7FFFFFFFFFFFFFFBLL ? v33 : -2;
    v39 = 0uLL;
    if (byte_1ED823BF8)
    {
      v34 = *(_OWORD *)(v10 + 5);
      v39 = *(_OWORD *)(v10 + 7);
    }
    v40[0] = v37;
    v40[1] = v38;
    v41 = v34;
    v42 = v39;
    return llvm::AAResults::alias(v28, (uint64_t)v43, (uint64_t)v40) != 0;
  }
  return result;
}

uint64_t sub_1C5CB8CAC(uint64_t result, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  BOOL v12;
  int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  unint64_t v20;
  int v21;
  uint64_t v22;
  __int128 v23;

  v3 = result;
  if (!a2 || (v4 = *(unsigned __int16 *)(a2 + 24), (v4 - 255) < 0xFFFFFFFE))
  {
    *(_WORD *)result = 0;
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(result + 8) = *(_QWORD *)(v5 + 40);
    *(_DWORD *)(result + 16) = *(_DWORD *)(v5 + 48);
    v6 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(result + 24) = v6 & ~(v6 >> 63);
    v7 = (_QWORD *)(result + 32);
    if (v6 < 0)
    {
      v8 = 0;
      *v7 = 0;
      *(_QWORD *)(result + 40) = 0;
    }
    else
    {
      *v7 = *(_QWORD *)(a2 + 80);
      v8 = 1;
    }
    *(_BYTE *)(result + 40) = v8;
    *(_QWORD *)(result + 48) = 0;
    return result;
  }
  v12 = v4 == 253;
  v9 = 120;
  if (v12)
    v9 = 80;
  v10 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + v9);
  v11 = *(unsigned __int16 *)(v10 + 24);
  v12 = v11 == 35 || v11 == 11;
  if (!v12)
    goto LABEL_19;
  v13 = (*(unsigned __int16 *)(a2 + 26) >> 7) & 7;
  if (v13 == 2)
  {
    v17 = *(_QWORD *)(v10 + 80);
    v18 = *(_DWORD *)(v17 + 32);
    if (v18 > 0x40)
      v19 = **(_QWORD **)(v17 + 24);
    else
      v19 = (uint64_t)(*(_QWORD *)(v17 + 24) << -(char)v18) >> -(char)v18;
    v16 = -v19;
    goto LABEL_25;
  }
  if (v13 == 1)
  {
    v14 = *(_QWORD *)(v10 + 80);
    v15 = *(_DWORD *)(v14 + 32);
    if (v15 > 0x40)
      v16 = **(_QWORD **)(v14 + 24);
    else
      v16 = (uint64_t)(*(_QWORD *)(v14 + 24) << -(char)v15) >> -(char)v15;
  }
  else
  {
LABEL_19:
    v16 = 0;
  }
LABEL_25:
  v23 = *(_OWORD *)(a2 + 80);
  v20 = sub_1C47C1C70((unsigned __int8 *)&v23);
  if (v21 == 1)
    v22 = -1;
  else
    v22 = v20;
  *(_BYTE *)v3 = (*(_BYTE *)(a2 + 26) & 8) != 0;
  *(_BYTE *)(v3 + 1) = (*(_WORD *)(*(_QWORD *)(a2 + 96) + 36) & 0xF00) != 0;
  result = sub_1C6131AB0(a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)result;
  *(_DWORD *)(v3 + 16) = *(_DWORD *)(result + 8);
  *(_QWORD *)(v3 + 24) = v16;
  *(_QWORD *)(v3 + 32) = v22;
  *(_BYTE *)(v3 + 40) = 1;
  *(_QWORD *)(v3 + 48) = *(_QWORD *)(a2 + 96);
  return result;
}

uint64_t sub_1C5CB8E4C(uint64_t a1, unsigned int a2, unsigned int a3, _BYTE *a4, _BYTE *a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  __int16 v9;
  __int16 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v7 = *(unsigned __int16 *)(a1 + 24);
  if (a1 && v7 == 253)
  {
    if ((*(_WORD *)(a1 + 26) & 0x380) != 0)
      return 0;
    v8 = *(unsigned __int8 *)(a1 + 80);
    if (*(_BYTE *)(a1 + 80))
    {
      v9 = *(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a2 + 169796);
      if (v9 < 0x10u
        || (v9 & 0xF0) == 0x40
        || (v10 = *(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a3 + 169796), v10 < 0x10u)
        || (v10 & 0xF0) == 0x40)
      {
        v11 = *(_QWORD *)(a1 + 32);
        v12 = *(_QWORD *)(v11 + 40);
        *(_DWORD *)(a6 + 8) = *(_DWORD *)(v11 + 48);
        *(_QWORD *)a6 = v12;
        return 1;
      }
      return 0;
    }
  }
  else
  {
    if (!a1 || v7 != 254)
    {
      if (a1 && v7 == 308)
      {
        if ((*(_WORD *)(a1 + 26) & 0x380) != 0)
          return 0;
        v8 = *(unsigned __int8 *)(a1 + 80);
        if (!*(_BYTE *)(a1 + 80))
          return v8;
        if ((*(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a2 + 169796) & 0xB000) != 0
          && (*(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a3 + 169796) & 0xB000) != 0)
        {
          return 0;
        }
        v15 = *(_QWORD *)(a1 + 32);
        v16 = *(_QWORD *)(v15 + 40);
        *(_DWORD *)(a6 + 8) = *(_DWORD *)(v15 + 48);
        *(_QWORD *)a6 = v16;
      }
      else
      {
        v8 = 0;
        if (!a1 || v7 != 309)
          return v8;
        if ((*(_WORD *)(a1 + 26) & 0x380) != 0)
          return 0;
        v8 = *(unsigned __int8 *)(a1 + 80);
        if (!*(_BYTE *)(a1 + 80))
          return v8;
        if ((*(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a2 + 169796) & 0xB00) != 0
          && (*(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a3 + 169796) & 0xB00) != 0)
        {
          return 0;
        }
        v18 = *(_QWORD *)(a1 + 32);
        v19 = *(_QWORD *)(v18 + 80);
        *(_DWORD *)(a6 + 8) = *(_DWORD *)(v18 + 88);
        *(_QWORD *)a6 = v19;
        *a4 = 0;
      }
      v8 = 1;
      *a5 = 1;
      return v8;
    }
    if ((*(_WORD *)(a1 + 26) & 0x380) != 0)
      return 0;
    v8 = *(unsigned __int8 *)(a1 + 80);
    if (*(_BYTE *)(a1 + 80))
    {
      if ((*(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a2 + 169796) & 0xB) == 0
        || (*(_WORD *)(a7 + 10 * *(unsigned __int8 *)(a1 + 80) + 2 * a3 + 169796) & 0xB) == 0)
      {
        v13 = *(_QWORD *)(a1 + 32);
        v14 = *(_QWORD *)(v13 + 80);
        *(_DWORD *)(a6 + 8) = *(_DWORD *)(v13 + 88);
        *(_QWORD *)a6 = v14;
        *a4 = 0;
        return 1;
      }
      return 0;
    }
  }
  return v8;
}

uint64_t sub_1C5CB9080(uint64_t a1, uint64_t a2, uint64_t a3, llvm::LLVMContext *a4, uint64_t a5)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  _QWORD v31[2];

  v6 = *(unsigned __int16 *)(a2 + 24);
  if (a2 && v6 == 253)
  {
LABEL_7:
    if ((*(_WORD *)(a2 + 26) & 0x380) == 0)
    {
      v7 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40);
      goto LABEL_13;
    }
    return 0;
  }
  if (a2 && v6 == 254)
    goto LABEL_11;
  if (a2 && v6 == 308)
    goto LABEL_7;
  v8 = 0;
  if (a2)
  {
    if (v6 == 309)
    {
LABEL_11:
      if ((*(_WORD *)(a2 + 26) & 0x380) == 0)
      {
        v7 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80);
LABEL_13:
        if (v7 != a1)
          return 0;
        v10 = *(_QWORD *)(a2 + 88);
        v31[0] = *(_QWORD *)(a2 + 80);
        v31[1] = v10;
        v11 = *(unsigned int *)(*(_QWORD *)(a2 + 96) + 16);
        v30 = 0;
        v27 = 0;
        v28 = 0;
        v29 = 0;
        v12 = *(unsigned __int16 *)(a1 + 24);
        if (v12 == 57)
        {
          v29 = 1;
          v19 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40);
          v20 = *(unsigned __int16 *)(v19 + 24);
          if (v20 != 35 && v20 != 11)
          {
LABEL_32:
            v30 = 1;
LABEL_37:
            v25 = *(_QWORD *)(*(_QWORD *)a3 + 40) + 272;
            llvm::EVT::getTypeForEVT((llvm::EVT *)v31, a4);
            return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t *, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a5 + 1064))(a5, v25, &v27, v26, v11, 0);
          }
          v22 = *(_QWORD *)(v19 + 80);
          v23 = *(_DWORD *)(v22 + 32);
          if (v23 > 0x40)
            v24 = **(_QWORD **)(v22 + 24);
          else
            v24 = (uint64_t)(*(_QWORD *)(v22 + 24) << -(char)v23) >> -(char)v23;
          v18 = -v24;
        }
        else
        {
          v8 = 0;
          if (v12 != 56)
            return v8;
          v29 = 1;
          v13 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 40);
          v14 = *(unsigned __int16 *)(v13 + 24);
          if (v14 != 35 && v14 != 11)
            goto LABEL_32;
          v16 = *(_QWORD *)(v13 + 80);
          v17 = *(_DWORD *)(v16 + 32);
          if (v17 > 0x40)
            v18 = **(_QWORD **)(v16 + 24);
          else
            v18 = (uint64_t)(*(_QWORD *)(v16 + 24) << -(char)v17) >> -(char)v17;
        }
        v28 = v18;
        goto LABEL_37;
      }
      return 0;
    }
  }
  return v8;
}

uint64_t sub_1C5CB9248(llvm::APInt *a1, uint64_t a2)
{
  const char *v4;
  unsigned int v5;
  unsigned int v6;
  const char *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v12;
  char *v13;
  unint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  int v18;

  v5 = sub_1C4916CF4(*(_QWORD *)(a2 + 8), 0);
  if ((_DWORD)v4 == 1)
  v6 = sub_1C4916CF4(*(_QWORD *)a2, 0);
  if ((_DWORD)v7 == 1)
  {
    v16 = v6;
    v6 = v16;
  }
  *((_DWORD *)a1 + 2) = v6;
  if (v6 >= 0x41)
  {
    llvm::APInt::initSlowCase(a1, 0, 0);
    v12 = *((unsigned int *)a1 + 2);
    if (v12 > 0x40)
    {
      v13 = *(char **)a1;
      v14 = v12 + 63;
      v15 = *((_DWORD *)a1 + 2);
      memset(*(void **)a1, 255, ((unint64_t)(v12 + 63) >> 3) & 0x3FFFFFF8);
      v9 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v15;
      v10 = (uint64_t *)&v13[8 * (v14 >> 6) - 8];
      v8 = *v10;
      goto LABEL_9;
    }
    v6 = *((_DWORD *)a1 + 2);
  }
  v8 = -1;
  *(_QWORD *)a1 = -1;
  v9 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v6;
  if (!v6)
    v9 = 0;
  v10 = (uint64_t *)a1;
LABEL_9:
  *v10 = v8 & v9;
  llvm::APInt::zext(a1, v5, (uint64_t)&v17);
  if (*((_DWORD *)a1 + 2) >= 0x41u && *(_QWORD *)a1)
    MEMORY[0x1CAA32F9C](*(_QWORD *)a1, 0x1000C8000313F17);
  *(_QWORD *)a1 = v17;
  *((_DWORD *)a1 + 2) = v18;
  return sub_1C4888094((uint64_t)a1, *(_DWORD *)(a2 + 16));
}

unint64_t sub_1C5CB93C0(uint64_t a1)
{
  int v2;
  unint64_t v3;
  llvm::Type *v4;
  const char *v5;
  unint64_t v6;
  llvm::Type *v8;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 24) + 40) + 40) + 272);
  v3 = *(unsigned int *)(a1 + 16);
  v4 = sub_1C4916CF4(*(_QWORD *)(a1 + 8), 0);
  if ((_DWORD)v5 == 1)
  {
    v8 = v4;
    v4 = v8;
  }
  v6 = v3 >> 3;
  if (v2)
    return ((unint64_t)v4 >> 3)
         - (unint64_t)(sub_1C5CB9454(a1) + v6);
  return v6;
}

uint64_t sub_1C5CB9454(uint64_t a1)
{
  uint8x8_t v1;
  unsigned __int32 v2;
  uint64_t v3;
  uint8x8_t v4;
  int8x8_t v6;
  unsigned int v7;

  sub_1C5CB9248((llvm::APInt *)&v6, a1);
  if (v7 > 0x40)
  {
    v3 = 0;
    v2 = 0;
    do
    {
      v4 = (uint8x8_t)vcnt_s8(*(int8x8_t *)(*(_QWORD *)&v6 + v3));
      v4.i16[0] = vaddlv_u8(v4);
      v2 += v4.i32[0];
      v3 += 8;
    }
    while (((((unint64_t)v7 + 63) >> 3) & 0x3FFFFFF8) != v3);
    MEMORY[0x1CAA32F9C](*(_QWORD *)&v6, 0x1000C8000313F17);
  }
  else
  {
    v1 = (uint8x8_t)vcnt_s8(v6);
    v1.i16[0] = vaddlv_u8(v1);
    v2 = v1.i32[0];
  }
  return v2 >> 3;
}

BOOL sub_1C5CB94F0(llvm::APInt *this)
{
  uint64_t v1;
  int v3;
  unint64_t v4;
  unsigned int v5;
  unint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  void *v10;
  int64_t v11;
  int v12;
  uint64_t v13;
  BOOL v14;
  unint64_t v15;
  int v16;
  _BOOL8 v17;
  int v18;
  unint64_t v19;
  void *v21;
  unsigned int v22;
  void *v23;
  unsigned int v24;

  v1 = *((unsigned int *)this + 2);
  if (!(_DWORD)v1)
    return 1;
  v3 = v1 - 64;
  if (v1 <= 0x40)
  {
    v4 = *(_QWORD *)this;
    if (*(_QWORD *)this != 0xFFFFFFFFFFFFFFFFLL >> -(char)v1)
    {
      v5 = __clz(__rbit64(v4));
      v24 = *((_DWORD *)this + 2);
      v6 = v4 >> v5;
      if (v1 <= v5)
        v6 = 0;
      v23 = (void *)v6;
      v7 = __clz(v6);
      if (!(v3 + v7))
        return v23 == (void *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v1);
      v8 = v3 + v7;
      goto LABEL_20;
    }
    return 1;
  }
  if (llvm::APInt::countTrailingOnesSlowCase(this) == (_DWORD)v1)
    return 1;
  v9 = llvm::APInt::countTrailingZerosSlowCase((unint64_t **)this);
  v24 = v1;
  v10 = (void *)operator new[]();
  v23 = v10;
  memcpy(v10, *(const void **)this, ((unint64_t)(v1 + 63) >> 3) & 0x3FFFFFF8);
  v11 = (unint64_t)(v1 + 63) >> 6;
  llvm::APInt::tcShiftRight((llvm::APInt *)v10, (unint64_t *)v11, v9);
  v12 = 0;
  v13 = v11;
  do
  {
    v14 = v13-- < 1;
    if (v14)
      break;
    v15 = *((_QWORD *)v10 + v13);
    v12 += __clz(v15);
  }
  while (!v15);
  v16 = v1 | 0xFFFFFFC0;
  if ((v1 & 0x3F) == 0)
    v16 = 0;
  if (!(v12 + v16))
  {
    v17 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&v23) == (_DWORD)v1;
    goto LABEL_29;
  }
  v18 = 0;
  do
  {
    v14 = v11-- < 1;
    if (v14)
      break;
    v19 = *((_QWORD *)v10 + v11);
    v18 += __clz(v19);
  }
  while (!v19);
  v8 = v18 + v16;
LABEL_20:
  llvm::APInt::trunc((llvm::APInt *)&v23, v1 - v8, (llvm::APInt *)&v21);
  if (v24 >= 0x41 && v23)
    MEMORY[0x1CAA32F9C](v23, 0x1000C8000313F17);
  v23 = v21;
  LODWORD(v1) = v22;
  v24 = v22;
  if (!v22)
    return 1;
  if (v22 > 0x40)
  {
    v10 = v23;
    v17 = llvm::APInt::countTrailingOnesSlowCase((llvm::APInt *)&v23) == (_DWORD)v1;
    if (!v10)
      return v17;
LABEL_29:
    MEMORY[0x1CAA32F9C](v10, 0x1000C8000313F17);
    return v17;
  }
  return v23 == (void *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v1);
}

uint64_t sub_1C5CB96FC(uint64_t a1)
{
  uint64_t v1;
  unsigned int v2;
  unint64_t v3;
  unsigned int v4;

  v1 = (1 << *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 96) + 34)) | *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 96)
                                                                                       + 8);
  v2 = 63 - __clz(v1 & -v1);
  v3 = sub_1C5CB93C0(a1);
  v4 = 63 - __clz((((1 << v2) + v3) | (1 << v2)) & -(uint64_t)(((1 << v2) + v3) | (1 << v2)));
  if (v3)
    return v4;
  else
    return v2;
}

void sub_1C5CB9770(__int128 *a1, __int128 *a2, uint64_t a3, char a4)
{
  __int128 *v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  uint64_t v18;
  __int128 v19;
  unint64_t v20;
  __int128 *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  __int128 *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  unint64_t v29;
  unint64_t v30;
  __int128 *v31;
  __int128 v32;
  __int128 v33;
  BOOL v34;
  __int128 v35;
  unint64_t v36;
  unint64_t v37;
  __int128 *v38;
  unint64_t v39;
  unint64_t v40;
  __int128 *v41;
  unint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  unint64_t v46;
  unint64_t v47;
  __int128 *v48;
  __int128 v49;
  __int128 v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  BOOL v57;
  uint64_t v58;
  __int128 *v59;
  uint64_t v60;
  unint64_t v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  __int128 v65;
  unint64_t v66;
  __int128 *v67;
  __int128 v68;
  int64_t v69;
  int64_t v70;
  int64_t v71;
  uint64_t v72;
  __int128 *v73;
  unint64_t v74;
  __int128 *v75;
  unint64_t v76;
  __int128 v77;
  __int128 *v78;
  __int128 v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  unint64_t v83;
  __int128 v84;
  uint64_t v85;
  __int128 v86;
  __int128 *v87;
  __int128 *v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  unint64_t v96;
  __int128 *v97;
  unint64_t v98;
  __int128 v99;
  __int128 *v100;
  __int128 v101;
  unint64_t v102;
  __int128 v103;
  __int128 v104;
  __int128 *v106;
  uint64_t v107;
  unint64_t v108;
  __int128 v109;
  __int128 *v110;
  __int128 v111;
  unint64_t v112;
  unint64_t v113;
  __int128 v114;
  __int128 *v115;
  __int128 *v116;
  __int128 *v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;

__n128 sub_1C5CB9F9C(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4, __int128 *a5)
{
  unint64_t v10;
  __n128 result;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  unint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;

  sub_1C5CBA360(a1, a2, a3, a4);
  v10 = sub_1C5CB93C0((uint64_t)a5);
  if (v10 < sub_1C5CB93C0((uint64_t)a4))
  {
    v13 = *a4;
    v12 = a4[1];
    v14 = a5[1];
    *a4 = *a5;
    a4[1] = v14;
    *a5 = v13;
    a5[1] = v12;
    v15 = sub_1C5CB93C0((uint64_t)a4);
    if (v15 < sub_1C5CB93C0((uint64_t)a3))
    {
      v17 = *a3;
      v16 = a3[1];
      v18 = a4[1];
      *a3 = *a4;
      a3[1] = v18;
      *a4 = v17;
      a4[1] = v16;
      v19 = sub_1C5CB93C0((uint64_t)a3);
      if (v19 < sub_1C5CB93C0((uint64_t)a2))
      {
        v21 = *a2;
        v20 = a2[1];
        v22 = a3[1];
        *a2 = *a3;
        a2[1] = v22;
        *a3 = v21;
        a3[1] = v20;
        v23 = sub_1C5CB93C0((uint64_t)a2);
        if (v23 < sub_1C5CB93C0(a1))
        {
          v24 = *(_OWORD *)a1;
          result = *(__n128 *)(a1 + 16);
          v25 = a2[1];
          *(_OWORD *)a1 = *a2;
          *(_OWORD *)(a1 + 16) = v25;
          *a2 = v24;
          a2[1] = (__int128)result;
        }
      }
    }
  }
  return result;
}

unint64_t sub_1C5CBA094(__int128 *a1, __int128 *a2, __int128 *a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  unint64_t v23;
  __int128 v24;

  v6 = sub_1C5CB93C0((uint64_t)a2);
  v7 = sub_1C5CB93C0((uint64_t)a1);
  v8 = sub_1C5CB93C0((uint64_t)a3);
  result = sub_1C5CB93C0((uint64_t)a2);
  if (v6 >= v7)
  {
    if (v8 < result)
    {
      v14 = *a2;
      v13 = a2[1];
      v15 = a3[1];
      *a2 = *a3;
      a2[1] = v15;
      *a3 = v14;
      a3[1] = v13;
      v16 = sub_1C5CB93C0((uint64_t)a2);
      result = sub_1C5CB93C0((uint64_t)a1);
      if (v16 < result)
      {
        v18 = *a1;
        v17 = a1[1];
        v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        *a2 = v18;
        a2[1] = v17;
      }
    }
  }
  else
  {
    if (v8 >= result)
    {
      v21 = *a1;
      v20 = a1[1];
      v22 = a2[1];
      *a1 = *a2;
      a1[1] = v22;
      *a2 = v21;
      a2[1] = v20;
      v23 = sub_1C5CB93C0((uint64_t)a3);
      result = sub_1C5CB93C0((uint64_t)a2);
      if (v23 >= result)
        return result;
      v11 = *a2;
      v10 = a2[1];
      v24 = a3[1];
      *a2 = *a3;
      a2[1] = v24;
    }
    else
    {
      v11 = *a1;
      v10 = a1[1];
      v12 = a3[1];
      *a1 = *a3;
      a1[1] = v12;
    }
    *a3 = v11;
    a3[1] = v10;
  }
  return result;
}

BOOL sub_1C5CBA1A0(__int128 *a1, __int128 *a2)
{
  uint64_t v4;
  _BOOL8 result;
  __int128 *v6;
  unint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  __int128 *v12;
  uint64_t v13;
  int v14;
  unint64_t v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  __int128 v19;
  uint64_t v20;
  unint64_t v21;
  __int128 *v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v4 = ((char *)a2 - (char *)a1) >> 5;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      v6 = a2 - 2;
      v7 = sub_1C5CB93C0((uint64_t)(a2 - 2));
      if (v7 < sub_1C5CB93C0((uint64_t)a1))
      {
        v9 = *a1;
        v8 = a1[1];
        v10 = v6[1];
        *a1 = *v6;
        a1[1] = v10;
        *v6 = v9;
        v6[1] = v8;
      }
      return 1;
    case 3:
      sub_1C5CBA094(a1, a1 + 2, a2 - 2);
      return 1;
    case 4:
      sub_1C5CBA360((uint64_t)a1, a1 + 2, a1 + 4, a2 - 2);
      return 1;
    case 5:
      sub_1C5CB9F9C((uint64_t)a1, a1 + 2, a1 + 4, a1 + 6, a2 - 2);
      return 1;
    default:
      v11 = (uint64_t)(a1 + 4);
      sub_1C5CBA094(a1, a1 + 2, a1 + 4);
      v12 = a1 + 6;
      if (a1 + 6 == a2)
        return 1;
      v13 = 0;
      v14 = 0;
      break;
  }
  while (1)
  {
    v15 = sub_1C5CB93C0((uint64_t)v12);
    if (v15 < sub_1C5CB93C0(v11))
    {
      v16 = v12[1];
      v24 = *v12;
      v25 = v16;
      v17 = v13;
      while (1)
      {
        v18 = (char *)a1 + v17;
        v19 = *(__int128 *)((char *)a1 + v17 + 80);
        *((_OWORD *)v18 + 6) = *(__int128 *)((char *)a1 + v17 + 64);
        *((_OWORD *)v18 + 7) = v19;
        if (v17 == -64)
          break;
        v20 = (uint64_t)(v18 + 32);
        v21 = sub_1C5CB93C0((uint64_t)&v24);
        v17 -= 32;
        if (v21 >= sub_1C5CB93C0(v20))
        {
          v22 = (__int128 *)((char *)a1 + v17 + 96);
          goto LABEL_12;
        }
      }
      v22 = a1;
LABEL_12:
      v23 = v25;
      *v22 = v24;
      v22[1] = v23;
      if (++v14 == 8)
        return v12 + 2 == a2;
    }
    v11 = (uint64_t)v12;
    v13 += 32;
    v12 += 2;
    if (v12 == a2)
      return 1;
  }
}

__n128 sub_1C5CBA360(uint64_t a1, __int128 *a2, __int128 *a3, __int128 *a4)
{
  unint64_t v8;
  __n128 result;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;

  sub_1C5CBA094((__int128 *)a1, a2, a3);
  v8 = sub_1C5CB93C0((uint64_t)a4);
  if (v8 < sub_1C5CB93C0((uint64_t)a3))
  {
    v11 = *a3;
    v10 = a3[1];
    v12 = a4[1];
    *a3 = *a4;
    a3[1] = v12;
    *a4 = v11;
    a4[1] = v10;
    v13 = sub_1C5CB93C0((uint64_t)a3);
    if (v13 < sub_1C5CB93C0((uint64_t)a2))
    {
      v15 = *a2;
      v14 = a2[1];
      v16 = a3[1];
      *a2 = *a3;
      a2[1] = v16;
      *a3 = v15;
      a3[1] = v14;
      v17 = sub_1C5CB93C0((uint64_t)a2);
      if (v17 < sub_1C5CB93C0(a1))
      {
        v18 = *(_OWORD *)a1;
        result = *(__n128 *)(a1 + 16);
        v19 = a2[1];
        *(_OWORD *)a1 = *a2;
        *(_OWORD *)(a1 + 16) = v19;
        *a2 = v18;
        a2[1] = (__int128)result;
      }
    }
  }
  return result;
}

uint64_t sub_1C5CBA428(uint64_t result)
{
  if (*(unsigned __int16 *)(result + 24) - 198 <= 3)
    return sub_1C5CBA428(**(_QWORD **)(result + 32), *(_QWORD *)(*(_QWORD *)(result + 32) + 8));
  return result;
}

void sub_1C5CBA454(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  __int128 *v16;
  _OWORD *v17;
  __int128 v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  void *v23;
  unsigned int v24;
  _QWORD v25[9];

  v25[8] = *MEMORY[0x1E0C80C00];
  if (*(_DWORD *)(a1 + 136) || (v5 = *(unsigned int *)(a1 + 140), (_DWORD)v5 == 8))
  {
    sub_1C5CBA6B4((uint64_t)&v22, a1, a2);
    v6 = v22;
    if (!*(_DWORD *)(v22 + 136))
    {
      v7 = sub_1C5CBA838(v22, (_DWORD *)v23 + 4 * v24 - 1, *(unsigned int *)(v22 + 140), a2, a3);
      if (v7 <= 8)
      {
        *(_DWORD *)(v6 + 140) = v7;
        *((_DWORD *)v23 + 2) = v7;
        goto LABEL_21;
      }
      v11 = *((unsigned int *)v23 + 4 * v24 - 1);
      v12 = *(unsigned int *)(v6 + 140);
      v13 = (v12 - 1);
      v14 = *(unint64_t **)(v6 + 144);
      v15 = *v14;
      if (*v14)
        *v14 = *(_QWORD *)v15;
      else
        v15 = sub_1C484358C((uint64_t)(v14 + 1), 192, 6);
      *(_OWORD *)(v15 + 160) = 0u;
      *(_OWORD *)(v15 + 176) = 0u;
      *(_OWORD *)(v15 + 128) = 0u;
      *(_OWORD *)(v15 + 144) = 0u;
      *(_OWORD *)(v15 + 96) = 0u;
      *(_OWORD *)(v15 + 112) = 0u;
      *(_OWORD *)(v15 + 64) = 0u;
      *(_OWORD *)(v15 + 80) = 0u;
      *(_OWORD *)(v15 + 32) = 0u;
      *(_OWORD *)(v15 + 48) = 0u;
      *(_OWORD *)v15 = 0u;
      *(_OWORD *)(v15 + 16) = 0u;
      if ((_DWORD)v12)
      {
        v16 = (__int128 *)v6;
        v17 = (_OWORD *)v15;
        do
        {
          v18 = *v16++;
          *v17++ = v18;
          --v12;
        }
        while (v12);
      }
      *(_QWORD *)(v6 + 128) = 0;
      *(_OWORD *)(v6 + 96) = 0uLL;
      *(_OWORD *)(v6 + 112) = 0uLL;
      *(_OWORD *)(v6 + 64) = 0uLL;
      *(_OWORD *)(v6 + 80) = 0uLL;
      *(_OWORD *)(v6 + 32) = 0uLL;
      *(_OWORD *)(v6 + 48) = 0uLL;
      *(_OWORD *)v6 = 0uLL;
      *(_OWORD *)(v6 + 16) = 0uLL;
      *(_QWORD *)(v6 + 72) = *(_QWORD *)((v15 & 0xFFFFFFFFFFFFFFC0 | v13 & 0xFFFFFFFFFFFFFFC0) + 16 * v13 + 8);
      *(_QWORD *)(v6 + 8) = v15 & 0xFFFFFFFFFFFFFFC0 | v13;
      *(_QWORD *)v6 = *(_QWORD *)(v15 & 0xFFFFFFFFFFFFFFC0 | v13 & 0xFFFFFFFFFFFFFFC0);
      *(_QWORD *)(v6 + 136) = 0x100000001;
      v19 = v23;
      *(_QWORD *)v23 = v6 + 8;
      v19[1] = 1;
      v20 = *(_QWORD *)(*(_QWORD *)v23 + 8 * *((unsigned int *)v23 + 3));
      *(_QWORD *)&v21 = v20 & 0xFFFFFFFFFFFFFFC0;
      *((_QWORD *)&v21 + 1) = (v20 & 0x3F | (v11 << 32)) + 1;
      sub_1C5DF93CC((uint64_t)&v23, (uint64_t)v23 + 16, &v21);
    }
    sub_1C5CBA92C(&v22, a2, a3);
LABEL_21:
    if (v23 != v25)
      free(v23);
    return;
  }
  if ((_DWORD)v5)
  {
    v8 = 0;
    v9 = (uint64_t *)(a1 + 8);
    while (1)
    {
      v10 = *v9;
      v9 += 2;
      if (v10 > a2)
        break;
      if (v5 == ++v8)
      {
        LODWORD(v8) = *(_DWORD *)(a1 + 140);
        break;
      }
    }
  }
  else
  {
    LODWORD(v8) = 0;
  }
  LODWORD(v22) = v8;
  *(_DWORD *)(a1 + 140) = sub_1C5CBA838(a1, &v22, v5, a2, a3);
}

_DWORD *sub_1C5CBA6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  _DWORD *result;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_QWORD *)a1 = a2;
  *(_QWORD *)(a1 + 8) = a1 + 24;
  v6 = (_DWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 16) = 0x400000000;
  if (*(_DWORD *)(a2 + 136))
  {
    v7 = *(unsigned int *)(a2 + 140);
    if ((_DWORD)v7)
    {
      v8 = 0;
      v9 = a2 + 72;
      while (*(_QWORD *)(v9 + 8 * v8) <= a3)
      {
        if (v7 == ++v8)
        {
          v8 = v7;
          break;
        }
      }
    }
    else
    {
      v8 = 0;
    }
    result = sub_1C5CBB618((_DWORD *)a1, v8);
    v15 = *(_DWORD *)(a1 + 16);
    if (v15 && *(_DWORD *)(*(_QWORD *)v6 + 12) < *(_DWORD *)(*(_QWORD *)v6 + 8))
    {
      v16 = *(_DWORD *)(*(_QWORD *)a1 + 136);
      v17 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 16 * (v15 - 1))
                      + 8 * *(unsigned int *)(*(_QWORD *)v6 + 16 * (v15 - 1) + 12));
      v18 = v16 - v15;
      if (v16 != v15)
      {
        do
        {
          v19 = v17 & 0xFFFFFFFFFFFFFFC0;
          LODWORD(v20) = -1;
          do
            v20 = (v20 + 1);
          while (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFC0) + 8 * v20 + 0x60) <= a3);
          sub_1C4A079DC(v6, v17, v20);
          v17 = *(_QWORD *)(v19 + 8 * v20);
          --v18;
        }
        while (v18);
      }
      LODWORD(v21) = -1;
      do
        v21 = (v21 + 1);
      while (*(_QWORD *)((v17 & 0xFFFFFFFFFFFFFFC0) + 16 * v21 + 8) <= a3);
      return sub_1C4A079DC(v6, v17, v21);
    }
  }
  else
  {
    v10 = *(unsigned int *)(a2 + 140);
    if ((_DWORD)v10)
    {
      v11 = 0;
      v12 = (uint64_t *)(a2 + 8);
      while (1)
      {
        v13 = *v12;
        v12 += 2;
        if (v13 > a3)
          break;
        if (v10 == ++v11)
        {
          v11 = v10;
          return sub_1C5CBB618((_DWORD *)a1, v11);
        }
      }
    }
    else
    {
      v11 = 0;
    }
    return sub_1C5CBB618((_DWORD *)a1, v11);
  }
  return result;
}

uint64_t sub_1C5CBA838(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unsigned int v11;

  v5 = *a2;
  if (!(_DWORD)v5)
  {
LABEL_9:
    if ((_DWORD)v5 == (_DWORD)a3)
    {
      v9 = (_QWORD *)(a1 + 16 * a3);
      *v9 = a4;
LABEL_19:
      v9[1] = a5;
      return (a3 + 1);
    }
    v10 = (_QWORD *)(a1 + 16 * v5);
    if (*v10 == a5)
    {
      *v10 = a4;
      return a3;
    }
    if ((_DWORD)a3 != 8)
    {
      v11 = a3;
      do
      {
        *(_OWORD *)(a1 + 16 * v11) = *(_OWORD *)(a1 + 16 * (v11 - 1));
        --v11;
      }
      while ((_DWORD)v5 != v11);
      *v10 = a4;
      v9 = (_QWORD *)(a1 + 16 * v5);
      goto LABEL_19;
    }
    return 9;
  }
  v6 = a1 + 16 * (v5 - 1);
  v8 = *(_QWORD *)(v6 + 8);
  v7 = (_QWORD *)(v6 + 8);
  if (v8 != a4)
  {
    if ((_DWORD)v5 == 8)
      return 9;
    goto LABEL_9;
  }
  *a2 = v5 - 1;
  if ((_DWORD)v5 == (_DWORD)a3 || *(_QWORD *)(a1 + 16 * v5) != a5)
  {
    *v7 = a5;
  }
  else
  {
    *v7 = *(_QWORD *)(a1 + 16 * v5 + 8);
    if ((_DWORD)v5 + 1 != (_DWORD)a3)
    {
      do
      {
        *(_OWORD *)(a1 + 16 * v5) = *(_OWORD *)(a1 + 16 * (v5 + 1));
        LODWORD(v5) = v5 + 1;
      }
      while ((_DWORD)a3 - 1 != (_DWORD)v5);
    }
    return (a3 - 1);
  }
  return a3;
}

uint64_t sub_1C5CBA92C(_DWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  llvm::IntervalMapImpl::Path *v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  uint64_t v15;
  int v16;
  _DWORD *v17;
  int v18;
  uint64_t v19;
  _BOOL4 v20;
  uint64_t result;
  int v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unsigned int v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  unint64_t *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned int v50;
  unsigned int v51;
  uint64_t v52;
  unsigned int v53;
  int v54;
  uint64_t v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  int v73;
  int v74;
  unsigned int v75;
  uint64_t v76;
  unint64_t *v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  _DWORD *v81;
  int v82;
  uint64_t v83;
  int v84;
  uint64_t v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  uint64_t v94;
  _QWORD *v95;
  int v96;
  int v97;
  _QWORD *v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  uint64_t v105;
  int v106;
  int v107;
  uint64_t v108;
  int v109;
  int v110;
  int v111;
  int v112;
  unsigned int v113;
  uint64_t v114;
  unint64_t *v115;
  unsigned int v116;
  uint64_t v117;
  int v118;
  char v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  llvm::IntervalMapImpl::Path *v123;
  unint64_t v124;
  unsigned int v125[4];
  __int128 v126;
  __int128 v127;
  _DWORD v128[4];
  uint64_t v129;

  v5 = (uint64_t)a1;
  v129 = *MEMORY[0x1E0C80C00];
  v6 = (llvm::IntervalMapImpl::Path *)(a1 + 2);
  v7 = a1[4];
  if (!v7 || (v8 = *(_QWORD *)v6, *(_DWORD *)(*(_QWORD *)v6 + 12) >= *(_DWORD *)(*(_QWORD *)v6 + 8)))
  {
    v9 = *(unsigned int *)(*(_QWORD *)a1 + 136);
    llvm::IntervalMapImpl::Path::moveLeft((llvm::IntervalMapImpl::Path *)(a1 + 2), *(_DWORD *)(*(_QWORD *)a1 + 136));
    v8 = *(_QWORD *)(v5 + 8);
    ++*(_DWORD *)(v8 + 16 * v9 + 12);
    v7 = *(_DWORD *)(v5 + 16);
  }
  v10 = v8 + 16 * v7;
  v123 = v6;
  if (!*(_DWORD *)(v10 - 4))
  {
    v11 = *(uint64_t **)(v10 - 16);
    if (*v11 > a2)
    {
      v12 = v7 - 1;
      if (v7 == 1)
        goto LABEL_12;
      v13 = v7 - 2;
      v14 = v7;
      while (1)
      {
        v15 = v13;
        if (!v13)
          break;
        v16 = *(_DWORD *)(v8 + 16 * v13 + 12);
        --v14;
        --v13;
        if (v16)
          goto LABEL_91;
      }
      v16 = *(_DWORD *)(v8 + 12);
      if (!v16)
        goto LABEL_12;
      v14 = 1;
LABEL_91:
      v88 = *(_QWORD *)(*(_QWORD *)(v8 + 16 * v15) + 8 * (v16 - 1));
      if (v14 != v12)
      {
        v116 = ~v14 + v7;
        do
        {
          v88 = *(_QWORD *)((v88 & 0xFFFFFFFFFFFFFFC0) + 8 * (v88 & 0x3F));
          --v116;
        }
        while (v116);
      }
      if (!v88)
      {
LABEL_12:
        **(_QWORD **)v5 = a2;
      }
      else
      {
        v89 = v88 & 0xFFFFFFFFFFFFFFC0;
        v90 = v88 & 0x3F;
        v91 = (v88 & 0xFFFFFFFFFFFFFFC0) + 16 * v90;
        if (*(_QWORD *)(v91 + 8) == a2)
        {
          llvm::IntervalMapImpl::Path::moveLeft(v123, v12);
          if (*v11 > a3)
          {
            v86 = *(_DWORD *)(v5 + 16) - 1;
            *(_QWORD *)(v91 | 8) = a3;
            return sub_1C5CBB274(v5, v86, a3);
          }
          a2 = *(_QWORD *)(v89 + 16 * v90);
          v93 = *(_QWORD **)v5;
          v92 = *(_QWORD *)(v5 + 8);
          v94 = v92 + 16 * *(unsigned int *)(v5 + 16);
          v95 = *(_QWORD **)(v94 - 16);
          v96 = *(_DWORD *)(v94 - 8);
          v97 = v96 - 1;
          if (v96 == 1)
          {
            v98 = (_QWORD *)v93[18];
            *v95 = *v98;
            *v98 = v95;
            sub_1C5CBB3B8((_DWORD *)v5, *((_DWORD *)v93 + 34));
          }
          else
          {
            v99 = *(_DWORD *)(v94 - 4);
            if (v99 + 1 != v96)
            {
              v100 = v99;
              do
              {
                *(_OWORD *)&v95[2 * v100] = *(_OWORD *)&v95[2 * v100 + 2];
                ++v100;
              }
              while (v97 != v100);
            }
            v101 = *((unsigned int *)v93 + 34);
            *(_DWORD *)(v92 + 16 * v101 + 8) = v97;
            if ((_DWORD)v101)
            {
              v102 = v92 + 16 * (v101 - 1);
              *(_QWORD *)(*(_QWORD *)v102 + 8 * *(unsigned int *)(v102 + 12)) = *(_QWORD *)(*(_QWORD *)v102
                                                                                            + 8
                                                                                            * *(unsigned int *)(v102 + 12)) & 0xFFFFFFFFFFFFFFC0 | (v96 - 2);
            }
            if (v99 == v97)
            {
              sub_1C5CBB274(v5, v101, v95[2 * (v96 - 2) + 1]);
              v103 = 0;
              v104 = *((unsigned int *)v93 + 34);
              v105 = *(_QWORD *)(v5 + 8);
              v106 = v104 - 1;
              while (1)
              {
                v107 = v103;
                v108 = (v106 + v103);
                if (!(v106 + v103))
                  break;
                v110 = *(_DWORD *)(v105 + 16 * v108 + 8);
                v109 = *(_DWORD *)(v105 + 16 * v108 + 12);
                --v103;
                if (v109 != v110 - 1)
                  goto LABEL_115;
              }
              v108 = 0;
              v110 = *(_DWORD *)(v105 + 8);
              v109 = *(_DWORD *)(v105 + 12);
LABEL_115:
              v113 = v109 + 1;
              *(_DWORD *)(v105 + 16 * v108 + 12) = v113;
              if (v113 != v110)
              {
                v114 = *(_QWORD *)(*(_QWORD *)(v105 + 16 * v108) + 8 * v113);
                if (v107)
                {
                  do
                  {
                    v117 = *(_QWORD *)v123 + 16 * (v104 + v107);
                    *(_QWORD *)v117 = v114 & 0xFFFFFFFFFFFFFFC0;
                    *(_DWORD *)(v117 + 8) = (v114 & 0x3F) + 1;
                    *(_DWORD *)(v117 + 12) = 0;
                    v114 = *(_QWORD *)(v114 & 0xFFFFFFFFFFFFFFC0);
                    v79 = __CFADD__(v107++, 1);
                  }
                  while (!v79);
                  v105 = *(_QWORD *)v123;
                }
                v115 = (unint64_t *)(v105 + 16 * v104);
                *v115 = v114 & 0xFFFFFFFFFFFFFFC0;
                v115[1] = (v114 & 0x3F) + 1;
              }
            }
          }
        }
      }
    }
  }
  v17 = (_DWORD *)(*(_QWORD *)(v5 + 8) + 16 * *(unsigned int *)(v5 + 16));
  v18 = *--v17;
  v19 = *(v17 - 1);
  v20 = v18 == v19;
  result = sub_1C5CBB2C4(*(_QWORD *)(v17 - 3), v17, v19, a2, a3);
  if (result >= 0xC)
  {
    v22 = *(_DWORD *)(v5 + 16);
    v126 = 0u;
    v127 = 0u;
    v23 = *(_QWORD *)(v5 + 8);
    v24 = (v22 - 1);
    v25 = *(unsigned int *)(v23 + 16 * v24 + 12);
    if (v22 == 1)
    {
      v29 = 0;
      LODWORD(v30) = 0;
    }
    else
    {
      v26 = v22 - 2;
      v27 = v22;
      while (1)
      {
        v28 = v26;
        if (!v26)
          break;
        v29 = *(_DWORD *)(v23 + 16 * v26 + 12);
        --v27;
        --v26;
        if (v29)
          goto LABEL_21;
      }
      v29 = *(_DWORD *)(v23 + 12);
      v27 = 1;
      if (!v29)
      {
        v119 = 1;
        LODWORD(v30) = 0;
        goto LABEL_26;
      }
LABEL_21:
      v30 = *(_QWORD *)(*(_QWORD *)(v23 + 16 * v28) + 8 * (v29 - 1));
      if (v27 != (_DWORD)v24)
      {
        v112 = ~v27 + v22;
        do
        {
          v30 = *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFFC0) + 8 * (v30 & 0x3F));
          --v112;
        }
        while (v112);
      }
      if (v30)
      {
        v119 = 0;
        v29 = (v30 & 0x3F) + 1;
        v128[0] = v29;
        v25 = (v29 + v25);
        *(_QWORD *)&v126 = v30 & 0xFFFFFFFFFFFFFFC0;
        LODWORD(v30) = 1;
        goto LABEL_26;
      }
      v29 = 0;
    }
    v119 = 1;
LABEL_26:
    v31 = v23 + 16 * v24;
    v32 = *(_DWORD *)(v31 + 8);
    v128[v30] = v32;
    v33 = v32 + v29;
    v34 = v30 + 1;
    *(_QWORD *)((unint64_t)&v126 | (8 * v30)) = *(_QWORD *)v31;
    if (v22 == 1)
      goto LABEL_36;
    v35 = v22 - 2;
    v36 = v22;
    while (1)
    {
      v37 = v35;
      if (!v35)
        break;
      v38 = *(_DWORD *)(v23 + 16 * v35 + 12);
      v39 = *(_DWORD *)(v23 + 16 * v35 + 8) - 1;
      --v36;
      --v35;
      if (v38 != v39)
        goto LABEL_32;
    }
    v38 = *(_DWORD *)(v23 + 12);
    v39 = *(_DWORD *)(v23 + 8) - 1;
    v36 = 1;
LABEL_32:
    if (v38 == v39)
      goto LABEL_36;
    v40 = *(_QWORD *)(*(_QWORD *)(v23 + 16 * v37) + 8 * (v38 + 1));
    if (v36 != (_DWORD)v24)
    {
      v111 = ~v36 + v22;
      do
      {
        v40 = *(_QWORD *)(v40 & 0xFFFFFFFFFFFFFFC0);
        --v111;
      }
      while (v111);
    }
    if (!v40)
    {
LABEL_36:
      v42 = (v30 + 1);
    }
    else
    {
      v41 = (v40 & 0x3F) + 1;
      v128[v34] = v41;
      v33 += v41;
      *((_QWORD *)&v126 + v34) = v40 & 0xFFFFFFFFFFFFFFC0;
      v42 = v30 | 2;
    }
    v121 = v5;
    v122 = a3;
    if (v33 + 1 <= (11 * v42))
    {
      v120 = 0;
      v47 = v42;
    }
    else
    {
      if ((_DWORD)v42 == 1)
        v43 = 1;
      else
        v43 = (v42 - 1);
      v128[v42] = v128[v43];
      v44 = v42;
      *((_QWORD *)&v126 + v42) = *((_QWORD *)&v126 + v43);
      v128[v43] = 0;
      v45 = *(unint64_t **)(*(_QWORD *)v5 + 144);
      v46 = *v45;
      if (*v45)
        *v45 = *(_QWORD *)v46;
      else
        v46 = sub_1C484358C((uint64_t)(v45 + 1), 192, 6);
      *(_OWORD *)(v46 + 160) = 0u;
      *(_OWORD *)(v46 + 176) = 0u;
      *(_OWORD *)(v46 + 128) = 0u;
      *(_OWORD *)(v46 + 144) = 0u;
      *(_OWORD *)(v46 + 96) = 0u;
      *(_OWORD *)(v46 + 112) = 0u;
      *(_OWORD *)(v46 + 64) = 0u;
      *(_OWORD *)(v46 + 80) = 0u;
      *(_OWORD *)(v46 + 32) = 0u;
      *(_OWORD *)(v46 + 48) = 0u;
      v47 = (v44 + 1);
      *(_OWORD *)v46 = 0u;
      *(_OWORD *)(v46 + 16) = 0u;
      v120 = v43;
      *((_QWORD *)&v126 + v43) = v46;
    }
    v124 = llvm::IntervalMapImpl::distribute((llvm::IntervalMapImpl *)v47, v33, 0xBu, v128, v125, (unsigned int *)v25, 1);
    if ((_DWORD)v47 != 1)
    {
      v118 = v24;
      v48 = v47;
      v49 = v47 - 1;
      do
      {
        v50 = v128[v49];
        v51 = v125[v49];
        if (v50 != v51)
        {
          v52 = v48;
          do
          {
            if (v52 == 1)
              break;
            v53 = v128[v52 - 2];
            v54 = sub_1C5CBBF74(*((__int128 **)&v126 + v49), v50, *(_QWORD *)&v125[2 * v52], v53, v51 - v50);
            v128[v52 - 2] = v53 - v54;
            v50 = v128[v49] + v54;
            v128[v49] = v50;
            --v52;
          }
          while (v50 < v51);
        }
        --v48;
        --v49;
      }
      while (v49);
      v55 = 0;
      v56 = 1;
      LODWORD(v24) = v118;
      do
      {
        v57 = v128[v55];
        v58 = v125[v55];
        if (v57 != v58)
        {
          v59 = v56;
          do
          {
            if ((_DWORD)v47 == v59)
              break;
            v60 = v128[v59];
            v61 = sub_1C5CBBF74(*((__int128 **)&v126 + v59), v60, *((_QWORD *)&v126 + v55), v57, v57 - v58);
            v128[v59] = v61 + v60;
            v57 = v128[v55] - v61;
            v128[v55] = v57;
            ++v59;
          }
          while (v57 < v58);
        }
        ++v55;
        ++v56;
      }
      while (v55 != (_DWORD)v47 - 1);
    }
    if ((v119 & 1) == 0)
      llvm::IntervalMapImpl::Path::moveLeft(v123, v24);
    v62 = 0;
    v63 = v124;
    v5 = v121;
    while (1)
    {
      v64 = *((_QWORD *)&v126 + v62);
      v65 = v125[v62];
      v66 = v65 - 1;
      v67 = *(_QWORD *)(v64 + 16 * v66 + 8);
      if (v120 && v62 == v120)
      {
        LODWORD(v24) = v24 + sub_1C5CBB6F8((uint64_t *)v121, v24, v64 & 0xFFFFFFFFFFFFFFC0 | v66, v67);
      }
      else
      {
        v68 = *(_QWORD *)v123;
        *(_DWORD *)(*(_QWORD *)v123 + 16 * v24 + 8) = v65;
        if ((_DWORD)v24)
          *(_QWORD *)(*(_QWORD *)(v68 + 16 * (v24 - 1))
                    + 8 * *(unsigned int *)(v68 + 16 * (v24 - 1) + 12)) = *(_QWORD *)(*(_QWORD *)(v68 + 16 * (v24 - 1)) + 8 * *(unsigned int *)(v68 + 16 * (v24 - 1) + 12)) & 0xFFFFFFFFFFFFFFC0 | v66;
        sub_1C5CBB274(v121, v24, v67);
      }
      if (v62 + 1 == v47)
        break;
      v69 = 0;
      ++v62;
      v70 = *(_QWORD *)v123;
      while (1)
      {
        v71 = v69;
        if ((_DWORD)v24 + v69 == 1)
          break;
        v72 = (v24 - 1 + v69);
        v74 = *(_DWORD *)(v70 + 16 * v72 + 8);
        v73 = *(_DWORD *)(v70 + 16 * v72 + 12);
        --v69;
        if (v73 != v74 - 1)
          goto LABEL_74;
      }
      v72 = 0;
      v74 = *(_DWORD *)(v70 + 8);
      v73 = *(_DWORD *)(v70 + 12);
LABEL_74:
      v75 = v73 + 1;
      *(_DWORD *)(v70 + 16 * v72 + 12) = v75;
      if (v75 != v74)
      {
        v76 = *(_QWORD *)(*(_QWORD *)(v70 + 16 * v72) + 8 * v75);
        if (v71)
        {
          do
          {
            v78 = *(_QWORD *)v123 + 16 * (v24 + v71);
            *(_QWORD *)v78 = v76 & 0xFFFFFFFFFFFFFFC0;
            *(_DWORD *)(v78 + 8) = (v76 & 0x3F) + 1;
            *(_DWORD *)(v78 + 12) = 0;
            v76 = *(_QWORD *)(v76 & 0xFFFFFFFFFFFFFFC0);
            v79 = __CFADD__(v71++, 1);
          }
          while (!v79);
          v70 = *(_QWORD *)v123;
        }
        v77 = (unint64_t *)(v70 + 16 * v24);
        *v77 = v76 & 0xFFFFFFFFFFFFFFC0;
        v77[1] = (v76 & 0x3F) + 1;
      }
      --v63;
    }
    if ((_DWORD)v62 != (_DWORD)v124)
    {
      do
      {
        llvm::IntervalMapImpl::Path::moveLeft(v123, v24);
        v79 = __CFADD__(v63++, 1);
      }
      while (!v79);
    }
    v80 = *(_QWORD *)(v121 + 8);
    *(_DWORD *)(v80 + 16 * v24 + 12) = HIDWORD(v124);
    v81 = (_DWORD *)(v80 + 16 * *(unsigned int *)(v121 + 16));
    v82 = *--v81;
    v83 = *(v81 - 1);
    v20 = v82 == v83;
    a3 = v122;
    result = sub_1C5CBB2C4(*(_QWORD *)(v81 - 3), v81, v83, a2, v122);
  }
  v84 = *(_DWORD *)(v5 + 16);
  v85 = *(_QWORD *)(v5 + 8);
  v86 = v84 - 1;
  *(_DWORD *)(v85 + 16 * (v84 - 1) + 8) = result;
  if (v84 != 1)
  {
    v87 = v85 + 16 * (v84 - 2);
    *(_QWORD *)(*(_QWORD *)v87 + 8 * *(unsigned int *)(v87 + 12)) = *(_QWORD *)(*(_QWORD *)v87
                                                                                + 8 * *(unsigned int *)(v87 + 12)) & 0xFFFFFFFFFFFFFFC0 | (result - 1);
  }
  if (v20)
    return sub_1C5CBB274(v5, v86, a3);
  return result;
}

uint64_t sub_1C5CBB274(uint64_t result, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  if (a2)
  {
    v3 = *(_QWORD *)(result + 8);
    v4 = 16 * a2;
    while (1)
    {
      v5 = v4 - 16;
      if (v4 == 16)
        break;
      v6 = v3 + v4;
      v7 = *(_QWORD *)(v6 - 16);
      v9 = v6 - 8;
      LODWORD(v6) = *(_DWORD *)(v6 - 8);
      v8 = *(unsigned int *)(v9 + 4);
      *(_QWORD *)(v7 + 8 * v8 + 96) = a3;
      LODWORD(v7) = v6 - 1;
      v4 = v5;
      if ((_DWORD)v8 != (_DWORD)v7)
        return result;
    }
    *(_QWORD *)(*(_QWORD *)v3 + 8 * *(unsigned int *)(v3 + 12) + 64) = a3;
  }
  return result;
}

uint64_t sub_1C5CBB2C4(uint64_t a1, _DWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  unsigned int v11;

  v5 = *a2;
  if (!(_DWORD)v5)
  {
LABEL_9:
    if ((_DWORD)v5 == (_DWORD)a3)
    {
      v9 = (_QWORD *)(a1 + 16 * a3);
      *v9 = a4;
LABEL_19:
      v9[1] = a5;
      return (a3 + 1);
    }
    v10 = (_QWORD *)(a1 + 16 * v5);
    if (*v10 == a5)
    {
      *v10 = a4;
      return a3;
    }
    if ((_DWORD)a3 != 11)
    {
      v11 = a3;
      do
      {
        *(_OWORD *)(a1 + 16 * v11) = *(_OWORD *)(a1 + 16 * (v11 - 1));
        --v11;
      }
      while ((_DWORD)v5 != v11);
      *v10 = a4;
      v9 = (_QWORD *)(a1 + 16 * v5);
      goto LABEL_19;
    }
    return 12;
  }
  v6 = a1 + 16 * (v5 - 1);
  v8 = *(_QWORD *)(v6 + 8);
  v7 = (_QWORD *)(v6 + 8);
  if (v8 != a4)
  {
    if ((_DWORD)v5 == 11)
      return 12;
    goto LABEL_9;
  }
  *a2 = v5 - 1;
  if ((_DWORD)v5 == (_DWORD)a3 || *(_QWORD *)(a1 + 16 * v5) != a5)
  {
    *v7 = a5;
  }
  else
  {
    *v7 = *(_QWORD *)(a1 + 16 * v5 + 8);
    if ((_DWORD)v5 + 1 != (_DWORD)a3)
    {
      do
      {
        *(_OWORD *)(a1 + 16 * v5) = *(_OWORD *)(a1 + 16 * (v5 + 1));
        LODWORD(v5) = v5 + 1;
      }
      while ((_DWORD)a3 - 1 != (_DWORD)v5);
    }
    return (a3 - 1);
  }
  return a3;
}

_DWORD *sub_1C5CBB3B8(_DWORD *result, unsigned int a2)
{
  _DWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  _DWORD *v10;
  int v11;
  int v12;
  _QWORD *v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  int v30;
  unsigned int v31;
  uint64_t v32;
  unint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v3 = result;
  v5 = *(_QWORD *)result;
  v4 = *((_QWORD *)result + 1);
  v6 = a2 - 1;
  if (a2 == 1)
  {
    v14 = *(_DWORD *)(v4 + 12);
    v15 = *(_DWORD *)(v5 + 140);
    if (v14 + 1 != v15)
    {
      do
      {
        *(_QWORD *)(v5 + 8 + 8 * v14) = *(_QWORD *)(v5 + 8 + 8 * (v14 + 1));
        *(_QWORD *)(v5 + 72 + 8 * v14) = *(_QWORD *)(v5 + 72 + 8 * (v14 + 1));
        ++v14;
      }
      while (v15 - 1 != v14);
    }
    v16 = v15 - 1;
    *(_DWORD *)(v5 + 140) = v16;
    *(_DWORD *)(v4 + 8) = v16;
    if (!v16)
    {
      *(_OWORD *)(v5 + 124) = 0u;
      *(_OWORD *)(v5 + 96) = 0u;
      *(_OWORD *)(v5 + 112) = 0u;
      *(_OWORD *)(v5 + 64) = 0u;
      *(_OWORD *)(v5 + 80) = 0u;
      *(_OWORD *)(v5 + 32) = 0u;
      *(_OWORD *)(v5 + 48) = 0u;
      *(_OWORD *)v5 = 0u;
      *(_OWORD *)(v5 + 16) = 0u;
      return sub_1C5CBB618(result, 0);
    }
  }
  else
  {
    v7 = v4 + 16 * v6;
    v8 = *(_QWORD **)(v4 + 16 * (a2 - 1));
    v11 = *(_DWORD *)(v7 + 8);
    v10 = (_DWORD *)(v7 + 8);
    v9 = v11;
    v12 = v11 - 1;
    if (v11 == 1)
    {
      v13 = *(_QWORD **)(v5 + 144);
      *v8 = *v13;
      *v13 = v8;
      result = (_DWORD *)sub_1C5CBB3B8(result, a2 - 1);
    }
    else
    {
      v17 = *(_DWORD *)(v4 + 16 * v6 + 12);
      if (v17 + 1 != v9)
      {
        v18 = *(_DWORD *)(v4 + 16 * v6 + 12);
        do
        {
          v8[v18] = v8[v18 + 1];
          v8[v18 + 12] = v8[v18 + 13];
          ++v18;
        }
        while (v12 != v18);
      }
      *v10 = v12;
      v19 = a2 - 2;
      v20 = (uint64_t *)(v4 + 16 * (a2 - 2));
      v21 = *((unsigned int *)v20 + 3);
      v22 = *v20;
      v23 = *(_QWORD *)(*v20 + 8 * v21);
      v24 = (v9 - 2);
      *(_QWORD *)(v22 + 8 * v21) = v23 & 0xFFFFFFFFFFFFFFC0 | v24;
      if (v17 == v12)
      {
        result = (_DWORD *)sub_1C5CBB274((uint64_t)result, a2 - 1, v8[v24 + 12]);
        v25 = 0;
        v26 = *((_QWORD *)v3 + 1);
        while (1)
        {
          v27 = v25;
          v28 = v19 + v25;
          if (!(v19 + v25))
            break;
          v30 = *(_DWORD *)(v26 + 16 * v28 + 8);
          v29 = *(_DWORD *)(v26 + 16 * v28 + 12);
          --v25;
          if (v29 != v30 - 1)
            goto LABEL_17;
        }
        v28 = 0;
        v30 = *(_DWORD *)(v26 + 8);
        v29 = *(_DWORD *)(v26 + 12);
LABEL_17:
        v31 = v29 + 1;
        *(_DWORD *)(v26 + 16 * v28 + 12) = v31;
        if (v31 != v30)
        {
          v32 = *(_QWORD *)(*(_QWORD *)(v26 + 16 * v28) + 8 * v31);
          if (v27)
          {
            do
            {
              v37 = *((_QWORD *)v3 + 1) + 16 * (v6 + v27);
              *(_QWORD *)v37 = v32 & 0xFFFFFFFFFFFFFFC0;
              *(_DWORD *)(v37 + 8) = (v32 & 0x3F) + 1;
              *(_DWORD *)(v37 + 12) = 0;
              v32 = *(_QWORD *)(v32 & 0xFFFFFFFFFFFFFFC0);
            }
            while (!__CFADD__(v27++, 1));
            v26 = *((_QWORD *)v3 + 1);
          }
          v33 = (unint64_t *)(v26 + 16 * v6);
          *v33 = v32 & 0xFFFFFFFFFFFFFFC0;
          v33[1] = (v32 & 0x3F) + 1;
        }
      }
    }
  }
  if (v3[4])
  {
    v34 = *((_QWORD *)v3 + 1);
    if (*(_DWORD *)(v34 + 12) < *(_DWORD *)(v34 + 8))
    {
      v35 = *(_QWORD *)(*(_QWORD *)(v34 + 16 * v6)
                      + 8 * *(unsigned int *)(v34 + 16 * v6 + 12));
      v36 = v34 + 16 * a2;
      *(_QWORD *)v36 = v35 & 0xFFFFFFFFFFFFFFC0;
      *(_DWORD *)(v36 + 8) = (v35 & 0x3F) + 1;
      *(_DWORD *)(*((_QWORD *)v3 + 1) + 16 * a2 + 12) = 0;
    }
  }
  return result;
}

_DWORD *sub_1C5CBB618(_DWORD *result, uint64_t a2)
{
  _DWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  v3 = result;
  v4 = result + 2;
  v5 = *(_QWORD *)result;
  if (*(_DWORD *)(*(_QWORD *)result + 136))
  {
    v6 = v5 + 8;
    v7 = *(unsigned int *)(v5 + 140);
    result[4] = 0;
    v8 = result + 4;
    if (result[5])
    {
      v9 = 0;
    }
    else
    {
      result = llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)(result + 2), (uint64_t)(result + 6), 1uLL, 16);
      v9 = v3[4];
    }
    v10 = v7 | (a2 << 32);
    v11 = (_QWORD *)(*v4 + 16 * v9);
    *v11 = v6;
  }
  else
  {
    v12 = *(unsigned int *)(v5 + 140);
    result[4] = 0;
    v8 = result + 4;
    if (result[5])
    {
      v13 = 0;
    }
    else
    {
      result = llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)(result + 2), (uint64_t)(result + 6), 1uLL, 16);
      v13 = v3[4];
    }
    v10 = v12 | (a2 << 32);
    v11 = (_QWORD *)(*v4 + 16 * v13);
    *v11 = v5;
  }
  v11[1] = v10;
  ++*v8;
  return result;
}

BOOL sub_1C5CBB6F8(uint64_t *a1, int a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t *v21;
  _QWORD *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unint64_t v31;
  unsigned int v32;
  unsigned int v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  unsigned int v38;
  unint64_t v39;
  int v40;
  uint64_t v41;
  int v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  unint64_t *v47;
  unint64_t v48;
  int v49;
  unint64_t v50;
  unsigned int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  unsigned int v56;
  uint64_t v57;
  unsigned int v58;
  int v59;
  uint64_t v60;
  int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  int v81;
  int v82;
  unsigned int v83;
  uint64_t v84;
  unint64_t *v85;
  uint64_t v86;
  BOOL v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  _DWORD *v91;
  unsigned int v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  int v98;
  int v99;
  char v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unint64_t v104;
  uint64_t v105;
  llvm::IntervalMapImpl::Path *v106;
  uint64_t v107;
  unsigned int v108;
  unsigned int v109[4];
  __int128 v110;
  __int128 v111;
  _DWORD v112[4];
  uint64_t v113;

  v4 = a4;
  v5 = a3;
  v6 = a2;
  v7 = (uint64_t)a1;
  v113 = *MEMORY[0x1E0C80C00];
  v8 = *a1;
  v106 = (llvm::IntervalMapImpl::Path *)(a1 + 1);
  v9 = a2 == 1;
  if (a2 == 1)
  {
    v10 = *(_DWORD *)(v8 + 140);
    if (v10 <= 7)
    {
      v11 = v8 + 8;
      v12 = *(_QWORD *)v106;
      v13 = *(unsigned int *)(*(_QWORD *)v106 + 12);
      if (v10 != (_DWORD)v13)
      {
        v14 = *(_DWORD *)(v8 + 140);
        do
        {
          *(_QWORD *)(v11 + 8 * v14) = *(_QWORD *)(v11 + 8 * (v14 - 1));
          *(_QWORD *)(v8 + 72 + 8 * v14) = *(_QWORD *)(v8 + 72 + 8 * (v14 - 1));
          --v14;
        }
        while ((_DWORD)v13 != v14);
      }
      v9 = 0;
      v15 = (_QWORD *)(v11 + 8 * v13);
      *v15 = a3;
      v15[8] = a4;
      *(_DWORD *)(v8 + 140) = v10 + 1;
      *(_DWORD *)(v12 + 8) = v10 + 1;
      v16 = *(_QWORD *)(*(_QWORD *)v12 + 8 * v13);
      *(_QWORD *)(v12 + 16) = v16 & 0xFFFFFFFFFFFFFFC0;
      *(_DWORD *)(v12 + 24) = (v16 & 0x3F) + 1;
      return v9;
    }
    v17 = *(unsigned int *)(*(_QWORD *)v106 + 12);
    v18 = v10 - 1;
    v19 = *(unint64_t **)(v8 + 144);
    v20 = *v19;
    if (*v19)
      *v19 = *(_QWORD *)v20;
    else
      v20 = sub_1C484358C((uint64_t)(v19 + 1), 192, 6);
    *(_OWORD *)(v20 + 160) = 0u;
    *(_OWORD *)(v20 + 176) = 0u;
    *(_OWORD *)(v20 + 128) = 0u;
    *(_OWORD *)(v20 + 144) = 0u;
    *(_OWORD *)(v20 + 96) = 0u;
    *(_OWORD *)(v20 + 112) = 0u;
    *(_OWORD *)(v20 + 64) = 0u;
    *(_OWORD *)(v20 + 80) = 0u;
    *(_OWORD *)(v20 + 32) = 0u;
    *(_OWORD *)(v20 + 48) = 0u;
    v21 = (uint64_t *)(v8 + 72);
    v22 = (_QWORD *)v20;
    *(_OWORD *)v20 = 0u;
    *(_OWORD *)(v20 + 16) = 0u;
    do
    {
      *v22 = *(v21 - 8);
      v23 = *v21++;
      v22[12] = v23;
      ++v22;
      --v10;
    }
    while (v10);
    *(_QWORD *)(v8 + 72) = *(_QWORD *)((v20 & 0xFFFFFFFFFFFFFFC0 | v18 & 0xFFFFFFFFFFFFFFC0) + 8 * v18 + 0x60);
    *(_QWORD *)(v8 + 8) = v20 & 0xFFFFFFFFFFFFFFC0 | v18;
    ++*(_DWORD *)(v8 + 136);
    *(_DWORD *)(v8 + 140) = 1;
    v24 = *(_QWORD **)v106;
    *v24 = v8 + 8;
    v24[1] = 1;
    v25 = *(_QWORD *)v106 + 16;
    v26 = *(_QWORD *)(**(_QWORD **)v106 + 8 * *(unsigned int *)(*(_QWORD *)v106 + 12));
    *(_QWORD *)&v110 = v26 & 0xFFFFFFFFFFFFFFC0;
    *((_QWORD *)&v110 + 1) = (v26 & 0x3F | (v17 << 32)) + 1;
    sub_1C5DF93CC((uint64_t)v106, v25, &v110);
    v6 = 2;
  }
  v27 = (v6 - 1);
  if (!*(_DWORD *)(v7 + 16)
    || (v28 = *(_QWORD *)v106, *(_DWORD *)(*(_QWORD *)v106 + 12) >= *(_DWORD *)(*(_QWORD *)v106 + 8)))
  {
    llvm::IntervalMapImpl::Path::moveLeft(v106, v6 - 1);
    v28 = *(_QWORD *)v106;
    ++*(_DWORD *)(*(_QWORD *)v106 + 16 * v27 + 12);
  }
  v29 = v28 + 16 * v27;
  v30 = *(_DWORD *)(v29 + 8);
  if (v30 == 12)
  {
    v110 = 0u;
    v111 = 0u;
    v31 = *(unsigned int *)(v29 + 12);
    v32 = v6 - 2;
    v33 = v6 - 2;
    v34 = v6;
    v103 = v4;
    v101 = v5;
    while (1)
    {
      v35 = v33;
      if (!v33)
        break;
      v36 = *(_DWORD *)(v28 + 16 * v33 + 12);
      --v34;
      --v33;
      if (v36)
        goto LABEL_23;
    }
    v36 = *(_DWORD *)(v28 + 12);
    v34 = 1;
    if (!v36)
    {
      LODWORD(v37) = 0;
      goto LABEL_27;
    }
LABEL_23:
    v37 = *(_QWORD *)(*(_QWORD *)(v28 + 16 * v35) + 8 * (v36 - 1));
    if (v34 != (_DWORD)v27)
    {
      v99 = ~v34 + v6;
      do
      {
        v37 = *(_QWORD *)((v37 & 0xFFFFFFFFFFFFFFC0) + 8 * (v37 & 0x3F));
        --v99;
      }
      while (v99);
    }
    if (v37)
    {
      LOBYTE(v34) = 0;
      v36 = (v37 & 0x3F) + 1;
      v112[0] = v36;
      v31 = (v36 + v31);
      *(_QWORD *)&v110 = v37 & 0xFFFFFFFFFFFFFFC0;
      LODWORD(v37) = 1;
    }
    else
    {
      v36 = 0;
      LOBYTE(v34) = 1;
    }
LABEL_27:
    v112[v37] = 12;
    v38 = v36 + 12;
    v39 = (v37 + 1);
    *(_QWORD *)((unint64_t)&v110 | (8 * v37)) = *(_QWORD *)(v28 + 16 * v27);
    v40 = v6;
    while (1)
    {
      v41 = v32;
      if (!v32)
        break;
      v42 = *(_DWORD *)(v28 + 16 * v32 + 12);
      v43 = *(_DWORD *)(v28 + 16 * v32 + 8) - 1;
      --v40;
      --v32;
      if (v42 != v43)
        goto LABEL_32;
    }
    v42 = *(_DWORD *)(v28 + 12);
    v43 = *(_DWORD *)(v28 + 8) - 1;
    v40 = 1;
LABEL_32:
    if (v42 != v43)
    {
      v44 = *(_QWORD *)(*(_QWORD *)(v28 + 16 * v41) + 8 * (v42 + 1));
      if (v40 != (_DWORD)v27)
      {
        v98 = ~v40 + v6;
        do
        {
          v44 = *(_QWORD *)(v44 & 0xFFFFFFFFFFFFFFC0);
          --v98;
        }
        while (v98);
      }
      if (v44)
      {
        v45 = (v44 & 0x3F) + 1;
        v112[v39] = v45;
        v38 += v45;
        *((_QWORD *)&v110 + v39) = v44 & 0xFFFFFFFFFFFFFFC0;
        v39 = v37 | 2;
      }
    }
    v105 = (v6 - 1);
    v102 = v7;
    if (v38 >= 12 * (int)v39)
    {
      if ((_DWORD)v39 == 1)
        v46 = 1;
      else
        v46 = (v39 - 1);
      v112[v39] = v112[v46];
      *((_QWORD *)&v110 + v39) = *((_QWORD *)&v110 + v46);
      v107 = v46;
      v112[v46] = 0;
      v47 = *(unint64_t **)(*(_QWORD *)v7 + 144);
      v48 = *v47;
      if (*v47)
      {
        *v47 = *(_QWORD *)v48;
      }
      else
      {
        v49 = v39;
        v48 = sub_1C484358C((uint64_t)(v47 + 1), 192, 6);
        LODWORD(v39) = v49;
      }
      *(_OWORD *)(v48 + 160) = 0u;
      *(_OWORD *)(v48 + 176) = 0u;
      *(_OWORD *)(v48 + 128) = 0u;
      *(_OWORD *)(v48 + 144) = 0u;
      *(_OWORD *)(v48 + 96) = 0u;
      *(_OWORD *)(v48 + 112) = 0u;
      *(_OWORD *)(v48 + 64) = 0u;
      *(_OWORD *)(v48 + 80) = 0u;
      *(_OWORD *)(v48 + 32) = 0u;
      *(_OWORD *)(v48 + 48) = 0u;
      v39 = (v39 + 1);
      *(_OWORD *)v48 = 0u;
      *(_OWORD *)(v48 + 16) = 0u;
      *((_QWORD *)&v110 + v107) = v48;
    }
    else
    {
      LODWORD(v107) = 0;
    }
    v108 = v39;
    v50 = llvm::IntervalMapImpl::distribute((llvm::IntervalMapImpl *)v39, v38, 0xCu, v112, v109, (unsigned int *)v31, 1);
    v51 = v108;
    v52 = v50;
    v104 = v50;
    if (v108 != 1)
    {
      v100 = v34;
      v53 = v108;
      v54 = v108 - 1;
      do
      {
        v55 = v112[v54];
        v56 = v109[v54];
        if (v55 != v56)
        {
          v57 = v53;
          do
          {
            if (v57 == 1)
              break;
            v58 = v112[v57 - 2];
            v59 = sub_1C5100B94(*((_QWORD **)&v110 + v54), v55, *(_QWORD *)&v109[2 * v57], v58, v56 - v55);
            v112[v57 - 2] = v58 - v59;
            v55 = v112[v54] + v59;
            v112[v54] = v55;
            --v57;
          }
          while (v55 < v56);
        }
        --v53;
        --v54;
      }
      while (v54);
      v60 = 0;
      v61 = 1;
      LOBYTE(v34) = v100;
      v52 = v104;
      v51 = v108;
      do
      {
        v62 = v112[v60];
        v63 = v109[v60];
        if (v62 != v63)
        {
          v64 = v61;
          do
          {
            if (v51 == v64)
              break;
            v65 = v112[v64];
            v66 = sub_1C5100B94(*((_QWORD **)&v110 + v64), v65, *((_QWORD *)&v110 + v60), v62, v62 - v63);
            v51 = v108;
            v112[v64] = v66 + v65;
            v62 = v112[v60] - v66;
            v112[v60] = v62;
            ++v64;
          }
          while (v62 < v63);
        }
        ++v60;
        ++v61;
      }
      while (v60 != v108 - 1);
    }
    if ((v34 & 1) == 0)
    {
      llvm::IntervalMapImpl::Path::moveLeft(v106, v105);
      v51 = v108;
    }
    v67 = 0;
    v9 = 0;
    v68 = v52;
    v69 = v105;
    v70 = v51;
    v7 = v102;
    while (1)
    {
      v71 = *((_QWORD *)&v110 + v67);
      v72 = v109[v67];
      v73 = v72 - 1;
      v74 = *(_QWORD *)(v71 + 8 * v73 + 96);
      if ((_DWORD)v107 && v67 == v107)
      {
        v75 = sub_1C5CBB6F8(v102, v69, v71 & 0xFFFFFFFFFFFFFFC0 | v73, v74);
        v9 = v75;
        v69 = (v69 + v75);
      }
      else
      {
        v76 = *(_QWORD *)v106;
        *(_DWORD *)(*(_QWORD *)v106 + 16 * v69 + 8) = v72;
        if ((_DWORD)v69)
          *(_QWORD *)(*(_QWORD *)(v76 + 16 * (v69 - 1))
                    + 8 * *(unsigned int *)(v76 + 16 * (v69 - 1) + 12)) = *(_QWORD *)(*(_QWORD *)(v76 + 16 * (v69 - 1)) + 8 * *(unsigned int *)(v76 + 16 * (v69 - 1) + 12)) & 0xFFFFFFFFFFFFFFC0 | v73;
        sub_1C5CBB274(v102, v69, v74);
      }
      if (v67 + 1 == v70)
        break;
      v77 = 0;
      ++v67;
      v78 = *(_QWORD *)v106;
      while (1)
      {
        v79 = v77;
        if ((_DWORD)v69 + v77 == 1)
          break;
        v80 = (v69 - 1 + v77);
        v82 = *(_DWORD *)(v78 + 16 * v80 + 8);
        v81 = *(_DWORD *)(v78 + 16 * v80 + 12);
        --v77;
        if (v81 != v82 - 1)
          goto LABEL_73;
      }
      v80 = 0;
      v82 = *(_DWORD *)(v78 + 8);
      v81 = *(_DWORD *)(v78 + 12);
LABEL_73:
      v83 = v81 + 1;
      *(_DWORD *)(v78 + 16 * v80 + 12) = v83;
      if (v83 != v82)
      {
        v84 = *(_QWORD *)(*(_QWORD *)(v78 + 16 * v80) + 8 * v83);
        if (v79)
        {
          do
          {
            v86 = *(_QWORD *)v106 + 16 * (v69 + v79);
            *(_QWORD *)v86 = v84 & 0xFFFFFFFFFFFFFFC0;
            *(_DWORD *)(v86 + 8) = (v84 & 0x3F) + 1;
            *(_DWORD *)(v86 + 12) = 0;
            v84 = *(_QWORD *)(v84 & 0xFFFFFFFFFFFFFFC0);
            v87 = __CFADD__(v79++, 1);
          }
          while (!v87);
          v78 = *(_QWORD *)v106;
        }
        v85 = (unint64_t *)(v78 + 16 * v69);
        *v85 = v84 & 0xFFFFFFFFFFFFFFC0;
        v85[1] = (v84 & 0x3F) + 1;
      }
      --v68;
    }
    if ((_DWORD)v67 != (_DWORD)v104)
    {
      do
      {
        llvm::IntervalMapImpl::Path::moveLeft(v106, v69);
        v87 = __CFADD__(v68++, 1);
      }
      while (!v87);
    }
    v28 = *(_QWORD *)v106;
    *(_DWORD *)(*(_QWORD *)v106 + 16 * v69 + 12) = HIDWORD(v104);
    v27 = v105 + v9;
    v30 = *(_DWORD *)(v28 + 16 * v27 + 8);
    v4 = v103;
    v5 = v101;
  }
  v88 = (uint64_t *)(v28 + 16 * v27);
  v89 = *v88;
  v90 = *((unsigned int *)v88 + 3);
  v91 = v88 + 1;
  if (v30 != (_DWORD)v90)
  {
    v92 = v30;
    do
    {
      *(_QWORD *)(v89 + 8 * v92) = *(_QWORD *)(v89 + 8 * (v92 - 1));
      *(_QWORD *)(v89 + 96 + 8 * v92) = *(_QWORD *)(v89 + 96 + 8 * (v92 - 1));
      --v92;
    }
    while ((_DWORD)v90 != v92);
  }
  v93 = (_QWORD *)(v89 + 8 * v90);
  *v93 = v5;
  v93[12] = v4;
  *v91 = v30 + 1;
  if ((_DWORD)v27)
  {
    v94 = v28 + 16 * (v27 - 1);
    *(_QWORD *)(*(_QWORD *)v94 + 8 * *(unsigned int *)(v94 + 12)) = *(_QWORD *)(*(_QWORD *)v94
                                                                                + 8 * *(unsigned int *)(v94 + 12)) & 0xFFFFFFFFFFFFFFC0 | v30;
  }
  if (v30 == (_DWORD)v90)
  {
    sub_1C5CBB274(v7, v27, v4);
    v28 = *(_QWORD *)(v7 + 8);
    v89 = *(_QWORD *)(v28 + 16 * v27);
  }
  v95 = *(_QWORD *)(v89 + 8 * *(unsigned int *)(v28 + 16 * v27 + 12));
  v96 = v28 + 16 * (v27 + 1);
  *(_QWORD *)v96 = v95 & 0xFFFFFFFFFFFFFFC0;
  *(_DWORD *)(v96 + 8) = (v95 & 0x3F) + 1;
  return v9;
}

uint64_t sub_1C5CBBF74(__int128 *a1, unsigned int a2, uint64_t a3, unsigned int a4, int a5)
{
  uint64_t v5;
  unsigned int v6;
  __int128 *v7;
  __int128 v8;
  int v9;
  unsigned int v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  __int128 v15;
  __int128 *v16;
  int v17;

  if (a5 < 1)
  {
    v11 = 11 - a4;
    if (-a5 < a2)
      LODWORD(v12) = -a5;
    else
      LODWORD(v12) = a2;
    if (v11 >= v12)
      v12 = v12;
    else
      v12 = v11;
    if ((_DWORD)v12)
    {
      v13 = a1;
      v14 = v12;
      do
      {
        v15 = *v13++;
        *(_OWORD *)(a3 + 16 * a4++) = v15;
        --v14;
      }
      while (v14);
    }
    if ((_DWORD)v12 != a2)
    {
      v16 = a1;
      v17 = v12;
      do
        *v16++ = a1[v17++];
      while (a2 != v17);
    }
    return -(int)v12;
  }
  else
  {
    LODWORD(v5) = 11 - a2;
    if (a4 >= a5)
      v6 = a5;
    else
      v6 = a4;
    if (v5 >= v6)
      v5 = v6;
    else
      v5 = v5;
    if (a2)
    {
      v7 = &a1[a2 - 1];
      do
      {
        v8 = *v7--;
        a1[(_DWORD)v5 - 1 + a2--] = v8;
      }
      while (a2);
    }
    if ((_DWORD)v5)
    {
      v9 = -(int)v5;
      do
        *a1++ = *(_OWORD *)(a3 + 16 * (a4 + v9));
      while (!__CFADD__(v9++, 1));
    }
  }
  return v5;
}

uint64_t sub_1C5CBC044(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int *v8;
  uint64_t v9;
  uint64_t *v10;
  int v11;
  BOOL v12;
  BOOL v13;
  char v14;
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  unsigned int v19;
  BOOL v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unsigned __int8 *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD v36[3];
  char v37;
  _OWORD v38[3];
  char v39;
  uint64_t v40;

  v2 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(v2 + 32);
  if (-858993459 * ((unint64_t)(a2 - v3) >> 3))
    return result;
  if (*(_WORD *)(v2 + 24) != 254)
    return result;
  v35 = 0;
  *(_QWORD *)&v36[0] = 0;
  DWORD2(v36[0]) = 0;
  if ((*(_WORD *)(*(_QWORD *)(v2 + 96) + 36) & 0xF00) != 0)
    return result;
  if ((*(_BYTE *)(v2 + 26) & 8) != 0)
    return result;
  v4 = *(unsigned __int16 *)(v2 + 26);
  if ((v4 & 0x380) != 0)
    return result;
  v5 = result;
  v6 = *(_QWORD *)result;
  if (((v4 ^ *(unsigned __int8 *)(***(_QWORD ***)result + 26)) & 0x10) != 0)
    return result;
  v7 = *(_QWORD *)(v3 + 40);
  if (*(_WORD *)(v7 + 24) == 216)
  {
    do
    {
      v8 = *(unsigned int **)(v7 + 32);
      v7 = *(_QWORD *)v8;
    }
    while (*(_WORD *)(*(_QWORD *)v8 + 24) == 216);
    v9 = v8[2];
  }
  else
  {
    v9 = *(unsigned int *)(v3 + 48);
  }
  v10 = *(uint64_t **)(v6 + 24);
  result = *(_QWORD *)(v6 + 8);
  v11 = *(unsigned __int8 *)result;
  if (!*(_BYTE *)result)
  {
    v17 = *(_QWORD *)(result + 8);
    if ((*(_DWORD *)(v17 + 8) & 0xFE) == 0x12)
      v18 = *(unsigned __int8 *)(**(_QWORD **)(v17 + 16) + 8);
    else
      v18 = *(_DWORD *)(v17 + 8);
    if (v18 != 13)
      goto LABEL_18;
LABEL_36:
    result = sub_1C6329824((llvm::EVT *)result, *(_QWORD *)(v2 + 80), *(_QWORD *)(v2 + 88));
    v14 = result ^ 1;
    goto LABEL_26;
  }
  v12 = (v11 - 120) >= 0x20 && (v11 - 2) >= 6;
  if (!v12 || (v11 - 15) < 0x3C)
    goto LABEL_36;
LABEL_18:
  if (*(unsigned __int8 *)(v2 + 80) == *(unsigned __int8 *)result)
  {
    if (*(_BYTE *)(v2 + 80))
      v13 = 1;
    else
      v13 = *(_QWORD *)(v2 + 88) == *(_QWORD *)(result + 8);
    v14 = !v13;
  }
  else
  {
    v14 = 1;
  }
LABEL_26:
  v15 = **(_DWORD **)(v6 + 16);
  if (v15 == 1)
  {
    if ((v14 & 1) != 0)
      return result;
    v19 = *(unsigned __int16 *)(v7 + 24);
    v20 = v19 > 0x24;
    v21 = (1 << v19) & 0x1800001800;
    if (v20 || v21 == 0)
      return result;
    goto LABEL_42;
  }
  if (v15 == 2)
  {
    if ((*(_WORD *)(v2 + 26) & 0x400) != 0)
      return result;
    result = sub_1C6329824(*(llvm::EVT **)(v6 + 8), *(_QWORD *)(*(_QWORD *)(v7 + 40) + 16 * v9), *(_QWORD *)(*(_QWORD *)(v7 + 40) + 16 * v9 + 8));
    if (!(_DWORD)result)
      return result;
    v16 = *(unsigned __int16 *)(v7 + 24);
    if (v16 != 148 && v16 != 151)
      return result;
    goto LABEL_42;
  }
  if ((v14 & 1) == 0)
  {
    if (v7)
    {
      if (*(_WORD *)(v7 + 24) == 253)
      {
        result = sub_1C5D657F8(v7, *v10, (uint64_t)v38);
        v29 = *(unsigned __int8 **)(v6 + 32);
        if (*v29 == *(unsigned __int8 *)(v7 + 80) && (*v29 || *((_QWORD *)v29 + 1) == *(_QWORD *)(v7 + 88)))
        {
          v30 = *(_QWORD *)(v7 + 48);
          if (v30)
          {
            v31 = 1;
            do
            {
              if (!*(_DWORD *)(v30 + 8))
              {
                if (!v31)
                  return result;
                --v31;
              }
              v30 = *(_QWORD *)(v30 + 32);
            }
            while (v30);
            if (!v31 && (*(_WORD *)(*(_QWORD *)(v7 + 96) + 36) & 0xF00) == 0 && (*(_BYTE *)(v7 + 26) & 8) == 0)
            {
              v32 = *(unsigned __int16 *)(v7 + 26);
              if ((v32 & 0x380) == 0 && ((v32 ^ *(unsigned __int8 *)(**(_QWORD **)(v6 + 40) + 26)) & 0x10) == 0)
              {
                v33 = *(uint64_t **)(v6 + 48);
                v34 = *v10;
                v40 = 0;
                result = sub_1C5D653D4(v33, (uint64_t *)v38, v34, &v40);
                if ((result & 1) != 0)
                {
LABEL_42:
                  sub_1C5D657F8(v2, *v10, (uint64_t)v38);
                  v36[0] = v38[0];
                  v36[1] = v38[1];
                  v36[2] = v38[2];
                  v37 = v39;
                  result = sub_1C5D653D4(*(uint64_t **)(v6 + 56), (uint64_t *)v36, *v10, &v35);
                  if ((_DWORD)result)
                  {
                    v23 = **(_QWORD **)(v5 + 16);
                    v24 = **(_QWORD **)(v5 + 8);
                    *(_QWORD *)&v38[0] = 0;
                    result = sub_1C617A1AC(*(_QWORD *)(v24 + 1416), *(_DWORD *)(v24 + 1432), v2, v38);
                    if (!(_DWORD)result
                      || *(_QWORD *)&v38[0] == *(_QWORD *)(v24 + 1416) + 24 * *(unsigned int *)(v24 + 1432)
                      || *(_QWORD *)(*(_QWORD *)&v38[0] + 8) != v23
                      || *(_DWORD *)(*(_QWORD *)&v38[0] + 16) <= dword_1ED823FB8)
                    {
                      v25 = *(_QWORD *)(v5 + 24);
                      v26 = v35;
                      v27 = *(unsigned int *)(v25 + 8);
                      if (v27 >= *(_DWORD *)(v25 + 12))
                      {
                        result = (uint64_t)llvm::SmallVectorBase<unsigned int>::grow_pod(v25, v25 + 16, v27 + 1, 16);
                        LODWORD(v27) = *(_DWORD *)(v25 + 8);
                      }
                      v28 = (uint64_t *)(*(_QWORD *)v25 + 16 * v27);
                      *v28 = v2;
                      v28[1] = v26;
                      ++*(_DWORD *)(v25 + 8);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_1C5CBC3E8(uint64_t a1, _QWORD *a2, uint64_t a3, char a4)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  __int128 *v19;
  uint64_t v20;
  __int128 *v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  __int128 *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 *v36;
  __int128 *v37;
  __int128 *v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  _QWORD *v42;
  BOOL v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  int64_t v53;
  int64_t v54;
  int64_t v55;
  uint64_t v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _OWORD *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;

__int128 *sub_1C5CBCB0C(__int128 *result, __int128 *a2, __int128 *a3)
{
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v3 = *((_QWORD *)a2 + 1);
  v4 = *((_QWORD *)a3 + 1);
  if (v3 >= *((_QWORD *)result + 1))
  {
    if (v4 < v3)
    {
      v6 = *a2;
      *a2 = *a3;
      *a3 = v6;
      if (*((_QWORD *)a2 + 1) < *((_QWORD *)result + 1))
      {
        v7 = *result;
        *result = *a2;
        *a2 = v7;
      }
    }
  }
  else
  {
    if (v4 >= v3)
    {
      v8 = *result;
      *result = *a2;
      *a2 = v8;
      if (*((_QWORD *)a3 + 1) >= *((_QWORD *)a2 + 1))
        return result;
      v5 = *a2;
      *a2 = *a3;
    }
    else
    {
      v5 = *result;
      *result = *a3;
    }
    *a3 = v5;
  }
  return result;
}

BOOL sub_1C5CBCBB0(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _BOOL8 result;
  __int128 v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 *v16;
  __int128 *v17;
  __int128 *v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;

  v4 = ((uint64_t)a2 - a1) >> 4;
  result = 1;
  switch(v4)
  {
    case 0:
    case 1:
      return result;
    case 2:
      if (*(a2 - 1) < *(_QWORD *)(a1 + 8))
      {
        v6 = *(_OWORD *)a1;
        *(_OWORD *)a1 = *((_OWORD *)a2 - 1);
        *((_OWORD *)a2 - 1) = v6;
      }
      return result;
    case 3:
      sub_1C5CBCB0C((__int128 *)a1, (__int128 *)(a1 + 16), (__int128 *)a2 - 1);
      return 1;
    case 4:
      sub_1C5CBCDB8(a1, a1 + 16, a1 + 32, (uint64_t)(a2 - 2));
      return 1;
    case 5:
      v16 = (__int128 *)(a1 + 16);
      v17 = (__int128 *)(a1 + 32);
      v18 = (__int128 *)(a1 + 48);
      sub_1C5CBCDB8(a1, a1 + 16, a1 + 32, a1 + 48);
      if (*(a2 - 1) < *(_QWORD *)(a1 + 56))
      {
        v19 = *v18;
        *v18 = *((_OWORD *)a2 - 1);
        *((_OWORD *)a2 - 1) = v19;
        if (*(_QWORD *)(a1 + 56) < *(_QWORD *)(a1 + 40))
        {
          v20 = *v17;
          *v17 = *v18;
          *v18 = v20;
          if (*(_QWORD *)(a1 + 40) < *(_QWORD *)(a1 + 24))
          {
            v21 = *v16;
            *v16 = *v17;
            *v17 = v21;
            if (*(_QWORD *)(a1 + 24) < *(_QWORD *)(a1 + 8))
            {
              v22 = *(_OWORD *)a1;
              *(_OWORD *)a1 = *v16;
              *v16 = v22;
            }
          }
        }
      }
      return 1;
    default:
      v7 = (_QWORD *)(a1 + 32);
      sub_1C5CBCB0C((__int128 *)a1, (__int128 *)(a1 + 16), (__int128 *)(a1 + 32));
      v8 = (_QWORD *)(a1 + 48);
      if ((_QWORD *)(a1 + 48) == a2)
        return 1;
      v9 = 0;
      v10 = 0;
      break;
  }
  while (1)
  {
    v11 = v8[1];
    if (v11 < v7[1])
    {
      v12 = *v8;
      v13 = v9;
      while (1)
      {
        *(_OWORD *)(a1 + v13 + 48) = *(_OWORD *)(a1 + v13 + 32);
        if (v13 == -32)
          break;
        v14 = *(_QWORD *)(a1 + v13 + 24);
        v13 -= 16;
        if (v11 >= v14)
        {
          v15 = (_QWORD *)(a1 + v13 + 48);
          goto LABEL_13;
        }
      }
      v15 = (_QWORD *)a1;
LABEL_13:
      *v15 = v12;
      v15[1] = v11;
      if (++v10 == 8)
        return v8 + 2 == a2;
    }
    v7 = v8;
    v9 += 16;
    v8 += 2;
    if (v8 == a2)
      return 1;
  }
}

__n128 sub_1C5CBCDB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __n128 result;

  sub_1C5CBCB0C((__int128 *)a1, (__int128 *)a2, (__int128 *)a3);
  if (*(_QWORD *)(a4 + 8) < *(_QWORD *)(a3 + 8))
  {
    result = *(__n128 *)a3;
    *(_OWORD *)a3 = *(_OWORD *)a4;
    *(__n128 *)a4 = result;
    if (*(_QWORD *)(a3 + 8) < *(_QWORD *)(a2 + 8))
    {
      result = *(__n128 *)a2;
      *(_OWORD *)a2 = *(_OWORD *)a3;
      *(__n128 *)a3 = result;
      if (*(_QWORD *)(a2 + 8) < *(_QWORD *)(a1 + 8))
      {
        result = *(__n128 *)a1;
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *(__n128 *)a2 = result;
      }
    }
  }
  return result;
}

BOOL sub_1C5CBCE54(uint64_t a1, uint64_t **a2, unsigned int a3, uint64_t a4)
{
  unsigned int v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unsigned int v20;
  char v21;
  unint64_t v22;
  _BOOL8 v23;
  uint64_t v24;
  int v25;
  _QWORD *v26;
  int v27;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  int v34;
  _BYTE v35[256];
  _QWORD *v36;
  unsigned int v37;
  unsigned int v38;
  _QWORD v39[10];

  v39[8] = *MEMORY[0x1E0C80C00];
  v31 = v35;
  v32 = v35;
  v33 = 32;
  v34 = 0;
  v36 = v39;
  v38 = 8;
  v39[0] = a4;
  v7 = 1;
  do
  {
    v8 = v36[v7 - 1];
    v37 = v7 - 1;
    sub_1C4774094((llvm::SmallPtrSetImplBase *)&v31, v8);
    if (v9 && *(_WORD *)(v8 + 24) == 2 && (v10 = *(unsigned __int16 *)(v8 + 56), *(_WORD *)(v8 + 56)))
    {
      v11 = *(uint64_t **)(v8 + 32);
      v7 = v37;
      v12 = 40 * v10;
      do
      {
        v13 = *v11;
        if (v7 >= v38)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v36, (uint64_t)v39, v7 + 1, 8);
          v7 = v37;
        }
        v36[v7] = v13;
        v7 = ++v37;
        v11 += 5;
        v12 -= 40;
      }
      while (v12);
    }
    else
    {
      v7 = v37;
    }
  }
  while (v7);
  v14 = 0;
  v15 = HIDWORD(v33) - v34;
  do
  {
    v16 = (*a2)[2 * v14];
    if (*(_WORD *)(v16 + 56))
    {
      v17 = 0;
      v18 = 0;
      do
      {
        v19 = *(_QWORD *)(*(_QWORD *)(v16 + 32) + v17);
        if (v7 >= v38)
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v36, (uint64_t)v39, v7 + 1, 8);
          v7 = v37;
        }
        v36[v7] = v19;
        v7 = ++v37;
        ++v18;
        v17 += 40;
      }
      while (v18 < *(unsigned __int16 *)(v16 + 56));
    }
    ++v14;
  }
  while (v14 != a3);
  v20 = v15 + 1024;
  v21 = sub_1C5CB0A7C(**a2, (uint64_t)&v31, (unsigned int *)&v36, v15 + 1024, 0);
  v22 = 0;
  if ((v21 & 1) != 0)
  {
    v23 = 0;
LABEL_25:
    if (HIDWORD(v33) - v34 >= v20)
    {
      v30 = (*a2)[2 * v22];
      v26 = sub_1C61E016C(a1 + 1416, &v30);
      if (v26[1] == a4)
      {
        v27 = *((_DWORD *)v26 + 4) + 1;
      }
      else
      {
        v26[1] = a4;
        v27 = 1;
      }
      *((_DWORD *)v26 + 4) = v27;
    }
  }
  else
  {
    v24 = 2;
    while (a3 - 1 != v22)
    {
      v25 = sub_1C5CB0A7C((*a2)[v24], (uint64_t)&v31, (unsigned int *)&v36, v20, 0);
      v24 += 2;
      ++v22;
      if (v25)
      {
        v23 = v22 >= a3;
        goto LABEL_25;
      }
    }
    v23 = 1;
  }
  if (v36 != v39)
    free(v36);
  if (v32 != v31)
    free(v32);
  return v23;
}

uint64_t sub_1C5CBD138(uint64_t *a1, uint64_t **a2, llvm *a3, uint64_t a4, unsigned int a5, int a6, char a7, char a8)
{
  uint64_t v13;
  unsigned __int8 *v14;
  unint64_t v15;
  const char *v16;
  llvm::MDNode *v17;
  int v18;
  llvm::Type *v19;
  unsigned int v20;
  uint64_t v21;
  unsigned __int16 v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  __int128 v27;
  llvm::MDNode *v28;
  llvm::MDNode *MostGenericAliasScope;
  llvm::MDNode *v30;
  uint64_t ExtendedIntegerVT;
  llvm::LLVMContext *v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  uint64_t v42;
  uint64_t *v43;
  _DWORD *v44;
  int v45;
  int v46;
  llvm::EVT *v47;
  uint64_t v48;
  const char *v49;
  llvm::LLVMContext *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t v56;
  const char *v57;
  unsigned int v58;
  unsigned int v59;
  const char *v60;
  unsigned __int8 *v61;
  int v62;
  int v63;
  uint64_t v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  uint64_t i;
  const char *v69;
  int v70;
  uint64_t v72;
  unsigned int v73;
  uint64_t v74;
  llvm::detail::DoubleAPFloat *v75;
  void *v76;
  const char *v77;
  unsigned int v78;
  _QWORD *v79;
  uint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t ExtendedSizeInBits;
  uint64_t v88;
  uint64_t v90;
  uint64_t v91;
  unsigned int v92;
  unsigned int v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  int v98;
  int v99;
  unsigned int v100;
  const char *v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  __int128 *v106;
  uint64_t v107;
  _QWORD *v108;
  unsigned int v109;
  unsigned int v110;
  uint64_t v111;
  uint64_t v112;
  llvm::APInt *v113;
  unsigned int v114;
  uint64_t v115;
  unsigned int v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;
  __int128 *v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BOOL4 v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t j;
  uint64_t v134;
  int v135;
  uint64_t v136;
  unsigned __int8 *v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t v140;
  unsigned __int8 v141;
  uint64_t v142;
  uint64_t v143;
  BOOL v144;
  uint64_t v145;
  uint64_t v146;
  _BOOL4 v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unsigned __int8 *v155;
  uint64_t v156;
  unsigned int v157;
  unsigned int v158;
  uint64_t v159;
  _BOOL4 v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  unsigned int v164;
  _BYTE *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  unsigned int v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  llvm *v173;
  __int16 v174;
  int v175;
  int v176;
  uint64_t v177;
  char v178;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  __int128 v185;
  uint64_t v186;
  __int128 v187;
  uint64_t v188;
  unsigned __int8 *v189;
  int v190;
  void *__src;
  unsigned int v192;
  void *v193;
  unsigned int v194;
  __int128 v195;
  __int128 v196;
  llvm::MDNode *v197[2];
  unsigned __int8 *v198;
  int v199;
  llvm *v200;
  uint64_t v201;
  _BYTE v202[144];
  uint64_t v203;

  v203 = *MEMORY[0x1E0C80C00];
  v200 = a3;
  v201 = a4;
  v13 = **a2;
  v14 = *(unsigned __int8 **)(v13 + 64);
  v198 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v198, v14, 2);
  v199 = *(_DWORD *)(v13 + 60);
  v15 = sub_1C47C1C70((unsigned __int8 *)&v200);
  v18 = (int)v16;
  v19 = (llvm::Type *)(8 * v15);
  if ((_DWORD)v16 == 1)
  v183 = a1;
  v184 = a5;
  v20 = (_DWORD)v19 * a5;
  v178 = a8;
  v176 = a6;
  if (!(_BYTE)v200)
  {
    if ((*(_DWORD *)(v201 + 8) & 0xFE) != 0x12)
      goto LABEL_7;
LABEL_19:
    v175 = sub_1C612FE00((llvm::EVT *)&v200, v16);
    goto LABEL_8;
  }
  if (v200 - 15 < 0x9C)
    goto LABEL_19;
LABEL_7:
  v175 = 1;
LABEL_8:
  v21 = 0;
  v22 = 0;
  v196 = 0u;
  *(_OWORD *)v197 = 0u;
  v23 = 1;
  v24 = a5;
  do
  {
    v25 = *(_QWORD *)((*a2)[v21] + 96);
    v26 = *(unsigned __int16 *)(v25 + 32);
    if ((v23 & 1) != 0)
    {
      v27 = *(_OWORD *)(v25 + 56);
      v196 = *(_OWORD *)(v25 + 40);
      *(_OWORD *)v197 = v27;
      v22 = v26;
    }
    else
    {
      if (v26 != v22)
        goto LABEL_178;
      v28 = *(llvm::MDNode **)(v25 + 64);
      MostGenericAliasScope = (llvm::MDNode *)llvm::MDNode::getMostGenericAliasScope(v197[0], *(llvm::MDNode **)(v25 + 56), v17);
      v196 = 0uLL;
      v197[0] = MostGenericAliasScope;
      v197[1] = (llvm::MDNode *)llvm::MDNode::intersect(v197[1], v28, v30);
    }
    v23 = 0;
    v21 += 2;
    --v24;
  }
  while (v24);
  v174 = v22;
  if ((a7 & 1) == 0)
  {
    if ((int)v20 > 63)
    {
      if (v20 == 64)
      {
        ExtendedIntegerVT = 6;
        goto LABEL_96;
      }
      if (v20 == 128)
      {
        v181 = 0;
        *(_DWORD *)&v202[8] = 128;
        ExtendedIntegerVT = 7;
        goto LABEL_206;
      }
    }
    else
    {
      switch(v20)
      {
        case 0x20u:
          ExtendedIntegerVT = 5;
LABEL_96:
          v181 = 0;
          *(_DWORD *)&v202[8] = (_DWORD)v19 * a5;
LABEL_97:
          *(_QWORD *)v202 = 0;
LABEL_98:
          v65 = 0;
          v66 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(*v183 + 40) + 40) + 272);
          while (1)
          {
            v67 = ~v65 + a5;
            if (v66)
              v67 = v65;
            for (i = *(_QWORD *)(*(_QWORD *)((*a2)[2 * v67] + 32) + 40);
                  *(_WORD *)(i + 24) == 216;
            if (v18 == 1)
            sub_1C4888094((uint64_t)v202, v19);
            v70 = *(unsigned __int16 *)(i + 24);
            if (v70 == 35 || v70 == 11)
            {
              v72 = *(_QWORD *)(i + 80);
              if (v18 == 1)
              v73 = *(_DWORD *)(v72 + 32);
              if (v73 >= v19)
              {
                if (v73 > v19)
                  llvm::APInt::trunc((llvm::APInt *)(v72 + 24), v19, (llvm::APInt *)&v193);
                else
                  sub_1C5DD14E0((uint64_t)&v193, v72 + 24);
              }
              else
              {
                llvm::APInt::zext((llvm::APInt *)(v72 + 24), v19, (uint64_t)&v193);
              }
              if (v194 >= v20)
              {
                if (v194 > v20)
                {
                  llvm::APInt::trunc((llvm::APInt *)&v193, (_DWORD)v19 * a5, (llvm::APInt *)&v195);
                }
                else
                {
                  DWORD2(v195) = v194;
                  if (v194 > 0x40)
                  {
                    *(_QWORD *)&v195 = operator new[]();
                    memcpy((void *)v195, v193, (((unint64_t)DWORD2(v195) + 63) >> 3) & 0x3FFFFFF8);
                  }
                  else
                  {
                    *(_QWORD *)&v195 = v193;
                  }
                }
              }
              else
              {
                llvm::APInt::zext((llvm::APInt *)&v193, (_DWORD)v19 * a5, (uint64_t)&v195);
              }
              if (*(_DWORD *)&v202[8] > 0x40u)
              {
                v79 = *(_QWORD **)v202;
                v80 = (uint64_t *)v195;
                v81 = ((unint64_t)*(unsigned int *)&v202[8] + 63) >> 6;
                do
                {
                  v82 = *v80++;
                  *v79++ |= v82;
                  --v81;
                }
                while (v81);
              }
              else
              {
                *(_QWORD *)v202 |= v195;
              }
              if (DWORD2(v195) >= 0x41 && (_QWORD)v195)
                MEMORY[0x1CAA32F9C](v195, 0x1000C8000313F17);
              if (v194 >= 0x41 && v193)
                MEMORY[0x1CAA32F9C](v193, 0x1000C8000313F17);
              goto LABEL_168;
            }
            v74 = *(_QWORD *)(i + 80);
            v76 = *(void **)(v74 + 32);
            v75 = (llvm::detail::DoubleAPFloat *)(v74 + 32);
            if (v76 == &unk_1C866F1C0)
              llvm::detail::DoubleAPFloat::bitcastToAPInt(v75, (unsigned int *)&__src);
            else
              llvm::detail::IEEEFloat::bitcastToAPInt((uint64_t)v75, (unsigned int *)&__src);
            if (v18 == 1)
            v78 = v192;
            if (v192 >= v19)
            {
              if (v192 > v19)
              {
                llvm::APInt::trunc((llvm::APInt *)&__src, v19, (llvm::APInt *)&v193);
              }
              else
              {
                v194 = v192;
                if (v192 <= 0x40)
                {
                  v193 = __src;
                  goto LABEL_144;
                }
                v193 = (void *)operator new[]();
                memcpy(v193, __src, (((unint64_t)v194 + 63) >> 3) & 0x3FFFFFF8);
              }
            }
            else
            {
              llvm::APInt::zext((llvm::APInt *)&__src, v19, (uint64_t)&v193);
            }
            v78 = v194;
LABEL_144:
            if (v78 >= v20)
            {
              if (v78 > v20)
              {
                llvm::APInt::trunc((llvm::APInt *)&v193, (_DWORD)v19 * a5, (llvm::APInt *)&v195);
              }
              else
              {
                DWORD2(v195) = v78;
                if (v78 > 0x40)
                {
                  *(_QWORD *)&v195 = operator new[]();
                  memcpy((void *)v195, v193, (((unint64_t)DWORD2(v195) + 63) >> 3) & 0x3FFFFFF8);
                }
                else
                {
                  *(_QWORD *)&v195 = v193;
                }
              }
            }
            else
            {
              llvm::APInt::zext((llvm::APInt *)&v193, (_DWORD)v19 * a5, (uint64_t)&v195);
            }
            if (*(_DWORD *)&v202[8] > 0x40u)
            {
              v83 = *(_QWORD **)v202;
              v84 = (uint64_t *)v195;
              v85 = ((unint64_t)*(unsigned int *)&v202[8] + 63) >> 6;
              do
              {
                v86 = *v84++;
                *v83++ |= v86;
                --v85;
              }
              while (v85);
            }
            else
            {
              *(_QWORD *)v202 |= v195;
            }
            if (DWORD2(v195) >= 0x41 && (_QWORD)v195)
              MEMORY[0x1CAA32F9C](v195, 0x1000C8000313F17);
            if (v194 >= 0x41 && v193)
              MEMORY[0x1CAA32F9C](v193, 0x1000C8000313F17);
            if (v192 >= 0x41 && __src)
              MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
            if ((_BYTE)v200)
              ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v200);
            else
              ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v200);
            if ((llvm::Type *)ExtendedSizeInBits != v19 || v18 != (_DWORD)v16)
            {
              if (*(_DWORD *)&v202[8] >= 0x41u && *(_QWORD *)v202)
                MEMORY[0x1CAA32F9C](*(_QWORD *)v202, 0x1000C8000313F17);
              goto LABEL_178;
            }
LABEL_168:
            if (++v65 == a5)
            {
              v90 = (uint64_t)v183;
              v91 = sub_1C63666FC(*v183, (llvm::LLVMContext *)v202, (const llvm::APInt *)&v198, ExtendedIntegerVT, v181, 0, 0);
              v93 = v92;
              if (*(_DWORD *)&v202[8] >= 0x41u && *(_QWORD *)v202)
                MEMORY[0x1CAA32F9C](*(_QWORD *)v202, 0x1000C8000313F17);
              v94 = v178;
              goto LABEL_186;
            }
          }
        case 0x10u:
          ExtendedIntegerVT = 4;
          goto LABEL_96;
        case 8u:
          ExtendedIntegerVT = 3;
          goto LABEL_96;
      }
    }
    ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*v183 + 56), (llvm::LLVMContext *)(v19 * a5));
    v181 = (uint64_t)v16;
    *(_DWORD *)&v202[8] = (_DWORD)v19 * a5;
    if (v20 <= 0x40)
      goto LABEL_97;
LABEL_206:
    llvm::APInt::initSlowCase((llvm::APInt *)v202, 0, 0);
    goto LABEL_98;
  }
  v32 = *(llvm::LLVMContext **)(*v183 + 56);
  v33 = sub_1C6131264((unsigned __int8 *)&v200, (uint64_t)v16, (BOOL)v17);
  v35 = sub_1C4816F98(v32, v33, v34, v175 * a5, 0);
  v172 = v36;
  v173 = (llvm *)v35;
  if (v176)
  {
    LODWORD(v38) = 0;
    v39 = 0;
    *(_QWORD *)v202 = &v202[16];
    *(_QWORD *)&v202[8] = 0x800000000;
    while (1)
    {
      v195 = *(_OWORD *)(*(_QWORD *)((*a2)[2 * v39] + 32) + 40);
      v40 = v195;
      v41 = (unsigned __int8 *)(*(_QWORD *)(v195 + 40) + 16 * DWORD2(v195));
      if (v200 == *v41 && ((_BYTE)v200 || v201 == *((_QWORD *)v41 + 1)))
        goto LABEL_29;
      if (*(_WORD *)(v195 + 24) == 216)
      {
        do
        {
          v44 = *(_DWORD **)(v40 + 32);
          v40 = *(_QWORD *)v44;
        }
        while (*(_WORD *)(*(_QWORD *)v44 + 24) == 216);
        v45 = v44[2];
      }
      else
      {
        v45 = DWORD2(v195);
      }
      *(_QWORD *)&v195 = v40;
      DWORD2(v195) = v45;
      if (v19 == sub_1C6131A64((unsigned int *)&v195) && v18 == v46)
        goto LABEL_86;
      v47 = *(llvm::EVT **)(*v183 + 56);
      if ((_BYTE)v200)
        v48 = sub_1C47A8C74((unsigned __int8 *)&v200);
      else
        v48 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v200);
      v50 = (llvm::LLVMContext *)v48;
      if ((_DWORD)v49 == 1)
      if ((int)v50 <= 31)
      {
        switch((_DWORD)v50)
        {
          case 1:
            v51 = 0;
            v52 = 0;
            v53 = 2;
            break;
          case 0x10:
            v51 = 0;
            v52 = 0;
            v53 = 4;
            break;
          case 8:
            v51 = 0;
            v52 = 0;
            v53 = 3;
            break;
          default:
            goto LABEL_91;
        }
      }
      else
      {
        switch((_DWORD)v50)
        {
          case 0x20:
            v51 = 0;
            v52 = 0;
            v53 = 5;
            break;
          case 0x40:
            v51 = 0;
            v52 = 0;
            v53 = 6;
            break;
          case 0x80:
            v51 = 0;
            v52 = 0;
            v53 = 7;
            break;
          default:
LABEL_91:
            v64 = llvm::EVT::getExtendedIntegerVT(v47, v50);
            v51 = v64 & 0xFFFFFFFFFFFFFF00;
            v53 = v64;
            break;
        }
      }
      v54 = v195;
      v55 = *(unsigned __int16 *)(v195 + 24);
      if (v55 > 0x22)
      {
        if (v55 != 35)
        {
          if (v55 == 36)
          {
LABEL_92:
            if (*(_BYTE **)v202 != &v202[16])
              free(*(void **)v202);
LABEL_178:
            v88 = 0;
            goto LABEL_179;
          }
          goto LABEL_86;
        }
      }
      else if (v55 != 11)
      {
        if (v55 == 12)
          goto LABEL_92;
        goto LABEL_86;
      }
      v180 = v52;
      v177 = *v183;
      v56 = *(_QWORD *)(v195 + 80);
      v58 = sub_1C6131A64((unsigned int *)&v195);
      if ((_DWORD)v57 == 1)
      v59 = *(_DWORD *)(v56 + 32);
      if (v59 >= v58)
      {
        if (v59 > v58)
          llvm::APInt::trunc((llvm::APInt *)(v56 + 24), v58, (llvm::APInt *)&__src);
        else
          sub_1C5DD14E0((uint64_t)&__src, v56 + 24);
      }
      else
      {
        llvm::APInt::zext((llvm::APInt *)(v56 + 24), v58, (uint64_t)&__src);
      }
      if (v18 == 1)
      if (v192 >= v19)
      {
        if (v192 > v19)
        {
          llvm::APInt::trunc((llvm::APInt *)&__src, v19, (llvm::APInt *)&v193);
        }
        else
        {
          v194 = v192;
          if (v192 > 0x40)
          {
            v193 = (void *)operator new[]();
            memcpy(v193, __src, (((unint64_t)v194 + 63) >> 3) & 0x3FFFFFF8);
          }
          else
          {
            v193 = __src;
          }
        }
      }
      else
      {
        llvm::APInt::zext((llvm::APInt *)&__src, v19, (uint64_t)&v193);
      }
      v61 = *(unsigned __int8 **)(v54 + 64);
      v189 = v61;
      if (v61)
        llvm::MetadataTracking::track((uint64_t)&v189, v61, 2);
      v190 = *(_DWORD *)(v54 + 60);
      *(_QWORD *)&v195 = sub_1C63666FC(v177, (llvm::LLVMContext *)&v193, (const llvm::APInt *)&v189, v53 | v51, v180, 0, 0);
      DWORD2(v195) = v62;
      if (v189)
        llvm::MetadataTracking::untrack((uint64_t)&v189, v189);
      if (v194 >= 0x41 && v193)
        MEMORY[0x1CAA32F9C](v193, 0x1000C8000313F17);
      if (v192 >= 0x41 && __src)
        MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
LABEL_86:
      v40 = sub_1C6367DA8(*v183, (uint64_t)v200, v201, v195, *((uint64_t *)&v195 + 1));
      *(_QWORD *)&v195 = v40;
      DWORD2(v195) = v63;
      LODWORD(v38) = *(_DWORD *)&v202[8];
LABEL_29:
      v42 = *((_QWORD *)&v195 + 1);
      if (v38 >= *(_DWORD *)&v202[12])
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v202, (uint64_t)&v202[16], v38 + 1, 16);
        LODWORD(v38) = *(_DWORD *)&v202[8];
      }
      v43 = (uint64_t *)(*(_QWORD *)v202 + 16 * v38);
      *v43 = v40;
      v43[1] = v42;
      v38 = ++*(_DWORD *)&v202[8];
      if (++v39 == a5)
      {
        v90 = (uint64_t)v183;
        v129 = *v183;
        if ((_BYTE)v200)
          v130 = v200 - 15 < 0x9C;
        else
          v130 = (*(_DWORD *)(v201 + 8) & 0xFE) == 18;
        v94 = v178;
        if (v130)
          v161 = 149;
        else
          v161 = 146;
        v162 = *(_QWORD *)(v129 + 832);
        if (v162)
          v163 = *(unsigned __int16 *)(v162 + 8);
        else
          v163 = 0;
        v91 = (uint64_t)sub_1C636D0C8(v129, (const char *)v161, (const llvm::APInt *)&v198, v173, v172, *(uint64_t **)v202, v38, v163);
        v93 = v164;
        v165 = *(_BYTE **)v202;
        goto LABEL_260;
      }
    }
  }
  v131 = 0;
  *(_QWORD *)v202 = &v202[16];
  *(_QWORD *)&v202[8] = 0x800000000;
  do
  {
    v132 = *(_QWORD *)((*a2)[2 * v131] + 32);
    v134 = *(_QWORD *)(v132 + 40);
    for (j = *(_QWORD *)(v132 + 48); ; j = j & 0xFFFFFFFF00000000 | *(unsigned int *)(v136 + 8))
    {
      v135 = *(unsigned __int16 *)(v134 + 24);
      if (v135 != 216)
        break;
      v136 = *(_QWORD *)(v134 + 32);
      v134 = *(_QWORD *)v136;
    }
    v137 = (unsigned __int8 *)(*(_QWORD *)(v134 + 40) + 16 * j);
    if ((v200 != *v137 || !(_BYTE)v200 && v201 != *((_QWORD *)v137 + 1))
      && (v135 == 151 || v135 == 148))
    {
      v141 = sub_1C6131264((unsigned __int8 *)&v200, v36, v37);
      v143 = v142;
      v195 = *(_OWORD *)(*(_QWORD *)(v134 + 40) + 16 * j);
      if (v141 == sub_1C6131264((unsigned __int8 *)&v195, v142, v144) && (v141 || v143 == v145))
      {
        if ((_BYTE)v200)
          v147 = v200 - 15 < 0x9C;
        else
          v147 = (*(_DWORD *)(v201 + 8) & 0xFE) == 18;
        if (v147)
          v148 = 151;
        else
          v148 = 148;
        v149 = *(uint64_t **)(v134 + 32);
        v150 = *v149;
        v151 = v149[1];
        v153 = v149[5];
        v152 = v149[6];
        v154 = *v183;
        v155 = *(unsigned __int8 **)(v134 + 64);
        *(_QWORD *)&v195 = v155;
        if (v155)
        {
          v182 = v154;
          llvm::MetadataTracking::track((uint64_t)&v195, v155, 2);
          v154 = v182;
        }
        DWORD2(v195) = *(_DWORD *)(v134 + 60);
        v156 = *(_QWORD *)(v154 + 832);
        if (v156)
          LOWORD(v156) = *(_WORD *)(v156 + 8);
        v134 = (uint64_t)sub_1C5D56C70(v154, v148, (const llvm::APInt *)&v195, v200, v201, v150, v151, v146, v153, v152, v156);
        v158 = v157;
        v36 = v195;
        if ((_QWORD)v195)
          llvm::MetadataTracking::untrack((uint64_t)&v195, (unsigned __int8 *)v195);
        j = j & 0xFFFFFFFF00000000 | v158;
      }
      else
      {
        v134 = sub_1C6367DA8(*v183, (uint64_t)v200, v201, v134, j);
        j = j & 0xFFFFFFFF00000000 | v36;
      }
    }
    v138 = *(unsigned int *)&v202[8];
    if (*(unsigned int *)&v202[8] >= (unint64_t)*(unsigned int *)&v202[12])
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v202, (uint64_t)&v202[16], *(unsigned int *)&v202[8] + 1, 16);
      v138 = *(unsigned int *)&v202[8];
    }
    v139 = (uint64_t *)(*(_QWORD *)v202 + 16 * v138);
    *v139 = v134;
    v139[1] = j;
    v140 = ++*(_DWORD *)&v202[8];
    ++v131;
  }
  while (v131 != a5);
  v90 = (uint64_t)v183;
  v159 = *v183;
  if ((_BYTE)v200)
    v160 = v200 - 15 < 0x9C;
  else
    v160 = (*(_DWORD *)(v201 + 8) & 0xFE) == 18;
  v94 = v178;
  if (v160)
    v166 = 149;
  else
    v166 = 146;
  v167 = *(_QWORD *)(v159 + 832);
  if (v167)
    v168 = *(unsigned __int16 *)(v167 + 8);
  else
    v168 = 0;
  v91 = (uint64_t)sub_1C636D0C8(v159, (const char *)v166, (const llvm::APInt *)&v198, v173, v172, *(uint64_t **)v202, v140, v168);
  v93 = v169;
  v165 = *(_BYTE **)v202;
LABEL_260:
  if (v165 != &v202[16])
    free(v165);
LABEL_186:
  v95 = v93;
  v96 = **a2;
  v97 = sub_1C5CBE2D0((uint64_t *)v90, a2, a5);
  v99 = v98;
  if ((v94 & 1) != 0)
  {
    llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)(v90 + 8), *(llvm::EVT **)(*(_QWORD *)v90 + 56), *(_QWORD *)(*(_QWORD *)(v91 + 40) + 16 * v95), *(_QWORD *)(*(_QWORD *)(v91 + 40) + 16 * v95 + 8), (uint64_t)v202);
    *(_OWORD *)v202 = *(_OWORD *)&v202[8];
    if (v202[0])
      v100 = sub_1C47A8C74(v202);
    else
      v100 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v202);
    v110 = v100;
    if ((_DWORD)v101 == 1)
    v111 = *(_QWORD *)v90;
    v112 = *(_QWORD *)(v91 + 80);
    v113 = (llvm::APInt *)(v112 + 24);
    v114 = *(_DWORD *)(v112 + 32);
    if (v114 >= v110)
    {
      if (v114 > v110)
        llvm::APInt::trunc(v113, v110, (llvm::APInt *)&v195);
      else
        sub_1C5DD14E0((uint64_t)&v195, (uint64_t)v113);
    }
    else
    {
      llvm::APInt::zext(v113, v110, (uint64_t)&v195);
    }
    v115 = sub_1C63666FC(v111, (llvm::LLVMContext *)&v195, (const llvm::APInt *)&v198, *(uint64_t *)v202, *(uint64_t *)&v202[8], 0, 0);
    v117 = v116;
    if (DWORD2(v195) >= 0x41 && (_QWORD)v195)
      MEMORY[0x1CAA32F9C](v195, 0x1000C8000313F17);
    v90 = (uint64_t)v183;
    v118 = *v183;
    v119 = (uint64_t *)sub_1C6131AB0(v96);
    v120 = *v119;
    v121 = v119[1];
    v122 = *(__int128 **)(v96 + 96);
    v185 = *v122;
    v123 = *((_QWORD *)v122 + 1);
    v186 = *((_QWORD *)v122 + 2);
    v171 = (63
                           - __clz(((1 << *((_BYTE *)v122 + 34)) | v123) & -((1 << *((_BYTE *)v122 + 34)) | v123)));
    v108 = sub_1C636B9CC(v118, (uint64_t)v97, v99, (uint64_t)&v198, v115, v117, v120, v121, (uint64_t)&v185, *(_QWORD *)(*(_QWORD *)(v91 + 40) + 16 * v95), *(_QWORD *)(*(_QWORD *)(v91 + 40) + 16 * v95 + 8), v171, SHIDWORD(v171), v174, (uint64_t)&v196);
  }
  else
  {
    v102 = *(_QWORD *)v90;
    v103 = (uint64_t *)sub_1C6131AB0(v96);
    v104 = *v103;
    v105 = v103[1];
    v106 = *(__int128 **)(v96 + 96);
    v187 = *v106;
    v107 = *((_QWORD *)v106 + 1);
    v188 = *((_QWORD *)v106 + 2);
    v170 = (63
                           - __clz(((1 << *((_BYTE *)v106 + 34)) | v107) & -((1 << *((_BYTE *)v106 + 34)) | v107)));
    v108 = sub_1C636B75C(v102, (uint64_t)v97, v99, (uint64_t)&v198, v91, v95, v104, v105, (uint64_t)&v187, v170, SHIDWORD(v170), v174, (uint64_t)&v196);
  }
  v124 = v108;
  v125 = 0;
  v126 = v109;
  v127 = v184;
  do
  {
    v128 = (*a2)[v125];
    *(_QWORD *)v202 = v124;
    *(_QWORD *)&v202[8] = v126;
    sub_1C5C5B0B4((uint64_t *)v90, v128, (uint64_t *)v202, 1, 1);
    v125 += 2;
    --v127;
  }
  while (v127);
  sub_1C5C5B004(v90, (uint64_t)v97);
  v88 = 1;
LABEL_179:
  if (v198)
    llvm::MetadataTracking::untrack((uint64_t)&v198, v198);
  return v88;
}

uint64_t *sub_1C5CBE2D0(uint64_t *a1, uint64_t **a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t *v14;
  __int128 v16;
  unsigned __int8 *v17;
  int v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  int v22;
  _BYTE v23[64];
  void *v24;
  uint64_t v25;
  _QWORD v26[17];

  LODWORD(v3) = a3;
  v26[16] = *MEMORY[0x1E0C80C00];
  v24 = v26;
  v25 = 0x800000000;
  v19 = v23;
  v20 = v23;
  v21 = 8;
  v22 = 0;
  v6 = **a2;
  v7 = *(unsigned __int8 **)(v6 + 64);
  v17 = v7;
  if (v7)
    llvm::MetadataTracking::track((uint64_t)&v17, v7, 2);
  v8 = 0;
  v18 = *(_DWORD *)(v6 + 60);
  v3 = v3;
  v9 = v3;
  do
  {
    sub_1C4774094((llvm::SmallPtrSetImplBase *)&v19, (*a2)[v8]);
    v8 += 2;
    --v9;
  }
  while (v9);
  v10 = 0;
  do
  {
    sub_1C4774094((llvm::SmallPtrSetImplBase *)&v19, **(_QWORD **)((*a2)[v10] + 32));
    if (v11)
    {
      v12 = *(_OWORD *)*(_QWORD *)((*a2)[v10] + 32);
      v13 = v25;
      if (v25 >= (unint64_t)HIDWORD(v25))
      {
        v16 = *(_OWORD *)*(_QWORD *)((*a2)[v10] + 32);
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v24, (uint64_t)v26, v25 + 1, 16);
        v12 = v16;
        v13 = v25;
      }
      *((_OWORD *)v24 + v13) = v12;
      LODWORD(v25) = v25 + 1;
    }
    v10 += 2;
    --v3;
  }
  while (v3);
  v14 = sub_1C5D63E30(*a1, (const llvm::APInt *)&v17, (uint64_t)&v24);
  if (v17)
    llvm::MetadataTracking::untrack((uint64_t)&v17, v17);
  if (v20 != v19)
    free(v20);
  if (v24 != v26)
    free(v24);
  return v14;
}

uint64_t sub_1C5CBE49C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v18;
  unint64_t v19;
  BOOL v20;
  const char *v22;
  unsigned int v23;
  llvm::Type *v24;
  const char *v25;
  unint64_t v26;
  BOOL v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  llvm::Type *v32;
  uint64_t v34;
  _QWORD v35[2];

  v35[0] = a1;
  v35[1] = a2;
  if (*(_WORD *)(a1 + 24) != 171)
    goto LABEL_24;
  v5 = *(uint64_t **)(a1 + 32);
  v6 = v5[5];
  v7 = *(unsigned __int16 *)(v6 + 24);
  if (v7 != 35 && v7 != 11)
    goto LABEL_24;
  v9 = 0;
  v10 = *v5;
  if (v10)
  {
    v11 = 0;
    if (*(_WORD *)(v10 + 24) == 253)
    {
      if ((*(_WORD *)(v10 + 26) & 0xF80) != 0)
        goto LABEL_24;
      v12 = *(_QWORD *)(v10 + 32);
      if (*(_QWORD *)(v12 + 40) != a3)
        goto LABEL_24;
      if (*(_DWORD *)(v12 + 48) != a4)
        goto LABEL_24;
      v13 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 40) + 16 * a2);
      if ((unint64_t)(v13 - 4) > 2)
        goto LABEL_24;
      v14 = *(_QWORD *)(v6 + 80);
      v15 = *(_DWORD *)(v14 + 32);
      v16 = v15 > 0x40 ? **(_QWORD **)(v14 + 24) : (uint64_t)(*(_QWORD *)(v14 + 24) << -(char)v15) >> -(char)v15;
      v17 = ~v16;
      v18 = __clz(v17);
      if ((v18 & 7) != 0)
        goto LABEL_24;
      v19 = __clz(__rbit64(v17));
      v20 = v18 != 64 && (v19 & 7) == 0;
      if (!v20 || v18 + (_DWORD)v19 + __clz(__rbit64(~(v17 >> v19))) != 64)
        goto LABEL_24;
      v34 = v10;
      if (v13 != 6 && v18)
      {
        v23 = sub_1C6131A64((unsigned int *)v35);
        if ((_DWORD)v22 == 1)
        v18 = v18 + v23 - 64;
      }
      v24 = sub_1C6131A64((unsigned int *)v35);
      if ((_DWORD)v25 == 1)
      {
        v32 = v24;
        v24 = v32;
      }
      v26 = (unint64_t)v24 - v19 - v18;
      v27 = (v26 >> 3) > 4 || ((1 << (v26 >> 3)) & 0x16) == 0;
      if (v27 || (_DWORD)v19 && (v19 >> 3) % (v26 >> 3))
        goto LABEL_24;
      if (v34 != a5)
      {
        if (*(_WORD *)(a5 + 24) != 2)
          goto LABEL_24;
        v9 = *(_QWORD *)(v34 + 48);
        if (!v9)
          goto LABEL_25;
        v28 = 1;
        do
        {
          if (*(_DWORD *)(v9 + 8) == 1)
          {
            if (!v28)
              goto LABEL_24;
            --v28;
          }
          v9 = *(_QWORD *)(v9 + 32);
        }
        while (v9);
        if (v28)
        {
LABEL_24:
          v9 = 0;
LABEL_25:
          v11 = 0;
          return v11 | v9;
        }
        v9 = *(unsigned __int16 *)(a5 + 56);
        if (!*(_WORD *)(a5 + 56))
          goto LABEL_25;
        v29 = v34;
        v30 = *(_QWORD **)(a5 + 32);
        v31 = 40 * v9;
        while (v29 != *v30)
        {
          v9 = 0;
          v11 = 0;
          v30 += 5;
          v31 -= 40;
          v29 = v34;
          if (!v31)
            return v11 | v9;
        }
      }
      v11 = (v19 << 29) & 0xF00000000;
      v9 = (v26 >> 3);
    }
  }
  else
  {
    v11 = 0;
  }
  return v11 | v9;
}

_QWORD *sub_1C5CBE720(int a1, unsigned int a2, uint64_t *a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  const char *v11;
  unsigned int v12;
  unsigned int v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v21;
  uint64_t *v22;
  unsigned __int8 *v23;
  uint64_t *v24;
  uint64_t *v25;
  llvm *v26;
  uint64_t v27;
  llvm *ShiftAmountTy;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  const char *v35;
  int v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t *v40;
  unsigned __int8 *v41;
  int v42;
  unsigned __int8 *v43;
  uint64_t *v44;
  uint64_t v45;
  __int16 v46;
  int v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned __int8 *v51;
  uint64_t *v52;
  unsigned int v53;
  uint64_t v54;
  unint64_t v55;
  _OWORD v56[2];
  _BYTE v57[24];
  unsigned __int8 *v58;
  int v59;
  unint64_t v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int v63;
  uint64_t *v64;
  unint64_t v65;

  v64 = a3;
  v65 = a4;
  v10 = *(_QWORD *)a6;
  v12 = sub_1C6131A64((unsigned int *)&v64);
  if ((_DWORD)v11 == 1)
  v61 = v12;
  if (v12 > 0x40)
    llvm::APInt::initSlowCase((llvm::APInt *)&v60, 0, 0);
  else
    v60 = 0;
  sub_1C4912E54(&v60, 8 * a2, 8 * (a2 + a1));
  v13 = v61;
  if (v61 > 0x40)
  {
    llvm::APInt::flipAllBitsSlowCase((uint64_t)&v60);
    v13 = v61;
    v15 = v60;
  }
  else
  {
    v14 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v61;
    if (!v61)
      v14 = 0;
    v15 = v14 & ~v60;
    v60 = v15;
  }
  v63 = v13;
  v62 = v15;
  v61 = 0;
  if (!sub_1C63686D8(v10, (uint64_t)v64, v65, (uint64_t)&v62, 0))
    goto LABEL_23;
  v16 = 8 * a1;
  if (8 * a1 <= 31)
  {
    if (v16 == 8)
    {
      v17 = 3;
      goto LABEL_21;
    }
    if (v16 == 16)
    {
      v17 = 4;
      goto LABEL_21;
    }
LABEL_28:
    v17 = 0;
    if (*(_BYTE *)(a6 + 34))
    {
      v19 = 0;
      goto LABEL_24;
    }
    v18 = *(_QWORD *)(v10 + 24);
    goto LABEL_31;
  }
  if (v16 == 32)
  {
    v17 = 5;
    goto LABEL_21;
  }
  if (v16 == 64)
  {
    v17 = 6;
    goto LABEL_21;
  }
  if (v16 != 128)
    goto LABEL_28;
  v17 = 7;
LABEL_21:
  v18 = *(_QWORD *)(v10 + 24);
  if (*(_BYTE *)(a6 + 34) && !*(_QWORD *)(*(_QWORD *)(a6 + 8) + 8 * v17 + 96))
  {
LABEL_23:
    v19 = 0;
    goto LABEL_24;
  }
LABEL_31:
  v21 = *(_QWORD *)(a5 + 96);
  if (!v21
    || (v19 = 0,
        llvm::TargetLoweringBase::allowsMemoryAccess(v18, *(_QWORD *)(v10 + 56), *(_QWORD *)(**(_QWORD **)(v10 + 40) + 40) + 272, v17, 0, v21, 0)))
  {
    if (a2)
    {
      v22 = v64;
      v23 = (unsigned __int8 *)v64[8];
      *(_QWORD *)&v56[0] = v23;
      v24 = v64;
      if (v23)
      {
        llvm::MetadataTracking::track((uint64_t)v56, v23, 2);
        v24 = v64;
      }
      DWORD2(v56[0]) = *((_DWORD *)v22 + 15);
      v25 = (uint64_t *)(v24[5] + 16 * v65);
      v26 = (llvm *)*v25;
      v27 = v25[1];
      v55 = v65;
      ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a6 + 8), *v25, v27, *(_QWORD *)(**(_QWORD **)(*(_QWORD *)a6 + 40) + 40) + 272, *(unsigned __int8 *)(a6 + 34));
      v30 = sub_1C6366AB4(v10, 8 * a2, (const llvm::APInt *)v56, ShiftAmountTy, v29, 0, 0);
      v33 = *(_QWORD *)(v10 + 832);
      if (v33)
        LOWORD(v33) = *(_WORD *)(v33 + 8);
      v64 = sub_1C5D56C70(v10, 177, (const llvm::APInt *)v56, v26, v27, (uint64_t)v24, v55, v32, (uint64_t)v30, v31, v33);
      LODWORD(v65) = v34;
      if (*(_QWORD *)&v56[0])
        llvm::MetadataTracking::untrack((uint64_t)v56, *(unsigned __int8 **)&v56[0]);
    }
    if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v10 + 40) + 40) + 272))
    {
      v56[0] = *(_OWORD *)(v64[5] + 16 * v65);
      v36 = sub_1C47C1C70((unsigned __int8 *)v56);
      if ((_DWORD)v35 == 1)
      a2 = v36 - (a2 + a1);
    }
    v37 = *(_QWORD *)(a5 + 32);
    v39 = *(uint64_t **)(v37 + 80);
    v38 = *(_QWORD *)(v37 + 88);
    v40 = v64;
    if (a2)
    {
      v41 = (unsigned __int8 *)v64[8];
      *(_QWORD *)&v56[0] = v41;
      if (v41)
        llvm::MetadataTracking::track((uint64_t)v56, v41, 2);
      DWORD2(v56[0]) = *((_DWORD *)v40 + 15);
      v39 = sub_1C6369954(v10, (uint64_t)v39, v38, a2, 0, (const llvm::APInt *)v56, 0);
      LODWORD(v38) = v42;
      if (*(_QWORD *)&v56[0])
        llvm::MetadataTracking::untrack((uint64_t)v56, *(unsigned __int8 **)&v56[0]);
      v40 = v64;
    }
    v43 = (unsigned __int8 *)v40[8];
    *(_QWORD *)&v56[0] = v43;
    v44 = v40;
    if (v43)
    {
      llvm::MetadataTracking::track((uint64_t)v56, v43, 2);
      v44 = v64;
    }
    DWORD2(v56[0]) = *((_DWORD *)v40 + 15);
    v45 = *(_QWORD *)(v10 + 832);
    if (v45)
      v46 = *(_WORD *)(v45 + 8);
    else
      v46 = 0;
    v64 = sub_1C5D52060(v10, 201, (const llvm::APInt *)v56, (llvm *)v17, 0, (uint64_t)v44, v65, v46);
    LODWORD(v65) = v47;
    if (*(_QWORD *)&v56[0])
      llvm::MetadataTracking::untrack((uint64_t)v56, *(unsigned __int8 **)&v56[0]);
    v48 = *(uint64_t **)(a5 + 32);
    v49 = *v48;
    v50 = v48[1];
    v51 = *(unsigned __int8 **)(a5 + 64);
    v58 = v51;
    if (v51)
      llvm::MetadataTracking::track((uint64_t)&v58, v51, 2);
    v59 = *(_DWORD *)(a5 + 60);
    v52 = v64;
    v53 = v65;
    sub_1C4824250(*(uint64_t **)(a5 + 96), a2, (uint64_t)v57);
    v54 = *(unsigned __int8 *)(*(_QWORD *)(a5 + 96) + 34);
    memset(v56, 0, sizeof(v56));
    v19 = sub_1C636B75C(v10, v49, v50, (uint64_t)&v58, (uint64_t)v52, v53, (uint64_t)v39, v38, (uint64_t)v57, v54, SHIDWORD(v54), 0, (uint64_t)v56);
    if (v58)
      llvm::MetadataTracking::untrack((uint64_t)&v58, v58);
  }
LABEL_24:
  if (v63 >= 0x41 && v62)
    MEMORY[0x1CAA32F9C](v62, 0x1000C8000313F17);
  return v19;
}

_QWORD *sub_1C5CBEBF0(uint64_t *a1, uint64_t a2, llvm *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t EVT;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  _BOOL4 v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  char v20;
  unsigned __int8 *v21;
  char v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t ExtendedSizeInBits;
  const char *v28;
  int v30;
  uint64_t v31;
  const char *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int16 v54;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int16 v64;
  __int128 v65;
  _QWORD *v66;
  unsigned int v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  int v75;
  unint64_t v76;
  int v77;
  unint64_t v78;
  int v79;
  uint64_t v80;
  __int16 v81;
  uint64_t v82;
  __int128 v83;
  int v84;
  char v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  int v89;
  char v90;
  char v91;
  unsigned __int8 *v92;
  int v93;
  __int128 v94;
  __int128 v95;
  llvm *v96;
  uint64_t v97;

  v96 = a3;
  v97 = a4;
  v95 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  if ((_BYTE)a3)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v96);
    v14 = 0;
    v13 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(a4 + 24), 0, (BOOL)a3);
    v14 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  *(_QWORD *)&v94 = v14 | EVT;
  *((_QWORD *)&v94 + 1) = v13;
  if (!sub_1C6329ADC((llvm::EVT *)&v94))
    return 0;
  v15 = v94;
  if (v95 != v94
    || (v16 = 0, !(_BYTE)v95) && *((_QWORD *)&v95 + 1) != *((_QWORD *)&v94 + 1))
  {
    v16 = sub_1C50989E0((unsigned __int8 *)&v95, v94, *((uint64_t *)&v94 + 1));
    v15 = v94;
  }
  if (!v15)
    return 0;
  v17 = a1[1];
  if (v15 == 1 || (v18 = 0, *(_QWORD *)(v17 + 8 * v15 + 96)))
  {
    if ((*(unsigned __int8 *)(v17 + 390 * v15 + 4115) | 4) == 4
      && (*(unsigned int (**)(uint64_t, uint64_t, BOOL))(*(_QWORD *)v17 + 624))(a1[1], a7, !v16))
    {
      v19 = (1 << *(_BYTE *)(*(_QWORD *)(a7 + 96) + 34)) | *(_QWORD *)(*(_QWORD *)(a7 + 96) + 8);
      v20 = __clz(v19 & -v19);
      v21 = *(unsigned __int8 **)(a2 + 64);
      v92 = v21;
      if (v21)
        llvm::MetadataTracking::track((uint64_t)&v92, v21, 2);
      v22 = 63 - v20;
      v93 = *(_DWORD *)(a2 + 60);
      v23 = *(unsigned __int16 *)(a5 + 24);
      if (v23 == 35 || v23 == 11)
      {
        v24 = *(_QWORD *)(a5 + 80);
        v25 = (_QWORD *)(v24 + 24);
        if (*(_DWORD *)(v24 + 32) >= 0x41u)
          v25 = (_QWORD *)*v25;
        v26 = (_QWORD *)*v25;
        if ((_BYTE)v94)
          ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v94);
        else
          ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v94);
        v33 = ExtendedSizeInBits * (int)v26;
        if ((_DWORD)v28 == 1)
        v34 = (v33 >> 3);
        sub_1C4824250(*(uint64_t **)(a7 + 96), v34, (uint64_t)&v86);
        v36 = *((_QWORD *)&v86 + 1);
        v35 = v86;
        v30 = v87;
        v37 = BYTE4(v87);
      }
      else
      {
        v30 = *(_DWORD *)(*(_QWORD *)(a7 + 96) + 16);
        if ((_BYTE)v94)
          v31 = sub_1C47A8C74((unsigned __int8 *)&v94);
        else
          v31 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v94);
        v38 = v31;
        if ((_DWORD)v32 == 1)
        v35 = 0;
        v36 = 0;
        v37 = 0;
        v34 = v38 >> 3;
      }
      v91 = 0;
      v39 = (63 - __clz((v34 | (1 << v22)) & -(v34 | (1 << v22))));
      if ((*(unsigned int (**)(uint64_t, _QWORD, uint64_t, _QWORD, _QWORD, _QWORD, uint64_t, _QWORD, char *))(*(_QWORD *)a1[1] + 664))(a1[1], *(_QWORD *)(*a1 + 56), *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, v94, *((_QWORD *)&v94 + 1), *(unsigned int *)(*(_QWORD *)(a7 + 96) + 16), v39, *(unsigned __int16 *)(*(_QWORD *)(a7 + 96) + 32), &v91))
      {
        v40 = v91 == 0;
      }
      else
      {
        v40 = 1;
      }
      if (v40)
      {
        v18 = 0;
        goto LABEL_42;
      }
      v41 = sub_1C5D9FE70(a1[1], *a1, *(_QWORD *)(*(_QWORD *)(a7 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a7 + 32) + 48), v96, v97, a5, a6);
      v43 = v42;
      v45 = *((_QWORD *)&v94 + 1);
      v44 = v94;
      if (v95 != v94 || !(_BYTE)v95 && *((_QWORD *)&v95 + 1) != *((_QWORD *)&v94 + 1))
      {
        v46 = sub_1C50989E0((unsigned __int8 *)&v95, v94, *((uint64_t *)&v94 + 1));
        v44 = v94;
        if (v46)
        {
          v48 = 1;
          if ((_BYTE)v95 && (_BYTE)v94)
          {
            if (*(unsigned __int16 *)(a1[1] + 358 * v95 + 2 * v94 + 73672) >= 0x1000u)
              v48 = 1;
            else
              v48 = 3;
          }
          v49 = *a1;
          v50 = *(uint64_t **)(a7 + 32);
          v51 = *v50;
          v52 = v50[1];
          *(_QWORD *)&v88 = v35;
          *((_QWORD *)&v88 + 1) = v36;
          v89 = v30;
          v90 = v37;
          v53 = *(_QWORD *)(a7 + 96);
          v54 = *(_WORD *)(v53 + 32);
          v55 = *(_OWORD *)(v53 + 56);
          v86 = *(_OWORD *)(v53 + 40);
          v87 = v55;
          v18 = sub_1C636B4C8(v49, v48, (uint64_t)&v92, v95, *((uint64_t *)&v95 + 1), v51, v52, v47, (uint64_t)v41, v43, &v88, v94, *((uint64_t *)&v94 + 1), (unsigned __int16)v39 | 0x100u, (v39 | 0x100uLL) >> 32, v54, (uint64_t)&v86);
          sub_1C636F27C(*a1, a7, 1uLL, (uint64_t)v18, 1uLL, v56, v57, v58);
          goto LABEL_42;
        }
        v45 = *((_QWORD *)&v94 + 1);
      }
      v59 = *a1;
      v60 = *(uint64_t **)(a7 + 32);
      v61 = *v60;
      v62 = v60[1];
      *(_QWORD *)&v83 = v35;
      *((_QWORD *)&v83 + 1) = v36;
      v84 = v30;
      v85 = v37;
      v63 = *(_QWORD *)(a7 + 96);
      v64 = *(_WORD *)(v63 + 32);
      v65 = *(_OWORD *)(v63 + 56);
      v86 = *(_OWORD *)(v63 + 40);
      v87 = v65;
      v66 = sub_1C63681B0(v59, v44, v45, (uint64_t)&v92, v61, v62, (uint64_t)v41, v43, &v83, (unsigned __int16)v39 | 0x100u, (v39 | 0x100uLL) >> 32, v64, (uint64_t)&v86, 0);
      v68 = v67;
      sub_1C636F27C(*a1, a7, 1uLL, (uint64_t)v66, 1uLL, v69, v70, v71);
      v72 = v94;
      if (v95 == v94)
      {
        v73 = *((_QWORD *)&v95 + 1);
        if ((_BYTE)v95 || *((_QWORD *)&v95 + 1) == *((_QWORD *)&v94 + 1))
          goto LABEL_74;
        v86 = v94;
      }
      else
      {
        v86 = v94;
        if ((_BYTE)v95)
        {
          v74 = sub_1C47A8C74((unsigned __int8 *)&v95);
LABEL_62:
          v76 = v74;
          v77 = v75;
          if (v72)
            v78 = sub_1C47A8C74((unsigned __int8 *)&v86);
          else
            v78 = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v86);
          if (v77 == 1 && v79 != 1)
          {
            v73 = *((_QWORD *)&v95 + 1);
          }
          else
          {
            v73 = *((_QWORD *)&v95 + 1);
            if (v76 < v78)
            {
              v80 = *(_QWORD *)(*a1 + 832);
              if (v80)
                v81 = *(_WORD *)(v80 + 8);
              else
                v81 = 0;
              v82 = (uint64_t)sub_1C5D52060(*a1, 201, (const llvm::APInt *)&v92, (llvm *)v95, *((uint64_t *)&v95 + 1), (uint64_t)v66, v68, v81);
              goto LABEL_71;
            }
          }
LABEL_74:
          v82 = sub_1C6367DA8(*a1, v95, v73, (uint64_t)v66, v68);
LABEL_71:
          v18 = (_QWORD *)v82;
LABEL_42:
          if (v92)
            llvm::MetadataTracking::untrack((uint64_t)&v92, v92);
          return v18;
        }
      }
      v74 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v95);
      goto LABEL_62;
    }
    return 0;
  }
  return v18;
}

double sub_1C5CBF190(const char *a1, char *a2, unint64_t a3, unsigned int *a4, uint64_t a5)
{
  unsigned int *v6;
  const char *v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  unsigned int v12;
  const char *v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned int v19;
  const char *v20;
  uint64_t v21;
  unsigned int *v23;
  unint64_t v24;
  const char *v25;
  unint64_t v26;
  unsigned int *v27;
  const char *v28;
  unsigned int *v29;
  unsigned int *v30;
  unsigned int v31;
  const char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unsigned int *v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int *v39;
  uint64_t v40;
  char *v41;
  unsigned int v42;
  const char *v43;
  unsigned int v44;
  __int128 v46;
  __int128 v47;

  if (a3 >= 2)
  {
    v6 = (unsigned int *)a1;
    if (a3 == 2)
    {
      v41 = a2 - 16;
      v47 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 - 2) + 40) + 16 * *((unsigned int *)a2 - 2));
      v42 = sub_1C612FE00((llvm::EVT *)&v47, a2);
      v46 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 40) + 16 * v6[2]);
      if (v42 > sub_1C612FE00((llvm::EVT *)&v46, v43))
      {
        v14 = *(_OWORD *)v6;
        v47 = *(_OWORD *)v6;
        v44 = *((_DWORD *)v41 + 2);
        *(_QWORD *)v6 = *(_QWORD *)v41;
        v6[2] = v44;
        *(_QWORD *)v41 = v47;
        *((_DWORD *)v41 + 2) = DWORD2(v47);
      }
    }
    else if ((uint64_t)a3 > 128)
    {
      v23 = a4;
      v24 = a3 >> 1;
      v25 = &a1[16 * (a3 >> 1)];
      v26 = a3 >> 1;
      if ((uint64_t)a3 <= a5)
      {
        sub_1C5CBF4F4(a1, v25, v26, a4);
        v27 = &v23[4 * v24];
        sub_1C5CBF4F4((const char *)&v6[4 * (a3 >> 1)], a2, a3 - (a3 >> 1), v27);
        v29 = &v23[4 * a3];
        v30 = v27;
        while (v30 != v29)
        {
          v47 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v30 + 40) + 16 * v30[2]);
          v31 = sub_1C612FE00((llvm::EVT *)&v47, v28);
          v46 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v23 + 40) + 16 * v23[2]);
          if (v31 <= sub_1C612FE00((llvm::EVT *)&v46, v32))
          {
            v34 = *(_QWORD *)v23;
            v6[2] = v23[2];
            *(_QWORD *)v6 = v34;
            v23 += 4;
          }
          else
          {
            v33 = *(_QWORD *)v30;
            v6[2] = v30[2];
            *(_QWORD *)v6 = v33;
            v30 += 4;
          }
          v6 += 4;
          if (v23 == v27)
          {
            if (v30 != v29)
            {
              v35 = 0;
              do
              {
                v36 = &v6[v35];
                v37 = *(_QWORD *)&v30[v35];
                v36[2] = v30[v35 + 2];
                *(_QWORD *)v36 = v37;
                v35 += 4;
              }
              while (&v30[v35] != v29);
            }
            return *(double *)&v14;
          }
        }
        if (v23 != v27)
        {
          v38 = 0;
          do
          {
            v39 = &v6[v38];
            v40 = *(_QWORD *)&v23[v38];
            v39[2] = v23[v38 + 2];
            *(_QWORD *)v39 = v40;
            v38 += 4;
          }
          while (&v23[v38] != v27);
        }
      }
      else
      {
        sub_1C5CBF190(a1, v25, v26, a4, a5);
        sub_1C5CBF190(&v6[4 * (a3 >> 1)], a2, a3 - (a3 >> 1), v23, a5);
        *(_QWORD *)&v14 = sub_1C5CBF7EC(v6, (const char *)&v6[4 * (a3 >> 1)], (unsigned int *)a2, a3 >> 1, a3 - (a3 >> 1), (char *)v23, a5).n128_u64[0];
      }
    }
    else if (a1 != a2)
    {
      v8 = a1 + 16;
      if (a1 + 16 != a2)
      {
        v9 = 0;
        v10 = a1;
        do
        {
          v11 = v8;
          v47 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)v10 + 2) + 40) + 16 * *((unsigned int *)v10 + 6));
          v12 = sub_1C612FE00((llvm::EVT *)&v47, a2);
          v46 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v10 + 40) + 16 * *((unsigned int *)v10 + 2));
          if (v12 > sub_1C612FE00((llvm::EVT *)&v46, v13))
          {
            v15 = *(_QWORD *)v11;
            v16 = *((unsigned int *)v10 + 6);
            v17 = v9;
            while (1)
            {
              v18 = (char *)v6 + v17;
              *((_QWORD *)v18 + 2) = *(_QWORD *)((char *)v6 + v17);
              *((_DWORD *)v18 + 6) = *(unsigned int *)((char *)v6 + v17 + 8);
              if (!v17)
                break;
              v47 = *(_OWORD *)(*(_QWORD *)(v15 + 40) + 16 * v16);
              v19 = sub_1C612FE00((llvm::EVT *)&v47, a2);
              v46 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)v18 - 2) + 40) + 16 * *((unsigned int *)v18 - 2));
              v17 -= 16;
              if (v19 <= sub_1C612FE00((llvm::EVT *)&v46, v20))
              {
                v21 = (uint64_t)v6 + v17 + 16;
                goto LABEL_14;
              }
            }
            v21 = (uint64_t)v6;
LABEL_14:
            *(_QWORD *)v21 = v15;
            *(_DWORD *)(v21 + 8) = v16;
          }
          v8 = v11 + 16;
          v9 += 16;
          v10 = v11;
        }
        while (v11 + 16 != a2);
      }
    }
  }
  return *(double *)&v14;
}

const char *sub_1C5CBF4F4(const char *result, const char *a2, unint64_t a3, unsigned int *a4)
{
  unsigned int *v4;
  const char *v6;
  const char *v8;
  uint64_t v9;
  unsigned int *v10;
  const char *v11;
  unsigned int *v12;
  unsigned int v13;
  const char *v14;
  unsigned int *v15;
  uint64_t v16;
  unsigned int v17;
  const char *v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  unsigned int *v22;
  unsigned int v23;
  const char *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  const char *v30;
  unsigned int v31;
  const char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;

  if (a3)
  {
    v4 = a4;
    v6 = result;
    if (a3 == 1)
    {
      *(_OWORD *)a4 = *(_OWORD *)result;
    }
    else if (a3 == 2)
    {
      v30 = a2 - 16;
      v35 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)a2 - 2) + 40) + 16 * *((unsigned int *)a2 - 2));
      v31 = sub_1C612FE00((llvm::EVT *)&v35, a2);
      v34 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 40) + 16 * *((unsigned int *)v6 + 2));
      result = (const char *)sub_1C612FE00((llvm::EVT *)&v34, v32);
      if (v31 <= result)
      {
        *(_OWORD *)v4 = *(_OWORD *)v6;
        v33 = *(_OWORD *)v30;
      }
      else
      {
        *(_OWORD *)v4 = *(_OWORD *)v30;
        v33 = *(_OWORD *)v6;
      }
      *((_OWORD *)v4 + 1) = v33;
    }
    else if ((uint64_t)a3 > 8)
    {
      v20 = &result[16 * (a3 >> 1)];
      sub_1C5CBF190(result, v20, a3 >> 1, a4, a3 >> 1);
      result = (const char *)sub_1C5CBF190(&v6[16 * (a3 >> 1)], a2, a3 - (a3 >> 1), &v4[4 * (a3 >> 1)], a3 - (a3 >> 1));
      v22 = (unsigned int *)&v6[16 * (a3 >> 1)];
      while (v22 != (unsigned int *)a2)
      {
        v35 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v22 + 40) + 16 * v22[2]);
        v23 = sub_1C612FE00((llvm::EVT *)&v35, v21);
        v34 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 40) + 16 * *((unsigned int *)v6 + 2));
        result = (const char *)sub_1C612FE00((llvm::EVT *)&v34, v24);
        if (v23 <= result)
        {
          v27 = *(_OWORD *)v6;
          v6 += 16;
          v26 = v27;
        }
        else
        {
          v25 = *(_OWORD *)v22;
          v22 += 4;
          v26 = v25;
        }
        *(_OWORD *)v4 = v26;
        v4 += 4;
        if (v6 == v20)
        {
          if (v22 != (unsigned int *)a2)
          {
            v28 = 0;
            do
            {
              *(_OWORD *)&v4[v28] = *(_OWORD *)&v22[v28];
              v28 += 4;
            }
            while (&v22[v28] != (unsigned int *)a2);
          }
          return result;
        }
      }
      if (v6 != v20)
      {
        v29 = 0;
        do
        {
          *(_OWORD *)&v4[v29] = *(_OWORD *)&v6[v29 * 4];
          v29 += 4;
        }
        while (&v6[v29 * 4] != v20);
      }
    }
    else if (result != a2)
    {
      *(_OWORD *)a4 = *(_OWORD *)result;
      v8 = result + 16;
      if (result + 16 != a2)
      {
        v9 = 0;
        v10 = a4;
        do
        {
          v11 = v8;
          v12 = v10 + 4;
          v35 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)v6 + 2) + 40) + 16 * *((unsigned int *)v6 + 6));
          v13 = sub_1C612FE00((llvm::EVT *)&v35, a2);
          v34 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v10 + 40) + 16 * v10[2]);
          result = (const char *)sub_1C612FE00((llvm::EVT *)&v34, v14);
          if (v13 <= result)
          {
            *(_OWORD *)v12 = *(_OWORD *)v11;
          }
          else
          {
            *(_OWORD *)v12 = *(_OWORD *)v10;
            v15 = v4;
            if (v10 != v4)
            {
              v16 = v9;
              while (1)
              {
                v15 = (unsigned int *)((char *)v4 + v16);
                v35 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v11 + 40) + 16 * *((unsigned int *)v6 + 6));
                v17 = sub_1C612FE00((llvm::EVT *)&v35, a2);
                v34 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)v15 - 2) + 40) + 16 * *(v15 - 2));
                result = (const char *)sub_1C612FE00((llvm::EVT *)&v34, v18);
                if (v17 <= result)
                  break;
                *(_QWORD *)v15 = *((_QWORD *)v15 - 2);
                v15[2] = *(v15 - 2);
                v16 -= 16;
                if (!v16)
                {
                  v15 = v4;
                  break;
                }
              }
            }
            v19 = *(_QWORD *)v11;
            v15[2] = *((_DWORD *)v11 + 2);
            *(_QWORD *)v15 = v19;
          }
          v8 = v11 + 16;
          v9 += 16;
          v10 = v12;
          v6 = v11;
        }
        while (v11 + 16 != a2);
      }
    }
  }
  return result;
}

__n128 sub_1C5CBF7EC(unsigned int *a1, const char *a2, unsigned int *a3, uint64_t a4, uint64_t a5, char *a6, uint64_t a7)
{
  uint64_t v8;
  unsigned int *v11;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  unsigned int v16;
  const char *v17;
  __n128 result;
  uint64_t v20;
  uint64_t v21;
  unsigned int *v22;
  unint64_t v23;
  unsigned int *v24;
  const char *v25;
  uint64_t v26;
  unint64_t v27;
  unsigned int *v28;
  unsigned int v29;
  const char *v30;
  unsigned int v31;
  unsigned int *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int *v35;
  unsigned int *v36;
  uint64_t v37;
  unint64_t v38;
  unsigned __int32 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned int *v44;
  __n128 v45;
  unsigned int *v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  unsigned int *v52;
  uint64_t v53;
  char *v54;
  unsigned int *v55;
  unsigned int v56;
  const char *v57;
  unsigned int v58;
  unsigned int *v59;
  uint64_t v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int *v63;
  unsigned int v64;
  const char *v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  unsigned int *v69;
  uint64_t v70;
  unsigned int *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  unsigned int v75;
  uint64_t v76;
  char *__src;
  unsigned int *v78;
  __int128 v80;
  __n128 v81;

  if (a5)
  {
    v8 = a5;
    v11 = (unsigned int *)a2;
    while (a4 > a7 && v8 > a7)
    {
      if (!a4)
        return result;
      v13 = 0;
      v14 = -a4;
      while (1)
      {
        v15 = &a1[v13];
        v81 = *(__n128 *)(*(_QWORD *)(*(_QWORD *)v11 + 40) + 16 * v11[2]);
        v16 = sub_1C612FE00((llvm::EVT *)&v81, a2);
        v80 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v15 + 40) + 16 * v15[2]);
        if (v16 > sub_1C612FE00((llvm::EVT *)&v80, v17))
          break;
        v13 += 4;
        if (__CFADD__(v14++, 1))
          return result;
      }
      v20 = -v14;
      __src = a6;
      v78 = a3;
      if (-v14 >= v8)
      {
        if (v14 == -1)
        {
          v71 = &a1[v13];
          result = *(__n128 *)&a1[v13];
          v81 = result;
          v72 = *(_QWORD *)v11;
          v71[2] = v11[2];
          *(_QWORD *)v71 = v72;
          v73 = v81.n128_u64[0];
          v11[2] = v81.n128_u32[2];
          *(_QWORD *)v11 = v73;
          return result;
        }
        if (v14 > 0)
          v20 = 1 - v14;
        v76 = v20 >> 1;
        v22 = &a1[4 * (v20 >> 1) + v13];
        if (a3 != v11)
        {
          v27 = ((char *)a3 - (char *)v11) >> 4;
          a3 = v11;
          do
          {
            v28 = &a3[4 * (v27 >> 1)];
            v81 = *(__n128 *)(*(_QWORD *)(*(_QWORD *)v28 + 40) + 16 * v28[2]);
            v29 = sub_1C612FE00((llvm::EVT *)&v81, a2);
            v80 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v22 + 40) + 16 * v22[2]);
            v31 = sub_1C612FE00((llvm::EVT *)&v80, v30);
            if (v29 <= v31)
              v27 >>= 1;
            else
              v27 += ~(v27 >> 1);
            if (v29 > v31)
              a3 = v28 + 4;
          }
          while (v27);
        }
        v26 = ((char *)a3 - (char *)v11) >> 4;
      }
      else
      {
        if (v8 >= 0)
          v21 = v8;
        else
          v21 = v8 + 1;
        v74 = v21 >> 1;
        a3 = &v11[4 * (v21 >> 1)];
        v22 = v11;
        if (v15 != v11)
        {
          v23 = ((char *)v11 - (char *)a1 - v13 * 4) >> 4;
          v22 = &a1[v13];
          do
          {
            v24 = &v22[4 * (v23 >> 1)];
            v81 = *(__n128 *)(*(_QWORD *)(*(_QWORD *)a3 + 40) + 16 * a3[2]);
            v75 = sub_1C612FE00((llvm::EVT *)&v81, a2);
            v80 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v24 + 40) + 16 * v24[2]);
            if (v75 > sub_1C612FE00((llvm::EVT *)&v80, v25))
            {
              v23 >>= 1;
            }
            else
            {
              v22 = v24 + 4;
              v23 += ~(v23 >> 1);
            }
          }
          while (v23);
        }
        v76 = ((char *)v22 - (char *)a1 - v13 * 4) >> 4;
        v26 = v74;
      }
      v32 = a3;
      if (v22 != v11)
      {
        v32 = v22;
        if (v11 != a3)
        {
          if (v22 + 4 == v11)
          {
            v81 = *(__n128 *)v22;
            memmove(v22, v11, (char *)a3 - (char *)v11 - 4);
            v32 = (unsigned int *)((char *)v22 + (char *)a3 - (char *)v11);
            v39 = v81.n128_u32[2];
            *(_QWORD *)v32 = v81.n128_u64[0];
            v32[2] = v39;
          }
          else if (v11 + 4 == a3)
          {
            v32 = v22 + 4;
            v81 = *((__n128 *)a3 - 1);
            if (a3 - 4 != v22)
              memmove(v22 + 4, v22, (char *)(a3 - 4) - (char *)v22 - 4);
            v40 = v81.n128_u64[0];
            v22[2] = v81.n128_u32[2];
            *(_QWORD *)v22 = v40;
          }
          else
          {
            v33 = ((char *)v11 - (char *)v22) >> 4;
            if (v33 == ((char *)a3 - (char *)v11) >> 4)
            {
              v34 = 0;
              do
              {
                v35 = &v11[v34];
                v36 = &v22[v34];
                v81 = *(__n128 *)&v22[v34];
                v37 = *(_QWORD *)&v11[v34];
                v36[2] = v11[v34 + 2];
                *(_QWORD *)v36 = v37;
                v38 = v81.n128_u64[0];
                v35[2] = v81.n128_u32[2];
                *(_QWORD *)v35 = v38;
                if (&v22[v34 + 4] == v11)
                  break;
                v34 += 4;
              }
              while (v35 + 4 != a3);
              v32 = v11;
            }
            else
            {
              v41 = ((char *)a3 - (char *)v11) >> 4;
              v42 = ((char *)v11 - (char *)v22) >> 4;
              do
              {
                v43 = v42;
                v42 = v41;
                v41 = v43 % v41;
              }
              while (v41);
              if (v42)
              {
                v44 = &v22[4 * v42];
                do
                {
                  v45 = *((__n128 *)v44 - 1);
                  v44 -= 4;
                  v81 = v45;
                  v46 = &v44[4 * v33];
                  v47 = v44;
                  do
                  {
                    v48 = v47;
                    v47 = v46;
                    v49 = *(_QWORD *)v46;
                    *((_DWORD *)v48 + 2) = *((_DWORD *)v47 + 2);
                    *v48 = v49;
                    v46 = &v22[4 * (v33 - (((char *)a3 - (char *)v47) >> 4))];
                    if (v33 < ((char *)a3 - (char *)v47) >> 4)
                      v46 = (unsigned int *)&v47[2 * v33];
                  }
                  while (v46 != v44);
                  v50 = v81.n128_u64[0];
                  *((_DWORD *)v47 + 2) = v81.n128_u32[2];
                  *v47 = v50;
                }
                while (v44 != v22);
              }
              v32 = &v22[4 * (((char *)a3 - (char *)v11) >> 4)];
            }
          }
        }
      }
      a4 = -(v76 + v14);
      v51 = v8 - v26;
      if (v76 + v26 >= v8 - (v76 + v26) - v14)
      {
        sub_1C5CBF7EC(v32, a3, v78, a4, v8 - v26, __src, a7);
        a3 = v22;
        a6 = __src;
        v51 = v26;
        a4 = v76;
        v78 = v32;
      }
      else
      {
        v52 = v22;
        a6 = __src;
        sub_1C5CBF7EC(v15, v52, v32, v76, v26, __src, a7);
        v15 = v32;
      }
      v8 = v51;
      a1 = v15;
      v11 = a3;
      a3 = v78;
      if (!v51)
        return result;
    }
    if (a4 <= v8)
    {
      if (a1 != v11)
      {
        v62 = 0;
        do
        {
          result = *(__n128 *)&a1[v62 / 4];
          *(__n128 *)&a6[v62] = result;
          v62 += 16;
        }
        while (&a1[v62 / 4] != v11);
        if (v62)
        {
          v63 = (unsigned int *)a6;
          while (v11 != a3)
          {
            v81 = *(__n128 *)(*(_QWORD *)(*(_QWORD *)v11 + 40) + 16 * v11[2]);
            v64 = sub_1C612FE00((llvm::EVT *)&v81, a2);
            v80 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v63 + 40) + 16 * v63[2]);
            if (v64 <= sub_1C612FE00((llvm::EVT *)&v80, v65))
            {
              v67 = *(_QWORD *)v63;
              a1[2] = v63[2];
              *(_QWORD *)a1 = v67;
              v63 += 4;
            }
            else
            {
              v66 = *(_QWORD *)v11;
              a1[2] = v11[2];
              *(_QWORD *)a1 = v66;
              v11 += 4;
            }
            a1 += 4;
            if (&a6[v62] == (char *)v63)
              return result;
          }
          memmove(a1, v63, a6 - (char *)v63 + v62 - 4);
        }
      }
    }
    else if (v11 != a3)
    {
      v53 = 0;
      do
      {
        result = *(__n128 *)&v11[v53];
        *(__n128 *)&a6[v53 * 4] = result;
        v53 += 4;
      }
      while (&v11[v53] != a3);
      if (v53 * 4)
      {
        v54 = &a6[v53 * 4];
        v55 = a3 - 4;
        while (v11 != a1)
        {
          v81 = *(__n128 *)(*(_QWORD *)(*((_QWORD *)v54 - 2) + 40) + 16 * *((unsigned int *)v54 - 2));
          v56 = sub_1C612FE00((llvm::EVT *)&v81, a2);
          v80 = *(_OWORD *)(*(_QWORD *)(*((_QWORD *)v11 - 2) + 40) + 16 * *(v11 - 2));
          v58 = sub_1C612FE00((llvm::EVT *)&v80, v57);
          if (v56 <= v58)
            v59 = (unsigned int *)(v54 - 16);
          else
            v59 = v11 - 4;
          if (v56 > v58)
            v11 -= 4;
          v60 = *(_QWORD *)v59;
          v61 = v59[2];
          if (v56 <= v58)
            v54 -= 16;
          v55[2] = v61;
          *(_QWORD *)v55 = v60;
          v55 -= 4;
          if (v54 == a6)
            return result;
        }
        if (v54 != a6)
        {
          v68 = 0;
          do
          {
            v69 = &v55[v68 / 4];
            v70 = *(_QWORD *)&v54[v68 - 16];
            v69[2] = *(_DWORD *)&v54[v68 - 8];
            *(_QWORD *)v69 = v70;
            v68 -= 16;
          }
          while (&v54[v68] != a6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C5CBFE54(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  char v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  int v15;
  BOOL v16;
  BOOL v17;
  __int128 v18;
  _BYTE v20[48];
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v3 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v4 = v3 | (v3 >> 2) | ((v3 | (v3 >> 2)) >> 4);
  v5 = ((v4 | (v4 >> 8)) >> 16) | v4 | (v4 >> 8);
  if ((v5 + 1) > 0x40)
    v6 = v5 + 1;
  else
    v6 = 64;
  if (a2 >= 3)
    v7 = v6;
  else
    v7 = a2;
  if ((*(_DWORD *)a1 & 1) == 0)
  {
    v8 = *(_QWORD *)(a1 + 8);
    v9 = *(_DWORD *)(a1 + 16);
    if (v7 > 2)
    {
      *(_QWORD *)(a1 + 8) = operator new(24 * v7, (std::align_val_t)8uLL);
      *(_QWORD *)(a1 + 16) = v7;
    }
    else
    {
      *(_DWORD *)a1 |= 1u;
    }
    sub_1C6329EF4((int *)a1, v8, v8 + 24 * v9);
    JUMPOUT(0x1CAA32FB4);
  }
  v10 = 0;
  v11 = v20;
  v12 = 1;
  v13 = a1 + 8;
  do
  {
    v14 = v10;
    v15 = *(_DWORD *)(v13 + 8);
    if (*(_QWORD *)v13)
      v16 = 0;
    else
      v16 = v15 == -1;
    if (v16)
    {
      if (*(_DWORD *)(v13 + 16) == 0x7FFFFFFF)
        goto LABEL_24;
LABEL_23:
      v18 = *(_OWORD *)v13;
      *((_QWORD *)v11 + 2) = *(_QWORD *)(v13 + 16);
      *(_OWORD *)v11 = v18;
      v11 += 24;
      goto LABEL_24;
    }
    if (*(_QWORD *)v13)
      v17 = 0;
    else
      v17 = v15 == -2;
    if (!v17 || *(_DWORD *)(v13 + 16) != 0x80000000)
      goto LABEL_23;
LABEL_24:
    v13 = a1 + 8 + 24 * v12;
    v10 = 1;
    v12 = 2;
  }
  while ((v14 & 1) == 0);
  if (v7 > 2)
  {
    *(_DWORD *)a1 &= ~1u;
    *(_QWORD *)(a1 + 8) = operator new(24 * v7, (std::align_val_t)8uLL);
    *(_QWORD *)(a1 + 16) = v7;
  }
  return sub_1C6329EF4((int *)a1, (uint64_t)v20, (uint64_t)v11);
}

uint64_t sub_1C5CC0020(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6)
{
  int v8;
  uint64_t v9;
  uint64_t result;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  unsigned __int8 *v17;
  uint64_t v18;
  unint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  _QWORD v24[2];

  v24[0] = a5;
  v24[1] = a6;
  v8 = *(unsigned __int16 *)(a1 + 24);
  if (v8 != 150
    || (v9 = *(_QWORD *)(a1 + 32),
        result = *(_QWORD *)(v9 + 40),
        v11 = (unsigned __int8 *)(*(_QWORD *)(result + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a1 + 32) + 48)),
        v12 = *v11,
        v12 != a5)
    || ((v13 = *((_QWORD *)v11 + 1), !v12) ? (v14 = v13 == a6) : (v14 = 1),
        !v14 || *(_QWORD *)(v9 + 80) != a3 || *(_DWORD *)(v9 + 88) != a4))
  {
    v15 = *(unsigned __int16 *)(a3 + 24);
    if (v15 != 35 && v15 != 11)
      return 0;
    if (v8 != 149)
      return 0;
    v17 = (unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a1 + 32) + 40)
                            + 16 * *(unsigned int *)(*(_QWORD *)(a1 + 32) + 8));
    if (*v17 != a5 || !(_BYTE)a5 && *((_QWORD *)v17 + 1) != a6)
      return 0;
    v18 = *(_QWORD *)(a3 + 80);
    v19 = (unint64_t *)(v18 + 24);
    if (*(_DWORD *)(v18 + 32) >= 0x41u)
      v19 = (unint64_t *)*v19;
    v20 = *v19;
    if (!(v20 % sub_1C52B71D4((unsigned __int8 *)v24)))
    {
      v21 = *(_QWORD *)(a3 + 80);
      v22 = (unint64_t *)(v21 + 24);
      if (*(_DWORD *)(v21 + 32) >= 0x41u)
        v22 = (unint64_t *)*v22;
      v23 = *v22;
      return *(_QWORD *)(*(_QWORD *)(a1 + 32)
                       + 40 * (v23 / sub_1C52B71D4((unsigned __int8 *)v24)));
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C5CC017C(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, _DWORD *a6, uint64_t a7)
{
  uint64_t *v13;
  int v14;
  int v15;
  int v16;
  unint64_t v17;
  uint64_t v18;
  _DWORD *i;
  uint64_t *v20;
  unsigned int v22;
  unsigned int *v23;
  int *v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  int *v35;
  int v36;
  int v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  llvm *v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned __int8 *v57;
  int v58;
  unsigned __int8 *v59;
  int v60;
  __int128 v61;
  void *v62;
  uint64_t v63;
  _QWORD v64[8];

  v64[6] = *MEMORY[0x1E0C80C00];
  v13 = *(uint64_t **)a1;
  v61 = *(_OWORD *)(*(_QWORD *)(**(_QWORD **)(a4 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a4 + 32) + 8));
  v14 = *(unsigned __int16 *)(a4 + 56);
  v15 = sub_1C612FE00((llvm::EVT *)&v61, a2);
  if (!(_BYTE)v61 || !*(_QWORD *)(v13[1] + 8 * v61 + 96) || !a7)
    return 0;
  v16 = v15;
  v17 = **(unsigned int **)(a1 + 8);
  v18 = 4 * a7;
  for (i = a6; *i < (int)v17; ++i)
  {
    v18 -= 4;
    if (!v18)
      return 0;
  }
  v62 = v64;
  v63 = 0xC00000000;
  sub_1C4893E04((char *)&v62, v17, 0);
  if (v14)
  {
    v22 = 0;
    v23 = *(unsigned int **)(a1 + 8);
    v24 = (int *)v62;
    v25 = *v23;
    v26 = *v23;
    while (!v26)
    {
LABEL_28:
      if (++v22 == v14)
      {
        v20 = 0;
        goto LABEL_42;
      }
    }
    v27 = 0;
    while (1)
    {
      if ((_DWORD)v63)
      {
        v28 = 0;
        v29 = 4 * v63;
        do
        {
          v24[v28] = v28;
          ++v28;
          v29 -= 4;
        }
        while (v29);
        v25 = *v23;
      }
      if (v16)
      {
        v30 = &v24[v27];
        v31 = v25 + v22 * v16;
        v32 = 4 * v16;
        do
        {
          *v30++ = v31++;
          v32 -= 4;
        }
        while (v32);
        v25 = *v23;
      }
      if (!v25)
        break;
      v33 = v25;
      v34 = v24;
      v35 = a6;
      while (1)
      {
        v37 = *v34++;
        v36 = v37;
        v39 = *v35++;
        v38 = v39;
        if ((v39 & 0x80000000) == 0 && v36 != v38)
          break;
        if (!--v33)
          goto LABEL_30;
      }
      v27 += v16;
      v26 = v25;
      if (v25 == (_DWORD)v27)
        goto LABEL_28;
    }
LABEL_30:
    v40 = *v13;
    v41 = *(uint64_t **)(a1 + 16);
    v42 = *v41;
    v43 = *(unsigned __int8 **)(*v41 + 64);
    v59 = v43;
    if (v43)
    {
      llvm::MetadataTracking::track((uint64_t)&v59, v43, 2);
      v45 = *v13;
      v46 = *(uint64_t **)(a1 + 16);
      v44 = *v46;
      v43 = *(unsigned __int8 **)(*v46 + 64);
    }
    else
    {
      v44 = v42;
      v45 = v40;
    }
    v60 = *(_DWORD *)(v42 + 60);
    v47 = *(_QWORD *)(a1 + 24);
    v48 = *(llvm **)v47;
    v49 = *(_QWORD *)(v47 + 8);
    v50 = (uint64_t *)(*(_QWORD *)(a4 + 32) + 40 * v22);
    v51 = *v50;
    v52 = v50[1];
    v57 = v43;
    if (v43)
      llvm::MetadataTracking::track((uint64_t)&v57, v43, 2);
    v58 = *(_DWORD *)(v44 + 60);
    v53 = sub_1C6366C9C(v45, v27, (uint64_t)&v57, 0);
    v56 = *(_QWORD *)(v40 + 832);
    if (v56)
      LOWORD(v56) = *(_WORD *)(v56 + 8);
    v20 = sub_1C5D58E08(v40, (const char *)0x96, (const llvm::APInt *)&v59, v48, v49, (uint64_t)a2, a3, v55, v51, v52, v53, v54, SHIDWORD(v54), v56);
    if (v57)
      llvm::MetadataTracking::untrack((uint64_t)&v57, v57);
    if (v59)
      llvm::MetadataTracking::untrack((uint64_t)&v59, v59);
  }
  else
  {
    v20 = 0;
  }
LABEL_42:
  if (v62 != v64)
    free(v62);
  return v20;
}

uint64_t sub_1C5CC048C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t *a8, uint64_t *a9, uint64_t a10)
{
  int v19;
  uint64_t *v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  int v34;
  int v35;
  _DWORD *v36;
  uint64_t v37;
  unsigned int v38;
  int v39;
  int v40;
  unsigned int v43;
  uint64_t *v44;
  uint64_t v45;
  int *i;
  int v47;
  int *v48;
  int v49;
  int *v50;
  uint64_t v51;
  int v52;
  int v53;
  uint64_t v54;
  uint64_t *v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;

  if (sub_1C636FD00(*(_QWORD *)(a4 + 80), **(const char ***)(a4 + 40), *(_QWORD *)(*(_QWORD *)(a4 + 40) + 8)))
    return 0;
  *a9 = 0;
  *((_DWORD *)a9 + 2) = 0;
  *((_DWORD *)a8 + 2) = 0;
  *a8 = 0;
  *(_DWORD *)(a10 + 8) = 0;
  v19 = *(_DWORD *)a1;
  if (!*(_DWORD *)a1)
    return 1;
  v20 = a9;
  v59 = a7;
  v21 = 0;
  v22 = 0;
  v23 = a10 + 16;
  do
  {
    v24 = *(_DWORD *)(*(_QWORD *)(a3 + 80) + 4 * v22);
    if (v24 < 0)
      goto LABEL_26;
    if (v24 < v19)
      v25 = v19;
    else
      v25 = -v19;
    if (!a2)
      v25 = 0;
    v24 += v25;
    if (v24 >= v19)
    {
      v27 = a5;
      v28 = a6;
    }
    else
    {
      v24 = *(_DWORD *)(*(_QWORD *)(a4 + 80) + 4 * v24);
      if (v24 < 0)
        goto LABEL_26;
      v26 = *(_QWORD *)(a4 + 32) + 40 * (v24 >= v19);
      v27 = *(_QWORD *)v26;
      v28 = *(_DWORD *)(v26 + 8);
    }
    v29 = *(unsigned __int16 *)(v27 + 24);
    if (v29 == 51)
    {
      v30 = *(_DWORD *)(a10 + 12);
      v24 = -1;
      goto LABEL_27;
    }
    v24 %= v19;
    v31 = *a8;
    if (!*a8 || (v32 = *((_DWORD *)a8 + 2), v31 == v27) && v32 == v28)
    {
      *a8 = v27;
      *((_DWORD *)a8 + 2) = v28;
      goto LABEL_25;
    }
    v33 = *v20;
    if (!*v20 || (v34 = *((_DWORD *)v20 + 2), v33 == v27) && v34 == v28)
    {
      *v20 = v27;
      *((_DWORD *)v20 + 2) = v28;
      v24 += *(_DWORD *)a1;
LABEL_25:
      v21 = *(_DWORD *)(a10 + 8);
LABEL_26:
      v30 = *(_DWORD *)(a10 + 12);
LABEL_27:
      if (v21 >= v30)
      {
        v55 = v20;
        v57 = v23;
        llvm::SmallVectorBase<unsigned int>::grow_pod(a10, v23, v21 + 1, 4);
        v20 = v55;
        v23 = v57;
        v21 = *(_DWORD *)(a10 + 8);
      }
      *(_DWORD *)(*(_QWORD *)a10 + 4 * v21) = v24;
      v21 = *(_DWORD *)(a10 + 8) + 1;
      *(_DWORD *)(a10 + 8) = v21;
      goto LABEL_30;
    }
    if (v29 != 153)
    {
LABEL_44:
      v43 = 0;
      goto LABEL_50;
    }
    v35 = *(_DWORD *)(*(_QWORD *)(v27 + 80) + 4 * v24);
    if (v35 < 0
      || (v36 = (_DWORD *)(*(_QWORD *)(v27 + 32) + 40 * (v35 >= v19)),
          v37 = *(_QWORD *)v36,
          *(_WORD *)(*(_QWORD *)v36 + 24) == 51))
    {
      v38 = *(_DWORD *)(a10 + 12);
      v39 = -1;
    }
    else
    {
      v40 = v36[2];
      v39 = v35 % v19;
      if (v37 != v31 || v40 != v32)
      {
        if (v37 != v33 || v40 != v34)
          goto LABEL_44;
        v39 += v19;
      }
      v38 = *(_DWORD *)(a10 + 12);
    }
    if (v21 >= v38)
    {
      v56 = v20;
      v58 = v23;
      llvm::SmallVectorBase<unsigned int>::grow_pod(a10, v23, v21 + 1, 4);
      v20 = v56;
      v23 = v58;
      v21 = *(_DWORD *)(a10 + 8);
    }
    *(_DWORD *)(*(_QWORD *)a10 + 4 * v21) = v39;
    v21 = *(_DWORD *)(a10 + 8) + 1;
    *(_DWORD *)(a10 + 8) = v21;
    v43 = 4;
LABEL_50:
    if (v43 <= 1)
      v43 = 1;
    if (v43 != 4)
      return 0;
LABEL_30:
    ++v22;
    v19 = *(_DWORD *)a1;
  }
  while (v22 != *(_DWORD *)a1);
  if (!v21)
    return 1;
  v44 = v20;
  v45 = 4 * v21;
  for (i = *(int **)a10; *i < 0; ++i)
  {
    v45 -= 4;
    if (!v45)
      return 1;
  }
  if (((*(uint64_t (**)(uint64_t))(*(_QWORD *)v59 + 488))(v59) & 1) != 0)
    return 1;
  v60 = *(_OWORD *)a8;
  v47 = *((_DWORD *)v44 + 2);
  *a8 = *v44;
  *((_DWORD *)a8 + 2) = v47;
  *v44 = v60;
  *((_DWORD *)v44 + 2) = DWORD2(v60);
  v48 = *(int **)a10;
  v49 = *(_DWORD *)(a10 + 8);
  if (v49)
  {
    v50 = *(int **)a10;
    v51 = *(unsigned int *)(a10 + 8);
    do
    {
      v52 = *v50;
      if ((*v50 & 0x80000000) == 0)
      {
        if (v52 >= v49)
          v53 = -v49;
        else
          v53 = v49;
        *v50 = v53 + v52;
      }
      ++v50;
      --v51;
    }
    while (v51);
    v54 = *(unsigned int *)(a10 + 8);
  }
  else
  {
    v54 = 0;
  }
  return (*(uint64_t (**)(uint64_t, int *, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v59 + 488))(v59, v48, v54, **(_QWORD **)(a1 + 8), *(_QWORD *)(*(_QWORD *)(a1 + 8) + 8));
}

unint64_t sub_1C5CC0834(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t *v11;
  unsigned __int8 v13;

  if (*(_QWORD *)(a1 + 288))
  {
    sub_1C6329FC8(a1 + 272, a2, a2);
    return ((unint64_t)v13 << 32) | 1;
  }
  else
  {
    v4 = *(_QWORD *)a1;
    v5 = *(unsigned int *)(a1 + 8);
    if ((_DWORD)v5)
    {
      v6 = *a2;
      v7 = 16 * v5;
      v8 = (_DWORD *)(v4 + 8);
      while (*((_QWORD *)v8 - 1) != v6 || *v8 != *((_DWORD *)a2 + 2))
      {
        v8 += 4;
        v7 -= 16;
        if (!v7)
          goto LABEL_7;
      }
      if (v7)
        return 1;
LABEL_7:
      if (v5 <= 0xF)
        goto LABEL_11;
      do
      {
        v9 = (uint64_t *)(*(_QWORD *)a1 + 16 * v5 - 16);
        sub_1C6329FC8(a1 + 272, v9, v9);
        LODWORD(v5) = *(_DWORD *)(a1 + 8) - 1;
        *(_DWORD *)(a1 + 8) = v5;
      }
      while ((_DWORD)v5);
      sub_1C6329FC8(a1 + 272, a2, a2);
    }
    else
    {
      v6 = *a2;
LABEL_11:
      v10 = a2[1];
      if (v5 >= *(_DWORD *)(a1 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod(a1, a1 + 16, v5 + 1, 16);
        v4 = *(_QWORD *)a1;
        v5 = *(unsigned int *)(a1 + 8);
      }
      v11 = (uint64_t *)(v4 + 16 * v5);
      *v11 = v6;
      v11[1] = v10;
      ++*(_DWORD *)(a1 + 8);
    }
    return 0x100000001;
  }
}

uint64_t *sub_1C5CC0960(uint64_t a1, _QWORD *a2, uint64_t *a3)
{
  uint64_t *result;
  uint64_t *v4;
  uint64_t *v5;
  unint64_t v6;
  unsigned int v7;
  uint64_t *v8;
  unint64_t v9;
  unsigned int v10;

  v5 = *(uint64_t **)(a1 + 8);
  result = (uint64_t *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    v6 = *a3;
    v7 = *((_DWORD *)a3 + 2);
    while (1)
    {
      while (1)
      {
        v8 = v4;
        v9 = v4[4];
        if (v6 >= v9)
          break;
LABEL_4:
        v4 = (uint64_t *)*v8;
        result = v8;
        if (!*v8)
          goto LABEL_12;
      }
      if (v9 >= v6)
      {
        v10 = *((_DWORD *)v8 + 10);
        if (v7 < v10)
          goto LABEL_4;
        if (v10 >= v7)
          goto LABEL_12;
      }
      result = v8 + 1;
      v4 = (uint64_t *)v8[1];
      if (!v4)
        goto LABEL_12;
    }
  }
  v8 = result;
LABEL_12:
  *a2 = v8;
  return result;
}

unint64_t sub_1C5CC09C8(uint64_t *a1, uint64_t a2, unint64_t a3, llvm *a4, uint64_t a5, _BYTE *a6, uint64_t a7, uint64_t a8)
{
  unsigned __int8 *v14;
  unsigned int v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unsigned int v24;
  __int128 v25;
  int v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int16 v38;
  uint64_t v39;
  uint64_t v41;
  __int128 v42;
  unsigned __int8 *v43;
  int v44;

  *a6 = 0;
  v14 = *(unsigned __int8 **)(a2 + 64);
  v43 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v43, v14, 2);
  v44 = *(_DWORD *)(a2 + 60);
  v15 = *(unsigned __int16 *)(a2 + 24);
  if (v15 > 0xA)
  {
    if (v15 == 253)
    {
      v24 = *(unsigned __int16 *)(a2 + 26);
      if ((v24 & 0x380) == 0)
      {
        v25 = *(_OWORD *)(a2 + 80);
        if ((v24 & 0xC00) != 0)
          v26 = (v24 >> 10) & 3;
        else
          v26 = 1;
        *a6 = 1;
        v23 = sub_1C636B5B0(*a1, v26, (uint64_t)&v43, (uint64_t)a4, a5, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), a8, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), v25, *((uint64_t *)&v25 + 1), *(_QWORD *)(a2 + 96));
        goto LABEL_32;
      }
    }
    else if (v15 == 11)
    {
      v42 = *(_OWORD *)(*(_QWORD *)(a2 + 40) + 16 * a3);
      if (sub_1C6329ADC((llvm::EVT *)&v42))
        v39 = 198;
      else
        v39 = 199;
      v36 = *a1;
      v41 = *(_QWORD *)(*a1 + 832);
      if (v41)
        v38 = *(_WORD *)(v41 + 8);
      else
        v38 = 0;
LABEL_31:
      v23 = sub_1C5D52060(v36, v39, (const llvm::APInt *)&v43, a4, a5, a2, a3, v38);
LABEL_32:
      v35 = (unint64_t)v23;
      goto LABEL_33;
    }
  }
  else if (v15 == 3)
  {
    v27 = sub_1C5CC0D6C(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), (uint64_t)a4, a5);
    if (v27)
    {
      v30 = *(_QWORD *)(a2 + 32);
      v31 = *(_QWORD *)(v30 + 40);
      v32 = *(_QWORD *)(v30 + 48);
      v33 = *(_QWORD *)(*a1 + 832);
      if (v33)
        LOWORD(v33) = *(_WORD *)(v33 + 8);
      v23 = sub_1C5D56C70(*a1, 3, (const llvm::APInt *)&v43, a4, a5, (uint64_t)v27, v28, v29, v31, v32, v33);
      goto LABEL_32;
    }
  }
  else if (v15 == 4)
  {
    v16 = sub_1C5CC0F14(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), (uint64_t)a4, a5);
    if (v16)
    {
      v19 = *(_QWORD *)(a2 + 32);
      v20 = *(_QWORD *)(v19 + 40);
      v21 = *(_QWORD *)(v19 + 48);
      v22 = *(_QWORD *)(*a1 + 832);
      if (v22)
        LOWORD(v22) = *(_WORD *)(v22 + 8);
      v23 = sub_1C5D56C70(*a1, 4, (const llvm::APInt *)&v43, a4, a5, (uint64_t)v16, v17, v18, v20, v21, v22);
      goto LABEL_32;
    }
  }
  if (!(_BYTE)a4)
  {
    v35 = a4;
    goto LABEL_33;
  }
  v34 = a1[1];
  if (a4 == 1 || (v35 = 0, *(_QWORD *)(v34 + 8 * a4 + 96)))
  {
    if (*(_BYTE *)(v34 + 390 * a4 + 4062))
    {
      v35 = 0;
      goto LABEL_33;
    }
    v36 = *a1;
    v37 = *(_QWORD *)(*a1 + 832);
    if (v37)
      v38 = *(_WORD *)(v37 + 8);
    else
      v38 = 0;
    v39 = 200;
    goto LABEL_31;
  }
LABEL_33:
  if (v43)
    llvm::MetadataTracking::untrack((uint64_t)&v43, v43);
  return v35;
}

uint64_t sub_1C5CC0C64(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int8 *v6;
  uint64_t v7;
  llvm *v8;
  uint64_t v9;
  uint64_t v10;
  __int16 v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t result;
  uint64_t (**v17)();
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unsigned __int8 *v21;
  int v22;

  v6 = *(unsigned __int8 **)(a2 + 64);
  v21 = v6;
  if (v6)
    llvm::MetadataTracking::track((uint64_t)&v21, v6, 2);
  v22 = *(_DWORD *)(a2 + 60);
  v7 = *(_QWORD *)(a2 + 40);
  v8 = *(llvm **)v7;
  v9 = *(_QWORD *)(v7 + 8);
  v10 = *(_QWORD *)(*a1 + 832);
  if (v10)
    v11 = *(_WORD *)(v10 + 8);
  else
    v11 = 0;
  v12 = sub_1C5D52060(*a1, 201, (const llvm::APInt *)&v21, v8, v9, a3, 0, v11);
  v13 = *a1;
  v14 = *(_QWORD *)(*a1 + 656);
  *(_QWORD *)(v13 + 656) = &v17;
  v17 = &off_1E8197EE8;
  v18 = v14;
  v19 = v13;
  v20 = a1;
  sub_1C5D6146C(v13, a2, 0, (uint64_t)v12, v15);
  sub_1C5D6146C(*a1, a2, 1, a3, 1);
  sub_1C5C5B9D4(a1, a2);
  result = sub_1C5C5B004((uint64_t)a1, (uint64_t)v12);
  *(_QWORD *)(v19 + 656) = v18;
  if (v21)
    return llvm::MetadataTracking::untrack((uint64_t)&v21, v21);
  return result;
}

uint64_t *sub_1C5CC0D6C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  llvm *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  unsigned __int8 *v30;
  int v31;

  if (!(_BYTE)a4)
    return 0;
  v10 = a1[1];
  if (a4 == 1 || (v11 = 0, *(_QWORD *)(v10 + 8 * a4 + 96)))
  {
    if (*(_BYTE *)(v10 + 390 * a4 + 4066))
    {
      return 0;
    }
    else
    {
      v12 = (uint64_t *)(*(_QWORD *)(a2 + 40) + 16 * a3);
      v13 = *v12;
      v14 = v12[1];
      v15 = *(unsigned __int8 **)(a2 + 64);
      v30 = v15;
      if (v15)
        llvm::MetadataTracking::track((uint64_t)&v30, v15, 2);
      v31 = *(_DWORD *)(a2 + 60);
      v29 = 0;
      v16 = sub_1C5CC09C8(a1, a2, a3, a4, a5, &v29);
      if (v16)
      {
        v19 = v16;
        v20 = v17;
        sub_1C5C5B004((uint64_t)a1, v16);
        if (v29)
          sub_1C5CC0C64(a1, a2, v19);
        v21 = *a1;
        v22 = *(_QWORD *)(v19 + 40) + 16 * v20;
        v23 = *(llvm **)v22;
        v24 = *(_QWORD *)(v22 + 8);
        v25 = sub_1C6367494(v21, v13, v14);
        v28 = *(_QWORD *)(v21 + 832);
        if (v28)
          LOWORD(v28) = *(_WORD *)(v28 + 8);
        v11 = sub_1C5D56C70(v21, 204, (const llvm::APInt *)&v30, v23, v24, v19, v20, v27, v25, v26, v28);
      }
      else
      {
        v11 = 0;
      }
      if (v30)
        llvm::MetadataTracking::untrack((uint64_t)&v30, v30);
    }
  }
  return v11;
}

uint64_t *sub_1C5CC0F14(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  char v20;
  unsigned __int8 *v21;
  int v22;

  v10 = (uint64_t *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  v11 = *v10;
  v12 = v10[1];
  v13 = *(unsigned __int8 **)(a2 + 64);
  v21 = v13;
  if (v13)
    llvm::MetadataTracking::track((uint64_t)&v21, v13, 2);
  v22 = *(_DWORD *)(a2 + 60);
  v20 = 0;
  v14 = sub_1C5CC09C8(a1, a2, a3, a4, a5, &v20);
  if (v14)
  {
    v16 = v14;
    v17 = v15;
    sub_1C5C5B004((uint64_t)a1, v14);
    if (v20)
      sub_1C5CC0C64(a1, a2, v16);
    v18 = sub_1C5D3F9A0(*a1, v16, v17, (const llvm::APInt *)&v21, v11, v12);
  }
  else
  {
    v18 = 0;
  }
  if (v21)
    llvm::MetadataTracking::untrack((uint64_t)&v21, v21);
  return v18;
}

uint64_t sub_1C5CC1024()
{
  int v1;
  __n128 v2;
  int *v3;
  int v4;

  LODWORD(v3) = 1;
  v2.n128_u64[0] = (unint64_t)"Enable DAG combiner's use of IR alias analysis";
  v2.n128_u64[1] = 46;
  sub_1C61B2D38((uint64_t)&unk_1ED823AB8, "combiner-global-alias-analysis", &v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED823AB8, &dword_1C475E000);
  v4 = 1;
  LOBYTE(v1) = 1;
  v2.n128_u64[0] = (unint64_t)"Enable DAG combiner's use of TBAA";
  v2.n128_u64[1] = 33;
  v3 = &v1;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED823B78, "combiner-use-tbaa", &v4, (_BYTE **)&v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED823B78, &dword_1C475E000);
  v4 = 1;
  v2.n128_u64[0] = (unint64_t)"Bypass the profitability model of load slicing";
  v2.n128_u64[1] = 46;
  LOBYTE(v1) = 0;
  v3 = &v1;
  sub_1C6148018((llvm::cl::Option *)&unk_1ED823C38, "combiner-stress-load-slicing", &v4, &v2, (_BYTE **)&v3);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED823C38, &dword_1C475E000);
  v4 = 1;
  LOBYTE(v1) = 1;
  v2.n128_u64[0] = (unint64_t)"DAG combiner may split indexing from loads";
  v2.n128_u64[1] = 42;
  v3 = &v1;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED823CF8, "combiner-split-load-index", &v4, (_BYTE **)&v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED823CF8, &dword_1C475E000);
  v4 = 1;
  LOBYTE(v1) = 1;
  v2.n128_u64[0] = (unint64_t)"DAG combiner enable merging multiple stores into a wider store";
  v2.n128_u64[1] = 62;
  v3 = &v1;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED823DB8, "combiner-store-merging", &v4, (_BYTE **)&v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED823DB8, &dword_1C475E000);
  v4 = 1;
  v1 = 2048;
  v2.n128_u64[0] = (unint64_t)"Limit the number of operands to inline for Token Factors";
  v2.n128_u64[1] = 56;
  v3 = &v1;
  sub_1C61798D0((uint64_t)&unk_1ED823E78, "combiner-tokenfactor-inline-limit", &v4, &v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &unk_1ED823E78, &dword_1C475E000);
  v4 = 1;
  v1 = 10;
  v2.n128_u64[0] = (unint64_t)"Limit the number of times for the same StoreNode and RootNode to bail out in store "
                                     "merging dependence check";
  v2.n128_u64[1] = 107;
  v3 = &v1;
  sub_1C632A17C(&v4, &v3, (__int128 *)&v2);
  __cxa_atexit((void (*)(void *))sub_1C4785FB8, &qword_1ED823F38, &dword_1C475E000);
  v4 = 1;
  LOBYTE(v1) = 1;
  v2.n128_u64[0] = (unint64_t)"DAG combiner enable reducing the width of load/op/store sequence";
  v2.n128_u64[1] = 64;
  v3 = &v1;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED823FF8, "combiner-reduce-load-op-store-width", &v4, (_BYTE **)&v3, &v2);
  __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED823FF8, &dword_1C475E000);
  v4 = 1;
  LOBYTE(v1) = 1;
  v2.n128_u64[0] = (unint64_t)"DAG combiner enable load/<replace bytes>/store with a narrower store";
  v2.n128_u64[1] = 68;
  v3 = &v1;
  sub_1C4E5DE0C((llvm::cl::Option *)&unk_1ED8240B8, "combiner-shrink-load-replace-store-with-store", &v4, (_BYTE **)&v3, &v2);
  return __cxa_atexit((void (*)(void *))sub_1C484246C, &unk_1ED8240B8, &dword_1C475E000);
}

_QWORD *sub_1C5CC1314(_QWORD *result)
{
  uint64_t v1;
  unint64_t v2;

  result[18] = 0;
  v1 = *(_QWORD *)(result[4] + 640);
  v2 = *(_QWORD *)(v1 + 48) & 0xFFFFFFFFFFFFFFF8;
  if (v1 + 48 == v2)
  {
    v2 = 0;
  }
  else
  {
    if (!v2 || (*(_BYTE *)v2 & 4) == 0)
    {
      while ((*(_WORD *)(v2 + 44) & 4) != 0)
        v2 = *(_QWORD *)v2 & 0xFFFFFFFFFFFFFFF8;
    }
    result[18] = v2;
  }
  result[17] = v2;
  return result;
}

uint64_t sub_1C5CC1364(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 **v28;
  uint64_t v29;
  unsigned __int8 *v30;
  unsigned __int8 *v31;
  uint64_t result;
  unsigned __int8 *v33;

  v3 = *(_QWORD *)(a1 + 136);
  v2 = *(_QWORD *)(a1 + 144);
  if (v3 == v2)
    goto LABEL_65;
  if (!v3 || (v4 = *(_QWORD *)(a1 + 136), (*(_BYTE *)v3 & 4) == 0))
  {
    v4 = *(_QWORD *)(a1 + 136);
    if ((*(_WORD *)(v3 + 44) & 8) != 0)
    {
      v4 = *(_QWORD *)(a1 + 136);
      do
        v4 = *(_QWORD *)(v4 + 8);
      while ((*(_WORD *)(v4 + 44) & 8) != 0);
    }
  }
  if (!v2)
    v2 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 640) + 48;
  v5 = *(_QWORD *)(v4 + 8);
  if (v3 != v2)
  {
    while (1)
    {
      v9 = v3;
      v3 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFFFF8;
      if (!v3 || (*(_BYTE *)v3 & 4) == 0)
      {
        while ((*(_WORD *)(v3 + 44) & 4) != 0)
          v3 = *(_QWORD *)v3 & 0xFFFFFFFFFFFFFFF8;
      }
      v10 = *(unsigned int *)(v9 + 40);
      if (!(_DWORD)v10)
        goto LABEL_30;
      v11 = 0;
      v12 = 32 * v10;
      v13 = (unsigned int *)(*(_QWORD *)(v9 + 32) + 4);
      do
      {
        if (!*(v13 - 1))
        {
          if ((*(v13 - 1) & 0x1000000) != 0)
          {
            if (v11)
              goto LABEL_30;
            v11 = *v13;
          }
          else if ((*v13 & 0x80000000) != 0)
          {
            goto LABEL_30;
          }
        }
        v13 += 8;
        v12 -= 32;
      }
      while (v12);
      if (!v11)
        goto LABEL_30;
      v14 = *(_QWORD *)(a1 + 32);
      v15 = *(_DWORD *)(v14 + 416);
      if (!v15)
        goto LABEL_36;
      v16 = *(_QWORD *)(v14 + 400);
      v17 = v15 - 1;
      v18 = v17 & (37 * v11);
      v19 = *(_DWORD *)(v16 + 4 * v18);
      if (v11 != v19)
        break;
LABEL_30:
      if (v3 == v2)
        goto LABEL_10;
    }
    v20 = 1;
    while (v19 != -1)
    {
      v21 = v18 + v20++;
      v18 = v21 & v17;
      v19 = *(_DWORD *)(v16 + 4 * v18);
      if (v11 == v19)
        goto LABEL_30;
    }
LABEL_36:
    v22 = *(_QWORD *)(v14 + 744);
    v23 = *(_QWORD *)(v14 + 752);
    while (v22 != v23)
    {
      if (*(_DWORD *)(v22 + 8) == v11)
        goto LABEL_30;
      v22 += 16;
    }
    if (sub_1C4A91738(*(_QWORD *)(a1 + 48), v11))
    {
      v24 = *(_QWORD *)(v9 + 24);
      if (*(_QWORD *)(a1 + 144) == v9)
      {
        if (*(_QWORD *)(v24 + 56) == v9)
          v25 = 0;
        else
          v25 = *(_QWORD *)v9 & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)(a1 + 144) = v25;
      }
      v26 = v9;
      if ((*(_BYTE *)v9 & 4) == 0)
      {
        v26 = v9;
        if ((*(_WORD *)(v9 + 44) & 8) != 0)
        {
          v26 = v9;
          do
            v26 = *(_QWORD *)(v26 + 8);
          while ((*(_WORD *)(v26 + 44) & 8) != 0);
        }
      }
      sub_1C487FE80(v24 + 40, v9, *(_QWORD *)(v26 + 8));
    }
    goto LABEL_30;
  }
LABEL_10:
  v6 = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 640);
  if (v5 != v6 + 48)
  {
    v7 = *(_QWORD *)(a1 + 144);
    if (v7)
    {
      if ((*(_BYTE *)v7 & 4) == 0)
      {
        while ((*(_WORD *)(v7 + 44) & 8) != 0)
          v7 = *(_QWORD *)(v7 + 8);
      }
      v8 = (uint64_t *)(v7 + 8);
    }
    else
    {
      v8 = (uint64_t *)(v6 + 56);
    }
    v27 = *v8;
    if (*v8 != v5)
    {
      v29 = *(_QWORD *)(v27 + 56);
      v28 = (unsigned __int8 **)(v27 + 56);
      if (!v29)
      {
        v30 = *(unsigned __int8 **)(v5 + 56);
        v33 = v30;
        if (v30)
          llvm::MetadataTracking::track((uint64_t)&v33, v30, 2);
        if (&v33 == v28)
        {
          if (v33)
            llvm::MetadataTracking::untrack((uint64_t)&v33, v33);
        }
        else
        {
          if (*v28)
            llvm::MetadataTracking::untrack((uint64_t)v28, *v28);
          v31 = v33;
          *v28 = v33;
          if (v31)
          {
            llvm::MetadataTracking::retrack((uint64_t)&v33, v31, (uint64_t)v28);
            v33 = 0;
          }
        }
      }
    }
  }
LABEL_65:
  sub_1C5015F50((_DWORD *)(a1 + 8));
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a1 + 144);
  result = sub_1C632A368(a1);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(*(_QWORD *)(a1 + 32) + 648);
  return result;
}

uint64_t sub_1C5CC1648(uint64_t *a1, uint64_t a2)
{
  unsigned __int8 v4;
  unsigned __int8 v5;
  uint64_t v6;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 v12;
  uint64_t v13;

  v4 = sub_1C47A7FD0(a1[13], a1[11], *(_QWORD *)a2, (llvm::Type *)1);
  v5 = v4;
  if (!v4)
    return 0;
  if (!*(_QWORD *)(a1[13] + 8 * v4 + 96))
  {
    if (v4 - 2 > 2)
      return 0;
    llvm::TargetLoweringBase::getTypeConversion(a1[13], **(llvm::EVT ***)a2, v4, 0, (uint64_t)&v11);
    v5 = v12;
  }
  v6 = sub_1C632A44C((uint64_t)a1, a2);
  if (!(_DWORD)v6)
  {
    v8 = *(unsigned __int8 *)(a2 + 16);
    if (v8 < 0x1C || v8 == 59 && (v9 = a1[4] + 176, v11 = a2, v13 = 0, (sub_1C47A82D8(v9, &v11, &v13) & 1) != 0))
    {
      v10 = *(_QWORD *)(a1[4] + 648);
      sub_1C632A368((uint64_t)a1);
      v6 = sub_1C632A4F8(a1, (llvm::Constant *)a2, v5);
      sub_1C5CC1778((uint64_t)a1, v10);
    }
    else
    {
      return sub_1C6128BA8(a1[4], (const llvm::Value *)a2);
    }
  }
  return v6;
}

uint64_t sub_1C5CC1778(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(result + 32);
  v3 = *(_QWORD **)(v2 + 648);
  if (v3 != *(_QWORD **)(*(_QWORD *)(v2 + 640) + 56))
  {
    v4 = *v3 & 0xFFFFFFFFFFFFFFF8;
    if (!v4 || (*(_BYTE *)v4 & 4) == 0)
    {
      while ((*(_WORD *)(v4 + 44) & 4) != 0)
        v4 = *(_QWORD *)v4 & 0xFFFFFFFFFFFFFFF8;
    }
    *(_QWORD *)(result + 136) = v4;
  }
  *(_QWORD *)(v2 + 648) = a2;
  return result;
}

uint64_t sub_1C5CC17C4(_QWORD *a1, llvm::Constant *this, unsigned __int8 a3)
{
  unsigned int v6;
  _QWORD *v7;
  unsigned int v8;
  llvm::Constant *v10;
  llvm::Type *v11;
  llvm::Value **NullValue;
  uint64_t v13;
  int v14;
  BOOL v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t IncompleteVirtualRegister;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t *v23;
  uint64_t v24;
  llvm::MachineFunction *v25;
  unsigned __int8 *v26;
  uint64_t v27;
  unint64_t v28;
  unsigned int ExtendedSizeInBits;
  const char *v30;
  const llvm::APInt *v31;
  llvm::ValueHandleBase *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int v46;
  char v47;
  unsigned __int8 *v48;
  unsigned int v49;
  char v50;
  unsigned __int8 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v6 = *((unsigned __int8 *)this + 16);
  if (this && v6 == 16)
  {
    v7 = (_QWORD *)((char *)this + 24);
    v8 = *((_DWORD *)this + 8);
    if (v8 < 0x41)
      return (*(uint64_t (**)(_QWORD *, _QWORD, _QWORD, uint64_t, _QWORD))(*a1 + 88))(a1, a3, a3, 11, *v7);
    if (v8 - llvm::APInt::countLeadingZerosSlowCase((llvm::Constant *)((char *)this + 24)) <= 0x40)
    {
      v7 = (_QWORD *)*v7;
      return (*(uint64_t (**)(_QWORD *, _QWORD, _QWORD, uint64_t, _QWORD))(*a1 + 88))(a1, a3, a3, 11, *v7);
    }
  }
  else
  {
    if (v6 == 19)
    {
      llvm::DataLayout::getIntPtrType((llvm::DataLayout *)a1[11], *(llvm::Type **)this);
      NullValue = llvm::Constant::getNullValue(v10, v11);
      return sub_1C5CC1648(a1, NullValue);
    }
    if (v6 == 59)
      return (*(uint64_t (**)(_QWORD *, llvm::Constant *))(*a1 + 112))(a1, this);
    if (this && v6 == 17)
    {
      if (llvm::Constant::isNullValue(this))
        v13 = (*(uint64_t (**)(_QWORD *, llvm::Constant *))(*a1 + 120))(a1, this);
      else
        v13 = (*(uint64_t (**)(_QWORD *, _QWORD, _QWORD, uint64_t, llvm::Constant *))(*a1 + 96))(a1, a3, a3, 12, this);
      IncompleteVirtualRegister = v13;
      if (!(_DWORD)v13)
      {
        LOBYTE(v51) = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)a1[13] + 32))(a1[13], a1[11], 0);
        v52 = 0;
        if ((_BYTE)v51)
          ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v51);
        else
          ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v51);
        if ((_DWORD)v30 == 1)
        {
          v46 = ExtendedSizeInBits;
          ExtendedSizeInBits = v46;
        }
        v49 = ExtendedSizeInBits;
        if (ExtendedSizeInBits > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v48, 0, 0);
        else
          v48 = 0;
        v50 = 0;
        v47 = 0;
        llvm::APFloat::convertToInteger((uint64_t)this + 24, (uint64_t)&v48, 0, &v47);
        if (v47
          && (v32 = llvm::ConstantInt::get(**(llvm::ConstantInt ***)this, (llvm::LLVMContext *)&v48, v31),
              v33 = sub_1C5CC1648(a1, v32),
              (_DWORD)v33))
        {
          IncompleteVirtualRegister = (*(uint64_t (**)(_QWORD *, _QWORD, _QWORD, uint64_t, uint64_t))(*a1 + 64))(a1, v51, a3, 202, v33);
        }
        else
        {
          IncompleteVirtualRegister = 0;
        }
        if (v49 >= 0x41)
        {
          if (v48)
            MEMORY[0x1CAA32F9C](v48, 0x1000C8000313F17);
        }
      }
      return IncompleteVirtualRegister;
    }
    v14 = v6 - 28;
    v16 = v6 < 0x1C && v6 != 5;
    if (!this || v16)
    {
      if (v6 - 11 <= 1)
      {
        v17 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)a1[13] + 424))(a1[13], a3, 0);
        v18 = a1[6];
        IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v18, (unsigned __int8 *)&unk_1C8767743, 0);
        *(_QWORD *)(*(_QWORD *)(v18 + 24) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v17 & 0xFFFFFFFFFFFFFFFBLL;
        v20 = *(_QWORD *)(v18 + 8);
        if (v20)
          (*(void (**)(uint64_t))(*(_QWORD *)v20 + 24))(v20);
        v21 = a1[4];
        v22 = *(_QWORD *)(v21 + 640);
        v23 = *(unint64_t **)(v21 + 648);
        v24 = *(_QWORD *)(a1[12] + 8);
        v25 = *(llvm::MachineFunction **)(v22 + 32);
        v26 = (unsigned __int8 *)a1[9];
        v48 = v26;
        if (v26)
          llvm::MetadataTracking::track((uint64_t)&v48, v26, 2);
        v27 = v24 + 480;
        v28 = *((_QWORD *)v25 + 28);
        if (v28)
          *((_QWORD *)v25 + 28) = *(_QWORD *)v28;
        else
          v28 = sub_1C484358C((uint64_t)v25 + 128, 72, 3);
        v51 = v48;
        if (v48)
        {
          llvm::MetadataTracking::retrack((uint64_t)&v48, v48, (uint64_t)&v51);
          v48 = 0;
        }
        llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v28, v25, v27, &v51, 0);
        if (v51)
          llvm::MetadataTracking::untrack((uint64_t)&v51, v51);
        if (v48)
          llvm::MetadataTracking::untrack((uint64_t)&v48, v48);
        v34 = *(_QWORD *)(v22 + 40);
        *(_QWORD *)(v28 + 24) = v34;
        v35 = *(_QWORD *)(v34 + 32);
        v36 = *(unsigned int *)(v28 + 40);
        if ((_DWORD)v36)
        {
          v39 = *(_QWORD *)(v28 + 32);
          v40 = *(_QWORD *)(v35 + 40);
          v41 = 32 * v36;
          do
          {
            if (!*(_BYTE *)v39)
            {
              v42 = *(unsigned int *)(v39 + 4);
              if ((int)v42 >= 0)
                v43 = (uint64_t *)(*(_QWORD *)(v40 + 272) + 8 * v42);
              else
                v43 = (uint64_t *)(*(_QWORD *)(v40 + 24) + 16 * (v42 & 0x7FFFFFFF) + 8);
              v44 = *v43;
              if (*v43)
              {
                v45 = *(_QWORD *)(v44 + 16);
                *(_QWORD *)(v44 + 16) = v39;
                *(_QWORD *)(v39 + 16) = v45;
                if ((*(_BYTE *)(v39 + 3) & 1) != 0)
                {
                  *(_QWORD *)(v39 + 24) = v44;
                }
                else
                {
                  *(_QWORD *)(v39 + 24) = 0;
                  v43 = (uint64_t *)(v45 + 24);
                }
              }
              else
              {
                *(_QWORD *)(v39 + 16) = v39;
                *(_QWORD *)(v39 + 24) = 0;
              }
              *v43 = v39;
            }
            v39 += 32;
            v41 -= 32;
          }
          while (v41);
        }
        v37 = *(_QWORD *)(v35 + 728);
        if (v37)
          (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v37 + 24))(v37, v28);
        v38 = *v23 & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v28 = v38 | *(_QWORD *)v28 & 7;
        *(_QWORD *)(v28 + 8) = v23;
        *(_QWORD *)(v38 + 8) = v28;
        *v23 = *v23 & 7 | v28;
        v52 = 0;
        v53 = 0;
        v54 = 0;
        LODWORD(v51) = 0x1000000;
        HIDWORD(v51) = IncompleteVirtualRegister;
        llvm::MachineInstr::addOperand((llvm::MachineInstr *)v28, v25, (const llvm::MachineOperand *)&v51);
        return IncompleteVirtualRegister;
      }
    }
    else
    {
      if (v6 <= 0x1B)
        v14 = *((unsigned __int16 *)this + 9);
      if ((sub_1C5CC1CF8(a1, (uint64_t)this, v14) & 1) != 0
        || *((unsigned __int8 *)this + 16) >= 0x1Cu
        && (*(unsigned int (**)(_QWORD *, llvm::Constant *))(*a1 + 24))(a1, this))
      {
        return sub_1C632A44C((uint64_t)a1, (uint64_t)this);
      }
    }
  }
  return 0;
}

uint64_t sub_1C5CC1CF8(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v6;
  int v7;
  uint64_t **v8;
  uint64_t v9;
  int v10;
  _QWORD *v11;
  unsigned __int8 v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t **v16;
  uint64_t v17;
  uint64_t v19;
  _QWORD *v20;
  llvm::MachineOperand *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  uint64_t v31;
  int v32;
  unint64_t v33;
  int v34;
  unint64_t ExtendedSizeInBits;
  int v36;
  int v37;
  _QWORD *v38;
  unsigned __int8 v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 v45;
  unsigned __int8 v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  int v51;
  _QWORD *v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  int v56;
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t v59;
  llvm::Value *v60;
  BOOL v61;
  int v62;
  unsigned int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  llvm::MachineOperand *v72;
  unint64_t v73;
  llvm::MachineOperand *v74;
  llvm::UndefValue *v75;
  unint64_t v76;
  _QWORD *v77;
  _QWORD *v78;
  unint64_t v79;
  BOOL v80;
  BOOL v81;
  llvm::UndefValue *AggregateElement;
  unsigned int *v83;
  unsigned int *v84;
  unsigned int *v85;
  _QWORD **v87;
  unsigned int v88;
  char v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  BOOL v96;
  const char *v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  int v104;
  BOOL v105;
  const char *v106;
  char v107;
  char v108;
  uint64_t v109;
  unint64_t v110;
  unsigned __int8 *v111;
  llvm *v112;
  uint64_t v113;
  unsigned int v114;
  llvm::MachineOperand *v115;
  unint64_t v116;
  int v117;
  llvm::Value *v118;
  uint64_t v119;
  _QWORD *v120;
  _QWORD *v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  unsigned __int32 IncompleteVirtualRegister;
  uint64_t v126;
  _OWORD *v127;
  _OWORD *v128;
  __int128 v129;
  uint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  _OWORD *v133;
  _OWORD *v134;
  __int128 v135;
  uint64_t v136;
  _QWORD *v137;
  _QWORD *v138;
  _OWORD *v139;
  _OWORD *v140;
  __int128 v141;
  unsigned int v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  unint64_t *v149;
  uint64_t v150;
  llvm::MachineFunction *v151;
  unsigned __int8 *v152;
  uint64_t v153;
  unint64_t v154;
  int v155;
  uint64_t *v156;
  int v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  _QWORD *v163;
  uint64_t MetadataImpl;
  int v165;
  uint64_t v166;
  int v167;
  int v168;
  _QWORD *v169;
  uint64_t v170;
  unint64_t *v171;
  uint64_t v172;
  unsigned __int8 *v173;
  uint64_t v174;
  uint64_t v175;
  _QWORD *v176;
  unsigned __int8 *v177;
  uint64_t v178;
  uint64_t v179;
  int v180;
  llvm::DIExpression *v182;
  llvm::DIExpression *v183;
  uint64_t v184;
  uint64_t v185;
  _QWORD *v186;
  _QWORD *v187;
  _OWORD *v188;
  _OWORD *v189;
  __int128 v190;
  uint64_t v191;
  _QWORD *v192;
  _QWORD *v193;
  _OWORD *v194;
  _OWORD *v195;
  __int128 v196;
  _WORD *v197;
  int v198;
  _WORD *v199;
  unsigned int v200;
  _OWORD *v201;
  _OWORD *v202;
  __int128 v203;
  uint64_t v204;
  unsigned int v205;
  uint64_t v206;
  uint64_t v207;
  unint64_t *v208;
  uint64_t v209;
  llvm::MachineFunction *v210;
  unsigned __int8 *v211;
  uint64_t v212;
  unint64_t v213;
  uint64_t v214;
  int v215;
  int v216;
  int v217;
  uint64_t v218;
  const llvm::TargetMachine *v219;
  int v220;
  llvm::Type ***v221;
  int v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t i;
  llvm::Type **v226;
  llvm::Type *v227;
  _OWORD *v228;
  __int128 v229;
  __int128 v230;
  unint64_t v231;
  unint64_t v232;
  unint64_t v233;
  unint64_t v234;
  unint64_t v235;
  char *v236;
  char *v237;
  __int128 v238;
  unint64_t v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  int v244;
  uint64_t v245;
  unsigned __int8 v246;
  uint64_t v247;
  unint64_t v248;
  unsigned int v249;
  int j;
  unsigned int v251;
  uint64_t *v252;
  uint64_t v253;
  BOOL v254;
  uint64_t v256;
  BOOL v257;
  const llvm::CallInst *v258;
  uint64_t v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  unint64_t *v270;
  llvm::MachineFunction *v271;
  unsigned __int8 *v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  unint64_t v284;
  uint64_t v285;
  int v286;
  uint64_t v287;
  uint64_t v288;
  unint64_t *v289;
  uint64_t v290;
  llvm::MachineFunction *v291;
  unsigned __int8 *v292;
  uint64_t v293;
  unint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  unint64_t v299;
  llvm::MachineOperand *v300;
  uint64_t v301;
  uint64_t v302;
  unsigned int v303;
  uint64_t v304;
  uint64_t v305;
  unint64_t *v306;
  uint64_t v307;
  llvm::MachineFunction *v308;
  unsigned __int8 *v309;
  uint64_t v310;
  unint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  unint64_t v316;
  uint64_t v317;
  uint64_t v318;
  unint64_t *v319;
  llvm::MachineFunction *v320;
  unsigned __int8 *v321;
  unint64_t v322;
  unsigned __int8 *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  unint64_t v328;
  uint64_t v329;
  uint64_t v330;
  llvm::MachineInstr *v331;
  llvm::MachineFunction *v332;
  unsigned int v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  unint64_t v345;
  _QWORD *v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t *v353;
  uint64_t v354;
  uint64_t v355;
  _QWORD *v356;
  _QWORD *v357;
  _OWORD *v358;
  _OWORD *v359;
  __int128 v360;
  _OWORD *v361;
  _OWORD *v362;
  __int128 v363;
  _OWORD *v364;
  _OWORD *v365;
  __int128 v366;
  int v367;
  unsigned __int32 v368;
  _OWORD *v369;
  _OWORD *v370;
  __int128 v371;
  _OWORD *v372;
  _OWORD *v373;
  __int128 v374;
  _OWORD *v375;
  _OWORD *v376;
  __int128 v377;
  unsigned __int32 *v378;
  uint64_t v379;
  unsigned __int32 v380;
  _OWORD *v381;
  _OWORD *v382;
  __int128 v383;
  uint64_t v384;
  _OWORD *v385;
  _OWORD *v386;
  __int128 v387;
  _WORD *v388;
  unsigned __int32 v389;
  _WORD *v390;
  unsigned int v391;
  _OWORD *v392;
  _OWORD *v393;
  __int128 v394;
  unsigned int *v395;
  uint64_t v396;
  unsigned __int32 v397;
  _OWORD *v398;
  _OWORD *v399;
  __int128 v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  llvm::MachineFunction *v404;
  unsigned __int8 *v405;
  unint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t *v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t *v425;
  uint64_t v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  uint64_t v430;
  unint64_t *v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t *v438;
  uint64_t v439;
  uint64_t v440;
  unsigned __int8 *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t *v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t *v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  unint64_t v460;
  llvm::MachineOperand *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t *v468;
  uint64_t v469;
  uint64_t v470;
  unint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  uint64_t v476;
  uint64_t v477;
  __n128 __p;
  unint64_t v479;
  uint64_t v480;
  unsigned __int8 *v481;
  llvm::MachineOperand *v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  _QWORD *v488;
  uint64_t v489;
  _QWORD v490[18];
  _QWORD v491[26];
  _QWORD v492[10];
  _QWORD v493[26];
  uint64_t v494;
  _BYTE v495[72];
  __int128 v496;
  _QWORD *v497;
  uint64_t v498;
  _QWORD v499[18];
  uint64_t v500;
  unsigned __int32 *v501;
  uint64_t v502;
  _QWORD v503[10];
  uint64_t v504;
  unsigned int *v505;
  uint64_t v506;
  _QWORD v507[5];

  v3 = 0;
  v507[2] = *MEMORY[0x1E0C80C00];
  switch(a3)
  {
    case 2:
      if ((*(_DWORD *)(a2 + 20) & 0x7FFFFFF) != 1)
        return 0;
      v482 = *(llvm::MachineOperand **)(a2 - 32);
      v20 = sub_1C61294C8((_DWORD *)(a1[4] + 56), &v482);
      sub_1C632B2B0((uint64_t)a1, (uint64_t *)v20[1], a2 + 48);
      return 1;
    case 7:
      if ((*(_BYTE *)(a1[10] + 1040) & 0x80) == 0)
        return 1;
      return (*(unsigned int (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*a1 + 56))(a1, 1, 1, 284) != 0;
    case 12:
      v155 = *(_DWORD *)(a2 + 20);
      if ((v155 & 0x40000000) != 0)
        v156 = *(uint64_t **)(a2 - 8);
      else
        v156 = (uint64_t *)(a2 - 32 * (v155 & 0x7FFFFFF));
      return sub_1C632B3A0(a1, (uint64_t *)a2, *v156);
    case 13:
      v13 = 56;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 14:
      v13 = 96;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 15:
      v13 = 57;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 16:
      v13 = 97;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 17:
      v13 = 58;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 18:
      v13 = 98;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 19:
      v13 = 60;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 20:
      v13 = 59;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 21:
      v13 = 99;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 22:
      v13 = 62;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 23:
      v13 = 61;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 24:
      v13 = 100;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 25:
      v13 = 175;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 26:
      v13 = 177;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 27:
      v13 = 176;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 28:
      v13 = 171;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 29:
      v13 = 172;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 30:
      v13 = 173;
      return sub_1C5CC4FBC(a1, a2, v13);
    case 31:
      v17 = a1[4] + 176;
      v482 = (llvm::MachineOperand *)a2;
      *(_QWORD *)v495 = 0;
      return sub_1C47A82D8(v17, &v482, v495);
    case 34:
      v10 = *(_DWORD *)(a2 + 20);
      if ((v10 & 0x40000000) != 0)
        v11 = *(_QWORD **)(a2 - 8);
      else
        v11 = (_QWORD *)(a2 - 32 * (v10 & 0x7FFFFFF));
      v3 = sub_1C5CC1648(a1, *v11);
      if (!(_DWORD)v3)
        return v3;
      if ((*(_DWORD *)(*(_QWORD *)a2 + 8) & 0xFE) == 0x12)
        return 0;
      v39 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)a1[13] + 32))(a1[13], a1[11], 0);
      v40 = 24;
      if (*(_BYTE *)(a2 + 16) == 62)
        v40 = 64;
      v41 = *(_QWORD *)(a2 + v40);
      v42 = *(_DWORD *)(a2 + 20);
      if ((v42 & 0x40000000) != 0)
      {
        v44 = *(_QWORD *)(a2 - 8);
        v43 = v42 & 0x7FFFFFF;
      }
      else
      {
        v43 = v42 & 0x7FFFFFF;
        v44 = a2 - 32 * v43;
      }
      v71 = v41 | 4;
      v72 = (llvm::MachineOperand *)(v44 + 32);
      v482 = (llvm::MachineOperand *)(v44 + 32);
      *(_QWORD *)&v483 = v71;
      if (v43 == 1)
        goto LABEL_224;
      v73 = 0;
      v74 = (llvm::MachineOperand *)(v44 + 32 * v43);
      v476 = v39;
      do
      {
        v75 = *(llvm::UndefValue **)v72;
        v76 = v483 & 0xFFFFFFFFFFFFFFF8;
        if ((v483 & 4) != 0 || !v76)
        {
          if (v76)
            v80 = (v483 & 4) == 0;
          else
            v80 = 1;
          if (v80)
          {
            if (v75)
              v81 = *((_BYTE *)v75 + 16) == 16;
            else
              v81 = 0;
            AggregateElement = *(llvm::UndefValue **)v72;
            if (!v81)
              AggregateElement = llvm::Constant::getAggregateElement(v75, 0);
            v85 = (unsigned int *)*((_QWORD *)AggregateElement + 3);
            v83 = (unsigned int *)((char *)AggregateElement + 24);
            v84 = v85;
            if (v83[2] < 0x41)
              v84 = v83;
            v76 = *(_QWORD *)(*(_QWORD *)(v76 + 16) + 8 * *v84);
          }
          if (*((_BYTE *)v75 + 16) != 16 || v75 == 0)
          {
            if (v73)
            {
              v3 = sub_1C632A824((_QWORD ****)a1, v476, 56, v3, v73, v476);
              if (!(_DWORD)v3)
                return 0;
            }
            v101 = a1[11];
            sub_1C4768AD0(v101, v76);
            v103 = v102;
            v105 = v104 == 1;
            llvm::DataLayout::getAlignment(v101, v76);
            v108 = v107;
            if (v105)
            v109 = sub_1C632A670((uint64_t)a1, (llvm::EVT **)v75);
            if (!(_DWORD)v109)
              return 0;
            v110 = ((1 << v108) + ((unint64_t)(v103 + 7) >> 3) - 1) & -(1 << v108);
            if (v110 != 1 && !sub_1C632A824((_QWORD ****)a1, v476, 58, v109, v110, v476))
              return 0;
            v100 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 72))(a1, v476, v476, 56, v3);
            if (!(_DWORD)v100)
              return 0;
            goto LABEL_178;
          }
          v87 = (_QWORD **)((char *)v75 + 24);
          v88 = *((_DWORD *)v75 + 8);
          if (v88 > 0x40)
          {
            if (llvm::APInt::countLeadingZerosSlowCase((llvm::UndefValue *)((char *)v75 + 24)) == v88)
              goto LABEL_167;
            v90 = **v87;
          }
          else
          {
            if (!*v87)
              goto LABEL_167;
            if (v88 > 0x3F)
            {
              sub_1C5DD14E0((uint64_t)v495, (uint64_t)v75 + 24);
              v89 = v495[8];
              if (*(_DWORD *)&v495[8] > 0x40u)
              {
                v91 = **(_QWORD **)v495;
                MEMORY[0x1CAA32F9C]();
LABEL_163:
                v92 = a1[11];
                sub_1C4768AD0(v92, v76);
                v94 = v93;
                v96 = v95 == 1;
                llvm::DataLayout::getAlignment(v92, v76);
                v99 = v98;
                if (v96)
                v79 = (((1 << v99) + ((unint64_t)(v94 + 7) >> 3) - 1) & -(1 << v99)) * v91;
LABEL_166:
                v73 += v79;
                if (v73 < 0x800)
                  goto LABEL_167;
                v100 = sub_1C632A824((_QWORD ****)a1, v476, 56, v3, v73, v476);
                if (!(_DWORD)v100)
                  return 0;
LABEL_178:
                v3 = v100;
                v73 = 0;
                goto LABEL_167;
              }
              v90 = *(_QWORD *)v495;
LABEL_161:
              v91 = v90 << -v89 >> -v89;
              goto LABEL_163;
            }
            v90 = (uint64_t)((_QWORD)*v87 << -(char)v88) >> -(char)v88;
          }
          v89 = 64;
          goto LABEL_161;
        }
        v77 = (_QWORD *)((char *)v75 + 24);
        if (*((_DWORD *)v75 + 8) >= 0x41u)
          v77 = (_QWORD *)*v77;
        if (*v77)
        {
          v78 = (_QWORD *)*v77;
          v79 = *((_QWORD *)llvm::DataLayout::getStructLayout((llvm::DataLayout *)a1[11], (llvm::StructType *)(v483 & 0xFFFFFFFFFFFFFFF8))+ v78+ 2);
          goto LABEL_166;
        }
LABEL_167:
        sub_1C4774E38((uint64_t)&v482);
        v72 = v482;
      }
      while (v482 != v74);
      if (!v73 || (v3 = sub_1C632A824((_QWORD ****)a1, v476, 56, v3, v73, v476), (_DWORD)v3))
      {
LABEL_224:
        v157 = v3;
LABEL_226:
        v3 = 1;
LABEL_227:
        sub_1C632A598((uint64_t)a1, a2, v157, 1);
      }
      return v3;
    case 38:
      v9 = 201;
      return sub_1C5CC5C80(a1, a2, v9);
    case 39:
      v9 = 199;
      return sub_1C5CC5C80(a1, a2, v9);
    case 40:
      v9 = 198;
      return sub_1C5CC5C80(a1, a2, v9);
    case 42:
      v9 = 208;
      return sub_1C5CC5C80(a1, a2, v9);
    case 44:
      v9 = 202;
      return sub_1C5CC5C80(a1, a2, v9);
    case 47:
    case 48:
      v6 = a1[13];
      v7 = *(_DWORD *)(a2 + 20);
      if ((v7 & 0x40000000) != 0)
        v8 = *(uint64_t ***)(a2 - 8);
      else
        v8 = (uint64_t **)(a2 - 32 * (v7 & 0x7FFFFFF));
      v22 = (llvm::MachineOperand *)sub_1C47A7FD0(v6, a1[11], **v8, 0);
      v24 = v23;
      *(_QWORD *)v495 = sub_1C47A7FD0(a1[13], a1[11], *(_QWORD *)a2, 0);
      *(_QWORD *)&v495[8] = v25;
      v26 = v495[0];
      if (v495[0] == v22 && (v495[0] || v25 == v24))
        goto LABEL_58;
      if (sub_1C50989E0(v495, (uint64_t)v22, v24))
      {
        v27 = a1;
        v28 = a2;
        v29 = 199;
        return sub_1C5CC5C80(v27, v28, v29);
      }
      v26 = v495[0];
LABEL_58:
      if (v26 == v22)
      {
        if ((_BYTE)v22)
          v30 = 1;
        else
          v30 = *(_QWORD *)&v495[8] == v24;
        if (v30)
        {
LABEL_75:
          v37 = *(_DWORD *)(a2 + 20);
          if ((v37 & 0x40000000) != 0)
            v38 = *(_QWORD **)(a2 - 8);
          else
            v38 = (_QWORD *)(a2 - 32 * (v37 & 0x7FFFFFF));
          v54 = sub_1C5CC1648(a1, *v38);
          if (v54)
          {
            v157 = v54;
            goto LABEL_226;
          }
          return 0;
        }
        v482 = v22;
        *(_QWORD *)&v483 = v24;
      }
      else
      {
        v482 = v22;
        *(_QWORD *)&v483 = v24;
        if (v26)
        {
          v31 = sub_1C47A8C74(v495);
LABEL_67:
          v33 = v31;
          v34 = v32;
          if ((_BYTE)v22)
            ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v482);
          else
            ExtendedSizeInBits = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v482);
          if ((v34 != 1 || v36 == 1) && v33 < ExtendedSizeInBits)
          {
            v27 = a1;
            v28 = a2;
            v29 = 201;
            return sub_1C5CC5C80(v27, v28, v29);
          }
          goto LABEL_75;
        }
      }
      v31 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v495);
      goto LABEL_67;
    case 49:
      v14 = a1[13];
      v15 = *(_DWORD *)(a2 + 20);
      if ((v15 & 0x40000000) != 0)
        v16 = *(uint64_t ***)(a2 - 8);
      else
        v16 = (uint64_t **)(a2 - 32 * (v15 & 0x7FFFFFF));
      v45 = sub_1C47A7FD0(v14, a1[11], **v16, 0);
      v46 = sub_1C47A7FD0(a1[13], a1[11], *(_QWORD *)a2, 0);
      v3 = 0;
      v47 = v45;
      if (v45 == 1)
        return v3;
      v48 = v46;
      if (v46 == 1)
        return 0;
      v3 = v45;
      if (!v45)
        return v3;
      v49 = a1[13];
      if (!*(_QWORD *)(v49 + 8 * v45 + 96))
        return 0;
      v50 = v46;
      if (!v46 || !*(_QWORD *)(v49 + 8 * v46 + 96))
        return 0;
      v51 = *(_DWORD *)(a2 + 20);
      v52 = (v51 & 0x40000000) != 0 ? *(_QWORD **)(a2 - 8) : (_QWORD *)(a2 - 32 * (v51 & 0x7FFFFFF));
      v166 = sub_1C5CC1648(a1, *v52);
      if (!(_DWORD)v166)
        return 0;
      v167 = v166;
      if (v47 == v48)
        goto LABEL_266;
      v168 = (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(*a1 + 64))(a1, v3, v50, 216, v166);
      if (!v168)
        return 0;
      v167 = v168;
LABEL_266:
      v157 = v167;
      goto LABEL_226;
    case 56:
      if (*(_DWORD *)(a1[10] + 484) == 21)
      {
        if (*(_BYTE *)(a2 + 16) == 84)
        {
          v19 = *(_QWORD *)(a2 - 32);
          if (v19)
          {
            if (!*(_BYTE *)(v19 + 16)
              && *(_QWORD *)(v19 + 24) == *(_QWORD *)(a2 + 72)
              && (*(_BYTE *)(v19 + 33) & 0x20) != 0)
            {
              goto LABEL_103;
            }
          }
        }
      }
      else
      {
        v19 = *(_QWORD *)(a2 - 32);
        if (!v19 || *(_BYTE *)(v19 + 16) != 24)
        {
          if (*(_BYTE *)(v19 + 16))
          {
            v55 = *(_QWORD *)(a2 + 72);
            goto LABEL_303;
          }
LABEL_103:
          v55 = *(_QWORD *)(a2 + 72);
          if (*(_QWORD *)(v19 + 24) == v55)
          {
            if ((*(_BYTE *)(v19 + 33) & 0x20) != 0)
            {
              v56 = *(_DWORD *)(v19 + 36);
              v3 = 1;
              if (v56 <= 126)
              {
                if (v56 <= 76)
                {
                  switch(v56)
                  {
                    case '8':
                      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 32) + 2108))
                        return v3;
                      v57 = *(unsigned __int8 **)(*(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF)) + 24);
                      v58 = *v57;
                      if (v58 > 0x22)
                        goto LABEL_112;
                      if (v58 == 32)
                      {
                        v57 = (unsigned __int8 *)**((_QWORD **)v57 + 3);
                      }
                      else if (((1 << v58) & 0x6FFFFFFF0) != 0)
                      {
                        return v3;
                      }
LABEL_112:
                      v59 = *((_QWORD *)v57 + 16);
                      if (!v59 || *(unsigned __int8 *)(v59 + 16) - 11 < 2)
                        return 1;
                      v60 = llvm::Value::stripInBoundsConstantOffsets((llvm::Value *)v59);
                      v61 = v60 && *((_BYTE *)v60 + 16) == 21;
                      if (v61 && sub_1C632BB28(a1[4], (uint64_t)v60) != 0x7FFFFFFF)
                        return 1;
                      v62 = sub_1C632A44C((uint64_t)a1, v59);
                      if (v62)
                        goto LABEL_124;
                      if (*(_QWORD *)(v59 + 8))
                      {
                        v63 = *(unsigned __int8 *)(v59 + 16);
                        if (v63 >= 0x1C)
                        {
                          if (v63 != 59
                            || (v64 = a1[4] + 176,
                                v482 = (llvm::MachineOperand *)v59,
                                *(_QWORD *)v495 = 0,
                                (sub_1C47A82D8(v64, &v482, v495) & 1) == 0))
                          {
                            v62 = sub_1C6128BA8(a1[4], (const llvm::Value *)v59);
LABEL_124:
                            LODWORD(v482) = 0;
                            HIDWORD(v482) = v62;
                            *(_QWORD *)&v484 = 0;
                            v483 = 0uLL;
                            BYTE8(v484) = 1;
                            v65 = a1[4];
                            v66 = *(_QWORD *)(v65 + 640);
                            v67 = *(unint64_t **)(v65 + 648);
                            v68 = a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
                            llvm::BuildMI(v66, v67, (unsigned __int8 **)a1 + 9, *(_QWORD *)(a1[12] + 8) + 624, 1, (int *)&v482, *(_QWORD *)(*(_QWORD *)(v68 + 32) + 24), *(_QWORD *)(*(_QWORD *)(v68 + 64) + 24));
                            if (*((_BYTE *)a1 + 129) && !(_BYTE)v482)
                            {
                              v70 = v69;
                              *(_QWORD *)(v69 + 16) = *(_QWORD *)(a1[12] + 8) + 720;
                              llvm::MachineOperand::ChangeToImmediate((unsigned int *)(*(_QWORD *)(v69 + 32) + 32), 0, 0);
                              *(_QWORD *)(*(_QWORD *)(v70 + 32) + 112) = llvm::DIExpression::prepend(*(llvm::DIExpression **)(*(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 64) + 24), (const llvm::DIExpression *)1, 0);
                            }
                          }
                        }
                      }
                      return 1;
                    case '9':
                      v169 = (_QWORD *)a1[4];
                      if (!*(_BYTE *)(*(_QWORD *)(v169[1] + 32) + 2108))
                        return v3;
                      v170 = v169[80];
                      v171 = (unint64_t *)v169[81];
                      v172 = *(_QWORD *)(a1[12] + 8);
                      v151 = *(llvm::MachineFunction **)(v170 + 32);
                      v173 = (unsigned __int8 *)a1[9];
                      *(_QWORD *)v495 = v173;
                      if (v173)
                        llvm::MetadataTracking::track((uint64_t)v495, v173, 2);
                      v174 = v172 + 816;
                      v154 = *((_QWORD *)v151 + 28);
                      if (v154)
                        *((_QWORD *)v151 + 28) = *(_QWORD *)v154;
                      else
                        v154 = sub_1C484358C((uint64_t)v151 + 128, 72, 3);
                      v482 = *(llvm::MachineOperand **)v495;
                      if (*(_QWORD *)v495)
                      {
                        llvm::MetadataTracking::retrack((uint64_t)v495, *(unsigned __int8 **)v495, (uint64_t)&v482);
                        *(_QWORD *)v495 = 0;
                      }
                      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v154, v151, v174, (unsigned __int8 **)&v482, 0);
                      if (v482)
                        llvm::MetadataTracking::untrack((uint64_t)&v482, (unsigned __int8 *)v482);
                      if (*(_QWORD *)v495)
                        llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
                      v274 = *(_QWORD *)(v170 + 40);
                      *(_QWORD *)(v154 + 24) = v274;
                      v275 = *(_QWORD *)(v274 + 32);
                      v276 = *(unsigned int *)(v154 + 40);
                      if ((_DWORD)v276)
                      {
                        v349 = *(_QWORD *)(v154 + 32);
                        v350 = *(_QWORD *)(v275 + 40);
                        v351 = 32 * v276;
                        do
                        {
                          if (!*(_BYTE *)v349)
                          {
                            v352 = *(unsigned int *)(v349 + 4);
                            if ((int)v352 >= 0)
                              v353 = (uint64_t *)(*(_QWORD *)(v350 + 272) + 8 * v352);
                            else
                              v353 = (uint64_t *)(*(_QWORD *)(v350 + 24) + 16 * (v352 & 0x7FFFFFFF) + 8);
                            v354 = *v353;
                            if (*v353)
                            {
                              v355 = *(_QWORD *)(v354 + 16);
                              *(_QWORD *)(v354 + 16) = v349;
                              *(_QWORD *)(v349 + 16) = v355;
                              if ((*(_BYTE *)(v349 + 3) & 1) != 0)
                              {
                                *(_QWORD *)(v349 + 24) = v354;
                              }
                              else
                              {
                                *(_QWORD *)(v349 + 24) = 0;
                                v353 = (uint64_t *)(v355 + 24);
                              }
                            }
                            else
                            {
                              *(_QWORD *)(v349 + 16) = v349;
                              *(_QWORD *)(v349 + 24) = 0;
                            }
                            *v353 = v349;
                          }
                          v349 += 32;
                          v351 -= 32;
                        }
                        while (v351);
                      }
                      v277 = *(_QWORD *)(v275 + 728);
                      if (v277)
                        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v277 + 24))(v277, v154);
                      v278 = *v171 & 0xFFFFFFFFFFFFFFF8;
                      *(_QWORD *)v154 = v278 | *(_QWORD *)v154 & 7;
                      *(_QWORD *)(v154 + 8) = v171;
                      *(_QWORD *)(v278 + 8) = v154;
                      *v171 = *v171 & 7 | v154;
                      v279 = *(_QWORD *)(*(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF)) + 24);
                      LODWORD(v482) = 14;
                      *(_QWORD *)&v483 = 0;
                      *((_QWORD *)&v483 + 1) = v279;
                      goto LABEL_249;
                    case ':':
                      v175 = *(_QWORD *)(a1[12] + 8) + 624;
                      v176 = (_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
                      v177 = *(unsigned __int8 **)(*v176 + 24);
                      v178 = *v177;
                      if (v178 > 0x22)
                        goto LABEL_279;
                      if (v178 == 32)
                      {
                        v177 = (unsigned __int8 *)**((_QWORD **)v177 + 3);
                      }
                      else if (((1 << v178) & 0x6FFFFFFF0) != 0)
                      {
LABEL_365:
                        llvm::BuildMI(*(_QWORD *)(a1[4] + 640), *(unint64_t **)(a1[4] + 648), (unsigned __int8 **)a1 + 9, *(_QWORD *)(a1[12] + 8) + 624, 0, 0, *(_QWORD *)(v176[4] + 24), *(_QWORD *)(v176[8] + 24));
                        return 1;
                      }
LABEL_279:
                      v179 = *((_QWORD *)v177 + 16);
                      if (!v179)
                        goto LABEL_365;
                      v180 = *(unsigned __int8 *)(v179 + 16);
                      if ((_DWORD)v178 == 32 || (v180 - 11) <= 1)
                        goto LABEL_365;
                      if (v180 == 17)
                      {
                        v268 = a1[4];
                        v269 = *(_QWORD *)(v268 + 640);
                        v270 = *(unint64_t **)(v268 + 648);
                        v271 = *(llvm::MachineFunction **)(v269 + 32);
                        v272 = (unsigned __int8 *)a1[9];
                        *(_QWORD *)v495 = v272;
                        if (v272)
                          llvm::MetadataTracking::track((uint64_t)v495, v272, 2);
                        v273 = *((_QWORD *)v271 + 28);
                        if (v273)
                          *((_QWORD *)v271 + 28) = *(_QWORD *)v273;
                        else
                          v273 = sub_1C484358C((uint64_t)v271 + 128, 72, 3);
                        v482 = *(llvm::MachineOperand **)v495;
                        if (*(_QWORD *)v495)
                        {
                          llvm::MetadataTracking::retrack((uint64_t)v495, *(unsigned __int8 **)v495, (uint64_t)&v482);
                          *(_QWORD *)v495 = 0;
                        }
                        llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v273, v271, v175, (unsigned __int8 **)&v482, 0);
                        if (v482)
                          llvm::MetadataTracking::untrack((uint64_t)&v482, (unsigned __int8 *)v482);
                        if (*(_QWORD *)v495)
                          llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
                        v324 = *(_QWORD *)(v269 + 40);
                        *(_QWORD *)(v273 + 24) = v324;
                        v325 = *(_QWORD *)(v324 + 32);
                        v326 = *(unsigned int *)(v273 + 40);
                        if ((_DWORD)v326)
                        {
                          v434 = *(_QWORD *)(v273 + 32);
                          v435 = *(_QWORD *)(v325 + 40);
                          v436 = 32 * v326;
                          do
                          {
                            if (!*(_BYTE *)v434)
                            {
                              v437 = *(unsigned int *)(v434 + 4);
                              if ((int)v437 >= 0)
                                v438 = (uint64_t *)(*(_QWORD *)(v435 + 272) + 8 * v437);
                              else
                                v438 = (uint64_t *)(*(_QWORD *)(v435 + 24) + 16 * (v437 & 0x7FFFFFFF) + 8);
                              v439 = *v438;
                              if (*v438)
                              {
                                v440 = *(_QWORD *)(v439 + 16);
                                *(_QWORD *)(v439 + 16) = v434;
                                *(_QWORD *)(v434 + 16) = v440;
                                if ((*(_BYTE *)(v434 + 3) & 1) != 0)
                                {
                                  *(_QWORD *)(v434 + 24) = v439;
                                }
                                else
                                {
                                  *(_QWORD *)(v434 + 24) = 0;
                                  v438 = (uint64_t *)(v440 + 24);
                                }
                              }
                              else
                              {
                                *(_QWORD *)(v434 + 16) = v434;
                                *(_QWORD *)(v434 + 24) = 0;
                              }
                              *v438 = v434;
                            }
                            v434 += 32;
                            v436 -= 32;
                          }
                          while (v436);
                        }
                        v327 = *(_QWORD *)(v325 + 728);
                        if (v327)
                          (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v327 + 24))(v327, v273);
                        v328 = *v270 & 0xFFFFFFFFFFFFFFF8;
                        *(_QWORD *)v273 = v328 | *(_QWORD *)v273 & 7;
                        *(_QWORD *)(v273 + 8) = v270;
                        *(_QWORD *)(v328 + 8) = v273;
                        *v270 = *v270 & 7 | v273;
                        LODWORD(v482) = 3;
                        *(_QWORD *)&v483 = 0;
                        *((_QWORD *)&v483 + 1) = v179;
                        llvm::MachineInstr::addOperand((llvm::MachineInstr *)v273, v271, (const llvm::MachineOperand *)&v482);
                        v3 = 1;
                        LODWORD(v482) = 1;
                        v483 = 0uLL;
                        llvm::MachineInstr::addOperand((llvm::MachineInstr *)v273, v271, (const llvm::MachineOperand *)&v482);
                        v329 = *(_QWORD *)(*(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32) + 24);
                        LODWORD(v482) = 14;
                        *(_QWORD *)&v483 = 0;
                        *((_QWORD *)&v483 + 1) = v329;
                        llvm::MachineInstr::addOperand((llvm::MachineInstr *)v273, v271, (const llvm::MachineOperand *)&v482);
                        v330 = *(_QWORD *)(*(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 64) + 24);
                        LODWORD(v482) = 14;
                        *(_QWORD *)&v483 = 0;
                        *((_QWORD *)&v483 + 1) = v330;
                        v331 = (llvm::MachineInstr *)v273;
                        v332 = v271;
                        goto LABEL_496;
                      }
                      if (v180 == 16)
                      {
                        v182 = *(llvm::DIExpression **)(v176[8] + 24);
                        if (v182)
                        {
                          v183 = llvm::DIExpression::constantFold(v182, (const void **)v179);
                          v179 = v184;
                        }
                        else
                        {
                          v183 = 0;
                        }
                        v317 = a1[4];
                        v318 = *(_QWORD *)(v317 + 640);
                        v319 = *(unint64_t **)(v317 + 648);
                        if (*(_DWORD *)(v179 + 32) < 0x41u)
                        {
                          v320 = *(llvm::MachineFunction **)(v318 + 32);
                          v323 = (unsigned __int8 *)a1[9];
                          *(_QWORD *)v495 = v323;
                          if (v323)
                            llvm::MetadataTracking::track((uint64_t)v495, v323, 2);
                          v322 = *((_QWORD *)v320 + 28);
                          if (v322)
                            *((_QWORD *)v320 + 28) = *(_QWORD *)v322;
                          else
                            v322 = sub_1C484358C((uint64_t)v320 + 128, 72, 3);
                          v482 = *(llvm::MachineOperand **)v495;
                          if (*(_QWORD *)v495)
                          {
                            llvm::MetadataTracking::retrack((uint64_t)v495, *(unsigned __int8 **)v495, (uint64_t)&v482);
                            *(_QWORD *)v495 = 0;
                          }
                          llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v322, v320, v175, (unsigned __int8 **)&v482, 0);
                          if (v482)
                            llvm::MetadataTracking::untrack((uint64_t)&v482, (unsigned __int8 *)v482);
                          if (*(_QWORD *)v495)
                            llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
                          v341 = *(_QWORD *)(v318 + 40);
                          *(_QWORD *)(v322 + 24) = v341;
                          v342 = *(_QWORD *)(v341 + 32);
                          v343 = *(unsigned int *)(v322 + 40);
                          if ((_DWORD)v343)
                          {
                            v449 = *(_QWORD *)(v322 + 32);
                            v450 = *(_QWORD *)(v342 + 40);
                            v451 = 32 * v343;
                            do
                            {
                              if (!*(_BYTE *)v449)
                              {
                                v452 = *(unsigned int *)(v449 + 4);
                                if ((int)v452 >= 0)
                                  v453 = (uint64_t *)(*(_QWORD *)(v450 + 272) + 8 * v452);
                                else
                                  v453 = (uint64_t *)(*(_QWORD *)(v450 + 24) + 16 * (v452 & 0x7FFFFFFF) + 8);
                                v454 = *v453;
                                if (*v453)
                                {
                                  v455 = *(_QWORD *)(v454 + 16);
                                  *(_QWORD *)(v454 + 16) = v449;
                                  *(_QWORD *)(v449 + 16) = v455;
                                  if ((*(_BYTE *)(v449 + 3) & 1) != 0)
                                  {
                                    *(_QWORD *)(v449 + 24) = v454;
                                  }
                                  else
                                  {
                                    *(_QWORD *)(v449 + 24) = 0;
                                    v453 = (uint64_t *)(v455 + 24);
                                  }
                                }
                                else
                                {
                                  *(_QWORD *)(v449 + 16) = v449;
                                  *(_QWORD *)(v449 + 24) = 0;
                                }
                                *v453 = v449;
                              }
                              v449 += 32;
                              v451 -= 32;
                            }
                            while (v451);
                          }
                          v344 = *(_QWORD *)(v342 + 728);
                          if (v344)
                            (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v344 + 24))(v344, v322);
                          v345 = *v319 & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v322 = v345 | *(_QWORD *)v322 & 7;
                          *(_QWORD *)(v322 + 8) = v319;
                          *(_QWORD *)(v345 + 8) = v322;
                          *v319 = *v319 & 7 | v322;
                          v346 = (_QWORD *)(v179 + 24);
                          if (*(_DWORD *)(v179 + 32) >= 0x41u)
                            v346 = (_QWORD *)*v346;
                          v347 = (_QWORD *)*v346;
                          v3 = 1;
                          LODWORD(v482) = 1;
                          *(_QWORD *)&v483 = 0;
                          *((_QWORD *)&v483 + 1) = v347;
                          llvm::MachineInstr::addOperand((llvm::MachineInstr *)v322, v320, (const llvm::MachineOperand *)&v482);
                        }
                        else
                        {
                          v320 = *(llvm::MachineFunction **)(v318 + 32);
                          v321 = (unsigned __int8 *)a1[9];
                          *(_QWORD *)v495 = v321;
                          if (v321)
                            llvm::MetadataTracking::track((uint64_t)v495, v321, 2);
                          v322 = *((_QWORD *)v320 + 28);
                          if (v322)
                            *((_QWORD *)v320 + 28) = *(_QWORD *)v322;
                          else
                            v322 = sub_1C484358C((uint64_t)v320 + 128, 72, 3);
                          v482 = *(llvm::MachineOperand **)v495;
                          if (*(_QWORD *)v495)
                          {
                            llvm::MetadataTracking::retrack((uint64_t)v495, *(unsigned __int8 **)v495, (uint64_t)&v482);
                            *(_QWORD *)v495 = 0;
                          }
                          llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v322, v320, v175, (unsigned __int8 **)&v482, 0);
                          if (v482)
                            llvm::MetadataTracking::untrack((uint64_t)&v482, (unsigned __int8 *)v482);
                          if (*(_QWORD *)v495)
                            llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
                          v336 = *(_QWORD *)(v318 + 40);
                          *(_QWORD *)(v322 + 24) = v336;
                          v337 = *(_QWORD *)(v336 + 32);
                          v338 = *(unsigned int *)(v322 + 40);
                          if ((_DWORD)v338)
                          {
                            v442 = *(_QWORD *)(v322 + 32);
                            v443 = *(_QWORD *)(v337 + 40);
                            v444 = 32 * v338;
                            do
                            {
                              if (!*(_BYTE *)v442)
                              {
                                v445 = *(unsigned int *)(v442 + 4);
                                if ((int)v445 >= 0)
                                  v446 = (uint64_t *)(*(_QWORD *)(v443 + 272) + 8 * v445);
                                else
                                  v446 = (uint64_t *)(*(_QWORD *)(v443 + 24) + 16 * (v445 & 0x7FFFFFFF) + 8);
                                v447 = *v446;
                                if (*v446)
                                {
                                  v448 = *(_QWORD *)(v447 + 16);
                                  *(_QWORD *)(v447 + 16) = v442;
                                  *(_QWORD *)(v442 + 16) = v448;
                                  if ((*(_BYTE *)(v442 + 3) & 1) != 0)
                                  {
                                    *(_QWORD *)(v442 + 24) = v447;
                                  }
                                  else
                                  {
                                    *(_QWORD *)(v442 + 24) = 0;
                                    v446 = (uint64_t *)(v448 + 24);
                                  }
                                }
                                else
                                {
                                  *(_QWORD *)(v442 + 16) = v442;
                                  *(_QWORD *)(v442 + 24) = 0;
                                }
                                *v446 = v442;
                              }
                              v442 += 32;
                              v444 -= 32;
                            }
                            while (v444);
                          }
                          v339 = *(_QWORD *)(v337 + 728);
                          if (v339)
                            (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v339 + 24))(v339, v322);
                          v340 = *v319 & 0xFFFFFFFFFFFFFFF8;
                          *(_QWORD *)v322 = v340 | *(_QWORD *)v322 & 7;
                          *(_QWORD *)(v322 + 8) = v319;
                          *(_QWORD *)(v340 + 8) = v322;
                          *v319 = *v319 & 7 | v322;
                          LODWORD(v482) = 2;
                          *(_QWORD *)&v483 = 0;
                          *((_QWORD *)&v483 + 1) = v179;
                          llvm::MachineInstr::addOperand((llvm::MachineInstr *)v322, v320, (const llvm::MachineOperand *)&v482);
                          v3 = 1;
                        }
                        LODWORD(v482) = 1;
                        v483 = 0uLL;
                        llvm::MachineInstr::addOperand((llvm::MachineInstr *)v322, v320, (const llvm::MachineOperand *)&v482);
                        v348 = *(_QWORD *)(*(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32) + 24);
                        LODWORD(v482) = 14;
                        *(_QWORD *)&v483 = 0;
                        *((_QWORD *)&v483 + 1) = v348;
                        llvm::MachineInstr::addOperand((llvm::MachineInstr *)v322, v320, (const llvm::MachineOperand *)&v482);
                        LODWORD(v482) = 14;
                        *(_QWORD *)&v483 = 0;
                        *((_QWORD *)&v483 + 1) = v183;
                        v331 = (llvm::MachineInstr *)v322;
                        v332 = v320;
LABEL_496:
                        llvm::MachineInstr::addOperand(v331, v332, (const llvm::MachineOperand *)&v482);
                        return v3;
                      }
                      v428 = sub_1C632A44C((uint64_t)a1, v179);
                      if (v428)
                      {
                        v429 = a1[4];
                        v430 = *(_QWORD *)(v429 + 640);
                        v431 = *(unint64_t **)(v429 + 648);
                        v432 = a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF);
                        llvm::BuildMI(v430, v431, (unsigned __int8 **)a1 + 9, v175, 0, v428, *(_QWORD *)(*(_QWORD *)(v432 + 32) + 24), *(_QWORD *)(*(_QWORD *)(v432 + 64) + 24));
                        if (*((_BYTE *)a1 + 129))
                        {
                          *(_QWORD *)(v433 + 16) = *(_QWORD *)(a1[12] + 8) + 720;
                          llvm::MachineOperand::ChangeToImmediate((unsigned int *)(*(_QWORD *)(v433 + 32) + 32), 0, 0);
                        }
                      }
                      break;
                    case ';':
                      return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 48))(a1, a2);
                    case '<':
                      return v3;
                    default:
                      if (v56 != 7)
                        return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 48))(a1, a2);
                      return v3;
                  }
                  return 1;
                }
                if (v56 != 77)
                {
                  if (v56 == 126)
                    return v3;
                  return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 48))(a1, a2);
                }
                goto LABEL_253;
              }
              if (v56 > 271)
              {
                if (v56 <= 289)
                {
                  if (v56 == 272)
                    return v3;
                  return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 48))(a1, a2);
                }
                if (v56 != 290)
                {
                  if (v56 == 384)
                  {
                    sub_1C632AB9C((uint64_t)a1, a2);
                    return v3;
                  }
                  if (v56 == 385)
                  {
                    sub_1C632AD40((uint64_t)a1, a2);
                    return v3;
                  }
                  return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 48))(a1, a2);
                }
                goto LABEL_253;
              }
              if (v56 > 166)
              {
                if ((v56 - 167) < 2)
                  return v3;
                return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 48))(a1, a2);
              }
              if (v56 == 129)
              {
                v482 = (llvm::MachineOperand *)((char *)&v483 + 8);
                *(_QWORD *)&v483 = 0x2000000000;
                v185 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
                v186 = (_QWORD *)(v185 + 24);
                if (*(_DWORD *)(v185 + 32) >= 0x41u)
                  v186 = (_QWORD *)*v186;
                v187 = (_QWORD *)*v186;
                *(_DWORD *)v495 = 1;
                *(_QWORD *)&v495[8] = 0;
                *(_QWORD *)&v495[16] = v187;
                v188 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)v495, 1);
                v189 = (_OWORD *)((char *)v482 + 32 * v483);
                v190 = v188[1];
                *v189 = *v188;
                v189[1] = v190;
                LODWORD(v483) = v483 + 1;
                v191 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
                v192 = (_QWORD *)(v191 + 24);
                if (*(_DWORD *)(v191 + 32) >= 0x41u)
                  v192 = (_QWORD *)*v192;
                v193 = (_QWORD *)*v192;
                *(_DWORD *)v495 = 1;
                *(_QWORD *)&v495[8] = 0;
                *(_QWORD *)&v495[16] = v193;
                v194 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)v495, 1);
                v195 = (_OWORD *)((char *)v482 + 32 * v483);
                v196 = v194[1];
                *v195 = *v194;
                v195[1] = v196;
                LODWORD(v483) = v483 + 1;
                v3 = sub_1C5CC528C((uint64_t)a1, (uint64_t)&v482, a2, 2u);
                if ((_DWORD)v3)
                {
                  v197 = (_WORD *)(*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)a1[13] + 1928))(a1[13], (*(unsigned __int16 *)(a2 + 18) >> 2) & 0x3FF);
                  v198 = (unsigned __int16)*v197;
                  if (*v197)
                  {
                    v199 = v197;
                    v200 = 1;
                    do
                    {
                      memset(&v495[8], 0, 24);
                      *(_DWORD *)&v495[4] = v198;
                      *(_DWORD *)v495 = 1124073472;
                      v201 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)v495, 1);
                      v202 = (_OWORD *)((char *)v482 + 32 * v483);
                      v203 = v201[1];
                      *v202 = *v201;
                      v202[1] = v203;
                      LODWORD(v483) = v483 + 1;
                      v198 = (unsigned __int16)v199[v200++];
                    }
                    while (v198);
                  }
                  v204 = a1[12];
                  v205 = *(_DWORD *)(v204 + 64);
                  v206 = a1[4];
                  v207 = *(_QWORD *)(v206 + 640);
                  v208 = *(unint64_t **)(v206 + 648);
                  v209 = *(_QWORD *)(v204 + 8);
                  v210 = *(llvm::MachineFunction **)(v207 + 32);
                  v211 = (unsigned __int8 *)a1[9];
                  __p.n128_u64[0] = (unint64_t)v211;
                  if (v211)
                    llvm::MetadataTracking::track((uint64_t)&__p, v211, 2);
                  v212 = v209 + 48 * v205;
                  v213 = *((_QWORD *)v210 + 28);
                  if (v213)
                    *((_QWORD *)v210 + 28) = *(_QWORD *)v213;
                  else
                    v213 = sub_1C484358C((uint64_t)v210 + 128, 72, 3);
                  *(_QWORD *)v495 = __p.n128_u64[0];
                  if (__p.n128_u64[0])
                  {
                    llvm::MetadataTracking::retrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0], (uint64_t)v495);
                    __p.n128_u64[0] = 0;
                  }
                  llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v213, v210, v212, (unsigned __int8 **)v495, 0);
                  if (*(_QWORD *)v495)
                    llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
                  if (__p.n128_u64[0])
                    llvm::MetadataTracking::untrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0]);
                  v280 = *(_QWORD *)(v207 + 40);
                  *(_QWORD *)(v213 + 24) = v280;
                  v281 = *(_QWORD *)(v280 + 32);
                  v282 = *(unsigned int *)(v213 + 40);
                  if ((_DWORD)v282)
                  {
                    v407 = *(_QWORD *)(v213 + 32);
                    v408 = *(_QWORD *)(v281 + 40);
                    v409 = 32 * v282;
                    do
                    {
                      if (!*(_BYTE *)v407)
                      {
                        v410 = *(unsigned int *)(v407 + 4);
                        if ((int)v410 >= 0)
                          v411 = (uint64_t *)(*(_QWORD *)(v408 + 272) + 8 * v410);
                        else
                          v411 = (uint64_t *)(*(_QWORD *)(v408 + 24) + 16 * (v410 & 0x7FFFFFFF) + 8);
                        v412 = *v411;
                        if (*v411)
                        {
                          v413 = *(_QWORD *)(v412 + 16);
                          *(_QWORD *)(v412 + 16) = v407;
                          *(_QWORD *)(v407 + 16) = v413;
                          if ((*(_BYTE *)(v407 + 3) & 1) != 0)
                          {
                            *(_QWORD *)(v407 + 24) = v412;
                          }
                          else
                          {
                            *(_QWORD *)(v407 + 24) = 0;
                            v411 = (uint64_t *)(v413 + 24);
                          }
                        }
                        else
                        {
                          *(_QWORD *)(v407 + 16) = v407;
                          *(_QWORD *)(v407 + 24) = 0;
                        }
                        *v411 = v407;
                      }
                      v407 += 32;
                      v409 -= 32;
                    }
                    while (v409);
                  }
                  v283 = *(_QWORD *)(v281 + 728);
                  if (v283)
                    (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v283 + 24))(v283, v213);
                  v284 = *v208 & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v213 = v284 | *(_QWORD *)v213 & 7;
                  *(_QWORD *)(v213 + 8) = v208;
                  *(_QWORD *)(v284 + 8) = v213;
                  *v208 = *v208 & 7 | v213;
                  v285 = *(_QWORD *)(v213 + 16);
                  v286 = *(unsigned __int16 *)(v285 + 2);
                  if (*(_WORD *)(v285 + 2))
                  {
                    do
                    {
                      *(_DWORD *)v495 = 1;
                      *(_QWORD *)&v495[8] = 0;
                      *(_QWORD *)&v495[16] = 0;
                      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v213, v210, (const llvm::MachineOperand *)v495);
                      --v286;
                    }
                    while (v286);
                  }
                  v287 = a1[4];
                  v288 = *(_QWORD *)(v287 + 640);
                  v289 = *(unint64_t **)(v287 + 648);
                  v290 = *(_QWORD *)(a1[12] + 8);
                  v291 = *(llvm::MachineFunction **)(v288 + 32);
                  v292 = (unsigned __int8 *)a1[9];
                  __p.n128_u64[0] = (unint64_t)v292;
                  if (v292)
                    llvm::MetadataTracking::track((uint64_t)&__p, v292, 2);
                  v293 = v290 + 1200;
                  v294 = *((_QWORD *)v291 + 28);
                  if (v294)
                    *((_QWORD *)v291 + 28) = *(_QWORD *)v294;
                  else
                    v294 = sub_1C484358C((uint64_t)v291 + 128, 72, 3);
                  *(_QWORD *)v495 = __p.n128_u64[0];
                  if (__p.n128_u64[0])
                  {
                    llvm::MetadataTracking::retrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0], (uint64_t)v495);
                    __p.n128_u64[0] = 0;
                  }
                  llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v294, v291, v293, (unsigned __int8 **)v495, 0);
                  if (*(_QWORD *)v495)
                    llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
                  if (__p.n128_u64[0])
                    llvm::MetadataTracking::untrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0]);
                  v295 = *(_QWORD *)(v288 + 40);
                  *(_QWORD *)(v294 + 24) = v295;
                  v296 = *(_QWORD *)(v295 + 32);
                  v297 = *(unsigned int *)(v294 + 40);
                  if ((_DWORD)v297)
                  {
                    v414 = *(_QWORD *)(v294 + 32);
                    v415 = *(_QWORD *)(v296 + 40);
                    v416 = 32 * v297;
                    do
                    {
                      if (!*(_BYTE *)v414)
                      {
                        v417 = *(unsigned int *)(v414 + 4);
                        if ((int)v417 >= 0)
                          v418 = (uint64_t *)(*(_QWORD *)(v415 + 272) + 8 * v417);
                        else
                          v418 = (uint64_t *)(*(_QWORD *)(v415 + 24) + 16 * (v417 & 0x7FFFFFFF) + 8);
                        v419 = *v418;
                        if (*v418)
                        {
                          v420 = *(_QWORD *)(v419 + 16);
                          *(_QWORD *)(v419 + 16) = v414;
                          *(_QWORD *)(v414 + 16) = v420;
                          if ((*(_BYTE *)(v414 + 3) & 1) != 0)
                          {
                            *(_QWORD *)(v414 + 24) = v419;
                          }
                          else
                          {
                            *(_QWORD *)(v414 + 24) = 0;
                            v418 = (uint64_t *)(v420 + 24);
                          }
                        }
                        else
                        {
                          *(_QWORD *)(v414 + 16) = v414;
                          *(_QWORD *)(v414 + 24) = 0;
                        }
                        *v418 = v414;
                      }
                      v414 += 32;
                      v416 -= 32;
                    }
                    while (v416);
                  }
                  v298 = *(_QWORD *)(v296 + 728);
                  if (v298)
                    (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v298 + 24))(v298, v294);
                  v299 = *v289 & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v294 = v299 | *(_QWORD *)v294 & 7;
                  *(_QWORD *)(v294 + 8) = v289;
                  *(_QWORD *)(v299 + 8) = v294;
                  *v289 = *v289 & 7 | v294;
                  if ((_DWORD)v483)
                  {
                    v300 = v482;
                    v301 = 32 * v483;
                    do
                    {
                      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v294, v291, v300);
                      v300 = (llvm::MachineOperand *)((char *)v300 + 32);
                      v301 -= 32;
                    }
                    while (v301);
                  }
                  v302 = a1[12];
                  v303 = *(_DWORD *)(v302 + 68);
                  v304 = a1[4];
                  v305 = *(_QWORD *)(v304 + 640);
                  v306 = *(unint64_t **)(v304 + 648);
                  v307 = *(_QWORD *)(v302 + 8);
                  v308 = *(llvm::MachineFunction **)(v305 + 32);
                  v309 = (unsigned __int8 *)a1[9];
                  __p.n128_u64[0] = (unint64_t)v309;
                  if (v309)
                    llvm::MetadataTracking::track((uint64_t)&__p, v309, 2);
                  v310 = v307 + 48 * v303;
                  v311 = *((_QWORD *)v308 + 28);
                  if (v311)
                    *((_QWORD *)v308 + 28) = *(_QWORD *)v311;
                  else
                    v311 = sub_1C484358C((uint64_t)v308 + 128, 72, 3);
                  *(_QWORD *)v495 = __p.n128_u64[0];
                  if (__p.n128_u64[0])
                  {
                    llvm::MetadataTracking::retrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0], (uint64_t)v495);
                    __p.n128_u64[0] = 0;
                  }
                  llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v311, v308, v310, (unsigned __int8 **)v495, 0);
                  if (*(_QWORD *)v495)
                    llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
                  if (__p.n128_u64[0])
                    llvm::MetadataTracking::untrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0]);
                  v312 = *(_QWORD *)(v305 + 40);
                  *(_QWORD *)(v311 + 24) = v312;
                  v313 = *(_QWORD *)(v312 + 32);
                  v314 = *(unsigned int *)(v311 + 40);
                  if ((_DWORD)v314)
                  {
                    v421 = *(_QWORD *)(v311 + 32);
                    v422 = *(_QWORD *)(v313 + 40);
                    v423 = 32 * v314;
                    do
                    {
                      if (!*(_BYTE *)v421)
                      {
                        v424 = *(unsigned int *)(v421 + 4);
                        if ((int)v424 >= 0)
                          v425 = (uint64_t *)(*(_QWORD *)(v422 + 272) + 8 * v424);
                        else
                          v425 = (uint64_t *)(*(_QWORD *)(v422 + 24) + 16 * (v424 & 0x7FFFFFFF) + 8);
                        v426 = *v425;
                        if (*v425)
                        {
                          v427 = *(_QWORD *)(v426 + 16);
                          *(_QWORD *)(v426 + 16) = v421;
                          *(_QWORD *)(v421 + 16) = v427;
                          if ((*(_BYTE *)(v421 + 3) & 1) != 0)
                          {
                            *(_QWORD *)(v421 + 24) = v426;
                          }
                          else
                          {
                            *(_QWORD *)(v421 + 24) = 0;
                            v425 = (uint64_t *)(v427 + 24);
                          }
                        }
                        else
                        {
                          *(_QWORD *)(v421 + 16) = v421;
                          *(_QWORD *)(v421 + 24) = 0;
                        }
                        *v425 = v421;
                      }
                      v421 += 32;
                      v423 -= 32;
                    }
                    while (v423);
                  }
                  v315 = *(_QWORD *)(v313 + 728);
                  if (v315)
                    (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v315 + 24))(v315, v311);
                  v316 = *v306 & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v311 = v316 | *(_QWORD *)v311 & 7;
                  *(_QWORD *)(v311 + 8) = v306;
                  *(_QWORD *)(v316 + 8) = v311;
                  *v306 = *v306 & 7 | v311;
                  *(_DWORD *)v495 = 1;
                  *(_QWORD *)&v495[16] = 0;
                  *(_QWORD *)&v495[8] = 0;
                  llvm::MachineInstr::addOperand((llvm::MachineInstr *)v311, v308, (const llvm::MachineOperand *)v495);
                  *(_DWORD *)v495 = 1;
                  *(_QWORD *)&v495[16] = 0;
                  *(_QWORD *)&v495[8] = 0;
                  llvm::MachineInstr::addOperand((llvm::MachineInstr *)v311, v308, (const llvm::MachineOperand *)v495);
                  *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 56) + 39) = 1;
                }
                if (v482 != (llvm::MachineOperand *)((char *)&v483 + 8))
                  free(v482);
                return v3;
              }
              if (v56 == 166)
              {
LABEL_253:
                v165 = sub_1C5CC1648(a1, *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF)));
                if (v165)
                {
                  v157 = v165;
                  goto LABEL_227;
                }
                return 0;
              }
              if ((v56 - 127) >= 2)
                return (*(uint64_t (**)(_QWORD *, uint64_t))(*a1 + 48))(a1, a2);
              v116 = ((unint64_t)*(unsigned __int16 *)(a2 + 18) >> 2) & 0x3FF;
              v117 = *(unsigned __int8 *)(*(_QWORD *)a2 + 8);
              v118 = llvm::Value::stripPointerCasts(*(llvm::Value **)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 64));
              v119 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 96);
              v120 = (_QWORD *)(v119 + 24);
              if (*(_DWORD *)(v119 + 32) >= 0x41u)
                v120 = (_QWORD *)*v120;
              v121 = (_QWORD *)*v120;
              if ((_DWORD)v116 == 13)
                v122 = 0;
              else
                v122 = *v120;
              *(_QWORD *)v495 = 0;
              *(_QWORD *)&v495[12] = 0xFFFFFFFFLL;
              memset(&v495[24], 0, 48);
              v496 = 0u;
              v497 = v499;
              v498 = 0x1000000000;
              v499[16] = &v500;
              v499[17] = 0x1000000000;
              v501 = (unsigned __int32 *)v503;
              v502 = 0x1000000000;
              v503[8] = &v504;
              v503[9] = 0x400000000;
              v505 = (unsigned int *)v507;
              v506 = 0x400000000;
              v3 = 0;
              if (!sub_1C632AA04((uint64_t)a1, a2, v122, (uint64_t)v118, (_DWORD)v116 == 13, (uint64_t)v495))
              {
LABEL_661:
                sub_1C632B718(v495);
                return v3;
              }
              v482 = (llvm::MachineOperand *)((char *)&v483 + 8);
              *(_QWORD *)&v483 = 0x2000000000;
              if ((_DWORD)v116 == 13 && v117 != 7)
              {
                v123 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(*(_QWORD *)a1[13] + 424))(a1[13], 6, 0);
                v124 = a1[6];
                IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v124, (unsigned __int8 *)&unk_1C8767743, 0);
                *(_QWORD *)(*(_QWORD *)(v124 + 24) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v123 & 0xFFFFFFFFFFFFFFFBLL;
                v126 = *(_QWORD *)(v124 + 8);
                if (v126)
                  (*(void (**)(uint64_t))(*(_QWORD *)v126 + 24))(v126);
                *((_QWORD *)&v496 + 1) = IncompleteVirtualRegister | 0x100000000;
                __p.n128_u64[1] = 0;
                v479 = 0;
                v480 = 0;
                __p.n128_u32[0] = 0x1000000;
                __p.n128_u32[1] = IncompleteVirtualRegister;
                v127 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                v128 = (_OWORD *)((char *)v482 + 32 * v483);
                v129 = v127[1];
                *v128 = *v127;
                v128[1] = v129;
                LODWORD(v483) = v483 + 1;
              }
              v130 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF));
              v131 = (_QWORD *)(v130 + 24);
              if (*(_DWORD *)(v130 + 32) >= 0x41u)
                v131 = (_QWORD *)*v131;
              v132 = (_QWORD *)*v131;
              __p.n128_u32[0] = 1;
              __p.n128_u64[1] = 0;
              v479 = (unint64_t)v132;
              v133 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
              v134 = (_OWORD *)((char *)v482 + 32 * v483);
              v135 = v133[1];
              *v134 = *v133;
              v134[1] = v135;
              LODWORD(v483) = v483 + 1;
              v136 = *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32);
              v137 = (_QWORD *)(v136 + 24);
              if (*(_DWORD *)(v136 + 32) >= 0x41u)
                v137 = (_QWORD *)*v137;
              v138 = (_QWORD *)*v137;
              __p.n128_u32[0] = 1;
              __p.n128_u64[1] = 0;
              v479 = (unint64_t)v138;
              v139 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
              v140 = (_OWORD *)((char *)v482 + 32 * v483);
              v141 = v139[1];
              *v140 = *v139;
              v140[1] = v141;
              LODWORD(v483) = v483 + 1;
              v142 = *((unsigned __int8 *)v118 + 16);
              if (v142 == 76 && v118)
              {
                v143 = *((_QWORD *)v118 - 4);
              }
              else
              {
                if (v142 != 5 || !v118)
                {
                  if (v142 <= 3 && v118)
                  {
                    v479 = (unint64_t)v118;
                    LODWORD(v480) = 0;
                    __p = (__n128)0xAuLL;
                  }
                  else
                  {
                    __p.n128_u32[0] = 1;
                    __p.n128_u64[1] = 0;
                    v479 = 0;
                  }
                  goto LABEL_516;
                }
                v143 = *((_QWORD *)v118 - 4 * (*((_DWORD *)v118 + 5) & 0x7FFFFFF));
              }
              v356 = (_QWORD *)(v143 + 24);
              if (*(_DWORD *)(v143 + 32) >= 0x41u)
                v356 = (_QWORD *)*v356;
              v357 = (_QWORD *)*v356;
              __p.n128_u32[0] = 1;
              __p.n128_u64[1] = 0;
              v479 = (unint64_t)v357;
LABEL_516:
              v358 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
              v359 = (_OWORD *)((char *)v482 + 32 * v483);
              v360 = v358[1];
              *v359 = *v358;
              v359[1] = v360;
              LODWORD(v483) = v483 + 1;
              if ((_DWORD)v116 == 13)
              {
                __p.n128_u32[0] = 1;
                __p.n128_u64[1] = 0;
                v479 = v121;
                v361 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                v362 = (_OWORD *)((char *)v482 + 32 * v483);
                v363 = v361[1];
                *v362 = *v361;
                v362[1] = v363;
                LODWORD(v483) = v483 + 1;
                __p.n128_u32[0] = 1;
                __p.n128_u64[1] = 0;
                v479 = 13;
                v364 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                v365 = (_OWORD *)((char *)v482 + 32 * v483);
                v366 = v364[1];
                *v365 = *v364;
                v365[1] = v366;
                LODWORD(v483) = v483 + 1;
                if ((_DWORD)v121)
                {
                  v367 = 0;
                  do
                  {
                    v368 = sub_1C5CC1648(a1, *(_QWORD *)(a2 - 32 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF) + 32* (v367 + 4)));
                    if (!v368)
                      goto LABEL_538;
                    __p.n128_u64[1] = 0;
                    __p.n128_u32[0] = 0;
                    __p.n128_u32[1] = v368;
                    v479 = 0;
                    v480 = 0;
                    v369 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                    v370 = (_OWORD *)((char *)v482 + 32 * v483);
                    v371 = v369[1];
                    *v370 = *v369;
                    v370[1] = v371;
                    LODWORD(v483) = v483 + 1;
                  }
                  while ((_DWORD)v121 != ++v367);
                }
              }
              else
              {
                __p.n128_u32[0] = 1;
                __p.n128_u64[1] = 0;
                v479 = v502;
                v372 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                v373 = (_OWORD *)((char *)v482 + 32 * v483);
                v374 = v372[1];
                *v373 = *v372;
                v373[1] = v374;
                LODWORD(v483) = v483 + 1;
                __p.n128_u32[0] = 1;
                __p.n128_u64[1] = 0;
                v479 = v116;
                v375 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                v376 = (_OWORD *)((char *)v482 + 32 * v483);
                v377 = v375[1];
                *v376 = *v375;
                v376[1] = v377;
                LODWORD(v483) = v483 + 1;
              }
              if ((_DWORD)v502)
              {
                v378 = v501;
                v379 = 4 * v502;
                do
                {
                  v380 = *v378++;
                  __p.n128_u64[1] = 0;
                  __p.n128_u32[0] = 0;
                  __p.n128_u32[1] = v380;
                  v479 = 0;
                  v480 = 0;
                  v381 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                  v382 = (_OWORD *)((char *)v482 + 32 * v483);
                  v383 = v381[1];
                  *v382 = *v381;
                  v382[1] = v383;
                  LODWORD(v483) = v483 + 1;
                  v379 -= 4;
                }
                while (v379);
              }
              if ((sub_1C5CC528C((uint64_t)a1, (uint64_t)&v482, a2, (int)v121 + 4) & 1) != 0)
              {
                v384 = (*(uint64_t (**)(_QWORD, _QWORD, unint64_t))(*(_QWORD *)a1[14] + 40))(a1[14], *(_QWORD *)(a1[4] + 8), v116);
                __p.n128_u32[0] = 12;
                __p.n128_u64[1] = 0;
                v479 = v384;
                v385 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                v386 = (_OWORD *)((char *)v482 + 32 * v483);
                v387 = v385[1];
                *v386 = *v385;
                v386[1] = v387;
                LODWORD(v483) = v483 + 1;
                v388 = (_WORD *)(*(uint64_t (**)(_QWORD, unint64_t))(*(_QWORD *)a1[13] + 1928))(a1[13], v116);
                v389 = (unsigned __int16)*v388;
                if (*v388)
                {
                  v390 = v388;
                  v391 = 1;
                  do
                  {
                    __p.n128_u64[1] = 0;
                    v479 = 0;
                    v480 = 0;
                    __p.n128_u32[0] = 1124073472;
                    __p.n128_u32[1] = v389;
                    v392 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                    v393 = (_OWORD *)((char *)v482 + 32 * v483);
                    v394 = v392[1];
                    *v393 = *v392;
                    v393[1] = v394;
                    LODWORD(v483) = v483 + 1;
                    v389 = (unsigned __int16)v390[v391++];
                  }
                  while (v389);
                }
                if ((_DWORD)v506)
                {
                  v395 = v505;
                  v396 = 4 * v506;
                  do
                  {
                    v397 = *v395++;
                    __p.n128_u64[1] = 0;
                    v479 = 0;
                    v480 = 0;
                    __p.n128_u32[0] = 50331648;
                    __p.n128_u32[1] = v397;
                    v398 = (_OWORD *)sub_1C47C0F60((uint64_t)&v482, (unint64_t)&__p, 1);
                    v399 = (_OWORD *)((char *)v482 + 32 * v483);
                    v400 = v398[1];
                    *v399 = *v398;
                    v399[1] = v400;
                    LODWORD(v483) = v483 + 1;
                    v396 -= 4;
                  }
                  while (v396);
                }
                v401 = *(_QWORD *)(a1[4] + 640);
                v402 = v496;
                v403 = *(_QWORD *)(a1[12] + 8) + 1296;
                if ((*(_WORD *)(v496 + 44) & 4) != 0)
                {
                  v404 = *(llvm::MachineFunction **)(v401 + 32);
                  v441 = (unsigned __int8 *)a1[9];
                  v481 = v441;
                  if (v441)
                    llvm::MetadataTracking::track((uint64_t)&v481, v441, 2);
                  v406 = *((_QWORD *)v404 + 28);
                  if (v406)
                    *((_QWORD *)v404 + 28) = *(_QWORD *)v406;
                  else
                    v406 = sub_1C484358C((uint64_t)v404 + 128, 72, 3);
                  __p.n128_u64[0] = (unint64_t)v481;
                  if (v481)
                  {
                    llvm::MetadataTracking::retrack((uint64_t)&v481, v481, (uint64_t)&__p);
                    v481 = 0;
                  }
                  llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v406, v404, v403, (unsigned __int8 **)&__p, 0);
                  if (__p.n128_u64[0])
                    llvm::MetadataTracking::untrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0]);
                  if (v481)
                    llvm::MetadataTracking::untrack((uint64_t)&v481, v481);
                  if (v401 + 48 != v402 && (*(_WORD *)(v402 + 44) & 4) != 0)
                    *(_WORD *)(v406 + 44) |= 0xCu;
                  sub_1C512CA10((uint64_t *)(v401 + 40), (uint64_t *)v402, v406);
                }
                else
                {
                  v404 = *(llvm::MachineFunction **)(v401 + 32);
                  v405 = (unsigned __int8 *)a1[9];
                  v481 = v405;
                  if (v405)
                    llvm::MetadataTracking::track((uint64_t)&v481, v405, 2);
                  v406 = *((_QWORD *)v404 + 28);
                  if (v406)
                    *((_QWORD *)v404 + 28) = *(_QWORD *)v406;
                  else
                    v406 = sub_1C484358C((uint64_t)v404 + 128, 72, 3);
                  __p.n128_u64[0] = (unint64_t)v481;
                  if (v481)
                  {
                    llvm::MetadataTracking::retrack((uint64_t)&v481, v481, (uint64_t)&__p);
                    v481 = 0;
                  }
                  llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v406, v404, v403, (unsigned __int8 **)&__p, 0);
                  if (__p.n128_u64[0])
                    llvm::MetadataTracking::untrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0]);
                  if (v481)
                    llvm::MetadataTracking::untrack((uint64_t)&v481, v481);
                  v456 = *(_QWORD *)(v401 + 40);
                  *(_QWORD *)(v406 + 24) = v456;
                  v457 = *(_QWORD *)(v456 + 32);
                  v458 = *(unsigned int *)(v406 + 40);
                  if ((_DWORD)v458)
                  {
                    v464 = *(_QWORD *)(v406 + 32);
                    v465 = *(_QWORD *)(v457 + 40);
                    v466 = 32 * v458;
                    do
                    {
                      if (!*(_BYTE *)v464)
                      {
                        v467 = *(unsigned int *)(v464 + 4);
                        if ((int)v467 >= 0)
                          v468 = (uint64_t *)(*(_QWORD *)(v465 + 272) + 8 * v467);
                        else
                          v468 = (uint64_t *)(*(_QWORD *)(v465 + 24) + 16 * (v467 & 0x7FFFFFFF) + 8);
                        v469 = *v468;
                        if (*v468)
                        {
                          v470 = *(_QWORD *)(v469 + 16);
                          *(_QWORD *)(v469 + 16) = v464;
                          *(_QWORD *)(v464 + 16) = v470;
                          if ((*(_BYTE *)(v464 + 3) & 1) != 0)
                          {
                            *(_QWORD *)(v464 + 24) = v469;
                          }
                          else
                          {
                            *(_QWORD *)(v464 + 24) = 0;
                            v468 = (uint64_t *)(v470 + 24);
                          }
                        }
                        else
                        {
                          *(_QWORD *)(v464 + 16) = v464;
                          *(_QWORD *)(v464 + 24) = 0;
                        }
                        *v468 = v464;
                      }
                      v464 += 32;
                      v466 -= 32;
                    }
                    while (v466);
                  }
                  v459 = *(_QWORD *)(v457 + 728);
                  if (v459)
                    (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v459 + 24))(v459, v406);
                  v460 = *(_QWORD *)v402 & 0xFFFFFFFFFFFFFFF8;
                  *(_QWORD *)v406 = v460 | *(_QWORD *)v406 & 7;
                  *(_QWORD *)(v406 + 8) = v402;
                  *(_QWORD *)(v460 + 8) = v406;
                  *(_QWORD *)v402 = *(_QWORD *)v402 & 7 | v406;
                }
                if ((_DWORD)v483)
                {
                  v461 = v482;
                  v462 = 32 * v483;
                  do
                  {
                    llvm::MachineInstr::addOperand((llvm::MachineInstr *)v406, v404, v461);
                    v461 = (llvm::MachineOperand *)((char *)v461 + 32);
                    v462 -= 32;
                  }
                  while (v462);
                }
                llvm::MachineInstr::setPhysRegsDeadExcept(v406, v505, v506, a1[14]);
                v463 = v496;
                if ((*(_BYTE *)v496 & 4) == 0)
                {
                  v463 = v496;
                  if ((*(_WORD *)(v496 + 44) & 8) != 0)
                  {
                    v463 = v496;
                    do
                      v463 = *(_QWORD *)(v463 + 8);
                    while ((*(_WORD *)(v463 + 44) & 8) != 0);
                  }
                }
                sub_1C487FE80(*(_QWORD *)(v496 + 24) + 40, v496, *(_QWORD *)(v463 + 8));
                v3 = 1;
                *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(a1[4] + 8) + 56) + 40) = 1;
                if (HIDWORD(v496))
                  sub_1C632A598((uint64_t)a1, a2, SDWORD2(v496), SHIDWORD(v496));
                goto LABEL_659;
              }
LABEL_538:
              v3 = 0;
LABEL_659:
              if (v482 != (llvm::MachineOperand *)((char *)&v483 + 8))
                free(v482);
              goto LABEL_661;
            }
            v55 = *(_QWORD *)(v19 + 24);
          }
LABEL_303:
          v477 = v55;
          __p = 0uLL;
          v214 = 0;
          v475 = *(_QWORD *)a2;
          v479 = 0;
          *(_QWORD *)&v495[40] = 0;
          memset(v495, 0, 36);
          v215 = *(unsigned __int8 *)(a2 + 16);
          if (v215 != 84)
          {
            if (v215 == 39)
              v214 = (*(_DWORD *)(a2 + 80) + 1);
            else
              v214 = 2;
          }
          v216 = 0;
          v217 = *(_DWORD *)(a2 + 20);
          v218 = -(uint64_t)(v217 & 0x7FFFFFF);
          if (v217 < 0)
          {
            v472 = a2 - 32 * (v217 & 0x7FFFFFF);
            v473 = *(_QWORD *)(v472 - 8);
            if ((v473 & 0xFFFFFFFF0) != 0)
              v216 = *(_DWORD *)(v472 - 12) - *(_DWORD *)(v472 - v473);
            else
              v216 = 0;
          }
          sub_1C5CC5540((uint64_t)&__p, ((-32 * v214 + 32 * (unint64_t)-v216 - 32 * v218 - 32) >> 5));
          v220 = *(_DWORD *)(a2 + 20);
          v221 = (llvm::Type ***)(a2 - 32 * (v220 & 0x7FFFFFF));
          v222 = *(unsigned __int8 *)(a2 + 16);
          if (v222 == 84)
          {
            v223 = 0;
          }
          else if (v222 == 39)
          {
            v223 = (*(_DWORD *)(a2 + 80) + 1);
          }
          else
          {
            v223 = 2;
          }
          if (v220 < 0 && (v474 = (uint64_t)*(v221 - 1), (v474 & 0xFFFFFFFF0) != 0))
            v224 = (*((_DWORD *)v221 - 3) - *(_DWORD *)((char *)v221 - v474));
          else
            v224 = 0;
          for (i = a2 - 32 * v223 - 32 * v224 - 32; v221 != (llvm::Type ***)i; v221 += 4)
          {
            v226 = *v221;
            v227 = **v221;
            if ((llvm::Type::isEmptyTy(v227) & 1) == 0)
            {
              *(_QWORD *)v495 = v226;
              *(_QWORD *)&v495[24] = v227;
              sub_1C6374D70((uint64_t)v495, a2, ((unint64_t)&v221[4 * (*(_DWORD *)(a2 + 20) & 0x7FFFFFF)] - a2) >> 5);
              v228 = (_OWORD *)__p.n128_u64[1];
              if (__p.n128_u64[1] >= v479)
              {
                v232 = __p.n128_u64[0];
                v233 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(__p.n128_u64[1] - __p.n128_u64[0]) >> 4);
                v234 = v233 + 1;
                if (v233 + 1 > 0x555555555555555)
                  abort();
                if (0x5555555555555556 * ((uint64_t)(v479 - __p.n128_u64[0]) >> 4) > v234)
                  v234 = 0x5555555555555556 * ((uint64_t)(v479 - __p.n128_u64[0]) >> 4);
                if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v479 - __p.n128_u64[0]) >> 4) >= 0x2AAAAAAAAAAAAAALL)
                  v235 = 0x555555555555555;
                else
                  v235 = v234;
                if (v235)
                {
                  if (v235 > 0x555555555555555)
                    sub_1C4764EE4();
                  v236 = (char *)operator new(48 * v235);
                }
                else
                {
                  v236 = 0;
                }
                v237 = &v236[48 * v233];
                v238 = *(_OWORD *)&v495[16];
                *(_OWORD *)v237 = *(_OWORD *)v495;
                *((_OWORD *)v237 + 1) = v238;
                *((_OWORD *)v237 + 2) = *(_OWORD *)&v495[32];
                v239 = (unint64_t)v237;
                if (v228 != (_OWORD *)v232)
                {
                  do
                  {
                    v240 = *(v228 - 3);
                    v241 = *(v228 - 1);
                    *(_OWORD *)(v239 - 32) = *(v228 - 2);
                    *(_OWORD *)(v239 - 16) = v241;
                    *(_OWORD *)(v239 - 48) = v240;
                    v239 -= 48;
                    v228 -= 3;
                  }
                  while (v228 != (_OWORD *)v232);
                  v228 = (_OWORD *)v232;
                }
                v231 = (unint64_t)(v237 + 48);
                __p.n128_u64[0] = v239;
                __p.n128_u64[1] = (unint64_t)(v237 + 48);
                v479 = (unint64_t)&v236[48 * v235];
                if (v228)
                  operator delete(v228);
              }
              else
              {
                v229 = *(_OWORD *)v495;
                v230 = *(_OWORD *)&v495[32];
                *(_OWORD *)(__p.n128_u64[1] + 16) = *(_OWORD *)&v495[16];
                v228[2] = v230;
                *v228 = v229;
                v231 = (unint64_t)(v228 + 3);
              }
              __p.n128_u64[1] = v231;
            }
          }
          if ((*(_WORD *)(a2 + 18) & 3u) - 1 < 2
            && llvm::isInTailCallPosition((llvm *)a2, (const llvm::CallBase *)a1[10], v219))
          {
            v242 = *(_QWORD *)(*(_QWORD *)a1[5] + 112);
            if (!v242
              || !*(_DWORD *)(v242 + 8)
              || (v243 = *(_QWORD *)(v242 + 40)) == 0
              || (v244 = *(_DWORD *)(v243 + 40)) == 0)
            {
LABEL_356:
              v257 = 1;
              goto LABEL_358;
            }
            v245 = *(_QWORD *)(v243 + 24);
            v246 = atomic_load((unsigned __int8 *)&qword_1ED7EAC88);
            if ((v246 & 1) == 0 && __cxa_guard_acquire(&qword_1ED7EAC88))
            {
              v471 = llvm::hashing::detail::fixed_seed_override;
              if (!llvm::hashing::detail::fixed_seed_override)
                v471 = 0xFF51AFD7ED558CCDLL;
              qword_1ED7EAC80 = v471;
              __cxa_guard_release(&qword_1ED7EAC88);
            }
            v247 = __ROR8__(qword_1ED7EAC80 ^ 0xAE2F6180382EB467, 30);
            v248 = 0x9DDFEA08EB382D69
                 * ((qword_1ED7EAC80 + 0x1ED4D83DFEF8CF66) ^ ((0x9DDFEA08EB382D69
                                                               * ((v247 - 0x58DDE70BBE0D1868) ^ (qword_1ED7EAC80
                                                                                                 + 0x1ED4D83DFEF8CF66))) >> 47) ^ (0x9DDFEA08EB382D69 * ((v247 - 0x58DDE70BBE0D1868) ^ (qword_1ED7EAC80 + 0x1ED4D83DFEF8CF66))));
            v249 = -348639895 * ((v248 >> 47) ^ v248);
            for (j = 1; ; ++j)
            {
              v251 = v249 & (v244 - 1);
              v252 = (uint64_t *)(v245 + 24 * v251);
              v253 = *v252;
              if (*v252 == -1)
              {
                if ("disable-tail-calls" == (char *)-1)
                  goto LABEL_354;
              }
              else if (v253 == -2)
              {
                if ("disable-tail-calls" == (char *)-2)
                  goto LABEL_354;
              }
              else if (v252[1] == 18)
              {
                v254 = *(_QWORD *)v253 == 0x2D656C6261736964 && *(_QWORD *)(v253 + 8) == 0x6C61632D6C696174;
                if (v254 && *(_WORD *)(v253 + 16) == 29548)
                {
LABEL_354:
                  v256 = v252[2];
                  if (!v256 || *(_DWORD *)(v256 + 16) != 4)
                    goto LABEL_356;
                  v257 = *(_DWORD *)(v256 + *(unsigned int *)(v256 + 12) + 25) != *(_DWORD *)"true";
LABEL_358:
                  v482 = 0;
                  LOWORD(v483) = v483 & 0x80 | 0x20;
                  *(_QWORD *)((char *)&v483 + 4) = 0xFFFFFFFFLL;
                  v484 = 0u;
                  v485 = 0u;
                  v486 = 0u;
                  v487 = 0u;
                  v488 = v490;
                  v489 = 0x1000000000;
                  v490[16] = v491;
                  v490[17] = 0x1000000000;
                  v491[24] = v492;
                  v491[25] = 0x1000000000;
                  v492[8] = v493;
                  v492[9] = 0x400000000;
                  v493[24] = &v494;
                  v493[25] = 0x400000000;
                  sub_1C632AF38((uint64_t)&v482, v475, v477, *(_QWORD *)(a2 - 32), &__p, a2);
                  BYTE1(v483) = v257;
                  llvm::diagnoseDontCall(a2, v258);
                  v3 = sub_1C5CC562C((uint64_t)a1, (llvm::EVT ***)&v482);
                  sub_1C632B718(&v482);
                  if (__p.n128_u64[0])
                  {
                    __p.n128_u64[1] = __p.n128_u64[0];
                    operator delete((void *)__p.n128_u64[0]);
                  }
                  return v3;
                }
              }
              if (v253 == -1)
                goto LABEL_356;
              v249 = j + v251;
            }
          }
          v257 = 0;
          goto LABEL_358;
        }
        if (*(char *)(v19 + 71) < 0)
          v53 = *(_QWORD *)(v19 + 56);
        else
          v53 = *(unsigned __int8 *)(v19 + 71);
        if (!v53)
        {
          if (*(_BYTE *)(v19 + 81))
            v144 = *(unsigned __int8 *)(v19 + 80) | 2;
          else
            v144 = *(unsigned __int8 *)(v19 + 80);
          v145 = *(_QWORD *)(a2 + 64);
          if (v145 && (*(_BYTE *)(v145 + 12) & 0x40) != 0
            || llvm::CallBase::hasFnAttrOnCalledFunction(a2, 6))
          {
            v144 |= 0x20u;
          }
          v146 = *(_DWORD *)(v19 + 84);
          v147 = a1[4];
          v148 = *(_QWORD *)(v147 + 640);
          v149 = *(unint64_t **)(v147 + 648);
          v150 = *(_QWORD *)(a1[12] + 8);
          v151 = *(llvm::MachineFunction **)(v148 + 32);
          v152 = (unsigned __int8 *)a1[9];
          *(_QWORD *)v495 = v152;
          if (v152)
            llvm::MetadataTracking::track((uint64_t)v495, v152, 2);
          v153 = v150 + 48;
          v154 = *((_QWORD *)v151 + 28);
          if (v154)
            *((_QWORD *)v151 + 28) = *(_QWORD *)v154;
          else
            v154 = sub_1C484358C((uint64_t)v151 + 128, 72, 3);
          v482 = *(llvm::MachineOperand **)v495;
          if (*(_QWORD *)v495)
          {
            llvm::MetadataTracking::retrack((uint64_t)v495, *(unsigned __int8 **)v495, (uint64_t)&v482);
            *(_QWORD *)v495 = 0;
          }
          llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v154, v151, v153, (unsigned __int8 **)&v482, 0);
          if (v482)
            llvm::MetadataTracking::untrack((uint64_t)&v482, (unsigned __int8 *)v482);
          if (*(_QWORD *)v495)
            llvm::MetadataTracking::untrack((uint64_t)v495, *(unsigned __int8 **)v495);
          v158 = *(_QWORD *)(v148 + 40);
          *(_QWORD *)(v154 + 24) = v158;
          v159 = *(_QWORD *)(v158 + 32);
          v160 = *(unsigned int *)(v154 + 40);
          if ((_DWORD)v160)
          {
            v261 = *(_QWORD *)(v154 + 32);
            v262 = *(_QWORD *)(v159 + 40);
            v263 = 32 * v160;
            do
            {
              if (!*(_BYTE *)v261)
              {
                v264 = *(unsigned int *)(v261 + 4);
                if ((int)v264 >= 0)
                  v265 = (uint64_t *)(*(_QWORD *)(v262 + 272) + 8 * v264);
                else
                  v265 = (uint64_t *)(*(_QWORD *)(v262 + 24) + 16 * (v264 & 0x7FFFFFFF) + 8);
                v266 = *v265;
                if (*v265)
                {
                  v267 = *(_QWORD *)(v266 + 16);
                  *(_QWORD *)(v266 + 16) = v261;
                  *(_QWORD *)(v261 + 16) = v267;
                  if ((*(_BYTE *)(v261 + 3) & 1) != 0)
                  {
                    *(_QWORD *)(v261 + 24) = v266;
                  }
                  else
                  {
                    *(_QWORD *)(v261 + 24) = 0;
                    v265 = (uint64_t *)(v267 + 24);
                  }
                }
                else
                {
                  *(_QWORD *)(v261 + 16) = v261;
                  *(_QWORD *)(v261 + 24) = 0;
                }
                *v265 = v261;
              }
              v261 += 32;
              v263 -= 32;
            }
            while (v263);
          }
          v161 = *(_QWORD *)(v159 + 728);
          if (v161)
            (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v161 + 24))(v161, v154);
          v162 = *v149 & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v154 = v162 | *(_QWORD *)v154 & 7;
          *(_QWORD *)(v154 + 8) = v149;
          *(_QWORD *)(v162 + 8) = v154;
          *v149 = *v149 & 7 | v154;
          v163 = (_QWORD *)(v19 + 24);
          if (*(char *)(v19 + 47) < 0)
            v163 = (_QWORD *)*v163;
          *(_QWORD *)&v483 = 0;
          *((_QWORD *)&v483 + 1) = v163;
          LODWORD(v484) = 0;
          v482 = (llvm::MachineOperand *)9;
          llvm::MachineInstr::addOperand((llvm::MachineInstr *)v154, v151, (const llvm::MachineOperand *)&v482);
          LODWORD(v482) = 1;
          *(_QWORD *)&v483 = 0;
          *((_QWORD *)&v483 + 1) = v144 | (4 * v146);
          llvm::MachineInstr::addOperand((llvm::MachineInstr *)v154, v151, (const llvm::MachineOperand *)&v482);
          if (*(_QWORD *)(a2 + 48) || (*(_BYTE *)(a2 + 23) & 0x20) != 0)
          {
            MetadataImpl = llvm::Instruction::getMetadataImpl((uint64_t ***)a2, "srcloc", 6uLL);
            if (MetadataImpl)
            {
              LODWORD(v482) = 14;
              *(_QWORD *)&v483 = 0;
              *((_QWORD *)&v483 + 1) = MetadataImpl;
LABEL_249:
              llvm::MachineInstr::addOperand((llvm::MachineInstr *)v154, v151, (const llvm::MachineOperand *)&v482);
            }
          }
          return 1;
        }
      }
      return 0;
    case 64:
      v3 = 0;
      if (!a2 || *(_BYTE *)(a2 + 16) != 92)
        return v3;
      v12 = sub_1C47A7FD0(a1[13], a1[11], *(_QWORD *)a2, (llvm::Type *)1);
      if (!v12 || v12 != 2 && !*(_QWORD *)(a1[13] + 8 * v12 + 96))
        return 0;
      v111 = *(unsigned __int8 **)(a2 - 32);
      v112 = *(llvm **)v111;
      v113 = a1[4];
      *(_QWORD *)v495 = v111;
      v482 = 0;
      if ((sub_1C61252B8((uint64_t *)(v113 + 80), v495, &v482) & 1) != 0)
        v115 = v482;
      else
        v115 = (llvm::MachineOperand *)(*(_QWORD *)(v113 + 80) + 16 * *(unsigned int *)(v113 + 96));
      v259 = a1[4];
      if (v115 == (llvm::MachineOperand *)(*(_QWORD *)(v259 + 80) + 16 * *(unsigned int *)(v259 + 96)))
      {
        if (v111[16] < 0x1Cu)
          return 0;
        v260 = sub_1C6128BA8(v259, (const llvm::Value *)v111);
      }
      else
      {
        v260 = *((_DWORD *)v115 + 2);
      }
      v333 = llvm::ComputeLinearIndex(v112, *(_DWORD **)(a2 + 64), (_DWORD *)(*(_QWORD *)(a2 + 64) + 4 * *(unsigned int *)(a2 + 72)), 0, v114);
      v482 = (llvm::MachineOperand *)((char *)&v483 + 8);
      *(_QWORD *)&v483 = 0x400000000;
      llvm::ComputeValueVTs(a1[13], (llvm::DataLayout *)a1[11], (uint64_t)v112, (uint64_t)&v482, 0, 0, 0);
      if (v333)
      {
        v334 = 0;
        v335 = 16 * v333;
        do
        {
          v260 += (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)a1[13] + 584))(a1[13], ***(_QWORD ***)a1[4], *(_QWORD *)((char *)v482 + v334), *(_QWORD *)((char *)v482 + v334 + 8), 0);
          v334 += 16;
        }
        while (v335 != v334);
      }
      sub_1C632A598((uint64_t)a1, a2, v260, 1);
      if (v482 != (llvm::MachineOperand *)((char *)&v483 + 8))
        free(v482);
      return 1;
    case 67:
      return sub_1C632B05C((uint64_t)a1, a2);
    default:
      return v3;
  }
}

uint64_t sub_1C5CC4FBC(unint64_t *a1, uint64_t a2, _BOOL8 a3)
{
  uint64_t v3;
  unint64_t EVT;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  _QWORD *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t *v24;
  unint64_t v25;
  unsigned __int8 v26;
  unint64_t *v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  uint8x8_t v31;
  unsigned int v32;
  uint8x8_t v33;
  _BYTE v35[24];

  v3 = a3;
  EVT = llvm::EVT::getEVT(*(llvm::EVT **)a2, (llvm::Type *)1, a3);
  v8 = EVT;
  if (EVT < 2u)
    return 0;
  if (!(_BYTE)EVT || !*(_QWORD *)(a1[13] + 8 * EVT + 96))
  {
    v9 = 0;
    if ((v3 - 171) > 2 || EVT != 2)
      return v9;
    llvm::TargetLoweringBase::getTypeConversion(a1[13], **(llvm::EVT ***)a2, EVT, v7, (uint64_t)v35);
    v8 = v35[8];
  }
  v10 = *(_DWORD *)(a2 + 20);
  if ((v10 & 0x40000000) != 0)
    v11 = *(_QWORD *)(a2 - 8);
  else
    v11 = a2 - 32 * (v10 & 0x7FFFFFF);
  v12 = *(_QWORD *)v11;
  v13 = *(unsigned __int8 *)(*(_QWORD *)v11 + 16);
  if (v12)
    v14 = v13 == 16;
  else
    v14 = 0;
  if (v14
    && *(unsigned __int8 *)(a2 + 16) >= 0x1Cu
    && llvm::Instruction::isCommutative((llvm::Instruction *)a2))
  {
    if ((v10 & 0x40000000) != 0)
      v15 = *(_QWORD *)(a2 - 8);
    else
      v15 = a2 - 32 * (v10 & 0x7FFFFFF);
    v22 = sub_1C5CC1648(a1, *(_QWORD *)(v15 + 32));
    if (!(_DWORD)v22)
      return 0;
    v23 = v22;
    v24 = (unint64_t *)(v12 + 24);
    if (*(_DWORD *)(v12 + 32) >= 0x41u)
      v24 = (unint64_t *)*v24;
    v25 = *v24;
    v26 = v8;
    v27 = a1;
    v28 = v3;
    goto LABEL_55;
  }
  if ((v10 & 0x40000000) != 0)
    v16 = *(_QWORD **)(a2 - 8);
  else
    v16 = (_QWORD *)(a2 - 32 * (v10 & 0x7FFFFFF));
  v9 = sub_1C5CC1648(a1, *v16);
  if ((_DWORD)v9)
  {
    v17 = *(_DWORD *)(a2 + 20);
    if ((v17 & 0x40000000) != 0)
      v18 = *(_QWORD *)(a2 - 8);
    else
      v18 = a2 - 32 * (v17 & 0x7FFFFFF);
    v19 = *(_QWORD *)(v18 + 32);
    if (!v19 || *(_BYTE *)(v19 + 16) != 16)
    {
      v20 = sub_1C5CC1648(a1, v19);
      if (!(_DWORD)v20)
        return 0;
      v21 = (*(uint64_t (**)(unint64_t *, _QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*a1 + 72))(a1, v8, v8, v3, v9, v20);
      if (!v21)
        return 0;
LABEL_30:
      v9 = 1;
      sub_1C632A598((uint64_t)a1, a2, v21, 1);
      return v9;
    }
    v29 = *(_DWORD *)(v19 + 32);
    if (v29 > 0x40)
      v25 = **(_QWORD **)(v19 + 24);
    else
      v25 = (uint64_t)(*(_QWORD *)(v19 + 24) << -(char)v29) >> -(char)v29;
    if ((_DWORD)v3 == 62)
    {
      v32 = *(unsigned __int8 *)(a2 + 16);
      if (v32 >= 0x1C && v32 - 41 <= 0x11)
      {
        v3 = 62;
        if (v25)
        {
          v33 = (uint8x8_t)vcnt_s8((int8x8_t)v25);
          v33.i16[0] = vaddlv_u8(v33);
          if (v33.u32[0] >= 2uLL)
            v3 = 62;
          else
            v3 = 171;
          v25 = (__PAIR128__(v25, v33.u32[0]) - 2) >> 64;
        }
      }
    }
    else if ((_DWORD)v3 == 59)
    {
      v30 = *(unsigned __int8 *)(a2 + 16);
      if (v30 >= 0x1C && v30 - 41 <= 0x11)
      {
        v3 = 59;
        if (v25)
        {
          if ((*(_BYTE *)(a2 + 17) & 2) != 0)
          {
            v31 = (uint8x8_t)vcnt_s8((int8x8_t)v25);
            v31.i16[0] = vaddlv_u8(v31);
            if (v31.u32[0] <= 1uLL)
            {
              v25 = __clz(v25) ^ 0x3F;
              v3 = 176;
            }
          }
        }
      }
    }
    v26 = v8;
    v27 = a1;
    v28 = v3;
    v23 = v9;
LABEL_55:
    v21 = sub_1C632A824((_QWORD ****)v27, v26, v28, v23, v25, v26);
    if (!v21)
      return 0;
    goto LABEL_30;
  }
  return v9;
}

uint64_t sub_1C5CC528C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  unsigned int v4;
  int v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  BOOL v17;
  _OWORD *v18;
  _OWORD *v19;
  __int128 v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  int v31;
  int v32;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = a4;
  v8 = *(unsigned __int8 *)(a3 + 16);
  if (v8 == 84)
  {
    v9 = 0;
  }
  else if (v8 == 39)
  {
    v9 = (*(_DWORD *)(a3 + 80) + 1);
  }
  else
  {
    v9 = 2;
  }
  v10 = 0;
  v11 = *(_DWORD *)(a3 + 20);
  v12 = -(uint64_t)(v11 & 0x7FFFFFF);
  if (v11 < 0)
  {
    v34 = a3 - 32 * (v11 & 0x7FFFFFF);
    v35 = *(_QWORD *)(v34 - 8);
    if ((v35 & 0xFFFFFFFF0) != 0)
      v10 = *(_DWORD *)(v34 - 12) - *(_DWORD *)(v34 - v35);
    else
      v10 = 0;
  }
  v13 = (-32 * v9 + 32 * (unint64_t)-v10 - 32 * v12 - 32) >> 5;
  v14 = 1;
  if ((_DWORD)v13 != a4)
  {
    while (1)
    {
      v15 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32 * v4);
      v16 = *(unsigned __int8 *)(v15 + 16);
      if (v15)
        v17 = v16 == 16;
      else
        v17 = 0;
      if (v17)
      {
        LODWORD(v36) = 1;
        v37 = 0;
        v38 = 2;
        v21 = (_OWORD *)sub_1C47C0F60(a2, (unint64_t)&v36, 1);
        v22 = (_OWORD *)(*(_QWORD *)a2 + 32 * *(unsigned int *)(a2 + 8));
        v23 = v21[1];
        *v22 = *v21;
        v22[1] = v23;
        ++*(_DWORD *)(a2 + 8);
        v24 = *(_DWORD *)(v15 + 32);
        if (v24 > 0x40)
          v25 = **(_QWORD **)(v15 + 24);
        else
          v25 = (uint64_t)(*(_QWORD *)(v15 + 24) << -(char)v24) >> -(char)v24;
        LODWORD(v36) = 1;
        v37 = 0;
        v38 = v25;
      }
      else if (v16 == 19)
      {
        LODWORD(v36) = 1;
        v37 = 0;
        v38 = 2;
        v18 = (_OWORD *)sub_1C47C0F60(a2, (unint64_t)&v36, 1);
        v19 = (_OWORD *)(*(_QWORD *)a2 + 32 * *(unsigned int *)(a2 + 8));
        v20 = v18[1];
        *v19 = *v18;
        v19[1] = v20;
        ++*(_DWORD *)(a2 + 8);
        LODWORD(v36) = 1;
        v37 = 0;
        v38 = 0;
      }
      else if (v15 && v16 == 59)
      {
        v26 = *(_QWORD *)(a1 + 32);
        v40 = *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32 * v4);
        v36 = 0;
        if ((sub_1C47A82D8(v26 + 176, &v40, &v36) & 1) != 0)
          v27 = v36;
        else
          v27 = *(_QWORD *)(v26 + 176) + 16 * *(unsigned int *)(v26 + 192);
        if (v27 == *(_QWORD *)(*(_QWORD *)(a1 + 32) + 176) + 16 * *(unsigned int *)(*(_QWORD *)(a1 + 32) + 192))
          return 0;
        v32 = *(_DWORD *)(v27 + 8);
        LODWORD(v36) = 5;
        v37 = 0;
        LODWORD(v38) = v32;
      }
      else
      {
        v31 = sub_1C5CC1648(a1, *(_QWORD *)(a3 - 32 * (*(_DWORD *)(a3 + 20) & 0x7FFFFFF) + 32 * v4));
        if (!v31)
          return 0;
        v37 = 0;
        LODWORD(v36) = 0;
        HIDWORD(v36) = v31;
        v38 = 0;
        v39 = 0;
      }
      v28 = (_OWORD *)sub_1C47C0F60(a2, (unint64_t)&v36, 1);
      v29 = (_OWORD *)(*(_QWORD *)a2 + 32 * *(unsigned int *)(a2 + 8));
      v30 = v28[1];
      *v29 = *v28;
      v29[1] = v30;
      ++*(_DWORD *)(a2 + 8);
      if ((_DWORD)v13 == ++v4)
        return 1;
    }
  }
  return v14;
}

void sub_1C5CC5540(uint64_t a1, unint64_t a2)
{
  _BYTE *v2;
  _BYTE *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  __int128 v10;
  __int128 v11;

  v2 = *(_BYTE **)a1;
  if (0xAAAAAAAAAAAAAAABLL * ((uint64_t)(*(_QWORD *)(a1 + 16) - *(_QWORD *)a1) >> 4) < a2)
  {
    if (a2 >= 0x555555555555556)
      abort();
    v4 = *(_BYTE **)(a1 + 8);
    v5 = 3 * a2;
    v6 = (char *)operator new(48 * a2);
    v7 = &v6[48 * ((v4 - v2) / 48)];
    v8 = v7;
    if (v4 != v2)
    {
      v9 = &v6[48 * ((v4 - v2) / 48)];
      do
      {
        v10 = *((_OWORD *)v4 - 3);
        v11 = *((_OWORD *)v4 - 1);
        v8 = v9 - 48;
        *((_OWORD *)v9 - 2) = *((_OWORD *)v4 - 2);
        *((_OWORD *)v9 - 1) = v11;
        *((_OWORD *)v9 - 3) = v10;
        v4 -= 48;
        v9 -= 48;
      }
      while (v4 != v2);
    }
    *(_QWORD *)a1 = v8;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = &v6[16 * v5];
    if (v2)
      operator delete(v2);
  }
}

uint64_t sub_1C5CC562C(uint64_t a1, llvm::EVT ***a2)
{
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  uint64_t **v6;
  char v7;
  int *v8;
  uint64_t **v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  _OWORD *v22;
  llvm::EVT **v23;
  __int128 v24;
  __int128 v25;
  llvm::EVT **v26;
  uint64_t *v27;
  uint64_t *v28;
  int v29;
  int v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  int v34;
  unint64_t v35;
  uint64_t v36;
  unsigned int v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  BOOL v45;
  const char *v46;
  char v47;
  char v48;
  unsigned int v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  llvm::EVT *v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  int v61;
  uint64_t v62;
  uint64_t ***v63;
  llvm::MDNode *MetadataImpl;
  uint64_t *v66;
  uint64_t v67;
  int v68;
  void *v69;
  uint64_t v70;
  _QWORD v71[2];
  BOOL v72;
  void *v73[2];
  _BYTE v74[192];
  char *v75;
  uint64_t v76;
  _QWORD v77[10];

  v3 = a1;
  v77[8] = *MEMORY[0x1E0C80C00];
  *((_DWORD *)a2 + 132) = 0;
  *((_DWORD *)a2 + 184) = 0;
  v75 = (char *)v77;
  v76 = 0x400000000;
  llvm::ComputeValueVTs(*(_QWORD *)(a1 + 104), *(llvm::DataLayout **)(a1 + 88), (uint64_t)*a2, (uint64_t)&v75, 0, 0, 0);
  v4 = 0;
  v73[0] = v74;
  v73[1] = (void *)0x400000000;
  v5 = *((_DWORD *)a2 + 4);
  v6 = (uint64_t **)*a2;
  v69 = v71;
  v70 = 0x200000000;
  v7 = *((_BYTE *)a2 + 8);
  if ((v7 & 1) == 0)
  {
    if (((_BYTE)a2[1] & 2) == 0)
      goto LABEL_3;
LABEL_6:
    *((_DWORD *)v71 + v4++) = 67;
    LODWORD(v70) = v4;
    if ((v7 & 8) == 0)
      goto LABEL_4;
    goto LABEL_7;
  }
  v4 = 1;
  LODWORD(v71[0]) = 48;
  LODWORD(v70) = 1;
  if ((v7 & 2) != 0)
    goto LABEL_6;
LABEL_3:
  if ((v7 & 8) == 0)
  {
LABEL_4:
    v8 = (int *)v71;
    v9 = v6;
    goto LABEL_10;
  }
LABEL_7:
  if (v4 >= 2)
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v69, (uint64_t)v71, 3uLL, 4);
    v10 = v69;
    v4 = v70;
  }
  else
  {
    v10 = v71;
  }
  *((_DWORD *)v10 + v4) = 10;
  v4 = v70 + 1;
  LODWORD(v70) = v70 + 1;
  v9 = (uint64_t **)*a2;
  v8 = (int *)v69;
LABEL_10:
  v11 = llvm::AttributeList::get(*v9, 0, v8, v4);
  if (v69 != v71)
    free(v69);
  llvm::GetReturnInfo(v5, v6, v11, (uint64_t)v73, *(unsigned __int8 **)(v3 + 104), *(llvm::DataLayout **)(v3 + 88));
  if ((*(unsigned int (**)(_QWORD, _QWORD, _QWORD, _QWORD, void **, llvm::EVT *))(**(_QWORD **)(v3 + 104)
                                                                                            + 1856))(*(_QWORD *)(v3 + 104), *((unsigned int *)a2 + 4), *(_QWORD *)(*(_QWORD *)(v3 + 32) + 8), (*((unsigned __int8 *)a2 + 8) >> 2) & 1, v73, **a2))
  {
    v67 = v76;
    if ((_DWORD)v76)
    {
      v12 = 0;
      do
      {
        v13 = (uint64_t *)&v75[16 * v12];
        v14 = *v13;
        v15 = v13[1];
        v16 = sub_1C47A8BD8(*(_QWORD *)(v3 + 104), **a2, *v13, v15);
        v17 = (*(uint64_t (**)(_QWORD, llvm::EVT *, uint64_t, uint64_t, _QWORD))(**(_QWORD **)(v3 + 104) + 584))(*(_QWORD *)(v3 + 104), **a2, v14, v15, 0);
        if (v17)
        {
          v18 = v17;
          do
          {
            v69 = 0;
            LODWORD(v70) = 0;
            BYTE4(v70) = v16;
            v71[0] = v14;
            v71[1] = v15;
            v19 = *((unsigned __int8 *)a2 + 8);
            v72 = (v19 & 0x20) != 0;
            v20 = *((unsigned __int8 *)*a2 + 8);
            if ((v19 & 0xB) != 0 || v20 == 15)
              LODWORD(v69) = (v19 >> 1) & 4 | (__rbit32(v19) >> 30) | ((v20 == 15) << 31);
            v22 = (_OWORD *)sub_1C52B9D4C((uint64_t)(a2 + 65), (unint64_t)&v69, 1);
            v23 = &a2[65][6 * *((unsigned int *)a2 + 132)];
            v25 = v22[1];
            v24 = v22[2];
            *(_OWORD *)v23 = *v22;
            *((_OWORD *)v23 + 1) = v25;
            *((_OWORD *)v23 + 2) = v24;
            ++*((_DWORD *)a2 + 132);
            --v18;
          }
          while (v18);
        }
        ++v12;
      }
      while (v12 != v67);
    }
    *((_DWORD *)a2 + 24) = 0;
    *((_DWORD *)a2 + 60) = 0;
    *((_DWORD *)a2 + 112) = 0;
    v26 = a2[5];
    v66 = (uint64_t *)a2[6];
    if (v26 != (llvm::EVT **)v66)
    {
      v27 = (uint64_t *)(v26 + 5);
      do
      {
        v28 = v27 - 2;
        if ((*(_WORD *)(v27 - 1) & 0x20) != 0)
          v28 = v27;
        v29 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v3 + 104) + 1912))(*(_QWORD *)(v3 + 104), *v28, *((unsigned int *)a2 + 4), (*((unsigned __int8 *)a2 + 8) >> 2) & 1, *(_QWORD *)(v3 + 88));
        v30 = v29;
        v31 = *(v27 - 2);
        v32 = *((unsigned __int16 *)v27 - 4);
        v33 = v32 & 4 | ((unint64_t)(*(_BYTE *)(v31 + 8) == 15) << 31) | v32 & 8 | (v32 >> 1) & 1 | (2 * (v32 & 1)) | (4 * (_DWORD)v32) & 0x1000;
        if ((v32 & 0x800) != 0)
          v33 |= 0x2000uLL;
        v34 = (v32 >> 1) & 0x10;
        if ((v32 & 0x80) != 0)
          v34 = 528;
        v35 = v33 | v34 & 0xFFFF3FFF | (((v32 >> 12) & 3) << 14);
        if ((v32 & 0x100) != 0)
          v36 = v35 & 0xFFFFFBEF | 0x410;
        else
          v36 = v35;
        v37 = *((unsigned __int16 *)v27 - 3);
        v38 = v37 >> 8;
        if ((v32 & 0x1A0) != 0)
        {
          v68 = v29;
          v39 = v3;
          v40 = *(_QWORD *)(v3 + 88);
          v41 = *v27;
          sub_1C4768AD0(v40, *v27);
          v43 = v42;
          v45 = v44 == 1;
          llvm::DataLayout::getAlignment(v40, v41);
          v48 = v47;
          if (v45)
          v3 = v39;
          if (!v38)
            v37 = 63
                - __clz((*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v39 + 104) + 576))(*(_QWORD *)(v39 + 104), *v27, *(_QWORD *)(v39 + 88)));
          v36 |= (((1 << v48) + 0xFFFFFFFFLL + ((unint64_t)(v43 + 7) >> 3)) & -(1 << v48)) << 32;
          v30 = v68;
        }
        else if (!v38)
        {
          llvm::DataLayout::getAlignment(*(_QWORD *)(v3 + 88), v31);
          v37 = v49;
        }
        v50 = v36 & 0xFFFFFFFF00000000;
        v51 = v36 & 0xFFFFFFFFFF87FFFFLL | ((((unint64_t)((v37 << 19) + 0x80000) >> 19) & 0xF) << 19);
        v52 = v50 | v51 & 0xFFFFFFBF | 0x40;
        if ((*(_WORD *)(v27 - 1) & 0x10) != 0)
          v53 = v52;
        else
          v53 = v51;
        if (v30)
          v54 = v53 | 0x20000000;
        else
          v54 = v53;
        llvm::DataLayout::getAlignment(*(_QWORD *)(v3 + 88), *(v27 - 2));
        v56 = v55;
        v57 = (llvm::EVT *)*(v27 - 5);
        v58 = *((unsigned int *)a2 + 24);
        if (v58 >= *((unsigned int *)a2 + 25))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)(a2 + 11), (uint64_t)(a2 + 13), v58 + 1, 8);
          v58 = *((unsigned int *)a2 + 24);
        }
        a2[11][v58] = v57;
        ++*((_DWORD *)a2 + 24);
        sub_1C4860960((uint64_t)(a2 + 29), v54 & 0xFFFFFFFFF07FFFFFLL | ((((unint64_t)((v56 << 23) + 0x800000) >> 23) & 0x1F) << 23), 0);
        v59 = v27 + 1;
        v27 += 6;
      }
      while (v59 != v66);
    }
    if (((*(uint64_t (**)(uint64_t, llvm::EVT ***))(*(_QWORD *)v3 + 40))(v3, a2) & 1) != 0)
    {
      llvm::MachineInstr::setPhysRegsDeadExcept((uint64_t)a2[9], (unsigned int *)a2[91], *((unsigned int *)a2 + 184), *(_QWORD *)(v3 + 112));
      v61 = *((_DWORD *)a2 + 21);
      if (v61)
      {
        v62 = (uint64_t)a2[8];
        if (v62)
          sub_1C632A598(v3, v62, *((_DWORD *)a2 + 20), v61);
      }
      v63 = (uint64_t ***)a2[8];
      if (v63 && (v63[6] || (*((_BYTE *)v63 + 23) & 0x20) != 0))
      {
        MetadataImpl = (llvm::MDNode *)llvm::Instruction::getMetadataImpl(v63, "heapallocsite", 0xDuLL);
        if (MetadataImpl)
          llvm::MachineInstr::setHeapAllocMarker((uint64_t)a2[9], *(llvm::MachineFunction **)(v3 + 40), MetadataImpl);
      }
      v60 = 1;
    }
    else
    {
      v60 = 0;
    }
  }
  else
  {
    v60 = 0;
  }
  if (v73[0] != v74)
    free(v73[0]);
  if (v75 != (char *)v77)
    free(v75);
  return v60;
}

uint64_t sub_1C5CC5C80(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int v7;
  uint64_t **v8;
  unsigned __int8 v9;
  unsigned __int8 v10;
  uint64_t v11;
  uint64_t v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  int v17;

  v6 = a1[13];
  v7 = *(_DWORD *)(a2 + 20);
  if ((v7 & 0x40000000) != 0)
    v8 = *(uint64_t ***)(a2 - 8);
  else
    v8 = (uint64_t **)(a2 - 32 * (v7 & 0x7FFFFFF));
  v9 = sub_1C47A7FD0(v6, a1[11], **v8, 0);
  v10 = sub_1C47A7FD0(a1[13], a1[11], *(_QWORD *)a2, 0);
  v11 = 0;
  if ((v9 & 0xFE) != 0 && (v10 & 0xFE) != 0)
  {
    v11 = v10;
    if (v10)
    {
      v13 = a1[13];
      if (*(_QWORD *)(v13 + 8 * v10 + 96)
        && v9
        && *(_QWORD *)(v13 + 8 * v9 + 96)
        && ((v14 = *(_DWORD *)(a2 + 20), (v14 & 0x40000000) != 0)
          ? (v15 = *(_QWORD **)(a2 - 8))
          : (v15 = (_QWORD *)(a2 - 32 * (v14 & 0x7FFFFFF))),
            (v16 = sub_1C5CC1648(a1, *v15), (_DWORD)v16)
         && (v17 = (*(uint64_t (**)(uint64_t *, _QWORD, uint64_t, uint64_t, uint64_t))(*a1 + 64))(a1, v9, v11, a3, v16)) != 0))
      {
        v11 = 1;
        sub_1C632A598((uint64_t)a1, a2, v17, 1);
      }
      else
      {
        return 0;
      }
    }
  }
  return v11;
}

_QWORD *sub_1C5CC5DB0(_QWORD *result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  llvm::MachineInstr *v4;
  uint64_t i;
  uint64_t v6;

  if (result[17] != a2)
  {
    if (a2)
    {
      v6 = a2;
      if ((*(_BYTE *)a2 & 4) == 0)
      {
        v6 = a2;
        if ((*(_WORD *)(a2 + 44) & 8) != 0)
        {
          v6 = a2;
          do
            v6 = *(_QWORD *)(v6 + 8);
          while ((*(_WORD *)(v6 + 44) & 8) != 0);
        }
      }
      v4 = *(llvm::MachineInstr **)(v6 + 8);
      v2 = result[4];
    }
    else
    {
      v2 = result[4];
      v3 = *(_QWORD *)(v2 + 640);
      v4 = (llvm::MachineInstr *)(v3 + 48);
      for (i = *(_QWORD *)(v3 + 56); (llvm::MachineInstr *)i != v4; i = *(_QWORD *)(i + 8))
      {
        if (**(_WORD **)(i + 16) && **(_WORD **)(i + 16) != 69)
        {
          v4 = (llvm::MachineInstr *)i;
          break;
        }
      }
    }
    result[17] = a2;
    result[18] = a2;
    return (_QWORD *)sub_1C632A774(result, v4, *(llvm::MachineInstr **)(v2 + 648));
  }
  return result;
}

uint64_t sub_1C5CC5E40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  unsigned int v12;
  unsigned __int8 **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 v22;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  BOOL v30;
  unsigned __int8 **v31;
  unsigned __int8 *v33;
  int v34;
  uint64_t v35;
  _QWORD *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _DWORD *v41;
  unint64_t v42;
  _DWORD *v43;
  uint64_t v44;
  _DWORD *v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  uint64_t v56;
  unsigned __int8 *v57;
  char v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void **v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unsigned int v68;
  BOOL v69;
  uint64_t v70;
  int v72;
  unsigned __int8 **v73;
  unsigned __int8 **v74;
  unsigned __int8 *v75;
  uint64_t ***v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t ****v82;
  uint64_t ***v83;
  int v84;
  int v85;
  uint64_t result;
  llvm::MachineInstr *v87;
  llvm::MachineInstr *v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unsigned __int8 *v93;
  llvm::MachineInstr *v94;
  llvm::MachineInstr *v95;
  unsigned __int8 *v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unsigned __int8 **v108;
  int v109;
  uint64_t v110;
  unsigned __int8 *v111;
  uint64_t Successor;
  unsigned __int8 *v113;
  unsigned __int8 *v114;
  uint64_t v115;
  int v116;
  _BYTE v117[32];

  v3 = a1;
  sub_1C5CC1364(a1);
  v4 = *(_QWORD *)(v3 + 136);
  v5 = *(unsigned __int8 *)(a2 + 16);
  if ((v5 - 29) > 0xA)
    goto LABEL_117;
  v6 = *(_QWORD *)(a2 + 40);
  v7 = *(_QWORD *)(v6 + 40);
  if (v7 == v6 + 40)
  {
    v9 = 0;
  }
  else
  {
    if (v7)
      v8 = v7 - 24;
    else
      v8 = 0;
    if (*(unsigned __int8 *)(v8 + 16) - 29 >= 0xB)
      v9 = 0;
    else
      v9 = v8;
  }
  v113 = v117;
  v114 = v117;
  v115 = 4;
  v116 = 0;
  *(_DWORD *)(*(_QWORD *)(v3 + 32) + 768) = (*(_QWORD *)(*(_QWORD *)(v3 + 32) + 752)
                                             - *(_QWORD *)(*(_QWORD *)(v3 + 32) + 744)) >> 4;
  v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 != 30)
    __asm { BR              X10 }
  if ((*(_DWORD *)(v9 + 20) & 0x7FFFFFF) == 3)
    v11 = 2;
  else
    v11 = 1;
  v103 = a2;
  v104 = v4;
  v12 = 0;
  v13 = (unsigned __int8 **)(v3 + 72);
  while (1)
  {
    Successor = 0;
    Successor = llvm::Instruction::getSuccessor((llvm::Instruction *)v9, v12);
    v14 = *(_QWORD *)(Successor + 48);
    v15 = v14 ? v14 - 24 : 0;
    if (*(_BYTE *)(v15 + 16) == 83)
    {
      v16 = sub_1C61294C8((_DWORD *)(*(_QWORD *)(v3 + 32) + 56), &Successor)[1];
      sub_1C4774094((llvm::SmallPtrSetImplBase *)&v113, v16);
      if (v17)
      {
        if (*(_QWORD *)(Successor + 40) != Successor + 40)
        {
          v18 = *(_QWORD *)(Successor + 48);
          v19 = v18 - 24;
          v20 = v18 ? v18 - 24 : 0;
          if (v18 && *(_BYTE *)(v20 + 16) == 83)
            break;
        }
      }
    }
LABEL_19:
    if (++v12 == v11)
    {
      v58 = 1;
      a2 = v103;
      v4 = v104;
      goto LABEL_113;
    }
  }
  v21 = *(_QWORD *)(v16 + 56);
  v105 = v9;
  v106 = v6;
  v109 = v11;
  v108 = v13;
  while (1)
  {
    if (!*(_QWORD *)(v19 + 8))
      goto LABEL_91;
    v110 = v21;
    v22 = sub_1C47A7FD0(*(_QWORD *)(v3 + 104), *(_QWORD *)(v3 + 88), *(_QWORD *)v19, (llvm::Type *)1);
    if (v22 == 1)
      goto LABEL_102;
    if (v22)
      break;
    if (v22 != 2)
      goto LABEL_38;
LABEL_39:
    v24 = *(_DWORD *)(v19 + 20);
    v25 = v24 & 0x7FFFFFF;
    if ((v24 & 0x7FFFFFF) != 0)
    {
      v26 = 0;
      while (1)
      {
        v27 = v19 - 32 * v25;
        if ((v24 & 0x40000000) != 0)
          v27 = *(_QWORD *)(v19 - 8);
        if (*(_QWORD *)(v27 + 32 * *(unsigned int *)(v19 + 60) + 8 * v26) == v6)
          break;
        if (v25 == ++v26)
          goto LABEL_45;
      }
    }
    else
    {
LABEL_45:
      LODWORD(v26) = -1;
    }
    if ((v24 & 0x40000000) != 0)
      v28 = *(_QWORD *)(v19 - 8);
    else
      v28 = v19 - 32 * v25;
    v29 = *(_QWORD *)(v28 + 32 * v26);
    v111 = 0;
    if (&v111 != v13)
    {
      if (*v13)
      {
        llvm::MetadataTracking::untrack((uint64_t)v13, *v13);
        v55 = v111;
        *v13 = v111;
        if (v55)
          llvm::MetadataTracking::retrack((uint64_t)&v111, v55, (uint64_t)v13);
      }
      else
      {
        *v13 = 0;
      }
    }
    v30 = *(unsigned __int8 *)(v29 + 16) < 0x1Cu || v29 == 0;
    v31 = (unsigned __int8 **)(v29 + 48);
    if (!v30 && v31 != v13)
    {
      if (*v13)
        llvm::MetadataTracking::untrack((uint64_t)v13, *v13);
      v33 = *v31;
      *v13 = *v31;
      if (v33)
        llvm::MetadataTracking::track((uint64_t)v13, v33, 2);
    }
    v34 = sub_1C5CC1648((uint64_t *)v3, v29);
    v35 = *(_QWORD *)(v3 + 32);
    v36 = (_QWORD *)(v35 + 744);
    if (!v34)
    {
      v65 = *(unsigned int *)(v35 + 768);
      v66 = *(_QWORD *)(v35 + 744);
      v67 = (*(_QWORD *)(v35 + 752) - v66) >> 4;
      if (v65 > v67)
      {
        v64 = v65 - v67;
        v63 = (void **)(v35 + 744);
        goto LABEL_106;
      }
      a2 = v103;
      v4 = v104;
      if (v65 < v67)
        *(_QWORD *)(v35 + 752) = v66 + 16 * v65;
      goto LABEL_112;
    }
    v37 = v34;
    v38 = v110;
    if (!v110 || (v39 = v110, (*(_BYTE *)v110 & 4) == 0))
    {
      v39 = v110;
      if ((*(_WORD *)(v110 + 44) & 8) != 0)
      {
        v39 = v110;
        do
          v39 = *(_QWORD *)(v39 + 8);
        while ((*(_WORD *)(v39 + 44) & 8) != 0);
      }
    }
    v40 = *(_QWORD *)(v39 + 8);
    v41 = *(_DWORD **)(v35 + 752);
    v42 = *(_QWORD *)(v35 + 760);
    if ((unint64_t)v41 >= v42)
    {
      v44 = v3;
      v45 = (_DWORD *)*v36;
      v46 = ((uint64_t)v41 - *v36) >> 4;
      v47 = v46 + 1;
      if ((unint64_t)(v46 + 1) >> 60)
        abort();
      v48 = v42 - (_QWORD)v45;
      if (v48 >> 3 > v47)
        v47 = v48 >> 3;
      if ((unint64_t)v48 >= 0x7FFFFFFFFFFFFFF0)
        v49 = 0xFFFFFFFFFFFFFFFLL;
      else
        v49 = v47;
      v107 = v40;
      if (v49)
      {
        if (v49 >> 60)
          sub_1C4764EE4();
        v50 = (char *)operator new(16 * v49);
        v38 = v110;
      }
      else
      {
        v50 = 0;
      }
      v51 = &v50[16 * v46];
      *(_QWORD *)v51 = v38;
      *((_DWORD *)v51 + 2) = v37;
      v52 = v51;
      v3 = v44;
      if (v41 == v45)
      {
        v9 = v105;
      }
      else
      {
        do
        {
          *((_OWORD *)v52 - 1) = *((_OWORD *)v41 - 1);
          v52 -= 16;
          v41 -= 4;
        }
        while (v41 != v45);
        v41 = (_DWORD *)*v36;
        v9 = v105;
      }
      *(_QWORD *)(v35 + 744) = v52;
      v43 = v51 + 16;
      *(_QWORD *)(v35 + 752) = v51 + 16;
      *(_QWORD *)(v35 + 760) = &v50[16 * v49];
      if (v41)
        operator delete(v41);
      v6 = v106;
      v40 = v107;
    }
    else
    {
      *(_QWORD *)v41 = v110;
      v41[2] = v34;
      v43 = v41 + 4;
    }
    *(_QWORD *)(v35 + 752) = v43;
    v111 = 0;
    v13 = v108;
    v11 = v109;
    if (&v111 != v108)
    {
      if (*v108)
      {
        v56 = v40;
        llvm::MetadataTracking::untrack((uint64_t)v108, *v108);
        v40 = v56;
        v57 = v111;
        *v108 = v111;
        if (v57)
        {
          llvm::MetadataTracking::retrack((uint64_t)&v111, v57, (uint64_t)v108);
          v40 = v56;
        }
      }
      else
      {
        *v108 = 0;
      }
    }
    v21 = v40;
LABEL_91:
    v53 = *(_QWORD *)(v19 + 32);
    v19 = v53 - 24;
    if (v53)
      v54 = v53 - 24;
    else
      v54 = 0;
    if (!v53 || *(_BYTE *)(v54 + 16) != 83)
      goto LABEL_19;
  }
  if (v22 == 2 || *(_QWORD *)(*(_QWORD *)(v3 + 104) + 8 * v22 + 96) != 0)
    goto LABEL_39;
LABEL_38:
  if (v22 - 3 < 2)
    goto LABEL_39;
LABEL_102:
  v59 = *(_QWORD *)(v3 + 32);
  v60 = *(unsigned int *)(v59 + 768);
  v61 = *(_QWORD *)(v59 + 744);
  v62 = (*(_QWORD *)(v59 + 752) - v61) >> 4;
  if (v60 > v62)
  {
    v63 = (void **)(v59 + 744);
    v64 = v60 - v62;
LABEL_106:
    sub_1C504CF50(v63, v64);
    a2 = v103;
    v4 = v104;
    goto LABEL_112;
  }
  a2 = v103;
  v4 = v104;
  if (v60 < v62)
    *(_QWORD *)(v59 + 752) = v61 + 16 * v60;
LABEL_112:
  v58 = 0;
LABEL_113:
  if (v114 != v113)
    free(v114);
  if ((v58 & 1) == 0)
  {
    sub_1C5CC5DB0((_QWORD *)v3, v4);
    return 0;
  }
  v5 = *(unsigned __int8 *)(a2 + 16);
LABEL_117:
  v68 = v5 - 33;
  v69 = v68 > 0x33;
  v70 = (1 << v68) & 0x8000000000041;
  if (!v69 && v70 != 0)
  {
    v72 = *(_DWORD *)(a2 + 20);
    if (v72 < 0)
    {
      v97 = a2 - 32 * (v72 & 0x7FFFFFF);
      v100 = *(_QWORD *)(v97 - 8);
      v98 = v97 - 8;
      v99 = v100;
      if ((v100 & 0xFFFFFFFF0) != 0)
      {
        v101 = v98 - v99;
        v102 = (v99 >> 4);
        while (*(_DWORD *)(*(_QWORD *)v101 + 8) == 1)
        {
          v101 += 16;
          if (!--v102)
            goto LABEL_122;
        }
        return 0;
      }
    }
  }
LABEL_122:
  v73 = (unsigned __int8 **)(a2 + 48);
  v74 = (unsigned __int8 **)(v3 + 72);
  if (a2 + 48 != v3 + 72)
  {
    if (*v74)
      llvm::MetadataTracking::untrack(v3 + 72, *v74);
    v75 = *v73;
    *v74 = *v73;
    if (v75)
      llvm::MetadataTracking::track(v3 + 72, v75, 2);
  }
  *(_QWORD *)(v3 + 152) = *(_QWORD *)(*(_QWORD *)(v3 + 32) + 648);
  if (*(_BYTE *)(a2 + 16) == 84)
  {
    v76 = *(uint64_t ****)(a2 - 32);
    if (v76)
    {
      if (!*((_BYTE *)v76 + 16) && v76[3] == *(uint64_t ***)(a2 + 72))
      {
        LODWORD(v113) = 0;
        if (((_DWORD)v76[4] & 0xFu) - 7 >= 2 && (*((_BYTE *)v76 + 23) & 0x10) != 0)
        {
          v77 = *(_QWORD **)(v3 + 120);
          v78 = ***v76;
          v79 = *(_QWORD *)(v78 + 152);
          v80 = *(unsigned int *)(v78 + 168);
          if (!(_DWORD)v80)
            goto LABEL_141;
          LODWORD(v81) = (v80 - 1) & ((v76 >> 4) ^ (v76 >> 9));
          v82 = (uint64_t ****)(v79 + 16 * v81);
          v83 = *v82;
          if (*v82 != v76)
          {
            v84 = 1;
            while (v83 != (uint64_t ***)-4096)
            {
              v85 = v81 + v84++;
              v81 = v85 & (v80 - 1);
              v83 = *(uint64_t ****)(v79 + 16 * v81);
              if (v83 == v76)
              {
                v82 = (uint64_t ****)(v79 + 16 * v81);
                goto LABEL_142;
              }
            }
LABEL_141:
            v82 = (uint64_t ****)(v79 + 16 * v80);
          }
LABEL_142:
          if (llvm::TargetLibraryInfoImpl::getLibFunc(*v77, (_BYTE *)v82[1] + 16, (size_t)*v82[1], &v113)
            && (sub_1C632B1A8(v77, (int)v113) & 1) != 0)
          {
            return 0;
          }
        }
        if (*((_DWORD *)v76 + 9) == 295
          && ((llvm::AttributeList::hasFnAttr((uint64_t *)(a2 + 64), "trap-func-name", 0xEuLL) & 1) != 0
           || (llvm::CallBase::hasFnAttrOnCalledFunction(a2, "trap-func-name", 0xEuLL) & 1) != 0))
        {
          return 0;
        }
      }
    }
  }
  if (!*(_BYTE *)(v3 + 128))
  {
    if (!sub_1C5CC1CF8((_QWORD *)v3, a2, *(unsigned __int8 *)(a2 + 16) - 28))
    {
      sub_1C632A368(v3);
      v94 = *(llvm::MachineInstr **)(v3 + 152);
      v95 = *(llvm::MachineInstr **)(*(_QWORD *)(v3 + 32) + 648);
      if (v94 != v95)
      {
        sub_1C632A774((_QWORD *)v3, v95, v94);
        v95 = *(llvm::MachineInstr **)(*(_QWORD *)(v3 + 32) + 648);
      }
      *(_QWORD *)(v3 + 152) = v95;
      goto LABEL_147;
    }
    goto LABEL_157;
  }
LABEL_147:
  if ((*(unsigned int (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 24))(v3, a2))
  {
LABEL_157:
    v113 = 0;
    if (&v113 != v74)
    {
      if (*v74)
      {
        llvm::MetadataTracking::untrack(v3 + 72, *v74);
        v93 = v113;
        *v74 = v113;
        if (v93)
          llvm::MetadataTracking::retrack((uint64_t)&v113, v93, v3 + 72);
      }
      else
      {
        *v74 = 0;
      }
    }
    return 1;
  }
  sub_1C632A368(v3);
  v87 = *(llvm::MachineInstr **)(v3 + 152);
  v88 = *(llvm::MachineInstr **)(*(_QWORD *)(v3 + 32) + 648);
  if (v87 != v88)
    sub_1C632A774((_QWORD *)v3, v88, v87);
  v113 = 0;
  if (&v113 != v74)
  {
    if (*v74)
    {
      llvm::MetadataTracking::untrack(v3 + 72, *v74);
      v96 = v113;
      *v74 = v113;
      if (v96)
        llvm::MetadataTracking::retrack((uint64_t)&v113, v96, v3 + 72);
    }
    else
    {
      *v74 = 0;
    }
  }
  if (*(unsigned __int8 *)(a2 + 16) - 29 > 0xA)
    return 0;
  sub_1C5CC5DB0((_QWORD *)v3, v4);
  v89 = *(_QWORD *)(v3 + 32);
  v90 = *(unsigned int *)(v89 + 768);
  v91 = *(_QWORD *)(v89 + 744);
  v92 = (*(_QWORD *)(v89 + 752) - v91) >> 4;
  if (v90 > v92)
  {
    sub_1C504CF50((void **)(v89 + 744), v90 - v92);
    return 0;
  }
  if (v90 >= v92)
    return 0;
  result = 0;
  *(_QWORD *)(v89 + 752) = v91 + 16 * v90;
  return result;
}

void sub_1C5CC6754()
{
  JUMPOUT(0x1C5CC6384);
}

void sub_1C5CC6764()
{
  JUMPOUT(0x1C5CC6384);
}

void sub_1C5CC6770()
{
  JUMPOUT(0x1C5CC5F0CLL);
}

void sub_1C5CC6778()
{
  JUMPOUT(0x1C5CC6384);
}

uint64_t sub_1C5CC6784(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v4 = *(_QWORD *)(a2 + 8);
  v5 = -6;
  while (1)
  {
    v6 = *(_QWORD *)(v4 + 24);
    if (v6 == a3)
      break;
    if (*(_QWORD *)(v6 + 40) == *(_QWORD *)(a3 + 40) && !__CFADD__(v5++, 1))
    {
      v4 = *(_QWORD *)(v6 + 8);
      if (v4)
      {
        if (!*(_QWORD *)(v4 + 8))
          continue;
      }
    }
    return 0;
  }
  if ((*(_WORD *)(a2 + 18) & 1) != 0)
    return 0;
  v8 = sub_1C5CC1648(a1, a2);
  if (!v8)
    return 0;
  v9 = v8;
  v10 = a1[6];
  v11 = v8;
  v12 = (uint64_t *)((v8 & 0x80000000) != 0
                  ? *(_QWORD *)(v10 + 24) + 16 * (v8 & 0x7FFFFFFF) + 8
                  : *(_QWORD *)(v10 + 272) + 8 * v8);
  v13 = *v12;
  if (!v13)
    return 0;
  while ((*(_BYTE *)(v13 + 3) & 1) != 0)
  {
    v13 = *(_QWORD *)(v13 + 24);
    if (!v13)
      return 0;
  }
  while (1)
  {
    v13 = *(_QWORD *)(v13 + 24);
    if (!v13)
      break;
    if ((*(_BYTE *)(v13 + 3) & 1) == 0)
      return 0;
  }
  v15 = a1[4];
  v16 = *(_QWORD *)(v15 + 400);
  v17 = *(unsigned int *)(v15 + 416);
  if ((int *)(v16 + 4 * v17) != sub_1C632B7AC(v16, *(_DWORD *)(v15 + 416), v8))
    return 0;
  if ((v9 & 0x80000000) != 0)
    v18 = *(_QWORD *)(v10 + 24) + 16 * (v11 & 0x7FFFFFFF) + 8;
  else
    v18 = *(_QWORD *)(v10 + 272) + 8 * v11;
  v19 = *(_QWORD *)(*(_QWORD *)v18 + 8);
  *(_QWORD *)(v15 + 648) = v19;
  *(_QWORD *)(a1[4] + 640) = *(_QWORD *)(v19 + 24);
  return (*(uint64_t (**)(uint64_t *))(*a1 + 16))(a1);
}

_DWORD *sub_1C5CC6908(uint64_t a1, uint64_t a2, int *a3)
{
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  _DWORD *result;
  int v10;
  char v11;
  _DWORD *v12;
  int v13;
  BOOL v14;
  unsigned int v15;
  _DWORD *v16;

  v6 = *(_DWORD *)(a2 + 16);
  if (!v6)
  {
    v16 = 0;
LABEL_17:
    result = sub_1C4978C80(a2, (uint64_t)a3, a3, v16);
    *result = *a3;
    v7 = *(_QWORD *)a2;
    v6 = *(_DWORD *)(a2 + 16);
    v11 = 1;
    goto LABEL_4;
  }
  v7 = *(_QWORD *)a2;
  v8 = (37 * *a3) & (v6 - 1);
  result = (_DWORD *)(*(_QWORD *)a2 + 4 * v8);
  v10 = *result;
  if (*a3 != *result)
  {
    v12 = 0;
    v13 = 1;
    while (v10 != -1)
    {
      if (v12)
        v14 = 0;
      else
        v14 = v10 == -2;
      if (v14)
        v12 = result;
      v15 = v8 + v13++;
      v8 = v15 & (v6 - 1);
      result = (_DWORD *)(v7 + 4 * v8);
      v10 = *result;
      if (*a3 == *result)
        goto LABEL_3;
    }
    if (v12)
      v16 = v12;
    else
      v16 = result;
    goto LABEL_17;
  }
LABEL_3:
  v11 = 0;
LABEL_4:
  *(_QWORD *)a1 = result;
  *(_QWORD *)(a1 + 8) = v7 + 4 * v6;
  *(_BYTE *)(a1 + 16) = v11;
  return result;
}

_OWORD *sub_1C5CC69EC(void **a1, _OWORD *a2)
{
  char *v2;
  char *v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v8;
  char *v9;
  char *v10;
  __int128 v11;
  _OWORD *v12;
  __int128 v13;
  __int128 v14;

  v3 = (char *)*a1;
  v2 = (char *)a1[1];
  v4 = 0xAAAAAAAAAAAAAAABLL * ((v2 - (_BYTE *)*a1) >> 4);
  v5 = v4 + 1;
  if (v4 + 1 > 0x555555555555555)
    abort();
  if (0x5555555555555556 * (((_BYTE *)a1[2] - v3) >> 4) > v5)
    v5 = 0x5555555555555556 * (((_BYTE *)a1[2] - v3) >> 4);
  if (0xAAAAAAAAAAAAAAABLL * (((_BYTE *)a1[2] - v3) >> 4) >= 0x2AAAAAAAAAAAAAALL)
    v8 = 0x555555555555555;
  else
    v8 = v5;
  if (v8)
  {
    if (v8 > 0x555555555555555)
      sub_1C4764EE4();
    v9 = (char *)operator new(48 * v8);
  }
  else
  {
    v9 = 0;
  }
  v10 = &v9[48 * v4];
  v11 = a2[1];
  *(_OWORD *)v10 = *a2;
  *((_OWORD *)v10 + 1) = v11;
  *((_OWORD *)v10 + 2) = a2[2];
  v12 = v10 + 48;
  if (v2 != v3)
  {
    do
    {
      v13 = *((_OWORD *)v2 - 3);
      v14 = *((_OWORD *)v2 - 1);
      *((_OWORD *)v10 - 2) = *((_OWORD *)v2 - 2);
      *((_OWORD *)v10 - 1) = v14;
      *((_OWORD *)v10 - 3) = v13;
      v10 -= 48;
      v2 -= 48;
    }
    while (v2 != v3);
    v2 = (char *)*a1;
  }
  *a1 = v10;
  a1[1] = v12;
  a1[2] = &v9[48 * v8];
  if (v2)
    operator delete(v2);
  return v12;
}

void sub_1C5CC6B04(uint64_t **a1, uint64_t *a2, uint64_t *a3, uint64_t a4)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  const llvm::Value *v10;
  char v11;
  llvm::Value *v12;
  _QWORD **v13;
  int v14;
  llvm::Value **v15;
  unsigned int v16;
  llvm::WinEHFuncInfo *v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  _QWORD **v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 v38;
  unsigned int v39;
  __int16 v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  BOOL v48;
  unsigned __int8 v49;
  int v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char v55;
  BOOL v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char v65;
  _QWORD *v66;
  unint64_t v67;
  uint64_t v68;
  unsigned __int8 *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unsigned __int8 *v73;
  int FixedObject;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  _DWORD **v78;
  unint64_t v79;
  uint64_t v80;
  unint64_t v81;
  _DWORD *v82;
  uint64_t v83;
  unsigned int v84;
  int v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  BOOL v90;
  int v92;
  int v93;
  int v94;
  int v95;
  _QWORD **v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int v104;
  uint64_t v105;
  uint64_t v107;
  int v108;
  uint64_t v109;
  unint64_t v110;
  unint64_t *v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  int v115;
  unsigned int v116;
  _QWORD *v117;
  uint64_t v118;
  _QWORD *v119;
  int v120;
  BOOL v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  llvm::Type **v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  unsigned int v130;
  uint64_t v131;
  _QWORD *v133;
  uint64_t v134;
  uint64_t v135;
  unsigned __int8 *v136;
  int v137;
  uint64_t *v138;
  int v139;
  uint64_t v140;
  uint64_t v141;
  int i;
  uint64_t v143;
  llvm::MachineFunction *v144;
  unint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  void *v167;
  int v168;
  uint64_t v169;
  int v170;
  unsigned int v171;
  _QWORD *v172;
  void *v173;
  _QWORD *v174;
  int v175;
  BOOL v176;
  unsigned int v177;
  _QWORD *v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;
  void *v183;
  int v184;
  uint64_t v185;
  int v186;
  unsigned int v187;
  _QWORD *v188;
  void *v189;
  _QWORD *v190;
  int v191;
  BOOL v192;
  unsigned int v193;
  _QWORD *v194;
  uint64_t v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  _QWORD *v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  _QWORD *v214;
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  uint64_t v218;
  _QWORD *v219;
  _DWORD *v220;
  void **v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  unint64_t *v226;
  unint64_t *v227;
  unint64_t v228;
  _QWORD *v229;
  unint64_t v230;
  int v231;
  uint64_t v232;
  int v233;
  unsigned int v234;
  _QWORD *v235;
  uint64_t v236;
  _QWORD *v237;
  int v238;
  BOOL v239;
  unsigned int v240;
  unint64_t *v241;
  unint64_t v242;
  _QWORD *v243;
  _QWORD *v244;
  _DWORD *v245;
  int v246;
  unsigned int v247;
  _QWORD **v248;
  uint64_t *v249;
  uint64_t *v250;
  _DWORD *v251;
  llvm::Type **v252;
  uint64_t v253;
  unsigned __int8 *v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t *v257;
  char *v258;
  uint64_t v259;
  unsigned int *v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t *v263;
  uint64_t v264;
  unint64_t v265;
  unsigned __int8 *v266;
  uint64_t v267;
  int v268;
  unsigned __int8 *v269;
  _QWORD v270[2];
  unsigned int v271;
  __int128 v272;
  uint64_t v273;
  uint64_t v274;
  void *v275;
  uint64_t v276;
  uint64_t v277;
  int v278;
  _BYTE v279[48];
  void *v280[2];
  _QWORD v281[26];

  v7 = a1;
  v281[24] = *MEMORY[0x1E0C80C00];
  *a1 = a2;
  a1[1] = a3;
  a1[2] = (uint64_t *)(*(uint64_t (**)(uint64_t))(*(_QWORD *)a3[2] + 120))(a3[2]);
  v8 = v7[1];
  v7[3] = *(_QWORD *)(v8 + 40);
  v254 = (unsigned __int8 *)(*(uint64_t (**)(_QWORD))(**(_QWORD **)(v8 + 16) + 112))(*(_QWORD *)(v8 + 16));
  v7[5] = *(_QWORD *)(a4 + 72);
  v280[0] = v281;
  v280[1] = (void *)0x400000000;
  v9 = (*(unsigned __int16 *)(*v7 + 18) >> 4) & 0x3FF;
  llvm::GetReturnInfo((*(unsigned __int16 *)(*v7 + 18) >> 4) & 0x3FF, **(_QWORD ***)(*(_QWORD *)(*v7 + 24) + 16), *(_QWORD *)(*v7 + 112), (uint64_t)v280, (unsigned __int8 *)v7[2], (llvm::DataLayout *)(*(_QWORD *)(*a3 + 40) + 272));
  v11 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, BOOL, void **, _QWORD))(*(_QWORD *)v7[2] + 1856))(v7[2], v9, v7[1], *(_DWORD *)(*(_QWORD *)(*v7 + 24) + 8) > 0xFFu, v280, **(_QWORD **)*v7);
  v12 = 0;
  *((_BYTE *)v7 + 48) = v11;
  v270[0] = 0;
  v270[1] = 0;
  v271 = 0;
  v13 = (_QWORD **)*v7;
  if ((*(_BYTE *)(*v7 + 18) & 8) != 0)
  {
    v14 = *((_DWORD *)v13 + 5);
    if ((v14 & 0x40000000) != 0)
      v15 = (llvm::Value **)*(v13 - 1);
    else
      v15 = (llvm::Value **)&v13[-4 * (v14 & 0x7FFFFFF)];
    v12 = *v15;
  }
  v250 = a3;
  v16 = llvm::classifyEHPersonality(v12, v10);
  v18 = v16;
  v247 = v16 - 7;
  if (v16 - 7 <= 3)
  {
    v19 = v7[1];
    v20 = *(_QWORD *)(v19 + 96);
    if (v16 == 9)
    {
      llvm::calculateWinCXXEHStateNumbers(a2, *(const llvm::Function **)(v19 + 96), v17);
    }
    else if (v247 <= 1)
    {
      llvm::calculateSEHStateNumbers(a2, (const llvm::Function *)v20, v17);
    }
    else if (v16 == 10)
    {
      llvm::calculateClrEHStateNumbers((llvm *)a2, (const llvm::Function *)v20, v17);
    }
    v21 = *(unsigned int *)(v20 + 184);
    if (!(_DWORD)v21)
      goto LABEL_23;
    v22 = *(_QWORD *)(v20 + 176);
    v23 = v22 + (v21 << 6);
    do
    {
      v24 = *(unsigned int *)(v22 + 24);
      if ((_DWORD)v24)
      {
        v25 = 32 * v24;
        v26 = (uint64_t *)(*(_QWORD *)(v22 + 16) + 8);
        do
        {
          v27 = *v26;
          if (*v26)
          {
            v266 = 0;
            *(_QWORD *)&v272 = v27;
            sub_1C632BC0C((uint64_t *)&v272 + 1, 0);
            sub_1C632BE8C((uint64_t)&v275, (uint64_t)v270, (uint64_t *)&v272, (_QWORD *)&v272 + 1);
            sub_1C6285820((uint64_t)v275 + 8, (uint64_t)v26);
            sub_1C6286C70((uint64_t *)&v272 + 1);
            sub_1C6286C70((uint64_t *)&v266);
          }
          else
          {
            *(_DWORD *)v26 = 0x7FFFFFFF;
          }
          v26 += 4;
          v25 -= 32;
        }
        while (v25);
      }
      v22 += 64;
    }
    while (v22 != v23);
  }
  if (v18 == 12)
  {
    llvm::calculateWasmEHInfo(a2, *(_QWORD *)(v7[1] + 88));
    v246 = 1;
    goto LABEL_24;
  }
LABEL_23:
  v246 = 0;
LABEL_24:
  v28 = (_QWORD **)*v7;
  v29 = *v7 + 72;
  v30 = *(_QWORD *)(*v7 + 80);
  v261 = (uint64_t)v7;
  if (v30 != v29)
  {
    LODWORD(v259) = v254[12];
    v251 = v7 + 22;
    v255 = *v7 + 72;
    v257 = v7 + 82;
    do
    {
      v31 = v30 - 24;
      if (!v30)
        v31 = 0;
      v32 = v31 + 40;
      v33 = *(_QWORD *)(v31 + 48);
      v262 = v31 + 40;
      if (v33 != v31 + 40)
      {
        do
        {
          if (v33)
            v34 = v33 - 24;
          else
            v34 = 0;
          v35 = *(unsigned __int8 *)(v34 + 16);
          if (v35 == 59)
            v36 = v34;
          else
            v36 = 0;
          v266 = (unsigned __int8 *)v36;
          if (v33 && v35 == 59)
          {
            v37 = *(_QWORD *)(v36 + 64);
            llvm::DataLayout::getAlignment(*(_QWORD *)(*(_QWORD *)v7[1] + 40) + 272, v37);
            v39 = v38;
            v40 = *((_WORD *)v266 + 9);
            v41 = __clz(1 << v40) ^ 0x3F;
            if (v259 < v38)
              v39 = v259;
            if (v39 <= v41)
              v42 = v41;
            else
              v42 = v39;
            v43 = *((_QWORD *)v266 - 4);
            if (*(_BYTE *)(v43 + 16) == 16)
            {
              v44 = *((_QWORD *)v266 + 5);
              v45 = *(_QWORD *)(*(_QWORD *)(v44 + 56) + 80);
              v46 = v45 ? v45 - 24 : 0;
              v47 = v40 & 0x40;
              v48 = v44 == v46 && v47 == 0;
              if (v48 && (v254[20] || v42 <= v259))
              {
                v62 = *(_QWORD *)(*(_QWORD *)v7[1] + 40) + 272;
                sub_1C4768AD0(v62, v37);
                v64 = v63;
                llvm::DataLayout::getAlignment(v62, v37);
                v66 = (_QWORD *)(v43 + 24);
                if (*(_DWORD *)(v43 + 32) >= 0x41u)
                  v66 = (_QWORD *)*v66;
                v67 = *v66 * (((1 << v65) + ((unint64_t)(v64 + 7) >> 3) - 1) & -(1 << v65));
                if (v67 <= 1)
                  v68 = 1;
                else
                  v68 = v67;
                v69 = v266;
                v70 = v271;
                v253 = v270[0];
                if (!v271)
                {
                  v71 = v270[0];
                  goto LABEL_98;
                }
                LODWORD(v72) = ((v266 >> 4) ^ (v266 >> 9)) & (v271 - 1);
                v71 = v270[0] + 16 * v72;
                v73 = *(unsigned __int8 **)v71;
                if (v266 == *(unsigned __int8 **)v71)
                {
LABEL_92:
                  if ((_DWORD)v72 != v271)
                  {
                    if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(v261 + 16) + 728))(*(_QWORD *)(v261 + 16)) & 1) != 0)
                    {
                      FixedObject = llvm::MachineFrameInfo::CreateFixedObject(*(llvm::MachineFrameInfo **)(*(_QWORD *)(v261 + 8) + 56), v68, 0, 0, 1);
                      v75 = *(_QWORD *)(*(_QWORD *)(v261 + 8) + 56);
                      *(_BYTE *)(*(_QWORD *)(v75 + 8) + 40 * (*(_DWORD *)(v75 + 32) + FixedObject) + 16) = v42;
                      if (!*(_BYTE *)(*(_QWORD *)(v75 + 8)
                                     + 40 * (*(_DWORD *)(v75 + 32) + FixedObject)
                                     + 20)
                        && v42 > *(unsigned __int8 *)(v75 + 60))
                      {
                        *(_BYTE *)(v75 + 60) = v42;
                      }
                      goto LABEL_99;
                    }
                    v69 = v266;
                  }
                }
                else
                {
                  v94 = 1;
                  while (v73 != (unsigned __int8 *)-4096)
                  {
                    v95 = v72 + v94++;
                    v72 = v95 & (v271 - 1);
                    v73 = *(unsigned __int8 **)(v270[0] + 16 * v72);
                    if (v266 == v73)
                    {
                      v71 = v270[0] + 16 * v72;
                      goto LABEL_92;
                    }
                  }
                  v71 = v270[0] + 16 * v271;
                }
LABEL_98:
                FixedObject = llvm::MachineFrameInfo::CreateStackObject(*(unsigned __int8 **)(*(_QWORD *)(v261 + 8) + 56), v68, v42, 0, (uint64_t)v69, 0);
LABEL_99:
                v32 = v262;
                if (*(_BYTE *)(v37 + 8) == 19)
                {
                  v76 = *(_QWORD *)(*(_QWORD *)(v261 + 8) + 56);
                  *(_BYTE *)(*(_QWORD *)(v76 + 8) + 40 * (*(_DWORD *)(v76 + 32) + FixedObject) + 20) = (*(uint64_t (**)(unsigned __int8 *))(*(_QWORD *)v254 + 328))(v254);
                }
                *((_DWORD *)sub_1C632C0A0(v251, &v266) + 2) = FixedObject;
                v29 = v255;
                if (v71 != v253 + 16 * v70)
                {
                  v79 = *(_QWORD *)(v71 + 8);
                  v78 = (_DWORD **)(v71 + 8);
                  v77 = v79;
                  if ((v79 & 2) != 0)
                  {
                    v81 = v77 & 0xFFFFFFFFFFFFFFFCLL;
                    v78 = *(_DWORD ***)v81;
                    v80 = *(_QWORD *)v81 + 8 * *(unsigned int *)(v81 + 8);
                  }
                  else
                  {
                    v80 = (uint64_t)&v78[v77 > 3];
                  }
                  while (v78 != (_DWORD **)v80)
                  {
                    v82 = *v78++;
                    *v82 = FixedObject;
                  }
                }
                goto LABEL_107;
              }
            }
            if (v42 <= v259)
              v49 = 0;
            else
              v49 = v42;
            llvm::MachineFrameInfo::CreateVariableSizedObject(*(unsigned __int8 **)(v7[1] + 56), v49, (uint64_t)v266);
            v29 = v255;
            v32 = v262;
          }
          else
          {
            if ((v35 - 33) > 0x33 || ((1 << (v35 - 33)) & 0x8000000000041) == 0)
              goto LABEL_107;
            if (*(_BYTE *)(*(_QWORD *)(v33 - 56) + 16) == 24)
            {
              v51 = *(_DWORD *)(*(_QWORD *)(v261 + 16) + 88);
              v52 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(*(_QWORD *)(v261 + 8) + 16) + 176))(*(_QWORD *)(*(_QWORD *)(v261 + 8) + 16));
              (*(void (**)(void **__return_ptr, _QWORD, uint64_t, uint64_t, uint64_t))(**(_QWORD **)(v261 + 16)
                                                                                             + 2008))(&v275, *(_QWORD *)(v261 + 16), *(_QWORD *)(*(_QWORD *)v261 + 40) + 272, v52, v33 - 24);
              v53 = v276;
              if (v275 != (void *)v276)
              {
                v54 = (char *)v275 + 80;
                do
                {
                  if (*((_DWORD *)v54 - 20) == 2)
                  {
                    (*(void (**)(_QWORD, char *, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(v261 + 16) + 2032))(*(_QWORD *)(v261 + 16), v54 - 80, 0, 0, a4);
                    v55 = v54[23];
                    v56 = v55 < 0;
                    v57 = v55 >= 0 ? v54 : *(char **)v54;
                    v58 = v55 & 0x7F;
                    v59 = v56 ? *((_QWORD *)v54 + 1) : v58;
                    if (v51 == (*(unsigned int (**)(_QWORD, uint64_t, char *, uint64_t, _QWORD))(**(_QWORD **)(v261 + 16) + 2048))(*(_QWORD *)(v261 + 16), v52, v57, v59, v54[40]))*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v261 + 8) + 56) + 650) = 1;
                  }
                  v60 = v54 + 48;
                  v54 += 128;
                }
                while (v60 != (char *)v53);
              }
              *(_QWORD *)&v272 = &v275;
              sub_1C509B1A8((void ***)&v272);
              v35 = *(unsigned __int8 *)(v34 + 16);
              v29 = v255;
              v32 = v262;
            }
            if (v35 != 84)
              goto LABEL_107;
            v61 = *(_QWORD *)(v34 - 32);
            if (v61
              && !*(_BYTE *)(v61 + 16)
              && *(_QWORD *)(v61 + 24) == *(_QWORD *)(v34 + 72)
              && (*(_BYTE *)(v61 + 33) & 0x20) != 0)
            {
              if (*(_DWORD *)(*(_QWORD *)(v33 - 56) + 36) == 315)
                *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v261 + 8) + 56) + 652) = 1;
LABEL_81:
              if ((*(_WORD *)(v34 + 18) & 3) == 2 && *(_DWORD *)(*(_QWORD *)(*(_QWORD *)v261 + 24) + 8) >= 0x100u)
                *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v261 + 8) + 56) + 653) = 1;
              goto LABEL_107;
            }
            if (v33)
              goto LABEL_81;
          }
LABEL_107:
          v83 = *(_QWORD *)(v34 + 8);
          if (v83)
          {
            v85 = *(unsigned __int8 *)(v34 + 16);
            v7 = (_QWORD *)v261;
            if (v85 == 83)
              goto LABEL_116;
            do
            {
              v86 = *(_QWORD *)(v83 + 24);
              if (*(_QWORD *)(v86 + 40) != *(_QWORD *)(v34 + 40) || *(_BYTE *)(v86 + 16) == 83)
                break;
              v83 = *(_QWORD *)(v83 + 8);
            }
            while (v83);
            if (v85 != 59
              || (v275 = (void *)v34, *(_QWORD *)&v272 = 0, (sub_1C47A82D8((uint64_t)v251, &v275, &v272) & 1) == 0))
            {
LABEL_116:
              sub_1C6128BA8(v261, (const llvm::Value *)v34);
            }
            v87 = *(_QWORD *)(v34 + 8);
            if (v87)
            {
              v84 = 0;
              LODWORD(v83) = 0;
              do
              {
                v88 = *(_QWORD *)(v87 + 24);
                v89 = *(unsigned __int8 *)(v88 + 16);
                if (v88)
                  v90 = v89 >= 0x1C;
                else
                  v90 = 0;
                if (v90 && v89 - 83 >= 0xFFFFFFFE)
                {
                  v92 = *(_WORD *)(v88 + 18) & 0x3F;
                  if ((v92 - 38) < 4)
                    ++v84;
                  if ((v92 - 34) < 4)
                    LODWORD(v83) = v83 + 1;
                }
                v87 = *(_QWORD *)(v87 + 8);
              }
              while (v87);
            }
            else
            {
              LODWORD(v83) = 0;
              v84 = 0;
            }
          }
          else
          {
            v84 = 0;
            v7 = (_QWORD *)v261;
          }
          if (v84 <= v83)
            v93 = 200;
          else
            v93 = 198;
          v275 = (void *)v34;
          *((_DWORD *)sub_1C61AC530(v257, &v275) + 2) = v93;
          v33 = *(_QWORD *)(v33 + 8);
        }
        while (v33 != v32);
      }
      v30 = *(_QWORD *)(v30 + 8);
    }
    while (v30 != v29);
    v28 = (_QWORD **)*v7;
    v29 = *(_QWORD *)(*v7 + 80);
  }
  v96 = v28 + 9;
  v97 = v250;
  if ((_QWORD **)v29 != v28 + 9)
  {
    v245 = v7 + 7;
    v248 = v28 + 9;
    v249 = v7 + 10;
    while (1)
    {
      if (v29)
        v98 = v29 - 24;
      else
        v98 = 0;
      v99 = *(_QWORD *)(v98 + 48);
      v100 = v99 - 24;
      if (!v99)
        v100 = 0;
      v101 = *(unsigned __int8 *)(v100 + 16);
      v102 = *(_QWORD *)(v98 + 48);
      if (v101 == 83)
      {
        v102 = *(_QWORD *)(v98 + 48);
        do
        {
          v102 = *(_QWORD *)(v102 + 8);
          v103 = v102 - 24;
          if (!v102)
            v103 = 0;
        }
        while (*(_BYTE *)(v103 + 16) == 83);
      }
      v104 = *(unsigned __int8 *)(v102 - 8) - 38;
      v56 = v104 > 0x38;
      v105 = (1 << v104) & 0x100060000000001;
      if (!v56 && v105 != 0)
      {
        while (v101 == 83)
        {
          v99 = *(_QWORD *)(v99 + 8);
          v107 = v99 - 24;
          if (!v99)
            v107 = 0;
          v101 = *(unsigned __int8 *)(v107 + 16);
        }
        v108 = *(unsigned __int8 *)(v99 - 8);
        if (v108 != 94)
        {
          v109 = v7[1];
          *(_WORD *)(v109 + 635) = 257;
          *(_BYTE *)(*(_QWORD *)(v109 + 56) + 650) = 1;
          if (v108 == 38)
            goto LABEL_252;
        }
      }
      v110 = v97[39];
      if (v110)
        v97[39] = *(_QWORD *)v110;
      else
        v110 = sub_1C484358C((uint64_t)(v250 + 16), 232, 3);
      *(_QWORD *)v110 = 0;
      *(_QWORD *)(v110 + 8) = 0;
      *(_QWORD *)(v110 + 16) = v98;
      *(_DWORD *)(v110 + 24) = -1;
      v111 = (unint64_t *)(v110 + 48);
      *(_QWORD *)(v110 + 48) = (v110 + 48) | 4;
      *(_QWORD *)(v110 + 56) = v110 + 48;
      *(_BYTE *)(v110 + 144) = 0;
      *(_OWORD *)(v110 + 64) = 0u;
      *(_OWORD *)(v110 + 80) = 0u;
      *(_OWORD *)(v110 + 96) = 0u;
      *(_OWORD *)(v110 + 112) = 0u;
      *(_OWORD *)(v110 + 121) = 0u;
      *(_QWORD *)(v110 + 160) = 0;
      *(_QWORD *)(v110 + 168) = 0;
      *(_QWORD *)(v110 + 152) = 0;
      *(_BYTE *)(v110 + 176) = 0;
      *(_DWORD *)(v110 + 187) = 0;
      *(_QWORD *)(v110 + 180) = 0;
      *(_QWORD *)(v110 + 192) = 0;
      *(_DWORD *)(v110 + 199) = 0;
      *(_QWORD *)(v110 + 216) = 0;
      *(_QWORD *)(v110 + 224) = 0;
      *(_QWORD *)(v110 + 208) = 0;
      *(_QWORD *)(v110 + 32) = v97;
      *(_QWORD *)(v110 + 40) = v110;
      if (v29)
      {
        *(_QWORD *)(v110 + 136) = llvm::BasicBlock::getIrrLoopHeaderWeight((llvm::BasicBlock *)(v29 - 24));
        *(_QWORD *)(v110 + 144) = v112;
      }
      v275 = (void *)v98;
      v113 = *((_DWORD *)v7 + 18);
      if (!v113)
        break;
      v114 = v7[7];
      v115 = v113 - 1;
      v116 = v115 & ((v98 >> 4) ^ (v98 >> 9));
      v117 = (_QWORD *)(v114 + 16 * v116);
      v118 = *v117;
      if (v98 != *v117)
      {
        v119 = 0;
        v120 = 1;
        while (v118 != -4096)
        {
          if (v119)
            v121 = 0;
          else
            v121 = v118 == -8192;
          if (v121)
            v119 = v117;
          v122 = v116 + v120++;
          v116 = v122 & v115;
          v117 = (_QWORD *)(v114 + 16 * v116);
          v118 = *v117;
          if (v98 == *v117)
            goto LABEL_183;
        }
        if (v119)
          v158 = v119;
        else
          v158 = v117;
        goto LABEL_257;
      }
LABEL_183:
      v117[1] = v110;
      v123 = v7[1];
      llvm::ilist_callback_traits<llvm::MachineBasicBlock>::addNodeToList(v123 + 320, v110);
      v124 = *(_QWORD *)(v123 + 320);
      *(_QWORD *)v110 = v124;
      *(_QWORD *)(v110 + 8) = v123 + 320;
      *(_QWORD *)(v124 + 8) = v110;
      *(_QWORD *)(v123 + 320) = v110;
      if ((*(_WORD *)(v98 + 18) & 0x7FFF) != 0)
        *(_BYTE *)(v110 + 185) = 1;
      v125 = *(_QWORD *)(v98 + 48);
      if (v125)
        v126 = (llvm::Type **)(v125 - 24);
      else
        v126 = 0;
      v127 = *((unsigned __int8 *)v126 + 16);
      v128 = *(_QWORD *)(v98 + 48);
      if (v127 == 83)
      {
        v128 = *(_QWORD *)(v98 + 48);
        do
        {
          v128 = *(_QWORD *)(v128 + 8);
          v129 = v128 - 24;
          if (!v128)
            v129 = 0;
        }
        while (*(_BYTE *)(v129 + 16) == 83);
      }
      v130 = *(unsigned __int8 *)(v128 - 8) - 38;
      v56 = v130 > 0x38;
      v131 = (1 << v130) & 0x100060000000001;
      if (!v56 && v131 != 0)
        *(_BYTE *)(v110 + 184) = 1;
      if (v127 == 83 && *(_QWORD *)(v98 + 40) != v98 + 40 && v125)
      {
        do
        {
          if (v126[1] && (llvm::Type::isEmptyTy(*v126) & 1) == 0)
          {
            v136 = (unsigned __int8 *)v126[6];
            v269 = v136;
            if (v136)
              llvm::MetadataTracking::track((uint64_t)&v269, v136, 2);
            v275 = v126;
            v137 = *((_DWORD *)sub_1C6128C08(v249, &v275) + 2);
            v275 = &v277;
            v276 = 0x400000000;
            llvm::ComputeValueVTs(v7[2], (llvm::DataLayout *)(*(_QWORD *)(*(_QWORD *)v7[1] + 40) + 272), (uint64_t)*v126, (uint64_t)&v275, 0, 0, 0);
            v138 = (uint64_t *)v275;
            if ((_DWORD)v276)
            {
              v252 = v126;
              v256 = v29;
              v258 = (char *)v275 + 16 * v276;
              v259 &= 0xFFFFFFFFFFFF0000;
              do
              {
                v263 = v138;
                v139 = (*(uint64_t (**)(_QWORD, _QWORD, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7[2] + 584))(v7[2], **(_QWORD **)*v7, *v138, v138[1], v259);
                v140 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v7[1] + 16) + 104))(*(_QWORD *)(v7[1] + 16));
                if (v139)
                {
                  v141 = v140;
                  for (i = 0; i != v139; ++i)
                  {
                    v143 = *(_QWORD *)(v141 + 8);
                    v144 = *(llvm::MachineFunction **)(v110 + 32);
                    v266 = v269;
                    if (v269)
                      llvm::MetadataTracking::track((uint64_t)&v266, v269, 2);
                    v145 = *((_QWORD *)v144 + 28);
                    if (v145)
                      *((_QWORD *)v144 + 28) = *(_QWORD *)v145;
                    else
                      v145 = sub_1C484358C((uint64_t)v144 + 128, 72, 3);
                    *(_QWORD *)&v272 = v266;
                    if (v266)
                    {
                      llvm::MetadataTracking::retrack((uint64_t)&v266, v266, (uint64_t)&v272);
                      v266 = 0;
                    }
                    llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v145, v144, v143, (unsigned __int8 **)&v272, 0);
                    if ((_QWORD)v272)
                      llvm::MetadataTracking::untrack((uint64_t)&v272, (unsigned __int8 *)v272);
                    if (v266)
                      llvm::MetadataTracking::untrack((uint64_t)&v266, v266);
                    v146 = *(_QWORD *)(v110 + 40);
                    *(_QWORD *)(v145 + 24) = v146;
                    v147 = *(_QWORD *)(v146 + 32);
                    v148 = *(unsigned int *)(v145 + 40);
                    if ((_DWORD)v148)
                    {
                      v151 = *(_QWORD *)(v145 + 32);
                      v152 = *(_QWORD *)(v147 + 40);
                      v153 = 32 * v148;
                      do
                      {
                        if (!*(_BYTE *)v151)
                        {
                          v154 = *(unsigned int *)(v151 + 4);
                          if ((int)v154 >= 0)
                            v155 = (uint64_t *)(*(_QWORD *)(v152 + 272) + 8 * v154);
                          else
                            v155 = (uint64_t *)(*(_QWORD *)(v152 + 24) + 16 * (v154 & 0x7FFFFFFF) + 8);
                          v156 = *v155;
                          if (*v155)
                          {
                            v157 = *(_QWORD *)(v156 + 16);
                            *(_QWORD *)(v156 + 16) = v151;
                            *(_QWORD *)(v151 + 16) = v157;
                            if ((*(_BYTE *)(v151 + 3) & 1) != 0)
                            {
                              *(_QWORD *)(v151 + 24) = v156;
                            }
                            else
                            {
                              *(_QWORD *)(v151 + 24) = 0;
                              v155 = (uint64_t *)(v157 + 24);
                            }
                          }
                          else
                          {
                            *(_QWORD *)(v151 + 16) = v151;
                            *(_QWORD *)(v151 + 24) = 0;
                          }
                          *v155 = v151;
                        }
                        v151 += 32;
                        v153 -= 32;
                      }
                      while (v153);
                    }
                    v149 = *(_QWORD *)(v147 + 728);
                    if (v149)
                      (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v149 + 24))(v149, v145);
                    v150 = *v111 & 0xFFFFFFFFFFFFFFF8;
                    *(_QWORD *)v145 = v150 | *(_QWORD *)v145 & 7;
                    *(_QWORD *)(v145 + 8) = v111;
                    *(_QWORD *)(v150 + 8) = v145;
                    *v111 = *v111 & 7 | v145;
                    HIDWORD(v272) = 0;
                    v273 = 0;
                    v274 = 0;
                    *(_QWORD *)((char *)&v272 + 4) = (i + v137);
                    LODWORD(v272) = 0x1000000;
                    llvm::MachineInstr::addOperand((llvm::MachineInstr *)v145, v144, (const llvm::MachineOperand *)&v272);
                  }
                }
                v137 += v139;
                v7 = (_QWORD *)v261;
                v138 = v263 + 2;
              }
              while (v263 + 2 != (uint64_t *)v258);
              v138 = (uint64_t *)v275;
              v29 = v256;
              v96 = v248;
              v126 = v252;
            }
            v97 = v250;
            if (v138 != &v277)
              free(v138);
            if (v269)
              llvm::MetadataTracking::untrack((uint64_t)&v269, v269);
          }
          v133 = v126 + 3;
          if (!v126)
            v133 = 0;
          v134 = v133[1];
          v126 = (llvm::Type **)(v134 - 24);
          if (v134)
            v135 = v134 - 24;
          else
            v135 = 0;
        }
        while (v134 && *(_BYTE *)(v135 + 16) == 83);
      }
LABEL_252:
      v29 = *(_QWORD *)(v29 + 8);
      if ((_QWORD **)v29 == v96)
        goto LABEL_260;
    }
    v158 = 0;
LABEL_257:
    v117 = sub_1C47AD254(v245, (uint64_t)&v275, &v275, v158);
    *v117 = v275;
    v117[1] = 0;
    goto LABEL_183;
  }
LABEL_260:
  if (v247 >= 4)
  {
    if (!v246)
      goto LABEL_316;
    v195 = *(_QWORD *)(v7[1] + 88);
    LODWORD(v273) = 0;
    v272 = 0uLL;
    v196 = *(_QWORD **)v195;
    v197 = *(unsigned int *)(v195 + 16);
    v198 = *(_QWORD *)v195 + 16 * v197;
    if (*(_DWORD *)(v195 + 8))
    {
      if ((_DWORD)v197)
      {
        v209 = 16 * v197;
        v199 = *(_QWORD **)v195;
        while ((*v199 | 0x1000) == 0xFFFFFFFFFFFFF000)
        {
          v199 += 2;
          v209 -= 16;
          if (!v209)
            goto LABEL_329;
        }
      }
      else
      {
        v199 = *(_QWORD **)v195;
      }
    }
    else
    {
LABEL_329:
      v199 = (_QWORD *)(*(_QWORD *)v195 + 16 * v197);
    }
    v210 = &v196[2 * v197];
    if (v199 != v210)
    {
      do
      {
        v275 = 0;
        v211 = v199[1];
        v275 = (void *)(*v199 & 0xFFFFFFFFFFFFFFF8);
        v266 = (unsigned __int8 *)(v211 & 0xFFFFFFFFFFFFFFF8);
        v212 = sub_1C61294C8((_DWORD *)v7 + 14, &v266)[1];
        v269 = (unsigned __int8 *)(sub_1C61294C8((_DWORD *)v7 + 14, &v275)[1] | 4);
        sub_1C52DD004((uint64_t)&v272, &v269)[1] = v212 | 4;
        v213 = v199 + 2;
        v199 = (_QWORD *)v198;
        if (v213 != (_QWORD *)v198)
        {
          v199 = v213;
          while ((*v199 | 0x1000) == 0xFFFFFFFFFFFFF000)
          {
            v199 += 2;
            if (v199 == (_QWORD *)v198)
            {
              v199 = (_QWORD *)v198;
              break;
            }
          }
        }
      }
      while (v199 != v210);
      v196 = *(_QWORD **)v195;
    }
    MEMORY[0x1CAA32FB4](v196, 8);
    *(_OWORD *)v195 = v272;
    v272 = 0uLL;
    *(_DWORD *)(v195 + 16) = v273;
    LODWORD(v273) = 0;
    v214 = *(_QWORD **)(v195 + 24);
    v266 = 0;
    v267 = 0;
    v268 = 0;
    v215 = *(unsigned int *)(v195 + 40);
    v216 = &v214[9 * v215];
    v264 = v195;
    v260 = (unsigned int *)(v195 + 24);
    if (*(_DWORD *)(v195 + 32))
    {
      if ((_DWORD)v215)
      {
        v218 = 72 * v215;
        v217 = v214;
        while ((*v217 | 0x1000) == 0xFFFFFFFFFFFFF000)
        {
          v217 += 9;
          v218 -= 72;
          if (!v218)
            goto LABEL_344;
        }
      }
      else
      {
        v217 = v214;
      }
    }
    else
    {
LABEL_344:
      v217 = &v214[9 * v215];
    }
    v219 = &v214[9 * v215];
    if (v217 == v219)
    {
LABEL_386:
      sub_1C61EEF8C(v260);
      MEMORY[0x1CAA32FB4](*(_QWORD *)(v264 + 24), 8);
      *(_QWORD *)(v264 + 24) = v266;
      *(_QWORD *)(v264 + 32) = v267;
      v266 = 0;
      v267 = 0;
      *(_DWORD *)(v264 + 40) = v268;
      v268 = 0;
      sub_1C61EEF8C((unsigned int *)&v266);
      MEMORY[0x1CAA32FB4](v266, 8);
      MEMORY[0x1CAA32FB4](v272, 8);
      goto LABEL_316;
    }
    v220 = v7 + 7;
    while (1)
    {
      v269 = 0;
      v269 = (unsigned __int8 *)(*v217 & 0xFFFFFFFFFFFFFFF8);
      v275 = v279;
      v276 = (uint64_t)v279;
      v277 = 4;
      v278 = 0;
      v265 = sub_1C61294C8(v220, &v269)[1] | 4;
      v221 = (void **)(sub_1C621DFE4((uint64_t *)&v266, &v265) + 1);
      if (&v275 != v221)
        llvm::SmallPtrSetImplBase::MoveFrom((uint64_t)v221, 4, (double *)&v275);
      if ((void *)v276 != v275)
        free((void *)v276);
      v222 = v217[2];
      v223 = 24;
      if (v222 == v217[1])
        v223 = 28;
      v224 = *(unsigned int *)((char *)v217 + v223);
      if ((_DWORD)v224)
      {
        v225 = 8 * v224;
        v226 = (unint64_t *)v217[2];
        while (*v226 >= 0xFFFFFFFFFFFFFFFELL)
        {
          ++v226;
          v225 -= 8;
          if (!v225)
            goto LABEL_380;
        }
      }
      else
      {
        v226 = (unint64_t *)v217[2];
      }
      v227 = (unint64_t *)(v222 + 8 * v224);
      if (v226 == v227)
        goto LABEL_380;
      v228 = *v226;
LABEL_361:
      v275 = (void *)(sub_1C61294C8(v220, &v269)[1] | 4);
      v229 = sub_1C621DFE4((uint64_t *)&v266, &v275);
      v230 = v228 & 0xFFFFFFFFFFFFFFF8;
      v265 = v228 & 0xFFFFFFFFFFFFFFF8;
      v231 = *(_DWORD *)(v261 + 72);
      if (v231)
      {
        v232 = *(_QWORD *)(v261 + 56);
        v233 = v231 - 1;
        v234 = v233 & ((v230 >> 4) ^ (v230 >> 9));
        v235 = (_QWORD *)(v232 + 16 * v234);
        v236 = *v235;
        if (*v235 == v230)
          goto LABEL_371;
        v237 = 0;
        v238 = 1;
        while (v236 != -4096)
        {
          if (v237)
            v239 = 0;
          else
            v239 = v236 == -8192;
          if (v239)
            v237 = v235;
          v240 = v234 + v238++;
          v234 = v240 & v233;
          v235 = (_QWORD *)(v232 + 16 * v234);
          v236 = *v235;
          if (*v235 == v230)
            goto LABEL_371;
        }
        if (v237)
          v243 = v237;
        else
          v243 = v235;
      }
      else
      {
        v243 = 0;
      }
      v235 = sub_1C47AD254(v220, (uint64_t)&v265, &v265, v243);
      *v235 = v265;
      v235[1] = 0;
LABEL_371:
      sub_1C4774094((llvm::SmallPtrSetImplBase *)(v229 + 1), v235[1] | 4);
      v241 = v226 + 1;
      while (v241 != v227)
      {
        v242 = *v241++;
        v228 = v242;
        if (v242 <= 0xFFFFFFFFFFFFFFFDLL)
        {
          v226 = v241 - 1;
          goto LABEL_361;
        }
      }
LABEL_380:
      v244 = v217 + 9;
      v217 = v216;
      if (v244 != v216)
      {
        v217 = v244;
        while ((*v217 | 0x1000) == 0xFFFFFFFFFFFFF000)
        {
          v217 += 9;
          if (v217 == v216)
          {
            v217 = v216;
            break;
          }
        }
      }
      if (v217 == v219)
        goto LABEL_386;
    }
  }
  v159 = *(_QWORD *)(v7[1] + 96);
  v160 = *(unsigned int *)(v159 + 184);
  if ((_DWORD)v160)
  {
    v161 = *(_QWORD *)(v159 + 176);
    v162 = v161 + (v160 << 6);
    while (1)
    {
      v163 = *(unsigned int *)(v161 + 24);
      if ((_DWORD)v163)
        break;
LABEL_284:
      v161 += 64;
      if (v161 == v162)
        goto LABEL_285;
    }
    v164 = *(_QWORD *)(v161 + 16);
    v165 = v164 + 32 * v163;
    while (1)
    {
      v166 = *(_QWORD *)(v164 + 24);
      if (v166 >= 8)
        break;
LABEL_277:
      v164 += 32;
      if (v164 == v165)
        goto LABEL_284;
    }
    v167 = (void *)(v166 & 0xFFFFFFFFFFFFFFF8);
    v275 = v167;
    v168 = *((_DWORD *)v7 + 18);
    if (v168)
    {
      v169 = v7[7];
      v170 = v168 - 1;
      v171 = v170 & ((v167 >> 4) ^ (v167 >> 9));
      v172 = (_QWORD *)(v169 + 16 * v171);
      v173 = (void *)*v172;
      if ((void *)*v172 == v167)
      {
LABEL_276:
        *(_QWORD *)(v164 + 24) = v172[1] | 4;
        goto LABEL_277;
      }
      v174 = 0;
      v175 = 1;
      while (v173 != (void *)-4096)
      {
        if (v174)
          v176 = 0;
        else
          v176 = v173 == (void *)-8192;
        if (v176)
          v174 = v172;
        v177 = v171 + v175++;
        v171 = v177 & v170;
        v172 = (_QWORD *)(v169 + 16 * v171);
        v173 = (void *)*v172;
        if ((void *)*v172 == v167)
          goto LABEL_276;
      }
      if (v174)
        v178 = v174;
      else
        v178 = v172;
    }
    else
    {
      v178 = 0;
    }
    v172 = sub_1C47AD254((_DWORD *)v7 + 14, (uint64_t)&v275, &v275, v178);
    *v172 = v275;
    v172[1] = 0;
    goto LABEL_276;
  }
LABEL_285:
  v179 = *(unsigned int *)(v159 + 104);
  if ((_DWORD)v179)
  {
    v180 = *(_QWORD *)(v159 + 96);
    v181 = v180 + 16 * v179;
    while (1)
    {
      v182 = *(_QWORD *)(v180 + 8);
      if (v182 >= 8)
        break;
LABEL_299:
      v180 += 16;
      if (v180 == v181)
        goto LABEL_310;
    }
    v183 = (void *)(v182 & 0xFFFFFFFFFFFFFFF8);
    v275 = v183;
    v184 = *((_DWORD *)v7 + 18);
    if (v184)
    {
      v185 = v7[7];
      v186 = v184 - 1;
      v187 = v186 & ((v183 >> 4) ^ (v183 >> 9));
      v188 = (_QWORD *)(v185 + 16 * v187);
      v189 = (void *)*v188;
      if ((void *)*v188 == v183)
      {
LABEL_298:
        *(_QWORD *)(v180 + 8) = v188[1] | 4;
        goto LABEL_299;
      }
      v190 = 0;
      v191 = 1;
      while (v189 != (void *)-4096)
      {
        if (v190)
          v192 = 0;
        else
          v192 = v189 == (void *)-8192;
        if (v192)
          v190 = v188;
        v193 = v187 + v191++;
        v187 = v193 & v186;
        v188 = (_QWORD *)(v185 + 16 * v187);
        v189 = (void *)*v188;
        if ((void *)*v188 == v183)
          goto LABEL_298;
      }
      if (v190)
        v194 = v190;
      else
        v194 = v188;
    }
    else
    {
      v194 = 0;
    }
    v188 = sub_1C47AD254((_DWORD *)v7 + 14, (uint64_t)&v275, &v275, v194);
    *v188 = v275;
    v188[1] = 0;
    goto LABEL_298;
  }
LABEL_310:
  v200 = *(unsigned int *)(v159 + 456);
  if ((_DWORD)v200)
  {
    v201 = 24 * v200;
    v202 = (uint64_t *)(*(_QWORD *)(v159 + 448) + 16);
    do
    {
      v275 = (void *)(*v202 & 0xFFFFFFFFFFFFFFF8);
      *v202 = sub_1C61294C8((_DWORD *)v7 + 14, &v275)[1] | 4;
      v202 += 3;
      v201 -= 24;
    }
    while (v201);
  }
  v203 = *(unsigned int *)(v159 + 568);
  if ((_DWORD)v203)
  {
    v204 = *(uint64_t **)(v159 + 560);
    v205 = 24 * v203;
    do
    {
      v275 = (void *)(*v204 & 0xFFFFFFFFFFFFFFF8);
      *v204 = sub_1C61294C8((_DWORD *)v7 + 14, &v275)[1] | 4;
      v204 += 3;
      v205 -= 24;
    }
    while (v205);
  }
LABEL_316:
  v206 = v270[0];
  if (v271)
  {
    v207 = (uint64_t *)(v270[0] + 8);
    v208 = 16 * v271;
    do
    {
      if ((*(v207 - 1) | 0x1000) != 0xFFFFFFFFFFFFF000)
        v207 = sub_1C6286C70(v207);
      v207 += 2;
      v208 -= 16;
    }
    while (v208);
  }
  MEMORY[0x1CAA32FB4](v206, 8);
  if (v280[0] != v281)
    free(v280[0]);
}

unsigned int *sub_1C5CC8114(uint64_t a1)
{
  int v2;
  int v3;
  uint64_t v4;
  unsigned int *result;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  void *v20;
  unsigned int *v21;
  uint64_t v22;
  unsigned int *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;

  v2 = *(_DWORD *)(a1 + 64);
  if (v2 || *(_DWORD *)(a1 + 68))
  {
    v21 = (unsigned int *)(a1 + 56);
    v22 = *(unsigned int *)(a1 + 72);
    if (v22 <= 4 * v2 || v22 < 0x41)
    {
      if ((_DWORD)v22)
      {
        v30 = *(_QWORD **)v21;
        v31 = 16 * v22;
        do
        {
          *v30 = -4096;
          v30 += 2;
          v31 -= 16;
        }
        while (v31);
      }
      *(_QWORD *)(a1 + 64) = 0;
    }
    else
    {
      sub_1C4926838(v21);
    }
  }
  sub_1C5015F50((_DWORD *)(a1 + 80));
  v3 = *(_DWORD *)(a1 + 112);
  if (v3 || *(_DWORD *)(a1 + 116))
  {
    v23 = (unsigned int *)(a1 + 104);
    v24 = *(unsigned int *)(a1 + 120);
    if (v24 <= 4 * v3 || v24 < 0x41)
    {
      if ((_DWORD)v24)
      {
        v32 = *(_DWORD **)v23;
        v33 = 16 * v24;
        do
        {
          *v32 = -1;
          v32 += 4;
          v33 -= 16;
        }
        while (v33);
      }
      *(_QWORD *)(a1 + 112) = 0;
    }
    else
    {
      sub_1C5934B0C(v23);
    }
  }
  sub_1C5505510((_DWORD *)(a1 + 176));
  v4 = *(unsigned int *)(a1 + 792);
  if ((_DWORD)v4)
  {
    v28 = *(_QWORD *)(a1 + 784) - 32;
    v29 = 40 * v4;
    do
    {
      sub_1C48C0CF0(v28 + v29);
      v29 -= 40;
    }
    while (v29);
  }
  *(_DWORD *)(a1 + 792) = 0;
  result = *(unsigned int **)(a1 + 688);
  if (result == *(unsigned int **)(a1 + 680))
    goto LABEL_7;
  v12 = *(unsigned int *)(a1 + 696);
  if (v12 < 0x21 || 4 * (*(_DWORD *)(a1 + 700) - *(_DWORD *)(a1 + 704)) >= v12)
  {
    result = (unsigned int *)memset(result, 255, 8 * v12);
LABEL_7:
    *(_QWORD *)(a1 + 700) = 0;
    goto LABEL_8;
  }
  free(result);
  v17 = *(_DWORD *)(a1 + 700) - *(_DWORD *)(a1 + 704);
  v18 = 1 << (33 - __clz(v17 - 1));
  if (v17 <= 0x10)
    v19 = 32;
  else
    v19 = v18;
  *(_DWORD *)(a1 + 696) = v19;
  *(_QWORD *)(a1 + 700) = 0;
  v20 = malloc_type_malloc(8 * v19, 0x4065EBACuLL);
  if (!v20)
    llvm::report_bad_alloc_error((llvm *)"Allocation failed", (const char *)1);
  *(_QWORD *)(a1 + 688) = v20;
  result = (unsigned int *)memset(v20, 255, 8 * *(unsigned int *)(a1 + 696));
LABEL_8:
  *(_DWORD *)(a1 + 232) = 0;
  *(_DWORD *)(a1 + 368) = 0;
  *(_DWORD *)(a1 + 312) = 0;
  v6 = *(_DWORD *)(a1 + 208);
  if (v6 || *(_DWORD *)(a1 + 212))
  {
    result = (unsigned int *)(a1 + 200);
    v25 = *(unsigned int *)(a1 + 216);
    if (v25 <= 4 * v6 || v25 < 0x41)
    {
      if ((_DWORD)v25)
      {
        v34 = *(_QWORD **)result;
        v35 = 16 * v25;
        do
        {
          *v34 = -4096;
          v34 += 2;
          v35 -= 16;
        }
        while (v35);
      }
      *(_QWORD *)(a1 + 208) = 0;
    }
    else
    {
      result = sub_1C4926838(result);
    }
  }
  v7 = *(_DWORD *)(a1 + 384);
  if (v7 || *(_DWORD *)(a1 + 388))
  {
    result = (unsigned int *)(a1 + 376);
    v14 = *(unsigned int *)(a1 + 392);
    if (v14 > 4 * v7 && v14 >= 0x41)
    {
      result = sub_1C476BF54(result);
    }
    else
    {
      if ((_DWORD)v14)
      {
        v15 = *(_DWORD **)result;
        v16 = 8 * v14;
        do
        {
          *v15 = -1;
          v15 += 2;
          v16 -= 8;
        }
        while (v16);
      }
      *(_QWORD *)(a1 + 384) = 0;
    }
  }
  v8 = *(_DWORD *)(a1 + 408);
  if (v8 || *(_DWORD *)(a1 + 412))
  {
    result = (unsigned int *)(a1 + 400);
    v11 = *(unsigned int *)(a1 + 416);
    if (v11 <= 4 * v8 || v11 < 0x41)
    {
      if ((_DWORD)v11)
        result = (unsigned int *)memset(*(void **)result, 255, 4 * v11);
      *(_QWORD *)(a1 + 408) = 0;
    }
    else
    {
      result = (unsigned int *)sub_1C4A068AC(result);
    }
  }
  *(_DWORD *)(a1 + 432) = 0;
  v9 = *(_DWORD *)(a1 + 160);
  if (v9 || *(_DWORD *)(a1 + 164))
  {
    result = (unsigned int *)(a1 + 152);
    v26 = *(unsigned int *)(a1 + 168);
    if (v26 > 4 * v9 && v26 >= 0x41)
    {
      result = (unsigned int *)sub_1C5CC93D4(result);
      goto LABEL_16;
    }
    if (!(_DWORD)v26)
    {
LABEL_80:
      *(_QWORD *)(a1 + 160) = 0;
      goto LABEL_16;
    }
    v36 = *(_QWORD **)result;
    v37 = 32 * v26;
    while (1)
    {
      if (*v36 == -8192)
        goto LABEL_78;
      if (*v36 != -4096)
        break;
LABEL_79:
      v36 += 4;
      v37 -= 32;
      if (!v37)
        goto LABEL_80;
    }
    result = (unsigned int *)MEMORY[0x1CAA32FB4](v36[1], 8);
LABEL_78:
    *v36 = -4096;
    goto LABEL_79;
  }
LABEL_16:
  v10 = *(_DWORD *)(a1 + 664);
  if (v10 || *(_DWORD *)(a1 + 668))
  {
    result = (unsigned int *)(a1 + 656);
    v27 = *(unsigned int *)(a1 + 672);
    if (v27 <= 4 * v10 || v27 < 0x41)
    {
      if ((_DWORD)v27)
      {
        v38 = *(_QWORD **)result;
        v39 = 16 * v27;
        do
        {
          *v38 = -4096;
          v38 += 2;
          v39 -= 16;
        }
        while (v39);
      }
      *(_QWORD *)(a1 + 664) = 0;
    }
    else
    {
      return sub_1C4926838(result);
    }
  }
  return result;
}

void sub_1C5CC84C0(uint64_t a1, llvm::APInt *this, unsigned int a3)
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;

  llvm::APInt::zext(this, a3, (uint64_t)&v8);
  llvm::APInt::zext((llvm::APInt *)((char *)this + 16), a3, (uint64_t)&v6);
  *(_DWORD *)(a1 + 8) = v9;
  *(_QWORD *)a1 = v8;
  *(_DWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 16) = v6;
}

void sub_1C5CC8534(uint64_t a1, llvm::EVT ***a2)
{
  llvm::EVT **v2;
  unsigned int ExtendedSizeInBits;
  const char *v7;
  unsigned int v8;
  int v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int *v13;
  int v14;
  llvm::EVT ***v15;
  llvm::EVT **v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int *v21;
  unsigned int v22;
  unsigned int *v23;
  unsigned int v24;
  unint64_t v25;
  unint64_t v26;
  unsigned int v27;
  size_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int *v32;
  unsigned int v33;
  size_t *v34;
  uint64_t v35;
  _QWORD *v36;
  const void **v37;
  uint64_t v38;
  int v39;
  llvm::EVT **v40;
  llvm::EVT *v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  size_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  BOOL v61;
  int v62;
  int v64;
  _DWORD *v65;
  unsigned int v66;
  uint64_t v67;
  _QWORD *v68;
  unsigned int *v69;
  uint64_t v70;
  const void *v71;
  _DWORD *v72;
  _DWORD *v73;
  _QWORD *v74;
  uint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t *v79;
  unint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  unsigned int *v83;
  int v84;
  _DWORD *v85;
  _DWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  _DWORD *v90;
  unsigned int v91;
  size_t v92;
  void *v93;
  uint64_t v94;
  uint64_t v95;
  _DWORD *v96;
  unint64_t __na;
  size_t __n;
  _QWORD *v99;
  unint64_t v100;
  _QWORD *v101;
  int v102;
  int v103;
  int v104;
  size_t v105;
  size_t v106;
  size_t v107;
  unint64_t v108;
  size_t v109;
  size_t v110;
  unsigned int *v111;
  void *v112;
  unint64_t v113;
  const void **v114;
  int v115;
  const void **v116;
  void **v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  void *v121;
  unsigned int v122;
  llvm::EVT *v123;
  void *v124;
  unsigned int v125;
  void *__src;
  __int128 v127;
  unsigned int v128;
  llvm::EVT **v129;
  __int128 v130;
  void *v131[2];
  _QWORD v132[4];

  v132[2] = *MEMORY[0x1E0C80C00];
  v2 = *a2;
  if (*((_DWORD *)*a2 + 2) == 13 && ((_DWORD)(*a2)[1] & 0xFE) != 18)
  {
    v131[0] = v132;
    v131[1] = (void *)0x100000000;
    llvm::ComputeValueVTs(*(_QWORD *)(a1 + 16), (llvm::DataLayout *)(*(_QWORD *)(**(_QWORD **)(a1 + 8) + 40) + 272), (uint64_t)v2, (uint64_t)v131, 0, 0, 0);
    v130 = *(_OWORD *)v131[0];
    if ((*(unsigned int (**)(_QWORD, llvm::EVT *, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(a1 + 16) + 584))(*(_QWORD *)(a1 + 16), **a2, v130, *((_QWORD *)&v130 + 1), 0) != 1)goto LABEL_6;
    llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)(a1 + 16), **a2, v130, *((uint64_t *)&v130 + 1), (uint64_t)&__src);
    v130 = v127;
    if ((_BYTE)v127)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v130);
    else
      ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v130);
    v8 = ExtendedSizeInBits;
    if ((_DWORD)v7 == 1)
    v124 = a2;
    __src = 0;
    if (!sub_1C61252B8((uint64_t *)(a1 + 80), &v124, &__src)
      || __src == (void *)(*(_QWORD *)(a1 + 80) + 16 * *(unsigned int *)(a1 + 96))
      || (v9 = *((_DWORD *)__src + 2)) == 0)
    {
LABEL_6:
      if (v131[0] != v132)
        free(v131[0]);
      return;
    }
    v10 = (uint64_t *)(a1 + 784);
    v11 = v9 & 0x7FFFFFFF;
    if ((v9 & 0x7FFFFFFFu) >= *(_DWORD *)(a1 + 792))
      sub_1C632BC84(a1 + 784, v11 + 1, a1 + 800);
    v12 = *v10;
    v13 = (unsigned int *)(*v10 + 40 * v11);
    v129 = 0;
    v14 = *((_DWORD *)a2 + 5);
    if ((v14 & 0x40000000) != 0)
      v15 = (llvm::EVT ***)*(a2 - 1);
    else
      v15 = &a2[-4 * (v14 & 0x7FFFFFF)];
    v16 = *v15;
    v129 = v16;
    v17 = *((unsigned __int8 *)v16 + 16);
    if ((v17 - 11) < 2)
      goto LABEL_25;
    if (v17 != 16)
    {
      if (v17 == 5)
      {
LABEL_25:
        *v13 = *v13 & 0x80000000 | 1;
        LODWORD(v127) = v8;
        if (v8 > 0x40)
        {
          llvm::APInt::initSlowCase((llvm::APInt *)&__src, 0, 0);
          v128 = v8;
          llvm::APInt::initSlowCase((llvm::APInt *)((char *)&v127 + 8), 0, 0);
        }
        else
        {
          v128 = v8;
          __src = 0;
          *((_QWORD *)&v127 + 1) = 0;
        }
        v18 = v12 + 40 * v11;
        v19 = v18 + 8;
        if (*(_DWORD *)(v18 + 16) >= 0x41u && *(_QWORD *)v19)
          MEMORY[0x1CAA32F9C](*(_QWORD *)v19, 0x1000C8000313F17);
        *(_QWORD *)v19 = __src;
        *(_DWORD *)(v19 + 8) = v127;
        v20 = v12 + 40 * v11;
        v22 = *(_DWORD *)(v20 + 32);
        v21 = (unsigned int *)(v20 + 32);
        v23 = v21 - 2;
        if (v22 >= 0x41 && *(_QWORD *)v23)
          MEMORY[0x1CAA32F9C](*(_QWORD *)v23, 0x1000C8000313F17);
        *(_QWORD *)v23 = *((_QWORD *)&v127 + 1);
        *v21 = v128;
        goto LABEL_6;
      }
      v84 = *((_DWORD *)sub_1C6128C08((uint64_t *)(a1 + 80), &v129) + 2);
      if (v84 < 0)
      {
        v85 = sub_1C632BA98(a1, v84, v8);
        if (v85)
        {
          v86 = v85;
          v116 = (const void **)(v85 + 2);
          *v13 = *v85;
          v87 = v12 + 40 * v11;
          v88 = v87 + 8;
          if (*(_DWORD *)(v87 + 16) > 0x40u || v85[4] > 0x40u)
          {
            if ((const void **)v88 != v116)
            {
              llvm::APInt::reallocate(v88, v85[4]);
              v94 = *(unsigned int *)(v88 + 8);
              if (v94 <= 0x40)
                *(_QWORD *)v88 = *v116;
              else
                memcpy(*(void **)v88, *v116, ((unint64_t)(v94 + 63) >> 3) & 0x3FFFFFF8);
            }
          }
          else
          {
            *(_QWORD *)v88 = *((_QWORD *)v85 + 1);
            *(_DWORD *)(v87 + 16) = v85[4];
          }
          v89 = v12 + 40 * v11;
          v91 = *(_DWORD *)(v89 + 32);
          v90 = (_DWORD *)(v89 + 32);
          v117 = (void **)(v90 - 2);
          if (v91 > 0x40 || v86[8] > 0x40u)
          {
            v114 = (const void **)(v86 + 6);
            if (v117 != (void **)(v86 + 6))
            {
              llvm::APInt::reallocate((uint64_t)v117, v86[8]);
              v95 = *v90;
              if (v95 <= 0x40)
                *v117 = (void *)*v114;
              else
                memcpy(*v117, *v114, ((unint64_t)(v95 + 63) >> 3) & 0x3FFFFFF8);
            }
          }
          else
          {
            *v117 = (void *)*((_QWORD *)v86 + 3);
            *v90 = v86[8];
          }
LABEL_48:
          v115 = *((_DWORD *)a2 + 5) & 0x7FFFFFF;
          if (v115 == 1)
            goto LABEL_6;
          v35 = v12 + 40 * v11;
          v36 = (_QWORD *)(v35 + 8);
          v37 = (const void **)(v35 + 24);
          v111 = (unsigned int *)(v35 + 32);
          v38 = 1;
          while (1)
          {
            v123 = 0;
            v39 = *((_DWORD *)a2 + 5);
            v40 = (v39 & 0x40000000) != 0 ? *(a2 - 1) : (llvm::EVT **)&a2[-4 * (v39 & 0x7FFFFFF)];
            v41 = v40[4 * v38];
            v123 = v41;
            v42 = *((unsigned __int8 *)v41 + 16);
            if (v42 == 16)
              break;
            v61 = v42 > 0xC;
            v62 = (1 << v42) & 0x1820;
            if (!v61 && v62 != 0)
            {
              *v13 = *v13 & 0x80000000 | 1;
              LODWORD(v127) = v8;
              if (v8 > 0x40)
              {
                llvm::APInt::initSlowCase((llvm::APInt *)&__src, 0, 0);
                v128 = v8;
                llvm::APInt::initSlowCase((llvm::APInt *)((char *)&v127 + 8), 0, 0);
              }
              else
              {
                v128 = v8;
                __src = 0;
                *((_QWORD *)&v127 + 1) = 0;
              }
              v83 = v111;
              if (*((_DWORD *)v36 + 2) >= 0x41u && *v36)
              {
                MEMORY[0x1CAA32F9C](*v36, 0x1000C8000313F17);
                v83 = v111;
              }
              *v36 = __src;
              *((_DWORD *)v36 + 2) = v127;
              if (*v83 >= 0x41 && *v37)
              {
                MEMORY[0x1CAA32F9C](*v37, 0x1000C8000313F17);
                v83 = v111;
              }
              *v37 = (const void *)*((_QWORD *)&v127 + 1);
              *v83 = v128;
              goto LABEL_6;
            }
            v64 = *((_DWORD *)sub_1C6128C08((uint64_t *)(a1 + 80), &v123) + 2);
            if ((v64 & 0x80000000) == 0)
              goto LABEL_119;
            v65 = sub_1C632BA98(a1, v64, v8);
            v66 = *v13 & 0x7FFFFFFF;
            if (!v65)
              goto LABEL_120;
            if ((*v65 & 0x7FFFFFFFu) < v66)
              v66 = *v65 & 0x7FFFFFFF;
            *v13 = v66 | *v13 & 0x80000000;
            v67 = *((unsigned int *)v36 + 2);
            if (v67 > 0x40)
            {
              v103 = *((_DWORD *)v36 + 2);
              v107 = (size_t)v37;
              v100 = v67 + 63;
              __na = ((unint64_t)(v67 + 63) >> 3) & 0x3FFFFFF8;
              v73 = v65;
              v74 = (_QWORD *)operator new[]();
              memcpy(v74, (const void *)*v36, __na);
              v65 = v73;
              v75 = (uint64_t *)*((_QWORD *)v73 + 1);
              v76 = v100 >> 6;
              v68 = v74;
              do
              {
                v77 = *v75++;
                *v74++ &= v77;
                --v76;
              }
              while (v76);
              v37 = (const void **)v107;
              v69 = v111;
              LODWORD(v67) = v103;
            }
            else
            {
              v68 = (_QWORD *)(*((_QWORD *)v65 + 1) & *v36);
              v69 = v111;
            }
            v70 = *v69;
            if (v70 > 0x40)
            {
              v101 = v68;
              v104 = v67;
              __n = (size_t)v36;
              v96 = v65;
              v78 = (_QWORD *)operator new[]();
              memcpy(v78, *v37, ((unint64_t)(v70 + 63) >> 3) & 0x3FFFFFF8);
              v79 = (uint64_t *)*((_QWORD *)v96 + 3);
              v80 = (unint64_t)(v70 + 63) >> 6;
              v81 = v78;
              do
              {
                v82 = *v79++;
                *v78++ &= v82;
                --v80;
              }
              while (v80);
              v36 = (_QWORD *)__n;
              v68 = v101;
              LODWORD(v67) = v104;
              v71 = v81;
            }
            else
            {
              v71 = (const void *)(*((_QWORD *)v65 + 3) & (unint64_t)*v37);
            }
            v72 = v111;
            if (*((_DWORD *)v36 + 2) >= 0x41u && *v36)
            {
              v99 = v68;
              v102 = v67;
              v105 = (size_t)v71;
              MEMORY[0x1CAA32F9C](*v36, 0x1000C8000313F17);
              LODWORD(v67) = v102;
              v71 = (const void *)v105;
              v72 = v111;
              v68 = v99;
            }
            *v36 = v68;
            *((_DWORD *)v36 + 2) = v67;
            if (*v72 >= 0x41u && *v37)
            {
              v106 = (size_t)v71;
              MEMORY[0x1CAA32F9C](*v37, 0x1000C8000313F17);
              v71 = (const void *)v106;
              v72 = v111;
            }
            *v37 = v71;
            *v72 = v70;
LABEL_84:
            if (v115 == (_DWORD)++v38)
              goto LABEL_6;
          }
          LODWORD(v127) = 1;
          __src = 0;
          if ((*(unsigned int (**)(_QWORD, llvm::EVT *))(**(_QWORD **)(a1 + 16) + 1216))(*(_QWORD *)(a1 + 16), v41))
          {
            if (*((_DWORD *)v41 + 8) < v8)
            {
              llvm::APInt::sext((llvm::EVT *)((char *)v41 + 24), v8, (llvm::APInt *)&v124);
              goto LABEL_59;
            }
          }
          else if (*((_DWORD *)v41 + 8) < v8)
          {
            llvm::APInt::zext((llvm::EVT *)((char *)v41 + 24), v8, (uint64_t)&v124);
LABEL_59:
            if (v127 >= 0x41 && __src)
              MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
            __src = v124;
            LODWORD(v127) = v125;
            v43 = *v13 & 0x7FFFFFFF;
            v44 = sub_1C4959174((llvm::APInt *)&__src);
            if (v44 >= v43)
              v45 = v43;
            else
              v45 = v44;
            *v13 = *v13 & 0x80000000 | v45;
            v46 = v127;
            v122 = v127;
            if (v127 > 0x40)
            {
              v50 = (((unint64_t)v127 + 63) >> 3) & 0x3FFFFFF8;
              v121 = (void *)operator new[]();
              memcpy(v121, __src, v50);
              llvm::APInt::flipAllBitsSlowCase((uint64_t)&v121);
              v46 = v122;
              v49 = (unint64_t)v121;
            }
            else
            {
              v47 = ~(unint64_t)__src;
              v48 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v127;
              if (!(_DWORD)v127)
                v48 = 0;
              v49 = v48 & v47;
              v121 = (void *)(v48 & v47);
            }
            v122 = 0;
            v51 = *((unsigned int *)v36 + 2);
            if (v51 > 0x40)
            {
              v52 = (_QWORD *)*v36;
              v53 = (unint64_t)(v51 + 63) >> 6;
              v54 = (uint64_t *)v49;
              do
              {
                v55 = *v54++;
                *v52++ &= v55;
                --v53;
              }
              while (v53);
            }
            else
            {
              *v36 &= v49;
            }
            if (v46 >= 0x41 && v49)
              MEMORY[0x1CAA32F9C](v49, 0x1000C8000313F17);
            v56 = *v111;
            if (v56 > 0x40)
            {
              v57 = *v37;
              v58 = (uint64_t *)__src;
              v59 = (unint64_t)(v56 + 63) >> 6;
              do
              {
                v60 = *v58++;
                *v57++ &= v60;
                --v59;
              }
              while (v59);
            }
            else
            {
              *v37 = (const void *)((unint64_t)*v37 & (unint64_t)__src);
            }
            if (v127 >= 0x41 && __src)
              MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
            goto LABEL_84;
          }
          sub_1C5DD14E0((uint64_t)&v124, (uint64_t)v41 + 24);
          goto LABEL_59;
        }
      }
LABEL_119:
      v66 = *v13 & 0x7FFFFFFF;
LABEL_120:
      *v13 = v66;
      goto LABEL_6;
    }
    v125 = 1;
    v124 = 0;
    if ((*(unsigned int (**)(_QWORD, llvm::EVT **))(**(_QWORD **)(a1 + 16) + 1216))(*(_QWORD *)(a1 + 16), v16))
    {
      if (*((_DWORD *)v16 + 8) < v8)
      {
        llvm::APInt::sext((llvm::APInt *)(v16 + 3), v8, (llvm::APInt *)&__src);
LABEL_35:
        if (v125 >= 0x41 && v124)
          MEMORY[0x1CAA32F9C](v124, 0x1000C8000313F17);
        v124 = __src;
        v125 = v127;
        *v13 = *v13 & 0x80000000 | sub_1C4959174((llvm::APInt *)&v124) & 0x7FFFFFFF;
        v24 = v125;
        LODWORD(v127) = v125;
        if (v125 > 0x40)
        {
          v92 = (((unint64_t)v125 + 63) >> 3) & 0x3FFFFFF8;
          __src = (void *)operator new[]();
          memcpy(__src, v124, v92);
          llvm::APInt::flipAllBitsSlowCase((uint64_t)&__src);
          v24 = v127;
          v112 = __src;
          v27 = v125;
          if (v125 > 0x40)
          {
            v118 = v125;
            v108 = (((unint64_t)v125 + 63) >> 3) & 0x3FFFFFF8;
            v93 = (void *)operator new[]();
            memcpy(v93, v124, v108);
            v28 = (size_t)v93;
            v26 = (unint64_t)v112;
            v27 = v118;
LABEL_43:
            v29 = v12 + 40 * v11;
            v30 = v29 + 8;
            if (*(_DWORD *)(v29 + 16) >= 0x41u && *(_QWORD *)v30)
            {
              v113 = v26;
              v119 = v27;
              v109 = v28;
              MEMORY[0x1CAA32F9C](*(_QWORD *)v30, 0x1000C8000313F17);
              v28 = v109;
              v26 = v113;
              v27 = v119;
            }
            *(_QWORD *)v30 = v26;
            *(_DWORD *)(v30 + 8) = v24;
            v31 = v12 + 40 * v11;
            v33 = *(_DWORD *)(v31 + 32);
            v32 = (unsigned int *)(v31 + 32);
            v34 = (size_t *)(v32 - 2);
            if (v33 >= 0x41 && *v34)
            {
              v120 = v27;
              v110 = v28;
              MEMORY[0x1CAA32F9C](*v34, 0x1000C8000313F17);
              v28 = v110;
              v27 = v120;
            }
            *v34 = v28;
            *v32 = v27;
            if (v125 >= 0x41 && v124)
              MEMORY[0x1CAA32F9C](v124, 0x1000C8000313F17);
            goto LABEL_48;
          }
          v26 = (unint64_t)__src;
        }
        else
        {
          if (v125)
            v25 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v125;
          else
            v25 = 0;
          v26 = v25 & ~(unint64_t)v124;
          v27 = v125;
        }
        v28 = (size_t)v124;
        goto LABEL_43;
      }
    }
    else if (*((_DWORD *)v16 + 8) < v8)
    {
      llvm::APInt::zext((llvm::APInt *)(v16 + 3), v8, (uint64_t)&__src);
      goto LABEL_35;
    }
    sub_1C5DD14E0((uint64_t)&__src, (uint64_t)(v16 + 3));
    goto LABEL_35;
  }
}

unint64_t sub_1C5CC91B4(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v9;

  v4 = *(unsigned int *)(a1 + 8);
  v5 = v4 + a3;
  if (v4 + a3 > (unint64_t)*(unsigned int *)(a1 + 12))
  {
    v7 = *(_QWORD *)a1 + 40 * v4;
    if (*(_QWORD *)a1 <= a2 && v7 > a2)
    {
      v9 = a2 - *(_QWORD *)a1;
      sub_1C632BD8C(a1, v5);
      return *(_QWORD *)a1 + v9;
    }
    else
    {
      sub_1C632BD8C(a1, v5);
    }
  }
  return a2;
}

uint64_t sub_1C5CC921C(uint64_t result, const void **a2)
{
  unsigned int v2;
  unsigned int v3;
  void *v4;
  const void **v5;
  void *v6;
  const void **v7;
  uint64_t v8;
  uint64_t v9;

  v2 = *((_DWORD *)a2 + 2);
  *(_DWORD *)(result + 8) = v2;
  if (v2 > 0x40)
  {
    v7 = a2;
    v8 = result;
    v4 = (void *)operator new[]();
    *(_QWORD *)v8 = v4;
    memcpy(v4, *v7, (((unint64_t)*(unsigned int *)(v8 + 8) + 63) >> 3) & 0x3FFFFFF8);
    a2 = v7;
    result = v8;
  }
  else
  {
    *(_QWORD *)result = *a2;
  }
  v3 = *((_DWORD *)a2 + 6);
  *(_DWORD *)(result + 24) = v3;
  if (v3 > 0x40)
  {
    v9 = result;
    v5 = a2;
    v6 = (void *)operator new[]();
    *(_QWORD *)(v9 + 16) = v6;
    memcpy(v6, v5[2], (((unint64_t)*(unsigned int *)(v9 + 24) + 63) >> 3) & 0x3FFFFFF8);
    return v9;
  }
  else
  {
    *(_QWORD *)(result + 16) = a2[2];
  }
  return result;
}

_QWORD *sub_1C5CC931C(uint64_t a1, int a2)
{
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _QWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(unsigned int *)(a1 + 16);
  v4 = *(uint64_t **)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = operator new(16 * v8, (std::align_val_t)8uLL);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_1C632BFD8((uint64_t *)a1, v4, &v4[2 * v3]);
    JUMPOUT(0x1CAA32FB4);
  }
  *(_QWORD *)(a1 + 8) = 0;
  v10 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v10)
  {
    v11 = 16 * v10;
    do
    {
      *result = -4096;
      result += 2;
      v11 -= 16;
    }
    while (v11);
  }
  return result;
}

_QWORD *sub_1C5CC93D4(_QWORD *a1)
{
  int v2;
  _QWORD *result;
  int v4;
  unsigned int v5;
  uint64_t v6;
  _QWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *((_DWORD *)a1 + 2);
  result = (_QWORD *)sub_1C48C0DF0((uint64_t)a1);
  if (v2)
  {
    v4 = 1 << (33 - __clz(v2 - 1));
    if (v4 <= 64)
      v5 = 64;
    else
      v5 = v4;
    if (v5 == *((_DWORD *)a1 + 4))
    {
      a1[1] = 0;
      v6 = 32 * v5;
      v7 = (_QWORD *)*a1;
      do
      {
        *v7 = -4096;
        v7 += 4;
        v6 -= 32;
      }
      while (v6);
    }
    else
    {
      MEMORY[0x1CAA32FB4](*a1, 8);
      v8 = (4 * v5 / 3 + 1) | ((unint64_t)(4 * v5 / 3 + 1) >> 1);
      v9 = v8 | (v8 >> 2) | ((v8 | (v8 >> 2)) >> 4);
      LODWORD(v9) = (((v9 | (v9 >> 8)) >> 16) | v9 | (v9 >> 8)) + 1;
      *((_DWORD *)a1 + 4) = v9;
      result = operator new(32 * v9, (std::align_val_t)8uLL);
      *a1 = result;
      a1[1] = 0;
      v10 = *((unsigned int *)a1 + 4);
      if ((_DWORD)v10)
      {
        v11 = 32 * v10;
        do
        {
          *result = -4096;
          result += 4;
          v11 -= 32;
        }
        while (v11);
      }
    }
  }
  else if (*((_DWORD *)a1 + 4))
  {
    result = (_QWORD *)MEMORY[0x1CAA32FB4](*a1, 8);
    *a1 = 0;
    a1[1] = 0;
    *((_DWORD *)a1 + 4) = 0;
  }
  else
  {
    a1[1] = 0;
  }
  return result;
}

uint64_t sub_1C5CC94E4(_QWORD *a1, uint64_t a2, unsigned int a3, int a4, char a5, unsigned int a6, uint64_t a7)
{
  int v8;
  unsigned __int8 *v11;
  uint64_t v12;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v32;
  int v33;
  _QWORD *v34;
  unsigned int v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t CommonSubClass;
  unsigned int *v41;
  uint64_t v42;
  unint64_t v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  uint64_t v54;
  char *v55;
  char *v56;
  _QWORD *v57;
  unint64_t v58;
  unsigned int v59;
  unint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  unsigned __int8 *v63;
  int v64;
  int v65;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unsigned int IncompleteVirtualRegister;
  int v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  unint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  llvm::MachineFunction *v78;
  unsigned __int8 *v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unsigned __int8 *v87;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v100;
  __int128 v101;
  unsigned int v102[4];
  __int128 v103;
  unsigned __int8 *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v8 = a4;
  if ((a6 & 0x80000000) != 0)
  {
    *(_QWORD *)&v103 = a2;
    DWORD2(v103) = a3;
    if (a4)
    {
      v104 = 0;
      if (sub_1C632C56C((uint64_t *)a7, (uint64_t)&v103, (uint64_t *)&v104))
      {
        v11 = v104;
        *(_QWORD *)v104 = 0;
        *((_DWORD *)v11 + 2) = -2;
        *(int32x2_t *)(a7 + 8) = vadd_s32(*(int32x2_t *)(a7 + 8), (int32x2_t)0x1FFFFFFFFLL);
      }
    }
    v101 = v103;
    v102[0] = a6;
    v12 = a7;
    return sub_1C632C634((uint64_t)&v104, v12, (uint64_t)&v101, v102);
  }
  v14 = a1;
  v15 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  v97 = a7;
  if (*(_BYTE *)(*(_QWORD *)(a2 + 40) + 16 * a3) && (v16 = a1[4], *(_QWORD *)(v16 + 8 * v15 + 96)))
  {
    v17 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v16 + 424))(v16, v15, (*(unsigned __int8 *)(a2 + 26) >> 2) & 1);
    v14 = a1;
  }
  else
  {
    v17 = 0;
  }
  v18 = 0;
  v19 = 1;
  if ((v8 & 1) != 0 || (a5 & 1) != 0)
  {
LABEL_14:
    v21 = v17;
    goto LABEL_71;
  }
  v20 = *(_QWORD *)(a2 + 48);
  if (!v20)
  {
    v18 = 0;
    goto LABEL_14;
  }
  v96 = v15;
  v21 = v17;
  do
  {
    v22 = *(_QWORD *)(v20 + 16);
    if (*(_WORD *)(v22 + 24) != 49
      || (v23 = *(_QWORD *)(v22 + 32), *(_QWORD *)(v23 + 80) != a2)
      || *(_DWORD *)(v23 + 88) != a3)
    {
      v26 = *(unsigned __int16 *)(v22 + 56);
      if (!*(_WORD *)(v22 + 56))
      {
        v25 = 1;
        goto LABEL_68;
      }
      v27 = 0;
      v25 = 1;
      while (1)
      {
        v28 = *(_QWORD *)(v22 + 32) + 40 * v27;
        v29 = *(_QWORD *)v28;
        v30 = *(_DWORD *)(v28 + 8);
        if (v29 == a2 && v30 == a3)
        {
          v32 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + 16 * a3);
          if (v32 != 1 && v32 != 172)
          {
            v33 = *(__int16 *)(v22 + 24);
            if (v33 < 0)
            {
              v34 = (_QWORD *)v14[2];
              v35 = (unsigned __int16)~(_WORD)v33;
              v36 = v34[1];
              if (*(unsigned __int8 *)(v36 + 48 * v35 + 4) + v27 < *(unsigned __int16 *)(v36 + 48 * v35 + 2))
              {
                v100 = v21;
                v37 = v14[3];
                v38 = (_QWORD *)(*(uint64_t (**)(_QWORD *, uint64_t))(*v34 + 16))(v34, v36 + 48 * v35);
                v39 = (uint64_t)v38;
                if (v38 && !*(_BYTE *)(*v38 + 31))
                {
                  v41 = (unsigned int *)v38[1];
                  v42 = *(_QWORD *)(v37 + 240);
                  v43 = (unint64_t)(*(_QWORD *)(v37 + 248) - v42) >> 3;
                  v44 = *v41;
                  if (*v41)
                  {
                    v45 = 0;
LABEL_56:
                    v47 = __clz(__rbit32(v44));
                    v48 = v47 | v45;
                    if ((v47 | v45) != (_DWORD)v43)
                    {
                      v49 = v44 >> v47;
                      while (1)
                      {
                        v39 = *(_QWORD *)(v42 + 8 * v48);
                        if (*(_BYTE *)(*(_QWORD *)v39 + 31))
                          goto LABEL_40;
                        if (v49 <= 1)
                        {
                          while (1)
                          {
                            v45 += 32;
                            if (v45 >= v43)
                              goto LABEL_57;
                            v51 = v41[1];
                            ++v41;
                            v50 = v51;
                            if (v51)
                            {
                              v52 = v45;
                              goto LABEL_65;
                            }
                          }
                        }
                        v52 = v48 + 1;
                        v50 = v49 >> 1;
LABEL_65:
                        v39 = 0;
                        v53 = __clz(__rbit32(v50));
                        v48 = v53 + v52;
                        v49 = v50 >> v53;
                        v14 = a1;
                        if (v48 == (_DWORD)v43)
                          goto LABEL_41;
                      }
                    }
                  }
                  else
                  {
                    v45 = 0;
                    while (1)
                    {
                      v45 += 32;
                      if (v45 >= v43)
                        break;
                      v46 = v41[1];
                      ++v41;
                      v44 = v46;
                      if (v46)
                        goto LABEL_56;
                    }
                  }
LABEL_57:
                  v39 = 0;
                }
LABEL_40:
                v14 = a1;
LABEL_41:
                v21 = v100;
                if (v100)
                {
                  if (v39)
                  {
                    CommonSubClass = llvm::TargetRegisterInfo::getCommonSubClass(v14[3], v100, v39);
                    v14 = a1;
                    v25 = 0;
                    if (CommonSubClass)
                      v21 = CommonSubClass;
                  }
                  else
                  {
                    v25 = 0;
                  }
                }
                else
                {
                  v25 = 0;
                  v21 = v39;
                }
                goto LABEL_47;
              }
            }
            v25 = 0;
          }
        }
LABEL_47:
        if (++v27 == v26)
          goto LABEL_68;
      }
    }
    v18 = *(_DWORD *)(*(_QWORD *)(v23 + 40) + 76);
    v25 = v18 >= 0 && v18 == a6;
    if (v18 < 0)
    {
      v19 = 0;
      goto LABEL_70;
    }
LABEL_68:
    v19 &= v25;
    v20 = *(_QWORD *)(v20 + 32);
  }
  while (v20);
  v18 = 0;
LABEL_70:
  LODWORD(v15) = v96;
LABEL_71:
  v54 = v14[3];
  v55 = *(char **)(v54 + 240);
  v56 = *(char **)(v54 + 248);
  if (v55 != v56)
  {
    v57 = 0;
    v58 = (unint64_t)(v56 - v55) >> 3;
    v59 = a6 - 0x40000000;
    v60 = (unint64_t)a6 >> 3;
    while (1)
    {
      v61 = *(_QWORD **)v55;
      if ((_DWORD)v15 == 1)
      {
        if (v59 >= 0xC0000001)
        {
          v62 = *v61;
LABEL_76:
          if (v60 < *(unsigned __int16 *)(v62 + 22)
            && ((1 << (a6 & 7)) & *(unsigned __int8 *)(*(_QWORD *)(v62 + 8) + v60)) != 0
            && (!v57
             || v61 != v57
             && ((*(_DWORD *)(v57[1] + ((*(unsigned __int16 *)(v62 + 24) >> 3) & 0x1FFCLL)) >> *(_WORD *)(v62 + 24)) & 1) != 0))
          {
            v57 = *(_QWORD **)v55;
          }
        }
      }
      else
      {
        v62 = *v61;
        v63 = *(unsigned __int8 **)(*(_QWORD *)(v54 + 264)
                                  + 24
                                  * (*(unsigned __int16 *)(*v61 + 24)
                                   + *(_DWORD *)(v54 + 272) * (_DWORD)v58)
                                  + 16);
        do
        {
          v65 = *v63++;
          v64 = v65;
        }
        while (v65 != 1 && v64 != (_DWORD)v15);
        if (v59 < 0xC0000001)
        {
          v14 = a1;
        }
        else
        {
          v14 = a1;
          if (v64 != 1)
            goto LABEL_76;
        }
      }
      v55 += 8;
      if (v55 == v56)
        goto LABEL_95;
    }
  }
  v57 = 0;
LABEL_95:
  if (v18)
  {
    v68 = *(_QWORD *)(*(_QWORD *)(v14[1] + 24) + 16 * (v18 & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8;
    if ((v19 & 1) == 0)
      goto LABEL_104;
  }
  else
  {
    if (v21)
      v67 = v21;
    else
      v67 = (uint64_t)v57;
    v68 = v67 & 0xFFFFFFFFFFFFFFFBLL;
    if ((v19 & 1) == 0)
    {
LABEL_104:
      v71 = v8;
      v72 = v14[1];
      v73 = v14;
      IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v72, "", 0);
      *(_QWORD *)(*(_QWORD *)(v72 + 24) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v68;
      v74 = *(_QWORD *)(v72 + 8);
      if (v74)
        (*(void (**)(uint64_t))(*(_QWORD *)v74 + 24))(v74);
      v76 = v73[5];
      v75 = (unint64_t *)v73[6];
      v77 = *(_QWORD *)(v73[2] + 8);
      v78 = *(llvm::MachineFunction **)(v76 + 32);
      v79 = *(unsigned __int8 **)(a2 + 64);
      *(_QWORD *)&v101 = v79;
      if (v79)
        llvm::MetadataTracking::track((uint64_t)&v101, v79, 2);
      v80 = v77 + 912;
      v81 = *((_QWORD *)v78 + 28);
      if (v81)
        *((_QWORD *)v78 + 28) = *(_QWORD *)v81;
      else
        v81 = sub_1C484358C((uint64_t)v78 + 128, 72, 3);
      v69 = v97;
      v104 = (unsigned __int8 *)v101;
      if ((_QWORD)v101)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v101, (unsigned __int8 *)v101, (uint64_t)&v104);
        *(_QWORD *)&v101 = 0;
      }
      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v81, v78, v80, &v104, 0);
      if (v104)
        llvm::MetadataTracking::untrack((uint64_t)&v104, v104);
      if ((_QWORD)v101)
        llvm::MetadataTracking::untrack((uint64_t)&v101, (unsigned __int8 *)v101);
      v82 = *(_QWORD *)(v76 + 40);
      *(_QWORD *)(v81 + 24) = v82;
      v83 = *(_QWORD *)(v82 + 32);
      v84 = *(unsigned int *)(v81 + 40);
      v8 = v71;
      if ((_DWORD)v84)
      {
        v89 = *(_QWORD *)(v81 + 32);
        v90 = *(_QWORD *)(v83 + 40);
        v91 = 32 * v84;
        do
        {
          if (!*(_BYTE *)v89)
          {
            v92 = *(unsigned int *)(v89 + 4);
            if ((int)v92 >= 0)
              v93 = (uint64_t *)(*(_QWORD *)(v90 + 272) + 8 * v92);
            else
              v93 = (uint64_t *)(*(_QWORD *)(v90 + 24) + 16 * (v92 & 0x7FFFFFFF) + 8);
            v94 = *v93;
            if (*v93)
            {
              v95 = *(_QWORD *)(v94 + 16);
              *(_QWORD *)(v94 + 16) = v89;
              *(_QWORD *)(v89 + 16) = v95;
              if ((*(_BYTE *)(v89 + 3) & 1) != 0)
              {
                *(_QWORD *)(v89 + 24) = v94;
              }
              else
              {
                *(_QWORD *)(v89 + 24) = 0;
                v93 = (uint64_t *)(v95 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v89 + 16) = v89;
              *(_QWORD *)(v89 + 24) = 0;
            }
            *v93 = v89;
          }
          v89 += 32;
          v91 -= 32;
        }
        while (v91);
      }
      v85 = *(_QWORD *)(v83 + 728);
      if (v85)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v85 + 24))(v85, v81);
      v86 = *v75 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v81 = v86 | *(_QWORD *)v81 & 7;
      *(_QWORD *)(v81 + 8) = v75;
      *(_QWORD *)(v86 + 8) = v81;
      *v75 = *v75 & 7 | v81;
      v105 = 0;
      v106 = 0;
      v107 = 0;
      LODWORD(v104) = 0x1000000;
      HIDWORD(v104) = IncompleteVirtualRegister;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v81, v78, (const llvm::MachineOperand *)&v104);
      v105 = 0;
      v106 = 0;
      LODWORD(v104) = 0;
      HIDWORD(v104) = a6;
      v107 = 0;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v81, v78, (const llvm::MachineOperand *)&v104);
      goto LABEL_121;
    }
  }
  if ((*(char *)(*v57 + 30) & 0x80000000) == 0)
    goto LABEL_104;
  v69 = v97;
  IncompleteVirtualRegister = a6;
LABEL_121:
  *(_QWORD *)&v103 = a2;
  DWORD2(v103) = a3;
  if (v8)
  {
    v104 = 0;
    if (sub_1C632C56C((uint64_t *)v69, (uint64_t)&v103, (uint64_t *)&v104))
    {
      v87 = v104;
      *(_QWORD *)v104 = 0;
      *((_DWORD *)v87 + 2) = -2;
      *(int32x2_t *)(v69 + 8) = vadd_s32(*(int32x2_t *)(v69 + 8), (int32x2_t)0x1FFFFFFFFLL);
    }
  }
  v101 = v103;
  v102[0] = IncompleteVirtualRegister;
  v12 = v69;
  return sub_1C632C634((uint64_t)&v104, v12, (uint64_t)&v101, v102);
}

llvm::MachineFunction **sub_1C5CC9C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, char a10)
{
  int v13;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  int IncompleteVirtualRegister;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  llvm::MachineFunction *v35;
  unsigned __int8 *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int *v51;
  uint64_t v52;
  unint64_t v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  uint64_t v64;
  unint64_t *v65;
  int v66;
  unsigned __int8 *v67;
  unsigned __int8 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;

  v13 = a4;
  v17 = sub_1C632C13C(a1, a3, a4, a7);
  v18 = *(_QWORD *)(*(_QWORD *)(a2 + 8) + 16);
  if (*(unsigned __int16 *)(v18 + 2) <= a5)
  {
    v19 = 0;
    if (!a6)
    {
LABEL_8:
      IncompleteVirtualRegister = v17;
      goto LABEL_9;
    }
  }
  else
  {
    v19 = (*(unsigned __int8 *)(*(_QWORD *)(v18 + 40) + 6 * a5 + 2) >> 1) & 2;
    if (!a6)
      goto LABEL_8;
  }
  if (*(unsigned __int16 *)(a6 + 2) <= a5)
    goto LABEL_8;
  v20 = (*(uint64_t (**)(_QWORD, uint64_t, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(a1 + 16) + 16))(*(_QWORD *)(a1 + 16), a6, a5, *(_QWORD *)(a1 + 24), *(_QWORD *)a1);
  if (!v20)
    goto LABEL_8;
  v21 = v20;
  if (sub_1C51A3F30(*(_QWORD **)(a1 + 8), v17, *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 24) + 16 * (v17 & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8, v20, 4u))
  {
    goto LABEL_8;
  }
  v66 = v19;
  if (!*(_BYTE *)(*(_QWORD *)v21 + 31))
  {
    v51 = *(unsigned int **)(v21 + 8);
    v52 = *(_QWORD *)(*(_QWORD *)(a1 + 24) + 240);
    v53 = (unint64_t)(*(_QWORD *)(*(_QWORD *)(a1 + 24) + 248) - v52) >> 3;
    v54 = *v51;
    if (*v51)
    {
      v55 = 0;
LABEL_69:
      v57 = __clz(__rbit32(v54));
      v58 = v57 | v55;
      if ((v57 | v55) != (_DWORD)v53)
      {
        v59 = v54 >> v57;
        while (1)
        {
          v21 = *(_QWORD *)(v52 + 8 * v58);
          if (*(_BYTE *)(*(_QWORD *)v21 + 31))
            goto LABEL_30;
          if (v59 <= 1)
          {
            while (1)
            {
              v55 += 32;
              if (v55 >= v53)
                goto LABEL_70;
              v61 = v51[1];
              ++v51;
              v60 = v61;
              if (v61)
              {
                v62 = v55;
                goto LABEL_78;
              }
            }
          }
          v62 = v58 + 1;
          v60 = v59 >> 1;
LABEL_78:
          v21 = 0;
          v63 = __clz(__rbit32(v60));
          v58 = v63 + v62;
          v59 = v60 >> v63;
          if (v58 == (_DWORD)v53)
            goto LABEL_30;
        }
      }
    }
    else
    {
      v55 = 0;
      while (1)
      {
        v55 += 32;
        if (v55 >= v53)
          break;
        v56 = v51[1];
        ++v51;
        v54 = v56;
        if (v56)
          goto LABEL_69;
      }
    }
LABEL_70:
    v21 = 0;
  }
LABEL_30:
  v32 = *(_QWORD *)(a1 + 8);
  IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v32, "", 0);
  *(_QWORD *)(*(_QWORD *)(v32 + 24) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v21 & 0xFFFFFFFFFFFFFFFBLL;
  v33 = *(_QWORD *)(v32 + 8);
  if (v33)
    (*(void (**)(uint64_t))(*(_QWORD *)v33 + 24))(v33);
  v64 = *(_QWORD *)(a1 + 40);
  v65 = *(unint64_t **)(a1 + 48);
  v34 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
  v35 = *(llvm::MachineFunction **)(v64 + 32);
  v36 = *(unsigned __int8 **)(a3 + 64);
  v67 = v36;
  if (v36)
    llvm::MetadataTracking::track((uint64_t)&v67, v36, 2);
  v37 = v34 + 912;
  v38 = *((_QWORD *)v35 + 28);
  if (v38)
    *((_QWORD *)v35 + 28) = *(_QWORD *)v38;
  else
    v38 = sub_1C484358C((uint64_t)v35 + 128, 72, 3);
  v68 = v67;
  if (v67)
  {
    llvm::MetadataTracking::retrack((uint64_t)&v67, v67, (uint64_t)&v68);
    v67 = 0;
  }
  llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v38, v35, v37, &v68, 0);
  if (v68)
    llvm::MetadataTracking::untrack((uint64_t)&v68, v68);
  v19 = v66;
  if (v67)
    llvm::MetadataTracking::untrack((uint64_t)&v67, v67);
  v39 = *(_QWORD *)(v64 + 40);
  *(_QWORD *)(v38 + 24) = v39;
  v40 = *(_QWORD *)(v39 + 32);
  v41 = *(unsigned int *)(v38 + 40);
  if ((_DWORD)v41)
  {
    v44 = *(_QWORD *)(v38 + 32);
    v45 = *(_QWORD *)(v40 + 40);
    v46 = 32 * v41;
    do
    {
      if (!*(_BYTE *)v44)
      {
        v47 = *(unsigned int *)(v44 + 4);
        if ((int)v47 >= 0)
          v48 = (uint64_t *)(*(_QWORD *)(v45 + 272) + 8 * v47);
        else
          v48 = (uint64_t *)(*(_QWORD *)(v45 + 24) + 16 * (v47 & 0x7FFFFFFF) + 8);
        v49 = *v48;
        if (*v48)
        {
          v50 = *(_QWORD *)(v49 + 16);
          *(_QWORD *)(v49 + 16) = v44;
          *(_QWORD *)(v44 + 16) = v50;
          if ((*(_BYTE *)(v44 + 3) & 1) != 0)
          {
            *(_QWORD *)(v44 + 24) = v49;
          }
          else
          {
            *(_QWORD *)(v44 + 24) = 0;
            v48 = (uint64_t *)(v50 + 24);
          }
        }
        else
        {
          *(_QWORD *)(v44 + 16) = v44;
          *(_QWORD *)(v44 + 24) = 0;
        }
        *v48 = v44;
      }
      v44 += 32;
      v46 -= 32;
    }
    while (v46);
  }
  v42 = *(_QWORD *)(v40 + 728);
  if (v42)
    (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v42 + 24))(v42, v38);
  v43 = *v65 & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v38 = v43 | *(_QWORD *)v38 & 7;
  *(_QWORD *)(v38 + 8) = v65;
  *(_QWORD *)(v43 + 8) = v38;
  *v65 = *v65 & 7 | v38;
  v69 = 0;
  v70 = 0;
  v71 = 0;
  LODWORD(v68) = 0x1000000;
  HIDWORD(v68) = IncompleteVirtualRegister;
  llvm::MachineInstr::addOperand((llvm::MachineInstr *)v38, v35, (const llvm::MachineOperand *)&v68);
  v69 = 0;
  v70 = 0;
  LODWORD(v68) = 0;
  HIDWORD(v68) = v17;
  v71 = 0;
  llvm::MachineInstr::addOperand((llvm::MachineInstr *)v38, v35, (const llvm::MachineOperand *)&v68);
LABEL_9:
  v23 = *(_QWORD *)(a3 + 48);
  if (v23)
  {
    v24 = 1;
    do
    {
      if (*(_DWORD *)(v23 + 8) == v13)
      {
        if (!v24)
          goto LABEL_16;
        --v24;
      }
      v23 = *(_QWORD *)(v23 + 32);
    }
    while (v23);
    if (v24)
    {
LABEL_16:
      LODWORD(v23) = 0;
      goto LABEL_17;
    }
    LODWORD(v23) = 0;
    if ((a9 & 1) == 0 && (a10 & 1) == 0 && *(_WORD *)(a3 + 24) != 50 && (a8 & 1) == 0)
    {
      v27 = *(_QWORD *)(a2 + 8);
      v28 = *(unsigned int *)(v27 + 40);
      v29 = v28 + 1;
      v30 = 32 * v28 - 32;
      while (v30 != -32)
      {
        v31 = *(_DWORD *)(*(_QWORD *)(v27 + 32) + v30) & 0x20000FF;
        --v29;
        v30 -= 32;
        if (v31 != 0x2000000)
          goto LABEL_37;
      }
      v29 = 0;
LABEL_37:
      if (v29 < *(unsigned __int16 *)(v18 + 2) && (*(_WORD *)(*(_QWORD *)(v18 + 40) + 6 * v29 + 4) & 1) != 0)
        goto LABEL_16;
      LODWORD(v23) = 8;
    }
  }
LABEL_17:
  if (a8)
    v25 = 128;
  else
    v25 = 0;
  return sub_1C47BF4F4((llvm::MachineFunction **)a2, IncompleteVirtualRegister, v19 | v23 | v25, 0);
}

void sub_1C5CCA138(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, char a9, char a10)
{
  unsigned int v11;
  unsigned int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  llvm::MachineInstr *v19;
  llvm::MachineFunction *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unsigned int *v27;
  uint64_t v28;
  unint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned __int8 v43;
  unsigned __int8 *v44;
  uint64_t *v45;
  int ConstantPoolIndex;
  int v47;
  llvm::MachineInstr *v48;
  uint64_t v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int IncompleteVirtualRegister;
  uint64_t v64;
  unint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  llvm::MachineFunction *v68;
  unsigned __int8 *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  unsigned int v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned __int8 *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;

  v11 = a5;
  if (*(__int16 *)(a3 + 24) < 0)
  {
LABEL_51:
    sub_1C5CC9C50((uint64_t)a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
    return;
  }
  v15 = *(unsigned __int16 *)(a3 + 24);
  if (v15 <= 0x22)
  {
    if (v15 != 11)
    {
      if (v15 != 12)
        goto LABEL_11;
LABEL_10:
      v18 = *(_QWORD *)(a3 + 80);
      v20 = *(llvm::MachineFunction **)a2;
      v19 = *(llvm::MachineInstr **)(a2 + 8);
      v21 = 3;
      goto LABEL_20;
    }
    goto LABEL_8;
  }
  if (v15 == 36)
    goto LABEL_10;
  if (v15 == 35)
  {
LABEL_8:
    v16 = *(_QWORD *)(a3 + 80);
    v17 = *(_DWORD *)(v16 + 32);
    if (v17 > 0x40)
      v18 = **(_QWORD **)(v16 + 24);
    else
      v18 = (uint64_t)(*(_QWORD *)(v16 + 24) << -(char)v17) >> -(char)v17;
    v20 = *(llvm::MachineFunction **)a2;
    v19 = *(llvm::MachineInstr **)(a2 + 8);
    v21 = 1;
    goto LABEL_20;
  }
LABEL_11:
  if (!a3 || v15 != 9)
  {
    if (!a3 || v15 != 10)
    {
      if (v15 <= 0x26 && ((1 << v15) & 0x6000006000) != 0)
      {
        v32 = *(_QWORD *)(a3 + 80);
        v33 = *(_QWORD *)(a3 + 88);
        v34 = *(_DWORD *)(a3 + 96);
        v20 = *(llvm::MachineFunction **)a2;
        v19 = *(llvm::MachineInstr **)(a2 + 8);
        v92 = 0;
        v93 = v32;
        LODWORD(v94) = HIDWORD(v33);
        v35 = 10;
LABEL_28:
        v36 = v35 & 0xFFF000FF | ((v34 & 0xFFF) << 8);
        HIDWORD(v91) = v33;
      }
      else
      {
        if (!a3 || v15 != 6)
        {
          switch(*(_WORD *)(a3 + 24))
          {
            case 0xF:
LABEL_36:
              v38 = *(_DWORD *)(a3 + 76);
              v20 = *(llvm::MachineFunction **)a2;
              v19 = *(llvm::MachineInstr **)(a2 + 8);
              LODWORD(v91) = 5;
              v92 = 0;
              LODWORD(v93) = v38;
              break;
            case 0x10:
LABEL_37:
              v39 = *(_DWORD *)(a3 + 76);
              v40 = *(_DWORD *)(a3 + 80);
              v20 = *(llvm::MachineFunction **)a2;
              v19 = *(llvm::MachineInstr **)(a2 + 8);
              v92 = 0;
              LODWORD(v93) = v39;
              v36 = ((v40 & 0xFFF) << 8) | 8;
              goto LABEL_29;
            case 0x11:
LABEL_38:
              v41 = *(_DWORD *)(a3 + 88);
              v42 = v41 & 0x7FFFFFFF;
              v43 = *(_BYTE *)(a3 + 92);
              v44 = *(unsigned __int8 **)(*a1 + 64);
              v45 = *(uint64_t **)(a3 + 80);
              if (v41 < 0)
                ConstantPoolIndex = llvm::MachineConstantPool::getConstantPoolIndex(v44, (uint64_t)v45, v43);
              else
                ConstantPoolIndex = llvm::MachineConstantPool::getConstantPoolIndex(v44, v45, v43);
              v47 = *(_DWORD *)(a3 + 96);
              v20 = *(llvm::MachineFunction **)a2;
              v48 = *(llvm::MachineInstr **)(a2 + 8);
              v92 = 0;
              LODWORD(v93) = ConstantPoolIndex;
              LODWORD(v94) = 0;
              LODWORD(v91) = ((v47 & 0xFFF) << 8) | 6;
              HIDWORD(v91) = v42;
              v19 = v48;
              break;
            case 0x12:
LABEL_41:
              v49 = *(_QWORD *)(a3 + 80);
              v50 = *(_DWORD *)(a3 + 88);
              v20 = *(llvm::MachineFunction **)a2;
              v19 = *(llvm::MachineInstr **)(a2 + 8);
              v92 = 0;
              v93 = v49;
              LODWORD(v94) = 0;
              v36 = ((v50 & 0xFFF) << 8) | 9;
              HIDWORD(v91) = 0;
              goto LABEL_29;
            default:
              switch(*(_WORD *)(a3 + 24))
              {
                case '\'':
                  goto LABEL_36;
                case '(':
                  goto LABEL_37;
                case ')':
                  goto LABEL_38;
                case '*':
                  goto LABEL_41;
                default:
                  if (a3 && v15 == 44)
                  {
                    v51 = *(_QWORD *)(a3 + 80);
                    v20 = *(llvm::MachineFunction **)a2;
                    v19 = *(llvm::MachineInstr **)(a2 + 8);
                    v92 = 0;
                    v93 = v51;
                    LODWORD(v94) = 0;
                    v91 = 15;
                    goto LABEL_21;
                  }
                  if (v15 == 43 || v15 == 19)
                  {
                    v52 = *(_QWORD *)(a3 + 80);
                    v33 = *(_QWORD *)(a3 + 88);
                    v34 = *(_DWORD *)(a3 + 96);
                    v20 = *(llvm::MachineFunction **)a2;
                    v19 = *(llvm::MachineInstr **)(a2 + 8);
                    v92 = 0;
                    v93 = v52;
                    LODWORD(v94) = HIDWORD(v33);
                    v35 = 11;
                    goto LABEL_28;
                  }
                  if (!a3 || v15 != 45)
                    goto LABEL_51;
                  v53 = *(_QWORD *)(a3 + 88);
                  v55 = *(_DWORD *)(a3 + 76);
                  v54 = *(_DWORD *)(a3 + 80);
                  v20 = *(llvm::MachineFunction **)a2;
                  v19 = *(llvm::MachineInstr **)(a2 + 8);
                  v92 = 0;
                  LODWORD(v93) = v54;
                  LODWORD(v94) = HIDWORD(v53);
                  LODWORD(v91) = ((v55 & 0xFFF) << 8) | 7;
                  HIDWORD(v91) = v53;
                  break;
              }
              break;
          }
          goto LABEL_21;
        }
        v37 = *(_QWORD *)(a3 + 80);
        v20 = *(llvm::MachineFunction **)a2;
        v19 = *(llvm::MachineInstr **)(a2 + 8);
        v92 = 0;
        v93 = v37;
        v36 = 4;
      }
LABEL_29:
      LODWORD(v91) = v36;
LABEL_21:
      llvm::MachineInstr::addOperand(v19, v20, (const llvm::MachineOperand *)&v91);
      return;
    }
    v18 = *(_QWORD *)(a3 + 80);
    v20 = *(llvm::MachineFunction **)a2;
    v19 = *(llvm::MachineInstr **)(a2 + 8);
    v21 = 12;
LABEL_20:
    LODWORD(v91) = v21;
    v92 = 0;
    v93 = v18;
    goto LABEL_21;
  }
  v22 = *(_DWORD *)(a3 + 76);
  v23 = *(unsigned __int8 *)(*(_QWORD *)(a3 + 40) + 16 * a4);
  if (!a6)
    goto LABEL_57;
  v24 = a1[3];
  v25 = (_QWORD *)(*(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)a1[2] + 16))(a1[2], a6, a5, v24, *a1);
  v26 = (unint64_t)v25;
  if (v25 && !*(_BYTE *)(*v25 + 31))
  {
    v27 = (unsigned int *)v25[1];
    v28 = *(_QWORD *)(v24 + 240);
    v29 = (unint64_t)(*(_QWORD *)(v24 + 248) - v28) >> 3;
    v30 = *v27;
    if (!*v27)
    {
      v31 = 0;
      while (1)
      {
        v31 += 32;
        if (v31 >= v29)
          goto LABEL_57;
        v56 = v27[1];
        ++v27;
        v30 = v56;
        if (v56)
          goto LABEL_56;
      }
    }
    v31 = 0;
LABEL_56:
    v57 = __clz(__rbit32(v30));
    v58 = v57 | v31;
    if ((v57 | v31) == (_DWORD)v29)
    {
LABEL_57:
      v26 = 0;
      goto LABEL_58;
    }
    v85 = v30 >> v57;
    do
    {
      v26 = *(_QWORD *)(v28 + 8 * v58);
      if (*(_BYTE *)(*(_QWORD *)v26 + 31))
        break;
      if (v85 <= 1)
      {
        while (1)
        {
          v31 += 32;
          if (v31 >= v29)
            goto LABEL_57;
          v87 = v27[1];
          ++v27;
          v86 = v87;
          if (v87)
          {
            v88 = v31;
            goto LABEL_114;
          }
        }
      }
      v88 = v58 + 1;
      v86 = v85 >> 1;
LABEL_114:
      v26 = 0;
      v89 = __clz(__rbit32(v86));
      v58 = v89 + v88;
      v85 = v86 >> v89;
    }
    while (v58 != (_DWORD)v29);
  }
LABEL_58:
  if (v23 && (v59 = a1[4], *(_QWORD *)(v59 + 8 * v23 + 96)))
  {
    if ((*(_BYTE *)(a3 + 26) & 4) != 0)
    {
      v60 = 1;
    }
    else if (v26)
    {
      v60 = (*(uint64_t (**)(_QWORD, unint64_t))(*(_QWORD *)a1[3] + 120))(a1[3], v26);
    }
    else
    {
      v60 = 0;
    }
    v61 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v59 + 424))(v59, v23, v60);
  }
  else
  {
    v61 = 0;
  }
  if (v61 != v26 && v26 && v61 && v22 < 0)
  {
    v62 = a1[1];
    IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v62, "", 0);
    *(_QWORD *)(*(_QWORD *)(v62 + 24) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v26 & 0xFFFFFFFFFFFFFFFBLL;
    v64 = *(_QWORD *)(v62 + 8);
    if (v64)
      (*(void (**)(uint64_t))(*(_QWORD *)v64 + 24))(v64);
    v66 = a1[5];
    v65 = (unint64_t *)a1[6];
    v67 = *(_QWORD *)(a1[2] + 8);
    v68 = *(llvm::MachineFunction **)(v66 + 32);
    v69 = *(unsigned __int8 **)(a3 + 64);
    v90 = v69;
    if (v69)
      llvm::MetadataTracking::track((uint64_t)&v90, v69, 2);
    v70 = v67 + 912;
    v71 = *((_QWORD *)v68 + 28);
    if (v71)
      *((_QWORD *)v68 + 28) = *(_QWORD *)v71;
    else
      v71 = sub_1C484358C((uint64_t)v68 + 128, 72, 3);
    v91 = (uint64_t)v90;
    if (v90)
    {
      llvm::MetadataTracking::retrack((uint64_t)&v90, v90, (uint64_t)&v91);
      v90 = 0;
    }
    llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v71, v68, v70, (unsigned __int8 **)&v91, 0);
    if (v91)
      llvm::MetadataTracking::untrack((uint64_t)&v91, (unsigned __int8 *)v91);
    if (v90)
      llvm::MetadataTracking::untrack((uint64_t)&v90, v90);
    v72 = *(_QWORD *)(v66 + 40);
    *(_QWORD *)(v71 + 24) = v72;
    v73 = *(_QWORD *)(v72 + 32);
    v74 = *(unsigned int *)(v71 + 40);
    if ((_DWORD)v74)
    {
      v78 = *(_QWORD *)(v71 + 32);
      v79 = *(_QWORD *)(v73 + 40);
      v80 = 32 * v74;
      do
      {
        if (!*(_BYTE *)v78)
        {
          v81 = *(unsigned int *)(v78 + 4);
          if ((int)v81 >= 0)
            v82 = (uint64_t *)(*(_QWORD *)(v79 + 272) + 8 * v81);
          else
            v82 = (uint64_t *)(*(_QWORD *)(v79 + 24) + 16 * (v81 & 0x7FFFFFFF) + 8);
          v83 = *v82;
          if (*v82)
          {
            v84 = *(_QWORD *)(v83 + 16);
            *(_QWORD *)(v83 + 16) = v78;
            *(_QWORD *)(v78 + 16) = v84;
            if ((*(_BYTE *)(v78 + 3) & 1) != 0)
            {
              *(_QWORD *)(v78 + 24) = v83;
            }
            else
            {
              *(_QWORD *)(v78 + 24) = 0;
              v82 = (uint64_t *)(v84 + 24);
            }
          }
          else
          {
            *(_QWORD *)(v78 + 16) = v78;
            *(_QWORD *)(v78 + 24) = 0;
          }
          *v82 = v78;
        }
        v78 += 32;
        v80 -= 32;
      }
      while (v80);
    }
    v75 = *(_QWORD *)(v73 + 728);
    if (v75)
      (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v75 + 24))(v75, v71);
    v76 = *v65 & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v71 = v76 | *(_QWORD *)v71 & 7;
    *(_QWORD *)(v71 + 8) = v65;
    *(_QWORD *)(v76 + 8) = v71;
    *v65 = *v65 & 7 | v71;
    v92 = 0;
    v93 = 0;
    v94 = 0;
    LODWORD(v91) = 0x1000000;
    HIDWORD(v91) = IncompleteVirtualRegister;
    llvm::MachineInstr::addOperand((llvm::MachineInstr *)v71, v68, (const llvm::MachineOperand *)&v91);
    v92 = 0;
    v93 = 0;
    LODWORD(v91) = 0;
    HIDWORD(v91) = v22;
    v94 = 0;
    llvm::MachineInstr::addOperand((llvm::MachineInstr *)v71, v68, (const llvm::MachineOperand *)&v91);
    if (!a6)
      goto LABEL_91;
  }
  else
  {
    IncompleteVirtualRegister = v22;
    if (!a6)
      goto LABEL_91;
  }
  if (*(unsigned __int16 *)(a6 + 2) <= v11)
  {
    v77 = ~(2 * *(_DWORD *)(a6 + 8)) & 4;
    goto LABEL_93;
  }
LABEL_91:
  v77 = 0;
LABEL_93:
  sub_1C47BF4F4((llvm::MachineFunction **)a2, IncompleteVirtualRegister, v77, 0);
}

void sub_1C5CCA848(_QWORD *a1, llvm::MachineFunction **a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  int v12;
  BOOL v13;
  BOOL v14;
  llvm::MachineInstr *v15;
  llvm::MachineFunction *v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  if (a5)
  {
    v9 = 24 * a5;
    v10 = (_DWORD *)(a4 + 8);
    while (1)
    {
      switch(*(v10 - 2))
      {
        case 0:
          v21 = v10[2];
          v23 = *(_QWORD *)v10;
          LODWORD(v24) = v21;
          *(_QWORD *)&v25 = 0;
          if ((sub_1C632C56C(a6, (uint64_t)&v23, (uint64_t *)&v25) & 1) == 0)
          {
            v16 = *a2;
            v15 = a2[1];
            goto LABEL_28;
          }
          sub_1C5CCA138(a1, (uint64_t)a2, v23, v24, *((unsigned int *)a2[1] + 10), a3, (uint64_t)a6, 1, 0, 0);
          goto LABEL_23;
        case 1:
          v11 = *(_QWORD *)v10;
          v12 = *(unsigned __int8 *)(*(_QWORD *)v10 + 16);
          if (*(_QWORD *)v10)
            v13 = v12 == 16;
          else
            v13 = 0;
          if (v13)
          {
            v19 = *(_DWORD *)(v11 + 32);
            if (v19 >= 0x41)
            {
              v16 = *a2;
              v15 = a2[1];
              v20 = 2;
              goto LABEL_19;
            }
            v11 = (uint64_t)(*(_QWORD *)(v11 + 24) << -(char)v19) >> -(char)v19;
            v16 = *a2;
            v15 = a2[1];
            LODWORD(v25) = 1;
LABEL_21:
            *((_QWORD *)&v25 + 1) = 0;
            *(_QWORD *)&v26 = v11;
            goto LABEL_22;
          }
          if (v11)
            v14 = v12 == 17;
          else
            v14 = 0;
          if (v14)
          {
            v16 = *a2;
            v15 = a2[1];
            v20 = 3;
LABEL_19:
            LODWORD(v25) = v20;
            goto LABEL_21;
          }
          v16 = *a2;
          v15 = a2[1];
          if (v12 == 19)
          {
            LODWORD(v25) = 1;
            *((_QWORD *)&v25 + 1) = 0;
            *(_QWORD *)&v26 = 0;
          }
          else
          {
LABEL_28:
            v25 = 0u;
            v26 = 0u;
          }
LABEL_22:
          llvm::MachineInstr::addOperand(v15, v16, (const llvm::MachineOperand *)&v25);
LABEL_23:
          v10 += 6;
          v9 -= 24;
          if (!v9)
            return;
          break;
        case 2:
          v17 = *v10;
          v16 = *a2;
          v15 = a2[1];
          LODWORD(v25) = 5;
          *((_QWORD *)&v25 + 1) = 0;
          LODWORD(v26) = v17;
          goto LABEL_22;
        case 3:
          v18 = *v10;
          v16 = *a2;
          v15 = a2[1];
          *((_QWORD *)&v25 + 1) = 0;
          LODWORD(v25) = 0;
          DWORD1(v25) = v18;
          v26 = 0uLL;
          goto LABEL_22;
        default:
          goto LABEL_23;
      }
    }
  }
}

llvm::MachineInstr *sub_1C5CCAA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int *v6;
  int v7;
  unsigned __int8 *v8;
  int v9;
  llvm::MDNode *v10;
  llvm::MDNode *v11;
  unsigned __int8 *v12;
  llvm::MachineInstr *v13;
  llvm::MachineInstr *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  llvm::MachineFunction *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  unsigned __int8 *v29;
  _BYTE *v31;
  unsigned int v32;
  uint64_t *v33;
  uint64_t v34;
  unsigned int v35;
  uint64_t v36;
  _DWORD *v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 **v42;
  unsigned __int8 *v43;
  uint64_t v44;
  unsigned __int8 *v45;
  unsigned __int8 *v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;

  v6 = *(int **)(a2 + 8);
  v7 = *v6;
  v8 = (unsigned __int8 *)*((_QWORD *)v6 + 1);
  v9 = v6[4];
  v11 = *(llvm::MDNode **)(a2 + 32);
  v10 = *(llvm::MDNode **)(a2 + 40);
  v12 = *(unsigned __int8 **)(a2 + 48);
  v45 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v45, v12, 2);
  if ((v7 - 1) <= 1)
  {
    v13 = sub_1C5CCAFB4((llvm::MachineFunction **)a1, a2, (uint64_t *)a3);
LABEL_5:
    v14 = v13;
    goto LABEL_46;
  }
  v15 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8) + 720;
  if (*(_BYTE *)(a2 + 60))
  {
    v31 = operator new(8uLL);
    *(_QWORD *)v31 = 6;
    v10 = llvm::DIExpression::append(v10, v31, 1);
    operator delete(v31);
  }
  if (v7 != 3)
  {
    v43 = v8;
    LODWORD(v44) = v9;
    v46 = 0;
    if (!sub_1C632C56C((uint64_t *)a3, (uint64_t)&v43, (uint64_t *)&v46)
      || v46 == (unsigned __int8 *)(*(_QWORD *)a3 + 24 * *(unsigned int *)(a3 + 16)))
    {
      v13 = sub_1C632C378(a1, (_QWORD *)a2);
      goto LABEL_5;
    }
    v32 = sub_1C632C13C(a1, (uint64_t)v43, v44, a3);
    LODWORD(v8) = v32;
    v16 = *(_QWORD *)(a1 + 8);
    v17 = v32;
    if ((v32 & 0x80000000) != 0)
      v33 = (uint64_t *)(*(_QWORD *)(v16 + 24) + 16 * (v32 & 0x7FFFFFFF) + 8);
    else
      v33 = (uint64_t *)(*(_QWORD *)(v16 + 272) + 8 * v32);
    v40 = *v33;
    if (!v40
      || (*(_BYTE *)(v40 + 3) & 1) == 0 && ((v40 = *(_QWORD *)(v40 + 24)) == 0 || (*(_BYTE *)(v40 + 3) & 1) == 0)
      || (v41 = *(_QWORD *)(v40 + 24)) != 0 && (*(_BYTE *)(v41 + 3) & 1) != 0)
    {
      v22 = *(llvm::MachineFunction **)a1;
      v50 = v45;
      if (v45)
        llvm::MetadataTracking::track((uint64_t)&v50, v45, 2);
      v14 = (llvm::MachineInstr *)*((_QWORD *)v22 + 28);
      if (v14)
        *((_QWORD *)v22 + 28) = *(_QWORD *)v14;
      else
        v14 = (llvm::MachineInstr *)sub_1C484358C((uint64_t)v22 + 128, 72, 3);
      v46 = v50;
      if (v50)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v50, v50, (uint64_t)&v46);
        v50 = 0;
      }
      llvm::MachineInstr::MachineInstr(v14, v22, v15, &v46, 0);
      if (v46)
        llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
      v29 = v50;
      if (!v50)
        goto LABEL_44;
      v42 = &v50;
      goto LABEL_96;
    }
    if ((v32 & 0x80000000) == 0)
      goto LABEL_19;
    v24 = v32 & 0x7FFFFFFF;
    goto LABEL_22;
  }
  v16 = *(_QWORD *)(a1 + 8);
  v17 = v8;
  if ((v8 & 0x80000000) != 0)
    v18 = (uint64_t *)(*(_QWORD *)(v16 + 24) + 16 * (v8 & 0x7FFFFFFF) + 8);
  else
    v18 = (uint64_t *)(*(_QWORD *)(v16 + 272) + 8 * v8);
  v19 = *v18;
  if (v19)
  {
    if ((*(_BYTE *)(v19 + 3) & 1) != 0 || (v19 = *(_QWORD *)(v19 + 24)) != 0 && (*(_BYTE *)(v19 + 3) & 1) != 0)
    {
      v20 = *(_QWORD *)(v19 + 24);
      if (!v20 || (*(_BYTE *)(v20 + 3) & 1) == 0)
      {
        if ((v8 & 0x80000000) == 0)
        {
LABEL_19:
          v21 = (uint64_t *)(*(_QWORD *)(v16 + 272) + 8 * v17);
          goto LABEL_23;
        }
        v24 = v8 & 0x7FFFFFFF;
LABEL_22:
        v21 = (uint64_t *)(*(_QWORD *)(v16 + 24) + 16 * v24 + 8);
LABEL_23:
        v25 = *v21;
        if ((*(_BYTE *)(v25 + 3) & 1) == 0)
        {
          v25 = *(_QWORD *)(v25 + 24);
          if ((*(_BYTE *)(v25 + 3) & 1) == 0)
            v25 = 0;
        }
        v26 = *(_QWORD *)(v25 + 8);
        v27 = **(unsigned __int16 **)(v26 + 16);
        if (v27 == 11 || v27 == 19)
        {
          v23 = v45;
        }
        else
        {
          (*(void (**)(unsigned __int8 **__return_ptr, _QWORD, uint64_t))(**(_QWORD **)(a1 + 16) + 416))(&v46, *(_QWORD *)(a1 + 16), v26);
          v23 = v45;
          if (!(_BYTE)v48)
          {
            v22 = *(llvm::MachineFunction **)a1;
            v43 = v45;
            if (v45)
              llvm::MetadataTracking::track((uint64_t)&v43, v45, 2);
            v14 = (llvm::MachineInstr *)*((_QWORD *)v22 + 28);
            if (v14)
              *((_QWORD *)v22 + 28) = *(_QWORD *)v14;
            else
              v14 = (llvm::MachineInstr *)sub_1C484358C((uint64_t)v22 + 128, 72, 3);
            v46 = v43;
            if (v43)
            {
              llvm::MetadataTracking::retrack((uint64_t)&v43, v43, (uint64_t)&v46);
              v43 = 0;
            }
            llvm::MachineInstr::MachineInstr(v14, v22, v15, &v46, 0);
            if (v46)
              llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
            if (v43)
              llvm::MetadataTracking::untrack((uint64_t)&v43, v43);
            v34 = *(unsigned int *)(v26 + 40);
            if ((_DWORD)v34)
            {
              v35 = 0;
              v36 = 32 * v34;
              v37 = (_DWORD *)(*(_QWORD *)(v26 + 32) + 4);
              while ((*(v37 - 1) & 0x10000FF) != 0x1000000 || *v37 != (_DWORD)v8)
              {
                ++v35;
                v37 += 8;
                v36 -= 32;
                if (!v36)
                {
                  v35 = *(_DWORD *)(v26 + 40);
                  break;
                }
              }
            }
            else
            {
              v35 = 0;
            }
            v38 = *(_DWORD *)(v26 + 64);
            if (!v38)
            {
              v39 = *(_QWORD *)(*(_QWORD *)(v26 + 24) + 32);
              v38 = *(_DWORD *)(v39 + 912) + 1;
              *(_DWORD *)(v39 + 912) = v38;
              *(_DWORD *)(v26 + 64) = v38;
            }
            LODWORD(v46) = 1;
            v47 = 0;
            v48 = v38;
            llvm::MachineInstr::addOperand(v14, v22, (const llvm::MachineOperand *)&v46);
            LODWORD(v46) = 1;
            v47 = 0;
            v48 = v35;
            goto LABEL_45;
          }
        }
        v22 = *(llvm::MachineFunction **)a1;
        goto LABEL_34;
      }
    }
  }
  v22 = *(llvm::MachineFunction **)a1;
  v23 = v45;
LABEL_34:
  v43 = v23;
  if (v23)
    llvm::MetadataTracking::track((uint64_t)&v43, v23, 2);
  v14 = (llvm::MachineInstr *)*((_QWORD *)v22 + 28);
  if (v14)
    *((_QWORD *)v22 + 28) = *(_QWORD *)v14;
  else
    v14 = (llvm::MachineInstr *)sub_1C484358C((uint64_t)v22 + 128, 72, 3);
  v46 = v43;
  if (v43)
  {
    llvm::MetadataTracking::retrack((uint64_t)&v43, v43, (uint64_t)&v46);
    v43 = 0;
  }
  llvm::MachineInstr::MachineInstr(v14, v22, v15, &v46, 0);
  if (v46)
    llvm::MetadataTracking::untrack((uint64_t)&v46, v46);
  v29 = v43;
  if (!v43)
    goto LABEL_44;
  v42 = &v43;
LABEL_96:
  llvm::MetadataTracking::untrack((uint64_t)v42, v29);
LABEL_44:
  v47 = 0;
  v48 = 0;
  LODWORD(v46) = 0;
  HIDWORD(v46) = (_DWORD)v8;
  v49 = 0;
  llvm::MachineInstr::addOperand(v14, v22, (const llvm::MachineOperand *)&v46);
  LODWORD(v46) = 1;
  v47 = 0;
  v48 = 0;
LABEL_45:
  llvm::MachineInstr::addOperand(v14, v22, (const llvm::MachineOperand *)&v46);
  LODWORD(v46) = 14;
  v47 = 0;
  v48 = (unint64_t)v11;
  llvm::MachineInstr::addOperand(v14, v22, (const llvm::MachineOperand *)&v46);
  LODWORD(v46) = 14;
  v47 = 0;
  v48 = (unint64_t)v10;
  llvm::MachineInstr::addOperand(v14, v22, (const llvm::MachineOperand *)&v46);
LABEL_46:
  if (v45)
    llvm::MetadataTracking::untrack((uint64_t)&v45, v45);
  return v14;
}

llvm::MachineInstr *sub_1C5CCAFB4(llvm::MachineFunction **a1, uint64_t a2, uint64_t *a3)
{
  llvm::DIExpression *v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  llvm::MachineFunction *v14;
  uint64_t v15;
  llvm::MachineInstr *v16;
  llvm::MachineInstr *v17;
  llvm::MachineFunction *v19;
  llvm::MachineInstr *v20;
  llvm::MachineFunction *v21;
  __int128 v22;
  __int128 v23;
  void *v24;
  unsigned int v25;
  int v26;
  llvm::ConstantInt *v27[2];
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x1E0C80C00];
  v7 = *(_QWORD *)(a2 + 32);
  v6 = *(llvm::DIExpression **)(a2 + 40);
  v8 = *(unsigned __int8 **)(a2 + 48);
  v21 = (llvm::MachineFunction *)v8;
  if (v8)
    llvm::MetadataTracking::track((uint64_t)&v21, v8, 2);
  v9 = *((_QWORD *)a1[2] + 1);
  v10 = *(_QWORD *)(a2 + 8);
  v24 = v27;
  v26 = 1;
  v11 = *(_QWORD *)(v10 + 16);
  *(_OWORD *)v27 = *(_OWORD *)v10;
  v28 = v11;
  v25 = 1;
  if (v6 && LODWORD(v27[0]) == 1 && v27[1] && *((_BYTE *)v27[1] + 16) == 16)
  {
    v6 = llvm::DIExpression::constantFold(v6, (const void **)v27[1]);
    v12 = v24;
    *(_DWORD *)v24 = 1;
    v12[1] = v13;
  }
  v14 = *a1;
  v19 = v21;
  if (v21)
    llvm::MetadataTracking::track((uint64_t)&v19, (unsigned __int8 *)v21, 2);
  v15 = v9 + 624;
  v16 = (llvm::MachineInstr *)*((_QWORD *)v14 + 28);
  if (v16)
    *((_QWORD *)v14 + 28) = *(_QWORD *)v16;
  else
    v16 = (llvm::MachineInstr *)sub_1C484358C((uint64_t)v14 + 128, 72, 3);
  *(_QWORD *)&v22 = v19;
  if (v19)
  {
    llvm::MetadataTracking::retrack((uint64_t)&v19, (unsigned __int8 *)v19, (uint64_t)&v22);
    v19 = 0;
  }
  llvm::MachineInstr::MachineInstr(v16, v14, v15, (unsigned __int8 **)&v22, 0);
  if ((_QWORD)v22)
    llvm::MetadataTracking::untrack((uint64_t)&v22, (unsigned __int8 *)v22);
  if (v19)
    llvm::MetadataTracking::untrack((uint64_t)&v19, (unsigned __int8 *)v19);
  v19 = v14;
  v20 = v16;
  sub_1C5CCA848(a1, &v19, v15, (uint64_t)v24, v25, a3);
  if (*(_BYTE *)(a2 + 60))
  {
    LODWORD(v22) = 1;
    *((_QWORD *)&v22 + 1) = 0;
    *(_QWORD *)&v23 = 0;
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  llvm::MachineInstr::addOperand(v20, v19, (const llvm::MachineOperand *)&v22);
  LODWORD(v22) = 14;
  *((_QWORD *)&v22 + 1) = 0;
  *(_QWORD *)&v23 = v7;
  llvm::MachineInstr::addOperand(v20, v19, (const llvm::MachineOperand *)&v22);
  LODWORD(v22) = 14;
  *((_QWORD *)&v22 + 1) = 0;
  *(_QWORD *)&v23 = v6;
  llvm::MachineInstr::addOperand(v20, v19, (const llvm::MachineOperand *)&v22);
  v17 = v20;
  if (v24 != v27)
    free(v24);
  if (v21)
    llvm::MetadataTracking::untrack((uint64_t)&v21, (unsigned __int8 *)v21);
  return v17;
}

void sub_1C5CCB208(uint64_t a1, uint64_t a2, int a3, char a4, uint64_t a5)
{
  uint64_t v5;
  llvm::MachineFunction **v7;
  int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  unsigned __int8 *v17;
  unsigned int v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char v27;
  llvm::MachineFunction *v28;
  unsigned __int8 *v29;
  llvm::MachineInstr *v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  llvm::MachineFunction *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  llvm::MachineFunction *v43;
  uint64_t v44;
  uint64_t CommonSubClass;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unsigned __int8 *v52;
  unsigned int *v53;
  uint64_t v54;
  unint64_t v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  llvm::MachineInstr *v66;
  __int16 v67;
  unsigned int v68;
  uint64_t v69;
  unsigned int v70;
  int v71;
  int v72;
  uint64_t *v73;
  int v74;
  unsigned int v75;
  int v76;
  uint64_t v77;
  unsigned int v78;
  int v79;
  _QWORD *v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  unsigned int v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  unsigned int IncompleteVirtualRegister;
  uint64_t v105;
  _QWORD *v106;
  uint64_t v107;
  uint64_t *v108;
  uint64_t v109;
  unsigned int v110;
  uint64_t i;
  int v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  unsigned __int16 *v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  BOOL v121;
  int v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t v125;
  _QWORD *v126;
  int v127;
  uint64_t v128;
  unsigned int v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  llvm::MachineFunction *v134;
  unsigned int v135;
  int v136;
  uint64_t v137;
  int v138;
  uint64_t v139;
  unsigned int *v140;
  uint64_t v141;
  llvm::MachineFunction *v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  unsigned int v146;
  uint64_t v147;
  unint64_t *v148;
  llvm::MachineFunction *v149;
  uint64_t v150;
  llvm::MachineFunction *v151;
  unsigned __int8 *v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  unsigned int *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  int v165;
  unsigned int *v166;
  uint64_t v167;
  llvm::MachineInstr *v168;
  uint64_t v169;
  unsigned int v170;
  int v171;
  uint64_t v172;
  unsigned int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  unsigned int v181;
  char v182;
  int v183;
  uint64_t v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  BOOL v191;
  uint64_t v192;
  uint64_t v193;
  unsigned int *v194;
  uint64_t v195;
  unint64_t v196;
  uint64_t v197;
  BOOL v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  unint64_t v204;
  unsigned int NumGCPtrIdx;
  unsigned int v206;
  uint64_t NextMetaArgIdx;
  uint64_t v208;
  unsigned int *v209;
  unsigned int v210;
  int v211;
  unsigned int v212;
  int v213;
  llvm::MachineFunction *v214;
  llvm::MachineInstr *v215;
  uint64_t v216;
  _QWORD *v217;
  char v218;
  _QWORD *v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  char v223;
  llvm::MachineFunction *v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  unint64_t v231;
  llvm::MachineFunction *v232;
  uint64_t *v233;
  uint64_t v234;
  uint64_t v235;
  unsigned int v236;
  unint64_t v237;
  uint64_t v238;
  llvm::MachineFunction *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  unint64_t *v244;
  llvm::MachineFunction *v245;
  uint64_t v246;
  llvm::MachineFunction *v247;
  unsigned __int8 *v248;
  uint64_t v249;
  unint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  unint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  unint64_t v260;
  uint64_t v261;
  uint64_t v262;
  unint64_t *v263;
  llvm::MachineFunction *v264;
  uint64_t v265;
  llvm::MachineFunction *v266;
  unsigned __int8 *v267;
  uint64_t v268;
  unint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;
  llvm::MachineFunction *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  int v279;
  unsigned __int16 *v280;
  unsigned __int16 *v281;
  int v282;
  int v283;
  int v284;
  int v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  unsigned __int8 *v315;
  BOOL v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  unsigned int *v327;
  unint64_t v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int *v332;
  unint64_t v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  uint64_t v337;
  llvm::MachineFunction *v339;
  uint64_t v340;
  unint64_t *v341;
  uint64_t v342;
  uint64_t v343;
  llvm::MachineFunction *v344;
  unsigned __int8 *v345;
  uint64_t v346;
  unint64_t v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  unint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t *v371;
  uint64_t v372;
  uint64_t v373;
  int v374;
  _WORD *v375;
  char v376;
  int v377;
  uint64_t v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  uint64_t v382;
  unsigned int v383;
  uint64_t v384;
  _QWORD *v385;
  uint64_t v386;
  unint64_t v387;
  unsigned int v390;
  uint64_t v393;
  uint64_t v394;
  llvm::MachineFunction *v395;
  llvm::MachineInstr *v396;
  int v397;
  __int128 v398;
  _DWORD v399[4];
  __int128 v400;
  unsigned __int8 *v401;
  uint64_t v402;
  _QWORD *v403;
  uint64_t v404;
  uint64_t v405;

  v5 = a5;
  v7 = (llvm::MachineFunction **)a1;
  v405 = *MEMORY[0x1E0C80C00];
  v8 = *(unsigned __int16 *)(a2 + 24);
  v9 = (__int16)~(_WORD)v8;
  switch(~(_WORD)v8)
  {
    case 8:
    case 9:
    case 11:
      v101 = *(_QWORD *)(a2 + 48);
      if (!v101)
        goto LABEL_186;
      do
      {
        v102 = *(_QWORD *)(v101 + 16);
        if (*(_WORD *)(v102 + 24) == 49)
        {
          v103 = *(_QWORD *)(v102 + 32);
          if (*(_QWORD *)(v103 + 80) == a2)
          {
            IncompleteVirtualRegister = *(_DWORD *)(*(_QWORD *)(v103 + 40) + 76);
            if ((IncompleteVirtualRegister & 0x80000000) != 0)
              goto LABEL_187;
          }
        }
        v101 = *(_QWORD *)(v101 + 32);
      }
      while (v101);
LABEL_186:
      IncompleteVirtualRegister = 0;
LABEL_187:
      if (v8 != 65527)
      {
        v124 = *(uint64_t **)(a2 + 32);
        v125 = *(_QWORD *)(v124[10] + 80);
        v126 = (_QWORD *)(v125 + 24);
        v127 = *(unsigned __int16 *)(a2 + 24);
        if (*(_DWORD *)(v125 + 32) >= 0x41u)
          v126 = (_QWORD *)*v126;
        v128 = *v124;
        v386 = v124[5];
        v382 = v124[1];
        v384 = v124[6];
        v129 = (__int16)~(_WORD)v8;
        v130 = (_QWORD *)*v126;
        v393 = *v126;
        v131 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(a1 + 32) + 424))(*(_QWORD *)(a1 + 32), **(unsigned __int8 **)(a2 + 40), (*(unsigned __int8 *)(a2 + 26) >> 2) & 1);
        v132 = (*(uint64_t (**)(llvm::MachineFunction *, uint64_t, _QWORD *))(*(_QWORD *)v7[3] + 200))(v7[3], v131, v130);
        v133 = v132;
        v134 = v7[1];
        if (IncompleteVirtualRegister
          && (v135 = *(unsigned __int16 *)(*(_QWORD *)(*(_QWORD *)(*((_QWORD *)v134 + 3)
                                                                 + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8)
                                         + 24),
              ((*(_DWORD *)(*(_QWORD *)(v132 + 8) + ((v135 >> 3) & 0x1FFCLL)) >> v135) & 1) != 0))
        {
          v136 = IncompleteVirtualRegister;
        }
        else
        {
          IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister((uint64_t)v7[1], "", 0);
          v136 = IncompleteVirtualRegister;
          *(_QWORD *)(*((_QWORD *)v134 + 3) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v133 & 0xFFFFFFFFFFFFFFFBLL;
          v137 = *((_QWORD *)v134 + 1);
          if (v137)
            (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v137 + 24))(v137, IncompleteVirtualRegister);
        }
        v214 = sub_1C62175DC(*v7, (unsigned __int8 **)(a2 + 64), *((_QWORD *)v7[2] + 1) + 48 * v129, v136);
        *(_QWORD *)&v398 = v214;
        *((_QWORD *)&v398 + 1) = v215;
        if (v127 == 65524)
        {
          v216 = *(_QWORD *)(v128 + 80);
          v217 = (_QWORD *)(v216 + 24);
          v5 = a5;
          v218 = a3;
          if (*(_DWORD *)(v216 + 32) >= 0x41u)
            v217 = (_QWORD *)*v217;
          v219 = (_QWORD *)v393;
          v221 = v384;
          v220 = v386;
          v222 = (_QWORD *)*v217;
          LODWORD(v401) = 1;
          v402 = 0;
          v403 = v222;
          llvm::MachineInstr::addOperand(v215, v214, (const llvm::MachineOperand *)&v401);
          v223 = a4;
        }
        else
        {
          v218 = a3;
          v223 = a4;
          v5 = a5;
          sub_1C5CCA138(v7, (uint64_t)&v398, v128, v382, 0, 0, a5, 0, a3, a4);
          v219 = (_QWORD *)v393;
          v221 = v384;
          v220 = v386;
        }
        sub_1C5CCA138(v7, (uint64_t)&v398, v220, v221, 0, 0, v5, 0, v218, v223);
        LODWORD(v401) = 1;
        v402 = 0;
        v403 = v219;
        llvm::MachineInstr::addOperand(*((llvm::MachineInstr **)&v398 + 1), (llvm::MachineFunction *)v398, (const llvm::MachineOperand *)&v401);
        v224 = v7[5];
        v225 = (uint64_t *)v7[6];
        v226 = *((_QWORD *)&v398 + 1);
        v227 = *((_QWORD *)v224 + 5);
        *(_QWORD *)(*((_QWORD *)&v398 + 1) + 24) = v227;
        v228 = *(_QWORD *)(v227 + 32);
        v229 = *(unsigned int *)(v226 + 40);
        if ((_DWORD)v229)
        {
          v286 = *(_QWORD *)(v226 + 32);
          v287 = *(_QWORD *)(v228 + 40);
          v288 = 32 * v229;
          do
          {
            if (!*(_BYTE *)v286)
            {
              v289 = *(unsigned int *)(v286 + 4);
              if ((int)v289 >= 0)
                v290 = (uint64_t *)(*(_QWORD *)(v287 + 272) + 8 * v289);
              else
                v290 = (uint64_t *)(*(_QWORD *)(v287 + 24) + 16 * (v289 & 0x7FFFFFFF) + 8);
              v291 = *v290;
              if (*v290)
              {
                v292 = *(_QWORD *)(v291 + 16);
                *(_QWORD *)(v291 + 16) = v286;
                *(_QWORD *)(v286 + 16) = v292;
                if ((*(_BYTE *)(v286 + 3) & 1) != 0)
                {
                  *(_QWORD *)(v286 + 24) = v291;
                }
                else
                {
                  *(_QWORD *)(v286 + 24) = 0;
                  v290 = (uint64_t *)(v292 + 24);
                }
              }
              else
              {
                *(_QWORD *)(v286 + 16) = v286;
                *(_QWORD *)(v286 + 24) = 0;
              }
              *v290 = v286;
            }
            v286 += 32;
            v288 -= 32;
          }
          while (v288);
        }
        v230 = *(_QWORD *)(v228 + 728);
        if (v230)
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v230 + 24))(v230, v226);
        v231 = *v225 & 0xFFFFFFFFFFFFFFF8;
        *(_QWORD *)v226 = v231 | *(_QWORD *)v226 & 7;
        *(_QWORD *)(v226 + 8) = v225;
        *(_QWORD *)(v231 + 8) = v226;
        *v225 = *v225 & 7 | v226;
        goto LABEL_391;
      }
      v105 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 80);
      v106 = (_QWORD *)(v105 + 24);
      if (*(_DWORD *)(v105 + 32) >= 0x41u)
        v106 = (_QWORD *)*v106;
      v390 = *(_DWORD *)v106;
      v107 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(**(_QWORD **)(a1 + 32) + 424))(*(_QWORD *)(a1 + 32), **(unsigned __int8 **)(a2 + 40), (*(unsigned __int8 *)(a2 + 26) >> 2) & 1);
      v108 = *(uint64_t **)(a2 + 32);
      v109 = *v108;
      if (*v108 && *(_WORD *)(v109 + 24) == 9)
      {
        v110 = *(_DWORD *)(v109 + 76);
        if (v110 - 1 <= 0x3FFFFFFE)
        {
          LODWORD(v400) = 0;
          LODWORD(v395) = 0;
          v397 = 0;
LABEL_364:
          if (!IncompleteVirtualRegister)
          {
            v261 = (uint64_t)v7[1];
            IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v261, "", 0);
            *(_QWORD *)(*(_QWORD *)(v261 + 24) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v107 & 0xFFFFFFFFFFFFFFFBLL;
            v262 = *(_QWORD *)(v261 + 8);
            if (v262)
              (*(void (**)(uint64_t))(*(_QWORD *)v262 + 24))(v262);
          }
          v264 = v7[5];
          v263 = (unint64_t *)v7[6];
          v265 = *((_QWORD *)v7[2] + 1);
          v266 = (llvm::MachineFunction *)*((_QWORD *)v264 + 4);
          v267 = *(unsigned __int8 **)(a2 + 64);
          *(_QWORD *)&v398 = v267;
          if (v267)
            llvm::MetadataTracking::track((uint64_t)&v398, v267, 2);
          v268 = v265 + 912;
          v269 = *((_QWORD *)v266 + 28);
          if (v269)
            *((_QWORD *)v266 + 28) = *(_QWORD *)v269;
          else
            v269 = sub_1C484358C((uint64_t)v266 + 128, 72, 3);
          v401 = (unsigned __int8 *)v398;
          if ((_QWORD)v398)
          {
            llvm::MetadataTracking::retrack((uint64_t)&v398, (unsigned __int8 *)v398, (uint64_t)&v401);
            *(_QWORD *)&v398 = 0;
          }
          llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v269, v266, v268, &v401, 0);
          if (v401)
            llvm::MetadataTracking::untrack((uint64_t)&v401, v401);
          if ((_QWORD)v398)
            llvm::MetadataTracking::untrack((uint64_t)&v398, (unsigned __int8 *)v398);
          v270 = *((_QWORD *)v264 + 5);
          *(_QWORD *)(v269 + 24) = v270;
          v271 = *(_QWORD *)(v270 + 32);
          v272 = *(unsigned int *)(v269 + 40);
          if ((_DWORD)v272)
          {
            v293 = *(_QWORD *)(v269 + 32);
            v294 = *(_QWORD *)(v271 + 40);
            v295 = 32 * v272;
            do
            {
              if (!*(_BYTE *)v293)
              {
                v296 = *(unsigned int *)(v293 + 4);
                if ((int)v296 >= 0)
                  v297 = (uint64_t *)(*(_QWORD *)(v294 + 272) + 8 * v296);
                else
                  v297 = (uint64_t *)(*(_QWORD *)(v294 + 24) + 16 * (v296 & 0x7FFFFFFF) + 8);
                v298 = *v297;
                if (*v297)
                {
                  v299 = *(_QWORD *)(v298 + 16);
                  *(_QWORD *)(v298 + 16) = v293;
                  *(_QWORD *)(v293 + 16) = v299;
                  if ((*(_BYTE *)(v293 + 3) & 1) != 0)
                  {
                    *(_QWORD *)(v293 + 24) = v298;
                  }
                  else
                  {
                    *(_QWORD *)(v293 + 24) = 0;
                    v297 = (uint64_t *)(v299 + 24);
                  }
                }
                else
                {
                  *(_QWORD *)(v293 + 16) = v293;
                  *(_QWORD *)(v293 + 24) = 0;
                }
                *v297 = v293;
              }
              v293 += 32;
              v295 -= 32;
            }
            while (v295);
          }
          v273 = *(_QWORD *)(v271 + 728);
          if (v273)
            (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v273 + 24))(v273, v269);
          v274 = *v263 & 0xFFFFFFFFFFFFFFF8;
          *(_QWORD *)v269 = v274 | *(_QWORD *)v269 & 7;
          *(_QWORD *)(v269 + 8) = v263;
          *(_QWORD *)(v274 + 8) = v269;
          *v263 = *v263 & 7 | v269;
          v402 = 0;
          v403 = 0;
          v404 = 0;
          LODWORD(v401) = 0x1000000;
          HIDWORD(v401) = IncompleteVirtualRegister;
          llvm::MachineInstr::addOperand((llvm::MachineInstr *)v269, v266, (const llvm::MachineOperand *)&v401);
          if ((v110 & 0x80000000) != 0)
          {
            v402 = 0;
            v403 = 0;
            v404 = 0;
            LODWORD(v401) = (v390 & 0xFFF) << 8;
            HIDWORD(v401) = v110;
          }
          else
          {
            v275 = v7[3];
            v276 = *((_QWORD *)v275 + 1);
            v277 = *((_QWORD *)v275 + 7);
            v278 = *(unsigned int *)(v276 + 24 * v110 + 4);
            v279 = *(unsigned __int16 *)(v277 + 2 * v278);
            if (!*(_WORD *)(v277 + 2 * v278))
              goto LABEL_389;
            LOWORD(v279) = v279 + v110;
            v280 = (unsigned __int16 *)(*((_QWORD *)v275 + 11) + 2 * *(unsigned int *)(v276 + 24 * v110 + 12));
            v281 = (unsigned __int16 *)(v277 + 2 * v278 + 2);
            while (*v280 != v390)
            {
              v282 = *v281++;
              LOWORD(v279) = v282 + v279;
              ++v280;
              if (!v282)
              {
                v279 = 0;
                goto LABEL_389;
              }
            }
            v279 = (unsigned __int16)v279;
LABEL_389:
            v402 = 0;
            v403 = 0;
            LODWORD(v401) = 0;
            HIDWORD(v401) = v279;
            v404 = 0;
          }
          llvm::MachineInstr::addOperand((llvm::MachineInstr *)v269, v266, (const llvm::MachineOperand *)&v401);
LABEL_391:
          *(_QWORD *)&v398 = a2;
          DWORD2(v398) = 0;
          v399[0] = IncompleteVirtualRegister;
          goto LABEL_392;
        }
        v181 = *(_DWORD *)(v109 + 76);
      }
      else
      {
        v181 = sub_1C632C13C((uint64_t)v7, v109, v108[1], v5);
      }
      v232 = v7[1];
      if ((v181 & 0x80000000) != 0)
        v233 = (uint64_t *)(*((_QWORD *)v232 + 3) + 16 * (v181 & 0x7FFFFFFF) + 8);
      else
        v233 = (uint64_t *)(*((_QWORD *)v232 + 34) + 8 * v181);
      v234 = *v233;
      if (!v234)
        goto LABEL_328;
      if ((*(_BYTE *)(v234 + 3) & 1) != 0)
      {
        v5 = a5;
        v7 = (llvm::MachineFunction **)a1;
      }
      else
      {
        v234 = *(_QWORD *)(v234 + 24);
        v5 = a5;
        v7 = (llvm::MachineFunction **)a1;
        if (!v234 || (*(_BYTE *)(v234 + 3) & 1) == 0)
        {
LABEL_328:
          LODWORD(v400) = 0;
          LODWORD(v395) = 0;
          v397 = 0;
LABEL_329:
          if ((v181 & 0x80000000) != 0)
          {
            v394 = v107;
            v235 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40)
                                      + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
            v236 = *(unsigned __int8 *)(a2 + 26);
            v237 = *(_QWORD *)(*((_QWORD *)v7[1] + 3) + 16 * (v181 & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8;
            v238 = (*(uint64_t (**)(llvm::MachineFunction *, unint64_t, _QWORD))(*(_QWORD *)v7[3]
                                                                                                + 200))(v7[3], v237, v390);
            if (v238
              && (v238 == v237
               || sub_1C51A3F30(v7[1], v181, *(_QWORD *)(*((_QWORD *)v7[1] + 3) + 16 * (v181 & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8, v238, 4u)))
            {
              v110 = v181;
              v107 = v394;
            }
            else
            {
              v239 = v7[3];
              v240 = (*(uint64_t (**)(llvm::MachineFunction *, uint64_t, _QWORD))(*(_QWORD *)v7[4] + 424))(v7[4], v235, (v236 >> 2) & 1);
              v241 = (*(uint64_t (**)(llvm::MachineFunction *, uint64_t, _QWORD))(*(_QWORD *)v239 + 200))(v239, v240, v390);
              v242 = (uint64_t)v7[1];
              v110 = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v242, "", 0);
              *(_QWORD *)(*(_QWORD *)(v242 + 24) + 16 * (v110 & 0x7FFFFFFF)) = v241 & 0xFFFFFFFFFFFFFFFBLL;
              v243 = *(_QWORD *)(v242 + 8);
              if (v243)
                (*(void (**)(uint64_t))(*(_QWORD *)v243 + 24))(v243);
              v245 = v7[5];
              v244 = (unint64_t *)v7[6];
              v246 = *((_QWORD *)v7[2] + 1);
              v247 = (llvm::MachineFunction *)*((_QWORD *)v245 + 4);
              v248 = *(unsigned __int8 **)(a2 + 64);
              *(_QWORD *)&v398 = v248;
              if (v248)
                llvm::MetadataTracking::track((uint64_t)&v398, v248, 2);
              v249 = v246 + 912;
              v250 = *((_QWORD *)v247 + 28);
              if (v250)
                *((_QWORD *)v247 + 28) = *(_QWORD *)v250;
              else
                v250 = sub_1C484358C((uint64_t)v247 + 128, 72, 3);
              v401 = (unsigned __int8 *)v398;
              if ((_QWORD)v398)
              {
                llvm::MetadataTracking::retrack((uint64_t)&v398, (unsigned __int8 *)v398, (uint64_t)&v401);
                *(_QWORD *)&v398 = 0;
              }
              llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v250, v247, v249, &v401, 0);
              if (v401)
                llvm::MetadataTracking::untrack((uint64_t)&v401, v401);
              if ((_QWORD)v398)
                llvm::MetadataTracking::untrack((uint64_t)&v398, (unsigned __int8 *)v398);
              v256 = *((_QWORD *)v245 + 5);
              *(_QWORD *)(v250 + 24) = v256;
              v257 = *(_QWORD *)(v256 + 32);
              v258 = *(unsigned int *)(v250 + 40);
              v107 = v394;
              if ((_DWORD)v258)
              {
                v319 = *(_QWORD *)(v250 + 32);
                v320 = *(_QWORD *)(v257 + 40);
                v321 = 32 * v258;
                do
                {
                  if (!*(_BYTE *)v319)
                  {
                    v322 = *(unsigned int *)(v319 + 4);
                    if ((int)v322 >= 0)
                      v323 = (uint64_t *)(*(_QWORD *)(v320 + 272) + 8 * v322);
                    else
                      v323 = (uint64_t *)(*(_QWORD *)(v320 + 24) + 16 * (v322 & 0x7FFFFFFF) + 8);
                    v324 = *v323;
                    if (*v323)
                    {
                      v325 = *(_QWORD *)(v324 + 16);
                      *(_QWORD *)(v324 + 16) = v319;
                      *(_QWORD *)(v319 + 16) = v325;
                      if ((*(_BYTE *)(v319 + 3) & 1) != 0)
                      {
                        *(_QWORD *)(v319 + 24) = v324;
                      }
                      else
                      {
                        *(_QWORD *)(v319 + 24) = 0;
                        v323 = (uint64_t *)(v325 + 24);
                      }
                    }
                    else
                    {
                      *(_QWORD *)(v319 + 16) = v319;
                      *(_QWORD *)(v319 + 24) = 0;
                    }
                    *v323 = v319;
                  }
                  v319 += 32;
                  v321 -= 32;
                }
                while (v321);
              }
              v259 = *(_QWORD *)(v257 + 728);
              if (v259)
                (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v259 + 24))(v259, v250);
              v260 = *v244 & 0xFFFFFFFFFFFFFFF8;
              *(_QWORD *)v250 = v260 | *(_QWORD *)v250 & 7;
              *(_QWORD *)(v250 + 8) = v244;
              *(_QWORD *)(v260 + 8) = v250;
              *v244 = *v244 & 7 | v250;
              v402 = 0;
              v403 = 0;
              v404 = 0;
              LODWORD(v401) = 0x1000000;
              HIDWORD(v401) = v110;
              llvm::MachineInstr::addOperand((llvm::MachineInstr *)v250, v247, (const llvm::MachineOperand *)&v401);
              v402 = 0;
              v403 = 0;
              LODWORD(v401) = 0;
              HIDWORD(v401) = v181;
              v404 = 0;
              llvm::MachineInstr::addOperand((llvm::MachineInstr *)v250, v247, (const llvm::MachineOperand *)&v401);
              v5 = a5;
            }
          }
          else
          {
            v110 = v181;
          }
          goto LABEL_364;
        }
      }
      v337 = *(_QWORD *)(v234 + 8);
      LODWORD(v400) = 0;
      LODWORD(v395) = 0;
      v397 = 0;
      if (v337)
      {
        if ((*(unsigned int (**)(llvm::MachineFunction *, uint64_t, __int128 *, llvm::MachineFunction **, int *))(*(_QWORD *)v7[2] + 56))(v7[2], v337, &v400, &v395, &v397)&& v397 == v390)
        {
          v339 = v7[1];
          if (v107 == (*(_QWORD *)(*((_QWORD *)v339 + 3) + 16 * (v400 & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8))
          {
            IncompleteVirtualRegister = llvm::MachineRegisterInfo::createIncompleteVirtualRegister((uint64_t)v7[1], "", 0);
            *(_QWORD *)(*((_QWORD *)v339 + 3) + 16 * (IncompleteVirtualRegister & 0x7FFFFFFF)) = v107 & 0xFFFFFFFFFFFFFFFBLL;
            v340 = *((_QWORD *)v339 + 1);
            if (v340)
              (*(void (**)(uint64_t))(*(_QWORD *)v340 + 24))(v340);
            v342 = *(_QWORD *)(a1 + 40);
            v341 = *(unint64_t **)(a1 + 48);
            v343 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
            v344 = *(llvm::MachineFunction **)(v342 + 32);
            v345 = *(unsigned __int8 **)(a2 + 64);
            *(_QWORD *)&v398 = v345;
            if (v345)
              llvm::MetadataTracking::track((uint64_t)&v398, v345, 2);
            v346 = v343 + 912;
            v347 = *((_QWORD *)v344 + 28);
            if (v347)
              *((_QWORD *)v344 + 28) = *(_QWORD *)v347;
            else
              v347 = sub_1C484358C((uint64_t)v344 + 128, 72, 3);
            v401 = (unsigned __int8 *)v398;
            if ((_QWORD)v398)
            {
              llvm::MetadataTracking::retrack((uint64_t)&v398, (unsigned __int8 *)v398, (uint64_t)&v401);
              *(_QWORD *)&v398 = 0;
            }
            llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v347, v344, v346, &v401, 0);
            if (v401)
              llvm::MetadataTracking::untrack((uint64_t)&v401, v401);
            if ((_QWORD)v398)
              llvm::MetadataTracking::untrack((uint64_t)&v398, (unsigned __int8 *)v398);
            v362 = *(_QWORD *)(v342 + 40);
            *(_QWORD *)(v347 + 24) = v362;
            v363 = *(_QWORD *)(v362 + 32);
            v364 = *(unsigned int *)(v347 + 40);
            if ((_DWORD)v364)
            {
              v367 = *(_QWORD *)(v347 + 32);
              v368 = *(_QWORD *)(v363 + 40);
              v369 = 32 * v364;
              do
              {
                if (!*(_BYTE *)v367)
                {
                  v370 = *(unsigned int *)(v367 + 4);
                  if ((int)v370 >= 0)
                    v371 = (uint64_t *)(*(_QWORD *)(v368 + 272) + 8 * v370);
                  else
                    v371 = (uint64_t *)(*(_QWORD *)(v368 + 24) + 16 * (v370 & 0x7FFFFFFF) + 8);
                  v372 = *v371;
                  if (*v371)
                  {
                    v373 = *(_QWORD *)(v372 + 16);
                    *(_QWORD *)(v372 + 16) = v367;
                    *(_QWORD *)(v367 + 16) = v373;
                    if ((*(_BYTE *)(v367 + 3) & 1) != 0)
                    {
                      *(_QWORD *)(v367 + 24) = v372;
                    }
                    else
                    {
                      *(_QWORD *)(v367 + 24) = 0;
                      v371 = (uint64_t *)(v373 + 24);
                    }
                  }
                  else
                  {
                    *(_QWORD *)(v367 + 16) = v367;
                    *(_QWORD *)(v367 + 24) = 0;
                  }
                  *v371 = v367;
                }
                v367 += 32;
                v369 -= 32;
              }
              while (v369);
            }
            v365 = *(_QWORD *)(v363 + 728);
            if (v365)
              (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v365 + 24))(v365, v347);
            v366 = *v341 & 0xFFFFFFFFFFFFFFF8;
            *(_QWORD *)v347 = v366 | *(_QWORD *)v347 & 7;
            *(_QWORD *)(v347 + 8) = v341;
            *(_QWORD *)(v366 + 8) = v347;
            *v341 = *v341 & 7 | v347;
            v402 = 0;
            v403 = 0;
            v404 = 0;
            LODWORD(v401) = 0x1000000;
            HIDWORD(v401) = IncompleteVirtualRegister;
            llvm::MachineInstr::addOperand((llvm::MachineInstr *)v347, v344, (const llvm::MachineOperand *)&v401);
            v402 = 0;
            v403 = 0;
            LODWORD(v401) = 0;
            HIDWORD(v401) = v400;
            v404 = 0;
            llvm::MachineInstr::addOperand((llvm::MachineInstr *)v347, v344, (const llvm::MachineOperand *)&v401);
            llvm::MachineRegisterInfo::clearKillFlags(*(_QWORD *)(a1 + 8), v400);
            v5 = a5;
            goto LABEL_391;
          }
        }
      }
      goto LABEL_329;
    case 10:
      return;
    case 12:
      v138 = sub_1C632C13C(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), a5);
      v139 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 80);
      v140 = (unsigned int *)(v139 + 24);
      if (*(_DWORD *)(v139 + 32) >= 0x41u)
        v140 = *(unsigned int **)v140;
      v141 = *v140;
      v142 = v7[3];
      v143 = *((_QWORD *)v142 + 30);
      v144 = *(_QWORD *)(v143 + 8 * v141);
      if (!v144 || *(_BYTE *)(*(_QWORD *)v144 + 31))
        goto LABEL_243;
      v327 = *(unsigned int **)(v144 + 8);
      v328 = (unint64_t)(*((_QWORD *)v142 + 31) - v143) >> 3;
      v329 = *v327;
      if (!*v327)
      {
        v330 = 0;
        while (1)
        {
          v330 += 32;
          if (v330 >= v328)
            goto LABEL_518;
          v331 = v327[1];
          ++v327;
          v329 = v331;
          if (v331)
            goto LABEL_517;
        }
      }
      v330 = 0;
LABEL_517:
      v348 = __clz(__rbit32(v329));
      v349 = v348 | v330;
      if ((v348 | v330) == (_DWORD)v328)
      {
LABEL_518:
        v144 = 0;
LABEL_519:
        v5 = a5;
        v7 = (llvm::MachineFunction **)a1;
        goto LABEL_243;
      }
      v352 = v329 >> v348;
      v5 = a5;
      v7 = (llvm::MachineFunction **)a1;
      do
      {
        v144 = *(_QWORD *)(v143 + 8 * v349);
        if (*(_BYTE *)(*(_QWORD *)v144 + 31))
          goto LABEL_519;
        if (v352 > 1)
        {
          v355 = v349 + 1;
          v353 = v352 >> 1;
        }
        else
        {
          do
          {
            v330 += 32;
            if (v330 >= v328)
              goto LABEL_518;
            v354 = v327[1];
            ++v327;
            v353 = v354;
          }
          while (!v354);
          v355 = v330;
        }
        v144 = 0;
        v356 = __clz(__rbit32(v353));
        v349 = v356 + v355;
        v352 = v353 >> v356;
      }
      while (v349 != (_DWORD)v328);
LABEL_243:
      v145 = (uint64_t)v7[1];
      v146 = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v145, "", 0);
      *(_QWORD *)(*(_QWORD *)(v145 + 24) + 16 * (v146 & 0x7FFFFFFF)) = v144 & 0xFFFFFFFFFFFFFFFBLL;
      v147 = *(_QWORD *)(v145 + 8);
      if (v147)
        (*(void (**)(uint64_t))(*(_QWORD *)v147 + 24))(v147);
      v149 = v7[5];
      v148 = (unint64_t *)v7[6];
      v150 = *((_QWORD *)v7[2] + 1);
      v151 = (llvm::MachineFunction *)*((_QWORD *)v149 + 4);
      v152 = *(unsigned __int8 **)(a2 + 64);
      *(_QWORD *)&v398 = v152;
      if (v152)
        llvm::MetadataTracking::track((uint64_t)&v398, v152, 2);
      v153 = v150 + 912;
      v154 = *((_QWORD *)v151 + 28);
      if (v154)
        *((_QWORD *)v151 + 28) = *(_QWORD *)v154;
      else
        v154 = sub_1C484358C((uint64_t)v151 + 128, 72, 3);
      v401 = (unsigned __int8 *)v398;
      if ((_QWORD)v398)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v398, (unsigned __int8 *)v398, (uint64_t)&v401);
        *(_QWORD *)&v398 = 0;
      }
      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v154, v151, v153, &v401, 0);
      if (v401)
        llvm::MetadataTracking::untrack((uint64_t)&v401, v401);
      if ((_QWORD)v398)
        llvm::MetadataTracking::untrack((uint64_t)&v398, (unsigned __int8 *)v398);
      v251 = *((_QWORD *)v149 + 5);
      *(_QWORD *)(v154 + 24) = v251;
      v252 = *(_QWORD *)(v251 + 32);
      v253 = *(unsigned int *)(v154 + 40);
      if ((_DWORD)v253)
      {
        v300 = *(_QWORD *)(v154 + 32);
        v301 = *(_QWORD *)(v252 + 40);
        v302 = 32 * v253;
        do
        {
          if (!*(_BYTE *)v300)
          {
            v303 = *(unsigned int *)(v300 + 4);
            if ((int)v303 >= 0)
              v304 = (uint64_t *)(*(_QWORD *)(v301 + 272) + 8 * v303);
            else
              v304 = (uint64_t *)(*(_QWORD *)(v301 + 24) + 16 * (v303 & 0x7FFFFFFF) + 8);
            v305 = *v304;
            if (*v304)
            {
              v306 = *(_QWORD *)(v305 + 16);
              *(_QWORD *)(v305 + 16) = v300;
              *(_QWORD *)(v300 + 16) = v306;
              if ((*(_BYTE *)(v300 + 3) & 1) != 0)
              {
                *(_QWORD *)(v300 + 24) = v305;
              }
              else
              {
                *(_QWORD *)(v300 + 24) = 0;
                v304 = (uint64_t *)(v306 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v300 + 16) = v300;
              *(_QWORD *)(v300 + 24) = 0;
            }
            *v304 = v300;
          }
          v300 += 32;
          v302 -= 32;
        }
        while (v302);
      }
      v254 = *(_QWORD *)(v252 + 728);
      if (v254)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v254 + 24))(v254, v154);
      v255 = *v148 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v154 = v255 | *(_QWORD *)v154 & 7;
      *(_QWORD *)(v154 + 8) = v148;
      *(_QWORD *)(v255 + 8) = v154;
      *v148 = *v148 & 7 | v154;
      v402 = 0;
      v403 = 0;
      v404 = 0;
      LODWORD(v401) = 0x1000000;
      HIDWORD(v401) = v146;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v154, v151, (const llvm::MachineOperand *)&v401);
      v402 = 0;
      v403 = 0;
      LODWORD(v401) = 0;
      HIDWORD(v401) = v138;
      v404 = 0;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v154, v151, (const llvm::MachineOperand *)&v401);
      goto LABEL_349;
    case 18:
      v155 = *(_QWORD *)(**(_QWORD **)(a2 + 32) + 80);
      v156 = (unsigned int *)(v155 + 24);
      if (*(_DWORD *)(v155 + 32) >= 0x41u)
        v156 = *(unsigned int **)v156;
      v157 = *v156;
      v158 = *(_QWORD *)(a1 + 24);
      v159 = *(_QWORD *)(v158 + 240);
      v160 = *(_QWORD *)(v159 + 8 * v157);
      v161 = *(_QWORD *)(a1 + 8);
      v387 = v160;
      if (!v160 || *(_BYTE *)(*(_QWORD *)v160 + 31))
        goto LABEL_253;
      v332 = *(unsigned int **)(v160 + 8);
      v333 = (unint64_t)(*(_QWORD *)(v158 + 248) - v159) >> 3;
      v334 = *v332;
      if (!*v332)
      {
        v335 = 0;
        while (1)
        {
          v335 += 32;
          if (v335 >= v333)
            goto LABEL_522;
          v336 = v332[1];
          ++v332;
          v334 = v336;
          if (v336)
            goto LABEL_521;
        }
      }
      v335 = 0;
LABEL_521:
      v350 = __clz(__rbit32(v334));
      v351 = v350 | v335;
      if ((v350 | v335) == (_DWORD)v333)
      {
LABEL_522:
        v160 = 0;
LABEL_523:
        v5 = a5;
        v7 = (llvm::MachineFunction **)a1;
        goto LABEL_253;
      }
      v357 = v334 >> v350;
      v5 = a5;
      v7 = (llvm::MachineFunction **)a1;
      do
      {
        v160 = *(_QWORD *)(v159 + 8 * v351);
        if (*(_BYTE *)(*(_QWORD *)v160 + 31))
          goto LABEL_523;
        if (v357 > 1)
        {
          v360 = v351 + 1;
          v358 = v357 >> 1;
        }
        else
        {
          do
          {
            v335 += 32;
            if (v335 >= v333)
              goto LABEL_522;
            v359 = v332[1];
            ++v332;
            v358 = v359;
          }
          while (!v359);
          v360 = v335;
        }
        v160 = 0;
        v361 = __clz(__rbit32(v358));
        v351 = v361 + v360;
        v357 = v358 >> v361;
      }
      while (v351 != (_DWORD)v333);
LABEL_253:
      v146 = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v161, "", 0);
      *(_QWORD *)(*(_QWORD *)(v161 + 24) + 16 * (v146 & 0x7FFFFFFF)) = v160 & 0xFFFFFFFFFFFFFFFBLL;
      v162 = *(_QWORD *)(v161 + 8);
      if (v162)
        (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)v162 + 24))(v162, v146);
      v163 = *((_QWORD *)v7[2] + 1) + 864;
      *(_QWORD *)&v400 = sub_1C62175DC(*v7, (unsigned __int8 **)(a2 + 64), v163, v146);
      *((_QWORD *)&v400 + 1) = v164;
      v165 = *(unsigned __int16 *)(a2 + 56);
      if (!*(_WORD *)(a2 + 56))
        goto LABEL_278;
      v166 = (unsigned int *)(*(_QWORD *)(a2 + 32) + 40 * (v165 - 1));
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v166 + 40) + 16 * v166[2]) == 1)
        --v165;
      if (v165 == 1)
      {
        v167 = v164;
      }
      else
      {
LABEL_278:
        v182 = a4;
        v183 = 0;
        v184 = 0;
        v185 = v165 - 1;
        v186 = v387;
        do
        {
          v187 = *(_QWORD *)(a2 + 32);
          v188 = *(_QWORD *)(v187 + v184 + 40);
          v189 = *(_QWORD *)(v187 + v184 + 48);
          if (((v183 + 1) & 1) == 0)
          {
            v190 = *(_QWORD *)(v187 + v184);
            v191 = v190 && *(_WORD *)(v190 + 24) == 9;
            if (!v191 || (*(_DWORD *)(v190 + 76) - 1) >= 0x3FFFFFFF)
            {
              v193 = *(_QWORD *)(v188 + 80);
              v194 = (unsigned int *)(v193 + 24);
              if (*(_DWORD *)(v193 + 32) >= 0x41u)
                v194 = *(unsigned int **)v194;
              v195 = *v194;
              v196 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 24)
                               + 16 * (sub_1C632C13C(a1, v190, *(_QWORD *)(v187 + v184 + 8), a5) & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8;
              v197 = (*(uint64_t (**)(_QWORD, uint64_t, unint64_t, uint64_t))(**(_QWORD **)(a1 + 24)
                                                                                           + 184))(*(_QWORD *)(a1 + 24), v186, v196, v195);
              if (v197)
                v198 = v197 == v186;
              else
                v198 = 1;
              v182 = a4;
              if (!v198)
              {
                *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 24) + 16 * (v146 & 0x7FFFFFFF)) = v197 & 0xFFFFFFFFFFFFFFFBLL;
                v186 = v197;
              }
            }
          }
          v192 = v189;
          v5 = a5;
          sub_1C5CCA138((_QWORD *)a1, (uint64_t)&v400, v188, v192, (v183 + 2), v163, a5, 0, a3, v182);
          v184 += 40;
          ++v183;
        }
        while (v185 != v183);
        v167 = *((_QWORD *)&v400 + 1);
        v7 = (llvm::MachineFunction **)a1;
      }
      v199 = (uint64_t *)v7[6];
      v200 = *((_QWORD *)v7[5] + 5);
      *(_QWORD *)(v167 + 24) = v200;
      v201 = *(_QWORD *)(v200 + 32);
      v202 = *(unsigned int *)(v167 + 40);
      if ((_DWORD)v202)
      {
        v307 = *(_QWORD *)(v167 + 32);
        v308 = *(_QWORD *)(v201 + 40);
        v309 = 32 * v202;
        do
        {
          if (!*(_BYTE *)v307)
          {
            v310 = *(unsigned int *)(v307 + 4);
            if ((int)v310 >= 0)
              v311 = (uint64_t *)(*(_QWORD *)(v308 + 272) + 8 * v310);
            else
              v311 = (uint64_t *)(*(_QWORD *)(v308 + 24) + 16 * (v310 & 0x7FFFFFFF) + 8);
            v312 = *v311;
            if (*v311)
            {
              v313 = *(_QWORD *)(v312 + 16);
              *(_QWORD *)(v312 + 16) = v307;
              *(_QWORD *)(v307 + 16) = v313;
              if ((*(_BYTE *)(v307 + 3) & 1) != 0)
              {
                *(_QWORD *)(v307 + 24) = v312;
              }
              else
              {
                *(_QWORD *)(v307 + 24) = 0;
                v311 = (uint64_t *)(v313 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v307 + 16) = v307;
              *(_QWORD *)(v307 + 24) = 0;
            }
            *v311 = v307;
          }
          v307 += 32;
          v309 -= 32;
        }
        while (v309);
      }
      v203 = *(_QWORD *)(v201 + 728);
      if (v203)
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v203 + 24))(v203, v167);
      v204 = *v199 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v167 = v204 | *(_QWORD *)v167 & 7;
      *(_QWORD *)(v167 + 8) = v199;
      *(_QWORD *)(v204 + 8) = v167;
      *v199 = *v199 & 7 | v167;
LABEL_349:
      *(_QWORD *)&v398 = a2;
      DWORD2(v398) = 0;
      v399[0] = v146;
LABEL_392:
      sub_1C632C634((uint64_t)&v401, v5, (uint64_t)&v398, v399);
      return;
    default:
      v10 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 8);
      v11 = v10 + 48 * v9;
      v12 = *(unsigned __int16 *)(a2 + 58);
      v13 = 16 * v12 - 16;
      do
      {
        if (!v12)
        {
          v15 = 0;
          goto LABEL_9;
        }
        --v12;
        v14 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + v13);
        v13 -= 16;
      }
      while (v14 == 172);
      if (v14 == 1)
        v15 = v12;
      else
        v15 = v12 + 1;
LABEL_9:
      v16 = v10 + 48 * v9;
      v18 = *(unsigned __int8 *)(v16 + 4);
      v17 = (unsigned __int8 *)(v16 + 4);
      v383 = v18;
      v377 = *(unsigned __int16 *)(a2 + 24);
      switch(v9)
      {
        case 0x19u:
          v21 = 13;
LABEL_17:
          v375 = (_WORD *)(*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 32) + 1928))(*(_QWORD *)(a1 + 32), v21);
          goto LABEL_19;
        case 0x1Fu:
          v375 = 0;
          v383 = v15;
          goto LABEL_19;
        case 0x1Bu:
          v19 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 160) + 80);
          v20 = (unsigned int *)(v19 + 24);
          if (*(_DWORD *)(v19 + 32) >= 0x41u)
            v20 = *(unsigned int **)v20;
          v21 = *v20;
          v383 = v15;
          goto LABEL_17;
      }
      v375 = 0;
LABEL_19:
      v22 = *(unsigned __int16 *)(a2 + 56);
      v23 = 40 * v22;
      do
      {
        if (!v23)
        {
          v374 = 0;
          goto LABEL_26;
        }
        LODWORD(v22) = v22 - 1;
        v24 = *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + v23 - 40) + 40)
                                 + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + v23 - 32));
        v23 -= 40;
      }
      while (v24 == 172);
      if (v24 != 1)
        LODWORD(v22) = v22 + 1;
      v374 = v22;
LABEL_26:
      if (((*(uint64_t (**)(_QWORD))(**((_QWORD **)*v7 + 1) + 184))(*((_QWORD *)*v7 + 1)) & 1) == 0
        && (v25 = *(_QWORD *)(v10 + 48 * v9 + 8), (v25 & 2) != 0))
      {
        v26 = (v25 >> 39) & 1;
      }
      else
      {
        LOBYTE(v26) = 0;
      }
      v378 = v10;
      v379 = v9;
      if (v15 <= v383)
      {
        v376 = 0;
      }
      else
      {
        v27 = v26 ^ 1;
        if (!*(_QWORD *)(v10 + 48 * v9 + 32))
          v27 = 0;
        v376 = v27;
      }
      v380 = v15;
      v28 = *v7;
      v29 = *(unsigned __int8 **)(a2 + 64);
      *(_QWORD *)&v398 = v29;
      if (v29)
        llvm::MetadataTracking::track((uint64_t)&v398, v29, 2);
      v30 = (llvm::MachineInstr *)*((_QWORD *)v28 + 28);
      if (v30)
        *((_QWORD *)v28 + 28) = *(_QWORD *)v30;
      else
        v30 = (llvm::MachineInstr *)sub_1C484358C((uint64_t)v28 + 128, 72, 3);
      v401 = (unsigned __int8 *)v398;
      if ((_QWORD)v398)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v398, (unsigned __int8 *)v398, (uint64_t)&v401);
        *(_QWORD *)&v398 = 0;
      }
      llvm::MachineInstr::MachineInstr(v30, v28, v10 + 48 * v9, &v401, 0);
      if (v401)
        llvm::MetadataTracking::untrack((uint64_t)&v401, v401);
      if ((_QWORD)v398)
        llvm::MetadataTracking::untrack((uint64_t)&v398, (unsigned __int8 *)v398);
      v395 = v28;
      v396 = v30;
      v31 = v380;
      if (!v380)
        goto LABEL_133;
      v32 = *(unsigned __int16 *)(a2 + 58);
      v33 = 16 * v32 - 16;
      do
      {
        if (!v32)
        {
          v381 = 0;
          goto LABEL_54;
        }
        --v32;
        v34 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + v33);
        v33 -= 16;
      }
      while (v34 == 172);
      if (v34 != 1)
        LODWORD(v32) = v32 + 1;
      v381 = v32;
LABEL_54:
      if (((*(uint64_t (**)(_QWORD))(**((_QWORD **)*v7 + 1) + 184))(*((_QWORD *)*v7 + 1)) & 1) != 0
        || (LODWORD(v35) = v381, (~*(_QWORD *)(v10 + 48 * v9 + 8) & 0x8000000002) != 0))
      {
        LODWORD(v35) = *v17;
      }
      if (*(__int16 *)(a2 + 24) == -32)
        v35 = v381;
      else
        v35 = v35;
      if ((_DWORD)v35)
      {
        v36 = v35;
        v37 = 0;
        v385 = (_QWORD *)(v10 + 48 * v9 + 40);
        while (1)
        {
          v38 = v7[3];
          v39 = (_QWORD *)(*(uint64_t (**)(llvm::MachineFunction *, uint64_t, unint64_t, llvm::MachineFunction *, llvm::MachineFunction *))(*(_QWORD *)v7[2] + 16))(v7[2], v11, v37, v38, *v7);
          v40 = (uint64_t)v39;
          if (v39)
          {
            if (!*(_BYTE *)(*v39 + 31))
              break;
          }
LABEL_64:
          if (v37 < v381)
          {
            v41 = *(_QWORD *)(a2 + 40);
            v42 = *(unsigned __int8 *)(v41 + 16 * v37);
            if (*(_BYTE *)(v41 + 16 * v37))
            {
              v43 = v7[4];
              if (*((_QWORD *)v43 + v42 + 12))
              {
                if ((*(_BYTE *)(a2 + 26) & 4) != 0)
                {
                  v44 = 1;
                }
                else if (v40)
                {
                  v44 = (*(uint64_t (**)(llvm::MachineFunction *, uint64_t))(*(_QWORD *)v7[3] + 120))(v7[3], v40);
                }
                else
                {
                  v44 = 0;
                }
                CommonSubClass = (*(uint64_t (**)(llvm::MachineFunction *, uint64_t, uint64_t))(*(_QWORD *)v43 + 424))(v43, v42, v44);
                if (v40)
                  CommonSubClass = llvm::TargetRegisterInfo::getCommonSubClass((uint64_t)v7[3], v40, CommonSubClass);
                if (CommonSubClass)
                  v40 = CommonSubClass;
              }
            }
          }
          if (*v385 && (*(_BYTE *)(*v385 + 6 * v37 + 2) & 4) != 0)
          {
            v46 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40 * (v37 - v381)) + 76);
            v402 = 0;
            v403 = 0;
            v404 = 0;
            LODWORD(v401) = 0x1000000;
            HIDWORD(v401) = v46;
            llvm::MachineInstr::addOperand(v396, v395, (const llvm::MachineOperand *)&v401);
            if (v46)
              goto LABEL_90;
          }
          else
          {
            v46 = 0;
          }
          if ((a4 & 1) == 0 && (a3 & 1) == 0)
          {
            v47 = *(_QWORD *)(a2 + 48);
            if (v47)
            {
              while (1)
              {
                v48 = *(_QWORD *)(v47 + 16);
                if (*(_WORD *)(v48 + 24) == 49)
                {
                  v49 = *(_QWORD *)(v48 + 32);
                  if (*(_QWORD *)(v49 + 80) == a2 && v37 == *(_DWORD *)(v49 + 88))
                  {
                    v46 = *(_DWORD *)(*(_QWORD *)(v49 + 40) + 76);
                    if (v46 < 0
                      && v40 == (*(_QWORD *)(*((_QWORD *)v7[1] + 3) + 16 * (v46 & 0x7FFFFFFF)) & 0xFFFFFFFFFFFFFFF8))
                    {
                      break;
                    }
                  }
                }
                v47 = *(_QWORD *)(v47 + 32);
                if (!v47)
                  goto LABEL_91;
              }
            }
            else
            {
LABEL_91:
              v50 = (uint64_t)v7[1];
              v46 = llvm::MachineRegisterInfo::createIncompleteVirtualRegister(v50, "", 0);
              *(_QWORD *)(*(_QWORD *)(v50 + 24) + 16 * (v46 & 0x7FFFFFFF)) = v40 & 0xFFFFFFFFFFFFFFFBLL;
              v51 = *(_QWORD *)(v50 + 8);
              if (v51)
                (*(void (**)(uint64_t))(*(_QWORD *)v51 + 24))(v51);
            }
            v402 = 0;
            v403 = 0;
            v404 = 0;
            LODWORD(v401) = 0x1000000;
            HIDWORD(v401) = v46;
            llvm::MachineInstr::addOperand(v396, v395, (const llvm::MachineOperand *)&v401);
            goto LABEL_94;
          }
LABEL_90:
          if (!v46)
            goto LABEL_91;
LABEL_94:
          if (v37 < v381)
          {
            *(_QWORD *)&v400 = a2;
            DWORD2(v400) = v37;
            if (a3)
            {
              v401 = 0;
              if (sub_1C632C56C((uint64_t *)a5, (uint64_t)&v400, (uint64_t *)&v401))
              {
                v52 = v401;
                *(_QWORD *)v401 = 0;
                *((_DWORD *)v52 + 2) = -2;
                *(int32x2_t *)(a5 + 8) = vadd_s32(*(int32x2_t *)(a5 + 8), (int32x2_t)0x1FFFFFFFFLL);
              }
            }
            v398 = v400;
            v399[0] = v46;
            sub_1C632C634((uint64_t)&v401, a5, (uint64_t)&v398, v399);
          }
          if (++v37 == v36)
            goto LABEL_118;
        }
        v53 = (unsigned int *)v39[1];
        v54 = *((_QWORD *)v38 + 30);
        v55 = (unint64_t)(*((_QWORD *)v38 + 31) - v54) >> 3;
        v56 = *v53;
        if (*v53)
        {
          v57 = 0;
LABEL_106:
          v59 = __clz(__rbit32(v56));
          v60 = v59 | v57;
          if ((v59 | v57) != (_DWORD)v55)
          {
            v61 = v56 >> v59;
            while (1)
            {
              v40 = *(_QWORD *)(v54 + 8 * v60);
              if (*(_BYTE *)(*(_QWORD *)v40 + 31))
                goto LABEL_108;
              if (v61 <= 1)
              {
                while (1)
                {
                  v57 += 32;
                  if (v57 >= v55)
                    goto LABEL_107;
                  v63 = v53[1];
                  ++v53;
                  v62 = v63;
                  if (v63)
                  {
                    v64 = v57;
                    goto LABEL_116;
                  }
                }
              }
              v64 = v60 + 1;
              v62 = v61 >> 1;
LABEL_116:
              v40 = 0;
              v65 = __clz(__rbit32(v62));
              v60 = v65 + v64;
              v61 = v62 >> v65;
              v7 = (llvm::MachineFunction **)a1;
              if (v60 == (_DWORD)v55)
                goto LABEL_64;
            }
          }
        }
        else
        {
          v57 = 0;
          while (1)
          {
            v57 += 32;
            if (v57 >= v55)
              break;
            v58 = v53[1];
            ++v53;
            v56 = v58;
            if (v58)
              goto LABEL_106;
          }
        }
LABEL_107:
        v40 = 0;
LABEL_108:
        v7 = (llvm::MachineFunction **)a1;
        goto LABEL_64;
      }
LABEL_118:
      v66 = v396;
      v67 = *(_WORD *)(a2 + 72);
      if ((v67 & 0x40) != 0)
        *((_WORD *)v396 + 22) |= 0x40u;
      if ((v67 & 0x80) != 0)
        *((_WORD *)v66 + 22) |= 0x80u;
      v5 = a5;
      if ((v67 & 0x10) != 0)
        *((_WORD *)v66 + 22) |= 0x10u;
      v31 = v380;
      if ((v67 & 0x20) != 0)
      {
        *((_WORD *)v66 + 22) |= 0x20u;
        if ((v67 & 0x100) == 0)
        {
LABEL_126:
          if ((v67 & 0x200) == 0)
            goto LABEL_127;
          goto LABEL_175;
        }
      }
      else if ((v67 & 0x100) == 0)
      {
        goto LABEL_126;
      }
      *((_WORD *)v66 + 22) |= 0x100u;
      if ((v67 & 0x200) == 0)
      {
LABEL_127:
        if ((v67 & 0x400) == 0)
          goto LABEL_128;
        goto LABEL_176;
      }
LABEL_175:
      *((_WORD *)v66 + 22) |= 0x200u;
      if ((v67 & 0x400) == 0)
      {
LABEL_128:
        if ((v67 & 2) == 0)
          goto LABEL_129;
        goto LABEL_177;
      }
LABEL_176:
      *((_WORD *)v66 + 22) |= 0x400u;
      if ((v67 & 2) == 0)
      {
LABEL_129:
        if ((v67 & 4) == 0)
          goto LABEL_130;
        goto LABEL_178;
      }
LABEL_177:
      *((_WORD *)v66 + 22) |= 0x800u;
      if ((v67 & 4) == 0)
      {
LABEL_130:
        if ((v67 & 8) == 0)
          goto LABEL_131;
        goto LABEL_179;
      }
LABEL_178:
      *((_WORD *)v66 + 22) |= 0x1000u;
      if ((v67 & 8) == 0)
      {
LABEL_131:
        if ((v67 & 0x800) == 0)
          goto LABEL_133;
        goto LABEL_132;
      }
LABEL_179:
      *((_WORD *)v66 + 22) |= 0x2000u;
      if ((v67 & 0x800) != 0)
LABEL_132:
        *((_WORD *)v66 + 22) |= 0x4000u;
LABEL_133:
      v68 = v383 - v31;
      if (v383 < v31)
        v68 = 0;
      if (v68 != v374)
      {
        v69 = v383;
        v70 = v380;
        if (v383 < v380)
          v70 = v383;
        v71 = v374 + v70;
        v72 = -v70;
        do
        {
          v73 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * (v72 + v69));
          sub_1C5CCA138(v7, (uint64_t)&v395, *v73, v73[1], v69, v11, v5, 0, a3, a4);
          v69 = (v69 + 1);
        }
        while (v71 != (_DWORD)v69);
      }
      if (v375)
      {
        v74 = (unsigned __int16)*v375;
        if (*v375)
        {
          v75 = 1;
          do
          {
            v402 = 0;
            v403 = 0;
            v404 = 0;
            LODWORD(v401) = 1124073472;
            HIDWORD(v401) = v74;
            llvm::MachineInstr::addOperand(v396, v395, (const llvm::MachineOperand *)&v401);
            v74 = (unsigned __int16)v375[v75++];
          }
          while (v74);
        }
      }
      v76 = *(_DWORD *)(a2 + 88);
      v77 = a1;
      v78 = v380;
      if (v76 == 1)
      {
        v80 = (_QWORD *)(a2 + 80);
        v81 = 1;
        v79 = a3;
      }
      else
      {
        v79 = a3;
        if (!v76)
        {
          llvm::MachineInstr::dropMemRefs((uint64_t)v396, v395);
          goto LABEL_152;
        }
        v81 = v76;
        v80 = (_QWORD *)(*(_QWORD *)(a2 + 80) & 0xFFFFFFFFFFFFFFF8);
      }
      v82 = *((_QWORD *)v396 + 6);
      if (v82 >= 8)
      {
        v314 = *((_QWORD *)v396 + 6) & 7;
        v315 = (unsigned __int8 *)(v82 & 0xFFFFFFFFFFFFFFF8);
        if (v314 != 1 || v315 == 0)
        {
          if (v314 != 3 || v315 == 0)
          {
            v84 = 0;
            v85 = 0;
            if (v315)
              v318 = v314 == 2;
            else
              v318 = 0;
            if (v318)
              v83 = (uint64_t)v315;
            else
              v83 = 0;
          }
          else
          {
            v326 = v315[4];
            if (v315[4])
              v84 = *(_QWORD *)&v315[8 * *(int *)v315 + 8];
            else
              v84 = 0;
            if (v315[5])
              v83 = *(_QWORD *)&v315[8 * *(int *)v315 + 8 + 8 * v326];
            else
              v83 = 0;
            if (v315[6])
              v85 = *(_QWORD *)&v315[8 * *(int *)v315 + 8 + 8 * v315[5] + 8 * v326];
            else
              v85 = 0;
            v5 = a5;
            v77 = a1;
            v79 = a3;
            v78 = v380;
          }
        }
        else
        {
          v83 = 0;
          v85 = 0;
          v84 = (uint64_t)v315;
        }
      }
      else
      {
        v83 = 0;
        v84 = 0;
        v85 = 0;
      }
      llvm::MachineInstr::setExtraInfo((unint64_t)v396, (uint64_t)v395, v80, v81, v84, v83, v85);
LABEL_152:
      v86 = *(unint64_t **)(v77 + 48);
      v87 = (unint64_t)v396;
      v88 = *(_QWORD *)(*(_QWORD *)(v77 + 40) + 40);
      *((_QWORD *)v396 + 3) = v88;
      v89 = *(_QWORD *)(v88 + 32);
      v90 = *(unsigned int *)(v87 + 40);
      if ((_DWORD)v90)
      {
        v174 = *(_QWORD *)(v87 + 32);
        v175 = *(_QWORD *)(v89 + 40);
        v176 = 32 * v90;
        do
        {
          if (!*(_BYTE *)v174)
          {
            v177 = *(unsigned int *)(v174 + 4);
            if ((int)v177 >= 0)
              v178 = (uint64_t *)(*(_QWORD *)(v175 + 272) + 8 * v177);
            else
              v178 = (uint64_t *)(*(_QWORD *)(v175 + 24) + 16 * (v177 & 0x7FFFFFFF) + 8);
            v179 = *v178;
            if (*v178)
            {
              v180 = *(_QWORD *)(v179 + 16);
              *(_QWORD *)(v179 + 16) = v174;
              *(_QWORD *)(v174 + 16) = v180;
              if ((*(_BYTE *)(v174 + 3) & 1) != 0)
              {
                *(_QWORD *)(v174 + 24) = v179;
              }
              else
              {
                *(_QWORD *)(v174 + 24) = 0;
                v178 = (uint64_t *)(v180 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v174 + 16) = v174;
              *(_QWORD *)(v174 + 24) = 0;
            }
            *v178 = v174;
          }
          v174 += 32;
          v176 -= 32;
        }
        while (v176);
      }
      v91 = *(_QWORD *)(v89 + 728);
      if (v91)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v91 + 24))(v91, v87);
      v92 = *v86 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v87 = v92 | *(_QWORD *)v87 & 7;
      *(_QWORD *)(v87 + 8) = v86;
      *(_QWORD *)(v92 + 8) = v87;
      *v86 = *v86 & 7 | v87;
      v401 = (unsigned __int8 *)&v403;
      v402 = 0x800000000;
      v93 = v376 ^ 1;
      if (v78 <= v383)
        v93 = 1;
      if ((v93 & 1) == 0)
      {
        v94 = v383;
        do
        {
          v95 = *(_QWORD *)(a2 + 48);
          if (v95)
          {
            v96 = *(unsigned __int16 *)(*(_QWORD *)(v378 + 48 * v379 + 32) + 2 * (v94 - v383));
            while (*(_DWORD *)(v95 + 8) != (_DWORD)v94)
            {
              v95 = *(_QWORD *)(v95 + 32);
              if (!v95)
                goto LABEL_167;
            }
            v97 = v402;
            if (v402 >= (unint64_t)HIDWORD(v402))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v401, (uint64_t)&v403, v402 + 1, 4);
              v97 = v402;
            }
            *(_DWORD *)&v401[4 * v97] = v96;
            LODWORD(v402) = v402 + 1;
            sub_1C5CC94E4((_QWORD *)v77, a2, v94, v79, a4, v96, v5);
          }
LABEL_167:
          ++v94;
        }
        while (v78 != (_DWORD)v94);
      }
      v99 = v378;
      v98 = v379;
      if (*(unsigned __int8 *)(*(_QWORD *)(a2 + 40) + 16 * (*(unsigned __int16 *)(a2 + 58) - 1)) == 172)
      {
        v100 = *(_QWORD *)(a2 + 48);
        if (v100)
        {
          while (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v100 + 40) + 16 * *(unsigned int *)(v100 + 8)) != 172)
          {
            v100 = *(_QWORD *)(v100 + 32);
            if (!v100)
              goto LABEL_223;
          }
          for (i = *(_QWORD *)(v100 + 16); i; i = *(_QWORD *)(v115 + 16))
          {
            v112 = *(unsigned __int16 *)(i + 24);
            if (v112 != 49)
            {
              if (v112 == 50)
              {
                v113 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(i + 32) + 40) + 76);
                v114 = v402;
                if (v402 >= (unint64_t)HIDWORD(v402))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v401, (uint64_t)&v403, v402 + 1, 4);
                  v114 = v402;
                }
                *(_DWORD *)&v401[4 * v114] = v113;
                LODWORD(v402) = v402 + 1;
              }
              else
              {
                v116 = *(unsigned __int16 **)(*(_QWORD *)(*(_QWORD *)(v77 + 16) + 8)
                                            + 48 * (__int16)~(_WORD)v112
                                            + 24);
                if (v116)
                {
                  v117 = -1;
                  do
                    ++v117;
                  while (v116[v117]);
                }
                else
                {
                  v117 = 0;
                }
                sub_1C632C4EC((unsigned int *)&v401, v116, &v116[v117]);
                if (*(_WORD *)(i + 56))
                {
                  v118 = 0;
                  v119 = 40 * *(unsigned __int16 *)(i + 56);
                  do
                  {
                    v120 = *(_QWORD *)(*(_QWORD *)(i + 32) + v118);
                    if (v120)
                      v121 = *(unsigned __int16 *)(v120 + 24) == 9;
                    else
                      v121 = 0;
                    if (v121)
                    {
                      v122 = *(_DWORD *)(v120 + 76);
                      if ((v122 - 1) <= 0x3FFFFFFE)
                      {
                        v123 = v402;
                        if (v402 >= (unint64_t)HIDWORD(v402))
                        {
                          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v401, (uint64_t)&v403, v402 + 1, 4);
                          v123 = v402;
                        }
                        *(_DWORD *)&v401[4 * v123] = v122;
                        LODWORD(v402) = v402 + 1;
                      }
                    }
                    v118 += 40;
                  }
                  while (v119 != v118);
                }
              }
            }
            v115 = *(_QWORD *)(i + 48);
            v99 = v378;
            v98 = v379;
            if (!v115)
              break;
            while (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v115 + 40) + 16 * *(unsigned int *)(v115 + 8)) != 172)
            {
              v115 = *(_QWORD *)(v115 + 32);
              if (!v115)
                goto LABEL_223;
            }
          }
        }
      }
LABEL_223:
      if ((_DWORD)v402 || *(_QWORD *)(v99 + 48 * v98 + 32) || (*(_BYTE *)(v99 + 48 * v98 + 8) & 4) != 0)
        llvm::MachineInstr::setPhysRegsDeadExcept((uint64_t)v396, (unsigned int *)v401, v402, *(_QWORD *)(v77 + 24));
      if (v377 == 65504 && v383)
      {
        v168 = v396;
        *(_QWORD *)&v398 = v396;
        v169 = *((_QWORD *)v396 + 2);
        v170 = *(unsigned __int8 *)(v169 + 4);
        if ((*(_BYTE *)(v169 + 8) & 2) == 0 || (v283 = *((_DWORD *)v396 + 10), v283 == v170))
        {
          v171 = *(unsigned __int8 *)(v169 + 4);
        }
        else
        {
          v284 = v283 - 1;
          v171 = *(unsigned __int8 *)(v169 + 4);
          do
          {
            v285 = *(_DWORD *)(*((_QWORD *)v396 + 4) + 32 * v170);
            if ((v285 & 0x10000FF) != 0x1000000)
              break;
            v171 += (v285 & 0x2000000) == 0;
            if (v284 == v170)
              break;
            ++v170;
          }
          while ((v285 & 0x2000000) == 0);
        }
        v172 = *(_QWORD *)(v169 + 32);
        if (v172)
        {
          v173 = -1;
          do
            ++v173;
          while (*(_WORD *)(v172 + 2 * v173));
        }
        else
        {
          v173 = 0;
        }
        DWORD2(v398) = v173 + v171;
        NumGCPtrIdx = llvm::StatepointOpers::getNumGCPtrIdx((llvm::StatepointOpers *)&v398);
        v206 = 0;
        if (*(_DWORD *)(*((_QWORD *)v168 + 4) + 32 * NumGCPtrIdx + 16))
          NextMetaArgIdx = NumGCPtrIdx + 1;
        else
          NextMetaArgIdx = 0xFFFFFFFFLL;
        do
        {
          v208 = *((_QWORD *)v168 + 4);
          v209 = (unsigned int *)(v208 + 32 * NextMetaArgIdx);
          v210 = *v209;
          if (!*v209)
          {
            v211 = v210 | 0xF00000;
            v212 = v210 & 0xFF0FFFFF | (((((v206 << 20) + 0x100000) >> 20) & 0xF) << 20);
            if (v206 > 0xE)
              v212 = v211;
            *v209 = v212;
            if ((NextMetaArgIdx + 1) < 0xF)
              v213 = NextMetaArgIdx + 1;
            else
              v213 = 15;
            *(_DWORD *)(v208 + 32 * v206) = *(_DWORD *)(v208 + 32 * v206) & 0xFF0FFFFF | (v213 << 20);
            ++v206;
          }
          NextMetaArgIdx = llvm::StackMaps::getNextMetaArgIdx(v168, (const llvm::MachineInstr *)NextMetaArgIdx);
        }
        while (v206 < v383);
      }
      if ((*(_BYTE *)(v99 + 48 * v98 + 11) & 0x10) != 0)
        (*(void (**)(_QWORD, llvm::MachineInstr *, uint64_t))(**(_QWORD **)(v77 + 32) + 2152))(*(_QWORD *)(v77 + 32), v396, a2);
      if (v401 != (unsigned __int8 *)&v403)
        free(v401);
      return;
  }
}

void sub_1C5CCD4D8(llvm::MachineFunction **a1, uint64_t a2, char a3, char a4, uint64_t a5)
{
  unsigned int v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  unint64_t *v13;
  llvm::MachineFunction *v14;
  uint64_t v15;
  llvm::MachineFunction *v16;
  void *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  unint64_t *v21;
  llvm::MachineFunction *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  int v27;
  unsigned int *v28;
  int v29;
  llvm::MachineFunction *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;
  llvm::MachineInstr *v35;
  _QWORD *v36;
  unint64_t *v37;
  llvm::MachineFunction *v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  unint64_t *v46;
  llvm::MachineFunction *v47;
  uint64_t v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  llvm::MachineFunction **v65;
  _QWORD *v66;
  unsigned int v67;
  uint64_t v68;
  unint64_t *v69;
  unint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  int v74;
  int i;
  uint64_t *v76;
  int v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  unsigned int *v82;
  unsigned int v83;
  int v84;
  int v85;
  unsigned int v86;
  uint64_t v87;
  int v88;
  unsigned int v89;
  unsigned int *v90;
  uint64_t v91;
  unsigned int v92;
  llvm::MachineInstr *v93;
  unsigned int RegisterDefOperandIdx;
  uint64_t v95;
  unint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  unint64_t v102;
  int v103;
  unint64_t *v104;
  llvm::MachineFunction *v105;
  uint64_t v106;
  void *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t *v163;
  uint64_t v164;
  uint64_t v165;
  int v166;
  llvm::MachineFunction *v171;
  llvm::MachineInstr *v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  void *v176;
  uint64_t v177;
  _BYTE v178[32];
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;

  v183 = *MEMORY[0x1E0C80C00];
  v7 = *(unsigned __int16 *)(a2 + 24);
  if (v7 > 0x106)
  {
    if (v7 - 263 < 2)
    {
      v36 = *(_QWORD **)(a2 + 80);
      v38 = a1[5];
      v37 = (unint64_t *)a1[6];
      v39 = *((_QWORD *)a1[2] + 1);
      if (v7 == 263)
        v40 = 192;
      else
        v40 = 288;
      v16 = (llvm::MachineFunction *)*((_QWORD *)v38 + 4);
      v41 = *(void **)(a2 + 64);
      v176 = v41;
      if (v41)
        llvm::MetadataTracking::track((uint64_t)&v176, (unsigned __int8 *)v41, 2);
      v42 = v39 + v40;
      v19 = *((_QWORD *)v16 + 28);
      if (v19)
        *((_QWORD *)v16 + 28) = *(_QWORD *)v19;
      else
        v19 = sub_1C484358C((uint64_t)v16 + 128, 72, 3);
      v179 = (uint64_t)v176;
      if (v176)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v176, (unsigned __int8 *)v176, (uint64_t)&v179);
        v176 = 0;
      }
      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v19, v16, v42, (unsigned __int8 **)&v179, 0);
      if (v179)
        llvm::MetadataTracking::untrack((uint64_t)&v179, (unsigned __int8 *)v179);
      if (v176)
        llvm::MetadataTracking::untrack((uint64_t)&v176, (unsigned __int8 *)v176);
      v57 = *((_QWORD *)v38 + 5);
      *(_QWORD *)(v19 + 24) = v57;
      v58 = *(_QWORD *)(v57 + 32);
      v59 = *(unsigned int *)(v19 + 40);
      if ((_DWORD)v59)
      {
        v126 = *(_QWORD *)(v19 + 32);
        v127 = *(_QWORD *)(v58 + 40);
        v128 = 32 * v59;
        do
        {
          if (!*(_BYTE *)v126)
          {
            v129 = *(unsigned int *)(v126 + 4);
            if ((int)v129 >= 0)
              v130 = (uint64_t *)(*(_QWORD *)(v127 + 272) + 8 * v129);
            else
              v130 = (uint64_t *)(*(_QWORD *)(v127 + 24) + 16 * (v129 & 0x7FFFFFFF) + 8);
            v131 = *v130;
            if (*v130)
            {
              v132 = *(_QWORD *)(v131 + 16);
              *(_QWORD *)(v131 + 16) = v126;
              *(_QWORD *)(v126 + 16) = v132;
              if ((*(_BYTE *)(v126 + 3) & 1) != 0)
              {
                *(_QWORD *)(v126 + 24) = v131;
              }
              else
              {
                *(_QWORD *)(v126 + 24) = 0;
                v130 = (uint64_t *)(v132 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v126 + 16) = v126;
              *(_QWORD *)(v126 + 24) = 0;
            }
            *v130 = v126;
          }
          v126 += 32;
          v128 -= 32;
        }
        while (v128);
      }
      v60 = *(_QWORD *)(v58 + 728);
      if (v60)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v60 + 24))(v60, v19);
      v61 = *v37 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v19 = v61 | *(_QWORD *)v19 & 7;
      *(_QWORD *)(v19 + 8) = v37;
      *(_QWORD *)(v61 + 8) = v19;
      *v37 = *v37 & 7 | v19;
      v180 = 0;
      v181 = v36;
      LODWORD(v182) = 0;
      v179 = 15;
    }
    else if (v7 - 312 >= 2)
    {
      v44 = *(_QWORD **)(a2 + 80);
      v43 = *(_QWORD **)(a2 + 88);
      v45 = *(unsigned int *)(a2 + 96);
      v47 = a1[5];
      v46 = (unint64_t *)a1[6];
      v48 = *((_QWORD *)a1[2] + 1);
      v16 = (llvm::MachineFunction *)*((_QWORD *)v47 + 4);
      v49 = *(void **)(a2 + 64);
      v176 = v49;
      if (v49)
        llvm::MetadataTracking::track((uint64_t)&v176, (unsigned __int8 *)v49, 2);
      v50 = v48 + 1104;
      v19 = *((_QWORD *)v16 + 28);
      if (v19)
        *((_QWORD *)v16 + 28) = *(_QWORD *)v19;
      else
        v19 = sub_1C484358C((uint64_t)v16 + 128, 72, 3);
      v179 = (uint64_t)v176;
      if (v176)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v176, (unsigned __int8 *)v176, (uint64_t)&v179);
        v176 = 0;
      }
      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v19, v16, v50, (unsigned __int8 **)&v179, 0);
      if (v179)
        llvm::MetadataTracking::untrack((uint64_t)&v179, (unsigned __int8 *)v179);
      if (v176)
        llvm::MetadataTracking::untrack((uint64_t)&v176, (unsigned __int8 *)v176);
      v109 = *((_QWORD *)v47 + 5);
      *(_QWORD *)(v19 + 24) = v109;
      v110 = *(_QWORD *)(v109 + 32);
      v111 = *(unsigned int *)(v19 + 40);
      if ((_DWORD)v111)
      {
        v145 = *(_QWORD *)(v19 + 32);
        v146 = *(_QWORD *)(v110 + 40);
        v147 = 32 * v111;
        do
        {
          if (!*(_BYTE *)v145)
          {
            v148 = *(unsigned int *)(v145 + 4);
            if ((int)v148 >= 0)
              v149 = (uint64_t *)(*(_QWORD *)(v146 + 272) + 8 * v148);
            else
              v149 = (uint64_t *)(*(_QWORD *)(v146 + 24) + 16 * (v148 & 0x7FFFFFFF) + 8);
            v150 = *v149;
            if (*v149)
            {
              v151 = *(_QWORD *)(v150 + 16);
              *(_QWORD *)(v150 + 16) = v145;
              *(_QWORD *)(v145 + 16) = v151;
              if ((*(_BYTE *)(v145 + 3) & 1) != 0)
              {
                *(_QWORD *)(v145 + 24) = v150;
              }
              else
              {
                *(_QWORD *)(v145 + 24) = 0;
                v149 = (uint64_t *)(v151 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v145 + 16) = v145;
              *(_QWORD *)(v145 + 24) = 0;
            }
            *v149 = v145;
          }
          v145 += 32;
          v147 -= 32;
        }
        while (v147);
      }
      v112 = *(_QWORD *)(v110 + 728);
      if (v112)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v112 + 24))(v112, v19);
      v113 = *v46 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v19 = v113 | *(_QWORD *)v19 & 7;
      *(_QWORD *)(v19 + 8) = v46;
      *(_QWORD *)(v113 + 8) = v19;
      *v46 = *v46 & 7 | v19;
      LODWORD(v179) = 1;
      v180 = 0;
      v181 = v44;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v19, v16, (const llvm::MachineOperand *)&v179);
      LODWORD(v179) = 1;
      v180 = 0;
      v181 = v43;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v19, v16, (const llvm::MachineOperand *)&v179);
      LODWORD(v179) = 1;
      v180 = 0;
      v181 = 0;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v19, v16, (const llvm::MachineOperand *)&v179);
      LODWORD(v179) = 1;
      v180 = 0;
      v181 = (_QWORD *)v45;
    }
    else
    {
      v20 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40);
      v22 = a1[5];
      v21 = (unint64_t *)a1[6];
      v23 = *((_QWORD *)a1[2] + 1);
      if (v7 == 312)
        v24 = 1008;
      else
        v24 = 1056;
      v16 = (llvm::MachineFunction *)*((_QWORD *)v22 + 4);
      v25 = *(void **)(a2 + 64);
      v176 = v25;
      if (v25)
        llvm::MetadataTracking::track((uint64_t)&v176, (unsigned __int8 *)v25, 2);
      v26 = v23 + v24;
      v19 = *((_QWORD *)v16 + 28);
      if (v19)
        *((_QWORD *)v16 + 28) = *(_QWORD *)v19;
      else
        v19 = sub_1C484358C((uint64_t)v16 + 128, 72, 3);
      v179 = (uint64_t)v176;
      if (v176)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v176, (unsigned __int8 *)v176, (uint64_t)&v179);
        v176 = 0;
      }
      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v19, v16, v26, (unsigned __int8 **)&v179, 0);
      if (v179)
        llvm::MetadataTracking::untrack((uint64_t)&v179, (unsigned __int8 *)v179);
      if (v176)
        llvm::MetadataTracking::untrack((uint64_t)&v176, (unsigned __int8 *)v176);
      v51 = *((_QWORD *)v22 + 5);
      *(_QWORD *)(v19 + 24) = v51;
      v52 = *(_QWORD *)(v51 + 32);
      v53 = *(unsigned int *)(v19 + 40);
      if ((_DWORD)v53)
      {
        v119 = *(_QWORD *)(v19 + 32);
        v120 = *(_QWORD *)(v52 + 40);
        v121 = 32 * v53;
        do
        {
          if (!*(_BYTE *)v119)
          {
            v122 = *(unsigned int *)(v119 + 4);
            if ((int)v122 >= 0)
              v123 = (uint64_t *)(*(_QWORD *)(v120 + 272) + 8 * v122);
            else
              v123 = (uint64_t *)(*(_QWORD *)(v120 + 24) + 16 * (v122 & 0x7FFFFFFF) + 8);
            v124 = *v123;
            if (*v123)
            {
              v125 = *(_QWORD *)(v124 + 16);
              *(_QWORD *)(v124 + 16) = v119;
              *(_QWORD *)(v119 + 16) = v125;
              if ((*(_BYTE *)(v119 + 3) & 1) != 0)
              {
                *(_QWORD *)(v119 + 24) = v124;
              }
              else
              {
                *(_QWORD *)(v119 + 24) = 0;
                v123 = (uint64_t *)(v125 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v119 + 16) = v119;
              *(_QWORD *)(v119 + 24) = 0;
            }
            *v123 = v119;
          }
          v119 += 32;
          v121 -= 32;
        }
        while (v121);
      }
      v54 = *(_QWORD *)(v52 + 728);
      if (v54)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v54 + 24))(v54, v19);
      v55 = *v21 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v19 = v55 | *(_QWORD *)v19 & 7;
      *(_QWORD *)(v19 + 8) = v21;
      *(_QWORD *)(v55 + 8) = v19;
      *v21 = *v21 & 7 | v19;
      v56 = *(_DWORD *)(v20 + 76);
      LODWORD(v179) = 5;
      v180 = 0;
      LODWORD(v181) = v56;
    }
    goto LABEL_204;
  }
  if (*(unsigned __int16 *)(a2 + 24) > 0x36u)
  {
    if (v7 - 261 < 2)
    {
      v27 = *(unsigned __int16 *)(a2 + 56);
      v28 = (unsigned int *)(*(_QWORD *)(a2 + 32) + 40 * (v27 - 1));
      if (*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v28 + 40) + 16 * v28[2]) == 172)
        v29 = v27 - 1;
      else
        v29 = *(unsigned __int16 *)(a2 + 56);
      v30 = *a1;
      v31 = *((_QWORD *)a1[2] + 1);
      if (v7 == 262)
        v32 = 96;
      else
        v32 = 48;
      v33 = *(void **)(a2 + 64);
      v176 = v33;
      if (v33)
        llvm::MetadataTracking::track((uint64_t)&v176, (unsigned __int8 *)v33, 2);
      v34 = v31 + v32;
      v35 = (llvm::MachineInstr *)*((_QWORD *)v30 + 28);
      if (v35)
        *((_QWORD *)v30 + 28) = *(_QWORD *)v35;
      else
        v35 = (llvm::MachineInstr *)sub_1C484358C((uint64_t)v30 + 128, 72, 3);
      v179 = (uint64_t)v176;
      if (v176)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v176, (unsigned __int8 *)v176, (uint64_t)&v179);
        v176 = 0;
      }
      llvm::MachineInstr::MachineInstr(v35, v30, v34, (unsigned __int8 **)&v179, 0);
      if (v179)
        llvm::MetadataTracking::untrack((uint64_t)&v179, (unsigned __int8 *)v179);
      if (v176)
        llvm::MetadataTracking::untrack((uint64_t)&v176, (unsigned __int8 *)v176);
      v171 = v30;
      v172 = v35;
      v62 = *(_QWORD **)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 80);
      v180 = 0;
      v181 = v62;
      LODWORD(v182) = 0;
      v179 = 9;
      llvm::MachineInstr::addOperand(v35, v30, (const llvm::MachineOperand *)&v179);
      v63 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 120) + 80);
      v64 = (_QWORD *)(v63 + 24);
      if (*(_DWORD *)(v63 + 32) >= 0x41u)
        v64 = (_QWORD *)*v64;
      v65 = a1;
      v66 = (_QWORD *)*v64;
      LODWORD(v179) = 1;
      v180 = 0;
      v181 = v66;
      llvm::MachineInstr::addOperand(v172, v171, (const llvm::MachineOperand *)&v179);
      v179 = (uint64_t)&v181;
      v180 = 0x800000000;
      v176 = v178;
      v177 = 0x800000000;
      if (v29 != 4)
      {
        v67 = 4;
        v166 = v29;
        do
        {
          v68 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40 * v67) + 80);
          v69 = (unint64_t *)(v68 + 24);
          if (*(_DWORD *)(v68 + 32) >= 0x41u)
            v69 = (unint64_t *)*v69;
          v70 = *v69;
          v71 = *((_DWORD *)v172 + 10);
          v72 = v180;
          if (v180 >= (unint64_t)HIDWORD(v180))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v179, (uint64_t)&v181, v180 + 1, 4);
            v72 = v180;
          }
          v73 = (unsigned __int16)v70 >> 3;
          *(_DWORD *)(v179 + 4 * v72) = v71;
          LODWORD(v180) = v180 + 1;
          v173 = 1;
          v174 = 0;
          v175 = v70;
          llvm::MachineInstr::addOperand(v172, v171, (const llvm::MachineOperand *)&v173);
          ++v67;
          v74 = 1 << (v70 & 7);
          if ((v74 & 0x62) != 0)
          {
            for (i = (unsigned __int16)v70 >> 3; i; --i)
            {
              v76 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v67);
              sub_1C5CCA138(a1, (uint64_t)&v171, *v76, v76[1], 0, 0, a5, 0, a3, a4);
              ++v67;
            }
            if ((v70 & 0x80000000) != 0)
            {
              v29 = v166;
              if ((v70 & 7) == 1 && (unsigned __int16)v70 >> 3)
              {
                v77 = *(_DWORD *)(v179 + 4 * ((v70 >> 16) & 0x7FFF));
                v78 = *(_DWORD *)(v179 + 4 * v180 - 4) + 2;
                v79 = (v77 << 20) + 0x200000;
                v80 = v77 + 1;
                do
                {
                  v81 = *((_QWORD *)v172 + 4);
                  v82 = (unsigned int *)(v81 + 32 * (v78 - 1));
                  v83 = *v82 & 0xFF0FFFFF | (((v79 >> 20) & 0xF) << 20);
                  if (v80 > 0xE)
                    v83 = *v82 | 0xF00000;
                  *v82 = v83;
                  if (v78 >= 0xF)
                    v84 = 15;
                  else
                    v84 = v78;
                  *(_DWORD *)(v81 + 32 * v80) = *(_DWORD *)(v81 + 32 * v80) & 0xFF0FFFFF | (v84 << 20);
                  ++v78;
                  v79 += 0x100000;
                  ++v80;
                  --v73;
                }
                while (v73);
              }
            }
            else
            {
              v29 = v166;
            }
          }
          else if ((v74 & 0x18) != 0)
          {
            if ((unsigned __int16)v70 >> 3)
            {
              do
              {
                v85 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40 * v67) + 76);
                if ((v85 - 1) >= 0x3FFFFFFF)
                  v86 = 66;
                else
                  v86 = 70;
                sub_1C47BF4F4(&v171, *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40 * v67) + 76), v86, 0);
                v87 = v177;
                if (v177 >= (unint64_t)HIDWORD(v177))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v176, (uint64_t)v178, v177 + 1, 4);
                  v87 = v177;
                }
                *((_DWORD *)v176 + v87) = v85;
                LODWORD(v177) = v177 + 1;
                ++v67;
                LODWORD(v73) = v73 - 1;
              }
              while ((_DWORD)v73);
            }
          }
          else if ((unsigned __int16)v70 >> 3)
          {
            do
            {
              v88 = *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40 * v67) + 76);
              if ((v88 - 1) >= 0x3FFFFFFF)
                v89 = 2;
              else
                v89 = 6;
              sub_1C47BF4F4(&v171, v88, v89, 0);
              ++v67;
              LODWORD(v73) = v73 - 1;
            }
            while ((_DWORD)v73);
          }
        }
        while (v67 != v29);
        v65 = a1;
        if ((_DWORD)v177)
        {
          v90 = (unsigned int *)v176;
          v91 = 4 * v177;
          do
          {
            v92 = *v90;
            if (llvm::MachineInstr::findRegisterUseOperandIdx((uint64_t)v172, *v90, 0, (uint64_t)a1[3]) != -1)
            {
              v93 = v172;
              RegisterDefOperandIdx = llvm::MachineInstr::findRegisterDefOperandIdx((uint64_t)v172, v92, 0, 0, (uint64_t)a1[3]);
              *(_DWORD *)(*((_QWORD *)v93 + 4) + 32 * RegisterDefOperandIdx) &= ~0x40000000u;
            }
            ++v90;
            v91 -= 4;
          }
          while (v91);
        }
      }
      v95 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 80) + 80);
      if (v95)
      {
        v173 = 14;
        v174 = 0;
        v175 = v95;
        llvm::MachineInstr::addOperand(v172, v171, (const llvm::MachineOperand *)&v173);
      }
      v96 = (unint64_t *)v65[6];
      v97 = (unint64_t)v172;
      v98 = *((_QWORD *)v65[5] + 5);
      *((_QWORD *)v172 + 3) = v98;
      v99 = *(_QWORD *)(v98 + 32);
      v100 = *(unsigned int *)(v97 + 40);
      if ((_DWORD)v100)
      {
        v133 = *(_QWORD *)(v97 + 32);
        v134 = *(_QWORD *)(v99 + 40);
        v135 = 32 * v100;
        do
        {
          if (!*(_BYTE *)v133)
          {
            v136 = *(unsigned int *)(v133 + 4);
            if ((int)v136 >= 0)
              v137 = (uint64_t *)(*(_QWORD *)(v134 + 272) + 8 * v136);
            else
              v137 = (uint64_t *)(*(_QWORD *)(v134 + 24) + 16 * (v136 & 0x7FFFFFFF) + 8);
            v138 = *v137;
            if (*v137)
            {
              v139 = *(_QWORD *)(v138 + 16);
              *(_QWORD *)(v138 + 16) = v133;
              *(_QWORD *)(v133 + 16) = v139;
              if ((*(_BYTE *)(v133 + 3) & 1) != 0)
              {
                *(_QWORD *)(v133 + 24) = v138;
              }
              else
              {
                *(_QWORD *)(v133 + 24) = 0;
                v137 = (uint64_t *)(v139 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v133 + 16) = v133;
              *(_QWORD *)(v133 + 24) = 0;
            }
            *v137 = v133;
          }
          v133 += 32;
          v135 -= 32;
        }
        while (v135);
      }
      v101 = *(_QWORD *)(v99 + 728);
      if (v101)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v101 + 24))(v101, v97);
      v102 = *v96 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v97 = v102 | *(_QWORD *)v97 & 7;
      *(_QWORD *)(v97 + 8) = v96;
      *(_QWORD *)(v102 + 8) = v97;
      *v96 = *v96 & 7 | v97;
      if (v176 != v178)
        free(v176);
      if ((_QWORD **)v179 != &v181)
        free((void *)v179);
    }
  }
  else
  {
    if (v7 == 2)
      return;
    if (v7 != 49)
    {
      sub_1C5CC94E4(a1, a2, 0, a3, a4, *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 76), a5);
      return;
    }
    v8 = *(_QWORD **)(a2 + 32);
    v9 = *(_DWORD *)(v8[5] + 76);
    v10 = v8[10];
    v11 = v8[11];
    v12 = *(unsigned __int16 *)(v10 + 24);
    if (v9 < 0 && v12 == 65525)
    {
      v14 = a1[5];
      v13 = (unint64_t *)a1[6];
      v15 = *((_QWORD *)a1[2] + 1);
      v16 = (llvm::MachineFunction *)*((_QWORD *)v14 + 4);
      v17 = *(void **)(a2 + 64);
      v176 = v17;
      if (v17)
        llvm::MetadataTracking::track((uint64_t)&v176, (unsigned __int8 *)v17, 2);
      v18 = v15 + 480;
      v19 = *((_QWORD *)v16 + 28);
      if (v19)
        *((_QWORD *)v16 + 28) = *(_QWORD *)v19;
      else
        v19 = sub_1C484358C((uint64_t)v16 + 128, 72, 3);
      v179 = (uint64_t)v176;
      if (v176)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v176, (unsigned __int8 *)v176, (uint64_t)&v179);
        v176 = 0;
      }
      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v19, v16, v18, (unsigned __int8 **)&v179, 0);
      if (v179)
        llvm::MetadataTracking::untrack((uint64_t)&v179, (unsigned __int8 *)v179);
      if (v176)
        llvm::MetadataTracking::untrack((uint64_t)&v176, (unsigned __int8 *)v176);
      v114 = *((_QWORD *)v14 + 5);
      *(_QWORD *)(v19 + 24) = v114;
      v115 = *(_QWORD *)(v114 + 32);
      v116 = *(unsigned int *)(v19 + 40);
      if ((_DWORD)v116)
      {
        v152 = *(_QWORD *)(v19 + 32);
        v153 = *(_QWORD *)(v115 + 40);
        v154 = 32 * v116;
        do
        {
          if (!*(_BYTE *)v152)
          {
            v155 = *(unsigned int *)(v152 + 4);
            if ((int)v155 >= 0)
              v156 = (uint64_t *)(*(_QWORD *)(v153 + 272) + 8 * v155);
            else
              v156 = (uint64_t *)(*(_QWORD *)(v153 + 24) + 16 * (v155 & 0x7FFFFFFF) + 8);
            v157 = *v156;
            if (*v156)
            {
              v158 = *(_QWORD *)(v157 + 16);
              *(_QWORD *)(v157 + 16) = v152;
              *(_QWORD *)(v152 + 16) = v158;
              if ((*(_BYTE *)(v152 + 3) & 1) != 0)
              {
                *(_QWORD *)(v152 + 24) = v157;
              }
              else
              {
                *(_QWORD *)(v152 + 24) = 0;
                v156 = (uint64_t *)(v158 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v152 + 16) = v152;
              *(_QWORD *)(v152 + 24) = 0;
            }
            *v156 = v152;
          }
          v152 += 32;
          v154 -= 32;
        }
        while (v154);
      }
      v117 = *(_QWORD *)(v115 + 728);
      if (v117)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v117 + 24))(v117, v19);
      v118 = *v13 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v19 = v118 | *(_QWORD *)v19 & 7;
      *(_QWORD *)(v19 + 8) = v13;
      *(_QWORD *)(v118 + 8) = v19;
      *v13 = *v13 & 7 | v19;
      v180 = 0;
      v181 = 0;
      v182 = 0;
      LODWORD(v179) = 0x1000000;
      HIDWORD(v179) = v9;
LABEL_204:
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v19, v16, (const llvm::MachineOperand *)&v179);
      return;
    }
    if (v12 == 9)
      v103 = *(_DWORD *)(v10 + 76);
    else
      v103 = sub_1C632C13C((uint64_t)a1, v10, v11, a5);
    if (v103 != v9)
    {
      v105 = a1[5];
      v104 = (unint64_t *)a1[6];
      v106 = *((_QWORD *)a1[2] + 1);
      v16 = (llvm::MachineFunction *)*((_QWORD *)v105 + 4);
      v107 = *(void **)(a2 + 64);
      v176 = v107;
      if (v107)
        llvm::MetadataTracking::track((uint64_t)&v176, (unsigned __int8 *)v107, 2);
      v108 = v106 + 912;
      v19 = *((_QWORD *)v16 + 28);
      if (v19)
        *((_QWORD *)v16 + 28) = *(_QWORD *)v19;
      else
        v19 = sub_1C484358C((uint64_t)v16 + 128, 72, 3);
      v179 = (uint64_t)v176;
      if (v176)
      {
        llvm::MetadataTracking::retrack((uint64_t)&v176, (unsigned __int8 *)v176, (uint64_t)&v179);
        v176 = 0;
      }
      llvm::MachineInstr::MachineInstr((llvm::MachineInstr *)v19, v16, v108, (unsigned __int8 **)&v179, 0);
      if (v179)
        llvm::MetadataTracking::untrack((uint64_t)&v179, (unsigned __int8 *)v179);
      if (v176)
        llvm::MetadataTracking::untrack((uint64_t)&v176, (unsigned __int8 *)v176);
      v140 = *((_QWORD *)v105 + 5);
      *(_QWORD *)(v19 + 24) = v140;
      v141 = *(_QWORD *)(v140 + 32);
      v142 = *(unsigned int *)(v19 + 40);
      if ((_DWORD)v142)
      {
        v159 = *(_QWORD *)(v19 + 32);
        v160 = *(_QWORD *)(v141 + 40);
        v161 = 32 * v142;
        do
        {
          if (!*(_BYTE *)v159)
          {
            v162 = *(unsigned int *)(v159 + 4);
            if ((int)v162 >= 0)
              v163 = (uint64_t *)(*(_QWORD *)(v160 + 272) + 8 * v162);
            else
              v163 = (uint64_t *)(*(_QWORD *)(v160 + 24) + 16 * (v162 & 0x7FFFFFFF) + 8);
            v164 = *v163;
            if (*v163)
            {
              v165 = *(_QWORD *)(v164 + 16);
              *(_QWORD *)(v164 + 16) = v159;
              *(_QWORD *)(v159 + 16) = v165;
              if ((*(_BYTE *)(v159 + 3) & 1) != 0)
              {
                *(_QWORD *)(v159 + 24) = v164;
              }
              else
              {
                *(_QWORD *)(v159 + 24) = 0;
                v163 = (uint64_t *)(v165 + 24);
              }
            }
            else
            {
              *(_QWORD *)(v159 + 16) = v159;
              *(_QWORD *)(v159 + 24) = 0;
            }
            *v163 = v159;
          }
          v159 += 32;
          v161 -= 32;
        }
        while (v161);
      }
      v143 = *(_QWORD *)(v141 + 728);
      if (v143)
        (*(void (**)(uint64_t, unint64_t))(*(_QWORD *)v143 + 24))(v143, v19);
      v144 = *v104 & 0xFFFFFFFFFFFFFFF8;
      *(_QWORD *)v19 = v144 | *(_QWORD *)v19 & 7;
      *(_QWORD *)(v19 + 8) = v104;
      *(_QWORD *)(v144 + 8) = v19;
      *v104 = *v104 & 7 | v19;
      v180 = 0;
      v181 = 0;
      v182 = 0;
      LODWORD(v179) = 0x1000000;
      HIDWORD(v179) = v9;
      llvm::MachineInstr::addOperand((llvm::MachineInstr *)v19, v16, (const llvm::MachineOperand *)&v179);
      v180 = 0;
      v181 = 0;
      LODWORD(v179) = 0;
      HIDWORD(v179) = v103;
      v182 = 0;
      goto LABEL_204;
    }
  }
}

_OWORD *sub_1C5CCE4F4(uint64_t a1, int a2)
{
  unsigned int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int v7;
  unsigned int v8;
  _OWORD *result;
  uint64_t v10;
  uint64_t v11;

  v3 = *(_DWORD *)(a1 + 16);
  v4 = *(_QWORD *)a1;
  v5 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
  v6 = v5 | (v5 >> 2) | ((v5 | (v5 >> 2)) >> 4);
  v7 = ((v6 | (v6 >> 8)) >> 16) | v6 | (v6 >> 8);
  if ((v7 + 1) > 0x40)
    v8 = v7 + 1;
  else
    v8 = 64;
  *(_DWORD *)(a1 + 16) = v8;
  result = operator new(24 * v8, (std::align_val_t)8uLL);
  *(_QWORD *)a1 = result;
  if (v4)
  {
    sub_1C5CCE5BC(a1, v4, v4 + 24 * v3);
    JUMPOUT(0x1CAA32FB4);
  }
  *(_QWORD *)(a1 + 8) = 0;
  v10 = *(unsigned int *)(a1 + 16);
  if ((_DWORD)v10)
  {
    v11 = 24 * v10;
    do
    {
      *result = xmmword_1C6429E90;
      result = (_OWORD *)((char *)result + 24);
      v11 -= 24;
    }
    while (v11);
  }
  return result;
}

uint64_t sub_1C5CCE5BC(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = result;
  *(_QWORD *)(result + 8) = 0;
  v6 = *(unsigned int *)(result + 16);
  if ((_DWORD)v6)
  {
    v7 = *(_OWORD **)result;
    v8 = 24 * v6;
    do
    {
      *v7 = xmmword_1C6429E90;
      v7 = (_OWORD *)((char *)v7 + 24);
      v8 -= 24;
    }
    while (v8);
  }
  while (a2 != a3)
  {
    if (*(_QWORD *)a2)
      v9 = 0;
    else
      v9 = *(_DWORD *)(a2 + 8) > 0xFFFFFFFD;
    if (!v9)
    {
      v12 = 0;
      result = sub_1C632C56C((uint64_t *)v5, a2, &v12);
      v10 = v12;
      v11 = *(_QWORD *)a2;
      *(_DWORD *)(v12 + 8) = *(_DWORD *)(a2 + 8);
      *(_QWORD *)v10 = v11;
      *(_DWORD *)(v10 + 16) = *(_DWORD *)(a2 + 16);
      ++*(_DWORD *)(v5 + 8);
    }
    a2 += 24;
  }
  return result;
}

void sub_1C5CCE684(_QWORD *a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  char v10;
  uint64_t v11;
  _QWORD v12[5];
  _BYTE *v13;
  _BYTE *v14;
  uint64_t v15;
  int v16;
  _BYTE v17[128];
  _QWORD v18[4];
  uint64_t (**v19)();
  uint64_t v20;
  _QWORD *v21;
  _QWORD v22[3];
  _QWORD *v23;
  uint64_t v24;

  v24 = *MEMORY[0x1E0C80C00];
  sub_1C5D620C0((uint64_t)a1);
  v13 = v17;
  v14 = v17;
  v15 = 16;
  v16 = 0;
  v18[0] = &off_1E81984F8;
  v18[1] = &v13;
  v18[3] = v18;
  v2 = a1[82];
  a1[82] = &v19;
  v19 = &off_1E8198C00;
  v20 = v2;
  v3 = v22;
  v21 = a1;
  v22[0] = &off_1E81984F8;
  v23 = v22;
  v22[1] = &v13;
  v4 = a1[3];
  v12[0] = *a1;
  v12[1] = v4;
  v12[2] = a1;
  v12[3] = &v13;
  v12[4] = 0;
  v5 = (_QWORD *)a1[27];
  do
  {
    if (a1 + 26 == v5)
      break;
    v6 = 0;
    v5 = a1 + 26;
    do
    {
      v5 = (_QWORD *)*v5;
      if (v5)
        v7 = (uint64_t)(v5 - 1);
      else
        v7 = 0;
      if (!*(_QWORD *)(v7 + 48) && v7 != a1[24])
        goto LABEL_15;
      sub_1C4774094((llvm::SmallPtrSetImplBase *)&v13, v7);
      if (!v10)
        continue;
      sub_1C5CCE868((uint64_t)v12, v7, v8, v9);
      if (*(_QWORD *)(v7 + 48))
      {
        v6 = 1;
        continue;
      }
      v6 = 1;
      if (v7 != a1[24])
      {
LABEL_15:
        v5 = (_QWORD *)v5[1];
        sub_1C5D3DF28((uint64_t)a1, v7);
        sub_1C63655F0((uint64_t)a1, v7);
      }
    }
    while (v5 != (_QWORD *)a1[27]);
  }
  while ((v6 & 1) != 0);
  sub_1C6365284(a1);
  v19 = &off_1E8198C00;
  if (v23 == v22)
  {
    v11 = 4;
LABEL_21:
    (*(void (**)(_QWORD *))(*v3 + 8 * v11))(v3);
  }
  else if (v23)
  {
    v11 = 5;
    v3 = v23;
    goto LABEL_21;
  }
  v21[82] = v20;
  if (v14 != v13)
    free(v14);
}

void sub_1C5CCE868(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4)
{
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned __int8 *v28;
  uint64_t *v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unsigned __int8 *v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unsigned __int8 *v44;
  uint64_t v45;
  int v46;
  uint64_t v48;
  uint64_t *v49;
  uint64_t *v50;
  uint64_t v51;
  int v52;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  unsigned __int8 *v65;
  int v66;
  uint64_t ExtendedSizeInBits;
  int v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  unsigned __int8 *v72;
  int v73;
  uint64_t v74;
  __int16 v75;
  __int128 v76;
  __int128 *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  unsigned __int8 *v85;
  int v86;
  uint64_t v87;
  llvm::detail::DoubleAPFloat *v88;
  void *v89;
  unint64_t v90;
  unsigned int v91;
  uint64_t i;
  uint64_t *v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  unint64_t v100;
  llvm *v101;
  uint64_t v102;
  int v103;
  _QWORD *v104;
  int v105;
  int v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t *v111;
  int8x8_t v112;
  int v113;
  uint64_t v114;
  __int16 v115;
  __int128 v116;
  unint64_t v117;
  uint64_t v118;
  BOOL v119;
  uint64_t v120;
  char v121;
  uint8x8_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  int v129;
  uint64_t v130;
  int v131;
  int v132;
  _QWORD *v133;
  int8x8_t v134;
  int v135;
  unint64_t v136;
  int v137;
  uint64_t v138;
  BOOL v139;
  _BYTE *v140;
  uint8x8_t v141;
  unint64_t v142;
  uint64_t (*v143)(void);
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  llvm::LLVMContext *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  int v157;
  uint64_t v158;
  int v159;
  uint64_t v160;
  uint64_t *v161;
  int v162;
  char v163;
  uint64_t v164;
  uint64_t v165;
  unint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  BOOL v170;
  int v172;
  unint64_t v173;
  unint64_t v174;
  int v175;
  BOOL v176;
  llvm::LLVMContext *v177;
  unint64_t v178;
  uint64_t v179;
  uint64_t v180;
  const char *v181;
  uint64_t v182;
  int v183;
  llvm::LLVMContext *v184;
  unint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  BOOL v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  BOOL v199;
  unsigned __int8 v200;
  uint64_t v201;
  unint64_t v202;
  uint64_t v203;
  llvm *v204;
  uint64_t v205;
  uint64_t v206;
  __int16 v207;
  uint64_t v208;
  uint64_t v209;
  __int16 v210;
  unsigned __int8 v211;
  uint64_t v212;
  llvm *v213;
  uint64_t v214;
  __int16 v215;
  uint64_t v216;
  __int16 v217;
  uint64_t *v218;
  uint64_t v219;
  __int128 *v220;
  unsigned int v221;
  _QWORD *v222;
  int v223;
  uint64_t *v224;
  _QWORD *v225;
  unint64_t v226;
  unint64_t v227;
  uint64_t *v228;
  int v229;
  unsigned __int8 v230;
  unint64_t v231;
  uint64_t v232;
  uint64_t v233;
  __int16 v234;
  uint64_t *v235;
  uint64_t v236;
  __int128 *v237;
  unsigned int v238;
  uint64_t *v239;
  uint64_t v240;
  __int128 *v241;
  unsigned int v242;
  unsigned int v243;
  uint64_t v244;
  int v245;
  uint64_t v246;
  uint64_t v247;
  llvm::LLVMContext *v248;
  uint64_t v249;
  llvm::detail::DoubleAPFloat *v250;
  void *v251;
  void *v252;
  uint64_t v253;
  uint64_t v254;
  llvm *v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  llvm::detail::DoubleAPFloat *v262;
  void *v263;
  uint64_t v264;
  unsigned int *p_src;
  void **v266;
  unint64_t v267;
  unsigned int v268;
  void **v269;
  unint64_t v270;
  uint64_t v271;
  unsigned __int8 *v272;
  unsigned int v273;
  unsigned int v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  unsigned __int8 *v278;
  unsigned int v279;
  unsigned int v280;
  uint64_t v281;
  __int128 *v282;
  llvm::LLVMContext *v283;
  unint64_t v284;
  uint64_t v285;
  llvm::LLVMContext *v286;
  uint64_t v287;
  uint64_t *v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  _QWORD *v292;
  unsigned int v293;
  uint64_t v294;
  unsigned int v295;
  unint64_t v296;
  uint64_t *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  _QWORD *v302;
  __int16 v303;
  unsigned int v304;
  unint64_t v305;
  uint64_t v306;
  uint64_t v307;
  int v308;
  int v309;
  uint64_t *v310;
  uint64_t v311;
  llvm *v312;
  uint64_t v313;
  llvm *v314;
  uint64_t v315;
  _QWORD *v316;
  unint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t *v320;
  unsigned int v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  llvm *v325;
  uint64_t v326;
  uint64_t v327;
  int v328;
  uint64_t *v329;
  int v330;
  unsigned int v331;
  uint64_t v332;
  unsigned int v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t *v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  _QWORD *v341;
  __int16 v342;
  unsigned int v343;
  uint64_t v344;
  uint64_t v345;
  int v346;
  uint64_t *v347;
  uint64_t v348;
  llvm *v349;
  uint64_t v350;
  llvm *ShiftAmountTy;
  uint64_t v352;
  _QWORD *v353;
  unint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t *v357;
  unsigned int v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  llvm *v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t *v366;
  uint64_t v367;
  __int128 *v368;
  unsigned int v369;
  uint64_t v370;
  int v371;
  uint64_t v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  _QWORD *v377;
  unint64_t v378;
  unint64_t v379;
  uint64_t v380;
  llvm *v381;
  uint64_t v382;
  uint64_t v383;
  unsigned __int8 *v384;
  unsigned __int8 **v385;
  uint64_t v386;
  uint64_t v387;
  llvm *v388;
  uint64_t v389;
  uint64_t v390;
  unint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t *v394;
  int v395;
  uint64_t v396;
  uint64_t v397;
  unint64_t v398;
  uint64_t v399;
  uint64_t v400;
  unint64_t v401;
  uint64_t v402;
  llvm::LLVMContext *v403;
  uint64_t v404;
  uint64_t v405;
  __int128 *v406;
  _QWORD *v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  uint64_t *v411;
  llvm *v412;
  uint64_t v413;
  uint64_t v414;
  llvm *v415;
  uint64_t v416;
  _QWORD *v417;
  unint64_t v418;
  uint64_t v419;
  __int16 v420;
  uint64_t v421;
  uint64_t *v422;
  unsigned int v423;
  unsigned int v424;
  uint64_t v425;
  uint64_t v426;
  _QWORD *v427;
  unsigned int v428;
  unsigned int v429;
  unsigned int v430;
  _QWORD *v431;
  uint64_t *v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  llvm *v436;
  uint64_t v437;
  _QWORD *v438;
  unint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t *v442;
  uint64_t v443;
  __int128 *v444;
  unsigned int v445;
  _QWORD *v446;
  unsigned int v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  llvm *v452;
  _QWORD *v453;
  unint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t *v457;
  unsigned int v458;
  unsigned int v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  unint64_t v463;
  __int128 *v464;
  unsigned int v465;
  uint64_t *v466;
  unsigned int v467;
  unsigned int v468;
  uint64_t v469;
  _QWORD *v470;
  unsigned int v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  llvm::LLVMContext *v475;
  uint64_t v476;
  uint64_t ExtendedIntegerVT;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  llvm::LLVMContext *v483;
  uint64_t v484;
  uint64_t v485;
  uint64_t v486;
  void ***v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  llvm::LLVMContext *v493;
  uint64_t v494;
  llvm::LLVMContext *v495;
  size_t __nb;
  unsigned int __n;
  llvm *__na;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  _QWORD *v502;
  uint64_t v503;
  _QWORD *v504;
  uint64_t v505;
  unsigned int v506;
  unint64_t v507;
  llvm::LLVMContext *v508;
  unsigned int *v509;
  uint64_t v510;
  unint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  _QWORD *v516;
  llvm::LLVMContext *v517;
  uint64_t v518;
  uint64_t v519;
  unint64_t v520;
  uint64_t v521;
  _QWORD *v522;
  char v523;
  uint64_t v524;
  unint64_t v525;
  uint64_t v526;
  uint64_t *v527;
  uint64_t v528;
  uint64_t v529;
  char v530;
  uint64_t v531;
  unint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t *v535;
  uint64_t *v536;
  uint64_t v537;
  unint64_t v538;
  uint64_t v539;
  uint64_t v540;
  _BYTE *v541;
  uint64_t v542;
  uint64_t v543;
  unint64_t v544;
  __int128 v545;
  __int128 v546;
  unsigned __int8 *v547;
  int v548;
  uint64_t v549[3];
  __int128 v550;
  uint64_t v551;
  __int128 v552;
  uint64_t v553;
  __int128 v554;
  uint64_t v555;
  unsigned __int8 *v556;
  int v557;
  void **v558;
  unsigned int v559;
  void *__src;
  unsigned int v561;
  unsigned __int8 *v562;
  int v563;
  __int128 v564;
  __int128 v565;
  uint64_t v566;
  int v567;
  uint64_t v568;

  v4 = a2;
  v568 = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int16 *)(a2 + 24);
  if ((_DWORD)v5 == 9 || (_DWORD)v5 == 35)
    return;
  if ((int)v5 <= 252)
  {
    if ((int)v5 <= 133)
    {
      LOBYTE(v7) = 0;
      switch((int)v5)
      {
        case 22:
        case 23:
        case 24:
        case 25:
          goto LABEL_27;
        case 26:
        case 35:
        case 36:
        case 37:
        case 38:
        case 39:
        case 40:
        case 41:
        case 42:
        case 43:
        case 44:
        case 45:
        case 49:
        case 50:
        case 51:
        case 52:
        case 54:
        case 56:
        case 57:
        case 58:
        case 59:
        case 60:
        case 61:
        case 62:
        case 63:
        case 64:
        case 65:
        case 66:
        case 67:
        case 68:
        case 69:
        case 70:
        case 71:
        case 72:
        case 73:
        case 74:
        case 75:
        case 76:
        case 77:
        case 78:
        case 79:
        case 80:
        case 81:
          goto LABEL_56;
        case 27:
        case 28:
          goto LABEL_95;
        case 29:
        case 30:
        case 31:
        case 32:
        case 33:
        case 34:
        case 53:
        case 55:
          goto LABEL_6;
        case 46:
        case 47:
        case 48:
          goto LABEL_21;
        case 82:
        case 83:
        case 84:
        case 85:
        case 86:
        case 87:
          goto LABEL_18;
        case 88:
        case 89:
        case 90:
        case 91:
        case 92:
        case 93:
        case 94:
        case 95:
          a3 = **(_QWORD **)(v4 + 40);
          if (!(_BYTE)a3)
            goto LABEL_91;
          v16 = *(_QWORD *)(a1 + 8);
          LOBYTE(v7) = *(_BYTE *)(v16 + 390 * a3 + v5 + 3862);
          if (!(_BYTE)v7)
          {
            if ((*(unsigned int (**)(uint64_t))(*(_QWORD *)v16 + 520))(v16))
              LOBYTE(v7) = 0;
            else
              LOBYTE(v7) = 2;
          }
          goto LABEL_94;
        default:
          if ((v5 - 126) >= 4)
            goto LABEL_56;
          goto LABEL_11;
      }
    }
    switch((int)v5)
    {
      case 202:
      case 203:
      case 219:
        goto LABEL_34;
      case 204:
        if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 80))
          goto LABEL_91;
        LOBYTE(v7) = *(_BYTE *)(*(_QWORD *)(a1 + 8)
                              + 390 * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 80)
                              + 4066);
        goto LABEL_94;
      case 205:
      case 206:
      case 207:
      case 208:
      case 209:
      case 212:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 220:
        goto LABEL_56;
      case 210:
      case 211:
        goto LABEL_18;
      case 213:
LABEL_6:
        LOBYTE(v7) = 2;
        if (**(_BYTE **)(v4 + 40))
        {
          if (*(_BYTE *)(*(_QWORD *)(a1 + 8) + 390 * **(unsigned __int8 **)(v4 + 40) + v5 + 3862))
            LOBYTE(v7) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 390 * **(unsigned __int8 **)(v4 + 40) + v5 + 3862);
          else
            LOBYTE(v7) = 2;
        }
        goto LABEL_94;
      case 221:
        goto LABEL_11;
      default:
        v11 = (v5 - 134);
        if (v11 > 0x3B)
          goto LABEL_33;
        if (((1 << (v5 + 122)) & 0xC00000000000030) != 0)
          goto LABEL_15;
        if (((1 << (v5 + 122)) & 3) != 0)
          goto LABEL_11;
        if (v11 == 14)
          goto LABEL_34;
LABEL_33:
        if ((v5 - 242) < 4)
          goto LABEL_34;
        goto LABEL_56;
    }
  }
  switch((int)v5)
  {
    case 280:
      v14 = *(_QWORD *)(a1 + 8);
      v15 = 6482;
      goto LABEL_93;
    case 281:
    case 284:
    case 287:
    case 288:
    case 289:
    case 290:
    case 292:
    case 293:
    case 294:
    case 295:
    case 296:
    case 297:
    case 298:
    case 299:
    case 300:
    case 301:
    case 302:
    case 303:
    case 304:
    case 305:
    case 306:
    case 307:
    case 308:
    case 310:
    case 312:
    case 313:
    case 314:
    case 315:
    case 317:
    case 318:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 341:
    case 342:
    case 343:
    case 344:
    case 345:
    case 346:
    case 347:
    case 348:
    case 349:
    case 350:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 360:
    case 361:
    case 362:
    case 363:
    case 364:
    case 369:
    case 370:
    case 371:
LABEL_56:
      if (v5 >= 0x186)
      {
        LOBYTE(v7) = (*(uint64_t (**)(_QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 512))(*(_QWORD *)(a1 + 8), v4);
        goto LABEL_94;
      }
LABEL_18:
      LODWORD(v13) = **(unsigned __int8 **)(v4 + 40);
      if (!**(_BYTE **)(v4 + 40))
        goto LABEL_91;
LABEL_36:
      v18 = *(_QWORD *)(a1 + 8) + 390 * v13;
      goto LABEL_37;
    case 282:
    case 283:
LABEL_27:
      if (!**(_BYTE **)(v4 + 40))
        goto LABEL_91;
      if (*(_BYTE *)(*(_QWORD *)(a1 + 8) + 390 * **(unsigned __int8 **)(v4 + 40) + v5 + 3862))
        LOBYTE(v7) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 390 * **(unsigned __int8 **)(v4 + 40) + v5 + 3862);
      else
        LOBYTE(v7) = 4;
      goto LABEL_94;
    case 285:
      a4 = *(_BYTE **)(v4 + 40);
      if (!*a4)
        goto LABEL_78;
      v25 = *(_QWORD *)(a1 + 8) + 390 * *a4;
      v26 = 4147;
      goto LABEL_77;
    case 286:
      a4 = *(_BYTE **)(v4 + 40);
      if (!*a4)
        goto LABEL_78;
      v25 = *(_QWORD *)(a1 + 8) + 390 * *a4;
      v26 = 4148;
LABEL_77:
      v7 = *(unsigned __int8 *)(v25 + v26);
      if (v7 != 2)
        goto LABEL_94;
LABEL_78:
      v27 = *(_QWORD *)(a1 + 16);
      v28 = *(unsigned __int8 **)(v4 + 64);
      *(_QWORD *)&v564 = v28;
      if (v28)
      {
        llvm::MetadataTracking::track((uint64_t)&v564, v28, 2);
        a4 = *(_BYTE **)(v4 + 40);
      }
      DWORD2(v564) = *(_DWORD *)(v4 + 60);
      v29 = sub_1C636D648(v27, (const char *)0x11C, (const llvm::APInt *)&v564, (uint64_t)a4, *(unsigned __int16 *)(v4 + 58), **(_QWORD **)(v4 + 32), *(_QWORD *)(*(_QWORD *)(v4 + 32) + 8));
      if ((_QWORD)v564)
        llvm::MetadataTracking::untrack((uint64_t)&v564, (unsigned __int8 *)v564);
      sub_1C5CD1178(a1, v4, (uint64_t)v29);
      sub_1C5CCE868(a1, v29);
      return;
    case 291:
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 80) + 40)
                     + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 88)))
        goto LABEL_91;
      v14 = *(_QWORD *)(a1 + 8)
          + 390
          * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 80) + 40)
                               + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 88));
      v15 = 4153;
      goto LABEL_93;
    case 309:
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                     + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48)))
        goto LABEL_91;
      v14 = *(_QWORD *)(a1 + 8)
          + 390
          * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                               + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48));
      v15 = 4171;
      goto LABEL_93;
    case 311:
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                     + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48)))
        goto LABEL_91;
      v14 = *(_QWORD *)(a1 + 8)
          + 390
          * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                               + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48));
      v15 = 4173;
      goto LABEL_93;
    case 316:
      if (!**(_BYTE **)(v4 + 40))
        goto LABEL_91;
      v14 = *(_QWORD *)(a1 + 8) + 390 * **(unsigned __int8 **)(v4 + 40);
      v15 = 4178;
      goto LABEL_93;
    case 319:
    case 320:
    case 372:
    case 373:
    case 374:
    case 375:
    case 376:
    case 377:
    case 378:
    case 379:
    case 380:
    case 381:
    case 382:
    case 383:
    case 384:
    case 385:
    case 386:
LABEL_11:
      v8 = *(_QWORD *)(v4 + 32);
      v9 = *(_QWORD *)(v8 + 40);
      v10 = *(unsigned int *)(v8 + 48);
      goto LABEL_35;
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 331:
    case 332:
    case 333:
LABEL_34:
      v17 = *(uint64_t **)(v4 + 32);
      v9 = *v17;
      v10 = *((unsigned int *)v17 + 2);
LABEL_35:
      v13 = *(unsigned __int8 *)(*(_QWORD *)(v9 + 40) + 16 * v10);
      if (v13)
        goto LABEL_36;
      goto LABEL_91;
    case 365:
LABEL_15:
      if ((_DWORD)v5 == 192)
      {
        v12 = 4;
LABEL_50:
        v21 = v5 == 139;
        goto LABEL_51;
      }
      v19 = (_DWORD)v5 == 365 || (_DWORD)v5 == 193;
      v20 = 1;
      if (v19)
        v20 = 2;
      v12 = 3;
      if ((v5 & 0xFFFE) != 0x8A)
        v12 = v20;
      if ((_DWORD)v5 != 138)
      {
        if ((_DWORD)v5 == 260)
        {
          v21 = 2;
          goto LABEL_51;
        }
        goto LABEL_50;
      }
      v21 = 1;
LABEL_51:
      v22 = *(_QWORD *)(v4 + 32);
      v23 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v22 + 40 * v21) + 40)
                      + 16 * *(unsigned int *)(v22 + 40 * v21 + 8));
      LODWORD(v22) = *(_DWORD *)(*(_QWORD *)(v22 + 40 * v12) + 76);
      v24 = *(_QWORD *)(a1 + 8);
      LOBYTE(v7) = (*(_DWORD *)(v24 + 92 * v22 + 4 * (v23 >> 3) + 171588) >> (4 * (v23 & 7))) & 0xF;
      if ((_BYTE)v7)
        goto LABEL_94;
      if ((_DWORD)v5 == 192)
      {
        if (**(_BYTE **)(v4 + 40))
        {
          LOBYTE(v7) = *(_BYTE *)(v24 + 390 * **(unsigned __int8 **)(v4 + 40) + 4054);
          goto LABEL_94;
        }
        goto LABEL_91;
      }
      if (!(_BYTE)v23)
      {
LABEL_91:
        LOBYTE(v7) = 2;
        goto LABEL_94;
      }
      v18 = v24 + 390 * v23;
LABEL_37:
      LOBYTE(v7) = *(_BYTE *)(v18 + v5 + 3862);
LABEL_94:
      LODWORD(v5) = *(unsigned __int16 *)(v4 + 24);
LABEL_95:
      if ((v5 - 175) > 0x16)
        goto LABEL_118;
      v30 = 1 << (v5 + 81);
      if ((v30 & 0x1F) != 0)
      {
        v39 = *(uint64_t **)(v4 + 32);
        v40 = *v39;
        v41 = v39[1];
        v42 = v39[5];
        v43 = v39[6];
        v44 = (unsigned __int8 *)(*(_QWORD *)(v42 + 40) + 16 * v43);
        if (*v44)
        {
          if (*v44 - 15 < 0x9C)
            goto LABEL_118;
        }
        else if ((*(_DWORD *)(*((_QWORD *)v44 + 1) + 8) & 0xFE) == 0x12)
        {
          goto LABEL_118;
        }
        v50 = (uint64_t *)(*(_QWORD *)(v40 + 40) + 16 * v41);
        v51 = sub_1C5D43BB0(*(_QWORD *)(a1 + 16), *v50, v50[1], v42, v43);
        if (v42 != v51 || v52 != (_DWORD)v43)
        {
          v49 = sub_1C636DCBC(*(_QWORD *)(a1 + 16), v4, v40, v41, v51, v52);
LABEL_116:
          v54 = (uint64_t)v49;
          if (v49 != (uint64_t *)v4)
          {
            sub_1C5CD1178(a1, v4, (uint64_t)v49);
            goto LABEL_119;
          }
        }
      }
      else
      {
        if ((v30 & 0x700060) == 0)
          goto LABEL_118;
        v31 = *(uint64_t **)(v4 + 32);
        v32 = *v31;
        v33 = *((unsigned int *)v31 + 2);
        v35 = v31[5];
        v34 = v31[6];
        v36 = v31[10];
        v37 = v31[11];
        v38 = (unsigned __int8 *)(*(_QWORD *)(v36 + 40) + 16 * v37);
        if (*v38)
        {
          if (*v38 - 15 < 0x9C)
            goto LABEL_118;
        }
        else if ((*(_DWORD *)(*((_QWORD *)v38 + 1) + 8) & 0xFE) == 0x12)
        {
          goto LABEL_118;
        }
        v45 = sub_1C5D43BB0(*(_QWORD *)(a1 + 16), *(_QWORD *)(*(_QWORD *)(v32 + 40) + 16 * v33), *(_QWORD *)(*(_QWORD *)(v32 + 40) + 16 * v33 + 8), v36, v37);
        if (v36 != v45 || v46 != (_DWORD)v37)
        {
          v48 = *(_QWORD *)(a1 + 16);
          *(_QWORD *)&v564 = v32;
          DWORD2(v564) = v33;
          *(_QWORD *)&v565 = v35;
          DWORD2(v565) = v34;
          v566 = v45;
          v567 = v46;
          v49 = sub_1C636DEEC(v48, v4, (uint64_t *)&v564, 3);
          goto LABEL_116;
        }
      }
LABEL_118:
      v54 = v4;
LABEL_119:
      switch((char)v7)
      {
        case 0:
          return;
        case 1:
          sub_1C5CDB9A0((uint64_t *)a1, v54);
          return;
        case 2:
          goto LABEL_128;
        case 3:
          goto LABEL_129;
        case 4:
          v55 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD))(**(_QWORD **)(a1 + 8) + 1968))(*(_QWORD *)(a1 + 8), v54, 0, *(_QWORD *)(a1 + 16));
          if (v55)
          {
            v57 = v55;
            if (v54 != v55 || v56 != 0)
            {
              v59 = *(unsigned __int16 *)(v54 + 58);
              if ((_DWORD)v59 == 1)
              {
                sub_1C5CD11CC(a1, v54, 0, v55, v56);
              }
              else
              {
                *(_QWORD *)&v564 = &v565;
                *((_QWORD *)&v564 + 1) = 0x800000000;
                if ((_DWORD)v59)
                {
                  v91 = 0;
                  for (i = 0; i != v59; ++i)
                  {
                    if (v91 >= HIDWORD(v564))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v564, (uint64_t)&v565, v91 + 1, 16);
                      v91 = DWORD2(v564);
                    }
                    v93 = (uint64_t *)(v564 + 16 * v91);
                    *v93 = v57;
                    v93[1] = i;
                    v91 = ++DWORD2(v564);
                  }
                  v111 = (uint64_t *)v564;
                }
                else
                {
                  v111 = (uint64_t *)&v565;
                }
                sub_1C5CD122C(a1, v54, v111);
                if ((__int128 *)v564 != &v565)
                  free((void *)v564);
              }
            }
          }
          else
          {
LABEL_128:
            if ((sub_1C5CD12A8(a1, v54, a3, (uint64_t)a4) & 1) == 0)
LABEL_129:
              sub_1C5CD9644(a1, v54, a3, (uint64_t)a4);
          }
          break;
        default:
          LODWORD(v5) = *(unsigned __int16 *)(v54 + 24);
          v4 = v54;
          goto LABEL_131;
      }
      return;
    case 366:
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                     + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48)))
        goto LABEL_91;
      v14 = *(_QWORD *)(a1 + 8)
          + 390
          * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                               + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48));
      v15 = 4228;
      goto LABEL_93;
    case 367:
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                     + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48)))
        goto LABEL_91;
      v14 = *(_QWORD *)(a1 + 8)
          + 390
          * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                               + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48));
      v15 = 4229;
      goto LABEL_93;
    case 368:
      if (!*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                     + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48)))
        goto LABEL_91;
      v14 = *(_QWORD *)(a1 + 8)
          + 390
          * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                               + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48));
      v15 = 4230;
LABEL_93:
      LOBYTE(v7) = *(_BYTE *)(v14 + v15);
      goto LABEL_94;
    default:
      switch((int)v5)
      {
        case 260:
          goto LABEL_15;
        case 261:
        case 262:
        case 263:
        case 264:
        case 265:
        case 266:
        case 268:
          goto LABEL_56;
        case 267:
LABEL_21:
          v14 = *(_QWORD *)(a1 + 8) + v5;
          v15 = 4252;
          goto LABEL_93;
        case 269:
        case 270:
          goto LABEL_131;
        case 271:
          v14 = *(_QWORD *)(a1 + 8);
          if (**(_BYTE **)(v4 + 40) && *(_BYTE *)(v14 + 390 * **(unsigned __int8 **)(v4 + 40) + 4133) == 1)
          {
            LOBYTE(v7) = 1;
            goto LABEL_94;
          }
          v15 = 4523;
          goto LABEL_93;
        default:
          if ((v5 - 253) >= 2)
            goto LABEL_56;
LABEL_131:
          if ((v5 - 269) < 2)
            return;
          if ((_DWORD)v5 == 253)
          {
            v60 = *(uint64_t **)(v4 + 32);
            v62 = *v60;
            v61 = v60[1];
            v64 = v60[5];
            v63 = v60[6];
            v65 = *(unsigned __int8 **)(v4 + 64);
            *(_QWORD *)&v552 = v65;
            if (v65)
              llvm::MetadataTracking::track((uint64_t)&v552, v65, 2);
            DWORD2(v552) = *(_DWORD *)(v4 + 60);
            v66 = (*(unsigned __int16 *)(v4 + 26) >> 10) & 3;
            if (!v66)
            {
              v99 = *(_QWORD *)(a1 + 8);
              v100 = *(unsigned __int16 *)(v4 + 24);
              if (v100 > 0x185
                || (v101 = (llvm *)**(unsigned __int8 **)(v4 + 40),
                    *(_BYTE *)(v99 + 390 * (_QWORD)v101 + v100 + 3862) == 4))
              {
                v102 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v99 + 1968))(v99, v4, 0, *(_QWORD *)(a1 + 16));
                if (!v102)
                  goto LABEL_432;
                v104 = (_QWORD *)v102;
                v105 = v103;
                v106 = 1;
                v107 = (uint64_t *)v102;
              }
              else if (*(_BYTE *)(v99 + 390 * **(unsigned __int8 **)(v4 + 40) + v100 + 3862))
              {
                v230 = sub_1C6132CB4(v99, v100, **(_BYTE **)(v4 + 40));
                v104 = sub_1C636B420(*(_QWORD *)(a1 + 16), v230, 0, (uint64_t)&v552, v62, v61, v64, v63, *(_QWORD *)(v4 + 96));
                v232 = *(_QWORD *)(a1 + 16);
                v233 = *(_QWORD *)(v232 + 832);
                if (v233)
                  v234 = *(_WORD *)(v233 + 8);
                else
                  v234 = 0;
                v107 = sub_1C5D52060(v232, 216, (const llvm::APInt *)&v552, v101, 0, (uint64_t)v104, v231, v234);
                v105 = v245;
                v106 = 1;
              }
              else
              {
                if ((llvm::TargetLoweringBase::allowsMemoryAccessForAlignment(v99, *(llvm::LLVMContext **)(*(_QWORD *)(a1 + 16) + 56), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 16) + 40) + 40) + 272, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), 0) & 1) != 0)goto LABEL_432;
                sub_1C5D9E418(*(uint64_t **)(a1 + 8), v4, *(_QWORD *)(a1 + 16), (uint64_t)&v564);
                v107 = (uint64_t *)v564;
                v105 = DWORD2(v564);
                v104 = (_QWORD *)v565;
                v106 = DWORD2(v565);
              }
              if (v104 != (_QWORD *)v4)
              {
                sub_1C5D6146C(*(_QWORD *)(a1 + 16), v4, 0, (uint64_t)v107, v105);
                sub_1C5D6146C(*(_QWORD *)(a1 + 16), v4, 1, (uint64_t)v104, v106);
                v108 = *(_QWORD *)(a1 + 32);
                if (!v108)
                {
LABEL_431:
                  sub_1C5CDE8D8(a1, v4);
                  goto LABEL_432;
                }
                *(_QWORD *)&v564 = v107;
                sub_1C62B3A60(v108, (uint64_t *)&v564);
                v109 = *(_QWORD *)(a1 + 32);
                *(_QWORD *)&v564 = v104;
                v110 = (uint64_t *)&v564;
LABEL_435:
                sub_1C62B3A60(v109, v110);
                goto LABEL_431;
              }
LABEL_432:
              v384 = (unsigned __int8 *)v552;
              if (!(_QWORD)v552)
                return;
              v385 = (unsigned __int8 **)&v552;
              goto LABEL_476;
            }
            v550 = *(_OWORD *)(v4 + 80);
            if ((_BYTE)v550)
              ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v550);
            else
              ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v550);
            v112 = (int8x8_t)ExtendedSizeInBits;
            v113 = v68;
            v114 = *(_QWORD *)(v4 + 96);
            v115 = *(_WORD *)(v114 + 32);
            v116 = *(_OWORD *)(v114 + 56);
            v564 = *(_OWORD *)(v114 + 40);
            v565 = v116;
            v117 = sub_1C47C1C70((unsigned __int8 *)&v550);
            v121 = 4 * v66;
            if (*(_QWORD *)&v112 == 8 * v117 && v113 == (_DWORD)v118
              || v550 == 2
              && (!**(_BYTE **)(v4 + 40)
               || ((*(unsigned __int16 *)(*(_QWORD *)(a1 + 8) + 358 * **(unsigned __int8 **)(v4 + 40) + 73676) >> v121) & 0xF) != 1))
            {
              v122 = (uint8x8_t)vcnt_s8(v112);
              v122.i16[0] = vaddlv_u8(v122);
              if (v122.u32[0] == 1)
              {
                v123 = *(uint64_t **)(v4 + 40);
                v124 = *v123;
                v125 = *(_QWORD *)(a1 + 8);
                v126 = *v123;
                if (*v123 && (_BYTE)v550)
                {
                  v127 = (*(unsigned __int16 *)(v125
                                              + 358 * *v123
                                              + 2 * v550
                                              + 73672) >> v121) & 0xF;
                  if (v127 == 4)
                  {
                    v128 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)v125 + 1968))(v125, v4, 0, *(_QWORD *)(a1 + 16));
                    if (!v128)
                      goto LABEL_432;
                    v130 = v128;
                    v131 = 1;
                    v132 = v129;
                    v133 = (_QWORD *)v128;
                    goto LABEL_429;
                  }
                  if (!v127)
                  {
                    if ((llvm::TargetLoweringBase::allowsMemoryAccess(v125, *(_QWORD *)(*(_QWORD *)(a1 + 16) + 56), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 16) + 40) + 40) + 272, *(_QWORD *)(v4 + 80), *(_QWORD *)(v4 + 88), *(_QWORD *)(v4 + 96), 0) & 1) != 0)goto LABEL_432;
                    sub_1C5D9E418(*(uint64_t **)(a1 + 8), v4, *(_QWORD *)(a1 + 16), (uint64_t)&v545);
                    v130 = v545;
                    v132 = DWORD2(v545);
                    v133 = (_QWORD *)v546;
                    v131 = DWORD2(v546);
                    goto LABEL_429;
                  }
                }
                v144 = v123[1];
                *(_QWORD *)&v545 = *v123;
                *((_QWORD *)&v545 + 1) = v144;
                v145 = v550;
                if (v126 && (_BYTE)v550)
                {
                  if ((*(_WORD *)(v125 + 358 * v126 + 2 * v550 + 73672) & 0xF0) == 0)
                  {
LABEL_273:
                    v225 = sub_1C636B5B0(*(_QWORD *)(a1 + 16), 1, (uint64_t)&v552, v124, v144, v62, v61, v120, v64, v63, v145, *((uint64_t *)&v550 + 1), *(_QWORD *)(v4 + 96));
                    v133 = v225;
                    v227 = v226;
                    if (v66 == 2)
                    {
                      v253 = *(_QWORD *)(a1 + 16);
                      v254 = v225[5] + 16 * v226;
                      v255 = *(llvm **)v254;
                      v256 = *(_QWORD *)(v254 + 8);
                      v257 = sub_1C6367494(v253, v550, *((uint64_t *)&v550 + 1));
                      v260 = *(_QWORD *)(v253 + 832);
                      if (v260)
                        LOWORD(v260) = *(_WORD *)(v260 + 8);
                      v228 = sub_1C5D56C70(v253, 204, (const llvm::APInt *)&v552, v255, v256, (uint64_t)v133, v227, v259, v257, v258, v260);
                    }
                    else
                    {
                      v228 = sub_1C5D3F9A0(*(_QWORD *)(a1 + 16), (uint64_t)v225, v226, (const llvm::APInt *)&v552, v550, *((uint64_t *)&v550 + 1));
                    }
                    goto LABEL_322;
                  }
                }
                else if (!(_BYTE)v550)
                {
                  goto LABEL_254;
                }
                v169 = *(unsigned __int8 *)(v125 + v550 + 1886);
                if (*(_QWORD *)(v125 + 8 * v550 + 96)
                  || *(_BYTE *)(v125 + v550 + 1886)
                  && ((*(unsigned __int16 *)(v125
                                           + 358 * *(unsigned __int8 *)(v125 + v550 + 1886)
                                           + 2 * v550
                                           + 73672) >> v121) & 0xF) == 0)
                {
                  if (*((_QWORD *)&v550 + 1))
                    v170 = v550 == 0;
                  else
                    v170 = 0;
                  if (!v170 && (_DWORD)v169 == v550)
                    v172 = 0;
                  else
                    v172 = v66;
                  v133 = sub_1C636B5B0(*(_QWORD *)(a1 + 16), v172, (uint64_t)&v552, v169, 0, v62, v61, v120, v64, v63, v550, *((uint64_t *)&v550 + 1), *(_QWORD *)(v4 + 96));
                  v174 = v173;
                  if ((_BYTE)v550)
                  {
                    v175 = 1;
                    if (v550 - 8 < 7 || (v550 - 75) < 0x2Du)
                    {
LABEL_311:
                      if (v66 == 3)
                      {
                        v244 = 199;
                      }
                      else if (v66 == 2)
                      {
                        v244 = 198;
                      }
                      else if (v175)
                      {
                        v244 = 215;
                      }
                      else
                      {
                        v244 = 200;
                      }
                      v203 = *(_QWORD *)(a1 + 16);
                      v246 = *(_QWORD *)(v4 + 40);
                      v204 = *(llvm **)v246;
                      v205 = *(_QWORD *)(v246 + 8);
                      v247 = *(_QWORD *)(v203 + 832);
                      if (v247)
                        v207 = *(_WORD *)(v247 + 8);
                      else
                        v207 = 0;
                      goto LABEL_321;
                    }
                    v176 = (v550 + 104) >= 0x13u;
                  }
                  else
                  {
                    if ((*(_DWORD *)(*((_QWORD *)&v550 + 1) + 8) & 0xFE) == 0x12)
                      v243 = *(unsigned __int8 *)(**(_QWORD **)(*((_QWORD *)&v550 + 1) + 16) + 8);
                    else
                      v243 = *(_DWORD *)(*((_QWORD *)&v550 + 1) + 8);
                    v176 = v243 >= 7;
                  }
                  v175 = !v176;
                  goto LABEL_311;
                }
LABEL_254:
                if (sub_1C6131264((unsigned __int8 *)&v550, v118, v119) != 9)
                {
                  v224 = *(uint64_t **)(v4 + 40);
                  v124 = *v224;
                  v144 = v224[1];
                  v145 = v550;
                  goto LABEL_273;
                }
                v196 = sub_1C612ED80((llvm::EVT *)&v550, v194, v195);
                v198 = v197;
                v200 = sub_1C612ED80((llvm::EVT *)&v545, v197, v199);
                v133 = sub_1C636B5B0(*(_QWORD *)(a1 + 16), 3, (uint64_t)&v552, *(unsigned __int8 *)(*(_QWORD *)(a1 + 8) + v200 + 1886), 0, v62, v61, v201, v64, v63, v196, v198, *(_QWORD *)(v4 + 96));
                v174 = v202;
                v203 = *(_QWORD *)(a1 + 16);
                v205 = *((_QWORD *)&v545 + 1);
                v204 = (llvm *)v545;
                v206 = *(_QWORD *)(v203 + 832);
                if (v206)
                  v207 = *(_WORD *)(v206 + 8);
                else
                  v207 = 0;
                v244 = 218;
LABEL_321:
                v228 = sub_1C5D52060(v203, v244, (const llvm::APInt *)&v552, v204, v205, (uint64_t)v133, v174, v207);
LABEL_322:
                v130 = (uint64_t)v228;
                v132 = v229;
LABEL_428:
                v131 = 1;
                goto LABEL_429;
              }
              v163 = __clz(v112.u32[0]);
              v164 = 0x80000000 >> v163;
              v165 = (v112.i32[0] - v164);
              v530 = v163;
              if ((int)v164 <= 31)
              {
                if ((_DWORD)v164 == 1)
                {
                  v166 = 0;
                  v167 = 0;
                  v168 = 2;
                  goto LABEL_383;
                }
                v508 = (llvm::LLVMContext *)(v112.i32[0] - v164);
                if ((_DWORD)v164 == 16)
                {
                  v166 = 0;
                  v167 = 0;
                  v168 = 4;
LABEL_382:
                  v165 = (uint64_t)v508;
LABEL_383:
                  if ((int)v165 <= 31)
                  {
                    if ((_DWORD)v165 == 1)
                    {
                      v284 = 0;
                      v543 = 0;
                      v285 = 2;
                      goto LABEL_397;
                    }
                    v540 = v167;
                    v500 = v164;
                    if ((_DWORD)v165 == 16)
                    {
                      v284 = 0;
                      v543 = 0;
                      v285 = 4;
LABEL_392:
                      v164 = v500;
LABEL_396:
                      v167 = v540;
                      goto LABEL_397;
                    }
                    v286 = (llvm::LLVMContext *)v165;
                    if ((_DWORD)v165 == 8)
                    {
                      v284 = 0;
                      v543 = 0;
                      v285 = 3;
LABEL_395:
                      v164 = v500;
                      v165 = (uint64_t)v286;
                      goto LABEL_396;
                    }
                  }
                  else
                  {
                    if ((_DWORD)v165 == 32)
                    {
                      v284 = 0;
                      v543 = 0;
                      v285 = 5;
LABEL_397:
                      v526 = v285 | v284;
                      v287 = *(_QWORD *)(a1 + 16);
                      v541 = (_BYTE *)(*(_QWORD *)(**(_QWORD **)(v287 + 40) + 40) + 272);
                      v288 = *(uint64_t **)(v4 + 40);
                      v289 = *v288;
                      v290 = v288[1];
                      v291 = *(_QWORD *)(v4 + 96);
                      if (*v541)
                      {
                        v512 = v165;
                        v545 = *(_OWORD *)v291;
                        *(_QWORD *)&v546 = *(_QWORD *)(v291 + 16);
                        v502 = sub_1C636B4C8(v287, v66, (uint64_t)&v552, v289, v290, v62, v61, v120, v64, v63, &v545, v168 | v166, v167, *(unsigned __int8 *)(v291 + 34) | 0x100u, (*(unsigned __int8 *)(v291 + 34) | 0x100uLL) >> 32, v115, (uint64_t)&v564);
                        v520 = v331;
                        v332 = 0x10000000u >> v530;
                        v536 = sub_1C6369954(*(_QWORD *)(a1 + 16), v64, v63, v332, 0, (const llvm::APInt *)&v552, 0);
                        v334 = v63 & 0xFFFFFFFF00000000 | v333;
                        v335 = *(_QWORD *)(a1 + 16);
                        v336 = *(uint64_t **)(v4 + 40);
                        v338 = *v336;
                        v337 = v336[1];
                        sub_1C4824250(*(uint64_t **)(v4 + 96), v332, (uint64_t)&v554);
                        v492 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 96) + 34) | 0x100;
                        v341 = sub_1C636B4C8(v335, 3, (uint64_t)&v552, v338, v337, v62, v61, v339, (uint64_t)v536, v334, &v554, v526, v543, v492, SHIDWORD(v492), v115, (uint64_t)&v564);
                        v342 = 0;
                        v544 = v343;
                        v344 = *(_QWORD *)(a1 + 16);
                        v345 = *(_QWORD *)(v344 + 832);
                        if (v345)
                          v342 = *(_WORD *)(v345 + 8);
                        v133 = sub_1C5D56C70(v344, 2, (const llvm::APInt *)&v552, (llvm *)1, 0, (uint64_t)v341, 1uLL, v340, (uint64_t)v502, 1uLL, v342);
                        v328 = v346;
                        v347 = (uint64_t *)(v502[5] + 16 * v520);
                        v349 = (llvm *)*v347;
                        v348 = v347[1];
                        v350 = *(_QWORD *)(a1 + 16);
                        ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a1 + 8), *v347, v348, (uint64_t)v541, 1);
                        v353 = sub_1C6366AB4(v350, v512, (const llvm::APInt *)&v552, ShiftAmountTy, v352, 0, 0);
                        v356 = *(_QWORD *)(v350 + 832);
                        if (v356)
                          LOWORD(v356) = *(_WORD *)(v356 + 8);
                        v357 = sub_1C5D56C70(v350, 175, (const llvm::APInt *)&v552, v349, v348, (uint64_t)v502, v520, v355, (uint64_t)v353, v354, v356);
                        v360 = *(_QWORD *)(a1 + 16);
                        v361 = *(_QWORD *)(v4 + 40);
                        v362 = *(llvm **)v361;
                        v363 = *(_QWORD *)(v361 + 8);
                        v364 = *(_QWORD *)(v360 + 832);
                        if (v364)
                          LOWORD(v364) = *(_WORD *)(v364 + 8);
                        v329 = sub_1C5D56C70(v360, 172, (const llvm::APInt *)&v552, v362, v363, (uint64_t)v341, v544, v359, (uint64_t)v357, v358, v364);
                      }
                      else
                      {
                        v501 = v164;
                        v545 = *(_OWORD *)v291;
                        *(_QWORD *)&v546 = *(_QWORD *)(v291 + 16);
                        v292 = sub_1C636B4C8(v287, 3, (uint64_t)&v552, v289, v290, v62, v61, v120, v64, v63, &v545, v168 | v166, v167, *(unsigned __int8 *)(v291 + 34) | 0x100u, (*(unsigned __int8 *)(v291 + 34) | 0x100uLL) >> 32, v115, (uint64_t)&v564);
                        v511 = v293;
                        v519 = (uint64_t)v292;
                        v294 = 0x10000000u >> v530;
                        v535 = sub_1C6369954(*(_QWORD *)(a1 + 16), v64, v63, v294, 0, (const llvm::APInt *)&v552, 0);
                        v296 = v63 & 0xFFFFFFFF00000000 | v295;
                        __nb = *(_QWORD *)(a1 + 16);
                        v297 = *(uint64_t **)(v4 + 40);
                        v299 = *v297;
                        v298 = v297[1];
                        sub_1C4824250(*(uint64_t **)(v4 + 96), v294, (uint64_t)&v554);
                        v491 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 96) + 34) | 0x100;
                        v302 = sub_1C636B4C8(__nb, v66, (uint64_t)&v552, v299, v298, v62, v61, v300, (uint64_t)v535, v296, &v554, v526, v543, v491, SHIDWORD(v491), v115, (uint64_t)&v564);
                        v303 = 0;
                        v305 = v304;
                        v306 = *(_QWORD *)(a1 + 16);
                        v307 = *(_QWORD *)(v306 + 832);
                        if (v307)
                          v303 = *(_WORD *)(v307 + 8);
                        v133 = sub_1C5D56C70(v306, 2, (const llvm::APInt *)&v552, (llvm *)1, 0, v519, 1uLL, v301, (uint64_t)v302, 1uLL, v303);
                        v309 = v308;
                        v310 = (uint64_t *)(v302[5] + 16 * v305);
                        v312 = (llvm *)*v310;
                        v311 = v310[1];
                        v313 = *(_QWORD *)(a1 + 16);
                        v314 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a1 + 8), *v310, v311, (uint64_t)v541, 1);
                        v316 = sub_1C6366AB4(v313, v501, (const llvm::APInt *)&v552, v314, v315, 0, 0);
                        v319 = *(_QWORD *)(v313 + 832);
                        if (v319)
                          LOWORD(v319) = *(_WORD *)(v319 + 8);
                        v320 = sub_1C5D56C70(v313, 175, (const llvm::APInt *)&v552, v312, v311, (uint64_t)v302, v305, v318, (uint64_t)v316, v317, v319);
                        v323 = *(_QWORD *)(a1 + 16);
                        v324 = *(_QWORD *)(v4 + 40);
                        v325 = *(llvm **)v324;
                        v326 = *(_QWORD *)(v324 + 8);
                        v327 = *(_QWORD *)(v323 + 832);
                        if (v327)
                          LOWORD(v327) = *(_WORD *)(v327 + 8);
                        v328 = v309;
                        v329 = sub_1C5D56C70(v323, 172, (const llvm::APInt *)&v552, v325, v326, v519, v511, v322, (uint64_t)v320, v321, v327);
                      }
                      v130 = (uint64_t)v329;
                      v132 = v330;
                      v131 = v328;
LABEL_429:
                      if (v133 != (_QWORD *)v4)
                      {
                        sub_1C5D6146C(*(_QWORD *)(a1 + 16), v4, 0, v130, v132);
                        sub_1C5D6146C(*(_QWORD *)(a1 + 16), v4, 1, (uint64_t)v133, v131);
                        v383 = *(_QWORD *)(a1 + 32);
                        if (!v383)
                          goto LABEL_431;
                        v549[0] = v130;
                        sub_1C62B3A60(v383, v549);
                        v109 = *(_QWORD *)(a1 + 32);
                        v549[0] = (uint64_t)v133;
                        v110 = v549;
                        goto LABEL_435;
                      }
                      goto LABEL_432;
                    }
                    if ((_DWORD)v165 == 64)
                    {
                      v284 = 0;
                      v543 = 0;
                      v285 = 6;
                      goto LABEL_397;
                    }
                    v540 = v167;
                    v500 = v164;
                    v286 = (llvm::LLVMContext *)v165;
                    if ((_DWORD)v165 == 128)
                    {
                      v284 = 0;
                      v543 = 0;
                      v285 = 7;
                      goto LABEL_395;
                    }
                  }
                  v517 = v286;
                  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)(a1 + 16) + 56), v286);
                  v543 = v478;
                  v165 = (uint64_t)v517;
                  v284 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
                  v285 = ExtendedIntegerVT;
                  goto LABEL_392;
                }
                v283 = (llvm::LLVMContext *)(0x80000000 >> v163);
                if ((_DWORD)v164 == 8)
                {
                  v166 = 0;
                  v167 = 0;
                  v168 = 3;
LABEL_381:
                  v164 = (uint64_t)v283;
                  goto LABEL_382;
                }
              }
              else
              {
                if ((_DWORD)v164 == 32)
                {
                  v166 = 0;
                  v167 = 0;
                  v168 = 5;
                  goto LABEL_383;
                }
                if ((_DWORD)v164 == 64)
                {
                  v166 = 0;
                  v167 = 0;
                  v168 = 6;
                  goto LABEL_383;
                }
                v508 = (llvm::LLVMContext *)(v112.i32[0] - v164);
                v283 = (llvm::LLVMContext *)(0x80000000 >> v163);
                if ((_DWORD)v164 == 128)
                {
                  v166 = 0;
                  v167 = 0;
                  v168 = 7;
                  goto LABEL_381;
                }
              }
              v475 = v283;
              v476 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)(a1 + 16) + 56), v283);
              v164 = (uint64_t)v475;
              v166 = v476 & 0xFFFFFFFFFFFFFF00;
              v168 = v476;
              goto LABEL_382;
            }
            v183 = sub_1C47C1C70((unsigned __int8 *)&v550);
            if ((_DWORD)v181 == 1)
            v184 = (llvm::LLVMContext *)(8 * v183);
            if ((int)v184 > 63)
            {
              if ((_DWORD)v184 == 64)
              {
                v185 = 0;
                v186 = 0;
                v187 = 6;
                goto LABEL_418;
              }
              if ((_DWORD)v184 == 128)
              {
                v185 = 0;
                v186 = 0;
                v187 = 7;
                goto LABEL_418;
              }
            }
            else
            {
              switch((_DWORD)v184)
              {
                case 0x20:
                  v185 = 0;
                  v186 = 0;
                  v187 = 5;
                  goto LABEL_418;
                case 0x10:
                  v185 = 0;
                  v186 = 0;
                  v187 = 4;
                  goto LABEL_418;
                case 8:
                  v185 = 0;
                  v186 = 0;
                  v187 = 3;
                  goto LABEL_418;
              }
            }
            v481 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)(a1 + 16) + 56), v184);
            v186 = v482;
            v185 = v481 & 0xFFFFFFFFFFFFFF00;
            v187 = v481;
LABEL_418:
            v370 = v187 | v185;
            if (v66 == 3)
              v371 = 3;
            else
              v371 = 1;
            v372 = *(_QWORD *)(a1 + 16);
            v373 = *(uint64_t **)(v4 + 40);
            v374 = *v373;
            v375 = v373[1];
            v376 = *(_QWORD *)(v4 + 96);
            v545 = *(_OWORD *)v376;
            *(_QWORD *)&v546 = *(_QWORD *)(v376 + 16);
            v377 = sub_1C636B4C8(v372, v371, (uint64_t)&v552, v374, v375, v62, v61, v182, v64, v63, &v545, v370, v186, *(unsigned __int8 *)(v376 + 34) | 0x100u, (*(unsigned __int8 *)(v376 + 34) | 0x100uLL) >> 32, v115, (uint64_t)&v564);
            v133 = v377;
            v379 = v378;
            if (v66 == 2)
            {
              v386 = *(_QWORD *)(a1 + 16);
              v387 = v377[5] + 16 * v378;
              v388 = *(llvm **)v387;
              v389 = *(_QWORD *)(v387 + 8);
              v390 = sub_1C6367494(v386, v550, *((uint64_t *)&v550 + 1));
              v393 = *(_QWORD *)(v386 + 832);
              if (v393)
                LOWORD(v393) = *(_WORD *)(v393 + 8);
              v394 = sub_1C5D56C70(v386, 204, (const llvm::APInt *)&v552, v388, v389, (uint64_t)v133, v379, v392, v390, v391, v393);
            }
            else
            {
              v380 = v377[5] + 16 * v378;
              if (v66 == 3)
              {
                v381 = *(llvm **)v380;
                v382 = *(_QWORD *)(v380 + 8);
              }
              else
              {
                v381 = *(llvm **)v380;
                if ((_DWORD)v187 != *(_QWORD *)v380
                  || (v382 = *(_QWORD *)(v380 + 8), !(_DWORD)v187) && v186 != v382)
                {
                  v130 = (uint64_t)v377;
LABEL_427:
                  v132 = v379;
                  goto LABEL_428;
                }
              }
              v396 = *(_QWORD *)(a1 + 16);
              v397 = sub_1C6367494(v396, v550, *((uint64_t *)&v550 + 1));
              v400 = *(_QWORD *)(v396 + 832);
              if (v400)
                LOWORD(v400) = *(_WORD *)(v400 + 8);
              v394 = sub_1C5D56C70(v396, 4, (const llvm::APInt *)&v552, v381, v382, (uint64_t)v133, v379, v399, v397, v398, v400);
            }
            v130 = (uint64_t)v394;
            LODWORD(v379) = v395;
            goto LABEL_427;
          }
          v69 = *(uint64_t **)(v4 + 32);
          v539 = *v69;
          v542 = v69[1];
          v71 = v69[10];
          v70 = v69[11];
          v72 = *(unsigned __int8 **)(v4 + 64);
          v547 = v72;
          if (v72)
            llvm::MetadataTracking::track((uint64_t)&v547, v72, 2);
          v73 = *(_DWORD *)(v4 + 60);
          v548 = v73;
          v74 = *(_QWORD *)(v4 + 96);
          v75 = *(_WORD *)(v74 + 32);
          v76 = *(_OWORD *)(v74 + 56);
          v545 = *(_OWORD *)(v74 + 40);
          v546 = v76;
          if ((*(_WORD *)(v4 + 26) & 0x400) != 0)
          {
            v94 = *(_QWORD *)(v4 + 32);
            v96 = *(_QWORD *)(v94 + 40);
            v95 = *(_QWORD *)(v94 + 48);
            v552 = *(_OWORD *)(v4 + 80);
            if ((_BYTE)v552)
              v97 = sub_1C47A8C74((unsigned __int8 *)&v552);
            else
              v97 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v552);
            v134 = (int8x8_t)v97;
            v135 = v98;
            v136 = sub_1C47C1C70((unsigned __int8 *)&v552);
            v138 = *(_QWORD *)(a1 + 16);
            if (*(_QWORD *)&v134 == 8 * v136 && v135 == v137)
            {
              if ((_BYTE)v552)
                v139 = v552 - 15 < 0x9C;
              else
                v139 = (*(_DWORD *)(*((_QWORD *)&v552 + 1) + 8) & 0xFE) == 18;
              v140 = (_BYTE *)(*(_QWORD *)(**(_QWORD **)(v138 + 40) + 40) + 272);
              if (v139 || (v141 = (uint8x8_t)vcnt_s8(v134), v141.i16[0] = vaddlv_u8(v141), v141.u32[0] == 1))
              {
                v142 = *(_QWORD *)(a1 + 8);
                if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                              + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48))
                  && (_BYTE)v552)
                {
                  if (*(_BYTE *)(v142
                                + 179
                                * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                                                     + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48))
                                + v552
                                + 137754) == 4)
                  {
                    v143 = *(uint64_t (**)(void))(*(_QWORD *)v142 + 1968);
                    goto LABEL_215;
                  }
                  if (!*(_BYTE *)(v142
                                 + 179
                                 * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v4 + 32) + 40) + 40)
                                                      + 16 * *(unsigned int *)(*(_QWORD *)(v4 + 32) + 48))
                                 + v552
                                 + 137754))
                  {
                    v146 = *(_QWORD *)(v4 + 80);
                    v147 = *(_QWORD *)(v4 + 88);
                    v148 = *(llvm::LLVMContext **)(v138 + 56);
                    v149 = *(_QWORD *)(v4 + 96);
                    v150 = *(_QWORD *)(**(_QWORD **)(v138 + 40) + 40) + 272;
LABEL_221:
                    if ((llvm::TargetLoweringBase::allowsMemoryAccessForAlignment(v142, v148, v150, v146, v147, v149, 0) & 1) != 0)goto LABEL_474;
                    v161 = sub_1C5D9F230(*(uint64_t **)(a1 + 8), v4, *(_QWORD *)(a1 + 16));
                    goto LABEL_472;
                  }
                  v208 = *((_QWORD *)&v552 + 1);
                }
                else
                {
                  v208 = *((_QWORD *)&v552 + 1);
                  if (!(_BYTE)v552)
                    goto LABEL_261;
                }
                if (*(_QWORD *)(v142 + 8 * v552 + 96))
                {
                  v216 = *(_QWORD *)(v138 + 832);
                  if (v216)
                    v217 = *(_WORD *)(v216 + 8);
                  else
                    v217 = 0;
                  v239 = sub_1C5D52060(*(_QWORD *)(a1 + 16), 201, (const llvm::APInt *)&v547, (llvm *)v552, v208, v96, v95, v217);
                  v240 = *(_QWORD *)(a1 + 16);
                  v241 = *(__int128 **)(v4 + 96);
                  v564 = *v241;
                  *(_QWORD *)&v565 = *((_QWORD *)v241 + 2);
                  v222 = sub_1C636B75C(v240, v539, v542, (uint64_t)&v547, (uint64_t)v239, v242, v71, v70, (uint64_t)&v564, *((_BYTE *)v241 + 34), 0, v75, (uint64_t)&v545);
                  goto LABEL_281;
                }
LABEL_261:
                llvm::TargetLoweringBase::getTypeConversion(v142, *(llvm::EVT **)(v138 + 56), v552, v208, (uint64_t)&v564);
                v209 = *(_QWORD *)(v138 + 832);
                if (v209)
                  v210 = *(_WORD *)(v209 + 8);
                else
                  v210 = 0;
                v218 = sub_1C5D52060(v138, 201, (const llvm::APInt *)&v547, *((llvm **)&v564 + 1), v565, v96, v95, v210);
                v219 = *(_QWORD *)(a1 + 16);
                v220 = *(__int128 **)(v4 + 96);
                v564 = *v220;
                *(_QWORD *)&v565 = *((_QWORD *)v220 + 2);
                v222 = sub_1C636B9CC(v219, v539, v542, (uint64_t)&v547, (uint64_t)v218, v221, v71, v70, (uint64_t)&v564, v552, *((uint64_t *)&v552 + 1), *((_BYTE *)v220 + 34), 0, v75, (uint64_t)&v545);
LABEL_281:
                v158 = (uint64_t)v222;
                v159 = v223;
LABEL_473:
                sub_1C5CD11CC(a1, v4, 0, v158, v159);
                goto LABEL_474;
              }
              v188 = __clz(v134.u32[0]);
              v523 = v188;
              v189 = 0x80000000 >> v188;
              v190 = (v134.i32[0] - v189);
              if ((int)v189 > 31)
              {
                if ((_DWORD)v189 == 32)
                {
                  v191 = 0;
                  v192 = 0;
                  v193 = 5;
                  goto LABEL_448;
                }
                if ((_DWORD)v189 == 64)
                {
                  v191 = 0;
                  v192 = 0;
                  v193 = 6;
                  goto LABEL_448;
                }
                v493 = (llvm::LLVMContext *)(v134.i32[0] - v189);
                v248 = (llvm::LLVMContext *)(0x80000000 >> v188);
                if ((_DWORD)v189 == 128)
                {
                  v191 = 0;
                  v192 = 0;
                  v193 = 7;
                  goto LABEL_446;
                }
LABEL_500:
                v483 = v248;
                v484 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(v138 + 56), v248);
                v189 = (uint64_t)v483;
                v191 = v484 & 0xFFFFFFFFFFFFFF00;
                v193 = v484;
                goto LABEL_447;
              }
              if ((_DWORD)v189 == 1)
              {
                v191 = 0;
                v192 = 0;
                v193 = 2;
                goto LABEL_448;
              }
              v493 = (llvm::LLVMContext *)(v134.i32[0] - v189);
              v248 = (llvm::LLVMContext *)(0x80000000 >> v188);
              if ((_DWORD)v189 == 16)
              {
                v191 = 0;
                v192 = 0;
                v193 = 4;
              }
              else
              {
                if ((_DWORD)v189 != 8)
                  goto LABEL_500;
                v191 = 0;
                v192 = 0;
                v193 = 3;
              }
LABEL_446:
              v189 = (uint64_t)v248;
LABEL_447:
              v190 = (uint64_t)v493;
LABEL_448:
              if ((int)v190 > 31)
              {
                if ((_DWORD)v190 == 32)
                {
                  v401 = 0;
                  v537 = 0;
                  v402 = 5;
LABEL_460:
                  v404 = v193 | v191;
                  v521 = v402 | v401;
                  v405 = *(_QWORD *)(a1 + 16);
                  if (*v140)
                  {
                    v505 = v192;
                    v515 = v404;
                    v432 = (uint64_t *)(*(_QWORD *)(v96 + 40) + 16 * v95);
                    v433 = v432[1];
                    __na = (llvm *)*v432;
                    v434 = (uint64_t)v140;
                    v435 = v190;
                    v436 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a1 + 8), *v432, v433, v434, 1);
                    v438 = sub_1C6366AB4(v405, v435, (const llvm::APInt *)&v547, v436, v437, 0, 0);
                    v441 = *(_QWORD *)(v405 + 832);
                    if (v441)
                      LOWORD(v441) = *(_WORD *)(v441 + 8);
                    v442 = sub_1C5D56C70(v405, 177, (const llvm::APInt *)&v547, __na, v433, v96, v95, v440, (uint64_t)v438, v439, v441);
                    v443 = *(_QWORD *)(a1 + 16);
                    v444 = *(__int128 **)(v4 + 96);
                    v564 = *v444;
                    *(_QWORD *)&v565 = *((_QWORD *)v444 + 2);
                    v446 = sub_1C636B9CC(v443, v539, v542, (uint64_t)&v547, (uint64_t)v442, v445, v71, v70, (uint64_t)&v564, v515, v505, *((_BYTE *)v444 + 34), 0, v75, (uint64_t)&v545);
                    v506 = v447;
                    v516 = v446;
                    v448 = 0x10000000u >> v523;
                    v449 = *(_QWORD *)(a1 + 16);
                    v450 = *(_QWORD *)(v71 + 40) + 16 * v70;
                    v452 = *(llvm **)v450;
                    v451 = *(_QWORD *)(v450 + 8);
                    v528 = v448;
                    v453 = sub_1C6366AB4(v449, v448, (const llvm::APInt *)&v547, *(llvm **)v450, v451, 0, 0);
                    v456 = *(_QWORD *)(v449 + 832);
                    if (v456)
                      LOWORD(v456) = *(_WORD *)(v456 + 8);
                    v457 = sub_1C5D56C70(v449, 56, (const llvm::APInt *)&v547, v452, v451, v71, v70, v455, (uint64_t)v453, v454, v456);
                    v459 = v458;
                    v460 = *(_QWORD *)(a1 + 16);
                    sub_1C4824250(*(uint64_t **)(v4 + 96), v528, (uint64_t)&v554);
                    v490 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 96) + 34);
                    v431 = sub_1C636B9CC(v460, v539, v542, (uint64_t)&v547, v96, v95, (uint64_t)v457, v459, (uint64_t)&v554, v521, v537, v490, SHIDWORD(v490), v75, (uint64_t)&v545);
                    v429 = v506;
                    v427 = v516;
                  }
                  else
                  {
                    v406 = *(__int128 **)(v4 + 96);
                    v564 = *v406;
                    *(_QWORD *)&v565 = *((_QWORD *)v406 + 2);
                    v514 = v189;
                    v407 = sub_1C636B9CC(v405, v539, v542, (uint64_t)&v547, v96, v95, v71, v70, (uint64_t)&v564, v404, v192, *((_BYTE *)v406 + 34), 0, v75, (uint64_t)&v545);
                    __n = v408;
                    v504 = v407;
                    v494 = 0x10000000u >> v523;
                    v527 = sub_1C6369954(*(_QWORD *)(a1 + 16), v71, v70, v494, 0, (const llvm::APInt *)&v547, 0);
                    v410 = v409;
                    v411 = (uint64_t *)(*(_QWORD *)(v96 + 40) + 16 * v95);
                    v412 = (llvm *)*v411;
                    v413 = v411[1];
                    v414 = *(_QWORD *)(a1 + 16);
                    v415 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(a1 + 8), *v411, v413, (uint64_t)v140, 1);
                    v417 = sub_1C6366AB4(v414, v514, (const llvm::APInt *)&v547, v415, v416, 0, 0);
                    v420 = 0;
                    v421 = *(_QWORD *)(v414 + 832);
                    if (v421)
                      v420 = *(_WORD *)(v421 + 8);
                    v422 = sub_1C5D56C70(v414, 177, (const llvm::APInt *)&v547, v412, v413, v96, v95, v419, (uint64_t)v417, v418, v420);
                    v424 = v423;
                    v425 = *(_QWORD *)(a1 + 16);
                    sub_1C4824250(*(uint64_t **)(v4 + 96), v494, (uint64_t)&v554);
                    v489 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 96) + 34);
                    v427 = sub_1C636B9CC(v425, v539, v542, (uint64_t)&v547, (uint64_t)v422, v424, (uint64_t)v527, v410, (uint64_t)&v554, v521, v537, v489, SHIDWORD(v489), v75, (uint64_t)&v545);
                    v429 = v428;
                    v430 = __n;
                    v431 = v504;
                  }
                  v461 = *(_QWORD *)(a1 + 16);
                  v462 = *(_QWORD *)(v461 + 832);
                  if (v462)
                    LOWORD(v462) = *(_WORD *)(v462 + 8);
                  v161 = sub_1C5D56C70(v461, 2, (const llvm::APInt *)&v547, (llvm *)1, 0, (uint64_t)v431, v430, v426, (uint64_t)v427, v429, v462);
                  goto LABEL_472;
                }
                if ((_DWORD)v190 == 64)
                {
                  v401 = 0;
                  v537 = 0;
                  v402 = 6;
                  goto LABEL_460;
                }
                v503 = v192;
                v513 = v189;
                v403 = (llvm::LLVMContext *)v190;
                if ((_DWORD)v190 == 128)
                {
                  v401 = 0;
                  v537 = 0;
                  v402 = 7;
                  goto LABEL_459;
                }
LABEL_501:
                v495 = v403;
                v485 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)(a1 + 16) + 56), v403);
                v190 = (uint64_t)v495;
                v537 = v486;
                v401 = v485 & 0xFFFFFFFFFFFFFF00;
                v402 = v485;
                v192 = v503;
                v189 = v513;
                goto LABEL_460;
              }
              if ((_DWORD)v190 == 1)
              {
                v401 = 0;
                v537 = 0;
                v402 = 2;
                goto LABEL_460;
              }
              v503 = v192;
              v513 = v189;
              v403 = (llvm::LLVMContext *)v190;
              if ((_DWORD)v190 == 16)
              {
                v401 = 0;
                v537 = 0;
                v402 = 4;
              }
              else
              {
                if ((_DWORD)v190 != 8)
                  goto LABEL_501;
                v401 = 0;
                v537 = 0;
                v402 = 3;
              }
LABEL_459:
              v192 = v503;
              v189 = v513;
              v190 = (uint64_t)v403;
              goto LABEL_460;
            }
            v177 = (llvm::LLVMContext *)(8 * v136);
            if (8 * (int)v136 > 63)
            {
              if ((_DWORD)v177 == 64)
              {
                v178 = 0;
                v179 = 0;
                v180 = 6;
                goto LABEL_415;
              }
              if ((_DWORD)v177 == 128)
              {
                v178 = 0;
                v179 = 0;
                v180 = 7;
                goto LABEL_415;
              }
            }
            else
            {
              switch((_DWORD)v177)
              {
                case 0x20:
                  v178 = 0;
                  v179 = 0;
                  v180 = 5;
LABEL_415:
                  v365 = v180 | v178;
                  v366 = sub_1C5D3F9A0(v138, v96, v95, (const llvm::APInt *)&v547, v552, *((uint64_t *)&v552 + 1));
                  v367 = *(_QWORD *)(a1 + 16);
                  v368 = *(__int128 **)(v4 + 96);
                  v564 = *v368;
                  *(_QWORD *)&v565 = *((_QWORD *)v368 + 2);
                  v161 = sub_1C636B9CC(v367, v539, v542, (uint64_t)&v547, (uint64_t)v366, v369, v71, v70, (uint64_t)&v564, v365, v179, *((_BYTE *)v368 + 34), 0, v75, (uint64_t)&v545);
                  goto LABEL_472;
                case 0x10:
                  v178 = 0;
                  v179 = 0;
                  v180 = 4;
                  goto LABEL_415;
                case 8:
                  v178 = 0;
                  v179 = 0;
                  v180 = 3;
                  goto LABEL_415;
              }
            }
            v479 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(v138 + 56), v177);
            v179 = v480;
            v178 = v479 & 0xFFFFFFFFFFFFFF00;
            v180 = v479;
            v138 = *(_QWORD *)(a1 + 16);
            goto LABEL_415;
          }
          if ((*(_WORD *)(v4 + 26) & 0x780) != 0 || *(_WORD *)(v4 + 24) != 254)
            goto LABEL_213;
          v77 = (__int128 *)(v74 + 40);
          v78 = *(uint64_t **)(v4 + 32);
          v80 = *v78;
          v79 = v78[1];
          v82 = v78[10];
          v81 = v78[11];
          v83 = v78[5];
          v84 = v77[1];
          v564 = *v77;
          v565 = v84;
          v85 = *(unsigned __int8 **)(v4 + 64);
          v562 = v85;
          if (v85)
          {
            llvm::MetadataTracking::track((uint64_t)&v562, v85, 2);
            v73 = *(_DWORD *)(v4 + 60);
          }
          v563 = v73;
          if (*(_WORD *)(v83 + 24) != 12)
            goto LABEL_208;
          v86 = **(unsigned __int8 **)(v83 + 40);
          if (v86 != 11)
          {
            if (v86 == 10 && *(_QWORD *)(*(_QWORD *)(a1 + 8) + 136))
            {
              v529 = *(_QWORD *)(a1 + 16);
              v87 = *(_QWORD *)(v83 + 80);
              v89 = *(void **)(v87 + 32);
              v88 = (llvm::detail::DoubleAPFloat *)(v87 + 32);
              if (v89 == &unk_1C866F1C0)
                llvm::detail::DoubleAPFloat::bitcastToAPInt(v88, (unsigned int *)&v558);
              else
                llvm::detail::IEEEFloat::bitcastToAPInt((uint64_t)v88, (unsigned int *)&v558);
              if (v559 > 0x1F)
              {
                if (v559 == 32)
                {
                  v561 = 32;
                  v90 = (unint64_t)v558;
                  goto LABEL_354;
                }
                v487 = &v558;
                if (v559 >= 0x41)
                  v487 = (void ***)v558;
                v90 = *(unsigned int *)v487;
              }
              else
              {
                v90 = v558;
              }
              v561 = 32;
LABEL_354:
              __src = (void *)v90;
              v272 = *(unsigned __int8 **)(v83 + 64);
              v556 = v272;
              if (v272)
                llvm::MetadataTracking::track((uint64_t)&v556, v272, 2);
              v557 = *(_DWORD *)(v83 + 60);
              v533 = sub_1C63666FC(v529, (llvm::LLVMContext *)&__src, (const llvm::APInt *)&v556, 5, 0, 0, 0);
              v274 = v273;
              if (v556)
                llvm::MetadataTracking::untrack((uint64_t)&v556, v556);
              if (v561 >= 0x41 && __src)
                MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
              if (v559 >= 0x41 && v558)
                MEMORY[0x1CAA32F9C](v558, 0x1000C8000313F17);
              v275 = *(_QWORD *)(a1 + 16);
              v276 = *(_QWORD *)(v4 + 96);
              v554 = *(_OWORD *)v276;
              v555 = *(_QWORD *)(v276 + 16);
              v277 = sub_1C636B75C(v275, v80, v79, (uint64_t)&v562, v533, v274, v82, v81, (uint64_t)&v554, *(_BYTE *)(v276 + 34), 0, v75, (uint64_t)&v564);
LABEL_378:
              v152 = v277;
              goto LABEL_209;
            }
LABEL_208:
            v152 = 0;
            goto LABEL_209;
          }
          v151 = *(_QWORD *)(a1 + 8);
          if (*(_QWORD *)(v151 + 144))
          {
            v531 = *(_QWORD *)(a1 + 16);
            v249 = *(_QWORD *)(v83 + 80);
            v251 = *(void **)(v249 + 32);
            v250 = (llvm::detail::DoubleAPFloat *)(v249 + 32);
            if (v251 == &unk_1C866F1C0)
              llvm::detail::DoubleAPFloat::bitcastToAPInt(v250, (unsigned int *)&v558);
            else
              llvm::detail::IEEEFloat::bitcastToAPInt((uint64_t)v250, (unsigned int *)&v558);
            if (v559 > 0x3F)
            {
              if (v559 == 64)
              {
                v561 = 64;
                v252 = v558;
                goto LABEL_367;
              }
              v252 = *v558;
            }
            else
            {
              v252 = v558;
            }
            v561 = 64;
LABEL_367:
            __src = v252;
            v278 = *(unsigned __int8 **)(v83 + 64);
            v556 = v278;
            if (v278)
              llvm::MetadataTracking::track((uint64_t)&v556, v278, 2);
            v557 = *(_DWORD *)(v83 + 60);
            v534 = sub_1C63666FC(v531, (llvm::LLVMContext *)&__src, (const llvm::APInt *)&v556, 6, 0, 0, 0);
            v280 = v279;
            if (v556)
              llvm::MetadataTracking::untrack((uint64_t)&v556, v556);
            if (v561 >= 0x41 && __src)
              MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
            if (v559 >= 0x41 && v558)
              MEMORY[0x1CAA32F9C](v558, 0x1000C8000313F17);
            v281 = *(_QWORD *)(a1 + 16);
            v282 = *(__int128 **)(v4 + 96);
            v552 = *v282;
            v553 = *((_QWORD *)v282 + 2);
            v277 = sub_1C636B75C(v281, v80, v79, (uint64_t)&v562, v534, v280, v82, v81, (uint64_t)&v552, *((_BYTE *)v282 + 34), 0, v75, (uint64_t)&v564);
            goto LABEL_378;
          }
          if (!*(_QWORD *)(v151 + 136) || (*(_BYTE *)(v4 + 26) & 8) != 0)
            goto LABEL_208;
          v261 = *(_QWORD *)(v83 + 80);
          v263 = *(void **)(v261 + 32);
          v262 = (llvm::detail::DoubleAPFloat *)(v261 + 32);
          if (v263 == &unk_1C866F1C0)
            llvm::detail::DoubleAPFloat::bitcastToAPInt(v262, (unsigned int *)&__src);
          else
            llvm::detail::IEEEFloat::bitcastToAPInt((uint64_t)v262, (unsigned int *)&__src);
          v264 = *(_QWORD *)(a1 + 16);
          p_src = (unsigned int *)&__src;
          if (v561 >= 0x41)
            p_src = (unsigned int *)__src;
          v266 = (void **)*p_src;
          v559 = 32;
          v558 = v266;
          v518 = sub_1C63666FC(v264, (llvm::LLVMContext *)&v558, (const llvm::APInt *)&v562, 5, 0, 0, 0);
          v532 = v267;
          if (v559 >= 0x41 && v558)
            MEMORY[0x1CAA32F9C](v558, 0x1000C8000313F17);
          v524 = *(_QWORD *)(a1 + 16);
          v268 = v561;
          if (v561 > 0x40)
          {
            v507 = v561 + 63;
            v509 = (unsigned int *)operator new[]();
            memcpy(v509, __src, (v507 >> 3) & 0x3FFFFFF8);
            llvm::APInt::tcShiftRight((llvm::APInt *)v509, (unint64_t *)(v507 >> 6), 0x20u);
            v269 = (void **)*v509;
          }
          else
          {
            v269 = (void **)HIDWORD(__src);
            if (v561 == 32)
              v269 = 0;
            v509 = (unsigned int *)v269;
          }
          v559 = 32;
          v558 = v269;
          v499 = sub_1C63666FC(v524, (llvm::LLVMContext *)&v558, (const llvm::APInt *)&v562, 5, 0, 0, 0);
          v525 = v270;
          if (v559 >= 0x41 && v558)
            MEMORY[0x1CAA32F9C](v558, 0x1000C8000313F17);
          if (v268 >= 0x41 && v509)
            MEMORY[0x1CAA32F9C](v509, 0x1000C8000313F17);
          v271 = *(_QWORD *)(a1 + 16);
          if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v271 + 40) + 40) + 272))
          {
            v463 = v532 & 0xFFFFFFFF00000000 | v525;
            v510 = v518;
            v518 = v499;
            v525 = v525 & 0xFFFFFFFF00000000 | v532;
            v532 = v463;
          }
          else
          {
            v510 = v499;
          }
          v464 = *(__int128 **)(v4 + 96);
          v550 = *v464;
          v551 = *((_QWORD *)v464 + 2);
          v522 = sub_1C636B75C(v271, v80, v79, (uint64_t)&v562, v518, v532, v82, v81, (uint64_t)&v550, *((_BYTE *)v464 + 34), 0, v75, (uint64_t)&v564);
          v538 = v532 & 0xFFFFFFFF00000000 | v465;
          v466 = sub_1C6369954(*(_QWORD *)(a1 + 16), v82, v81, 4, 0, (const llvm::APInt *)&v562, 0);
          v468 = v467;
          v469 = *(_QWORD *)(a1 + 16);
          sub_1C4824250(*(uint64_t **)(v4 + 96), 4, (uint64_t)v549);
          v488 = *(unsigned __int8 *)(*(_QWORD *)(v4 + 96) + 34);
          v470 = sub_1C636B75C(v469, v80, v79, (uint64_t)&v562, v510, v525, (uint64_t)v466, v468, (uint64_t)v549, v488, SHIDWORD(v488), v75, (uint64_t)&v564);
          v473 = *(_QWORD *)(a1 + 16);
          v474 = *(_QWORD *)(v473 + 832);
          if (v474)
            LOWORD(v474) = *(_WORD *)(v474 + 8);
          v152 = sub_1C5D56C70(v473, 2, (const llvm::APInt *)&v562, (llvm *)1, 0, (uint64_t)v522, v538, v472, (uint64_t)v470, v525 & 0xFFFFFFFF00000000 | v471, v474);
          if (v561 >= 0x41 && __src)
            MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
LABEL_209:
          if (v562)
            llvm::MetadataTracking::untrack((uint64_t)&v562, v562);
          if (v152)
          {
            sub_1C5CD1178(a1, v4, (uint64_t)v152);
            goto LABEL_474;
          }
LABEL_213:
          v153 = *(_QWORD *)(v4 + 32);
          v154 = *(_QWORD *)(v153 + 40);
          v155 = *(_QWORD *)(v153 + 48);
          v142 = *(_QWORD *)(a1 + 8);
          if (*(_BYTE *)(v142 + 390 * *(unsigned __int8 *)(*(_QWORD *)(v154 + 40) + 16 * v155) + 4116) != 4)
          {
            if (!*(_BYTE *)(v142
                           + 390 * *(unsigned __int8 *)(*(_QWORD *)(v154 + 40) + 16 * v155)
                           + 4116))
            {
              v146 = *(_QWORD *)(v4 + 80);
              v147 = *(_QWORD *)(v4 + 88);
              v160 = *(_QWORD *)(a1 + 16);
              v150 = *(_QWORD *)(**(_QWORD **)(v160 + 40) + 40) + 272;
              v148 = *(llvm::LLVMContext **)(v160 + 56);
              v149 = *(_QWORD *)(v4 + 96);
              goto LABEL_221;
            }
            v211 = sub_1C6132CB4(v142, 0xFEu, *(_BYTE *)(*(_QWORD *)(v154 + 40) + 16 * v155));
            v212 = *(_QWORD *)(a1 + 16);
            v213 = (llvm *)v211;
            v214 = *(_QWORD *)(v212 + 832);
            if (v214)
              v215 = *(_WORD *)(v214 + 8);
            else
              v215 = 0;
            v235 = sub_1C5D52060(v212, 216, (const llvm::APInt *)&v547, v213, 0, v154, v155, v215);
            v236 = *(_QWORD *)(a1 + 16);
            v237 = *(__int128 **)(v4 + 96);
            v564 = *v237;
            *(_QWORD *)&v565 = *((_QWORD *)v237 + 2);
            v161 = sub_1C636B75C(v236, v539, v542, (uint64_t)&v547, (uint64_t)v235, v238, v71, v70, (uint64_t)&v564, *((_BYTE *)v237 + 34), 0, v75, (uint64_t)&v545);
LABEL_472:
            v158 = (uint64_t)v161;
            v159 = v162;
            goto LABEL_473;
          }
          v143 = *(uint64_t (**)(void))(*(_QWORD *)v142 + 1968);
LABEL_215:
          v156 = v143();
          if (v156)
          {
            v158 = v156;
            v159 = v157;
            if (v4 != v156 || v157)
              goto LABEL_473;
          }
LABEL_474:
          v384 = v547;
          if (!v547)
            return;
          v385 = &v547;
LABEL_476:
          llvm::MetadataTracking::untrack((uint64_t)v385, v384);
          return;
      }
  }
}

uint64_t sub_1C5CD1178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v7;

  v7 = a3;
  sub_1C636595C(*(_QWORD *)(a1 + 16), a2, a3);
  v5 = *(_QWORD *)(a1 + 32);
  if (v5)
    sub_1C62B3A60(v5, &v7);
  return sub_1C5CDE8D8(a1, a2);
}

uint64_t sub_1C5CD11CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v8;
  uint64_t v10;

  sub_1C636EE88(*(_QWORD *)(a1 + 16), a2, a3, a4, a5);
  v8 = *(_QWORD *)(a1 + 32);
  if (v8)
  {
    v10 = a4;
    sub_1C62B3A60(v8, &v10);
  }
  return sub_1C5CDE8D8(a1, a2);
}

uint64_t sub_1C5CD122C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v3 = a3;
  sub_1C636F034(*(_QWORD *)(a1 + 16), a2, a3);
  v6 = *(unsigned __int16 *)(a2 + 58);
  if (*(_WORD *)(a2 + 58))
  {
    do
    {
      v7 = *(_QWORD *)(a1 + 32);
      if (v7)
      {
        v9 = *v3;
        sub_1C62B3A60(v7, &v9);
      }
      v3 += 2;
      --v6;
    }
    while (v6);
  }
  return sub_1C5CDE8D8(a1, a2);
}

uint64_t sub_1C5CD12A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  int v15;
  int v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t *v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  const char *v49;
  llvm **v50;
  uint64_t v51;
  llvm ***v52;
  int v53;
  uint64_t *v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  llvm *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  llvm *v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t *v70;
  uint64_t *v71;
  unsigned int v72;
  uint64_t **v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  uint64_t v78;
  int v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  int v86;
  uint64_t *v87;
  int v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  __int128 v98;
  unsigned int v99;
  unsigned int v100;
  uint64_t v101;
  __int128 v102;
  llvm ***v103;
  unsigned int v104;
  llvm ****v105;
  uint64_t v106;
  uint64_t *v107;
  void *v108;
  llvm *v109;
  uint64_t v110;
  int v111;
  uint64_t *v112;
  uint64_t v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  unint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  llvm *v126;
  uint64_t v127;
  uint64_t v128;
  __int16 v129;
  void *v130;
  uint64_t v131;
  unsigned __int8 *v132;
  void **v133;
  uint64_t *v134;
  uint64_t *v135;
  uint64_t *v136;
  uint64_t *v137;
  unsigned int v138;
  uint64_t **v139;
  uint64_t v140;
  char *v141;
  uint64_t *v142;
  uint64_t **v143;
  uint64_t v144;
  _QWORD *v145;
  int v146;
  uint64_t v147;
  llvm *v148;
  uint64_t v149;
  uint64_t v150;
  __int16 v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;
  __int16 v157;
  uint64_t v158;
  uint64_t *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  unsigned int v166;
  __int128 v167;
  void *v168;
  uint64_t v169;
  uint64_t v170;
  int v171;
  uint64_t v172;
  uint64_t *v173;
  int v174;
  void *v175;
  uint64_t *v176;
  uint64_t v177;
  unint64_t v178;
  uint64_t v179;
  llvm *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  llvm *v184;
  uint64_t v185;
  int v186;
  BOOL v187;
  uint64_t *v188;
  uint64_t *v189;
  uint64_t *v190;
  uint64_t *v191;
  unsigned int v192;
  uint64_t **v193;
  int v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t *v206;
  uint64_t v207;
  uint64_t v208;
  llvm *v209;
  void *v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t v213;
  uint64_t v214;
  llvm *v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  __int16 v219;
  uint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  unint64_t v223;
  uint64_t v224;
  __int16 v225;
  uint64_t v226;
  uint64_t v227;
  unsigned int v228;
  uint64_t v229;
  llvm *v230;
  void *v231;
  unsigned int v232;
  uint64_t v233;
  uint64_t *v234;
  uint64_t v235;
  uint64_t v236;
  int v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t (*v242)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v243;
  llvm *v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t *v249;
  uint64_t v250;
  unsigned int v251;
  char *v252;
  unint64_t v253;
  unsigned __int8 *v254;
  uint64_t v255;
  unsigned int *v256;
  uint64_t v257;
  llvm *v258;
  uint64_t *v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t EVT;
  unint64_t v263;
  uint64_t v264;
  uint64_t *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  int v272;
  uint64_t *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  unsigned int v278;
  unint64_t v279;
  unsigned int v280;
  uint64_t **v281;
  int v282;
  uint64_t *v283;
  unint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  uint64_t *v289;
  uint64_t *v290;
  unsigned int v291;
  uint64_t **v292;
  int v293;
  uint64_t v294;
  int v295;
  unint64_t v296;
  uint64_t v297;
  unint64_t v298;
  uint64_t v299;
  uint64_t *v300;
  char v301;
  char v302;
  uint64_t v303;
  int v304;
  BOOL v306;
  int v307;
  _BOOL4 v309;
  _BOOL4 v311;
  int v312;
  uint64_t v313;
  uint64_t v314;
  unint64_t v315;
  uint64_t v316;
  __int16 v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t *v320;
  _QWORD *v321;
  uint64_t v322;
  unint64_t v323;
  unsigned int v324;
  unsigned int v325;
  unsigned int v326;
  uint64_t v327;
  uint64_t v328;
  _QWORD *v329;
  uint64_t v330;
  llvm *v331;
  uint64_t v332;
  uint64_t v333;
  int v334;
  uint64_t v335;
  uint64_t *v336;
  int v337;
  uint64_t *v338;
  unsigned int v339;
  uint64_t **v340;
  uint64_t v341;
  llvm *v342;
  uint64_t v343;
  uint64_t v344;
  int v345;
  _QWORD *v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  int v350;
  int v351;
  _QWORD *v352;
  int v353;
  uint64_t v354;
  uint64_t *v355;
  int v356;
  unsigned int v357;
  void *v358;
  uint64_t v359;
  uint64_t v360;
  char v361;
  char v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  __int16 v366;
  uint64_t *v367;
  unint64_t v368;
  unint64_t v369;
  __int16 v370;
  uint64_t v371;
  uint64_t v372;
  llvm *v373;
  uint64_t *v374;
  uint64_t v375;
  unint64_t v376;
  uint64_t v377;
  BOOL v378;
  llvm::Type *v379;
  llvm *v380;
  uint64_t v381;
  _QWORD *v382;
  unint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t *v387;
  unsigned int v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t *v392;
  uint64_t *v393;
  uint64_t *v394;
  uint64_t v395;
  uint64_t **v396;
  void **v397;
  void **v398;
  unint64_t v399;
  uint64_t *v400;
  uint64_t v401;
  uint64_t v402;
  llvm *v403;
  uint64_t v404;
  uint64_t v405;
  __int16 v406;
  unsigned int v407;
  uint64_t v408;
  BOOL v409;
  uint64_t v410;
  uint64_t v411;
  llvm *v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t *v415;
  uint64_t v416;
  unint64_t v417;
  uint64_t v418;
  unint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t *v422;
  uint64_t v423;
  unint64_t v424;
  uint64_t v425;
  BOOL v426;
  llvm *v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  unint64_t v432;
  uint64_t v433;
  unint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t *v437;
  uint64_t v438;
  unint64_t v439;
  uint64_t v440;
  uint64_t v441;
  BOOL v442;
  uint64_t v443;
  llvm *v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t **v450;
  uint64_t v451;
  uint64_t *v452;
  int v453;
  uint64_t *v454;
  unint64_t v455;
  uint64_t v456;
  uint64_t v457;
  unint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t *v463;
  unint64_t v464;
  unint64_t v465;
  _QWORD *v466;
  llvm *v467;
  uint64_t v468;
  unsigned int v469;
  _QWORD *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t *v475;
  unint64_t v476;
  _QWORD *v477;
  unint64_t v478;
  unint64_t v479;
  uint64_t v480;
  unint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t *v485;
  unint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t *v490;
  uint64_t v491;
  uint64_t v492;
  _QWORD *v493;
  uint64_t v494;
  uint64_t v495;
  _QWORD *v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  __int16 v500;
  uint64_t v501;
  uint64_t *v502;
  uint64_t v503;
  uint64_t v504;
  uint64_t *v505;
  unint64_t v506;
  unint64_t v507;
  uint64_t v508;
  uint64_t v509;
  unint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t *v513;
  uint64_t v514;
  unsigned int v515;
  unint64_t v516;
  uint64_t v517;
  uint64_t v518;
  uint64_t *v519;
  unint64_t v520;
  unint64_t v521;
  unsigned int v522;
  uint64_t **v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  int v529;
  __int128 v530;
  unsigned int v531;
  uint64_t *v532;
  uint64_t v533;
  unsigned int v534;
  uint64_t v535;
  llvm *v536;
  uint64_t v537;
  uint64_t v538;
  void *v539;
  unint64_t v540;
  void *v541;
  unsigned int v542;
  uint64_t v543;
  int v544;
  uint64_t v545;
  uint64_t v546;
  uint64_t v547;
  llvm *v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t *v552;
  uint64_t *v553;
  uint64_t *v554;
  unsigned int v555;
  uint64_t **v556;
  uint64_t *v557;
  uint64_t v558;
  unsigned int v559;
  uint64_t **v560;
  uint64_t *v561;
  unint64_t v562;
  uint64_t v563;
  void *v564;
  llvm *v565;
  uint64_t v566;
  uint64_t v567;
  BOOL v568;
  unsigned int v569;
  uint64_t v570;
  void *v571;
  uint64_t *v572;
  uint64_t v573;
  unint64_t v574;
  uint64_t v575;
  unint64_t v576;
  uint64_t *v577;
  llvm *v578;
  uint64_t v579;
  uint64_t v580;
  unint64_t v581;
  uint64_t v582;
  __int16 v583;
  uint64_t v584;
  uint64_t v585;
  llvm *v586;
  uint64_t *v587;
  void *v588;
  uint64_t v589;
  uint64_t v590;
  uint64_t v591;
  llvm *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  __int16 v596;
  uint64_t *v597;
  uint64_t v598;
  unint64_t v599;
  const llvm::DataLayout *v600;
  unsigned __int8 v601;
  unsigned int EntrySize;
  unsigned int v603;
  int8x8_t v604;
  uint8x8_t v605;
  uint64_t v606;
  uint64_t v607;
  llvm *v608;
  uint64_t v609;
  _QWORD *v610;
  unint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t *v614;
  unsigned int v615;
  uint64_t v616;
  uint64_t *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  void *v622;
  uint64_t v623;
  llvm *v624;
  uint64_t v625;
  uint64_t *v626;
  uint64_t v627;
  unint64_t v628;
  uint64_t *v629;
  int v630;
  uint64_t v631;
  uint64_t *v632;
  char v633;
  int v634;
  int v635;
  uint64_t *v636;
  unsigned int v637;
  unsigned int v638;
  uint64_t v639;
  int v640;
  char v641;
  _QWORD *v642;
  int v643;
  int v644;
  uint64_t v645;
  uint64_t *v646;
  uint64_t v647;
  uint64_t v648;
  _QWORD *v649;
  uint64_t v650;
  uint64_t v651;
  unsigned int v652;
  _QWORD *v653;
  uint64_t v654;
  int v655;
  uint64_t v656;
  uint64_t v657;
  _QWORD *v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  int v664;
  unsigned int v665;
  int v666;
  uint64_t v667;
  unsigned int *v668;
  BOOL v669;
  uint64_t v670;
  llvm::EVT **v671;
  void *v672;
  unint64_t v673;
  const char *v674;
  const char *v675;
  unint64_t v676;
  void *v677;
  uint64_t *v678;
  llvm *v679;
  uint64_t v680;
  uint64_t v681;
  unint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t *v686;
  unint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  void *v693;
  uint64_t *v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t *v697;
  uint64_t v698;
  unsigned __int8 v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t ConstantPool;
  int v706;
  _QWORD *v707;
  uint64_t v708;
  uint64_t v709;
  unsigned int v710;
  _QWORD *v711;
  uint64_t v712;
  llvm *v713;
  uint64_t v714;
  uint64_t *v715;
  int v716;
  uint64_t v717;
  _QWORD *v718;
  unint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t *v722;
  uint64_t v723;
  int v724;
  uint64_t v725;
  uint64_t v726;
  void *v727;
  uint64_t v728;
  int v729;
  uint64_t v730;
  uint64_t v731;
  uint64_t *v732;
  uint64_t v733;
  uint64_t *v734;
  BOOL v735;
  void *v736;
  int v737;
  uint64_t v738;
  llvm::EVT **v739;
  void *v740;
  unint64_t v741;
  uint64_t v742;
  uint64_t v743;
  unint64_t v744;
  uint64_t *v745;
  uint64_t v746;
  uint64_t v747;
  uint64_t v748;
  unsigned __int8 v749;
  uint64_t v750;
  unint64_t v751;
  unint64_t v752;
  uint64_t v753;
  uint64_t v754;
  llvm *v755;
  uint64_t v756;
  unint64_t v757;
  _QWORD *v758;
  uint64_t v759;
  __int16 v760;
  uint64_t v761;
  uint64_t *v762;
  unint64_t v763;
  unint64_t v764;
  uint64_t v765;
  unsigned __int8 v766;
  uint64_t v767;
  unsigned __int8 v768;
  unint64_t v769;
  _QWORD *v770;
  uint64_t v771;
  __int16 v772;
  int v773;
  void *v774;
  uint64_t v775;
  uint64_t *v776;
  uint64_t v777;
  llvm *v778;
  uint64_t v779;
  uint64_t v780;
  uint64_t *v781;
  uint64_t v782;
  unint64_t v783;
  int v784;
  uint64_t v785;
  unint64_t *v786;
  unint64_t v787;
  unint64_t v788;
  unint64_t v789;
  unint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  unsigned int v795;
  uint64_t v796;
  uint64_t v797;
  unint64_t v798;
  unint64_t v799;
  uint64_t *v800;
  unsigned int v801;
  unint64_t v802;
  unsigned int v803;
  uint64_t v804;
  _QWORD *v805;
  unint64_t v806;
  uint64_t v807;
  uint64_t v808;
  int v809;
  unint64_t v810;
  unsigned int v811;
  uint64_t v812;
  uint64_t *v813;
  uint64_t v814;
  uint64_t v815;
  uint64_t v816;
  _BOOL8 v817;
  void *v818;
  uint64_t v819;
  void *v820;
  uint64_t v821;
  llvm::UndefValue *v822;
  uint64_t v823;
  char v824;
  int v825;
  _BOOL4 v827;
  uint64_t v828;
  __int128 *v829;
  uint64_t *v830;
  unint64_t v831;
  uint64_t v832;
  void **v833;
  void **v834;
  BOOL v835;
  char v836;
  char v837;
  uint64_t v838;
  uint64_t v839;
  llvm::Constant *v840;
  uint64_t v841;
  uint64_t v842;
  llvm *v843;
  void *v844;
  uint64_t v845;
  uint64_t v846;
  __int16 v847;
  uint64_t v848;
  void *v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  int v856;
  uint64_t v857;
  uint64_t v858;
  int v859;
  uint64_t *v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  int v864;
  _QWORD *v865;
  uint64_t v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t *v870;
  uint64_t v871;
  uint64_t v872;
  unint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  int v877;
  uint64_t v878;
  uint64_t v879;
  llvm::EVT **v880;
  void *v881;
  unint64_t v882;
  uint64_t v883;
  unint64_t v884;
  void *v885;
  uint64_t **v886;
  unint64_t v887;
  uint64_t *v888;
  uint64_t v889;
  llvm *v890;
  uint64_t v891;
  unsigned int v892;
  _QWORD *v893;
  uint64_t v894;
  unsigned int v895;
  _QWORD *v896;
  unsigned int v897;
  uint64_t *v898;
  _QWORD *v899;
  uint64_t v900;
  unsigned int v901;
  _QWORD *v902;
  _QWORD *v903;
  uint64_t v904;
  uint64_t v905;
  unsigned int v906;
  _QWORD *v907;
  uint64_t v908;
  char *v909;
  uint64_t *v910;
  char *v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  void *v917;
  uint64_t v918;
  uint64_t v919;
  uint64_t v920;
  uint64_t *v921;
  uint64_t v922;
  uint64_t v923;
  _QWORD *v924;
  uint64_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t *v928;
  unint64_t v929;
  unint64_t v930;
  uint64_t v931;
  uint64_t v932;
  uint64_t v933;
  uint64_t v934;
  uint64_t v935;
  llvm *v936;
  int v937;
  uint64_t v938;
  uint64_t v939;
  unint64_t v940;
  uint64_t v941;
  uint64_t v942;
  unsigned int v943;
  unint64_t v944;
  uint64_t *v945;
  unsigned int v946;
  uint64_t v947;
  void *v948;
  llvm *v949;
  uint64_t v950;
  const char *v951;
  uint64_t *v952;
  int v953;
  int v954;
  uint64_t v955;
  uint64_t v956;
  uint64_t v957;
  uint64_t v958;
  uint64_t v959;
  void *v960;
  uint64_t v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  unsigned int v967;
  uint64_t **v968;
  uint64_t v969;
  _QWORD *v970;
  uint64_t v971;
  int v972;
  BOOL v973;
  int v975;
  uint64_t v976;
  uint64_t v977;
  __int16 v978;
  uint64_t *v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  void *v984;
  int v985;
  uint64_t *v986;
  uint64_t *v987;
  uint64_t *v988;
  unsigned int v989;
  uint64_t **v990;
  uint64_t v991;
  uint64_t **v992;
  uint64_t v993;
  _QWORD *v994;
  _QWORD *v995;
  uint64_t v996;
  _QWORD *v997;
  int v998;
  unint64_t v999;
  uint64_t ExtendedSizeInBits;
  const char *v1001;
  uint64_t v1002;
  unsigned int v1003;
  unsigned int v1004;
  uint64_t *v1005;
  int v1006;
  size_t v1007;
  uint64_t v1008;
  uint64_t v1009;
  unint64_t v1010;
  unint64_t v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t *v1014;
  unint64_t v1015;
  uint64_t *v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  unsigned int v1021;
  void *v1022;
  uint64_t v1023;
  llvm::ConstantInt *v1024;
  uint64_t *v1025;
  void *v1026;
  llvm::UndefValue *v1027;
  llvm::Type *v1028;
  uint64_t v1029;
  uint64_t v1030;
  int v1031;
  int v1032;
  uint64_t v1033;
  unsigned int v1034;
  uint64_t v1035;
  llvm *v1036;
  uint64_t v1037;
  uint64_t v1038;
  llvm *v1039;
  unint64_t v1040;
  void *v1041;
  int v1042;
  _QWORD *v1043;
  unint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  uint64_t v1047;
  unint64_t v1048;
  uint64_t v1049;
  uint64_t v1050;
  llvm *v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t *v1054;
  uint64_t v1055;
  uint64_t v1056;
  llvm::LLVMContext *v1057;
  unint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  int v1061;
  void *v1062;
  uint64_t v1063;
  unint64_t v1064;
  char v1065;
  uint64_t v1066;
  int v1067;
  uint64_t v1068;
  char v1069;
  _QWORD *v1070;
  int v1071;
  int v1072;
  uint64_t v1073;
  uint64_t *v1074;
  uint64_t v1075;
  uint64_t v1076;
  uint64_t *v1077;
  int v1078;
  uint64_t v1079;
  uint64_t v1080;
  uint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t *v1085;
  unsigned int v1086;
  uint64_t v1087;
  uint64_t v1088;
  _QWORD *v1089;
  uint64_t v1090;
  uint64_t v1091;
  _QWORD *v1092;
  uint64_t v1093;
  uint64_t v1094;
  uint64_t *v1095;
  unsigned int v1096;
  uint64_t *v1097;
  unsigned int v1098;
  uint64_t **v1099;
  uint64_t v1100;
  uint64_t **v1101;
  int v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  unint64_t v1106;
  uint64_t v1107;
  __int16 v1108;
  uint64_t *v1109;
  int v1110;
  uint64_t v1111;
  uint64_t v1112;
  const char *v1113;
  unint64_t v1114;
  llvm *v1115;
  uint64_t v1116;
  _QWORD *v1117;
  unint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t *v1121;
  uint64_t v1122;
  int v1123;
  uint64_t v1124;
  uint64_t v1125;
  uint64_t v1126;
  _QWORD *v1127;
  unint64_t v1128;
  uint64_t v1129;
  uint64_t v1130;
  uint64_t *v1131;
  uint64_t v1132;
  unint64_t v1133;
  uint64_t v1134;
  uint64_t *v1135;
  unint64_t v1136;
  unint64_t v1137;
  unint64_t v1138;
  _QWORD *v1139;
  uint64_t v1140;
  uint64_t v1141;
  uint64_t v1142;
  llvm *v1143;
  uint64_t v1144;
  uint64_t v1145;
  BOOL v1146;
  unsigned int v1147;
  uint64_t v1148;
  BOOL v1149;
  unsigned int v1150;
  unint64_t v1151;
  uint64_t v1152;
  _QWORD *v1153;
  unint64_t v1154;
  uint64_t v1155;
  uint64_t v1156;
  llvm *v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t *v1160;
  uint64_t v1161;
  int v1162;
  uint64_t v1163;
  uint64_t v1164;
  llvm *v1165;
  uint64_t v1166;
  uint64_t v1167;
  int v1168;
  unint64_t v1169;
  uint64_t *v1170;
  llvm *ShiftAmountTy;
  uint64_t v1172;
  _QWORD *v1173;
  unint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  int v1177;
  uint64_t v1178;
  uint64_t v1179;
  uint64_t v1180;
  uint64_t *v1181;
  uint64_t v1182;
  BOOL v1183;
  unint64_t v1184;
  unsigned __int8 *v1185;
  uint64_t v1186;
  uint64_t v1187;
  uint64_t v1188;
  unint64_t v1189;
  uint64_t v1190;
  uint64_t i;
  uint64_t v1192;
  uint64_t *v1193;
  int v1194;
  uint64_t v1195;
  __int16 v1196;
  int v1197;
  unsigned int v1198;
  char *v1199;
  uint64_t v1200;
  char *v1201;
  unint64_t v1202;
  unsigned int *v1203;
  uint64_t v1204;
  uint64_t v1205;
  unint64_t v1206;
  uint64_t j;
  int v1208;
  uint64_t v1209;
  uint64_t v1210;
  _QWORD *v1211;
  int v1212;
  uint64_t v1213;
  uint64_t v1214;
  int v1215;
  uint64_t v1216;
  __int128 *v1217;
  unsigned int v1218;
  unsigned int v1219;
  unsigned int v1220;
  uint64_t v1221;
  uint64_t v1222;
  char *v1223;
  char *v1224;
  int v1225;
  uint64_t v1226;
  unsigned int v1227;
  uint64_t v1228;
  char *v1229;
  char *v1230;
  char *v1231;
  char *v1232;
  char *v1233;
  void **v1234;
  uint64_t v1235;
  uint64_t v1236;
  char *v1237;
  char *v1238;
  char *v1239;
  char *v1240;
  char *v1241;
  void **v1242;
  uint64_t v1243;
  _QWORD *v1244;
  unint64_t v1245;
  unsigned int v1246;
  _QWORD *v1247;
  uint64_t v1248;
  uint64_t v1249;
  uint64_t v1250;
  _DWORD *v1251;
  uint64_t v1252;
  int *v1253;
  _DWORD *v1254;
  int v1255;
  uint64_t v1256;
  int v1257;
  _QWORD *v1258;
  unsigned int v1259;
  char v1260;
  llvm::FixedVectorType ***v1261;
  llvm::UndefValue *Impl;
  uint64_t *v1263;
  _QWORD **v1264;
  uint64_t v1265;
  unsigned __int8 v1266;
  uint64_t v1267;
  uint64_t v1268;
  uint64_t v1269;
  uint64_t v1270;
  uint64_t v1271;
  llvm *v1272;
  uint64_t v1273;
  uint64_t v1274;
  int v1275;
  uint64_t v1276;
  size_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  unint64_t v1280;
  unint64_t v1281;
  uint64_t v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t v1285;
  BOOL v1286;
  llvm::Type *v1287;
  uint64_t v1288;
  BOOL v1289;
  uint64_t v1290;
  BOOL v1291;
  uint64_t v1292;
  uint64_t v1293;
  __int16 v1294;
  unint64_t v1295;
  int v1296;
  unint64_t v1297;
  llvm::LLVMContext *v1298;
  void *v1299;
  void *v1300;
  uint64_t v1301;
  const char *v1302;
  unint64_t v1303;
  uint64_t *v1304;
  uint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  llvm *v1308;
  uint64_t v1309;
  uint64_t v1310;
  uint64_t v1311;
  uint64_t v1312;
  __int16 v1313;
  unsigned int v1314;
  uint64_t v1315;
  llvm *v1316;
  void *v1317;
  _QWORD *v1318;
  unint64_t v1319;
  uint64_t v1320;
  uint64_t v1321;
  uint64_t *v1322;
  unint64_t v1323;
  uint64_t v1324;
  uint64_t v1325;
  uint64_t v1326;
  uint64_t v1327;
  unsigned int v1328;
  uint64_t v1329;
  char v1330;
  int v1331;
  uint64_t v1332;
  unsigned __int8 v1334;
  uint64_t v1335;
  char v1336;
  int v1337;
  BOOL v1338;
  int v1339;
  unsigned int v1340;
  void *v1342;
  void *v1343;
  llvm *v1344;
  uint64_t *v1345;
  uint64_t v1346;
  void *v1347;
  int v1348;
  void *v1349;
  uint64_t v1351;
  uint64_t *v1352;
  unsigned int v1353;
  uint64_t *v1354;
  uint64_t v1355;
  uint64_t v1356;
  unint64_t v1357;
  uint64_t v1358;
  uint64_t v1359;
  unsigned int v1360;
  uint64_t v1361;
  uint64_t v1362;
  uint64_t v1363;
  uint64_t v1364;
  unint64_t v1365;
  uint64_t v1366;
  uint64_t v1367;
  unint64_t v1368;
  _QWORD *v1369;
  uint64_t v1370;
  llvm *v1371;
  uint64_t v1372;
  uint64_t v1373;
  uint64_t v1374;
  uint64_t v1375;
  uint64_t v1376;
  uint64_t *v1377;
  uint64_t *v1378;
  uint64_t *v1379;
  unsigned int v1380;
  uint64_t **v1381;
  uint64_t v1382;
  uint64_t **v1383;
  uint64_t v1384;
  uint64_t v1385;
  __int16 v1386;
  uint64_t v1387;
  int v1388;
  uint64_t v1390;
  _QWORD *v1391;
  uint64_t v1392;
  _QWORD *v1393;
  unint64_t v1394;
  uint64_t v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t *v1398;
  _QWORD *v1399;
  unint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  uint64_t v1403;
  llvm::Type *v1404;
  uint64_t v1405;
  BOOL v1406;
  llvm::Type *v1407;
  uint64_t v1408;
  uint64_t *v1409;
  uint64_t v1410;
  uint64_t v1411;
  __int16 v1412;
  void *v1413;
  uint64_t v1414;
  uint64_t v1415;
  llvm *v1416;
  uint64_t v1417;
  uint64_t v1418;
  __int16 v1419;
  uint64_t v1420;
  uint64_t v1421;
  void *v1422;
  llvm::EVT **v1423;
  unint64_t v1424;
  uint64_t v1425;
  unint64_t v1426;
  uint64_t v1427;
  uint64_t v1428;
  unint64_t v1429;
  uint64_t v1430;
  uint64_t *FixedStack;
  int v1432;
  char v1433;
  _QWORD *v1434;
  int v1435;
  int v1436;
  uint64_t *v1437;
  unsigned int v1438;
  unsigned int v1439;
  uint64_t v1440;
  int v1441;
  char v1442;
  _QWORD *v1443;
  int v1444;
  int v1445;
  uint64_t v1446;
  void *v1447;
  void *v1448;
  uint64_t *v1449;
  int v1450;
  uint64_t v1451;
  uint64_t *v1452;
  const char *v1453;
  unsigned int v1454;
  uint64_t v1455;
  unsigned int v1456;
  uint64_t v1457;
  uint64_t v1458;
  uint64_t v1459;
  uint64_t v1460;
  _QWORD *v1461;
  int v1462;
  __int128 *v1463;
  int v1464;
  uint64_t v1465;
  uint64_t v1466;
  uint64_t *v1467;
  unint64_t v1468;
  uint64_t v1469;
  unint64_t v1470;
  uint64_t v1471;
  const char *v1472;
  unint64_t v1473;
  void *v1474;
  void *v1475;
  uint64_t v1476;
  uint64_t v1477;
  __int16 v1478;
  uint64_t v1479;
  uint64_t v1480;
  unsigned int v1481;
  __int16 v1482;
  uint64_t *v1483;
  const char *v1484;
  unsigned int v1485;
  const char *v1486;
  const char *v1487;
  unsigned int v1488;
  int v1489;
  unsigned int v1490;
  unsigned int v1491;
  uint64_t v1492;
  uint64_t v1493;
  unsigned int v1494;
  _QWORD *v1495;
  uint64_t v1496;
  uint64_t v1497;
  uint64_t v1498;
  unint64_t v1499;
  uint64_t v1500;
  uint64_t v1501;
  uint64_t v1502;
  unint64_t v1503;
  uint64_t v1504;
  uint64_t v1505;
  _QWORD *v1506;
  uint64_t v1507;
  uint64_t v1508;
  _QWORD *v1509;
  uint64_t v1510;
  uint64_t *v1511;
  uint64_t v1512;
  uint64_t v1513;
  uint64_t v1514;
  uint64_t *v1515;
  int v1516;
  uint64_t v1517;
  uint64_t v1518;
  llvm *v1519;
  uint64_t v1520;
  uint64_t v1521;
  __int16 v1522;
  uint64_t *v1523;
  int v1524;
  uint64_t *v1525;
  unsigned int v1526;
  uint64_t **v1527;
  unint64_t v1528;
  unsigned int v1529;
  int v1530;
  unsigned int v1531;
  int v1532;
  unsigned int v1533;
  unsigned int v1534;
  uint64_t v1535;
  _DWORD *v1536;
  _DWORD *v1537;
  unint64_t v1538;
  uint64_t v1539;
  int v1541;
  uint64_t v1542;
  uint64_t v1543;
  __int16 v1544;
  unint64_t v1545;
  uint64_t *v1546;
  uint64_t v1547;
  uint64_t v1548;
  __int16 v1549;
  uint64_t *v1550;
  uint64_t v1551;
  uint64_t v1552;
  uint64_t v1553;
  uint64_t v1554;
  _QWORD *v1555;
  uint64_t v1556;
  uint64_t v1557;
  uint64_t v1558;
  uint64_t v1559;
  uint64_t v1560;
  uint64_t v1561;
  uint64_t *v1562;
  uint64_t v1563;
  uint64_t v1564;
  uint64_t v1567;
  _BOOL4 v1568;
  uint64_t v1569;
  uint64_t v1570;
  unint64_t v1571;
  uint64_t v1572;
  _QWORD *v1573;
  unint64_t v1574;
  uint64_t v1575;
  __int16 v1576;
  uint64_t v1577;
  int v1578;
  _QWORD *v1579;
  unsigned int v1580;
  uint64_t v1581;
  unsigned int v1582;
  uint64_t v1583;
  uint64_t v1584;
  unsigned int v1585;
  uint64_t v1586;
  llvm *v1587;
  void *v1588;
  _QWORD *v1589;
  unint64_t v1590;
  uint64_t v1591;
  uint64_t v1592;
  uint64_t *v1593;
  uint64_t *v1594;
  uint64_t *v1595;
  unsigned int v1596;
  uint64_t **v1597;
  uint64_t *v1598;
  int v1599;
  uint64_t v1600;
  uint64_t v1601;
  llvm *v1602;
  uint64_t v1603;
  _QWORD *v1604;
  unint64_t v1605;
  uint64_t v1606;
  uint64_t v1607;
  int v1608;
  _QWORD *v1609;
  uint64_t v1610;
  int v1611;
  int v1612;
  uint64_t v1613;
  _QWORD *v1614;
  int v1615;
  uint64_t v1616;
  uint64_t v1617;
  uint64_t v1618;
  _QWORD *v1619;
  _QWORD *v1620;
  uint64_t v1621;
  uint64_t v1622;
  uint64_t v1623;
  uint64_t v1624;
  uint64_t v1625;
  __int16 v1626;
  uint64_t v1627;
  uint64_t v1628;
  uint64_t v1629;
  llvm *v1630;
  uint64_t v1631;
  _QWORD *v1632;
  unint64_t v1633;
  uint64_t v1634;
  uint64_t v1635;
  uint64_t v1636;
  uint64_t *v1637;
  unint64_t v1638;
  unint64_t v1639;
  _QWORD *v1640;
  unint64_t v1641;
  uint64_t v1642;
  uint64_t v1643;
  uint64_t v1644;
  unint64_t v1645;
  uint64_t *v1646;
  uint64_t v1647;
  uint64_t v1648;
  uint64_t v1649;
  uint64_t *v1650;
  unint64_t v1651;
  unint64_t v1652;
  _BOOL4 v1653;
  uint64_t v1654;
  uint64_t v1655;
  __int16 v1656;
  uint64_t v1657;
  uint64_t *v1658;
  uint64_t *v1659;
  uint64_t *v1660;
  uint64_t *v1661;
  unsigned int v1662;
  uint64_t **v1663;
  uint64_t v1664;
  uint64_t v1665;
  uint64_t JumpTable;
  uint64_t v1667;
  int v1668;
  uint64_t *v1669;
  unsigned int v1670;
  unint64_t v1671;
  uint64_t v1672;
  uint64_t v1673;
  unint64_t v1674;
  uint64_t v1675;
  uint64_t v1676;
  uint64_t *v1677;
  unsigned int v1678;
  uint64_t v1679;
  uint64_t v1680;
  uint64_t v1681;
  uint64_t v1682;
  uint64_t v1683;
  uint64_t v1684;
  int v1685;
  int v1686;
  uint64_t v1687;
  uint64_t *v1688;
  uint64_t v1689;
  uint64_t *v1690;
  char v1691;
  _QWORD *v1692;
  unint64_t v1693;
  uint64_t *v1694;
  unsigned int v1695;
  unsigned int v1696;
  uint64_t v1697;
  uint64_t *v1698;
  char v1699;
  _QWORD *v1700;
  unint64_t v1701;
  uint64_t v1702;
  __int16 v1703;
  uint64_t v1704;
  uint64_t v1705;
  uint64_t *v1706;
  uint64_t v1707;
  int v1708;
  _QWORD *v1709;
  unint64_t v1710;
  unint64_t v1711;
  BOOL v1712;
  double v1713;
  uint64_t *v1714;
  unint64_t v1715;
  unint64_t v1716;
  uint64_t v1717;
  uint64_t v1718;
  uint64_t v1719;
  uint64_t *v1720;
  unsigned int v1721;
  unsigned int v1722;
  uint64_t v1723;
  unsigned __int8 v1724;
  uint64_t v1725;
  uint64_t v1726;
  uint64_t v1727;
  uint64_t v1728;
  uint64_t v1729;
  uint64_t v1730;
  uint64_t v1731;
  uint64_t v1732;
  int v1733;
  uint64_t *v1734;
  uint64_t *v1735;
  uint64_t v1736;
  int v1737;
  uint64_t *v1738;
  unsigned int v1739;
  unsigned int v1740;
  uint64_t v1741;
  uint64_t *v1742;
  unsigned int v1743;
  uint64_t v1744;
  __int16 v1745;
  unint64_t v1746;
  uint64_t *v1747;
  uint64_t v1748;
  uint64_t v1749;
  uint64_t v1750;
  uint64_t *v1751;
  unsigned int v1752;
  unsigned int v1753;
  uint64_t v1754;
  uint64_t v1755;
  __int16 v1756;
  uint64_t *v1757;
  int v1758;
  int v1759;
  uint64_t *v1760;
  unsigned int v1761;
  uint64_t v1762;
  _BOOL4 v1763;
  uint64_t v1764;
  uint64_t v1765;
  unsigned int v1766;
  uint64_t ExtendedIntegerVT;
  uint64_t v1768;
  uint64_t v1769;
  uint64_t v1770;
  int v1771;
  unsigned int v1772;
  void **v1773;
  void *v1774;
  uint64_t *v1775;
  uint64_t v1776;
  uint64_t v1777;
  int v1778;
  int v1779;
  int v1780;
  uint64_t v1781;
  unsigned int v1782;
  _BOOL4 v1783;
  uint64_t v1784;
  uint64_t v1785;
  int v1786;
  uint64_t *v1787;
  unsigned int v1788;
  uint64_t v1789;
  __int16 v1790;
  uint64_t v1791;
  uint64_t v1792;
  uint64_t v1793;
  _QWORD *v1794;
  uint64_t v1795;
  uint64_t v1796;
  uint64_t v1797;
  uint64_t v1798;
  uint64_t v1799;
  __int16 v1800;
  uint64_t v1801;
  uint64_t *v1802;
  uint64_t v1803;
  uint64_t v1804;
  _QWORD *v1805;
  uint64_t v1806;
  uint64_t v1807;
  _QWORD *v1808;
  uint64_t v1809;
  uint64_t v1810;
  uint64_t *v1811;
  unint64_t v1812;
  const llvm::APInt *v1813;
  uint64_t v1814;
  unint64_t v1815;
  uint64_t v1816;
  uint64_t v1817;
  uint64_t v1818;
  llvm::ConstantInt *v1819;
  unsigned int v1820;
  unint64_t v1821;
  uint64_t *v1822;
  uint64_t v1823;
  unsigned __int8 v1824;
  unint64_t v1825;
  uint64_t v1826;
  uint64_t v1827;
  unint64_t v1828;
  __int16 v1829;
  char v1830;
  uint64_t v1831;
  uint64_t v1832;
  llvm *v1833;
  uint64_t v1834;
  uint64_t v1835;
  uint64_t *v1836;
  unsigned int v1837;
  unint64_t v1838;
  unsigned __int8 v1839;
  uint64_t v1840;
  uint64_t v1841;
  int v1842;
  uint64_t *v1843;
  unsigned int v1844;
  unsigned int v1845;
  uint64_t *v1846;
  int v1847;
  uint64_t v1848;
  uint64_t v1849;
  __int16 v1850;
  uint64_t *v1851;
  int v1852;
  uint64_t v1853;
  uint64_t v1854;
  const char *v1855;
  uint64_t v1856;
  llvm *v1857;
  uint64_t v1858;
  _QWORD *v1859;
  unint64_t v1860;
  uint64_t v1861;
  uint64_t v1862;
  uint64_t v1863;
  uint64_t *v1864;
  uint64_t v1865;
  int v1866;
  uint64_t v1867;
  uint64_t v1868;
  _DWORD *v1869;
  int v1870;
  void **v1871;
  __int128 *v1872;
  void *v1873;
  void *v1874;
  uint64_t v1875;
  uint64_t v1876;
  int v1877;
  _QWORD *v1878;
  int v1879;
  uint64_t v1880;
  uint64_t v1881;
  uint64_t v1882;
  uint64_t v1883;
  unsigned int v1884;
  uint64_t v1885;
  unint64_t v1886;
  unsigned int v1887;
  _QWORD *v1888;
  int v1889[2];
  llvm *v1890;
  uint64_t *v1891;
  _QWORD *v1892;
  uint64_t v1893;
  unsigned int v1894;
  int v1895;
  unint64_t v1896;
  uint64_t v1897;
  uint64_t v1898;
  uint64_t v1899;
  uint64_t v1900;
  uint64_t v1901;
  void *v1902;
  int v1903[2];
  unsigned int v1904;
  int v1905;
  unsigned int v1906;
  llvm *v1907;
  llvm *v1908;
  uint64_t v1909;
  uint64_t v1910;
  uint64_t v1911;
  unsigned int v1912;
  uint64_t v1913;
  uint64_t v1914;
  uint64_t v1915;
  uint64_t v1916;
  unint64_t v1917;
  llvm *v1918;
  uint64_t v1919;
  unint64_t v1920;
  uint64_t v1921;
  uint64_t v1922;
  uint64_t v1923;
  uint64_t v1924;
  int v1925;
  uint64_t v1926;
  uint64_t v1927;
  unint64_t v1928;
  unint64_t v1929;
  uint64_t v1930;
  uint64_t v1931;
  unint64_t v1932;
  uint64_t v1933;
  llvm *v1934;
  uint64_t *v1935;
  char v1936;
  unsigned int v1937;
  unint64_t v1938;
  uint64_t v1939;
  uint64_t v1940;
  unsigned int v1941;
  uint64_t v1942;
  unint64_t v1943;
  unsigned int v1944;
  uint64_t v1945;
  uint64_t v1946;
  void *v1947;
  unint64_t v1948;
  unint64_t v1949;
  unint64_t v1950;
  uint64_t v1951;
  unint64_t v1952;
  uint64_t v1953;
  uint64_t *v1954;
  int v1955[4];
  int v1956;
  char v1957;
  uint64_t v1958;
  llvm *v1959;
  uint64_t v1960;
  uint64_t v1961;
  uint64_t v1962;
  uint64_t *v1963;
  void *v1964;
  unsigned int v1965;
  int v1966[4];
  uint64_t *v1967;
  int v1968[4];
  uint64_t v1969;
  llvm *v1970;
  uint64_t *v1971;
  int v1972[4];
  int v1973[4];
  llvm *v1974;
  uint64_t v1975;
  uint64_t v1976;
  uint64_t v1977;
  __int128 v1978;
  int v1979;
  char v1980;
  char v1981;
  void *v1982;
  unsigned int v1983;
  int v1984;
  __int128 v1985;
  __int128 v1986;
  __int128 v1987;
  unsigned __int8 *v1988;
  int v1989;
  unint64_t v1990;
  uint64_t v1991;
  llvm *v1992;
  uint64_t v1993;
  unsigned __int8 *v1994;
  int v1995;
  unsigned __int8 *v1996;
  int v1997;
  void *v1998;
  uint64_t v1999;
  _BYTE v2000[128];
  void *v2001[34];
  _QWORD **v2002;
  _QWORD *v2003;
  uint64_t v2004;
  void *v2005;
  uint64_t v2006;
  _BYTE v2007[64];
  void *v2008;
  uint64_t v2009;
  _BYTE v2010[64];
  void *v2011[2];
  void *v2012;
  uint64_t v2013;
  _BYTE v2014[64];
  void *v2015[5];
  int v2016;
  uint64_t v2017;
  int v2018;
  uint64_t v2019;
  _QWORD v2020[3];
  _QWORD v2021[2];
  uint64_t v2022;
  unint64_t v2023;
  void *v2024;
  unsigned int v2025;
  unsigned __int8 v2026;
  void *v2027[2];
  __int128 v2028;
  uint64_t *v2029;
  int v2030;
  _QWORD *v2031;
  int v2032;
  uint64_t v2033;
  __int128 v2034;
  uint64_t v2035;
  _QWORD v2036[2];
  uint64_t v2037;
  unint64_t v2038;
  void *__src;
  unsigned int v2040;
  unsigned __int8 v2041;
  uint64_t v2042;

  v4 = MEMORY[0x1E0C80A78](a1, a2, a3, a4);
  v12 = v11;
  v13 = v4;
  v2042 = *MEMORY[0x1E0C80C00];
  v1998 = v2000;
  v1999 = 0x800000000;
  v14 = *(unsigned __int8 **)(v11 + 64);
  v1988 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v1988, v14, 2);
  v15 = *(_DWORD *)(v12 + 60);
  v1989 = v15;
  *(_QWORD *)&v1987 = 0;
  DWORD2(v1987) = 0;
  *(_QWORD *)&v1986 = 0;
  DWORD2(v1986) = 0;
  *(_QWORD *)&v1985 = 0;
  DWORD2(v1985) = 0;
  v1982 = 0;
  v1983 = 0;
  v1981 = 0;
  v16 = *(unsigned __int16 *)(v12 + 24);
  v17 = 1;
  switch(*(_WORD *)(v12 + 24))
  {
    case 0xB:
      v693 = *(void **)(v12 + 64);
      v2001[0] = v693;
      if (v693)
      {
        llvm::MetadataTracking::track((uint64_t)v2001, (unsigned __int8 *)v693, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2001[1]) = v15;
      v694 = *(uint64_t **)(v12 + 40);
      v695 = *v694;
      v696 = v694[1];
      v697 = *(uint64_t **)(v12 + 80);
      v698 = *(_QWORD *)(v13 + 16);
      v699 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v13 + 8) + 32))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v698 + 40) + 40) + 272, 0);
      v700 = sub_1C5D40C8C(v698, v697, (llvm *)v699, 0, 0, 0, 0, 0);
      v702 = v701;
      v703 = *(unsigned __int8 *)(v700 + 92);
      v704 = *(_QWORD *)(v13 + 16);
      ConstantPool = llvm::PseudoSourceValueManager::getConstantPool(*(llvm::PseudoSourceValueManager **)(*(_QWORD *)(v704 + 40) + 432));
      v706 = 0;
      v2015[0] = (void *)(ConstantPool | 4);
      v2015[1] = 0;
      BYTE4(v2015[2]) = 0;
      if (ConstantPool)
        v706 = *(_DWORD *)(ConstantPool + 12);
      LODWORD(v2015[2]) = v706;
      v2028 = 0u;
      *(_OWORD *)v2027 = 0u;
      v707 = sub_1C63681B0(v704, v695, v696, (uint64_t)v2001, v704 + 112, 0, v700, v702, (__int128 *)v2015, (unsigned __int16)v703 | 0x100u, (v703 | 0x100uLL) >> 32, 0, (uint64_t)v2027, 0);
      v709 = v708;
      if (v2001[0])
        llvm::MetadataTracking::untrack((uint64_t)v2001, (unsigned __int8 *)v2001[0]);
      v710 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v710 = v1999;
      }
      v711 = (char *)v1998 + 16 * v710;
      *v711 = v707;
      v711[1] = v709;
      LODWORD(v1999) = v1999 + 1;
      goto LABEL_564;
    case 0xC:
      v812 = *(_QWORD *)(v12 + 80) + 24;
      v813 = *(uint64_t **)(v12 + 40);
      v814 = *v813;
      v815 = v813[1];
      v816 = *(_QWORD *)(v13 + 8);
      v817 = sub_1C636604C(*(_QWORD *)(v13 + 16));
      if (((*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, _BOOL8))(*(_QWORD *)v816 + 480))(v816, v812, v814, v815, v817) & 1) != 0)goto LABEL_564;
      v818 = *(void **)(v12 + 64);
      v2011[0] = v818;
      if (v818)
        llvm::MetadataTracking::track((uint64_t)v2011, (unsigned __int8 *)v818, 2);
      LODWORD(v2011[1]) = *(_DWORD *)(v12 + 60);
      v819 = *(_QWORD *)(v12 + 40);
      v820 = *(void **)v819;
      v821 = *(_QWORD *)(v819 + 8);
      v822 = *(llvm::UndefValue **)(v12 + 80);
      v823 = *((_QWORD *)v822 + 4);
      if ((_UNKNOWN *)v823 == &unk_1C866F1C0)
      {
        llvm::detail::DoubleAPFloat::DoubleAPFloat((llvm::detail::DoubleAPFloat *)&v2027[1], (llvm::UndefValue *)((char *)v822 + 32));
      }
      else
      {
        v2027[1] = *((void **)v822 + 4);
        if ((*(_DWORD *)(v823 + 8) + 64) >= 0x80)
          *(_QWORD *)&v2028 = operator new[]();
        v824 = *((_BYTE *)v822 + 52);
        v825 = v824 & 7;
        BYTE12(v2028) = BYTE12(v2028) & 0xF0 | v824 & 8 | v824 & 7;
        DWORD2(v2028) = *((_DWORD *)v822 + 12);
        v827 = (v824 & 6) != 0 && v825 != 3;
        if (v825 == 1 || v827)
        {
          v828 = *((unsigned int *)v2027[1] + 2);
          if ((v828 - 64) <= 0xFFFFFF7F)
            v829 = (__int128 *)v2028;
          else
            v829 = &v2028;
          v830 = (uint64_t *)((char *)v822 + 40);
          if ((*(_DWORD *)(*((_QWORD *)v822 + 4) + 8) - 64) < 0xFFFFFF80)
            v830 = (uint64_t *)*((_QWORD *)v822 + 5);
          if (v828 <= 0xFFFFFFBF)
          {
            v831 = (unint64_t)(v828 + 64) >> 6;
            do
            {
              v832 = *v830++;
              *(_QWORD *)v829 = v832;
              v829 = (__int128 *)((char *)v829 + 8);
              --v831;
            }
            while (v831);
          }
        }
      }
      v2008 = v820;
      v2009 = v821;
      v833 = v2027;
      if (v2027[1] == &unk_1C866F1C0)
        v834 = (void **)v2028;
      else
        v834 = v2027;
      if ((*((_BYTE *)v834 + 28) & 7) != 1)
        goto LABEL_484;
      if (v2027[1] == &unk_1C866F1C0)
        v833 = (void **)v2028;
      v1869 = v833[1];
      if (v1869[4] == 1)
      {
LABEL_484:
        v835 = 0;
      }
      else
      {
        v1870 = v1869[2];
        v1871 = v2027;
        if (v2027[1] == &unk_1C866F1C0)
          v1871 = (void **)v2028;
        v1872 = &v2028;
        if (v2027[1] == &unk_1C866F1C0)
          v1872 = (__int128 *)(v2028 + 16);
        if ((v1870 - 64) <= 0xFFFFFF7F)
          v1872 = (__int128 *)v1871[2];
        v835 = ((*((_QWORD *)v1872 + ((v1870 - 2) >> 6)) >> (v1870 - 2)) & 1) == 0;
      }
      v836 = 0;
      if (v835 || ((_BYTE)v820 - 9) < 2u)
      {
        v1945 = v821;
        v1964 = v820;
        v838 = v13;
      }
      else
      {
        v836 = 0;
        v837 = (char)v820;
        v1945 = v821;
        v1964 = v820;
        v838 = v13;
        do
        {
          LOBYTE(v2008) = v837 - 1;
          v2009 = 0;
          if (sub_1C6364B34((uint64_t)v2008, 0, (uint64_t)v2027))
          {
            if ((_BYTE)v820)
            {
              if ((_BYTE)v2008)
              {
                v839 = *(_QWORD *)(v13 + 8);
                if ((*(_WORD *)(v839 + 358 * v820 + 2 * v2008 + 73672) & 0xF0) == 0)
                {
                  if ((*(unsigned int (**)(uint64_t, void *, uint64_t))(*(_QWORD *)v839 + 616))(v839, v820, v821))
                  {
                    llvm::EVT::getTypeForEVT((llvm::EVT *)&v2008, *(llvm::LLVMContext **)(*(_QWORD *)(v13 + 16) + 56));
                    v822 = sub_1C537D3B8((llvm *)0x2D, (uint64_t)v822, v840, 0);
                    v836 = 1;
                    v1945 = v2009;
                    v1964 = v2008;
                  }
                }
              }
            }
          }
          v837 = (char)v2008;
        }
        while (((_BYTE)v2008 - 9) > 1u);
      }
      v1723 = *(_QWORD *)(v838 + 16);
      v1724 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v838 + 8) + 32))(*(_QWORD *)(v838 + 8), *(_QWORD *)(**(_QWORD **)(v1723 + 40) + 40) + 272, 0);
      v1725 = sub_1C5D40C8C(v1723, (uint64_t *)v822, (llvm *)v1724, 0, 0, 0, 0, 0);
      v1727 = v1726;
      v1728 = *(unsigned __int8 *)(v1725 + 92);
      v1729 = *(_QWORD *)(v838 + 16);
      v1730 = *(_QWORD *)(v1729 + 40);
      if ((v836 & 1) != 0)
      {
        v1731 = llvm::PseudoSourceValueManager::getConstantPool(*(llvm::PseudoSourceValueManager **)(v1730 + 432));
        v1733 = 0;
        v2001[0] = (void *)(v1731 | 4);
        v2001[1] = 0;
        BYTE4(v2001[2]) = 0;
        if (v1731)
          v1733 = *(_DWORD *)(v1731 + 12);
        LODWORD(v2001[2]) = v1733;
        memset(v2015, 0, 32);
        v1734 = sub_1C636B4C8(v1729, 1, (uint64_t)v2011, (uint64_t)v820, v821, v1729 + 112, 0, v1732, v1725, v1727, (__int128 *)v2001, (uint64_t)v1964, v1945, (unsigned __int16)v1728 | 0x100u, (v1728 | 0x100uLL) >> 32, 0, (uint64_t)v2015);
      }
      else
      {
        v1736 = llvm::PseudoSourceValueManager::getConstantPool(*(llvm::PseudoSourceValueManager **)(v1730 + 432));
        v1737 = 0;
        v2001[0] = (void *)(v1736 | 4);
        v2001[1] = 0;
        BYTE4(v2001[2]) = 0;
        if (v1736)
          v1737 = *(_DWORD *)(v1736 + 12);
        LODWORD(v2001[2]) = v1737;
        memset(v2015, 0, 32);
        v1734 = sub_1C63681B0(v1729, (uint64_t)v820, v821, (uint64_t)v2011, v1729 + 112, 0, v1725, v1727, (__int128 *)v2001, (unsigned __int16)v1728 | 0x100u, (v1728 | 0x100uLL) >> 32, 0, (uint64_t)v2015, 0);
      }
      v1593 = v1734;
      v1595 = v1735;
      if (v2027[1] == &unk_1C866F1C0)
      {
        sub_1C4773C74((uint64_t *)&v2028);
      }
      else if ((*((_DWORD *)v2027[1] + 2) - 64) <= 0xFFFFFF7F && (_QWORD)v2028)
      {
        MEMORY[0x1CAA32F9C](v2028, 0x1000C8000313F17);
      }
      if (v2011[0])
        llvm::MetadataTracking::untrack((uint64_t)v2011, (unsigned __int8 *)v2011[0]);
      goto LABEL_1158;
    case 0xD:
    case 0xE:
    case 0x10:
    case 0x11:
    case 0x12:
    case 0x15:
    case 0x2E:
    case 0x2F:
    case 0x30:
      goto LABEL_572;
    case 0x16:
    case 0x17:
    case 0x1D:
      v18 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), 0, 0);
      goto LABEL_343;
    case 0x1E:
      v745 = *(uint64_t **)(v12 + 32);
      v746 = *v745;
      v747 = v745[1];
      v748 = *(_QWORD *)(v13 + 16);
      v749 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v13 + 8) + 32))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v748 + 40) + 40) + 272, 0);
      v750 = sub_1C6366480(v748, v746, v747, (uint64_t)&v1988, v749, 0);
      v752 = v751;
      v753 = *(_QWORD *)(v13 + 16);
      v754 = *(_QWORD *)(v750 + 40) + 16 * v751;
      v755 = *(llvm **)v754;
      v756 = *(_QWORD *)(v754 + 8);
      v758 = sub_1C5D51E4C(v753, 29, (uint64_t)&v1988, *(llvm **)v754, v756);
      v760 = 0;
      v761 = *(_QWORD *)(v753 + 832);
      if (v761)
        v760 = *(_WORD *)(v761 + 8);
      v762 = sub_1C5D56C70(v753, 56, (const llvm::APInt *)&v1988, v755, v756, (uint64_t)v758, v757, v759, v750, v752, v760);
      v764 = v763;
      v765 = *(_QWORD *)(v13 + 16);
      v766 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v13 + 8) + 32))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v765 + 40) + 40) + 272, 0);
      v767 = *(_QWORD *)(v13 + 16);
      v768 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v13 + 8) + 32))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v767 + 40) + 40) + 272, 0);
      v770 = sub_1C6366AB4(v767, 0, (const llvm::APInt *)&v1988, (llvm *)v768, 0, 0, 0);
      v771 = *(_QWORD *)(v765 + 832);
      if (v771)
        v772 = *(_WORD *)(v771 + 8);
      else
        v772 = 0;
      v1304 = sub_1C5D52060(v765, 22, (const llvm::APInt *)&v1988, (llvm *)v766, 0, (uint64_t)v770, v769, v772);
      v1306 = *(_QWORD *)(v13 + 16);
      v1307 = v1304[5] + 16 * v1303;
      v1308 = *(llvm **)v1307;
      v1309 = *(_QWORD *)(v1307 + 8);
      v1310 = *(_QWORD *)(v1306 + 832);
      if (v1310)
        LOWORD(v1310) = *(_WORD *)(v1310 + 8);
      v18 = sub_1C5D56C70(v1306, 56, (const llvm::APInt *)&v1988, v1308, v1309, (uint64_t)v1304, v1303, v1305, (uint64_t)v762, v764, v1310);
      goto LABEL_343;
    case 0x1F:
    case 0x21:
    case 0x107:
    case 0x111:
    case 0x11F:
      goto LABEL_558;
    case 0x20:
      v689 = *(_QWORD *)(v13 + 16);
      v690 = 0;
      v691 = 5;
      v692 = 0;
      goto LABEL_533;
    case 0x33:
      v183 = *(_QWORD *)(v12 + 40);
      v184 = *(llvm **)v183;
      v185 = *(_QWORD *)(v183 + 8);
      v186 = *(_QWORD *)v183;
      if (v186)
      {
        v187 = (v186 - 120) >= 0x20 && (v186 - 2) >= 6;
        if (v187 && (v186 - 15) >= 0x3C)
        {
LABEL_162:
          v188 = sub_1C5D404C4(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v1988, (_BOOL8)v184, v185, 0, 0.0);
          goto LABEL_163;
        }
      }
      else
      {
        if ((*(_DWORD *)(v185 + 8) & 0xFE) == 0x12)
          v293 = *(unsigned __int8 *)(**(_QWORD **)(v185 + 16) + 8);
        else
          v293 = *(_DWORD *)(v185 + 8);
        if (v293 != 13)
          goto LABEL_162;
      }
      v188 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, v184, v185, 0, 0);
LABEL_163:
      v190 = v188;
      v191 = v189;
LABEL_164:
      v192 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v192 = v1999;
      }
      v193 = (uint64_t **)((char *)v1998 + 16 * v192);
      *v193 = v190;
      v193[1] = v191;
      goto LABEL_563;
    case 0x35:
      v206 = *(uint64_t **)(v12 + 32);
      v207 = *v206;
      v208 = *(_QWORD *)(*v206 + 40) + 16 * *((unsigned int *)v206 + 2);
      v209 = *(llvm **)v208;
      v210 = *(void **)(v208 + 8);
      v2027[0] = *(void **)v208;
      v2027[1] = v210;
      v211 = *(_QWORD *)(v206[5] + 80);
      v212 = (_QWORD *)(v211 + 24);
      if (*(_DWORD *)(v211 + 32) >= 0x41u)
        v212 = (_QWORD *)*v212;
      v213 = *(_QWORD *)(v13 + 16);
      if (*v212)
      {
        v999 = v206[1];
        if ((_BYTE)v209)
          ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)v2027);
        else
          ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2027);
        v1169 = ExtendedSizeInBits;
        if ((_DWORD)v1001 == 1)
        v1170 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(v12 + 32) + 40)
                          + 16 * *(unsigned int *)(*(_QWORD *)(v12 + 32) + 8));
        ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(v13 + 8), *v1170, v1170[1], *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, 1);
        v1173 = sub_1C6366AB4(v213, v1169 >> 1, (const llvm::APInt *)&v1988, ShiftAmountTy, v1172, 0, 0);
        v1176 = *(_QWORD *)(v213 + 832);
        if (v1176)
          LOWORD(v1176) = *(_WORD *)(v1176 + 8);
        v320 = sub_1C5D56C70(v213, 177, (const llvm::APInt *)&v1988, v209, (uint64_t)v210, v207, v999, v1175, (uint64_t)v1173, v1174, v1176);
        *(_QWORD *)&v1987 = v320;
        DWORD2(v1987) = v1177;
        v318 = *(_QWORD *)(v13 + 16);
        v1178 = *(_QWORD *)(v12 + 40);
        v215 = *(llvm **)v1178;
        v216 = *(_QWORD *)(v1178 + 8);
        v217 = *((_QWORD *)&v1987 + 1);
        v1179 = *(_QWORD *)(v318 + 832);
        if (v1179)
          v219 = *(_WORD *)(v1179 + 8);
        else
          v219 = 0;
        v319 = 201;
      }
      else
      {
        v214 = *(_QWORD *)(v12 + 40);
        v215 = *(llvm **)v214;
        v216 = *(_QWORD *)(v214 + 8);
        v217 = v206[1];
        v218 = *(_QWORD *)(v213 + 832);
        if (v218)
          v219 = *(_WORD *)(v218 + 8);
        else
          v219 = 0;
        v318 = *(_QWORD *)(v13 + 16);
        v319 = 201;
        v320 = (uint64_t *)v207;
      }
      goto LABEL_264;
    case 0x36:
      v842 = *(_QWORD *)(v12 + 32);
      v841 = *(_QWORD *)(v12 + 40);
      v843 = *(llvm **)v841;
      v844 = *(void **)(v841 + 8);
      v2027[0] = *(void **)v841;
      v2027[1] = v844;
      v845 = *(_QWORD *)(v13 + 16);
      v846 = *(_QWORD *)(v845 + 832);
      if (v846)
        v847 = *(_WORD *)(v846 + 8);
      else
        v847 = 0;
      *(_QWORD *)&v1987 = sub_1C5D52060(v845, 199, (const llvm::APInt *)&v1988, v843, (uint64_t)v844, *(_QWORD *)v842, *(_QWORD *)(v842 + 8), v847);
      DWORD2(v1987) = v1102;
      v1103 = *(_QWORD *)(v13 + 16);
      v1104 = *(_QWORD *)(v12 + 32);
      v1105 = *(_QWORD *)(v1104 + 40);
      v1106 = *(_QWORD *)(v1104 + 48);
      v1107 = *(_QWORD *)(v1103 + 832);
      if (v1107)
        v1108 = *(_WORD *)(v1107 + 8);
      else
        v1108 = 0;
      v1109 = sub_1C5D52060(v1103, 200, (const llvm::APInt *)&v1988, v843, (uint64_t)v844, v1105, v1106, v1108);
      *(_QWORD *)&v1986 = v1109;
      DWORD2(v1986) = v1110;
      v1111 = *(_QWORD *)(v13 + 16);
      if ((_BYTE)v843)
        v1112 = sub_1C47A8C74((unsigned __int8 *)v2027);
      else
        v1112 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2027);
      v1114 = v1112;
      if ((_DWORD)v1113 == 1)
      v1115 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(v13 + 8), (uint64_t)v2027[0], (uint64_t)v2027[1], *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, 1);
      v1117 = sub_1C6366AB4(v1111, v1114 >> 1, (const llvm::APInt *)&v1988, v1115, v1116, 0, 0);
      v1120 = *(_QWORD *)(v1111 + 832);
      if (v1120)
        LOWORD(v1120) = *(_WORD *)(v1120 + 8);
      v1121 = sub_1C5D56C70(v1111, 175, (const llvm::APInt *)&v1988, v843, (uint64_t)v844, (uint64_t)v1109, *((unint64_t *)&v1986 + 1), v1119, (uint64_t)v1117, v1118, v1120);
      *(_QWORD *)&v1986 = v1121;
      DWORD2(v1986) = v1123;
      v1124 = *(_QWORD *)(v13 + 16);
      v1125 = *(_QWORD *)(v1124 + 832);
      if (v1125)
        LOWORD(v1125) = *(_WORD *)(v1125 + 8);
      v18 = sub_1C5D56C70(v1124, 172, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], v1987, *((unint64_t *)&v1987 + 1), v1122, (uint64_t)v1121, *((unint64_t *)&v1986 + 1), v1125);
      goto LABEL_343;
    case 0x37:
      if (*(_WORD *)(v12 + 58))
      {
        v164 = 0;
        v165 = 0;
        v166 = v1999;
        do
        {
          v167 = *(_OWORD *)(*(_QWORD *)(v12 + 32) + v164);
          if (v166 >= HIDWORD(v1999))
          {
            *(_OWORD *)v1955 = *(_OWORD *)(*(_QWORD *)(v12 + 32) + v164);
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v166 + 1, 16);
            v167 = *(_OWORD *)v1955;
            v166 = v1999;
          }
          *((_OWORD *)v1998 + v166) = v167;
          v166 = v1999 + 1;
          LODWORD(v1999) = v1999 + 1;
          ++v165;
          v164 += 40;
        }
        while (v165 < *(unsigned __int16 *)(v12 + 58));
      }
      goto LABEL_564;
    case 0x39:
      v712 = *(_QWORD *)(v12 + 40);
      v713 = *(llvm **)v712;
      v714 = *(_QWORD *)(v712 + 8);
      v715 = sub_1C6366760(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v1988, *(_QWORD *)(*(_QWORD *)(v12 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 48), *(llvm **)v712, v714);
      *(_QWORD *)&v1987 = v715;
      DWORD2(v1987) = v716;
      v717 = *(_QWORD *)(v13 + 16);
      v718 = sub_1C6366AB4(v717, 1, (const llvm::APInt *)&v1988, v713, v714, 0, 0);
      v721 = *(_QWORD *)(v717 + 832);
      if (v721)
        LOWORD(v721) = *(_WORD *)(v721 + 8);
      v722 = sub_1C5D56C70(v717, 56, (const llvm::APInt *)&v1988, v713, v714, (uint64_t)v715, *((unint64_t *)&v1987 + 1), v720, (uint64_t)v718, v719, v721);
      *(_QWORD *)&v1987 = v722;
      DWORD2(v1987) = v724;
      v725 = *(_QWORD *)(v13 + 16);
      v726 = *(_QWORD *)(v725 + 832);
      if (v726)
        LOWORD(v726) = *(_WORD *)(v726 + 8);
      v18 = sub_1C5D56C70(v725, 56, (const llvm::APInt *)&v1988, v713, v714, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), v723, (uint64_t)v722, *((unint64_t *)&v1987 + 1), v726);
      goto LABEL_343;
    case 0x3A:
      v848 = *(_QWORD *)(v12 + 40);
      v849 = *(void **)(v848 + 8);
      v2027[0] = *(void **)v848;
      v2027[1] = v849;
      v850 = sub_1C636A8B4(*(_QWORD *)(v13 + 16), (uint64_t)v2027[0], (uint64_t)v849, (uint64_t)v2027[0], (uint64_t)v849);
      if (LOBYTE(v2027[0]))
      {
        v853 = v851;
        v854 = *(_QWORD *)(v13 + 8);
        if (LOBYTE(v2027[0]) == 1 || *(_QWORD *)(v854 + 8 * LOBYTE(v2027[0]) + 96))
        {
          v1329 = v854 + 390 * LOBYTE(v2027[0]);
          v1330 = *(_BYTE *)(v1329 + 3925);
          v1331 = *(_BYTE *)(v1329 + 4022) & 0xFB;
          v1332 = 63;
          if ((v1330 & 0xFB) == 0 && v1331 != 0)
            goto LABEL_920;
          v1334 = v1330 & 0xFB;
          v1335 = v854 + 390 * LOBYTE(v2027[0]);
          v1336 = *(_BYTE *)(v1335 + 4021);
          v1337 = *(_BYTE *)(v1335 + 3926) & 0xFB;
          v1338 = (v1336 & 0xFB) != 0 && v1337 == 0;
          v1339 = v1334;
          v1340 = v1334 ? 64 : 63;
          v1332 = v1338 ? 64 : v1340;
          if (!v1339 || v1337 == 0)
          {
LABEL_920:
            v18 = sub_1C636D6B4(*(_QWORD *)(v13 + 16), (const char *)v1332, (const llvm::APInt *)&v1988, v850, v853, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), v852, *(_QWORD *)(*(_QWORD *)(v12 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 48));
            goto LABEL_343;
          }
        }
      }
      v2015[0] = 0;
      LODWORD(v2015[1]) = 0;
      v2001[0] = 0;
      LODWORD(v2001[1]) = 0;
      v1342 = (void *)sub_1C632C870((unsigned __int8 *)v2027, *(llvm::EVT **)(*(_QWORD *)(v13 + 16) + 56));
      v2011[0] = v1342;
      v2011[1] = v1343;
      if (LOBYTE(v2027[0]))
      {
        v1344 = (llvm *)v1342;
        v1345 = *(uint64_t **)(v13 + 8);
        if ((LOBYTE(v2027[0]) == 1 || v1345[LOBYTE(v2027[0]) + 12])
          && (*((unsigned __int8 *)v1345 + 390 * LOBYTE(v2027[0]) + 4061) | 4) == 4
          && (LOBYTE(v2027[0]) == 1 || v1345[LOBYTE(v2027[0]) + 12])
          && (*((unsigned __int8 *)v1345 + 390 * LOBYTE(v2027[0]) + 4062) | 4) == 4
          && (LOBYTE(v2027[0]) == 1 || v1345[LOBYTE(v2027[0]) + 12])
          && (*((unsigned __int8 *)v1345 + 390 * LOBYTE(v2027[0]) + 4037) | 4) == 4
          && (LOBYTE(v2027[0]) == 1 || v1345[LOBYTE(v2027[0]) + 12])
          && (*((unsigned __int8 *)v1345 + 390 * LOBYTE(v2027[0]) + 4034) | 4) == 4
          && sub_1C63783A0(v1345, v12, (uint64_t)v2015, (uint64_t)v2001, v1344, (uint64_t)v1343, *(_QWORD *)(v13 + 16), 1, 0, 0, 0, 0, 0, 0, 0, 0))
        {
          v116 = v13;
          v1384 = *(_QWORD *)(v13 + 16);
          v1385 = *(_QWORD *)(v1384 + 832);
          if (v1385)
            v1386 = *(_WORD *)(v1385 + 8);
          else
            v1386 = 0;
          v1846 = sub_1C5D52060(v1384, 199, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], (uint64_t)v2015[0], (unint64_t)v2015[1], v1386);
          v2015[0] = v1846;
          LODWORD(v2015[1]) = v1847;
          v1848 = *(_QWORD *)(v13 + 16);
          v1849 = *(_QWORD *)(v1848 + 832);
          if (v1849)
            v1850 = *(_WORD *)(v1849 + 8);
          else
            v1850 = 0;
          v1851 = sub_1C5D52060(v1848, 200, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], (uint64_t)v2001[0], (unint64_t)v2001[1], v1850);
          LODWORD(v2001[1]) = v1852;
          v1853 = *(_QWORD *)(v13 + 16);
          if ((_BYTE)v1344)
            v1854 = sub_1C47A8C74((unsigned __int8 *)v2011);
          else
            v1854 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2011);
          v1856 = v1854;
          if ((_DWORD)v1855 == 1)
          v1857 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(v13 + 8), (uint64_t)v2011[0], (uint64_t)v2011[1], *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, 1);
          v1859 = sub_1C6366AB4(v1853, v1856, (const llvm::APInt *)&v1988, v1857, v1858, 0, 0);
          v1862 = *(_QWORD *)(v13 + 16);
          v1863 = *(_QWORD *)(v1862 + 832);
          if (v1863)
            LOWORD(v1863) = *(_WORD *)(v1863 + 8);
          v1864 = sub_1C5D56C70(v1862, 175, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], (uint64_t)v1851, (unint64_t)v2001[1], v1861, (uint64_t)v1859, v1860, v1863);
          LODWORD(v2001[1]) = v1866;
          v1867 = *(_QWORD *)(v13 + 16);
          v1868 = *(_QWORD *)(v1867 + 832);
          if (v1868)
            LOWORD(v1868) = *(_WORD *)(v1868 + 8);
          v1658 = sub_1C5D56C70(v1867, 172, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], (uint64_t)v1846, (unint64_t)v2015[1], v1865, (uint64_t)v1864, (unint64_t)v2001[1], v1868);
LABEL_1187:
          v1660 = v1658;
          v1661 = v1659;
          v1662 = v1999;
          if (v1999 >= HIDWORD(v1999))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
            v1662 = v1999;
          }
          v1663 = (uint64_t **)((char *)v1998 + 16 * v1662);
          *v1663 = v1660;
          v1663[1] = v1661;
          LODWORD(v1999) = v1999 + 1;
          v13 = v116;
        }
      }
      goto LABEL_564;
    case 0x3B:
    case 0x3C:
      if (v16 == 59)
        v76 = 65;
      else
        v76 = 66;
      v77 = *(uint64_t **)(v12 + 40);
      v78 = *v77;
      v79 = *v77;
      if (!*v77)
        goto LABEL_564;
      v80 = v77[1];
      v81 = *(_QWORD *)(v13 + 8);
      if (v79 != 1 && !*(_QWORD *)(v81 + 8 * v78 + 96))
        goto LABEL_564;
      if ((*(_BYTE *)(v81 + 390 * v78 + v76 + 3862) & 0xFB) != 0)
        goto LABEL_564;
      v82 = sub_1C636A8B4(*(_QWORD *)(v13 + 16), v78, v80, v78, v80);
      v85 = sub_1C636D6B4(*(_QWORD *)(v13 + 16), (const char *)v76, (const llvm::APInt *)&v1988, v82, v83, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), v84, *(_QWORD *)(*(_QWORD *)(v12 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 48));
      goto LABEL_265;
    case 0x3D:
    case 0x3E:
      if (!sub_1C5DA3F1C(*(_QWORD *)(v13 + 8), v12, (uint64_t)&v1987, *(_QWORD *)(v13 + 16), v7, v8, v9, v10))goto LABEL_564;
      goto LABEL_201;
    case 0x3F:
    case 0x40:
      v54 = *(uint64_t **)(v12 + 32);
      v55 = *v54;
      v56 = v54[1];
      v58 = v54[5];
      v57 = v54[6];
      v59 = *(_QWORD *)(*(_QWORD *)(*v54 + 40) + 16 * v56);
      v60 = (llvm *)v59;
      if (v16 == 64)
        v61 = 159;
      else
        v61 = 160;
      v62 = *(_QWORD *)(v13 + 8);
      if (v59 != 1 && (!(_BYTE)v59 || !*(_QWORD *)(v62 + 8 * v59 + 96))
        || (*(_BYTE *)(v62 + 390 * v59 + v61 + 3862) & 0xFB) != 0)
      {
        v2027[0] = &v2028;
        v2027[1] = (void *)0x400000000;
        LOBYTE(v2001[0]) = v59;
        v2001[1] = 0;
        v2015[0] = (void *)sub_1C632C870((unsigned __int8 *)v2001, *(llvm::EVT **)(*(_QWORD *)(v13 + 16) + 56));
        v2015[1] = v358;
        if (sub_1C5D97CD8(*(uint64_t **)(v13 + 8), *(unsigned __int16 *)(v12 + 24), v60, 0, (const llvm::APInt *)&v1988, v55, v56, v359, v58, v57, (uint64_t)v2027, (llvm *)v2015[0], (uint64_t)v358, *(_QWORD *)(v13 + 16), 0, 0, 0, 0, 0,
                             0,
                             0,
                             0,
                             0))
        {
          v360 = 0;
          v361 = 1;
          do
          {
            v362 = v361;
            v363 = *(_QWORD *)(v13 + 16);
            v364 = *(_QWORD *)(v363 + 832);
            v1957 = v362;
            v365 = v13;
            if (v364)
              v366 = *(_WORD *)(v364 + 8);
            else
              v366 = 0;
            v367 = sub_1C5D52060(v363, 199, (const llvm::APInt *)&v1988, v60, 0, *((_QWORD *)v2027[0] + 2 * v360), *((_QWORD *)v2027[0] + 2 * v360 + 1), v366);
            v369 = v368;
            v370 = 0;
            v371 = *(_QWORD *)(v365 + 16);
            v372 = *(_QWORD *)(v371 + 832);
            if (v372)
              v370 = *(_WORD *)(v372 + 8);
            v373 = v60;
            v374 = sub_1C5D52060(v371, 200, (const llvm::APInt *)&v1988, v60, 0, *(_QWORD *)((char *)v2027[0] + ((16 * v360) | 0x10)), *(_QWORD *)((char *)v2027[0] + ((16 * v360) | 0x10) + 8), v370);
            v376 = v375;
            v377 = *(_QWORD *)(v365 + 16);
            v379 = sub_1C6131328((unsigned __int8 *)v2015, v375, v378);
            v380 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(v365 + 8), (uint64_t)v2015[0], (uint64_t)v2015[1], *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v365 + 16) + 40) + 40) + 272, 1);
            v382 = sub_1C6366AB4(v377, (uint64_t)v379, (const llvm::APInt *)&v1988, v380, v381, 0, 0);
            v385 = *(_QWORD *)(v365 + 16);
            v386 = *(_QWORD *)(v385 + 832);
            if (v386)
              LOWORD(v386) = *(_WORD *)(v386 + 8);
            v60 = v373;
            v387 = sub_1C5D56C70(v385, 175, (const llvm::APInt *)&v1988, v373, 0, (uint64_t)v374, v376, v384, (uint64_t)v382, v383, v386);
            v390 = *(_QWORD *)(v365 + 16);
            v391 = *(_QWORD *)(v390 + 832);
            if (v391)
              LOWORD(v391) = *(_WORD *)(v391 + 8);
            v392 = sub_1C5D56C70(v390, 172, (const llvm::APInt *)&v1988, v373, 0, (uint64_t)v367, v369, v389, (uint64_t)v387, v376 & 0xFFFFFFFF00000000 | v388, v391);
            v394 = v393;
            v395 = v1999;
            v13 = v365;
            if (v1999 >= (unint64_t)HIDWORD(v1999))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
              v395 = v1999;
            }
            v361 = 0;
            v396 = (uint64_t **)((char *)v1998 + 16 * v395);
            *v396 = v392;
            v396[1] = v394;
            LODWORD(v1999) = v1999 + 1;
            v360 = 2;
          }
          while ((v1957 & 1) != 0);
        }
        v397 = (void **)v2027[0];
        v398 = (void **)&v2028;
        goto LABEL_1079;
      }
      v63 = *(_QWORD *)(v13 + 16);
      v64 = *(_QWORD *)(v63 + 832);
      if (v64)
        LOWORD(v64) = *(_WORD *)(v64 + 8);
      v1886 = v57;
      v65 = v57;
      v66 = v58;
      v1885 = v58;
      v67 = (llvm *)v59;
      v69 = sub_1C5D56C70(v63, 58, (const llvm::APInt *)&v1988, (llvm *)v59, 0, v55, v56, v10, v1885, v1886, v64);
      v71 = v70;
      v72 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v72 = v1999;
      }
      v73 = (uint64_t **)((char *)v1998 + 16 * v72);
      *v73 = v69;
      v73[1] = v71;
      LODWORD(v1999) = v1999 + 1;
      v74 = *(_QWORD *)(v13 + 16);
      v75 = *(_QWORD *)(v74 + 832);
      if (v75)
        LOWORD(v75) = *(_WORD *)(v75 + 8);
      v18 = sub_1C5D56C70(v74, v61, (const llvm::APInt *)&v1988, v67, 0, v55, v56, v68, v66, v65, v75);
LABEL_343:
      v29 = v18;
      v31 = v19;
      goto LABEL_344;
    case 0x48:
    case 0x49:
      v454 = *(uint64_t **)(v12 + 32);
      v456 = *v454;
      v455 = v454[1];
      v457 = v454[5];
      v458 = v454[6];
      v1922 = v454[11];
      v1930 = v454[10];
      if (v16 == 72)
        v459 = 56;
      else
        v459 = 57;
      v460 = *(_QWORD *)(v456 + 40) + 16 * v455;
      v1942 = *(_QWORD *)(v460 + 8);
      v1959 = *(llvm **)v460;
      v461 = *(_QWORD *)(v13 + 16);
      v462 = *(_QWORD *)(v461 + 832);
      if (v462)
        LOWORD(v462) = *(_WORD *)(v462 + 8);
      v1894 = v459;
      v463 = sub_1C5D56C70(v461, v459, (const llvm::APInt *)&v1988, v1959, v1942, v456, v455, v10, v457, v458, v462);
      v465 = v464;
      v466 = *(_QWORD **)(v12 + 40);
      v1901 = v466[3];
      v1908 = (llvm *)v466[2];
      v467 = (llvm *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(**(_QWORD **)(v13 + 8) + 400))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, *(_QWORD *)(*(_QWORD *)(v13 + 16) + 56), *v466, v466[1]);
      v1914 = v468;
      if (v16 == 72)
        v469 = 12;
      else
        v469 = 10;
      v470 = *(_QWORD **)(v13 + 16);
      v471 = sub_1C6367818(v470, v469);
      v474 = v470[104];
      if (v474)
        LOWORD(v474) = *(_WORD *)(v474 + 8);
      v1890 = v467;
      v1891 = v463;
      v475 = sub_1C5D58E08((uint64_t)v470, (const char *)0xC1, (const llvm::APInt *)&v1988, v467, v1914, (uint64_t)v463, v465, v473, v456, v455, v471, v472, SHIDWORD(v472), v474);
      v1896 = v476;
      v1898 = (uint64_t)v475;
      v477 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 1, (const llvm::APInt *)&v1988, v1959, v1942, 0, 0);
      v479 = v478;
      v480 = *(_QWORD *)(v13 + 16);
      v482 = sub_1C6366544(v480, v1930, v1922, (uint64_t)&v1988, (uint64_t)v1959, v1942);
      v484 = *(_QWORD *)(v480 + 832);
      if (v484)
        LOWORD(v484) = *(_WORD *)(v484 + 8);
      v485 = sub_1C5D56C70(v480, 171, (const llvm::APInt *)&v1988, v1959, v1942, v482, v481, v483, (uint64_t)v477, v479, v484);
      v488 = *(_QWORD *)(v13 + 16);
      v489 = *(_QWORD *)(v488 + 832);
      if (v489)
        LOWORD(v489) = *(_WORD *)(v489 + 8);
      v490 = sub_1C5D56C70(v488, v1894, (const llvm::APInt *)&v1988, v1959, v1942, (uint64_t)v463, v465, v487, (uint64_t)v485, v486, v489);
      v492 = v491;
      v493 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, v1959, v1942, 0, 0);
      v495 = v494;
      v496 = *(_QWORD **)(v13 + 16);
      v497 = sub_1C6367818(v496, 0x11u);
      v500 = 0;
      if (v16 == 72)
        v501 = v492;
      else
        v501 = v465;
      v502 = (uint64_t *)v492;
      if (v16 == 72)
        v503 = (uint64_t)v490;
      else
        v503 = (uint64_t)v1891;
      v504 = v496[104];
      if (v504)
        v500 = *(_WORD *)(v504 + 8);
      v505 = sub_1C5D58E08((uint64_t)v496, (const char *)0xC1, (const llvm::APInt *)&v1988, v1890, v1914, v503, v501, v499, (uint64_t)v493, v495, v497, v498, SHIDWORD(v498), v500);
      v507 = v506;
      v508 = *(_QWORD *)(v13 + 16);
      v509 = sub_1C6366544(v508, v1930, v1922, (uint64_t)&v1988, (uint64_t)v1890, v1914);
      v512 = *(_QWORD *)(v508 + 832);
      if (v512)
        LOWORD(v512) = *(_WORD *)(v512 + 8);
      v513 = sub_1C5D56C70(v508, 171, (const llvm::APInt *)&v1988, v1890, v1914, (uint64_t)v505, v507, v511, v509, v510, v512);
      v516 = v507 & 0xFFFFFFFF00000000 | v515;
      v517 = *(_QWORD *)(v13 + 16);
      v518 = *(_QWORD *)(v517 + 832);
      if (v518)
        LOWORD(v518) = *(_WORD *)(v518 + 8);
      v519 = sub_1C5D56C70(v517, 172, (const llvm::APInt *)&v1988, v1890, v1914, v1898, v1896, v514, (uint64_t)v513, v516, v518);
      v521 = v520;
      v522 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v522 = v1999;
      }
      v523 = (uint64_t **)((char *)v1998 + 16 * v522);
      *v523 = v490;
      v523[1] = v502;
      LODWORD(v1999) = v1999 + 1;
      v18 = sub_1C6366608(*(_QWORD *)(v13 + 16), (uint64_t)v519, v521, (const llvm::APInt *)&v1988, v1908, v1901, (char)v1959, v1942);
      goto LABEL_343;
    case 0x4C:
    case 0x4E:
      v2027[0] = 0;
      LODWORD(v2027[1]) = 0;
      v2015[0] = 0;
      LODWORD(v2015[1]) = 0;
      sub_1C5DA2BD4(*(_QWORD *)(v13 + 8), v12, (uint64_t *)v2027, (uint64_t)v2015, *(_QWORD *)(v13 + 16), v8, v9, v10);
      goto LABEL_76;
    case 0x4D:
    case 0x4F:
      v2027[0] = 0;
      LODWORD(v2027[1]) = 0;
      v2015[0] = 0;
      LODWORD(v2015[1]) = 0;
      sub_1C5DA28DC(*(_QWORD *)(v13 + 8), v12, (uint64_t *)v2027, (uint64_t)v2015, *(_QWORD *)(v13 + 16), v8, v9, v10);
      goto LABEL_76;
    case 0x50:
    case 0x51:
      v2027[0] = 0;
      LODWORD(v2027[1]) = 0;
      v2015[0] = 0;
      LODWORD(v2015[1]) = 0;
      if (!sub_1C5DA2F18(*(uint64_t **)(v13 + 8), v12, (uint64_t **)v2027, (uint64_t)v2015, *(_QWORD *)(v13 + 16)))goto LABEL_564;
LABEL_76:
      v98 = *(_OWORD *)v2027;
      v99 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        *(_OWORD *)v1972 = *(_OWORD *)v2027;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v98 = *(_OWORD *)v1972;
        v99 = v1999;
      }
      *((_OWORD *)v1998 + v99) = v98;
      v100 = HIDWORD(v1999);
      v101 = (v1999 + 1);
      LODWORD(v1999) = v1999 + 1;
      v102 = *(_OWORD *)v2015;
      goto LABEL_560;
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x55:
      v18 = sub_1C5DA0CBC(*(unsigned int **)(v13 + 8), v12, *(_QWORD *)(v13 + 16), v6, v7, v8, v9, v10);
      goto LABEL_343;
    case 0x56:
    case 0x57:
      v18 = sub_1C6379F18(*(_QWORD *)(v13 + 8), v12, *(_QWORD **)(v13 + 16));
      goto LABEL_343;
    case 0x58:
    case 0x59:
    case 0x5A:
    case 0x5B:
      v18 = sub_1C5DA1354(*(uint64_t **)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      goto LABEL_343;
    case 0x5C:
    case 0x5D:
    case 0x5E:
    case 0x5F:
      v20 = *(uint64_t **)(v13 + 8);
      v21 = *(void **)(v12 + 64);
      v2027[0] = v21;
      if (v21)
      {
        llvm::MetadataTracking::track((uint64_t)v2027, (unsigned __int8 *)v21, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2027[1]) = v15;
      v22 = *(uint64_t **)(v12 + 32);
      v23 = *v22;
      v24 = v22[1];
      v25 = v22[5];
      v26 = v22[6];
      v27 = *(_QWORD *)(v22[10] + 80);
      v28 = (unsigned int *)(v27 + 24);
      if (*(_DWORD *)(v27 + 32) >= 0x41u)
        v28 = *(unsigned int **)v28;
      v29 = sub_1C5DA21E8(v20, v16, (const llvm::APInt *)v2027, v23, v24, v25, v26, *v28, *(_QWORD *)(v13 + 16));
      v31 = v30;
      if (v2027[0])
        llvm::MetadataTracking::untrack((uint64_t)v2027, (unsigned __int8 *)v2027[0]);
      if (!v29)
        goto LABEL_564;
      goto LABEL_344;
    case 0x61:
      v147 = *(_QWORD *)(v12 + 40);
      v148 = *(llvm **)v147;
      v149 = *(_QWORD *)(v147 + 8);
      v150 = *(_QWORD *)(v13 + 8);
      if (v148 != 1 && (!(_BYTE)v148 || !*(_QWORD *)(v150 + 8 * v148 + 96))
        || (*(unsigned __int8 *)(v150 + 390 * v148 + 3958) | 4) != 4
        || v148 != 1 && !*(_QWORD *)(v150 + 8 * v148 + 96)
        || (*(unsigned __int8 *)(v150 + 390 * v148 + 4084) | 4) != 4)
      {
        goto LABEL_564;
      }
      v151 = *(_WORD *)(v12 + 72);
      v152 = *(_QWORD *)(v13 + 16);
      v153 = *(_QWORD *)(v12 + 32);
      v154 = *(_QWORD *)(v153 + 40);
      v155 = *(_QWORD *)(v153 + 48);
      v156 = *(_QWORD *)(v152 + 832);
      if (v156)
        v157 = *(_WORD *)(v156 + 8);
      else
        v157 = 0;
      *(_QWORD *)&v1987 = sub_1C5D52060(v152, 222, (const llvm::APInt *)&v1988, v148, v149, v154, v155, v157);
      DWORD2(v1987) = v544;
      v85 = sub_1C5D56C70(*(_QWORD *)(v13 + 16), 96, (const llvm::APInt *)&v1988, v148, v149, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), v545, v1987, *((unint64_t *)&v1987 + 1), v151);
      goto LABEL_265;
    case 0x84:
      if (!sub_1C5D9A4BC(*(uint64_t **)(v13 + 8), v12, (uint64_t)&v1987, *(_QWORD *)(v13 + 16)))
        goto LABEL_564;
      v163 = v1987;
      goto LABEL_141;
    case 0x85:
      if (!sub_1C5D9AC98(*(_QWORD *)(v13 + 8), v12, (uint64_t)&v1987, (uint64_t)&v1986, *(_QWORD *)(v13 + 16)))goto LABEL_564;
      sub_1C5D6146C(*(_QWORD *)(v13 + 16), v12, 1, v1986, SDWORD2(v1986));
      v168 = (void *)v1987;
      sub_1C5D6146C(*(_QWORD *)(v13 + 16), v12, 0, v1987, SDWORD2(v1987));
      v169 = *(_QWORD *)(v13 + 32);
      if (v169)
      {
        v2027[0] = v168;
        sub_1C62B3A60(v169, (uint64_t *)v2027);
      }
      sub_1C5CDE8D8(v13, v12);
      goto LABEL_572;
    case 0x86:
    case 0xCA:
      goto LABEL_517;
    case 0x87:
    case 0xCB:
      if (sub_1C6378554(*(uint64_t **)(v13 + 8), v12, (uint64_t)&v1987, (uint64_t)&v1986, *(_QWORD *)(v13 + 16)))
      {
        v530 = v1987;
        v531 = v1999;
        if (v1999 >= HIDWORD(v1999))
        {
          *(_OWORD *)v1973 = v1987;
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
          v530 = *(_OWORD *)v1973;
          v531 = v1999;
        }
        *((_OWORD *)v1998 + v531) = v530;
        LODWORD(v1999) = v1999 + 1;
        if (!sub_1C6141934(v12))
          goto LABEL_564;
        v102 = v1986;
LABEL_559:
        v101 = v1999;
        v100 = HIDWORD(v1999);
LABEL_560:
        if (v101 >= v100)
        {
          *(_OWORD *)v1968 = v102;
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v101 + 1, 16);
          v102 = *(_OWORD *)v1968;
          LODWORD(v101) = v1999;
        }
        *((_OWORD *)v1998 + v101) = v102;
        goto LABEL_563;
      }
      v16 = *(unsigned __int16 *)(v12 + 24);
LABEL_517:
      *(_OWORD *)v2011 = *(_OWORD *)*(_QWORD *)(v12 + 40);
      v885 = *(void **)(v12 + 64);
      v2008 = v885;
      if (v885)
        llvm::MetadataTracking::track((uint64_t)&v2008, (unsigned __int8 *)v885, 2);
      LODWORD(v2009) = *(_DWORD *)(v12 + 60);
      v886 = (uint64_t **)(*(_QWORD *)(v12 + 32) + 40 * sub_1C6141934(v12));
      v888 = *v886;
      v887 = (unint64_t)v886[1];
      v889 = (*v886)[5] + 16 * v887;
      v890 = *(llvm **)v889;
      v891 = *(_QWORD *)(v889 + 8);
      if (*(_QWORD *)v889 == 5 && *(_QWORD *)(*(_QWORD *)(v13 + 8) + 184))
      {
        if (LOBYTE(v2011[0]) == 11 || sub_1C632979C((unsigned __int8 *)v2011, 11, 0))
          goto LABEL_1146;
        v1762 = *(_QWORD *)(v13 + 8);
        v1763 = sub_1C6141934(v12);
        if (LOBYTE(v2011[0]))
        {
          if (LOBYTE(v2011[0]) == 1 || *(_QWORD *)(v1762 + 8 * LOBYTE(v2011[0]) + 96))
          {
            v1764 = 215;
            if (v1763)
              v1764 = 137;
            if (!*(_BYTE *)(v1762 + 390 * LOBYTE(v2011[0]) + v1764 + 3862))
            {
LABEL_1146:
              v1570 = sub_1C5D44240(*(_QWORD *)(v13 + 16), 11, 0, 1u);
              v1952 = v1571;
              v1969 = v1570;
              if (v16 == 202 || v16 == 134)
              {
                v1572 = *(_QWORD *)(v13 + 16);
                v1573 = sub_1C6366AB4(v1572, 0x80000000, (const llvm::APInt *)&v2008, (llvm *)5, 0, 0, 0);
                v1576 = 0;
                v1577 = *(_QWORD *)(v1572 + 832);
                if (v1577)
                  v1576 = *(_WORD *)(v1577 + 8);
                v888 = sub_1C5D56C70(v1572, 173, (const llvm::APInt *)&v2008, (llvm *)5, 0, (uint64_t)v888, v887, v1575, (uint64_t)v1573, v1574, v1576);
                LODWORD(v887) = v1578;
              }
              v1579 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 1127219200, (const llvm::APInt *)&v2008, (llvm *)5, 0, 0, 0);
              v1581 = (uint64_t)v1579;
              v1582 = v1580;
              v1583 = *(_QWORD *)(v13 + 16);
              if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v1583 + 40) + 40) + 272))
              {
                v1582 = v887;
                v1584 = (uint64_t)v888;
                LODWORD(v887) = v1580;
              }
              else
              {
                v1584 = (uint64_t)v1579;
                v1581 = (uint64_t)v888;
              }
              v1689 = v1583 + 112;
              v2028 = 0u;
              *(_OWORD *)v2027 = 0u;
              memset(v2015, 0, 21);
              v1690 = (uint64_t *)(*(_QWORD *)(v1581 + 40) + 16 * v887);
              sub_1C6365BD8(v1583, *v1690, v1690[1]);
              v1692 = sub_1C636B75C(v1583, v1583 + 112, 0, (uint64_t)&v2008, v1581, v887, v1969, v1952, (uint64_t)v2015, v1691, 0, 0, (uint64_t)v2027);
              v1929 = v1693;
              v1940 = (uint64_t)v1692;
              v1694 = sub_1C6369954(*(_QWORD *)(v13 + 16), v1969, v1952, 4, 0, (const llvm::APInt *)&v2008, 0);
              v1696 = v1695;
              v1697 = *(_QWORD *)(v13 + 16);
              v2028 = 0u;
              *(_OWORD *)v2027 = 0u;
              memset(v2015, 0, 21);
              v1698 = (uint64_t *)(*(_QWORD *)(v1584 + 40) + 16 * v1582);
              sub_1C6365BD8(v1697, *v1698, v1698[1]);
              v1700 = sub_1C636B75C(v1697, v1689, 0, (uint64_t)&v2008, v1584, v1582, (uint64_t)v1694, v1696, (uint64_t)v2015, v1699, 0, 0, (uint64_t)v2027);
              v1703 = 0;
              v1704 = *(_QWORD *)(v13 + 16);
              v1705 = *(_QWORD *)(v1704 + 832);
              if (v1705)
                v1703 = *(_WORD *)(v1705 + 8);
              v1706 = sub_1C5D56C70(v1704, 2, (const llvm::APInt *)&v2008, (llvm *)1, 0, v1940, v1929, v1702, (uint64_t)v1700, v1701, v1703);
              v1707 = *(_QWORD *)(v13 + 16);
              memset(v2001, 0, 21);
              v2028 = 0u;
              *(_OWORD *)v2027 = 0u;
              v1709 = sub_1C63681B0(v1707, 11, 0, (uint64_t)&v2008, (uint64_t)v1706, v1708, v1969, v1952, (__int128 *)v2001, 0, 0, 0, (uint64_t)v2027, 0);
              v1711 = v1710;
              v1712 = v16 == 134 || v16 == 202;
              v1713 = 4.50359963e15;
              if (v1712)
                v1713 = 4.50360177e15;
              v1714 = sub_1C5D404C4(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v2008, 11, 0, 0, v1713);
              v1716 = v1715;
              if (!sub_1C6141934(v12))
              {
                v1718 = *(_QWORD *)(v13 + 16);
                v1719 = *(_QWORD *)(v1718 + 832);
                if (v1719)
                  LOWORD(v1719) = *(_WORD *)(v1719 + 8);
                v1720 = sub_1C5D56C70(v1718, 97, (const llvm::APInt *)&v2008, (llvm *)0xB, 0, (uint64_t)v1709, v1711, v1717, (uint64_t)v1714, v1716, v1719);
                v893 = (_QWORD *)sub_1C5D3F69C(*(_QWORD *)(v13 + 16), (uint64_t)v1720, v1721, (uint64_t)&v2008, (uint64_t)v2011[0], (uint64_t)v2011[1]);
                v892 = v1722;
LABEL_523:
                if (v2008)
                  llvm::MetadataTracking::untrack((uint64_t)&v2008, (unsigned __int8 *)v2008);
                *(_QWORD *)&v1987 = v893;
                DWORD2(v1987) = v892;
                if (v893)
                {
                  v894 = *((_QWORD *)&v1987 + 1);
                  v895 = v1999;
                  if (v1999 >= HIDWORD(v1999))
                  {
                    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
                    v895 = v1999;
                  }
                  v896 = (char *)v1998 + 16 * v895;
                  *v896 = v893;
                  v896[1] = v894;
                  LODWORD(v1999) = v1999 + 1;
                  if (sub_1C6141934(v12))
                  {
                    *(_OWORD *)v1966 = v1986;
                    v897 = v1999;
                    if (v1999 >= HIDWORD(v1999))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
                      v897 = v1999;
                    }
                    *((_OWORD *)v1998 + v897) = *(_OWORD *)v1966;
LABEL_1161:
                    LODWORD(v1999) = v1999 + 1;
                  }
                }
                goto LABEL_564;
              }
              v1769 = *(_QWORD *)(v13 + 16);
              *(_OWORD *)v2015 = xmmword_1C866BB00;
              *(_OWORD *)&v2015[2] = unk_1C866BB10;
              v1770 = *(_QWORD *)(v12 + 32);
              v1771 = *(_DWORD *)(v1770 + 8);
              v2027[0] = *(void **)v1770;
              LODWORD(v2027[1]) = v1771;
              *(_QWORD *)&v2028 = v1709;
              DWORD2(v2028) = v1711;
              v2029 = v1714;
              v2030 = v1716;
              v893 = sub_1C6366344(v1769, (const char *)0x66, (const llvm::APInt *)&v2008, (uint64_t *)v2015, 2, (uint64_t *)v2027, 3);
              v892 = v1772;
              *(_QWORD *)&v1986 = v893;
              DWORD2(v1986) = 1;
              v1773 = (void **)(v893[5] + 16 * v1772);
              if (LOBYTE(v2011[0]) == *(unsigned __int8 *)v1773)
              {
                if (LOBYTE(v2011[0]))
                  goto LABEL_523;
                v1774 = v2011[1];
                if (v2011[1] == v1773[1])
                  goto LABEL_523;
              }
              else
              {
                v1774 = v2011[1];
              }
              sub_1C5D3F7CC(*(_QWORD *)(v13 + 16), (uint64_t)v893, v1772, (uint64_t)v893, SDWORD2(v1986), (const llvm::APInt *)&v2008, (uint64_t)v2011[0], (uint64_t)v1774, (uint64_t)v2027);
              v893 = v2027[0];
              v892 = v2027[1];
              *(_QWORD *)&v1986 = v2028;
              DWORD2(v1986) = DWORD2(v2028);
              goto LABEL_523;
            }
          }
        }
      }
      v892 = 0;
      v893 = 0;
      if (v16 == 134 || v16 == 202)
        goto LABEL_523;
      if ((((_BYTE)v890 - 5) > 1u || LOBYTE(v2011[0]) != 10)
        && (v890 != 6 || LOBYTE(v2011[0]) != 11))
      {
        v1567 = *(_QWORD *)(v13 + 8);
        v1568 = sub_1C6141934(v12);
        v892 = LOBYTE(v2011[0]);
        if (LOBYTE(v2011[0]))
        {
          if (LOBYTE(v2011[0]) == 1 || *(_QWORD *)(v1567 + 8 * LOBYTE(v2011[0]) + 96))
          {
            v1569 = 96;
            if (v1568)
              v1569 = 101;
            if ((*(_BYTE *)(v1567 + 390 * LOBYTE(v2011[0]) + v1569 + 3862) & 0xFB) == 0)
            {
              v1783 = sub_1C6141934(v12);
              v1784 = *(_QWORD *)(v13 + 16);
              if (v1783)
              {
                *(_OWORD *)v2027 = *(_OWORD *)v2011;
                LOBYTE(v2028) = 1;
                *((_QWORD *)&v2028 + 1) = 0;
                v1785 = *(_QWORD *)(v12 + 32);
                v1786 = *(_DWORD *)(v1785 + 8);
                v2015[0] = *(void **)v1785;
                LODWORD(v2015[1]) = v1786;
                v2015[2] = v888;
                LODWORD(v2015[3]) = v887;
                v1787 = sub_1C6366344(v1784, (const char *)0x86, (const llvm::APInt *)&v2008, (uint64_t *)v2027, 2, (uint64_t *)v2015, 2);
              }
              else
              {
                v1789 = *(_QWORD *)(v1784 + 832);
                if (v1789)
                  v1790 = *(_WORD *)(v1789 + 8);
                else
                  v1790 = 0;
                v1787 = sub_1C5D52060(v1784, 202, (const llvm::APInt *)&v2008, (llvm *)v2011[0], (uint64_t)v2011[1], (uint64_t)v888, v887, v1790);
              }
              v1941 = v1788;
              v1954 = v1787;
              v1791 = *(_QWORD *)(v13 + 16);
              v1974 = (llvm *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD, llvm *, uint64_t))(**(_QWORD **)(v13 + 8)
                                                                                                  + 400))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v1791 + 40) + 40) + 272, *(_QWORD *)(v1791 + 56), v890, v891);
              v1793 = v1792;
              v1794 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v2008, v890, v891, 0, 0);
              v1796 = v1795;
              v1797 = sub_1C6367818((_QWORD *)v1791, 0x14u);
              v1800 = 0;
              v1801 = *(_QWORD *)(v1791 + 832);
              if (v1801)
                v1800 = *(_WORD *)(v1801 + 8);
              v1802 = sub_1C5D58E08(v1791, (const char *)0xC1, (const llvm::APInt *)&v2008, v1974, v1793, (uint64_t)v888, v887, v1799, (uint64_t)v1794, v1796, v1797, v1798, SHIDWORD(v1798), v1800);
              v1804 = v1803;
              v1805 = sub_1C63662D4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v2008, 0);
              v1807 = v1806;
              v1808 = sub_1C63662D4(*(_QWORD *)(v13 + 16), 4, (const llvm::APInt *)&v2008, 0);
              v1809 = v1805[5] + 16 * v1807;
              v1811 = sub_1C4815A8C(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v2008, *(llvm **)v1809, *(_QWORD *)(v1809 + 8), (uint64_t)v1802, v1804, (uint64_t)v1808, v1810, (uint64_t)v1805, v1807, SHIDWORD(v1807));
              if (((_BYTE)v890 - 3) <= 3u)
              {
                v1814 = (uint64_t)v1811;
                v1815 = v1812;
                v1816 = *(_QWORD *)(v13 + 16);
                if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v1816 + 40) + 40) + 272))
                  v1817 = qword_1C866BB20[(char)((_BYTE)v890 - 3)];
                else
                  v1817 = qword_1C866BB20[(char)((_BYTE)v890 - 3)] << 32;
                v1818 = **(_QWORD **)(v1816 + 56);
                v1819 = *(llvm::ConstantInt **)(v1818 + 1984);
                v1820 = *(_DWORD *)(v1818 + 1992);
                LODWORD(v2027[1]) = v1820 >> 8;
                if (v1820 >> 8 > 0x40)
                {
                  llvm::APInt::initSlowCase((llvm::APInt *)v2027, v1817, 0);
                }
                else
                {
                  if (v1820 <= 0xFF)
                    v1821 = 0;
                  else
                    v1821 = 0xFFFFFFFFFFFFFFFFLL >> -BYTE1(v1820);
                  v2027[0] = (void *)(v1821 & v1817);
                }
                v1822 = (uint64_t *)llvm::ConstantInt::get(v1819, (llvm::LLVMContext *)v2027, v1813);
                if (LODWORD(v2027[1]) >= 0x41 && v2027[0])
                  MEMORY[0x1CAA32F9C](v2027[0], 0x1000C8000313F17);
                v1823 = *(_QWORD *)(v13 + 16);
                v1824 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v13 + 8) + 32))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v1823 + 40) + 40) + 272, 0);
                v1826 = sub_1C5D40C8C(v1823, v1822, (llvm *)v1824, 0, 0, 0, 0, 0);
                v1828 = v1825;
                v1829 = 0;
                v1830 = *(_BYTE *)(v1826 + 92);
                v1831 = *(_QWORD *)(v13 + 16);
                v1832 = *(_QWORD *)(v1826 + 40) + 16 * v1825;
                v1833 = *(llvm **)v1832;
                v1834 = *(_QWORD *)(v1832 + 8);
                v1835 = *(_QWORD *)(v1831 + 832);
                if (v1835)
                  v1829 = *(_WORD *)(v1835 + 8);
                v1836 = sub_1C5D56C70(v1831, 56, (const llvm::APInt *)&v2008, v1833, v1834, v1826, v1825, v1827, v1814, v1815, v1829);
                v1838 = v1828 & 0xFFFFFFFF00000000 | v1837;
                v1839 = 63 - __clz(((1 << v1830) | 4) & -((1 << v1830) | 4));
                v1840 = *(_QWORD *)(v13 + 16);
                if (LOBYTE(v2011[0]) == 10)
                {
                  v1841 = llvm::PseudoSourceValueManager::getConstantPool(*(llvm::PseudoSourceValueManager **)(*(_QWORD *)(v1840 + 40) + 432));
                  v1842 = 0;
                  v2001[0] = (void *)(v1841 | 4);
                  v2001[1] = 0;
                  BYTE4(v2001[2]) = 0;
                  if (v1841)
                    v1842 = *(_DWORD *)(v1841 + 12);
                  LODWORD(v2001[2]) = v1842;
                  v2028 = 0u;
                  *(_OWORD *)v2027 = 0u;
                  v1843 = sub_1C63681B0(v1840, 10, 0, (uint64_t)&v2008, v1840 + 112, 0, (uint64_t)v1836, v1838, (__int128 *)v2001, v1839 | 0x100u, (v1839 | 0x100uLL) >> 32, 0, (uint64_t)v2027, 0);
                  v1845 = v1844;
                }
                else
                {
                  v1873 = v2011[0];
                  v1874 = v2011[1];
                  v1875 = llvm::PseudoSourceValueManager::getConstantPool(*(llvm::PseudoSourceValueManager **)(*(_QWORD *)(v1840 + 40) + 432));
                  v1877 = 0;
                  v2001[0] = (void *)(v1875 | 4);
                  v2001[1] = 0;
                  BYTE4(v2001[2]) = 0;
                  if (v1875)
                    v1877 = *(_DWORD *)(v1875 + 12);
                  LODWORD(v2001[2]) = v1877;
                  v2028 = 0u;
                  *(_OWORD *)v2027 = 0u;
                  v1878 = sub_1C636B4C8(v1840, 1, (uint64_t)&v2008, (uint64_t)v1873, (uint64_t)v1874, v1840 + 112, 0, v1876, (uint64_t)v1836, v1838, (__int128 *)v2001, 10, 0, v1839 | 0x100u, (v1839 | 0x100uLL) >> 32, 0, (uint64_t)v2027);
                  sub_1C6329230((uint64_t)v2027, (uint64_t)v1878, v1879);
                  sub_1C5CCE868(v13, v1878);
                  v1843 = (uint64_t *)*((_QWORD *)&v2034 + 1);
                  v1845 = v2035;
                  sub_1C636F550((uint64_t)v2027);
                }
                if (sub_1C6141934(v12))
                {
                  v1883 = *(_QWORD *)(v13 + 16);
                  *(_OWORD *)v2015 = *(_OWORD *)v2011;
                  LOBYTE(v2015[2]) = 1;
                  v2015[3] = 0;
                  v2027[0] = v1954;
                  v2027[1] = (void *)1;
                  *(_QWORD *)&v2028 = v1954;
                  DWORD2(v2028) = v1941;
                  v2029 = v1843;
                  v2030 = v1845;
                  v893 = sub_1C6366344(v1883, (const char *)0x65, (const llvm::APInt *)&v2008, (uint64_t *)v2015, 2, (uint64_t *)v2027, 3);
                  v892 = v1884;
                  *(_QWORD *)&v1986 = v893;
                  DWORD2(v1986) = 1;
                  goto LABEL_523;
                }
                v1881 = *(_QWORD *)(v13 + 16);
                v1882 = *(_QWORD *)(v1881 + 832);
                if (v1882)
                  LOWORD(v1882) = *(_WORD *)(v1882 + 8);
                v1760 = sub_1C5D56C70(v1881, 96, (const llvm::APInt *)&v2008, (llvm *)v2011[0], (uint64_t)v2011[1], (uint64_t)v1954, v1941, v1880, (uint64_t)v1843, v1845, v1882);
LABEL_1243:
                v893 = v1760;
                v892 = v1761;
                goto LABEL_523;
              }
            }
          }
          v892 = 0;
        }
        v893 = 0;
        goto LABEL_523;
      }
      v1617 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, llvm *, uint64_t))(**(_QWORD **)(v13 + 8) + 400))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, *(_QWORD *)(*(_QWORD *)(v13 + 16) + 56), v890, v891);
      v1953 = v1618;
      v1970 = (llvm *)v1617;
      v1619 = *(_QWORD **)(v13 + 16);
      v1620 = sub_1C6366AB4((uint64_t)v1619, 0, (const llvm::APInt *)&v2008, v890, v891, 0, 0);
      v1622 = v1621;
      v1623 = sub_1C6367818(v1619, 0x14u);
      v1626 = 0;
      v1627 = v1619[104];
      if (v1627)
        v1626 = *(_WORD *)(v1627 + 8);
      v1971 = sub_1C5D58E08((uint64_t)v1619, (const char *)0xC1, (const llvm::APInt *)&v2008, v1970, v1953, (uint64_t)v888, v887, v1625, (uint64_t)v1620, v1622, v1623, v1624, SHIDWORD(v1624), v1626);
      v1629 = v1628;
      v1630 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(v13 + 8), (uint64_t)v890, v891, *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, 1);
      v1632 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 1, (const llvm::APInt *)&v2008, v1630, v1631, 0, 0);
      v1635 = *(_QWORD *)(v13 + 16);
      v1636 = *(_QWORD *)(v1635 + 832);
      if (v1636)
        LOWORD(v1636) = *(_WORD *)(v1636 + 8);
      v1637 = sub_1C5D56C70(v1635, 177, (const llvm::APInt *)&v2008, v890, v891, (uint64_t)v888, v887, v1634, (uint64_t)v1632, v1633, v1636);
      v1639 = v1638;
      v1640 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 1, (const llvm::APInt *)&v2008, v890, v891, 0, 0);
      v1643 = *(_QWORD *)(v13 + 16);
      v1644 = *(_QWORD *)(v1643 + 832);
      if (v1644)
        LOWORD(v1644) = *(_WORD *)(v1644 + 8);
      v1646 = sub_1C5D56C70(v1643, 171, (const llvm::APInt *)&v2008, v890, v891, (uint64_t)v888, v887, v1642, (uint64_t)v1640, v1641, v1644);
      v1648 = *(_QWORD *)(v13 + 16);
      v1649 = *(_QWORD *)(v1648 + 832);
      if (v1649)
        LOWORD(v1649) = *(_WORD *)(v1649 + 8);
      v1650 = sub_1C5D56C70(v1648, 172, (const llvm::APInt *)&v2008, v890, v891, (uint64_t)v1646, v1645, v1647, (uint64_t)v1637, v1639, v1649);
      v1652 = v1651;
      v1653 = sub_1C6141934(v12);
      v1654 = *(_QWORD *)(v13 + 16);
      if (v1653)
      {
        v1775 = sub_1C4815A8C(v1654, (const llvm::APInt *)&v2008, v890, v891, (uint64_t)v1971, v1629, (uint64_t)v1650, v1652, (uint64_t)v888, v887, SHIDWORD(v887));
        v1776 = *(_QWORD *)(v13 + 16);
        *(_OWORD *)v2027 = *(_OWORD *)v2011;
        LOBYTE(v2028) = 1;
        *((_QWORD *)&v2028 + 1) = 0;
        v1777 = *(_QWORD *)(v12 + 32);
        v1778 = *(_DWORD *)(v1777 + 8);
        v2015[0] = *(void **)v1777;
        LODWORD(v2015[1]) = v1778;
        v2015[2] = v1775;
        LODWORD(v2015[3]) = v1779;
        v1757 = sub_1C6366344(v1776, (const char *)0x86, (const llvm::APInt *)&v2008, (uint64_t *)v2027, 2, (uint64_t *)v2015, 2);
        v1759 = v1780;
        v1781 = *(_QWORD *)(v13 + 16);
        *(_OWORD *)v2015 = *(_OWORD *)v2011;
        LOBYTE(v2015[2]) = 1;
        v2015[3] = 0;
        v2027[0] = v1757;
        v2027[1] = (void *)1;
        *(_QWORD *)&v2028 = v1757;
        DWORD2(v2028) = v1780;
        v2029 = v1757;
        v2030 = v1780;
        v1751 = sub_1C6366344(v1781, (const char *)0x65, (const llvm::APInt *)&v2008, (uint64_t *)v2015, 2, (uint64_t *)v2027, 3);
        v1753 = v1782;
        *(_QWORD *)&v1986 = v1751;
        DWORD2(v1986) = 1;
        *((_WORD *)v1757 + 36) = *(_WORD *)(v12 + 72) & 0x800 | 1;
        *((_WORD *)v1751 + 36) = 2049;
      }
      else
      {
        v1655 = *(_QWORD *)(v1654 + 832);
        if (v1655)
          v1656 = *(_WORD *)(v1655 + 8);
        else
          v1656 = 0;
        v1747 = sub_1C5D52060(v1654, 202, (const llvm::APInt *)&v2008, (llvm *)v2011[0], (uint64_t)v2011[1], (uint64_t)v1650, v1652, v1656);
        v1749 = *(_QWORD *)(v13 + 16);
        v1750 = *(_QWORD *)(v1749 + 832);
        if (v1750)
          LOWORD(v1750) = *(_WORD *)(v1750 + 8);
        v1751 = sub_1C5D56C70(v1749, 96, (const llvm::APInt *)&v2008, (llvm *)v2011[0], (uint64_t)v2011[1], (uint64_t)v1747, v1746, v1748, (uint64_t)v1747, v1746, v1750);
        v1753 = v1752;
        v1754 = *(_QWORD *)(v13 + 16);
        v1755 = *(_QWORD *)(v1754 + 832);
        if (v1755)
          v1756 = *(_WORD *)(v1755 + 8);
        else
          v1756 = 0;
        v1757 = sub_1C5D52060(v1754, 202, (const llvm::APInt *)&v2008, (llvm *)v2011[0], (uint64_t)v2011[1], (uint64_t)v888, v887, v1756);
        v1759 = v1758;
      }
      v1760 = sub_1C4815A8C(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v2008, (llvm *)v2011[0], (uint64_t)v2011[1], (uint64_t)v1971, v1629, (uint64_t)v1751, v1753, (uint64_t)v1757, v1759, 0);
      goto LABEL_1243;
    case 0x88:
      v144 = *(_QWORD *)(v13 + 8);
      if (*(_BYTE *)(v144 + 184290)
        || !sub_1C632C838(v144, *(unsigned __int16 *)(v12 + 24), **(_QWORD **)(v12 + 40)))
      {
        goto LABEL_564;
      }
      v145 = sub_1C5CDE958(v13, *(_QWORD *)(*(_QWORD *)(v12 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 48), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), (uint64_t)&v1988, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8));
      goto LABEL_131;
    case 0x89:
      v158 = *(_QWORD *)(v13 + 8);
      if (*(_BYTE *)(v158 + 184290)
        || !sub_1C632C838(v158, *(unsigned __int16 *)(v12 + 24), **(_QWORD **)(v12 + 40)))
      {
        goto LABEL_564;
      }
      v159 = *(uint64_t **)(v12 + 32);
      v160 = v159[5];
      v161 = v159[6];
      v162 = (uint64_t *)(*(_QWORD *)(v160 + 40) + 16 * v161);
      v145 = sub_1C5CDE958(v13, v160, v161, *v162, v162[1], **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), (uint64_t)&v1988, *v159, v159[1]);
LABEL_131:
      *(_QWORD *)&v1987 = v145;
      DWORD2(v1987) = v146;
      if (!v145)
        goto LABEL_564;
      v163 = (uint64_t)v145;
LABEL_141:
      sub_1C5CD1178(v13, v12, v163);
      goto LABEL_572;
    case 0x8A:
    case 0x8B:
    case 0xC1:
    case 0x16D:
      v32 = v16 & 0xFFFE;
      if (v32 == 138)
      {
        v33 = *(_QWORD *)(v12 + 32);
        *(_OWORD *)v2015 = *(_OWORD *)v33;
        v34 = 2;
        v35 = 3;
      }
      else
      {
        v2015[1] = 0;
        v2015[0] = 0;
        v34 = 1;
        v35 = 2;
        v33 = *(_QWORD *)(v12 + 32);
      }
      v36 = (uint64_t *)(v33 + 40 * (v32 == 138));
      v37 = *v36;
      DWORD2(v1987) = *((_DWORD *)v36 + 2);
      *(_QWORD *)&v1987 = v37;
      v38 = (uint64_t *)(v33 + 40 * v34);
      v39 = *v38;
      DWORD2(v1986) = *((_DWORD *)v38 + 2);
      *(_QWORD *)&v1986 = v39;
      v40 = (uint64_t *)(v33 + 40 * v35);
      v41 = *v40;
      DWORD2(v1985) = *((_DWORD *)v40 + 2);
      *(_QWORD *)&v1985 = v41;
      if (v16 == 365)
      {
        v42 = *(_QWORD *)(v33 + 120);
        v43 = *(unsigned int *)(v33 + 128);
        v44 = v33 + 160;
        v45 = *(_QWORD *)v44;
        v46 = *(unsigned int *)(v44 + 8);
      }
      else
      {
        v43 = 0;
        v42 = 0;
        v46 = 0;
        v45 = 0;
      }
      if (!sub_1C5DA4B34(*(_QWORD *)(v13 + 8), *(_QWORD **)(v13 + 16), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), (unsigned int *)&v1987, (uint64_t)&v1986, &v1985, v10, v42, v43, v45, v46, &v1981))
      {
        v341 = *(_QWORD *)(v12 + 40);
        v342 = *(llvm **)v341;
        v343 = *(_QWORD *)(v341 + 8);
        v345 = DWORD2(v1986);
        v344 = v1987;
        v346 = (_QWORD *)(*(_QWORD *)(v1987 + 40) + 16 * DWORD2(v1987));
        v347 = *(_QWORD *)(v13 + 16);
        v1956 = DWORD2(v1987);
        v348 = v1986;
        v349 = sub_1C6366888(v347, 1, (const llvm::APInt *)&v1988, (_BOOL8)v342, v343, *v346, v346[1]);
        v351 = v350;
        v352 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, v342, v343, 0, 0);
        v355 = sub_1C63698B8(v347, (const char *)0xC0, (const llvm::APInt *)&v1988, v342, v343, v344, v1956, v354, v348, v345, v349, v351, (uint64_t)v352, v353, v1985, SDWORD2(v1985));
        *(_QWORD *)&v1987 = v355;
        DWORD2(v1987) = v356;
        *((_WORD *)v355 + 36) = *(_WORD *)(v12 + 72);
        v108 = (void *)*((_QWORD *)&v1987 + 1);
        v357 = v1999;
        if (v1999 >= HIDWORD(v1999))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
          v357 = v1999;
        }
        v269 = (char *)v1998 + 16 * v357;
        *(_QWORD *)v269 = v355;
        goto LABEL_199;
      }
      if ((_QWORD)v1985)
      {
        v48 = *(_QWORD *)(v13 + 16);
        v49 = (const char *)*(unsigned __int16 *)(v12 + 24);
        v50 = *(llvm ***)(v12 + 40);
        if (v32 != 138)
        {
          v109 = *v50;
          v110 = (uint64_t)v50[1];
          if (v16 == 365)
          {
            v2027[0] = (void *)v1987;
            LODWORD(v2027[1]) = DWORD2(v1987);
            *(_QWORD *)&v2028 = v1986;
            DWORD2(v2028) = DWORD2(v1986);
            v2029 = (uint64_t *)v1985;
            v2030 = DWORD2(v1985);
            v2031 = (_QWORD *)v42;
            v2032 = v43;
            v2033 = v45;
            LODWORD(v2034) = v46;
            v52 = (llvm ***)sub_1C636D0C8(v48, v49, (const llvm::APInt *)&v1988, v109, v110, (uint64_t *)v2027, 5, *(unsigned __int16 *)(v12 + 72));
            *(_QWORD *)&v1987 = v52;
            DWORD2(v1987) = v111;
            if (!v1981)
              goto LABEL_85;
            goto LABEL_313;
          }
          v52 = (llvm ***)sub_1C5D58E08(v48, v49, (const llvm::APInt *)&v1988, v109, v110, v1987, *((uint64_t *)&v1987 + 1), v47, v1986, *((uint64_t *)&v1986 + 1), v1985, SDWORD2(v1985), SHIDWORD(v1985), *(_WORD *)(v12 + 72));
          *(_QWORD *)&v1987 = v52;
          DWORD2(v1987) = v282;
          if (!v1981)
            goto LABEL_85;
LABEL_361:
          v452 = sub_1C63667F0(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v1988, (uint64_t)v52, *((unint64_t *)&v1987 + 1), *v52[5], (uint64_t)v52[5][1]);
LABEL_362:
          v52 = (llvm ***)v452;
          *(_QWORD *)&v1987 = v452;
          DWORD2(v1987) = v453;
LABEL_85:
          v103 = (llvm ***)*((_QWORD *)&v1987 + 1);
          v104 = v1999;
          if (v1999 >= HIDWORD(v1999))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
            v104 = v1999;
          }
          v105 = (llvm ****)((char *)v1998 + 16 * v104);
          *v105 = v52;
          v105[1] = v103;
          v106 = (v1999 + 1);
          LODWORD(v1999) = v1999 + 1;
          if (v32 == 138)
          {
            v107 = (uint64_t *)v2015[0];
            v108 = v2015[1];
            goto LABEL_197;
          }
          goto LABEL_564;
        }
        v51 = *(unsigned __int16 *)(v12 + 58);
        v2027[0] = v2015[0];
        LODWORD(v2027[1]) = v2015[1];
        *(_QWORD *)&v2028 = v1987;
        DWORD2(v2028) = DWORD2(v1987);
        v2029 = (uint64_t *)v1986;
        v2030 = DWORD2(v1986);
        v2031 = (_QWORD *)v1985;
        v2032 = DWORD2(v1985);
        v52 = (llvm ***)sub_1C636D410(v48, v49, (const llvm::APInt *)&v1988, (uint64_t)v50, v51, (uint64_t *)v2027, 4, *(_WORD *)(v12 + 72));
        *(_QWORD *)&v1987 = v52;
        DWORD2(v1987) = v53;
        v2015[0] = v52;
        LODWORD(v2015[1]) = 1;
      }
      else
      {
        v52 = (llvm ***)v1987;
      }
      if (!v1981)
        goto LABEL_85;
      if (v16 == 365)
      {
LABEL_313:
        v452 = sub_1C6366924(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v1988, (uint64_t)v52, SDWORD2(v1987), v42, v43, v45, v46, *v52[5], (uint64_t)v52[5][1]);
        goto LABEL_362;
      }
      goto LABEL_361;
    case 0x8F:
      v571 = *(void **)(v12 + 64);
      v2001[0] = v571;
      if (v571)
      {
        llvm::MetadataTracking::track((uint64_t)v2001, (unsigned __int8 *)v571, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2001[1]) = v15;
      v572 = *(uint64_t **)(v12 + 32);
      v573 = *v572;
      v574 = v572[1];
      v575 = v572[5];
      v576 = v572[6];
      LOBYTE(v2027[0]) = 0;
      v2029 = 0;
      v2030 = 0;
      v2031 = 0;
      v2032 = 0;
      v2037 = 0;
      LODWORD(v2038) = 0;
      *(_QWORD *)&v2028 = 0;
      v2027[1] = 0;
      DWORD2(v2028) = 0;
      *(_QWORD *)&v2034 = 0;
      v2033 = 0;
      *(_QWORD *)((char *)&v2034 + 5) = 0;
      v2036[0] = 0;
      v2035 = 0;
      *(_QWORD *)((char *)v2036 + 5) = 0;
      v2040 = 1;
      __src = 0;
      sub_1C5CDF6E4(v13, (uint64_t)v2027, (const llvm::APInt *)v2001, v575, v576);
      v577 = (uint64_t *)(*(_QWORD *)(v2037 + 40) + 16 * v2038);
      v578 = (llvm *)*v577;
      v579 = v577[1];
      v580 = sub_1C63666FC(*(_QWORD *)(v13 + 16), (llvm::LLVMContext *)&__src, (const llvm::APInt *)v2001, *v577, v579, 0, 0);
      v583 = 0;
      v584 = *(_QWORD *)(v13 + 16);
      v585 = *(_QWORD *)(v584 + 832);
      if (v585)
        v583 = *(_WORD *)(v585 + 8);
      v586 = v578;
      v1960 = v579;
      v587 = sub_1C5D56C70(v584, 171, (const llvm::APInt *)v2001, v578, v579, v2037, v2038, v582, v580, v581, v583);
      v589 = (uint64_t)v588;
      v2011[0] = v587;
      v2011[1] = v588;
      v590 = *(_QWORD *)(v573 + 40) + 16 * v574;
      v592 = *(llvm **)v590;
      v591 = *(_QWORD *)(v590 + 8);
      v593 = *(_QWORD *)(v13 + 8);
      if ((v592 == 1 || (_BYTE)v592 && *(_QWORD *)(v593 + 8 * v592 + 96))
        && (*(unsigned __int8 *)(v593 + 390 * v592 + 4085) | 4) == 4
        && (v592 == 1 || *(_QWORD *)(v593 + 8 * v592 + 96))
        && (*(unsigned __int8 *)(v593 + 390 * v592 + 4084) | 4) == 4)
      {
        v594 = *(_QWORD *)(v13 + 16);
        v595 = *(_QWORD *)(v594 + 832);
        if (v595)
          v596 = *(_WORD *)(v595 + 8);
        else
          v596 = 0;
        v1546 = sub_1C5D52060(v594, 223, (const llvm::APInt *)v2001, v592, v591, v573, v574, v596);
        v1547 = *(_QWORD *)(v13 + 16);
        v1548 = *(_QWORD *)(v1547 + 832);
        if (v1548)
          v1549 = *(_WORD *)(v1548 + 8);
        else
          v1549 = 0;
        v1939 = (uint64_t)v1546;
        v1951 = v591;
        v1928 = v1545;
        v1550 = sub_1C5D52060(v1547, 222, (const llvm::APInt *)v2001, v592, v591, (uint64_t)v1546, v1545, v1549);
        v1913 = v1551;
        v1921 = (uint64_t)v1550;
        v1552 = *(_QWORD *)(v13 + 16);
        v1907 = (llvm *)(*(uint64_t (**)(_QWORD, uint64_t, _QWORD, llvm *, uint64_t))(**(_QWORD **)(v13 + 8)
                                                                                            + 400))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v1552 + 40) + 40) + 272, *(_QWORD *)(v1552 + 56), v586, v1960);
        v1554 = v1553;
        v1555 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)v2001, v586, v1960, 0, 0);
        v1557 = v1556;
        v1558 = sub_1C6367818((_QWORD *)v1552, 0x16u);
        v1561 = *(_QWORD *)(v1552 + 832);
        if (v1561)
          LOWORD(v1561) = *(_WORD *)(v1561 + 8);
        v1562 = sub_1C5D58E08(v1552, (const char *)0xC1, (const llvm::APInt *)v2001, v1907, v1554, (uint64_t)v587, v589, v1560, (uint64_t)v1555, v1557, v1558, v1559, SHIDWORD(v1559), v1561);
        v29 = sub_1C4815A8C(*(_QWORD *)(v13 + 16), (const llvm::APInt *)v2001, v592, v1951, (uint64_t)v1562, v1563, v1921, v1913, v1939, v1928, SHIDWORD(v1928));
        v31 = v1564;
        goto LABEL_1123;
      }
      LOBYTE(v2015[0]) = 0;
      v2015[4] = 0;
      v2016 = 0;
      v2017 = 0;
      v2018 = 0;
      v2022 = 0;
      LODWORD(v2023) = 0;
      memset(&v2015[1], 0, 20);
      v2020[0] = 0;
      v2019 = 0;
      *(_QWORD *)((char *)v2020 + 5) = 0;
      v2021[0] = 0;
      v2020[2] = 0;
      *(_QWORD *)((char *)v2021 + 5) = 0;
      v2025 = 1;
      v2024 = 0;
      sub_1C5CDF6E4(v13, (uint64_t)v2015, (const llvm::APInt *)v2001, v573, v574);
      v1033 = v2022;
      v1034 = v2025;
      v1035 = *(_QWORD *)(v2022 + 40) + 16 * v2023;
      v1036 = *(llvm **)v1035;
      v1037 = *(_QWORD *)(v1035 + 8);
      v1038 = *(_QWORD *)(v13 + 16);
      LODWORD(v2006) = v2025;
      if (v2025 > 0x40)
      {
        v1277 = (((unint64_t)v2025 + 63) >> 3) & 0x3FFFFFF8;
        v2005 = (void *)operator new[]();
        v1947 = v2024;
        memcpy(v2005, v2024, v1277);
        llvm::APInt::flipAllBitsSlowCase((uint64_t)&v2005);
        v1042 = v2006;
        v1041 = v2005;
        v1039 = v586;
      }
      else
      {
        v1039 = v586;
        if (v2025)
          v1040 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v2025;
        else
          v1040 = 0;
        v1947 = v2024;
        v1041 = (void *)(v1040 & ~(unint64_t)v2024);
        v2005 = v1041;
        v1042 = v2025;
      }
      LODWORD(v2009) = v1042;
      v2008 = v1041;
      LODWORD(v2006) = 0;
      v1279 = sub_1C63666FC(v1038, (llvm::LLVMContext *)&v2008, (const llvm::APInt *)v2001, (uint64_t)v1036, v1037, 0, 0);
      v1281 = v1280;
      if (v2009 >= 0x41 && v2008)
        MEMORY[0x1CAA32F9C](v2008, 0x1000C8000313F17);
      v1282 = *(_QWORD *)(v13 + 16);
      v1283 = *(_QWORD *)(v1282 + 832);
      if (v1283)
        LOWORD(v1283) = *(_WORD *)(v1283 + 8);
      v2008 = sub_1C5D56C70(v1282, 171, (const llvm::APInt *)v2001, v1036, v1037, v1033, v2023, v1278, v1279, v1281, v1283);
      v2009 = v1284;
      v1285 = v2041 - v2026;
      v1287 = sub_1C6329368((unsigned int *)v2011, v1284, v1286);
      if (v1287 < sub_1C6329368((unsigned int *)&v2008, v1288, v1289))
      {
        v1292 = *(_QWORD *)(v13 + 16);
        v1293 = *(_QWORD *)(v1292 + 832);
        if (v1293)
          v1294 = *(_WORD *)(v1293 + 8);
        else
          v1294 = 0;
        v2011[0] = sub_1C5D52060(v1292, 199, (const llvm::APInt *)v2001, v1036, v1037, (uint64_t)v2011[0], (unint64_t)v2011[1], v1294);
        LODWORD(v2011[1]) = v1290;
        v1039 = v1036;
        v1960 = v1037;
      }
      if ((int)v1285 < 1)
      {
        if ((v1285 & 0x80000000) == 0)
          goto LABEL_992;
        v1399 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), -(int)v1285, (const llvm::APInt *)v2001, v1039, v1960, 0, 0);
        v1402 = *(_QWORD *)(v13 + 16);
        v1403 = *(_QWORD *)(v1402 + 832);
        if (v1403)
          LOWORD(v1403) = *(_WORD *)(v1403 + 8);
        v1398 = sub_1C5D56C70(v1402, 175, (const llvm::APInt *)v2001, v1039, v1960, (uint64_t)v2011[0], (unint64_t)v2011[1], v1401, (uint64_t)v1399, v1400, v1403);
      }
      else
      {
        v1393 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), v1285, (const llvm::APInt *)v2001, v1039, v1960, 0, 0);
        v1396 = *(_QWORD *)(v13 + 16);
        v1397 = *(_QWORD *)(v1396 + 832);
        if (v1397)
          LOWORD(v1397) = *(_WORD *)(v1397 + 8);
        v1398 = sub_1C5D56C70(v1396, 177, (const llvm::APInt *)v2001, v1039, v1960, (uint64_t)v2011[0], (unint64_t)v2011[1], v1395, (uint64_t)v1393, v1394, v1397);
      }
      v2011[0] = v1398;
      LODWORD(v2011[1]) = v1290;
LABEL_992:
      v1404 = sub_1C6329368((unsigned int *)v2011, v1290, v1291);
      v1407 = sub_1C6329368((unsigned int *)&v2008, v1405, v1406);
      v1409 = (uint64_t *)v2011[0];
      if (v1404 > v1407)
      {
        v1410 = *(_QWORD *)(v13 + 16);
        v1411 = *(_QWORD *)(v1410 + 832);
        if (v1411)
          v1412 = *(_WORD *)(v1411 + 8);
        else
          v1412 = 0;
        v1409 = sub_1C5D52060(v1410, 201, (const llvm::APInt *)v2001, v1036, v1037, (uint64_t)v2011[0], (unint64_t)v2011[1], v1412);
        v2011[0] = v1409;
        LODWORD(v2011[1]) = v1464;
      }
      v1465 = *(_QWORD *)(v13 + 16);
      v1466 = *(_QWORD *)(v1465 + 832);
      if (v1466)
        LOWORD(v1466) = *(_WORD *)(v1466 + 8);
      v1467 = sub_1C5D56C70(v1465, 172, (const llvm::APInt *)v2001, v1036, v1037, (uint64_t)v2008, v2009, v1408, (uint64_t)v1409, (unint64_t)v2011[1], v1466);
      v29 = sub_1C5CDFB90(v13, (uint64_t)v2015, (const llvm::APInt *)v2001, (uint64_t)v1467, v1468);
      v31 = v1469;
      if (v1034 >= 0x41 && v1947)
        MEMORY[0x1CAA32F9C](v1947, 0x1000C8000313F17);
LABEL_1123:
      if (v2040 >= 0x41 && __src)
        MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
      v132 = (unsigned __int8 *)v2001[0];
      if (v2001[0])
      {
        v133 = v2001;
LABEL_105:
        llvm::MetadataTracking::untrack((uint64_t)v133, v132);
      }
      goto LABEL_344;
    case 0x92:
      v253 = *(unsigned __int16 *)(v12 + 56);
      v254 = *(unsigned __int8 **)(v12 + 64);
      v1994 = v254;
      if (v254)
      {
        llvm::MetadataTracking::track((uint64_t)&v1994, v254, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      v1975 = v13;
      v1995 = v15;
      v256 = *(unsigned int **)(v12 + 32);
      v255 = *(_QWORD *)(v12 + 40);
      v258 = *(llvm **)v255;
      v257 = *(_QWORD *)(v255 + 8);
      v1992 = v258;
      v1993 = v257;
      v259 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v256 + 40) + 16 * v256[2]);
      v260 = *v259;
      v261 = v259[1];
      if ((_BYTE)v258)
      {
        LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v1992);
        v263 = 0;
        v264 = 0;
      }
      else
      {
        EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v257 + 24), 0, v5);
        v263 = EVT & 0xFFFFFFFFFFFFFF00;
      }
      v1990 = v263 | EVT;
      v1991 = v264;
      if (!(_DWORD)v253)
        goto LABEL_360;
      v294 = 0;
      v295 = 0;
      v296 = 0;
      v297 = 0;
      v298 = 0;
      v299 = 0;
      v300 = *(uint64_t **)(v12 + 32);
      v301 = 1;
      v302 = 1;
      do
      {
        v303 = v300[v294];
        v304 = *(unsigned __int16 *)(v303 + 24);
        if (v304 != 51)
        {
          if (v304 != 12 && v304 != 36)
          {
            v306 = v304 == 11 || v304 == 35;
            v302 &= v306;
          }
          v307 = v300[v294 + 1];
          v301 &= v294 == 0;
          if (v297)
          {
            v309 = v303 != v297 || v307 != (_DWORD)v296;
            if (v299)
            {
              v311 = v303 != v299 || v307 != (_DWORD)v298;
              v312 = v311 | v295;
              if (v309)
                v295 = v312;
            }
            else
            {
              if (v309)
                v299 = v300[v294];
              else
                v299 = 0;
              if (v309)
                v298 = LODWORD(v300[v294 + 1]);
            }
          }
          else
          {
            v297 = v300[v294];
            v296 = LODWORD(v300[v294 + 1]);
          }
        }
        v294 += 5;
      }
      while (5 * v253 != v294);
      if (!v297)
      {
LABEL_360:
        v321 = sub_1C61312D0(*(_QWORD *)(v13 + 16), v1992, v1993);
        v323 = v543 & 0xFFFFFFFF00000000;
        v324 = v543;
        goto LABEL_268;
      }
      if ((v301 & 1) != 0)
      {
        v313 = *(_QWORD *)(v13 + 16);
        v314 = *v300;
        v315 = v300[1];
        v316 = *(_QWORD *)(v313 + 832);
        if (v316)
          v317 = *(_WORD *)(v316 + 8);
        else
          v317 = 0;
        v321 = sub_1C5D52060(v313, 155, (const llvm::APInt *)&v1994, v1992, v1993, v314, v315, v317);
        v323 = v322 & 0xFFFFFFFF00000000;
        v324 = v322;
        goto LABEL_268;
      }
      if ((v302 & 1) != 0)
      {
        v1017 = 0;
        LODWORD(v1018) = 0;
        v2027[0] = &v2028;
        v2027[1] = (void *)0x1000000000;
        v1019 = 40 * v253;
        while (1)
        {
          v1020 = *(_QWORD *)(*(_QWORD *)(v12 + 32) + v1017);
          v1021 = *(unsigned __int16 *)(v1020 + 24);
          if (v1021 <= 0x22)
            break;
          if (v1021 == 35)
            goto LABEL_618;
          if (v1021 != 36)
          {
LABEL_624:
            llvm::EVT::getTypeForEVT((llvm::EVT *)&v1990, *(llvm::LLVMContext **)(*(_QWORD *)(v13 + 16) + 56));
            v1026 = llvm::UndefValue::get(v1027, v1028);
LABEL_625:
            v1022 = v1026;
            LODWORD(v1018) = v2027[1];
            goto LABEL_626;
          }
LABEL_617:
          v1022 = *(void **)(v1020 + 80);
LABEL_626:
          if (v1018 >= HIDWORD(v2027[1]))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v2027, (uint64_t)&v2028, v1018 + 1, 8);
            LODWORD(v1018) = v2027[1];
          }
          *((_QWORD *)v2027[0] + v1018) = v1022;
          v1018 = ++LODWORD(v2027[1]);
          v1017 += 40;
          if (v1019 == v1017)
          {
            v1261 = (llvm::FixedVectorType ***)v2027[0];
            Impl = llvm::ConstantVector::getImpl((llvm::FixedVectorType ***)v2027[0], (llvm::Type *)v1018);
            v1263 = (uint64_t *)Impl;
            if (!Impl)
            {
              llvm::FixedVectorType::get(**v1261, (llvm::Type *)v1018);
              v1263 = (uint64_t *)sub_1C537B3A4(**v1264 + 1288, (uint64_t)v1264, v1261, v1018);
            }
            v1265 = *(_QWORD *)(v13 + 16);
            v1266 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v13 + 8) + 32))(*(_QWORD *)(v13 + 8), *(_QWORD *)(**(_QWORD **)(v1265 + 40) + 40) + 272, 0);
            v1267 = sub_1C5D40C8C(v1265, v1263, (llvm *)v1266, 0, 0, 0, 0, 0);
            v1269 = v1268;
            v1270 = *(unsigned __int8 *)(v1267 + 92);
            v1271 = *(_QWORD *)(v13 + 16);
            v1272 = v1992;
            v1273 = v1993;
            v1274 = llvm::PseudoSourceValueManager::getConstantPool(*(llvm::PseudoSourceValueManager **)(*(_QWORD *)(v1271 + 40) + 432));
            v1275 = 0;
            v2001[0] = (void *)(v1274 | 4);
            v2001[1] = 0;
            BYTE4(v2001[2]) = 0;
            if (v1274)
              v1275 = *(_DWORD *)(v1274 + 12);
            LODWORD(v2001[2]) = v1275;
            memset(v2015, 0, 32);
            v321 = sub_1C63681B0(v1271, (uint64_t)v1272, v1273, (uint64_t)&v1994, v1271 + 112, 0, v1267, v1269, (__int128 *)v2001, (unsigned __int16)v1270 | 0x100u, (v1270 | 0x100uLL) >> 32, 0, (uint64_t)v2015, 0);
            v324 = v1276;
            v323 = v1276 & 0xFFFFFFFF00000000;
            if (v2027[0] != &v2028)
              free(v2027[0]);
            goto LABEL_268;
          }
        }
        if (v1021 != 11)
        {
          if (v1021 != 12)
            goto LABEL_624;
          goto LABEL_617;
        }
LABEL_618:
        if (v260 != v1990 || !(_BYTE)v260 && v261 != v1991)
        {
          v1023 = *(_QWORD *)(v1020 + 80);
          llvm::EVT::getTypeForEVT((llvm::EVT *)&v1990, *(llvm::LLVMContext **)(*(_QWORD *)(v13 + 16) + 56));
          v1025 = (uint64_t *)(v1023 + 24);
          if (*(_DWORD *)(v1023 + 32) >= 0x41u)
            v1025 = (uint64_t *)*v1025;
          v1026 = llvm::ConstantInt::get(v1024, *v1025, 0);
          goto LABEL_625;
        }
        goto LABEL_617;
      }
      v1180 = 0;
      v2001[0] = &v2001[2];
      v2001[1] = (void *)0x1000000000;
      v2004 = 0;
      v2003 = 0;
      v2002 = &v2003;
      do
      {
        v1181 = (uint64_t *)(*(_QWORD *)(v12 + 32) + v1180);
        if (*(_WORD *)(*v1181 + 24) != 51)
          sub_1C5CC0834((uint64_t)v2001, v1181);
        v1180 += 40;
      }
      while (40 * v253 != v1180);
      if (v2004)
        v1182 = v2004;
      else
        v1182 = LODWORD(v2001[1]);
      if (((*(uint64_t (**)(_QWORD, llvm *, uint64_t, uint64_t))(**(_QWORD **)(v13 + 8) + 136))(*(_QWORD *)(v13 + 8), v1992, v1993, v1182) & 1) == 0)goto LABEL_1182;
      if ((v295 & 1) == 0)
      {
        v2027[0] = &v2028;
        v2027[1] = (void *)0x800000000;
        sub_1C4893E04((char *)v2027, v253, -1);
        v1536 = (_DWORD *)(*(_QWORD *)(v12 + 32) + 8);
        v1537 = v2027[0];
        v1538 = v253;
        do
        {
          v1539 = *((_QWORD *)v1536 - 1);
          if (*(_WORD *)(v1539 + 24) != 51)
          {
            if (*v1536 == (_DWORD)v296 && v1539 == v297)
              v1541 = 0;
            else
              v1541 = v253;
            *v1537 = v1541;
          }
          ++v1537;
          v1536 += 10;
          --v1538;
        }
        while (v1538);
        if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 8) + 488))(*(_QWORD *)(v13 + 8)) & 1) != 0)
        {
          v1542 = *(_QWORD *)(v13 + 16);
          v1543 = *(_QWORD *)(v1542 + 832);
          if (v1543)
            v1544 = *(_WORD *)(v1543 + 8);
          else
            v1544 = 0;
          v1738 = sub_1C5D52060(v1542, 155, (const llvm::APInt *)&v1994, v1992, v1993, v297, v296, v1544);
          v1740 = v1739;
          v1741 = *(_QWORD *)(v13 + 16);
          if (v299)
          {
            v1744 = *(_QWORD *)(v1741 + 832);
            if (v1744)
              v1745 = *(_WORD *)(v1744 + 8);
            else
              v1745 = 0;
            v1742 = sub_1C5D52060(v1741, 155, (const llvm::APInt *)&v1994, v1992, v1993, v299, v298, v1745);
          }
          else
          {
            v1742 = sub_1C61312D0(v1741, v1992, v1993);
          }
          v321 = sub_1C5D41DE4(*(_QWORD *)(v13 + 16), v1992, v1993, (uint64_t)&v1994, (uint64_t)v1738, v1740, (uint64_t)v1742, v1743, v2027[0], LODWORD(v2027[1]));
          v1766 = v1765;
          v323 = v1765 & 0xFFFFFFFF00000000;
          if (v2027[0] != &v2028)
            free(v2027[0]);
          v324 = v1766;
          goto LABEL_1183;
        }
        if (v2027[0] != &v2028)
          free(v2027[0]);
        goto LABEL_1182;
      }
      v1900 = *(_QWORD *)(v13 + 16);
      v1893 = *(_QWORD *)(v13 + 8);
      v1184 = *(unsigned __int16 *)(v12 + 56);
      v1185 = *(unsigned __int8 **)(v12 + 64);
      v1996 = v1185;
      if (v1185)
        llvm::MetadataTracking::track((uint64_t)&v1996, v1185, 2);
      v1887 = 0;
      v1888 = 0;
      v1997 = *(_DWORD *)(v12 + 60);
      v1186 = *(_QWORD *)(v12 + 40);
      v1910 = *(_QWORD *)(v1186 + 8);
      v1918 = *(llvm **)v1186;
      v1936 = 1;
      do
      {
        v2027[0] = &v2028;
        v2027[1] = (void *)0x1000000000;
        v2015[0] = &v2015[2];
        v2015[1] = (void *)0x1000000000;
        if (!(_DWORD)v1184)
        {
          LODWORD(v1188) = DWORD2(v2028);
          v1187 = v2028;
          v1189 = *(_QWORD *)v1889 & 0xFFFFFFFF00000000;
          goto LABEL_826;
        }
        v1190 = 0;
        for (i = 0; i != v1184; ++i)
        {
          v1192 = *(_QWORD *)(v12 + 32) + v1190;
          if (*(_WORD *)(*(_QWORD *)v1192 + 24) != 51)
          {
            if ((v1936 & 1) != 0)
            {
              v1193 = 0;
              v1194 = 0;
            }
            else
            {
              v1195 = *(_QWORD *)(v1900 + 832);
              if (v1195)
                v1196 = *(_WORD *)(v1195 + 8);
              else
                v1196 = 0;
              v1193 = sub_1C5D52060(v1900, 155, (const llvm::APInt *)&v1996, v1918, v1910, *(_QWORD *)v1192, *(_QWORD *)(v1192 + 8), v1196);
              v1194 = v1197;
            }
            v2008 = v2010;
            v2009 = 0x1000000000;
            sub_1C4893E04((char *)&v2008, 1uLL, i);
            v2011[0] = v1193;
            LODWORD(v2011[1]) = v1194;
            v2012 = v2014;
            v2013 = 0x1000000000;
            if ((_DWORD)v2009)
              sub_1C614C900((uint64_t)&v2012, (uint64_t)&v2008);
            sub_1C632C94C((uint64_t)v2027, (unint64_t)v2011);
            if (v2012 != v2014)
              free(v2012);
            if (v2008 != v2010)
              free(v2008);
          }
          v1190 += 40;
        }
        v1198 = v2027[1];
        if (LODWORD(v2027[1]) < 3)
        {
LABEL_824:
          v1187 = *(_QWORD *)v2027[0];
          v1188 = *((_QWORD *)v2027[0] + 1);
          v1189 = *(_QWORD *)v1889 & 0xFFFFFFFF00000000;
          if (v1198 == 2)
          {
            v1244 = (_QWORD *)*((_QWORD *)v2027[0] + 12);
            *(_QWORD *)v1889 = v1189 | *((unsigned int *)v2027[0] + 26);
            goto LABEL_829;
          }
LABEL_826:
          if ((v1936 & 1) != 0)
          {
            *(_QWORD *)v1889 = v1189;
            v1244 = 0;
          }
          else
          {
            v1245 = v1189;
            v1244 = sub_1C61312D0(v1900, v1918, v1910);
            *(_QWORD *)v1889 = v1246 | v1245;
          }
LABEL_829:
          v2011[0] = &v2012;
          v2011[1] = (void *)0x1000000000;
          sub_1C4893E04((char *)v2011, v1184, -1);
          v1247 = v2027[0];
          v1248 = *((unsigned int *)v2027[0] + 6);
          if ((_DWORD)v1248)
          {
            v1249 = 0;
            v1250 = *((_QWORD *)v2027[0] + 2);
            v1251 = v2011[0];
            do
            {
              v1251[*(int *)(v1250 + 4 * v1249)] = v1249;
              ++v1249;
            }
            while (v1248 != v1249);
          }
          v1252 = *((unsigned int *)v1247 + 30);
          if ((_DWORD)v1252)
          {
            v1253 = (int *)v1247[14];
            v1254 = v2011[0];
            v1255 = v1184;
            do
            {
              v1256 = *v1253++;
              v1254[v1256] = v1255++;
              --v1252;
            }
            while (v1252);
          }
          if ((v1936 & 1) != 0)
          {
            if (!(*(unsigned int (**)(uint64_t, void *, _QWORD, llvm *, uint64_t))(*(_QWORD *)v1893 + 488))(v1893, v2011[0], LODWORD(v2011[1]), v1918, v1910))
            {
              v1257 = 1;
              goto LABEL_840;
            }
          }
          else
          {
            v1258 = sub_1C5D41DE4(v1900, v1918, v1910, (uint64_t)&v1996, v1187, v1188, (uint64_t)v1244, v1889[0], v2011[0], LODWORD(v2011[1]));
            v1887 = v1259;
            v1888 = v1258;
          }
          v1257 = 0;
LABEL_840:
          if (v2011[0] != &v2012)
            free(v2011[0]);
          goto LABEL_847;
        }
        while (1)
        {
          if (LODWORD(v2015[1]))
          {
            v1199 = (char *)v2015[0];
            v1200 = 96 * LODWORD(v2015[1]);
            do
            {
              v1201 = *(char **)&v1199[v1200 - 80];
              if (&v1199[v1200 - 64] != v1201)
                free(v1201);
              v1200 -= 96;
            }
            while (v1200);
            v1198 = v2027[1];
          }
          LODWORD(v2015[1]) = 0;
          *(_QWORD *)v1903 = v1198 & 0xFFFFFFFE;
          if ((v1198 & 0xFFFFFFFE) != 0)
            break;
LABEL_775:
          v1217 = (__int128 *)v2027[0];
          if ((v1198 & 1) != 0)
          {
            sub_1C632C9BC((uint64_t)v2015, (unint64_t)v2027[0] + 96 * v1198 - 96);
            v1217 = (__int128 *)v2027[0];
          }
          if (v1217 == &v2028)
          {
            v1198 = v2015[1];
            v1218 = HIDWORD(v2027[1]);
LABEL_781:
            if (v1218 < v1198)
              sub_1C632CA2C((uint64_t)v2027, v1198);
            v1198 = v2027[1];
            if (HIDWORD(v2015[1]) < LODWORD(v2027[1]))
            {
              sub_1C632CA2C((uint64_t)v2015, LODWORD(v2027[1]));
              v1198 = v2027[1];
            }
            v1220 = v2015[1];
            if (v1198 >= LODWORD(v2015[1]))
              v1221 = LODWORD(v2015[1]);
            else
              v1221 = v1198;
            if ((_DWORD)v1221)
            {
              v1222 = 0;
              do
              {
                v1223 = (char *)v2027[0] + v1222;
                v1224 = (char *)v2015[0] + v1222;
                *(_OWORD *)v2011 = *(_OWORD *)((char *)v2027[0] + v1222);
                v1225 = *(_DWORD *)((char *)v2015[0] + v1222 + 8);
                *(_QWORD *)v1223 = *(_QWORD *)((char *)v2015[0] + v1222);
                *((_DWORD *)v1223 + 2) = v1225;
                *(void **)v1224 = v2011[0];
                *((_DWORD *)v1224 + 2) = v2011[1];
                v1226 = (uint64_t)(v1223 + 16);
                v2011[0] = &v2012;
                v2011[1] = (void *)0x1000000000;
                if (*((_DWORD *)v1223 + 6))
                  sub_1C614C900((uint64_t)v2011, v1226);
                sub_1C614C900(v1226, (uint64_t)(v1224 + 16));
                sub_1C614C900((uint64_t)(v1224 + 16), (uint64_t)v2011);
                if (v2011[0] != &v2012)
                  free(v2011[0]);
                v1222 += 96;
              }
              while (96 * v1221 != v1222);
              v1198 = v2027[1];
              v1220 = v2015[1];
            }
            v1227 = v1198 - v1220;
            if (v1198 <= v1220)
            {
              if (v1220 > v1198)
              {
                if ((_DWORD)v1221 == v1220)
                {
                  LODWORD(v2027[1]) = v1220;
                }
                else
                {
                  v1904 = v1220 - v1198;
                  v1236 = 0;
                  v1237 = (char *)v2015[0] + 96 * v1220;
                  v1238 = (char *)v2027[0] + 96 * v1198;
                  v1239 = (char *)v2015[0] + 96 * v1221;
                  do
                  {
                    v1240 = &v1239[v1236];
                    v1241 = &v1238[v1236];
                    *(_OWORD *)v1241 = *(_OWORD *)&v1239[v1236];
                    *((_QWORD *)v1241 + 3) = 0x1000000000;
                    *((_QWORD *)v1241 + 2) = &v1238[v1236 + 32];
                    if (*(_DWORD *)&v1239[v1236 + 24])
                      sub_1C614CA14((uint64_t)&v1238[v1236 + 16], (uint64_t)(v1240 + 16));
                    v1236 += 96;
                  }
                  while (v1240 + 96 != v1237);
                  v1220 = v1904 + LODWORD(v2027[1]);
                  LODWORD(v2027[1]) += v1904;
                  if (LODWORD(v2015[1]) != (_DWORD)v1221)
                  {
                    v1242 = (void **)((char *)v2015[0] + 96 * LODWORD(v2015[1]) - 80);
                    v1243 = 96 * v1221 - 96 * LODWORD(v2015[1]);
                    do
                    {
                      if (v1242 + 2 != *v1242)
                        free(*v1242);
                      v1242 -= 12;
                      v1243 += 96;
                    }
                    while (v1243);
                    v1220 = v2027[1];
                  }
                }
                LODWORD(v2015[1]) = v1221;
                v1198 = v1220;
              }
            }
            else
            {
              if ((_DWORD)v1221 == v1198)
              {
                LODWORD(v2015[1]) = v1198;
              }
              else
              {
                v1228 = 0;
                v1229 = (char *)v2027[0] + 96 * v1198;
                v1230 = (char *)v2015[0] + 96 * v1220;
                v1231 = (char *)v2027[0] + 96 * v1221;
                do
                {
                  v1232 = &v1231[v1228];
                  v1233 = &v1230[v1228];
                  *(_OWORD *)v1233 = *(_OWORD *)&v1231[v1228];
                  *((_QWORD *)v1233 + 3) = 0x1000000000;
                  *((_QWORD *)v1233 + 2) = &v1230[v1228 + 32];
                  if (*(_DWORD *)&v1231[v1228 + 24])
                    sub_1C614CA14((uint64_t)&v1230[v1228 + 16], (uint64_t)(v1232 + 16));
                  v1228 += 96;
                }
                while (v1232 + 96 != v1229);
                LODWORD(v2015[1]) += v1227;
                if (LODWORD(v2027[1]) != (_DWORD)v1221)
                {
                  v1234 = (void **)((char *)v2027[0] + 96 * LODWORD(v2027[1]) - 80);
                  v1235 = 96 * v1221 - 96 * LODWORD(v2027[1]);
                  do
                  {
                    if (v1234 + 2 != *v1234)
                      free(*v1234);
                    v1234 -= 12;
                    v1235 += 96;
                  }
                  while (v1235);
                }
              }
              LODWORD(v2027[1]) = v1221;
              v1198 = v1221;
            }
            goto LABEL_823;
          }
          v1198 = v2015[1];
          v1218 = HIDWORD(v2027[1]);
          if (v2015[0] == &v2015[2])
            goto LABEL_781;
          v2027[0] = v2015[0];
          v2015[0] = v1217;
          v1219 = v2027[1];
          v2027[1] = v2015[1];
          v2015[1] = (void *)__PAIR64__(v1218, v1219);
LABEL_823:
          if (v1198 <= 2)
            goto LABEL_824;
        }
        v1202 = 0;
        while (1)
        {
          v2008 = v2010;
          v2009 = 0x1000000000;
          sub_1C4893E04((char *)&v2008, v1184, -1);
          v2005 = v2007;
          v2006 = 0x1000000000;
          v1203 = (unsigned int *)v2027[0];
          v1204 = *((unsigned int *)v2027[0] + 24 * v1202 + 6);
          v1205 = v1202 | 1;
          v1206 = *((unsigned int *)v2027[0] + 24 * (v1202 | 1) + 6) + v1204;
          if (v1206 >= 0x11)
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v2005, (uint64_t)v2007, v1206, 4);
            v1203 = (unsigned int *)v2027[0];
            v1204 = *((unsigned int *)v2027[0] + 24 * v1202 + 6);
          }
          if (v1204)
          {
            for (j = 0; j != v1204; ++j)
            {
              *((_DWORD *)v2008 + j) = j;
              v1208 = *(_DWORD *)(*((_QWORD *)v2027[0] + 12 * v1202 + 2) + 4 * j);
              v1209 = v2006;
              if (v2006 >= (unint64_t)HIDWORD(v2006))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v2005, (uint64_t)v2007, v2006 + 1, 4);
                v1209 = v2006;
              }
              *((_DWORD *)v2005 + v1209) = v1208;
              LODWORD(v2006) = v2006 + 1;
            }
            v1203 = (unsigned int *)v2027[0];
          }
          v1210 = v1203[24 * v1205 + 6];
          if ((_DWORD)v1210)
          {
            v1213 = 0;
            v1214 = 4 * v1204;
            do
            {
              *(_DWORD *)((char *)v2008 + 4 * v1213 + v1214) = v1184 + v1213;
              v1215 = *(_DWORD *)(*((_QWORD *)v2027[0] + 12 * v1205 + 2) + 4 * v1213);
              v1216 = v2006;
              if (v2006 >= (unint64_t)HIDWORD(v2006))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v2005, (uint64_t)v2007, v2006 + 1, 4);
                v1216 = v2006;
              }
              *((_DWORD *)v2005 + v1216) = v1215;
              LODWORD(v2006) = v2006 + 1;
              ++v1213;
            }
            while (v1210 != v1213);
          }
          if ((v1936 & 1) == 0)
          {
            v1211 = sub_1C5D41DE4(v1900, v1918, v1910, (uint64_t)&v1996, *((_QWORD *)v2027[0] + 12 * v1202), *((_QWORD *)v2027[0] + 12 * v1202 + 1), *((_QWORD *)v2027[0] + 12 * v1205), *((_QWORD *)v2027[0] + 12 * v1205 + 1), v2008, v2009);
            goto LABEL_765;
          }
          if (!(*(unsigned int (**)(uint64_t, void *, _QWORD, llvm *, uint64_t))(*(_QWORD *)v1893 + 488))(v1893, v2008, v2009, v1918, v1910))break;
          v1211 = 0;
          v1212 = 0;
LABEL_765:
          v2011[0] = v1211;
          LODWORD(v2011[1]) = v1212;
          v2012 = v2014;
          v2013 = 0x1000000000;
          if ((_DWORD)v2006)
            sub_1C614C900((uint64_t)&v2012, (uint64_t)&v2005);
          sub_1C632C94C((uint64_t)v2015, (unint64_t)v2011);
          if (v2012 != v2014)
            free(v2012);
          if (v2005 != v2007)
            free(v2005);
          if (v2008 != v2010)
            free(v2008);
          v1202 += 2;
          if (v1202 >= *(_QWORD *)v1903)
          {
            v1198 = v2027[1];
            goto LABEL_775;
          }
        }
        if (v2005 != v2007)
          free(v2005);
        if (v2008 != v2010)
          free(v2008);
        v1257 = 1;
LABEL_847:
        sub_1C5879FAC((char **)v2015);
        sub_1C5879FAC((char **)v2027);
        v1260 = v1936 & (v1257 == 0);
        v1936 = 0;
      }
      while ((v1260 & 1) != 0);
      if (v1996)
        llvm::MetadataTracking::untrack((uint64_t)&v1996, v1996);
      if (!v1257)
      {
        v323 = 0;
        v324 = v1887;
        v321 = v1888;
        goto LABEL_1183;
      }
LABEL_1182:
      v321 = sub_1C5CDF1F8(v1975, v12, v1183);
      v323 = v1657 & 0xFFFFFFFF00000000;
      v324 = v1657;
LABEL_1183:
      sub_1C47655E8((uint64_t)&v2002, v2003);
      if (v2001[0] != &v2001[2])
        free(v2001[0]);
LABEL_268:
      if (v1994)
        llvm::MetadataTracking::untrack((uint64_t)&v1994, v1994);
      v108 = (void *)(v323 | v324);
      v325 = v1999;
      v13 = v1975;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v325 = v1999;
      }
      v269 = (char *)v1998 + 16 * v325;
      *(_QWORD *)v269 = v321;
LABEL_199:
      *((_QWORD *)v269 + 1) = v108;
LABEL_563:
      LODWORD(v1999) = v1999 + 1;
LABEL_564:
      v972 = v1999;
      if (*(_BYTE *)(*(_QWORD *)(v13 + 8) + 184290))
        v973 = 0;
      else
        v973 = (_DWORD)v1999 == 0;
      if (v973)
      {
        if (!sub_1C6141934(v12))
          goto LABEL_591;
        v975 = *(unsigned __int16 *)(v12 + 24);
        if (v975 == 102)
        {
          v976 = *(_QWORD *)(v12 + 40);
          if (!*(_QWORD *)v976)
            goto LABEL_591;
          v977 = *(_QWORD *)(v13 + 8);
          if (*(_BYTE *)(v977 + 390 * *(_QWORD *)v976 + 3959))
          {
            if (!*(_BYTE *)(v977 + 390 * *(_QWORD *)v976 + 3958))
            {
              v978 = *(_WORD *)(v12 + 72);
              v979 = sub_1C5D52060(*(_QWORD *)(v13 + 16), 222, (const llvm::APInt *)&v1988, *(llvm **)v976, *(_QWORD *)(v976 + 8), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 80), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 88), v978);
              v980 = *(_QWORD *)(v13 + 16);
              v981 = *(unsigned __int16 *)(v12 + 58);
              v983 = *(_QWORD *)(v12 + 32);
              v982 = *(_QWORD *)(v12 + 40);
              v984 = *(void **)v983;
              LODWORD(v2027[1]) = *(_DWORD *)(v983 + 8);
              v2027[0] = v984;
              *(_QWORD *)&v2028 = *(_QWORD *)(v983 + 40);
              DWORD2(v2028) = *(_DWORD *)(v983 + 48);
              v2029 = v979;
              v2030 = v985;
              v986 = sub_1C636D410(v980, (const char *)0x65, (const llvm::APInt *)&v1988, v982, v981, (uint64_t *)v2027, 3, v978);
              v988 = v987;
              v989 = v1999;
              if (v1999 >= HIDWORD(v1999))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
                v989 = v1999;
              }
              v990 = (uint64_t **)((char *)v1998 + 16 * v989);
              *v990 = v986;
              v990[1] = v988;
              v991 = (v1999 + 1);
              LODWORD(v1999) = v991;
              if (v991 >= HIDWORD(v1999))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v991 + 1, 16);
                LODWORD(v991) = v1999;
              }
              v992 = (uint64_t **)((char *)v1998 + 16 * v991);
              *v992 = v986;
              v992[1] = (uint64_t *)1;
              v972 = v1999 + 1;
              LODWORD(v1999) = v1999 + 1;
              goto LABEL_568;
            }
LABEL_591:
            v972 = v1999;
            goto LABEL_568;
          }
        }
        else
        {
          if ((v975 - 126) <= 9 && ((1 << (v975 - 126)) & 0x30F) != 0)
          {
            v993 = *(_QWORD *)(v13 + 8);
            v994 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 32) + 40) + 40)
                            + 16 * *(unsigned int *)(*(_QWORD *)(v12 + 32) + 48));
          }
          else
          {
            v993 = *(_QWORD *)(v13 + 8);
            v994 = *(_QWORD **)(v12 + 40);
          }
          if (sub_1C632C838(v993, v975, *v994))
            goto LABEL_591;
        }
LABEL_570:
        v17 = 1;
        goto LABEL_572;
      }
LABEL_568:
      if (v972)
      {
        sub_1C5CD122C(v13, v12, (uint64_t *)v1998);
        goto LABEL_570;
      }
      v17 = 0;
LABEL_572:
      if (v1988)
        llvm::MetadataTracking::untrack((uint64_t)&v1988, v1988);
      if (v1998 != v2000)
        free(v1998);
      return v17;
    case 0x93:
      v870 = *(uint64_t **)(v12 + 32);
      v871 = *v870;
      v872 = v870[1];
      v874 = v870[5];
      v873 = v870[6];
      v875 = v870[10];
      v876 = v870[11];
      v877 = *(unsigned __int16 *)(v875 + 24);
      v1977 = v13;
      v1965 = v872;
      if (v877 != 11 && v877 != 35)
      {
        v1937 = v873;
        v1351 = v872;
LABEL_1005:
        v1420 = v1351;
        v1421 = *(_QWORD *)(v871 + 40) + 16 * v1351;
        v1422 = *(void **)v1421;
        v1423 = *(llvm::EVT ***)(v1421 + 8);
        v2001[0] = v1422;
        v2001[1] = v1423;
        v1919 = v876;
        v1927 = v874;
        if ((_BYTE)v1422)
        {
          LOBYTE(v1424) = sub_1C47F37A0((unsigned __int8 *)v2001);
          v1426 = 0;
          v1911 = 0;
          v1422 = v2001[0];
          v1423 = (llvm::EVT **)v2001[1];
        }
        else
        {
          v1424 = llvm::EVT::getEVT(v1423[3], 0, v5);
          v1911 = v1425;
          v1426 = v1424 & 0xFFFFFFFFFFFFFF00;
        }
        v1427 = v1426 | v1424;
        v1428 = sub_1C5D44240(*(_QWORD *)(v13 + 16), (uint64_t)v1422, (uint64_t)v1423, 1u);
        v1949 = v1429;
        v1430 = *(_QWORD *)(v13 + 16);
        v1905 = *(_DWORD *)(v1428 + 76);
        FixedStack = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(v1430 + 40) + 432), v1905);
        if (FixedStack)
          v1432 = *((_DWORD *)FixedStack + 3);
        else
          v1432 = 0;
        v2028 = 0u;
        *(_OWORD *)v2027 = 0u;
        v2015[0] = (void *)((unint64_t)FixedStack | 4);
        v2015[1] = 0;
        LODWORD(v2015[2]) = v1432;
        BYTE4(v2015[2]) = 0;
        sub_1C6365BD8(v1430, *(_QWORD *)(*(_QWORD *)(v871 + 40) + 16 * v1420), *(_QWORD *)(*(_QWORD *)(v871 + 40) + 16 * v1420 + 8));
        v1434 = sub_1C636B75C(v1430, v1430 + 112, 0, (uint64_t)&v1988, v871, v1965, v1428, v1949, (uint64_t)v2015, v1433, 0, 0, (uint64_t)v2027);
        v1436 = v1435;
        v1437 = sub_1C5D9FE70(*(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16), v1428, v1949, (llvm *)v2001[0], (uint64_t)v2001[1], v875, v1919);
        v1439 = v1438;
        v1440 = *(_QWORD *)(v13 + 16);
        v1441 = *(_DWORD *)(*(_QWORD *)(**(_QWORD **)(v1440 + 40) + 40) + 276);
        v2015[1] = 0;
        v2015[0] = 0;
        v2028 = 0u;
        *(_OWORD *)v2027 = 0u;
        LODWORD(v2015[2]) = v1441;
        BYTE4(v2015[2]) = 0;
        sub_1C6365BD8(v1440, v1427, v1911);
        v1443 = sub_1C636B9CC(v1440, (uint64_t)v1434, v1436, (uint64_t)&v1988, v1927, v1937, (uint64_t)v1437, v1439, (uint64_t)v2015, v1427, v1911, v1442, 0, 0, (uint64_t)v2027);
        v1445 = v1444;
        v1446 = *(_QWORD *)(v13 + 16);
        v1447 = v2001[0];
        v1448 = v2001[1];
        v1449 = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(v1446 + 40) + 432), v1905);
        v2015[0] = (void *)((unint64_t)v1449 | 4);
        v2015[1] = 0;
        BYTE4(v2015[2]) = 0;
        if (v1449)
          v1450 = *((_DWORD *)v1449 + 3);
        else
          v1450 = 0;
        LODWORD(v2015[2]) = v1450;
        v2028 = 0u;
        *(_OWORD *)v2027 = 0u;
        v29 = sub_1C63681B0(v1446, (uint64_t)v1447, (uint64_t)v1448, (uint64_t)&v1988, (uint64_t)v1443, v1445, v1428, v1949, (__int128 *)v2015, 0, 0, 0, (uint64_t)v2027, 0);
        v31 = v1451;
        goto LABEL_1102;
      }
      v878 = v872;
      v879 = *(_QWORD *)(v871 + 40) + 16 * v872;
      v881 = *(void **)v879;
      v880 = *(llvm::EVT ***)(v879 + 8);
      v2027[0] = v881;
      v2027[1] = v880;
      if ((_BYTE)v881)
      {
        LOBYTE(v882) = sub_1C47F37A0((unsigned __int8 *)v2027);
        v884 = 0;
        v5 = 0;
      }
      else
      {
        v882 = llvm::EVT::getEVT(v880[3], 0, v5);
        v5 = v883;
        v884 = v882 & 0xFFFFFFFFFFFFFF00;
      }
      v1346 = *(_QWORD *)(v874 + 40) + 16 * v873;
      v1347 = *(void **)v1346;
      if (v882 == *(_QWORD *)v1346)
      {
        if ((_BYTE)v882 || *(_QWORD *)(v1346 + 8) == v5)
        {
LABEL_1002:
          v1414 = *(_QWORD *)(v13 + 16);
          v1415 = *(_QWORD *)(v871 + 40) + 16 * v872;
          v1416 = *(llvm **)v1415;
          v1417 = *(_QWORD *)(v1415 + 8);
          v1418 = *(_QWORD *)(v1414 + 832);
          if (v1418)
            v1419 = *(_WORD *)(v1418 + 8);
          else
            v1419 = 0;
          v1452 = sub_1C5D52060(v1414, 155, (const llvm::APInt *)&v1988, v1416, v1417, v874, v873, v1419);
          v1454 = v1453;
          v1455 = v871;
          *(_OWORD *)v2027 = *(_OWORD *)(*(_QWORD *)(v871 + 40) + 16 * v878);
          v1456 = sub_1C612FE00((llvm::EVT *)v2027, v1453);
          v2027[0] = &v2028;
          v2027[1] = (void *)0x800000000;
          if (v1456)
          {
            LODWORD(v1457) = 0;
            v1458 = 0;
            v1459 = v1456;
            do
            {
              v1460 = *(_QWORD *)(v875 + 80);
              v1461 = (_QWORD *)(v1460 + 24);
              if (*(_DWORD *)(v1460 + 32) >= 0x41u)
                v1461 = (_QWORD *)*v1461;
              if (v1458 == *v1461)
                v1462 = v1459;
              else
                v1462 = v1458;
              if (v1457 >= HIDWORD(v2027[1]))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v2027, (uint64_t)&v2028, v1457 + 1, 4);
                LODWORD(v1457) = v2027[1];
              }
              *((_DWORD *)v2027[0] + v1457) = v1462;
              v1457 = ++LODWORD(v2027[1]);
              ++v1458;
            }
            while (v1459 != v1458);
            v1463 = (__int128 *)v2027[0];
          }
          else
          {
            v1457 = 0;
            v1463 = &v2028;
          }
          v29 = sub_1C5D41DE4(*(_QWORD *)(v1977 + 16), *(llvm **)(*(_QWORD *)(v1455 + 40) + 16 * v878), *(_QWORD *)(*(_QWORD *)(v1455 + 40) + 16 * v878 + 8), (uint64_t)&v1988, v1455, v1965, (uint64_t)v1452, v1454, v1463, v1457);
          v31 = v1535;
          if (v2027[0] != &v2028)
            free(v2027[0]);
LABEL_1102:
          v13 = v1977;
LABEL_344:
          v524 = v1999;
          if (v1999 < HIDWORD(v1999))
          {
LABEL_345:
            v252 = (char *)v1998 + 16 * v524;
            *(_QWORD *)v252 = v29;
LABEL_346:
            *((_QWORD *)v252 + 1) = v31;
            goto LABEL_563;
          }
LABEL_887:
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v524 + 1, 16);
          LODWORD(v524) = v1999;
          goto LABEL_345;
        }
      }
      else if ((_BYTE)v882)
      {
        if ((v882 - 120) < 0x20u
          || (v882 - 2) < 6u
          || (v882 - 15) <= 0x3Bu)
        {
          v1413 = *(void **)(v1346 + 8);
          v2027[0] = v1347;
          v2027[1] = v1413;
          goto LABEL_1001;
        }
LABEL_1004:
        v1937 = v873;
        v1351 = v872;
        goto LABEL_1005;
      }
      if ((*(_DWORD *)(v5 + 8) & 0xFE) == 0x12)
        v1348 = *(unsigned __int8 *)(**(_QWORD **)(v5 + 16) + 8);
      else
        v1348 = *(_DWORD *)(v5 + 8);
      if (v1348 == 13)
      {
        v1349 = *(void **)(v1346 + 8);
        v2027[0] = v1347;
        v2027[1] = v1349;
        if (v882 == v1347 && v1349 == (void *)v5)
          goto LABEL_1002;
LABEL_1001:
        if (sub_1C6329714((unsigned __int8 *)v2027, v884 | v882, v5))
          goto LABEL_1002;
        goto LABEL_1004;
      }
      goto LABEL_1004;
    case 0x94:
      *(_OWORD *)v2027 = *(_OWORD *)(*(_QWORD *)(**(_QWORD **)(v12 + 32) + 40)
                                   + 16 * *(unsigned int *)(*(_QWORD *)(v12 + 32) + 8));
      if (sub_1C612FE00((llvm::EVT *)v2027, (const char *)v14) == 1)
      {
        v318 = *(_QWORD *)(v13 + 16);
        v868 = *(_QWORD *)(v12 + 32);
        v867 = *(_QWORD *)(v12 + 40);
        v215 = *(llvm **)v867;
        v216 = *(_QWORD *)(v867 + 8);
        v320 = *(uint64_t **)v868;
        v217 = *(_QWORD *)(v868 + 8);
        v869 = *(_QWORD *)(v318 + 832);
        if (v869)
          v219 = *(_WORD *)(v869 + 8);
        else
          v219 = 0;
        v319 = 216;
LABEL_264:
        v85 = sub_1C5D52060(v318, v319, (const llvm::APInt *)&v1988, v215, v216, (uint64_t)v320, v217, v219);
      }
      else
      {
        v85 = sub_1C5CDED34(v13, v12, 0);
      }
      goto LABEL_265;
    case 0x95:
      v18 = sub_1C5CDF1F8(v13, v12, v5);
      goto LABEL_343;
    case 0x96:
      v1976 = v13;
      v617 = *(uint64_t **)(v12 + 32);
      v618 = *v617;
      v619 = v617[1];
      v620 = v617[5];
      v621 = v617[6];
      v1915 = v617[11];
      v1924 = v617[10];
      v622 = *(void **)(v12 + 64);
      v2001[0] = v622;
      if (v622)
      {
        llvm::MetadataTracking::track((uint64_t)v2001, (unsigned __int8 *)v622, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2001[1]) = v15;
      v623 = *(_QWORD *)(v618 + 40) + 16 * v619;
      v624 = *(llvm **)v623;
      v625 = *(_QWORD *)(v623 + 8);
      v1909 = v621;
      v626 = (uint64_t *)(*(_QWORD *)(v620 + 40) + 16 * v621);
      v1897 = v626[1];
      v1899 = *v626;
      v627 = sub_1C5D44240(*(_QWORD *)(v1976 + 16), (uint64_t)v624, v625, 1u);
      v1932 = v628;
      v629 = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(*(_QWORD *)(v1976 + 16) + 40) + 432), *(_DWORD *)(v627 + 76));
      v1944 = v621;
      if (v629)
        v630 = *((_DWORD *)v629 + 3);
      else
        v630 = 0;
      v1895 = v630;
      v631 = *(_QWORD *)(v1976 + 16);
      v2015[0] = (void *)((unint64_t)v629 | 4);
      v2015[1] = 0;
      LODWORD(v2015[2]) = v630;
      BYTE4(v2015[2]) = 0;
      v2028 = 0u;
      *(_OWORD *)v2027 = 0u;
      v1902 = (void *)((unint64_t)v629 | 4);
      v632 = (uint64_t *)(*(_QWORD *)(v618 + 40) + 16 * v619);
      sub_1C6365BD8(v631, *v632, v632[1]);
      v1892 = sub_1C636B75C(v631, v631 + 112, 0, (uint64_t)v2001, v618, v619, v627, v1932, (uint64_t)v2015, v633, 0, 0, (uint64_t)v2027);
      v635 = v634;
      v636 = sub_1C5D9FF38(*(_QWORD *)(v1976 + 8), *(_QWORD *)(v1976 + 16), v627, v1932, v624, v625, v1899, v1897, v1924, v1915);
      v638 = v637;
      v639 = *(_QWORD *)(v1976 + 16);
      v640 = *(_DWORD *)(*(_QWORD *)(**(_QWORD **)(v639 + 40) + 40) + 276);
      v2015[1] = 0;
      v2015[0] = 0;
      v2028 = 0u;
      *(_OWORD *)v2027 = 0u;
      LODWORD(v2015[2]) = v640;
      BYTE4(v2015[2]) = 0;
      sub_1C6365BD8(v639, *(_QWORD *)(*(_QWORD *)(v620 + 40) + 16 * v1909), *(_QWORD *)(*(_QWORD *)(v620 + 40) + 16 * v1909 + 8));
      v642 = sub_1C636B75C(v639, (uint64_t)v1892, v635, (uint64_t)v2001, v620, v1944, (uint64_t)v636, v638, (uint64_t)v2015, v641, 0, 0, (uint64_t)v2027);
      v644 = v643;
      v645 = *(_QWORD *)(v1976 + 16);
      v646 = *(uint64_t **)(v12 + 40);
      v647 = *v646;
      v648 = v646[1];
      v2015[0] = v1902;
      v2015[1] = 0;
      LODWORD(v2015[2]) = v1895;
      BYTE4(v2015[2]) = 0;
      v2028 = 0u;
      *(_OWORD *)v2027 = 0u;
      v649 = sub_1C63681B0(v645, v647, v648, (uint64_t)v2001, (uint64_t)v642, v644, v627, v1932, (__int128 *)v2015, 0, 0, 0, (uint64_t)v2027, 0);
      v651 = v650;
      if (v2001[0])
        llvm::MetadataTracking::untrack((uint64_t)v2001, (unsigned __int8 *)v2001[0]);
      v652 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v652 = v1999;
      }
      v653 = (char *)v1998 + 16 * v652;
      *v653 = v649;
      v653[1] = v651;
      LODWORD(v1999) = v1999 + 1;
      v13 = v1976;
      goto LABEL_564;
    case 0x97:
      v18 = sub_1C5CDED34(v13, v12, 0);
      goto LABEL_343;
    case 0x99:
      v2015[0] = &v2015[2];
      v2015[1] = (void *)0x2000000000;
      *(_OWORD *)v2027 = *(_OWORD *)*(_QWORD *)(v12 + 40);
      v668 = *(unsigned int **)(v12 + 80);
      sub_1C612FE00((llvm::EVT *)v2027, (const char *)v14);
      v670 = *(_QWORD *)(v12 + 40);
      v672 = *(void **)v670;
      v671 = *(llvm::EVT ***)(v670 + 8);
      v2001[0] = v672;
      v2001[1] = v671;
      if ((_BYTE)v672)
      {
        LOBYTE(v673) = sub_1C47F37A0((unsigned __int8 *)v2001);
        v676 = 0;
        v675 = 0;
      }
      else
      {
        v673 = llvm::EVT::getEVT(v671[3], 0, v669);
        v675 = v674;
        v676 = v673 & 0xFFFFFFFFFFFFFF00;
      }
      v1061 = v673;
      v1062 = (void *)(v676 | v673);
      v1063 = *(_QWORD *)(v12 + 32);
      v1935 = *(uint64_t **)v1063;
      v1948 = *(_QWORD *)(v1063 + 8);
      v1917 = *(_QWORD *)(v1063 + 48);
      v1926 = *(_QWORD *)(v1063 + 40);
      v1064 = *(_QWORD *)(v13 + 8);
      if ((_BYTE)v673 && *(_QWORD *)(v1064 + 8 * v673 + 96))
        goto LABEL_1052;
      llvm::TargetLoweringBase::getTypeConversion(v1064, *(llvm::EVT **)(*(_QWORD *)(v13 + 16) + 56), (_BOOL8)v1062, (uint64_t)v675, (uint64_t)v2027);
      v1065 = (char)v2027[1];
      v2011[0] = v2027[1];
      v2011[1] = (void *)v2028;
      if (v1061 == LOBYTE(v2027[1]))
      {
        if (v1061 || (const char *)v2028 == v675)
          goto LABEL_1051;
        v2027[0] = v1062;
        v2027[1] = (void *)v675;
      }
      else
      {
        v2027[0] = v1062;
        v2027[1] = (void *)v675;
        if (v1065)
        {
          v1066 = sub_1C47A8C74((unsigned __int8 *)v2011);
LABEL_870:
          v1295 = v1066;
          v1296 = v1067;
          if (v1061)
            v1297 = sub_1C47A8C74((unsigned __int8 *)v2027);
          else
            v1297 = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2027);
          if ((v1296 != 1 || v674 == 1) && v1295 < v1297)
          {
            v1298 = *(llvm::LLVMContext **)(*(_QWORD *)(v13 + 16) + 56);
            v1299 = v2011[0];
            v1300 = v2011[1];
            if (LOBYTE(v2001[0]))
              v1301 = sub_1C47A8C74((unsigned __int8 *)v2001);
            else
              v1301 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2001);
            v1470 = v1301;
            if ((_DWORD)v1302 == 1)
            if (LOBYTE(v2011[0]))
              v1471 = sub_1C47A8C74((unsigned __int8 *)v2011);
            else
              v1471 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2011);
            v1473 = v1471;
            if ((_DWORD)v1472 == 1)
            v1475 = (void *)sub_1C4816F98(v1298, (uint64_t)v1299, (uint64_t)v1300, v1470 / v1473, 0);
            v2027[0] = v1475;
            v2027[1] = v1474;
            v1476 = *(_QWORD *)(v13 + 16);
            v1477 = *(_QWORD *)(v1476 + 832);
            if (v1477)
              v1478 = *(_WORD *)(v1477 + 8);
            else
              v1478 = 0;
            v1935 = sub_1C5D52060(v1476, 216, (const llvm::APInt *)&v1988, (llvm *)v1475, (uint64_t)v1474, (uint64_t)v1935, v1948, v1478);
            v1479 = *(_QWORD *)(v13 + 16);
            v1480 = *(_QWORD *)(v1479 + 832);
            v1912 = v1481;
            if (v1480)
              v1482 = *(_WORD *)(v1480 + 8);
            else
              v1482 = 0;
            v1950 = v1948 & 0xFFFFFFFF00000000;
            v1483 = sub_1C5D52060(v1479, 216, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], v1926, v1917, v1482);
            v1906 = v1484;
            v1920 = v1917 & 0xFFFFFFFF00000000;
            v1926 = (uint64_t)v1483;
            v1485 = sub_1C612FE00((llvm::EVT *)v2027, v1484);
            v1488 = sub_1C612FE00((llvm::EVT *)v2001, v1486);
            if (v1485 / v1488 <= 1)
              v1489 = 1;
            else
              v1489 = v1485 / v1488;
            if (sub_1C612FE00((llvm::EVT *)v2001, v1487))
            {
              v1528 = 0;
              do
              {
                if ((v668[v1528] & 0x80000000) != 0)
                {
                  if (v1488 <= v1485)
                  {
                    v1529 = v2015[1];
                    v1530 = v1489;
                    do
                    {
                      v1531 = v668[v1528];
                      if (v1529 >= HIDWORD(v2015[1]))
                      {
                        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v2015, (uint64_t)&v2015[2], v1529 + 1, 4);
                        v1529 = v2015[1];
                      }
                      *((_DWORD *)v2015[0] + v1529) = v1531;
                      v1529 = ++LODWORD(v2015[1]);
                      --v1530;
                    }
                    while (v1530);
                  }
                }
                else if (v1488 <= v1485)
                {
                  v1532 = 0;
                  v1533 = v2015[1];
                  do
                  {
                    v1534 = v668[v1528];
                    if (v1533 >= HIDWORD(v2015[1]))
                    {
                      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v2015, (uint64_t)&v2015[2], v1533 + 1, 4);
                      v1533 = v2015[1];
                    }
                    *((_DWORD *)v2015[0] + v1533) = v1532 + v1534 * (v1485 / v1488);
                    v1533 = ++LODWORD(v2015[1]);
                    ++v1532;
                  }
                  while (v1489 != v1532);
                }
                ++v1528;
              }
              while (v1528 < sub_1C612FE00((llvm::EVT *)v2001, v674));
            }
            v1948 = v1912 | v1950;
            v1917 = v1906 | v1920;
            v668 = (unsigned int *)v2015[0];
            *(_OWORD *)v2001 = *(_OWORD *)v2027;
          }
LABEL_1051:
          v1062 = v2011[0];
          v675 = (const char *)v2011[1];
LABEL_1052:
          v1490 = sub_1C612FE00((llvm::EVT *)v2001, v674);
          v2027[0] = &v2028;
          v2027[1] = (void *)0x1000000000;
          if (v1490)
          {
            v1491 = v1490;
            v1492 = v1490;
            do
            {
              v1494 = *v668++;
              v1493 = v1494;
              if ((v1494 & 0x80000000) != 0)
              {
                v1495 = sub_1C61312D0(*(_QWORD *)(v13 + 16), (llvm *)v1062, (uint64_t)v675);
              }
              else
              {
                v1497 = *(_QWORD *)(v13 + 16);
                if (v1493 >= v1491)
                {
                  v1502 = sub_1C6366C9C(*(_QWORD *)(v13 + 16), v1493 - v1491, (uint64_t)&v1988, 0);
                  v1505 = *(_QWORD *)(v1497 + 832);
                  if (v1505)
                    LOWORD(v1505) = *(_WORD *)(v1505 + 8);
                  v1495 = sub_1C5D56C70(v1497, 148, (const llvm::APInt *)&v1988, (llvm *)v1062, (uint64_t)v675, v1926, v1917, v1504, v1502, v1503, v1505);
                }
                else
                {
                  v1498 = sub_1C6366C9C(*(_QWORD *)(v13 + 16), v1493, (uint64_t)&v1988, 0);
                  v1501 = *(_QWORD *)(v1497 + 832);
                  if (v1501)
                    LOWORD(v1501) = *(_WORD *)(v1501 + 8);
                  v1495 = sub_1C5D56C70(v1497, 148, (const llvm::APInt *)&v1988, (llvm *)v1062, (uint64_t)v675, (uint64_t)v1935, v1948, v1500, v1498, v1499, v1501);
                }
              }
              v1506 = v1495;
              v1507 = v1496;
              v1508 = LODWORD(v2027[1]);
              if (LODWORD(v2027[1]) >= (unint64_t)HIDWORD(v2027[1]))
              {
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v2027, (uint64_t)&v2028, LODWORD(v2027[1]) + 1, 16);
                v1508 = LODWORD(v2027[1]);
              }
              v1509 = (char *)v2027[0] + 16 * v1508;
              *v1509 = v1506;
              v1509[1] = v1507;
              v1510 = ++LODWORD(v2027[1]);
              --v1492;
            }
            while (v1492);
            v1511 = (uint64_t *)v2027[0];
          }
          else
          {
            v1510 = 0;
            v1511 = (uint64_t *)&v2028;
          }
          v1512 = *(_QWORD *)(v13 + 16);
          v1513 = *(_QWORD *)(v1512 + 832);
          if (v1513)
            v1514 = *(unsigned __int16 *)(v1513 + 8);
          else
            v1514 = 0;
          v1515 = sub_1C636D0C8(v1512, (const char *)0x92, (const llvm::APInt *)&v1988, (llvm *)v2001[0], (uint64_t)v2001[1], v1511, v1510, v1514);
          *(_QWORD *)&v1987 = v1515;
          DWORD2(v1987) = v1516;
          v1517 = *(_QWORD *)(v13 + 16);
          v1518 = *(_QWORD *)(v12 + 40);
          v1519 = *(llvm **)v1518;
          v1520 = *(_QWORD *)(v1518 + 8);
          v1521 = *(_QWORD *)(v1517 + 832);
          if (v1521)
            v1522 = *(_WORD *)(v1521 + 8);
          else
            v1522 = 0;
          v1523 = sub_1C5D52060(v1517, 216, (const llvm::APInt *)&v1988, v1519, v1520, (uint64_t)v1515, *((unint64_t *)&v1987 + 1), v1522);
          *(_QWORD *)&v1987 = v1523;
          DWORD2(v1987) = v1524;
          v1525 = (uint64_t *)*((_QWORD *)&v1987 + 1);
          v1526 = v1999;
          if (v1999 >= HIDWORD(v1999))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
            v1526 = v1999;
          }
          v1527 = (uint64_t **)((char *)v1998 + 16 * v1526);
          *v1527 = v1523;
          v1527[1] = v1525;
          LODWORD(v1999) = v1999 + 1;
          if (v2027[0] != &v2028)
            free(v2027[0]);
          v397 = (void **)v2015[0];
          v398 = &v2015[2];
LABEL_1079:
          if (v397 != v398)
LABEL_1080:
            free(v397);
          goto LABEL_564;
        }
      }
      v1066 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2011);
      goto LABEL_870;
    case 0x9A:
      v18 = sub_1C637A43C(*(_QWORD *)(v13 + 8), v12, *(_QWORD **)(v13 + 16));
      goto LABEL_343;
    case 0x9B:
      v727 = *(void **)(v12 + 64);
      v2001[0] = v727;
      if (v727)
      {
        llvm::MetadataTracking::track((uint64_t)v2001, (unsigned __int8 *)v727, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2001[1]) = v15;
      v728 = sub_1C5D44240(*(_QWORD *)(v13 + 16), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), 1u);
      v729 = *(_DWORD *)(v728 + 76);
      v730 = *(_QWORD *)(v13 + 16);
      v1962 = v731;
      v732 = *(uint64_t **)(v12 + 32);
      v733 = v732[1];
      v1933 = *v732;
      v734 = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(v730 + 40) + 432), v729);
      v736 = (void *)((unint64_t)v734 | 4);
      if (v734)
        v737 = *((_DWORD *)v734 + 3);
      else
        v737 = 0;
      v738 = *(_QWORD *)(v12 + 40);
      v740 = *(void **)v738;
      v739 = *(llvm::EVT ***)(v738 + 8);
      v2011[0] = v740;
      v2011[1] = v739;
      if ((_BYTE)v740)
      {
        LOBYTE(v741) = sub_1C47F37A0((unsigned __int8 *)v2011);
        v744 = 0;
        v743 = 0;
      }
      else
      {
        v741 = llvm::EVT::getEVT(v739[3], 0, v735);
        v743 = v742;
        v744 = v741 & 0xFFFFFFFFFFFFFF00;
      }
      v1068 = v744 | v741;
      v2028 = 0u;
      *(_OWORD *)v2027 = 0u;
      v2015[0] = v736;
      v2015[1] = 0;
      LODWORD(v2015[2]) = v737;
      BYTE4(v2015[2]) = 0;
      sub_1C6365BD8(v730, v1068, v743);
      v1070 = sub_1C636B9CC(v730, v730 + 112, 0, (uint64_t)v2001, v1933, v733, v728, v1962, (uint64_t)v2015, v1068, v743, v1069, 0, 0, (uint64_t)v2027);
      v1072 = v1071;
      v1073 = *(_QWORD *)(v13 + 16);
      v1074 = *(uint64_t **)(v12 + 40);
      v1076 = *v1074;
      v1075 = v1074[1];
      v1077 = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(v1073 + 40) + 432), v729);
      v2015[0] = (void *)((unint64_t)v1077 | 4);
      v2015[1] = 0;
      BYTE4(v2015[2]) = 0;
      if (v1077)
        v1078 = *((_DWORD *)v1077 + 3);
      else
        v1078 = 0;
      LODWORD(v2015[2]) = v1078;
      v2028 = 0u;
      *(_OWORD *)v2027 = 0u;
      v29 = sub_1C63681B0(v1073, v1076, v1075, (uint64_t)v2001, (uint64_t)v1070, v1072, v728, v1962, (__int128 *)v2015, 0, 0, 0, (uint64_t)v2027, 0);
      v31 = v1079;
      if (v2001[0])
        llvm::MetadataTracking::untrack((uint64_t)v2001, (unsigned __int8 *)v2001[0]);
      goto LABEL_886;
    case 0x9C:
      v130 = *(void **)(v12 + 64);
      v2027[0] = v130;
      if (v130)
      {
        llvm::MetadataTracking::track((uint64_t)v2027, (unsigned __int8 *)v130, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2027[1]) = v15;
      v29 = sub_1C5CA0FB8(*(_QWORD *)(v13 + 16), **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), (const llvm::APInt *)v2027, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8));
      v31 = v131;
      v132 = (unsigned __int8 *)v2027[0];
      if (!v2027[0])
        goto LABEL_344;
      v133 = v2027;
      goto LABEL_105;
    case 0x9F:
    case 0xA0:
      if (v16 == 159)
        v525 = 64;
      else
        v525 = 63;
      v526 = sub_1C636A8B4(*(_QWORD *)(v13 + 16), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8));
      v277 = sub_1C636D6B4(*(_QWORD *)(v13 + 16), (const char *)v525, (const llvm::APInt *)&v1988, v526, v527, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), v528, *(_QWORD *)(*(_QWORD *)(v12 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 48));
      *(_QWORD *)&v1987 = v277;
      DWORD2(v1987) = v529;
      goto LABEL_374;
    case 0xA7:
    case 0xA8:
    case 0xA9:
    case 0xAA:
      v326 = dword_1C866BC80[(__int16)(v16 - 167)];
      v327 = *(_QWORD *)(v12 + 32);
      v328 = *(_QWORD *)v327;
      DWORD2(v1987) = *(_DWORD *)(v327 + 8);
      *(_QWORD *)&v1987 = v328;
      DWORD2(v1986) = *(_DWORD *)(v327 + 48);
      *(_QWORD *)&v1986 = *(_QWORD *)(v327 + 40);
      v329 = *(_QWORD **)(v13 + 16);
      v330 = *(_QWORD *)(v328 + 40) + 16 * DWORD2(v1987);
      v331 = *(llvm **)v330;
      v332 = *(_QWORD *)(v330 + 8);
      v333 = sub_1C6367818(v329, v326);
      v336 = sub_1C63698B8((uint64_t)v329, (const char *)0xC0, (const llvm::APInt *)&v1988, v331, v332, v328, SDWORD2(v1987), v335, v1986, SDWORD2(v1986), v328, SDWORD2(v1987), v1986, SDWORD2(v1986), v333, v334);
      *(_QWORD *)&v1987 = v336;
      DWORD2(v1987) = v337;
      v338 = (uint64_t *)*((_QWORD *)&v1987 + 1);
      v339 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v339 = v1999;
      }
      v340 = (uint64_t **)((char *)v1998 + 16 * v339);
      *v340 = v336;
      v340[1] = v338;
      LODWORD(v1999) = v1999 + 1;
      goto LABEL_564;
    case 0xAE:
      v87 = sub_1C5D9C6B8(*(uint64_t **)(v13 + 8), v12, *(_QWORD *)(v13 + 16), 0);
      goto LABEL_194;
    case 0xAF:
    case 0xB0:
    case 0xB1:
      *(_OWORD *)v2015 = *(_OWORD *)*(_QWORD *)(v12 + 40);
      v407 = sub_1C612FE00((llvm::EVT *)v2015, (const char *)v14);
      v2027[0] = &v2028;
      v2027[1] = (void *)0x800000000;
      if (v407)
      {
        v410 = 0;
        v1958 = v407;
        do
        {
          v411 = *(_QWORD *)(v13 + 16);
          v412 = (llvm *)sub_1C6131264((unsigned __int8 *)v2015, v408, v409);
          v414 = v413;
          v415 = *(uint64_t **)(v12 + 32);
          v416 = *v415;
          v417 = v415[1];
          v418 = sub_1C6366C9C(*(_QWORD *)(v13 + 16), v410, (uint64_t)&v1988, 0);
          v421 = *(_QWORD *)(v411 + 832);
          if (v421)
            LOWORD(v421) = *(_WORD *)(v421 + 8);
          v422 = sub_1C5D56C70(v411, 148, (const llvm::APInt *)&v1988, v412, v414, v416, v417, v420, v418, v419, v421);
          v424 = v423;
          v425 = *(_QWORD *)(v13 + 16);
          v427 = (llvm *)sub_1C6131264((unsigned __int8 *)v2015, v423, v426);
          v429 = v428;
          v430 = *(_QWORD *)(v12 + 32);
          v431 = *(_QWORD *)(v430 + 40);
          v432 = *(_QWORD *)(v430 + 48);
          v433 = sub_1C6366C9C(*(_QWORD *)(v13 + 16), v410, (uint64_t)&v1988, 0);
          v436 = *(_QWORD *)(v425 + 832);
          if (v436)
            LOWORD(v436) = *(_WORD *)(v436 + 8);
          v437 = sub_1C5D56C70(v425, 148, (const llvm::APInt *)&v1988, v427, v429, v431, v432, v435, v433, v434, v436);
          v439 = v438;
          v440 = *(_QWORD *)(v13 + 16);
          v441 = *(unsigned __int16 *)(v12 + 24);
          v444 = (llvm *)sub_1C6131264((unsigned __int8 *)v2015, v438, v442);
          v446 = *(_QWORD *)(v440 + 832);
          if (v446)
            LOWORD(v446) = *(_WORD *)(v446 + 8);
          v447 = sub_1C5D56C70(v440, v441, (const llvm::APInt *)&v1988, v444, v443, (uint64_t)v422, v424, v445, (uint64_t)v437, v439, v446);
          v448 = v408;
          v449 = LODWORD(v2027[1]);
          if (LODWORD(v2027[1]) >= (unint64_t)HIDWORD(v2027[1]))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v2027, (uint64_t)&v2028, LODWORD(v2027[1]) + 1, 16);
            v449 = LODWORD(v2027[1]);
          }
          v450 = (uint64_t **)((char *)v2027[0] + 16 * v449);
          *v450 = v447;
          v450[1] = (uint64_t *)v448;
          v451 = ++LODWORD(v2027[1]);
          ++v410;
        }
        while (v1958 != v410);
        v532 = (uint64_t *)v2027[0];
      }
      else
      {
        v451 = 0;
        v532 = (uint64_t *)&v2028;
      }
      v546 = *(_QWORD *)(v13 + 16);
      v547 = *(_QWORD *)(v12 + 40);
      v548 = *(llvm **)v547;
      v549 = *(_QWORD *)(v547 + 8);
      v550 = *(_QWORD *)(v546 + 832);
      if (v550)
        v551 = *(unsigned __int16 *)(v550 + 8);
      else
        v551 = 0;
      v552 = sub_1C636D0C8(v546, (const char *)0x92, (const llvm::APInt *)&v1988, v548, v549, v532, v451, v551);
      v554 = v553;
      v555 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v555 = v1999;
      }
      v556 = (uint64_t **)((char *)v1998 + 16 * v555);
      *v556 = v552;
      v556[1] = v554;
      LODWORD(v1999) = v1999 + 1;
      v397 = (void **)v2027[0];
      if (v2027[0] == &v2028)
        goto LABEL_564;
      goto LABEL_1080;
    case 0xB2:
    case 0xB3:
      v18 = sub_1C5D99EA4(*(_QWORD *)(v13 + 8), v12, 1, *(_QWORD *)(v13 + 16));
      if (!v18)
        goto LABEL_564;
      goto LABEL_343;
    case 0xB4:
    case 0xB5:
      v18 = sub_1C5D99590(*(_QWORD *)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      if (!v18)
        goto LABEL_564;
      goto LABEL_343;
    case 0xB6:
      v87 = sub_1C6378FFC(*(uint64_t **)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      goto LABEL_194;
    case 0xB7:
    case 0xBC:
      v87 = sub_1C5D9C098(*(_QWORD *)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      goto LABEL_194;
    case 0xB8:
    case 0xBD:
      v87 = sub_1C6378B0C(*(uint64_t **)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      goto LABEL_194;
    case 0xB9:
      v87 = sub_1C5D9B888(*(uint64_t **)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      goto LABEL_194;
    case 0xBA:
      v87 = sub_1C5D9CB70(*(uint64_t **)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      goto LABEL_194;
    case 0xBB:
      v560 = *(uint64_t ***)(v12 + 32);
      v561 = *v560;
      v562 = (unint64_t)v560[1];
      v563 = (*v560)[5] + 16 * v562;
      v564 = *(void **)(v563 + 8);
      v2027[0] = *(void **)v563;
      v2027[1] = v564;
      v565 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(v13 + 8), (uint64_t)v2027[0], (uint64_t)v564, *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, 1);
      v567 = v566;
      v569 = sub_1C6131328((unsigned __int8 *)v2027, v566, v568);
      if (LOBYTE(v2027[0])
        && ((v570 = *(_QWORD *)(v13 + 8), LOBYTE(v2027[0]) == 1) || *(_QWORD *)(v570 + 8 * LOBYTE(v2027[0]) + 96))
        && *(unsigned __int8 *)(v570 + 390 * LOBYTE(v2027[0]) + 4047) <= 1u)
      {
        v1311 = *(_QWORD *)(v13 + 16);
        v1312 = *(_QWORD *)(v1311 + 832);
        if (v1312)
          v1313 = *(_WORD *)(v1312 + 8);
        else
          v1313 = 0;
        v561 = sub_1C5D52060(v1311, 185, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], (uint64_t)v561, v562, v1313);
        v562 = v1585;
      }
      else
      {
        v562 = v562;
        if (v569 != 1)
        {
          v1314 = 31 - __clz(v569 - 1);
          do
          {
            v1315 = *(_QWORD *)(v13 + 16);
            v1316 = (llvm *)v2027[0];
            v1317 = v2027[1];
            v1318 = sub_1C6366AB4(v1315, 1 << v1314, (const llvm::APInt *)&v1988, v565, v567, 0, 0);
            v1321 = *(_QWORD *)(v1315 + 832);
            if (v1321)
              LOWORD(v1321) = *(_WORD *)(v1321 + 8);
            v1322 = sub_1C5D56C70(v1315, 177, (const llvm::APInt *)&v1988, v1316, (uint64_t)v1317, (uint64_t)v561, v562, v1320, (uint64_t)v1318, v1319, v1321);
            v1325 = *(_QWORD *)(v13 + 16);
            v1326 = *(_QWORD *)(v1325 + 832);
            if (v1326)
              LOWORD(v1326) = *(_WORD *)(v1326 + 8);
            v1327 = v1314;
            v561 = sub_1C5D56C70(v1325, 173, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], (uint64_t)v561, v562, v1324, (uint64_t)v1322, v1323, v1326);
            v562 = v1328;
            --v1314;
          }
          while (v1327);
        }
      }
      v1586 = *(_QWORD *)(v13 + 16);
      v1587 = (llvm *)v2027[0];
      v1588 = v2027[1];
      v1589 = sub_1C6366AB4(v1586, 1, (const llvm::APInt *)&v1988, (llvm *)v2027[0], (uint64_t)v2027[1], 0, 0);
      v1592 = *(_QWORD *)(v1586 + 832);
      if (v1592)
        LOWORD(v1592) = *(_WORD *)(v1592 + 8);
      v1593 = sub_1C5D56C70(v1586, 171, (const llvm::APInt *)&v1988, v1587, (uint64_t)v1588, (uint64_t)v561, v562, v1591, (uint64_t)v1589, v1590, v1592);
      v1595 = v1594;
LABEL_1158:
      v1596 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v1596 = v1999;
      }
      v1597 = (uint64_t **)((char *)v1998 + 16 * v1596);
      *v1597 = v1593;
      v1597[1] = v1595;
      goto LABEL_1161;
    case 0xBE:
      v170 = *(_QWORD *)(v12 + 32);
      v171 = *(_DWORD *)(v170 + 8);
      v172 = *(_QWORD *)v170;
      *(_QWORD *)&v1987 = v172;
      DWORD2(v1987) = v171;
      *(_QWORD *)&v1986 = *(_QWORD *)(v170 + 40);
      DWORD2(v1986) = *(_DWORD *)(v170 + 48);
      *(_QWORD *)&v1985 = *(_QWORD *)(v170 + 80);
      DWORD2(v1985) = *(_DWORD *)(v170 + 88);
      if (*(_WORD *)(v172 + 24) == 193)
      {
        v173 = sub_1C47DF81C(*(_QWORD **)(v13 + 16), (const llvm::APInt *)&v1988, **(_QWORD **)(v172 + 32), *(_QWORD *)(*(_QWORD *)(v172 + 32) + 8), *(_QWORD *)(*(_QWORD *)(v172 + 32) + 40), *(_QWORD *)(*(_QWORD *)(v172 + 32) + 48), v1986, DWORD2(v1986), v1985, SDWORD2(v1985), SHIDWORD(v1985), *(_DWORD *)(*(_QWORD *)(*(_QWORD *)(v172 + 32) + 80) + 76));
      }
      else
      {
        v995 = *(_QWORD **)(v13 + 16);
        v996 = *(_QWORD *)(v172 + 40) + 16 * DWORD2(v1987);
        v997 = sub_1C6366AB4((uint64_t)v995, 0, (const llvm::APInt *)&v1988, *(llvm **)v996, *(_QWORD *)(v996 + 8), 0, 0);
        v173 = sub_1C47DF81C(v995, (const llvm::APInt *)&v1988, v172, SDWORD2(v1987), (uint64_t)v997, v998, v1986, DWORD2(v1986), v1985, SDWORD2(v1985), SHIDWORD(v1985), 0x16u);
      }
      v107 = v173;
      *(_QWORD *)&v1987 = v173;
      DWORD2(v1987) = v174;
      *((_WORD *)v173 + 36) = *(_WORD *)(v12 + 72);
      goto LABEL_196;
    case 0xC0:
      v226 = *(_QWORD *)(v12 + 32);
      v227 = *(_QWORD *)(v12 + 40);
      v228 = *(_DWORD *)(v226 + 8);
      *(_QWORD *)&v1987 = *(_QWORD *)v226;
      DWORD2(v1987) = v228;
      *(_QWORD *)&v1986 = *(_QWORD *)(v226 + 40);
      DWORD2(v1986) = *(_DWORD *)(v226 + 48);
      DWORD2(v1985) = *(_DWORD *)(v226 + 88);
      *(_QWORD *)&v1985 = *(_QWORD *)(v226 + 80);
      v1982 = *(void **)(v226 + 120);
      v1983 = *(_DWORD *)(v226 + 128);
      v230 = *(llvm **)v227;
      v229 = *(_QWORD *)(v227 + 8);
      v2015[0] = 0;
      LODWORD(v2015[1]) = 0;
      *(_OWORD *)v2001 = *(_OWORD *)(v226 + 160);
      v231 = v2001[0];
      v232 = *((_DWORD *)v2001[0] + 19);
      v233 = *(_QWORD *)(v13 + 8);
      v234 = (uint64_t *)(*(_QWORD *)(v1987 + 40) + 16 * v228);
      v235 = *v234;
      v236 = *v234 >> 3;
      v237 = 11 << (4 * (*v234 & 7));
      if ((v237 & *(_DWORD *)(v233 + 92 * v232 + 4 * v236 + 171588)) == 0)
      {
        v238 = v234[1];
        v239 = *(_QWORD *)(v13 + 16);
        v240 = *(_QWORD *)(**(_QWORD **)(v239 + 40) + 40) + 272;
        v241 = *(_QWORD *)(v239 + 56);
        v242 = *(uint64_t (**)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v233 + 400);
        v243 = v229;
        v244 = (llvm *)v242(*(_QWORD *)(v13 + 8), v240, v241, v235, v238);
        v247 = sub_1C5D58E08(*(_QWORD *)(v13 + 16), (const char *)0xC1, (const llvm::APInt *)&v1988, v244, v245, v1987, *((uint64_t *)&v1987 + 1), v246, v1986, *((uint64_t *)&v1986 + 1), (uint64_t)v231, (int)v2001[1], SHIDWORD(v2001[1]), *(_WORD *)(v12 + 72));
        v249 = sub_1C4815A8C(*(_QWORD *)(v13 + 16), (const llvm::APInt *)&v1988, v230, v243, (uint64_t)v247, v248, v1985, *((uint64_t *)&v1985 + 1), (uint64_t)v1982, v1983, v1984);
        v31 = v250;
        v251 = v1999;
        if (v1999 >= HIDWORD(v1999))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
          v251 = v1999;
        }
        v252 = (char *)v1998 + 16 * v251;
        *(_QWORD *)v252 = v249;
        goto LABEL_346;
      }
      v1002 = v234[1];
      v1003 = sub_1C6365158(v232, *v234, v1002);
      if ((*(_DWORD *)(v233 + 92 * v1003 + 4 * v236 + 171588) & v237) != 0)
      {
        v1004 = (v1003 >> 1) & 2 | v1003 & 0xFFFFFFF9 | (4 * ((v1003 >> 1) & 1));
        if ((*(_DWORD *)(v233 + 92 * v1004 + 4 * v236 + 171588) & v237) != 0)
        {
          v1679 = *(_QWORD *)(v13 + 16);
          v1680 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)v233 + 400))(v233, *(_QWORD *)(**(_QWORD **)(v1679 + 40) + 40) + 272, *(_QWORD *)(v1679 + 56), v235, v1002);
          sub_1C5DA4B34(v233, (_QWORD *)v1679, v1680, v1681, (unsigned int *)&v1987, (uint64_t)&v1986, v2001, v1682, 0, 0, 0, 0, &v1981);
          if (v1981)
          {
            *(_OWORD *)v2027 = v1985;
            DWORD2(v1985) = v1983;
            *(_QWORD *)&v1985 = v1982;
            v1982 = v2027[0];
            v1983 = v2027[1];
          }
          if (v2001[0])
          {
            v1688 = sub_1C63698B8(*(_QWORD *)(v13 + 16), (const char *)0xC0, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), v1987, SDWORD2(v1987), v1683, v1986, SDWORD2(v1986), v1985, SDWORD2(v1985), (uint64_t)v1982, v1983, (uint64_t)v2001[0], (int)v2001[1]);
          }
          else
          {
            v1684 = *(_QWORD *)(v1987 + 40) + 16 * DWORD2(v1987);
            *(_QWORD *)&v1986 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, *(llvm **)v1684, *(_QWORD *)(v1684 + 8), 0, 0);
            DWORD2(v1986) = v1685;
            v2001[0] = (void *)sub_1C6367818(*(_QWORD **)(v13 + 16), 0x16u);
            LODWORD(v2001[1]) = v1686;
            v1688 = sub_1C63698B8(*(_QWORD *)(v13 + 16), (const char *)0xC0, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), v1987, SDWORD2(v1987), v1687, v1986, SDWORD2(v1986), v1985, SDWORD2(v1985), (uint64_t)v1982, v1983, (uint64_t)v2001[0], v1686);
          }
          v29 = v1688;
          *(_QWORD *)&v1987 = v1688;
LABEL_885:
          DWORD2(v1987) = v1006;
          *((_WORD *)v29 + 36) = *(_WORD *)(v12 + 72);
          v31 = *((_QWORD *)&v1987 + 1);
LABEL_886:
          v524 = v1999;
          if (v1999 < HIDWORD(v1999))
            goto LABEL_345;
          goto LABEL_887;
        }
        v1005 = sub_1C47DF81C(*(_QWORD **)(v13 + 16), (const llvm::APInt *)&v1988, v1986, SDWORD2(v1986), v1987, SDWORD2(v1987), (uint64_t)v1982, v1983, v1985, SDWORD2(v1985), SHIDWORD(v1985), v1004);
      }
      else
      {
        v1005 = sub_1C47DF81C(*(_QWORD **)(v13 + 16), (const llvm::APInt *)&v1988, v1987, SDWORD2(v1987), v1986, SDWORD2(v1986), (uint64_t)v1982, v1983, v1985, SDWORD2(v1985), SHIDWORD(v1985), v1003);
      }
      v29 = v1005;
      *(_QWORD *)&v1987 = v1005;
      goto LABEL_885;
    case 0xCC:
      v947 = *(_QWORD *)(v12 + 40);
      *(_OWORD *)v2027 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)(v12 + 32) + 40) + 80);
      v949 = *(llvm **)v947;
      v948 = *(void **)(v947 + 8);
      v2015[0] = *(void **)v947;
      v2015[1] = v948;
      if (LOBYTE(v2027[0]))
        v950 = sub_1C47A8C74((unsigned __int8 *)v2027);
      else
        v950 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v2027);
      v1126 = v950;
      if ((_DWORD)v951 == 1)
      if (v1126 == 1)
      {
        v1127 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 1, (const llvm::APInt *)&v1988, v949, (uint64_t)v948, 0, 0);
        v1130 = *(_QWORD *)(v13 + 16);
        v1131 = *(uint64_t **)(v12 + 32);
        v1132 = *v1131;
        v1133 = v1131[1];
        v1134 = *(_QWORD *)(v1130 + 832);
        if (v1134)
          LOWORD(v1134) = *(_WORD *)(v1134 + 8);
        v1135 = sub_1C5D56C70(v1130, 171, (const llvm::APInt *)&v1988, v949, (uint64_t)v948, v1132, v1133, v1129, (uint64_t)v1127, v1128, v1134);
        v1137 = v1136;
        v1139 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, v949, (uint64_t)v948, 0, 0);
        v1141 = *(_QWORD *)(v13 + 16);
        v1142 = *(_QWORD *)(v1141 + 832);
        if (v1142)
          LOWORD(v1142) = *(_WORD *)(v1142 + 8);
        v188 = sub_1C5D56C70(v1141, 57, (const llvm::APInt *)&v1988, v949, (uint64_t)v948, (uint64_t)v1139, v1138, v1140, (uint64_t)v1135, v1137, v1142);
        goto LABEL_163;
      }
      v1143 = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)(v13 + 8), (uint64_t)v949, (uint64_t)v948, *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272, 1);
      v1145 = v1144;
      v1147 = sub_1C6131328((unsigned __int8 *)v2015, v1144, v1146);
      v1150 = sub_1C6131328((unsigned __int8 *)v2027, v1148, v1149);
      v1153 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), v1147 - v1150, (const llvm::APInt *)&v1988, v1143, v1145, 0, 0);
      v1154 = v1151;
      v1155 = *(_QWORD *)(v13 + 16);
      v1156 = *(_QWORD *)(v12 + 40);
      v1157 = *(llvm **)v1156;
      v1158 = *(_QWORD *)(v1156 + 8);
      v1159 = *(_QWORD *)(v1155 + 832);
      if (v1159)
        LOWORD(v1159) = *(_WORD *)(v1159 + 8);
      v1160 = sub_1C5D56C70(v1155, 175, (const llvm::APInt *)&v1988, v1157, v1158, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), v1152, (uint64_t)v1153, v1151, v1159);
      *(_QWORD *)&v1987 = v1160;
      DWORD2(v1987) = v1162;
      v1163 = *(_QWORD *)(v13 + 16);
      v1164 = *(_QWORD *)(v12 + 40);
      v1165 = *(llvm **)v1164;
      v1166 = *(_QWORD *)(v1164 + 8);
      v1167 = *(_QWORD *)(v1163 + 832);
      if (v1167)
        LOWORD(v1167) = *(_WORD *)(v1167 + 8);
      v190 = sub_1C5D56C70(v1163, 176, (const llvm::APInt *)&v1988, v1165, v1166, (uint64_t)v1160, *((unint64_t *)&v1987 + 1), v1161, (uint64_t)v1153, v1154, v1167);
      *(_QWORD *)&v1987 = v190;
      DWORD2(v1987) = v1168;
      v191 = (uint64_t *)*((_QWORD *)&v1987 + 1);
      goto LABEL_164;
    case 0xD0:
      if (sub_1C5D9A4BC(*(uint64_t **)(v13 + 8), v12, (uint64_t)&v1987, *(_QWORD *)(v13 + 16)))
        goto LABEL_201;
      goto LABEL_564;
    case 0xD1:
      if (!sub_1C5D9AC98(*(_QWORD *)(v13 + 8), v12, (uint64_t)&v1987, (uint64_t)&v1986, *(_QWORD *)(v13 + 16)))goto LABEL_564;
LABEL_201:
      v102 = v1987;
      goto LABEL_559;
    case 0xD2:
    case 0xD3:
      v18 = sub_1C5DA4114(*(_QWORD *)(v13 + 8), v12, *(_QWORD **)(v13 + 16));
      goto LABEL_343;
    case 0xD4:
    case 0xD8:
      v87 = sub_1C5CDE958(v13, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), (uint64_t)&v1988, *(_QWORD *)(v13 + 16) + 112, 0);
      goto LABEL_194;
    case 0xD5:
      v689 = *(_QWORD *)(v13 + 16);
      v898 = *(uint64_t **)(v12 + 40);
      v691 = *v898;
      v692 = v898[1];
      v690 = 1;
LABEL_533:
      v865 = sub_1C6366AB4(v689, v690, (const llvm::APInt *)&v1988, (llvm *)v691, v692, 0, 0);
      goto LABEL_534;
    case 0xD7:
      v265 = *(uint64_t **)(v12 + 32);
      v266 = *v265;
      v267 = v265[1];
      v268 = (uint64_t *)(*(_QWORD *)(*v265 + 40) + 16 * v267);
      v87 = sub_1C5CDE958(v13, v266, v267, *v268, v268[1], **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), (uint64_t)&v1988, *(_QWORD *)(v13 + 16) + 112, 0);
LABEL_194:
      *(_QWORD *)&v1987 = v87;
      DWORD2(v1987) = v88;
      if (!v87)
        goto LABEL_564;
      v107 = v87;
      goto LABEL_196;
    case 0xDA:
      if (**(_BYTE **)(v12 + 40) == 10)
        goto LABEL_564;
      v220 = *(_QWORD *)(v13 + 16);
      v221 = *(uint64_t **)(v12 + 32);
      v222 = *v221;
      v223 = v221[1];
      v224 = *(_QWORD *)(v220 + 832);
      if (v224)
        v225 = *(_WORD *)(v224 + 8);
      else
        v225 = 0;
      v400 = sub_1C5D52060(v220, 218, (const llvm::APInt *)&v1988, (llvm *)0xA, 0, v222, v223, v225);
      v401 = *(_QWORD *)(v13 + 16);
      v402 = *(_QWORD *)(v12 + 40);
      v403 = *(llvm **)v402;
      v404 = *(_QWORD *)(v402 + 8);
      v405 = *(_QWORD *)(v401 + 832);
      if (v405)
        v406 = *(_WORD *)(v405 + 8);
      else
        v406 = 0;
      v18 = sub_1C5D52060(v401, 215, (const llvm::APInt *)&v1988, v403, v404, (uint64_t)v400, v399, v406);
      goto LABEL_343;
    case 0xDB:
      if (((*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 8) + 24))(*(_QWORD *)(v13 + 8)) & 1) != 0)
        goto LABEL_564;
      if ((*(_WORD *)(*(_QWORD *)v13 + 1020) & 1) == 0)
        goto LABEL_564;
      v112 = *(uint64_t **)(v12 + 32);
      v113 = *v112;
      v114 = v112[1];
      if (*(unsigned __int8 *)(*(_QWORD *)(*v112 + 40) + 16 * v114) - 11 > 1)
        goto LABEL_564;
      v115 = *(_QWORD *)(v13 + 8);
      if (!*(_QWORD *)(v115 + 176) || (*(unsigned __int8 *)(v115 + 7981) | 4) != 4)
        goto LABEL_564;
      v116 = v13;
      v117 = *(_QWORD *)(v13 + 16);
      v118 = sub_1C63662D4(v117, 0, (const llvm::APInt *)&v1988, 0);
      v121 = *(_QWORD *)(v117 + 832);
      if (v121)
        LOWORD(v121) = *(_WORD *)(v121 + 8);
      v123 = sub_1C5D56C70(v117, 212, (const llvm::APInt *)&v1988, (llvm *)0xA, 0, v113, v114, v120, (uint64_t)v118, v119, v121);
      v124 = *(_QWORD *)(v13 + 16);
      v125 = *(_QWORD *)(v12 + 40);
      v126 = *(llvm **)v125;
      v127 = *(_QWORD *)(v125 + 8);
      v128 = *(_QWORD *)(v124 + 832);
      if (v128)
        v129 = *(_WORD *)(v128 + 8);
      else
        v129 = 0;
      v1658 = sub_1C5D52060(v124, 219, (const llvm::APInt *)&v1988, v126, v127, (uint64_t)v123, v122, v129);
      goto LABEL_1187;
    case 0xDC:
      if (**(_BYTE **)(v12 + 40) == 10)
        goto LABEL_564;
      v270 = *(_QWORD *)(v13 + 16);
      *(_OWORD *)v2027 = xmmword_1C866BAE0;
      v2028 = unk_1C866BAF0;
      v271 = *(_QWORD *)(v12 + 32);
      v272 = *(_DWORD *)(v271 + 8);
      v2015[0] = *(void **)v271;
      LODWORD(v2015[1]) = v272;
      v2015[2] = *(void **)(v271 + 40);
      LODWORD(v2015[3]) = *(_DWORD *)(v271 + 48);
      v273 = sub_1C6366344(v270, (const char *)0xDC, (const llvm::APInt *)&v1988, (uint64_t *)v2027, 2, (uint64_t *)v2015, 2);
      v275 = v274;
      v276 = *(_QWORD *)(v13 + 16);
      *(_OWORD *)v2027 = *(_OWORD *)*(_QWORD *)(v12 + 40);
      LOBYTE(v2028) = 1;
      *((_QWORD *)&v2028 + 1) = 0;
      v2015[0] = v273;
      v2015[1] = (void *)1;
      v2015[2] = v273;
      LODWORD(v2015[3]) = v274;
      v277 = sub_1C6366344(v276, (const char *)0x89, (const llvm::APInt *)&v1988, (uint64_t *)v2027, 2, (uint64_t *)v2015, 2);
      v279 = v275 & 0xFFFFFFFF00000000 | v278;
      v280 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v280 = v1999;
      }
      v281 = (uint64_t **)((char *)v1998 + 16 * v280);
      *v281 = v277;
      v281[1] = (uint64_t *)v279;
      goto LABEL_552;
    case 0xDE:
      v677 = *(void **)(v12 + 64);
      v2015[0] = v677;
      if (v677)
      {
        llvm::MetadataTracking::track((uint64_t)v2015, (unsigned __int8 *)v677, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2015[1]) = v15;
      LOBYTE(v2027[0]) = 0;
      v2029 = 0;
      v2030 = 0;
      v2031 = 0;
      v2032 = 0;
      v2037 = 0;
      LODWORD(v2038) = 0;
      DWORD2(v2028) = 0;
      *(_QWORD *)&v2028 = 0;
      v2027[1] = 0;
      *(_QWORD *)((char *)&v2034 + 5) = 0;
      *(_QWORD *)&v2034 = 0;
      v2033 = 0;
      v2036[0] = 0;
      v2035 = 0;
      *(_QWORD *)((char *)v2036 + 5) = 0;
      v2040 = 1;
      __src = 0;
      sub_1C5CDF6E4(v13, (uint64_t)v2027, (const llvm::APInt *)v2015, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8));
      v678 = (uint64_t *)(*(_QWORD *)(v2037 + 40) + 16 * v2038);
      v679 = (llvm *)*v678;
      v680 = v678[1];
      v681 = sub_1C63666FC(*(_QWORD *)(v13 + 16), (llvm::LLVMContext *)&__src, (const llvm::APInt *)v2015, *v678, v680, 0, 0);
      v684 = *(_QWORD *)(v13 + 16);
      v685 = *(_QWORD *)(v684 + 832);
      if (v685)
        LOWORD(v685) = *(_WORD *)(v685 + 8);
      v686 = sub_1C5D56C70(v684, 173, (const llvm::APInt *)v2015, v679, v680, v2037, v2038, v683, v681, v682, v685);
      v29 = sub_1C5CDFB90(v13, (uint64_t)v2027, (const llvm::APInt *)v2015, (uint64_t)v686, v687);
      v31 = v688;
      if (v2040 >= 0x41 && __src)
        MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
      v132 = (unsigned __int8 *)v2015[0];
      if (!v2015[0])
        goto LABEL_344;
      v133 = v2015;
      goto LABEL_105;
    case 0xDF:
      v175 = *(void **)(v12 + 64);
      v2015[0] = v175;
      if (v175)
      {
        llvm::MetadataTracking::track((uint64_t)v2015, (unsigned __int8 *)v175, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2015[1]) = v15;
      v176 = *(uint64_t **)(v12 + 32);
      v177 = *v176;
      v178 = v176[1];
      v179 = *(_QWORD *)(*v176 + 40) + 16 * v178;
      v180 = *(llvm **)v179;
      v181 = *(_QWORD *)(v179 + 8);
      v182 = *(_QWORD *)(v13 + 8);
      if (v180 == 1)
      {
        if (!(_BYTE)v180)
          goto LABEL_356;
      }
      else if (!(_BYTE)v180 || !*(_QWORD *)(v182 + 8 * v180 + 96))
      {
        goto LABEL_356;
      }
      if ((*(unsigned __int8 *)(v182 + 390 * v180 + 4005) | 4) == 4)
      {
        v283 = sub_1C5D404C4(*(_QWORD *)(v13 + 16), (const llvm::APInt *)v2015, (_BOOL8)v180, v181, 0, 0.0);
        v286 = *(_QWORD *)(v13 + 16);
        v287 = *(_QWORD *)(v286 + 832);
        if (v287)
          LOWORD(v287) = *(_WORD *)(v287 + 8);
        v288 = sub_1C5D56C70(v286, 143, (const llvm::APInt *)v2015, v180, v181, v177, v178, v285, (uint64_t)v283, v284, v287);
        v290 = v289;
LABEL_213:
        if (v2015[0])
          llvm::MetadataTracking::untrack((uint64_t)v2015, (unsigned __int8 *)v2015[0]);
        v291 = v1999;
        if (v1999 >= HIDWORD(v1999))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
          v291 = v1999;
        }
        v292 = (uint64_t **)((char *)v1998 + 16 * v291);
        *v292 = v288;
        v292[1] = v290;
        goto LABEL_563;
      }
LABEL_356:
      LOBYTE(v2027[0]) = 0;
      v2029 = 0;
      v2030 = 0;
      v2031 = 0;
      v2032 = 0;
      v2037 = 0;
      LODWORD(v2038) = 0;
      *(_QWORD *)&v2028 = 0;
      v2027[1] = 0;
      DWORD2(v2028) = 0;
      *(_QWORD *)&v2034 = 0;
      v2033 = 0;
      *(_QWORD *)((char *)&v2034 + 5) = 0;
      v2036[0] = 0;
      v2035 = 0;
      *(_QWORD *)((char *)v2036 + 5) = 0;
      v2040 = 1;
      __src = 0;
      sub_1C5CDF6E4(v13, (uint64_t)v2027, (const llvm::APInt *)v2015, v177, v178);
      v533 = v2037;
      v534 = v2040;
      v535 = *(_QWORD *)(v2037 + 40) + 16 * v2038;
      v536 = *(llvm **)v535;
      v537 = *(_QWORD *)(v535 + 8);
      v538 = *(_QWORD *)(v13 + 16);
      LODWORD(v2011[1]) = v2040;
      if (v2040 > 0x40)
      {
        v1007 = (((unint64_t)v2040 + 63) >> 3) & 0x3FFFFFF8;
        v2011[0] = (void *)operator new[]();
        v539 = __src;
        memcpy(v2011[0], __src, v1007);
        llvm::APInt::flipAllBitsSlowCase((uint64_t)v2011);
        v542 = v2011[1];
        v541 = v2011[0];
      }
      else
      {
        v539 = __src;
        if (v2040)
          v540 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v2040;
        else
          v540 = 0;
        v541 = (void *)(v540 & ~(unint64_t)__src);
        v542 = v2040;
      }
      LODWORD(v2001[1]) = v542;
      v2001[0] = v541;
      v1009 = sub_1C63666FC(v538, (llvm::LLVMContext *)v2001, (const llvm::APInt *)v2015, (uint64_t)v536, v537, 0, 0);
      v1011 = v1010;
      if (LODWORD(v2001[1]) >= 0x41 && v2001[0])
        MEMORY[0x1CAA32F9C](v2001[0], 0x1000C8000313F17);
      v1012 = *(_QWORD *)(v13 + 16);
      v1013 = *(_QWORD *)(v1012 + 832);
      if (v1013)
        LOWORD(v1013) = *(_WORD *)(v1013 + 8);
      v1014 = sub_1C5D56C70(v1012, 171, (const llvm::APInt *)v2015, v536, v537, v533, v2038, v1008, v1009, v1011, v1013);
      v288 = sub_1C5CDFB90(v13, (uint64_t)v2027, (const llvm::APInt *)v2015, (uint64_t)v1014, v1015);
      v290 = v1016;
      if (v534 >= 0x41 && v539)
        MEMORY[0x1CAA32F9C](v539, 0x1000C8000313F17);
      goto LABEL_213;
    case 0xE2:
    case 0xE3:
      v89 = *(uint64_t **)(v12 + 40);
      v90 = *v89;
      v91 = v89[1];
      v92 = *(_QWORD *)(v13 + 8);
      if ((v90 != 1 && (!(_BYTE)v90 || !*(_QWORD *)(v92 + 8 * v90 + 96))
         || (*(unsigned __int8 *)(v92 + 390 * v90 + 4114) | 4) != 4)
        && !*(_QWORD *)(v92 + 8 * (v90 - 10) + 175384))
      {
        goto LABEL_564;
      }
      v93 = v16 == 226 ? 227 : 226;
      v94 = *(_QWORD *)(**(_QWORD **)(v12 + 32) + 48);
      if (!v94)
        goto LABEL_564;
      do
      {
        v95 = *(_QWORD *)(v94 + 16);
        if (v95 != v12)
        {
          v96 = *(unsigned __int16 *)(v95 + 24);
          if (v96 == 252 || v93 == v96)
          {
            v1029 = sub_1C636A8B4(*(_QWORD *)(v13 + 16), v90, v91, v90, v91);
            v107 = sub_1C636D648(*(_QWORD *)(v13 + 16), (const char *)0xFC, (const llvm::APInt *)&v1988, v1029, v1030, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8));
            *(_QWORD *)&v1987 = v107;
            if (*(_WORD *)(v12 + 24) == 227)
              v1032 = 1;
            else
              v1032 = v1031;
            DWORD2(v1987) = v1032;
LABEL_196:
            v108 = (void *)*((_QWORD *)&v1987 + 1);
            v106 = v1999;
LABEL_197:
            if (v106 >= HIDWORD(v1999))
            {
LABEL_1201:
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v106 + 1, 16);
              LODWORD(v106) = v1999;
            }
LABEL_198:
            v269 = (char *)v1998 + 16 * v106;
            *(_QWORD *)v269 = v107;
            goto LABEL_199;
          }
        }
        v94 = *(_QWORD *)(v94 + 32);
      }
      while (v94);
      goto LABEL_564;
    case 0xF6:
    case 0xF7:
      v18 = sub_1C5D9B624(*(_QWORD *)(v13 + 8), v12, *(_QWORD ***)(v13 + 16), v6, v7, v8, v9, v10);
      if (!v18)
        goto LABEL_564;
      goto LABEL_343;
    case 0xFF:
      v773 = *(_DWORD *)(*(_QWORD *)(v13 + 8) + 88);
      v774 = *(void **)(v12 + 64);
      v2027[0] = v774;
      if (v774)
      {
        llvm::MetadataTracking::track((uint64_t)v2027, (unsigned __int8 *)v774, 2);
        v15 = *(_DWORD *)(v12 + 60);
      }
      LODWORD(v2027[1]) = v15;
      v776 = *(uint64_t **)(v12 + 32);
      v775 = *(_QWORD *)(v12 + 40);
      v778 = *(llvm **)v775;
      v777 = *(_QWORD *)(v775 + 8);
      v779 = v776[10];
      v780 = v776[1];
      v781 = sub_1C61420D8(*(_QWORD *)(v13 + 16), *v776, v780, 0, 0, (const llvm::APInt *)v2027);
      v782 = *(_QWORD *)(v12 + 32);
      v783 = *(_QWORD *)(v782 + 48);
      v1916 = *(_QWORD *)(v782 + 40);
      v1934 = v778;
      v1963 = sub_1C612E4E4(*(_QWORD *)(v13 + 16), (uint64_t)v781, v784, (const llvm::APInt *)v2027, v773, v778, v777);
      v785 = *(_QWORD *)(v779 + 80);
      v786 = (unint64_t *)(v785 + 24);
      v1925 = v773;
      v788 = v787;
      if (*(_DWORD *)(v785 + 32) >= 0x41u)
        v786 = (unint64_t *)*v786;
      v789 = *v786;
      v790 = __clz(*v786) ^ 0x3F;
      v791 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v13 + 16) + 40) + 16);
      v792 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v791 + 112))(v791);
      if (*(_DWORD *)(v792 + 8))
        v794 = 57;
      else
        v794 = 56;
      v795 = *(unsigned __int8 *)(v792 + 12);
      v796 = *(_QWORD *)(v13 + 16);
      v797 = *(_QWORD *)(v796 + 832);
      if (v797)
        LOWORD(v797) = *(_WORD *)(v797 + 8);
      v798 = v783;
      v799 = v780 & 0xFFFFFFFF00000000;
      v800 = sub_1C5D56C70(v796, v794, (const llvm::APInt *)v2027, v1934, v777, (uint64_t)v1963, v788, v793, v1916, v798, v797);
      v802 = v801;
      if (v789)
        v803 = v790;
      else
        v803 = 0;
      if (v803 <= v795)
      {
        v809 = v1925;
        v810 = v799;
      }
      else
      {
        v804 = *(_QWORD *)(v13 + 16);
        v805 = sub_1C6366AB4(v804, -1 << v803, (const llvm::APInt *)v2027, v1934, v777, 0, 0);
        v808 = *(_QWORD *)(v804 + 832);
        v809 = v1925;
        if (v808)
          LOWORD(v808) = *(_WORD *)(v808 + 8);
        v810 = v799;
        v800 = sub_1C5D56C70(v804, 171, (const llvm::APInt *)v2027, v1934, v777, (uint64_t)v800, v802, v807, (uint64_t)v805, v806, v808);
        v802 = v811;
      }
      v1080 = *(_QWORD *)(v13 + 16);
      v1081 = sub_1C5D428B0(v1080, v809, *(llvm **)(v800[5] + 16 * v802), *(_QWORD *)(v800[5] + 16 * v802 + 8));
      v1084 = *(_QWORD *)(v1080 + 832);
      if (v1084)
        LOWORD(v1084) = *(_WORD *)(v1084 + 8);
      v1085 = sub_1C5D58E08(v1080, (const char *)0x31, (const llvm::APInt *)v2027, (llvm *)1, 0, (uint64_t)v1963, v810 | 1, v1083, v1081, v1082, (uint64_t)v800, v802, SHIDWORD(v802), v1084);
      v1087 = v1086 | v810;
      v1088 = *(_QWORD *)(v13 + 16);
      v1089 = sub_1C63662D4(v1088, 0, (const llvm::APInt *)v2027, 1);
      v1091 = v1090;
      v1092 = sub_1C63662D4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)v2027, 1);
      v1095 = sub_1C490D7F0(v1088, (uint64_t)v1085, v1087, (uint64_t)v1089, v1091, (uint64_t)v1092, v1093, v1094, 0, 0, (const llvm::APInt *)v2027);
      v1097 = (uint64_t *)v1096;
      v1098 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v1098 = v1999;
      }
      v1099 = (uint64_t **)((char *)v1998 + 16 * v1098);
      *v1099 = v800;
      v1099[1] = (uint64_t *)v802;
      v1100 = (v1999 + 1);
      LODWORD(v1999) = v1100;
      if (v1100 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1100 + 1, 16);
        LODWORD(v1100) = v1999;
      }
      v1101 = (uint64_t **)((char *)v1998 + 16 * v1100);
      *v1101 = v1095;
      v1101[1] = v1097;
      LODWORD(v1999) = v1999 + 1;
      if (v2027[0])
        llvm::MetadataTracking::untrack((uint64_t)v2027, (unsigned __int8 *)v2027[0]);
      goto LABEL_564;
    case 0x102:
      v597 = *(uint64_t **)(v12 + 32);
      v1923 = v597[1];
      v1931 = *v597;
      v1943 = v597[6];
      v1961 = v597[5];
      v598 = v597[10];
      v599 = v597[11];
      v600 = (const llvm::DataLayout *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(v13 + 16) + 40) + 40) + 272);
      v601 = (*(uint64_t (**)(_QWORD, const llvm::DataLayout *, _QWORD))(**(_QWORD **)(v13 + 8) + 32))(*(_QWORD *)(v13 + 8), v600, 0);
      EntrySize = llvm::MachineJumpTableInfo::getEntrySize(*(llvm::MachineJumpTableInfo **)(*(_QWORD *)(*(_QWORD *)(v13 + 16) + 40) + 72), v600);
      v603 = EntrySize;
      v604.i32[0] = EntrySize;
      v605 = (uint8x8_t)vcnt_s8(v604);
      v605.i16[0] = vaddlv_u8(v605);
      v606 = *(_QWORD *)(v13 + 16);
      v607 = *(_QWORD *)(v598 + 40) + 16 * v599;
      v608 = *(llvm **)v607;
      v609 = *(_QWORD *)(v607 + 8);
      if (v605.i32[0] == 1)
      {
        v610 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 31 - __clz(EntrySize), (const llvm::APInt *)&v1988, v608, v609, 0, 0);
        v613 = *(_QWORD *)(v606 + 832);
        if (v613)
          LOWORD(v613) = *(_WORD *)(v613 + 8);
        v614 = sub_1C5D56C70(v606, 175, (const llvm::APInt *)&v1988, v608, v609, v598, v599, v612, (uint64_t)v610, v611, v613);
      }
      else
      {
        v1043 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), EntrySize, (const llvm::APInt *)&v1988, *(llvm **)v607, *(_QWORD *)(v607 + 8), 0, 0);
        v1046 = *(_QWORD *)(v606 + 832);
        if (v1046)
          LOWORD(v1046) = *(_WORD *)(v1046 + 8);
        v614 = sub_1C5D56C70(v606, 58, (const llvm::APInt *)&v1988, v608, v609, v598, v599, v1045, (uint64_t)v1043, v1044, v1046);
      }
      v1047 = (uint64_t)v614;
      v1048 = v599 & 0xFFFFFFFF00000000 | v615;
      v1049 = *(_QWORD *)(v13 + 16);
      v1050 = *(_QWORD *)(v1047 + 40) + 16 * v615;
      v1051 = *(llvm **)v1050;
      v1052 = *(_QWORD *)(v1050 + 8);
      v1053 = *(_QWORD *)(v1049 + 832);
      if (v1053)
        LOWORD(v1053) = *(_WORD *)(v1053 + 8);
      v1054 = sub_1C5D56C70(v1049, 56, (const llvm::APInt *)&v1988, v1051, v1052, v1047, v1048, v616, v1961, v1943, v1053);
      v1056 = v1055;
      v1057 = (llvm::LLVMContext *)(8 * v603);
      if ((int)v1057 > 63)
      {
        if ((_DWORD)v1057 == 64)
        {
          v1058 = 0;
          v1059 = 0;
          v1060 = 6;
          goto LABEL_1192;
        }
        if ((_DWORD)v1057 == 128)
        {
          v1058 = 0;
          v1059 = 0;
          v1060 = 7;
          goto LABEL_1192;
        }
      }
      else
      {
        switch((_DWORD)v1057)
        {
          case 0x20:
            v1058 = 0;
            v1059 = 0;
            v1060 = 5;
            goto LABEL_1192;
          case 0x10:
            v1058 = 0;
            v1059 = 0;
            v1060 = 4;
            goto LABEL_1192;
          case 8:
            v1058 = 0;
            v1059 = 0;
            v1060 = 3;
            goto LABEL_1192;
        }
      }
      ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)(v13 + 16) + 56), v1057);
      v1059 = v1768;
      v1058 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
      v1060 = ExtendedIntegerVT;
LABEL_1192:
      v1664 = v1060 | v1058;
      v1665 = *(_QWORD *)(v13 + 16);
      JumpTable = llvm::PseudoSourceValueManager::getJumpTable(*(llvm::PseudoSourceValueManager **)(*(_QWORD *)(v1665 + 40)
                                                                                                  + 432));
      v1668 = 0;
      *(_QWORD *)&v1978 = JumpTable | 4;
      *((_QWORD *)&v1978 + 1) = 0;
      v1980 = 0;
      if (JumpTable)
        v1668 = *(_DWORD *)(JumpTable + 12);
      v1979 = v1668;
      v2028 = 0u;
      *(_OWORD *)v2027 = 0u;
      v1669 = sub_1C636B4C8(v1665, 2, (uint64_t)&v1988, v601, 0, v1931, v1923, v1667, (uint64_t)v1054, v1056, &v1978, v1664, v1059, 0, (unsigned __int128)(unint64_t)v1059 >> 96, 0, (uint64_t)v2027);
      v1671 = v1056 & 0xFFFFFFFF00000000 | v1670;
      if ((*(unsigned int (**)(_QWORD))(**(_QWORD **)(v13 + 8) + 704))(*(_QWORD *)(v13 + 8)))
      {
        v1672 = *(_QWORD *)(v13 + 16);
        v1673 = (*(uint64_t (**)(_QWORD, uint64_t, unint64_t, uint64_t))(**(_QWORD **)(v13 + 8) + 1568))(*(_QWORD *)(v13 + 8), v1961, v1943, v1672);
        v1676 = *(_QWORD *)(v1672 + 832);
        if (v1676)
          LOWORD(v1676) = *(_WORD *)(v1676 + 8);
        v1677 = sub_1C5D56C70(v1672, 56, (const llvm::APInt *)&v1988, (llvm *)v601, 0, (uint64_t)v1669, v1671, v1675, v1673, v1674, v1676);
        v1671 = v1678 | v1056 & 0xFFFFFFFF00000000;
      }
      else
      {
        v1677 = v1669;
      }
      v1598 = (uint64_t *)(*(uint64_t (**)(_QWORD, unsigned __int8 **, uint64_t *, uint64_t, uint64_t *, unint64_t, _QWORD))(**(_QWORD **)(v13 + 8) + 2184))(*(_QWORD *)(v13 + 8), &v1988, v1669, 1, v1677, v1671, *(_QWORD *)(v13 + 16));
      goto LABEL_1200;
    case 0x103:
      v855 = *(_QWORD *)(v12 + 32);
      v856 = *(_DWORD *)(v855 + 8);
      *(_QWORD *)&v1987 = *(_QWORD *)v855;
      v857 = v855 + 40;
      v858 = *(_QWORD *)(v855 + 40);
      DWORD2(v1987) = v856;
      *(_QWORD *)&v1986 = v858;
      DWORD2(v1986) = *(_DWORD *)(v855 + 48);
      v859 = *(unsigned __int16 *)(v858 + 24);
      switch(v859)
      {
        case 51:
          goto LABEL_980;
        case 171:
          v1387 = *(_QWORD *)(*(_QWORD *)(v858 + 32) + 40);
          v1388 = *(unsigned __int16 *)(v1387 + 24);
          if (v1388 == 35 || v1388 == 11)
          {
            v1390 = *(_QWORD *)(v1387 + 80);
            v1391 = (_QWORD *)(v1390 + 24);
            if (*(_DWORD *)(v1390 + 32) >= 0x41u)
              v1391 = (_QWORD *)*v1391;
            if (*v1391 == 1)
            {
LABEL_980:
              v1392 = v13;
              *(_QWORD *)&v1985 = *(_QWORD *)v857;
              DWORD2(v1985) = *(_DWORD *)(v857 + 8);
              goto LABEL_1168;
            }
          }
          break;
        case 193:
          v860 = *(uint64_t **)(v858 + 32);
          if (*(_QWORD *)(*(_QWORD *)(*v860 + 40) + 16 * *((unsigned int *)v860 + 2)))
          {
            v861 = *(_QWORD *)(v13 + 8);
            v862 = *(_QWORD *)(*(_QWORD *)(*v860 + 40) + 16 * *((unsigned int *)v860 + 2));
            if (((_DWORD)v862 == 1 || *(_QWORD *)(v861 + 8 * v862 + 96))
              && (*(unsigned __int8 *)(v861
                                     + 390
                                     * *(_QWORD *)(*(_QWORD *)(*v860 + 40)
                                                                  + 16 * *((unsigned int *)v860 + 2))
                                     + 4122) | 4) == 4)
            {
              v1598 = sub_1C63698B8(*(_QWORD *)(v13 + 16), (const char *)0x104, (const llvm::APInt *)&v1988, (llvm *)1, 0, v1987, SDWORD2(v1987), v10, v860[10], v860[11], *v860, v860[1], v860[5], v860[6], *(_QWORD *)(v855 + 80), *(_QWORD *)(v855 + 88));
              goto LABEL_1200;
            }
          }
          break;
      }
      v1392 = v13;
      v1600 = *(_QWORD *)(v13 + 16);
      v1601 = *(_QWORD *)(v858 + 40) + 16 * DWORD2(v1986);
      v1602 = *(llvm **)v1601;
      v1603 = *(_QWORD *)(v1601 + 8);
      v1604 = sub_1C6366AB4(v1600, 1, (const llvm::APInt *)&v1988, *(llvm **)v1601, v1603, 0, 0);
      v1607 = *(_QWORD *)(v1600 + 832);
      if (v1607)
        LOWORD(v1607) = *(_WORD *)(v1607 + 8);
      *(_QWORD *)&v1985 = sub_1C5D56C70(v1600, 171, (const llvm::APInt *)&v1988, v1602, v1603, v858, *((unint64_t *)&v1986 + 1), v1606, (uint64_t)v1604, v1605, v1607);
      DWORD2(v1985) = v1608;
LABEL_1168:
      v1609 = *(_QWORD **)(v1392 + 16);
      v1610 = sub_1C6367818(v1609, 0x16u);
      v1612 = v1611;
      v13 = v1392;
      v1613 = *(_QWORD *)(v1985 + 40) + 16 * DWORD2(v1985);
      v1614 = sub_1C6366AB4(*(_QWORD *)(v1392 + 16), 0, (const llvm::APInt *)&v1988, *(llvm **)v1613, *(_QWORD *)(v1613 + 8), 0, 0);
      v1598 = sub_1C63698B8((uint64_t)v1609, (const char *)0x104, (const llvm::APInt *)&v1988, (llvm *)1, 0, v1987, SDWORD2(v1987), v1616, v1610, v1612, v1985, SDWORD2(v1985), (uint64_t)v1614, v1615, *(_QWORD *)(*(_QWORD *)(v12 + 32) + 80), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 88));
LABEL_1200:
      v107 = v1598;
      *(_QWORD *)&v1987 = v1598;
      DWORD2(v1987) = v1599;
      v108 = (void *)*((_QWORD *)&v1987 + 1);
      v106 = v1999;
      if (v1999 >= HIDWORD(v1999))
        goto LABEL_1201;
      goto LABEL_198;
    case 0x104:
      v2027[0] = 0;
      LODWORD(v2027[1]) = 0;
      v654 = *(_QWORD *)(v12 + 32);
      v655 = *(_DWORD *)(v654 + 8);
      *(_QWORD *)&v1987 = *(_QWORD *)v654;
      DWORD2(v1987) = v655;
      *(_QWORD *)&v1986 = *(_QWORD *)(v654 + 80);
      DWORD2(v1986) = *(_DWORD *)(v654 + 88);
      DWORD2(v1985) = *(_DWORD *)(v654 + 128);
      *(_QWORD *)&v1985 = *(_QWORD *)(v654 + 120);
      v1982 = *(void **)(v654 + 40);
      v1983 = *(_DWORD *)(v654 + 48);
      v656 = *(_QWORD *)(v13 + 8);
      v657 = *(_QWORD *)(v13 + 16);
      v658 = (_QWORD *)(*(_QWORD *)(v1986 + 40) + 16 * DWORD2(v1986));
      v659 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)v656 + 400))(v656, *(_QWORD *)(**(_QWORD **)(v657 + 40) + 40) + 272, *(_QWORD *)(v657 + 56), *v658, v658[1]);
      sub_1C5DA4B34(v656, (_QWORD *)v657, v659, v660, (unsigned int *)&v1986, (uint64_t)&v1985, &v1982, v661, 0, 0, 0, 0, &v1981);
      if (v1982)
      {
        v85 = sub_1C63698B8(*(_QWORD *)(v13 + 16), (const char *)0x104, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), v1987, SDWORD2(v1987), v662, (uint64_t)v1982, v1983, v1986, SDWORD2(v1986), v1985, SDWORD2(v1985), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 160), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 168));
      }
      else
      {
        v663 = *(_QWORD *)(v1986 + 40) + 16 * DWORD2(v1986);
        *(_QWORD *)&v1985 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, *(llvm **)v663, *(_QWORD *)(v663 + 8), 0, 0);
        DWORD2(v1985) = v664;
        if (v1981)
          v665 = 17;
        else
          v665 = 22;
        v1982 = (void *)sub_1C6367818(*(_QWORD **)(v13 + 16), v665);
        v1983 = v666;
        v85 = sub_1C63698B8(*(_QWORD *)(v13 + 16), (const char *)0x104, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), v1987, SDWORD2(v1987), v667, (uint64_t)v1982, v666, v1986, SDWORD2(v1986), v1985, SDWORD2(v1985), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 160), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 168));
      }
LABEL_265:
      v107 = v85;
      *(_QWORD *)&v1987 = v85;
      DWORD2(v1987) = v86;
      goto LABEL_196;
    case 0x10B:
      v863 = *(_QWORD *)(v13 + 16);
      v864 = *(_DWORD *)(*(_QWORD *)(v13 + 8) + 88);
      if (!v864)
      {
        v865 = sub_1C61312D0(v863, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8));
LABEL_534:
        v899 = v865;
        v900 = v866;
        v901 = v1999;
        if (v1999 >= HIDWORD(v1999))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
          v901 = v1999;
        }
        v902 = (char *)v1998 + 16 * v901;
        *v902 = v899;
        v902[1] = v900;
        v100 = HIDWORD(v1999);
        v101 = (v1999 + 1);
        LODWORD(v1999) = v1999 + 1;
        v102 = *(_OWORD *)*(_QWORD *)(v12 + 32);
        goto LABEL_560;
      }
      v134 = sub_1C612E4E4(v863, **(_QWORD **)(v12 + 32), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 8), (const llvm::APInt *)&v1988, v864, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8));
LABEL_109:
      v136 = v134;
      v137 = v135;
      v138 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v138 = v1999;
      }
      v139 = (uint64_t **)((char *)v1998 + 16 * v138);
      *v139 = v136;
      v139[1] = v137;
      v140 = (v1999 + 1);
      LODWORD(v1999) = v140;
      v141 = (char *)v1998;
      v142 = *(uint64_t **)v1998;
      if (v140 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v140 + 1, 16);
        v141 = (char *)v1998;
        LODWORD(v140) = v1999;
      }
LABEL_113:
      v143 = (uint64_t **)&v141[16 * v140];
      *v143 = v142;
LABEL_556:
      v143[1] = (uint64_t *)1;
      goto LABEL_563;
    case 0x10C:
      v194 = *(_DWORD *)(*(_QWORD *)(v13 + 8) + 88);
      if (!v194)
        goto LABEL_558;
      v195 = *(_QWORD *)(v13 + 16);
      v196 = *(uint64_t **)(v12 + 32);
      v197 = *v196;
      v198 = v196[1];
      v199 = v196[5];
      v200 = v196[6];
      v201 = *(_QWORD *)(v199 + 40) + 16 * v200;
      v202 = sub_1C5D428B0(v195, v194, *(llvm **)v201, *(_QWORD *)(v201 + 8));
      v205 = *(_QWORD *)(v195 + 832);
      if (v205)
        LOWORD(v205) = *(_WORD *)(v205 + 8);
      v18 = sub_1C5D58E08(v195, (const char *)0x31, (const llvm::APInt *)&v1988, (llvm *)1, 0, v197, v198, v204, v202, v203, v199, v200, SHIDWORD(v200), v205);
      goto LABEL_343;
    case 0x10F:
      v134 = sub_1C5D43CC4(*(_QWORD *)(v13 + 16), v12);
      goto LABEL_109;
    case 0x110:
      v18 = sub_1C63682AC(*(_QWORD *)(v13 + 16), v12);
      goto LABEL_343;
    case 0x118:
      v969 = *(unsigned __int16 *)(v12 + 58) - 1;
      v970 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), 0, 0);
      sub_1C63299CC((unsigned int *)&v1998, v969, (uint64_t)v970, v971);
LABEL_558:
      v102 = *(_OWORD *)*(_QWORD *)(v12 + 32);
      goto LABEL_559;
    case 0x122:
      v952 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), 0, 0);
      v954 = v953;
      v955 = sub_1C636A8B4(*(_QWORD *)(v13 + 16), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), 1, 0);
      v956 = *(_QWORD *)(v13 + 16);
      v957 = *(_QWORD *)(v12 + 80);
      v958 = *(_QWORD *)(v12 + 88);
      v959 = *(_QWORD *)(v12 + 32);
      v960 = *(void **)v959;
      v961 = *(_QWORD *)(v959 + 8);
      v963 = *(_QWORD *)(v959 + 40);
      v962 = *(_QWORD *)(v959 + 48);
      v964 = *(_QWORD *)(v12 + 96);
      v2027[0] = v960;
      LODWORD(v2027[1]) = v961;
      *(_QWORD *)&v2028 = v963;
      DWORD2(v2028) = v962;
      v2029 = v952;
      v2030 = v954;
      v2031 = v952;
      v2032 = v954;
      v277 = sub_1C636A43C(v956, 292, (uint64_t)&v1988, v957, v958, v955, v965, v966, (uint64_t *)v2027, 4, v964);
      v967 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v967 = v1999;
      }
      v968 = (uint64_t **)((char *)v1998 + 16 * v967);
      *v968 = v277;
      v968[1] = 0;
LABEL_552:
      v559 = HIDWORD(v1999);
      v558 = (v1999 + 1);
      LODWORD(v1999) = v1999 + 1;
      goto LABEL_553;
    case 0x123:
      v557 = *(uint64_t **)(v12 + 32);
      v277 = sub_1C636A7A0(*(_QWORD *)(v13 + 16), 294, (uint64_t)&v1988, *(_QWORD *)(v12 + 80), *(_QWORD *)(v12 + 88), *v557, v557[1], v10, v557[5], v557[6], v557[10], v557[11], *(_QWORD *)(v12 + 96));
LABEL_374:
      v558 = v1999;
      v559 = HIDWORD(v1999);
LABEL_553:
      if (v558 >= v559)
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v558 + 1, 16);
        LODWORD(v558) = v1999;
      }
      v143 = (uint64_t **)((char *)v1998 + 16 * v558);
      *v143 = v277;
      goto LABEL_556;
    case 0x125:
      v912 = sub_1C636A8B4(*(_QWORD *)(v13 + 16), **(_QWORD **)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), 1, 0);
      v913 = *(_QWORD *)(v13 + 16);
      v914 = *(_QWORD *)(v12 + 80);
      v915 = *(_QWORD *)(v12 + 88);
      v916 = *(_QWORD *)(v12 + 32);
      v917 = *(void **)v916;
      v918 = *(_QWORD *)(v916 + 8);
      v919 = *(_QWORD *)(v916 + 40);
      v920 = *(_QWORD *)(v916 + 48);
      v921 = *(uint64_t **)(v916 + 80);
      v922 = *(_QWORD *)(v916 + 88);
      v924 = *(_QWORD **)(v916 + 120);
      v923 = *(_QWORD *)(v916 + 128);
      v925 = *(_QWORD *)(v12 + 96);
      v2027[0] = v917;
      LODWORD(v2027[1]) = v918;
      *(_QWORD *)&v2028 = v919;
      DWORD2(v2028) = v920;
      v2029 = v921;
      v2030 = v922;
      v2031 = v924;
      v2032 = v923;
      v928 = sub_1C636A43C(v913, 292, (uint64_t)&v1988, v914, v915, v912, v926, v927, (uint64_t *)v2027, 4, v925);
      v930 = v929;
      v931 = *(_QWORD *)(v12 + 40);
      v932 = *(_QWORD *)(*(_QWORD *)(v12 + 32) + 48);
      v934 = *(_QWORD *)(v12 + 80);
      v933 = *(_QWORD *)(v12 + 88);
      v936 = *(llvm **)v931;
      v935 = *(_QWORD *)(v931 + 8);
      v937 = (*(uint64_t (**)(_QWORD))(**(_QWORD **)(v13 + 8) + 984))(*(_QWORD *)(v13 + 8));
      v1967 = v928;
      if (v937 == 200)
      {
        v1352 = sub_1C5D3F9A0(*(_QWORD *)(v13 + 16), (uint64_t)v928, v930, (const llvm::APInt *)&v1988, v934, v933);
        v944 = v930 & 0xFFFFFFFF00000000 | v1353;
        v1354 = sub_1C5D3F9A0(*(_QWORD *)(v13 + 16), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 80), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 88), (const llvm::APInt *)&v1988, v934, v933);
      }
      else
      {
        v1946 = v932;
        if (v937 == 199)
        {
          v938 = *(_QWORD *)(v13 + 16);
          v939 = sub_1C6367494(v938, v934, v933);
          v942 = *(_QWORD *)(v938 + 832);
          if (v942)
            LOWORD(v942) = *(_WORD *)(v942 + 8);
          v928 = sub_1C5D56C70(v938, 4, (const llvm::APInt *)&v1988, v936, v935, (uint64_t)v928, v930, v941, v939, v940, v942);
          v944 = v930 & 0xFFFFFFFF00000000 | v943;
          v945 = sub_1C5D3F9A0(*(_QWORD *)(v13 + 16), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 80), *(_QWORD *)(*(_QWORD *)(v12 + 32) + 88), (const llvm::APInt *)&v1988, v934, v933);
        }
        else
        {
          v1355 = *(_QWORD *)(v13 + 16);
          v1356 = sub_1C6367494(v1355, v934, v933);
          v1359 = *(_QWORD *)(v1355 + 832);
          if (v1359)
            LOWORD(v1359) = *(_WORD *)(v1359 + 8);
          v928 = sub_1C5D56C70(v1355, 3, (const llvm::APInt *)&v1988, v936, v935, (uint64_t)v928, v930, v1358, v1356, v1357, v1359);
          v944 = v930 & 0xFFFFFFFF00000000 | v1360;
          v1361 = *(_QWORD *)(v13 + 16);
          v1362 = *(_QWORD *)(v12 + 32);
          v1363 = *(_QWORD *)(v1362 + 80);
          v1938 = *(_QWORD *)(v1362 + 88);
          v1364 = sub_1C6367494(v1361, v934, v933);
          v1367 = *(_QWORD *)(v1361 + 832);
          if (v1367)
            LOWORD(v1367) = *(_WORD *)(v1367 + 8);
          v945 = sub_1C5D56C70(v1361, 204, (const llvm::APInt *)&v1988, v936, v935, v1363, v1938, v1366, v1364, v1365, v1367);
        }
        v1354 = v945;
        v1352 = v928;
        v932 = v1946;
      }
      v1368 = v932 & 0xFFFFFFFF00000000 | v946;
      v1369 = *(_QWORD **)(v13 + 16);
      v1370 = *(_QWORD *)(v12 + 40);
      v1371 = *(llvm **)(v1370 + 16);
      v1372 = *(_QWORD *)(v1370 + 24);
      v1373 = sub_1C6367818(v1369, 0x11u);
      v1376 = v1369[104];
      if (v1376)
        LOWORD(v1376) = *(_WORD *)(v1376 + 8);
      v1377 = sub_1C5D58E08((uint64_t)v1369, (const char *)0xC1, (const llvm::APInt *)&v1988, v1371, v1372, (uint64_t)v1352, v944, v1375, (uint64_t)v1354, v1368, v1373, v1374, SHIDWORD(v1374), v1376);
      v1379 = v1378;
      v1380 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v1380 = v1999;
      }
      v1381 = (uint64_t **)((char *)v1998 + 16 * v1380);
      *v1381 = v928;
      v1381[1] = 0;
      v1382 = (v1999 + 1);
      LODWORD(v1999) = v1382;
      if (v1382 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1382 + 1, 16);
        LODWORD(v1382) = v1999;
      }
      v1383 = (uint64_t **)((char *)v1998 + 16 * v1382);
      *v1383 = v1377;
      v1383[1] = v1379;
      v140 = (v1999 + 1);
      LODWORD(v1999) = v140;
      v142 = v1967;
      if (v140 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v140 + 1, 16);
        LODWORD(v140) = v1999;
      }
      v141 = (char *)v1998;
      goto LABEL_113;
    case 0x13C:
      v903 = sub_1C6366AB4(*(_QWORD *)(v13 + 16), 0, (const llvm::APInt *)&v1988, **(llvm ***)(v12 + 40), *(_QWORD *)(*(_QWORD *)(v12 + 40) + 8), 0, 0);
      v905 = v904;
      v906 = v1999;
      if (v1999 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v1999 + 1, 16);
        v906 = v1999;
      }
      v907 = (char *)v1998 + 16 * v906;
      *v907 = v903;
      v907[1] = v905;
      v908 = (v1999 + 1);
      LODWORD(v1999) = v908;
      v909 = (char *)v1998;
      v910 = *(uint64_t **)v1998;
      if (v908 >= HIDWORD(v1999))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v1998, (uint64_t)v2000, v908 + 1, 16);
        v909 = (char *)v1998;
        LODWORD(v908) = v1999;
      }
      v911 = &v909[16 * v908];
      *(_QWORD *)v911 = v910;
      *((_QWORD *)v911 + 1) = 0;
      goto LABEL_563;
    case 0x141:
    case 0x142:
    case 0x143:
    case 0x144:
    case 0x145:
    case 0x146:
    case 0x147:
    case 0x148:
    case 0x149:
    case 0x14A:
    case 0x14B:
    case 0x14C:
    case 0x14D:
      v18 = sub_1C5DA3BA4(*(_QWORD *)(v13 + 8), v12, *(_QWORD *)(v13 + 16));
      goto LABEL_343;
    default:
      goto LABEL_564;
  }
}

void sub_1C5CD9644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  int v9;
  int v10;
  int v11;
  unsigned __int8 v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unsigned int v28;
  int v29;
  int FPEXT;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  unsigned __int8 *v48;
  int v49;
  unsigned __int8 v50;
  int v51;
  unsigned int v52;
  uint64_t v53;
  unsigned __int8 *v54;
  llvm *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  __int16 v61;
  int v62;
  int v63;
  int v64;
  int v65;
  char v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;
  BOOL v70;
  BOOL v71;
  uint64_t v72;
  int v73;
  unsigned __int8 *v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 *v79;
  uint64_t v80;
  _QWORD *v81;
  unsigned int v82;
  int v83;
  BOOL v84;
  int v85;
  int v86;
  BOOL v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  unsigned int v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  unsigned __int8 *v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  unsigned __int8 *v101;
  __int128 v102;
  unsigned int v103;
  uint64_t v104;
  __int128 v105;
  void *v106;
  uint64_t v107;
  void *v108;
  uint64_t v109;
  unsigned int v110;
  _QWORD *v111;
  __int128 v112;
  unsigned int v113;
  uint64_t v114;
  uint64_t *v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  unsigned __int8 *v119;
  uint64_t v120;
  llvm *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t *v124;
  uint64_t *v125;
  uint64_t *v126;
  unsigned int v127;
  uint64_t **v128;
  unsigned __int8 *v129;
  __n128 *p_p;
  unsigned int OUTLINE_ATOMIC;
  uint64_t *v132;
  uint64_t v133;
  char *v134;
  int SYNC;
  unsigned int v136;
  __int128 v137;
  unsigned int v138;
  unsigned __int8 *v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  unsigned __int8 *v143;
  __int128 v144;
  unsigned int v145;
  uint64_t v146;
  __int128 v147;
  _BOOL4 v148;
  int v149;
  _BOOL4 v151;
  _BOOL8 v152;
  uint64_t *v153;
  unsigned int *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unsigned __int8 *v160;
  unsigned int v161;
  int SINTTOFP;
  int v163;
  uint64_t *v164;
  uint64_t v165;
  uint64_t v166;
  _BOOL4 v167;
  int v168;
  uint64_t v169;
  uint64_t *v170;
  uint64_t v171;
  uint64_t v172;
  llvm *v173;
  uint64_t v174;
  unsigned __int8 *v175;
  unsigned int v176;
  int FPTOSINT;
  int v178;
  uint64_t *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  _BOOL4 v183;
  uint64_t *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t *v189;
  uint64_t v190;
  unint64_t v191;
  uint64_t v192;
  __int16 v193;
  uint64_t *v194;
  uint64_t v195;
  BOOL v196;
  uint64_t v197;
  uint64_t v198;
  unsigned __int8 *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  __int16 v203;
  _BOOL4 v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t ExtendedSizeInBits;
  const char *v209;
  uint64_t v210;
  unsigned __int8 *v211;
  uint64_t v212;
  __int128 v213;
  unsigned int v214;
  uint64_t v215;
  __int128 v216;
  uint64_t *v217;
  uint64_t *v218;
  uint64_t *v219;
  unsigned int v220;
  uint64_t **v221;
  uint64_t v222;
  __int128 v223;
  uint64_t v224;
  uint64_t *v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  size_t v234;
  int v235;
  __int128 v236;
  unsigned int v237;
  uint64_t *v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  llvm::PointerType *v244;
  llvm::PointerType *v245;
  uint64_t *v246;
  uint64_t v247;
  int v248;
  _QWORD *v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  __int128 v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  unsigned __int8 v268;
  size_t v269;
  int v270;
  int v271;
  unsigned __int8 *v272;
  unsigned __int8 *v273;
  int v274;
  uint64_t v275;
  char *v276;
  uint64_t v277;
  uint64_t v278;
  _QWORD *v279;
  uint64_t v280;
  uint64_t v281;
  unsigned int v282;
  _QWORD *v283;
  uint64_t v284;
  _QWORD *v285;
  uint64_t v286;
  uint64_t v287;
  unsigned int v288;
  _QWORD *v289;
  uint64_t *v290;
  uint64_t v291;
  uint64_t v292;
  _QWORD *v293;
  int FPROUND;
  unsigned __int8 *v295;
  uint64_t v296;
  unsigned __int8 *v297;
  __int128 v298;
  unsigned int v299;
  uint64_t v300;
  __int128 v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  llvm::PointerType *v305;
  char *v306;
  char *v307;
  char *v308;
  char *v309;
  unsigned int *v310;
  unsigned int *v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  unsigned int v315;
  unint64_t v316;
  unint64_t v317;
  char *v318;
  char *v319;
  char *v320;
  __int128 v321;
  __int128 v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  uint64_t v330;
  unint64_t v331;
  unint64_t v332;
  char *v333;
  char *v334;
  char *v335;
  char *v336;
  __int128 v337;
  __int128 v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  unsigned __int8 v343;
  size_t v344;
  int v345;
  int v346;
  unsigned __int8 *v347;
  unsigned __int8 *v348;
  int v349;
  int v350;
  uint64_t v351;
  char *v352;
  uint64_t v353;
  uint64_t v354;
  _QWORD *v355;
  uint64_t v356;
  uint64_t v357;
  __int128 v358;
  unsigned int v359;
  uint64_t v360;
  _QWORD *v361;
  uint64_t v362;
  int v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  __int16 v368;
  uint64_t v369;
  __int16 v370;
  uint64_t v371;
  uint64_t v372;
  __int128 v373;
  uint64_t v374;
  uint64_t v375;
  _BOOL4 v376;
  llvm::PointerType *v377;
  llvm::PointerType *v378[2];
  llvm::PointerType *v379[2];
  llvm::PointerType *v380[2];
  llvm::PointerType *v381[2];
  uint64_t v382;
  __int128 v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  __int16 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  _QWORD v396[2];
  char v397;
  uint64_t v398;
  char v399;
  _QWORD v400[2];
  char v401;
  uint64_t v402;
  char v403;
  _QWORD v404[2];
  char v405;
  uint64_t v406;
  char v407;
  _QWORD v408[2];
  char v409;
  uint64_t v410;
  char v411;
  _QWORD v412[2];
  char v413;
  uint64_t v414;
  char v415;
  __int128 v416;
  __int128 v417;
  __int16 v418;
  _QWORD v419[2];
  char v420;
  uint64_t v421;
  char v422;
  unsigned __int8 *v423;
  int v424;
  uint64_t v425;
  uint64_t v426[2];
  __n128 __p;
  __int128 v428;
  uint64_t *v429;
  _QWORD v430[2];
  unsigned __int8 *v431;
  int v432;
  unsigned __int8 *v433;
  uint64_t v434;
  void *v435;
  uint64_t v436;
  _BYTE v437[128];
  __int128 v438;
  _BYTE v439[24];
  size_t v440;
  int v441;
  char *v442;
  char *v443;
  char *v444;
  uint64_t v445;
  unsigned __int8 *v446;
  int v447;
  uint64_t v448;
  _BYTE *v449;
  uint64_t v450;
  _BYTE v451[1536];
  _BYTE *v452;
  uint64_t v453;
  _BYTE v454[512];
  _BYTE *v455;
  uint64_t v456;
  _BYTE v457[1536];
  _BYTE *v458;
  uint64_t v459;
  _BYTE v460[64];
  char v461;
  char v462;
  uint64_t v463;

  v4 = MEMORY[0x1E0C80A78](a1, a2, a3, a4);
  v6 = v5;
  v7 = v4;
  v463 = *MEMORY[0x1E0C80C00];
  v435 = v437;
  v436 = 0x800000000;
  v8 = *(unsigned __int8 **)(v5 + 64);
  v423 = v8;
  if (v8)
    llvm::MetadataTracking::track((uint64_t)&v423, v8, 2);
  v9 = *(_DWORD *)(v6 + 60);
  v424 = v9;
  v10 = *(unsigned __int16 *)(v6 + 24);
  switch(*(_WORD *)(v6 + 24))
  {
    case 0x3A:
      v86 = (**(_BYTE **)(v6 + 40) - 3) + 12;
      v87 = **(unsigned __int8 **)(v6 + 40) - 3 >= 5;
      v88 = 17;
      goto LABEL_176;
    case 0x3B:
      v83 = (**(_BYTE **)(v6 + 40) - 3) + 21;
      v84 = **(unsigned __int8 **)(v6 + 40) - 3 >= 5;
      v85 = 26;
      goto LABEL_141;
    case 0x3C:
      v86 = (**(_BYTE **)(v6 + 40) - 3) + 27;
      v87 = **(unsigned __int8 **)(v6 + 40) - 3 >= 5;
      v88 = 32;
      goto LABEL_176;
    case 0x3D:
      v83 = (**(_BYTE **)(v6 + 40) - 3) + 33;
      v84 = **(unsigned __int8 **)(v6 + 40) - 3 >= 5;
      v85 = 38;
LABEL_141:
      if (v84)
        v82 = v85;
      else
        v82 = v83;
      v89 = v7;
      v90 = v6;
      v91 = 1;
      goto LABEL_181;
    case 0x3E:
      v86 = (**(_BYTE **)(v6 + 40) - 3) + 39;
      v87 = **(unsigned __int8 **)(v6 + 40) - 3 >= 5;
      v88 = 44;
      goto LABEL_176;
    case 0x3F:
    case 0x40:
    case 0x43:
    case 0x44:
    case 0x45:
    case 0x46:
    case 0x47:
    case 0x48:
    case 0x49:
    case 0x4A:
    case 0x4B:
    case 0x4C:
    case 0x4D:
    case 0x4E:
    case 0x4F:
    case 0x50:
    case 0x51:
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x55:
    case 0x56:
    case 0x57:
    case 0x58:
    case 0x59:
    case 0x5A:
    case 0x5B:
    case 0x5C:
    case 0x5D:
    case 0x5E:
    case 0x5F:
    case 0x82:
    case 0x83:
    case 0x8A:
    case 0x8B:
    case 0x8C:
    case 0x8E:
    case 0x8F:
    case 0x90:
    case 0x91:
    case 0x92:
    case 0x93:
    case 0x94:
    case 0x95:
    case 0x96:
    case 0x97:
    case 0x98:
    case 0x99:
    case 0x9A:
    case 0x9B:
    case 0x9C:
    case 0x9D:
    case 0x9E:
    case 0x9F:
    case 0xA0:
    case 0xA1:
    case 0xA2:
    case 0xA3:
    case 0xA4:
    case 0xA5:
    case 0xA6:
    case 0xA7:
    case 0xA8:
    case 0xA9:
    case 0xAA:
    case 0xAB:
    case 0xAC:
    case 0xAD:
    case 0xAE:
    case 0xAF:
    case 0xB0:
    case 0xB1:
    case 0xB2:
    case 0xB3:
    case 0xB4:
    case 0xB5:
    case 0xB6:
    case 0xB7:
    case 0xB8:
    case 0xB9:
    case 0xBA:
    case 0xBB:
    case 0xBC:
    case 0xBE:
    case 0xBF:
    case 0xC0:
    case 0xC1:
    case 0xC2:
    case 0xC3:
    case 0xC4:
    case 0xC5:
    case 0xC6:
    case 0xC7:
    case 0xC8:
    case 0xC9:
    case 0xCC:
    case 0xCD:
    case 0xCE:
    case 0xCF:
    case 0xD2:
    case 0xD3:
    case 0xD5:
    case 0xD6:
    case 0xD8:
    case 0xD9:
    case 0xDE:
    case 0xDF:
    case 0xF8:
    case 0xF9:
    case 0xFA:
    case 0xFB:
      goto LABEL_156;
    case 0x41:
    case 0x42:
      v194 = *(uint64_t **)(v6 + 40);
      v195 = *v194;
      switch(*v194)
      {
        case 3u:
          v196 = v10 == 65;
          v197 = 51;
          v198 = 45;
          break;
        case 4u:
          v196 = v10 == 65;
          v197 = 52;
          v198 = 46;
          break;
        case 5u:
          v196 = v10 == 65;
          v197 = 53;
          v198 = 47;
          break;
        case 6u:
          v196 = v10 == 65;
          v197 = 54;
          v198 = 48;
          break;
        case 7u:
          v196 = v10 == 65;
          v197 = 55;
          v198 = 49;
          break;
        default:
          v196 = v10 == 65;
          v197 = 56;
          v198 = 50;
          break;
      }
      if (v196)
        v197 = v198;
      v372 = v197;
      v303 = *(_QWORD *)(v7 + 16);
      v304 = v194[1];
      v425 = v195;
      v426[0] = v304;
      v366 = v303;
      llvm::EVT::getTypeForEVT((llvm::EVT *)&v425, *(llvm::LLVMContext **)(v303 + 56));
      v374 = v6;
      v377 = v305;
      v387 = (v10 == 65) | (unsigned __int16)(2 * (v10 != 65));
      v370 = v10 == 65;
      v368 = v10 != 65;
      if (*(_WORD *)(v6 + 56))
      {
        v308 = 0;
        v309 = 0;
        v306 = 0;
        v310 = *(unsigned int **)(v6 + 32);
        v311 = &v310[10 * *(unsigned __int16 *)(v6 + 56)];
        do
        {
          v438 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v310 + 40) + 16 * v310[2]);
          llvm::EVT::getTypeForEVT((llvm::EVT *)&v438, *(llvm::LLVMContext **)(*(_QWORD *)(v7 + 16) + 56));
          v313 = v312;
          v314 = *(_QWORD *)v310;
          v315 = v310[2];
          if (v309 >= v308)
          {
            v316 = 0xAAAAAAAAAAAAAAABLL * ((v309 - v306) >> 4) + 1;
            if (v316 > 0x555555555555555)
              goto LABEL_399;
            if (0x5555555555555556 * ((v308 - v306) >> 4) > v316)
              v316 = 0x5555555555555556 * ((v308 - v306) >> 4);
            if (0xAAAAAAAAAAAAAAABLL * ((v308 - v306) >> 4) >= 0x2AAAAAAAAAAAAAALL)
              v317 = 0x555555555555555;
            else
              v317 = v316;
            if (v317)
            {
              if (v317 > 0x555555555555555)
                goto LABEL_400;
              v318 = (char *)operator new(48 * v317);
            }
            else
            {
              v318 = 0;
            }
            v319 = &v318[16 * ((v309 - v306) >> 4)];
            *(_QWORD *)v319 = 0;
            *((_QWORD *)v319 + 1) = v314;
            *((_DWORD *)v319 + 4) = v315;
            *((_DWORD *)v319 + 5) = 0;
            *((_QWORD *)v319 + 3) = v313;
            *((_WORD *)v319 + 16) = v387;
            *((_WORD *)v319 + 17) = 0;
            *((_QWORD *)v319 + 5) = 0;
            if (v309 == v306)
            {
              v306 = &v318[16 * ((v309 - v306) >> 4)];
            }
            else
            {
              v320 = &v318[16 * ((v309 - v306) >> 4)];
              do
              {
                v321 = *((_OWORD *)v309 - 3);
                v322 = *((_OWORD *)v309 - 1);
                *((_OWORD *)v320 - 2) = *((_OWORD *)v309 - 2);
                *((_OWORD *)v320 - 1) = v322;
                *((_OWORD *)v320 - 3) = v321;
                v320 -= 48;
                v309 -= 48;
              }
              while (v309 != v306);
              v309 = v306;
              v306 = v320;
            }
            v308 = &v318[48 * v317];
            v307 = v319 + 48;
            if (v309)
              operator delete(v309);
          }
          else
          {
            *(_QWORD *)v309 = 0;
            *((_QWORD *)v309 + 1) = v314;
            *((_DWORD *)v309 + 4) = v315;
            *((_DWORD *)v309 + 5) = 0;
            *((_QWORD *)v309 + 3) = v312;
            *((_WORD *)v309 + 16) = v387;
            *((_WORD *)v309 + 17) = 0;
            v307 = v309 + 48;
            *((_QWORD *)v309 + 5) = 0;
          }
          v310 += 10;
          v309 = v307;
        }
        while (v310 != v311);
      }
      else
      {
        v306 = 0;
        v307 = 0;
        v308 = 0;
      }
      v323 = v7;
      v324 = sub_1C5D44240(*(_QWORD *)(v7 + 16), v425, v426[0], 1u);
      v326 = v325;
      v327 = llvm::PointerType::get(v377, 0);
      v328 = v327;
      v364 = v326;
      v365 = v324;
      if (v307 >= v308)
      {
        v331 = 0xAAAAAAAAAAAAAAABLL * ((v307 - v306) >> 4) + 1;
        if (v331 > 0x555555555555555)
LABEL_399:
          abort();
        if (0x5555555555555556 * ((v308 - v306) >> 4) > v331)
          v331 = 0x5555555555555556 * ((v308 - v306) >> 4);
        if (0xAAAAAAAAAAAAAAABLL * ((v308 - v306) >> 4) >= 0x2AAAAAAAAAAAAAALL)
          v332 = 0x555555555555555;
        else
          v332 = v331;
        if (v332)
        {
          if (v332 > 0x555555555555555)
LABEL_400:
            sub_1C4764EE4();
          v333 = (char *)operator new(48 * v332);
        }
        else
        {
          v333 = 0;
        }
        v334 = &v333[16 * ((v307 - v306) >> 4)];
        *(_QWORD *)v334 = 0;
        *((_QWORD *)v334 + 1) = v324;
        *((_DWORD *)v334 + 4) = v326;
        *((_DWORD *)v334 + 5) = 0;
        v308 = &v333[48 * v332];
        *((_QWORD *)v334 + 3) = v328;
        *((_WORD *)v334 + 16) = v387;
        *((_WORD *)v334 + 17) = 0;
        *((_QWORD *)v334 + 5) = 0;
        v335 = v334 + 48;
        if (v307 == v306)
        {
          v336 = &v333[16 * ((v307 - v306) >> 4)];
        }
        else
        {
          do
          {
            v337 = *((_OWORD *)v307 - 3);
            v338 = *((_OWORD *)v307 - 1);
            v336 = v334 - 48;
            *((_OWORD *)v334 - 2) = *((_OWORD *)v307 - 2);
            *((_OWORD *)v334 - 1) = v338;
            *((_OWORD *)v334 - 3) = v337;
            v307 -= 48;
            v334 -= 48;
          }
          while (v307 != v306);
        }
        if (v306)
          operator delete(v306);
        v306 = v336;
        v330 = v366;
        v329 = v335;
      }
      else
      {
        *(_QWORD *)v307 = 0;
        *((_QWORD *)v307 + 1) = v324;
        *((_DWORD *)v307 + 4) = v326;
        *((_DWORD *)v307 + 5) = 0;
        *((_QWORD *)v307 + 3) = v327;
        *((_WORD *)v307 + 16) = v387;
        *((_WORD *)v307 + 17) = 0;
        v329 = v307 + 48;
        *((_QWORD *)v307 + 5) = 0;
        v330 = v366;
      }
      v339 = v330 + 112;
      v340 = *(_QWORD *)(v323 + 8);
      v341 = *(_QWORD *)(v323 + 16);
      v342 = *(char **)(v340 + 8 * v372 + 174048);
      v343 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v340 + 32))(v340, *(_QWORD *)(**(_QWORD **)(v341 + 40) + 40) + 272, 0);
      v344 = sub_1C63675D8(v341, v342, v343, 0);
      v346 = v345;
      v347 = 0;
      v348 = *(unsigned __int8 **)(v374 + 64);
      v433 = v348;
      if (v348)
      {
        v349 = v346;
        llvm::MetadataTracking::track((uint64_t)&v433, v348, 2);
        v346 = v349;
        v347 = v433;
      }
      v350 = *(_DWORD *)(v374 + 60);
      LODWORD(v434) = v350;
      v351 = *(_QWORD *)(v323 + 16);
      *(_QWORD *)&v438 = 0;
      DWORD2(v438) = 0;
      *(_QWORD *)v439 = 0;
      *(_DWORD *)&v439[8] = *(_WORD *)&v439[8] & 0xFC00 | 0x20;
      *(_QWORD *)&v439[12] = 0xFFFFFFFFLL;
      v440 = 0;
      v441 = 0;
      v442 = 0;
      v443 = 0;
      v444 = 0;
      v445 = v351;
      v447 = 0;
      v448 = 0;
      v449 = v451;
      v450 = 0x2000000000;
      v452 = v454;
      v453 = 0x2000000000;
      v455 = v457;
      v456 = 0x2000000000;
      v458 = v460;
      v459 = 0x400000000;
      v461 = 0;
      v462 = 0;
      v446 = v347;
      if (v347)
      {
        v363 = v346;
        llvm::MetadataTracking::track((uint64_t)&v446, v347, 2);
        v346 = v363;
        v350 = v434;
        v352 = v442;
      }
      else
      {
        v352 = 0;
      }
      *(_QWORD *)&v438 = v339;
      v447 = v350;
      DWORD2(v438) = 0;
      v7 = v323;
      v353 = *(unsigned int *)(*(_QWORD *)(v323 + 8) + 4 * v372 + 181700);
      *(_QWORD *)v439 = v377;
      v440 = v344;
      v441 = v346;
      *(_DWORD *)&v439[16] = v353;
      *(_DWORD *)&v439[12] = -1431655765 * ((unint64_t)(v329 - v306) >> 4);
      if (v352)
      {
        v443 = v352;
        operator delete(v352);
      }
      v442 = v306;
      v443 = v329;
      v444 = v308;
      (***(void (****)(_QWORD, _QWORD, uint64_t, void **))(v445 + 24))(*(_QWORD *)(v445 + 24), *(_QWORD *)(v445 + 40), v353, (void **)&v442);
      *(_WORD *)&v439[8] = (2 * v368) | v370 | *(_WORD *)&v439[8] & 0xFFFC;
      sub_1C5D1FE10(*(unsigned __int8 **)(v323 + 8), (uint64_t)&v438, (uint64_t)&v416);
      v354 = *(_QWORD *)(v323 + 16);
      v430[0] = 0;
      v429 = 0;
      *(_QWORD *)((char *)v430 + 5) = 0;
      __p = 0u;
      v428 = 0u;
      v355 = sub_1C63681B0(v354, v425, v426[0], (uint64_t)&v433, v417, SDWORD2(v417), v365, v364, (__int128 *)&v429, 0, 0, 0, (uint64_t)&__p, 0);
      v357 = v356;
      v358 = v416;
      v359 = v436;
      v6 = v374;
      if (v436 >= HIDWORD(v436))
      {
        v394 = v416;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v358 = v394;
        v359 = v436;
      }
      *((_OWORD *)v435 + v359) = v358;
      v360 = (v436 + 1);
      LODWORD(v436) = v360;
      if (v360 >= HIDWORD(v436))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v360 + 1, 16);
        LODWORD(v360) = v436;
      }
      v361 = (char *)v435 + 16 * v360;
      *v361 = v355;
      v361[1] = v357;
      LODWORD(v436) = v436 + 1;
      sub_1C632CB64(&v438);
      v129 = v433;
      if (v433)
      {
        p_p = (__n128 *)&v433;
LABEL_205:
        llvm::MetadataTracking::untrack((uint64_t)p_p, v129);
      }
LABEL_156:
      if ((_DWORD)v436)
LABEL_157:
        sub_1C5CD122C(v7, v6, (uint64_t *)v435);
LABEL_158:
      if (v423)
        llvm::MetadataTracking::untrack((uint64_t)&v423, v423);
      if (v435 != v437)
        free(v435);
      return;
    case 0x60:
    case 0x65:
      v11 = **(unsigned __int8 **)(v6 + 40);
      v12 = v11 - 10;
      if (v11 == 14)
        v13 = 66;
      else
        v13 = 637;
      v14 = v12 + 62;
      goto LABEL_151;
    case 0x61:
    case 0x66:
      v38 = **(unsigned __int8 **)(v6 + 40);
      v12 = v38 - 10;
      if (v38 == 14)
        v13 = 71;
      else
        v13 = 637;
      v14 = v12 + 67;
      goto LABEL_151;
    case 0x62:
    case 0x67:
      v39 = **(unsigned __int8 **)(v6 + 40);
      v12 = v39 - 10;
      if (v39 == 14)
        v13 = 76;
      else
        v13 = 637;
      v14 = v12 + 72;
      goto LABEL_151;
    case 0x63:
    case 0x68:
      v45 = **(unsigned __int8 **)(v6 + 40);
      v12 = v45 - 10;
      if (v45 == 14)
        v13 = 81;
      else
        v13 = 637;
      v14 = v12 + 77;
      goto LABEL_151;
    case 0x64:
    case 0x69:
      v34 = **(unsigned __int8 **)(v6 + 40);
      v12 = v34 - 10;
      if (v34 == 14)
        v13 = 86;
      else
        v13 = 637;
      v14 = v12 + 82;
      goto LABEL_151;
    case 0x6A:
    case 0x8D:
      v23 = **(unsigned __int8 **)(v6 + 40);
      v12 = v23 - 10;
      if (v23 == 14)
        v13 = 91;
      else
        v13 = 637;
      v14 = v12 + 87;
      goto LABEL_151;
    case 0x6B:
    case 0xE0:
      v43 = **(unsigned __int8 **)(v6 + 40);
      v12 = v43 - 10;
      if (v43 == 14)
        v13 = 101;
      else
        v13 = 637;
      v14 = v12 + 97;
      goto LABEL_151;
    case 0x6C:
    case 0xE5:
      v44 = **(unsigned __int8 **)(v6 + 40);
      v12 = v44 - 10;
      if (v44 == 14)
        v13 = 178;
      else
        v13 = 637;
      v14 = v12 + 174;
      goto LABEL_151;
    case 0x6D:
    case 0xE4:
      v48 = *(unsigned __int8 **)(v6 + 40);
      v49 = *v48;
      v50 = v49 - 10;
      if (v49 == 14)
        v51 = 96;
      else
        v51 = 637;
      if ((v50 & 0xFC) != 0)
        v52 = v51;
      else
        v52 = v50 + 92;
      if (!*(_QWORD *)(*(_QWORD *)(v7 + 8) + 8 * v52 + 174048))
      {
        v53 = *(_QWORD *)(v7 + 16);
        v54 = *(unsigned __int8 **)(v6 + 64);
        *(_QWORD *)&v438 = v54;
        if (v54)
        {
          llvm::MetadataTracking::track((uint64_t)&v438, v54, 2);
          v9 = *(_DWORD *)(v6 + 60);
          v48 = *(unsigned __int8 **)(v6 + 40);
        }
        DWORD2(v438) = v9;
        v55 = *(llvm **)v48;
        v56 = *((_QWORD *)v48 + 1);
        v57 = *(_QWORD *)(v6 + 32);
        v58 = *(_QWORD *)(v57 + 40);
        v59 = *(_QWORD *)(v57 + 48);
        v60 = *(_QWORD *)(v53 + 832);
        if (v60)
          v61 = *(_WORD *)(v60 + 8);
        else
          v61 = 0;
        v115 = sub_1C5D52060(v53, 202, (const llvm::APInt *)&v438, v55, v56, v58, v59, v61);
        v117 = v116;
        if ((_QWORD)v438)
          llvm::MetadataTracking::untrack((uint64_t)&v438, (unsigned __int8 *)v438);
        v118 = *(_QWORD *)(v7 + 16);
        v119 = *(unsigned __int8 **)(v6 + 64);
        *(_QWORD *)&v438 = v119;
        if (v119)
          llvm::MetadataTracking::track((uint64_t)&v438, v119, 2);
        DWORD2(v438) = *(_DWORD *)(v6 + 60);
        v120 = *(_QWORD *)(v6 + 40);
        v121 = *(llvm **)v120;
        v122 = *(_QWORD *)(v120 + 8);
        v123 = *(_QWORD *)(v118 + 832);
        if (v123)
          LOWORD(v123) = *(_WORD *)(v123 + 8);
        v124 = sub_1C5D56C70(v118, 229, (const llvm::APInt *)&v438, v121, v122, **(_QWORD **)(v6 + 32), *(_QWORD *)(*(_QWORD *)(v6 + 32) + 8), v114, (uint64_t)v115, v117, v123);
        v126 = v125;
        v127 = v436;
        if (v436 >= HIDWORD(v436))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
          v127 = v436;
        }
        v128 = (uint64_t **)((char *)v435 + 16 * v127);
        *v128 = v124;
        v128[1] = v126;
        LODWORD(v436) = v436 + 1;
        v129 = (unsigned __int8 *)v438;
        if ((_QWORD)v438)
        {
          p_p = (__n128 *)&v438;
          goto LABEL_205;
        }
        goto LABEL_156;
      }
      v204 = sub_1C6141934(v6);
      v205 = v7;
      v206 = *(unsigned int *)(**(_QWORD **)(*(_QWORD *)(v7 + 16) + 32) + 148);
      v207 = 40;
      if (v204)
        v207 = 80;
      v438 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v6 + 32) + v207) + 40)
                       + 16 * *(unsigned int *)(*(_QWORD *)(v6 + 32) + v207 + 8));
      if ((_BYTE)v438)
        ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v438);
      else
        ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v438);
      v302 = ExtendedSizeInBits;
      if ((_DWORD)v209 == 1)
      if (v302 == v206)
      {
        v7 = v205;
        v94 = v205;
        v95 = v6;
        v93 = v52;
LABEL_155:
        sub_1C5CDFDE4(v94, v95, v93, (uint64_t)&v435);
        goto LABEL_156;
      }
      v7 = v205;
      v362 = *(_QWORD *)(*(_QWORD *)(v205 + 16) + 56);
      *(_QWORD *)&v416 = "POWI exponent does not match sizeof(int)";
      v418 = 259;
      DWORD2(v438) = 0;
      BYTE12(v438) = 0;
      *(_QWORD *)&v438 = &off_1E814E960;
      *(_QWORD *)v439 = 0;
      *(_QWORD *)&v439[8] = &v416;
      *(_QWORD *)&v439[16] = 0;
      llvm::LLVMContext::diagnose(v362, (const llvm::DiagnosticInfo *)&v438);
      v106 = sub_1C61312D0(*(_QWORD *)(v205 + 16), **(llvm ***)(v6 + 40), *(_QWORD *)(*(_QWORD *)(v6 + 40) + 8));
LABEL_182:
      v108 = v106;
      v109 = v107;
      v110 = v436;
      if (v436 >= HIDWORD(v436))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v110 = v436;
      }
      v111 = (char *)v435 + 16 * v110;
      *v111 = v108;
      v111[1] = v109;
LABEL_192:
      LODWORD(v436) = v436 + 1;
      if (!(_DWORD)v436)
        goto LABEL_158;
      goto LABEL_157;
    case 0x6E:
    case 0xE2:
      v37 = **(unsigned __int8 **)(v6 + 40);
      v12 = v37 - 10;
      if (v37 == 14)
        v13 = 161;
      else
        v13 = 637;
      v14 = v12 + 157;
      goto LABEL_151;
    case 0x6F:
    case 0xE3:
      v33 = **(unsigned __int8 **)(v6 + 40);
      v12 = v33 - 10;
      if (v33 == 14)
        v13 = 166;
      else
        v13 = 637;
      v14 = v12 + 162;
      goto LABEL_151;
    case 0x70:
    case 0xE9:
      v35 = **(unsigned __int8 **)(v6 + 40);
      v12 = v35 - 10;
      if (v35 == 14)
        v13 = 141;
      else
        v13 = 637;
      v14 = v12 + 137;
      goto LABEL_151;
    case 0x71:
    case 0xEA:
      v62 = **(unsigned __int8 **)(v6 + 40);
      v12 = v62 - 10;
      if (v62 == 14)
        v13 = 151;
      else
        v13 = 637;
      v14 = v12 + 147;
      goto LABEL_151;
    case 0x72:
    case 0xE6:
      v46 = **(unsigned __int8 **)(v6 + 40);
      v12 = v46 - 10;
      if (v46 == 14)
        v13 = 111;
      else
        v13 = 637;
      v14 = v12 + 107;
      goto LABEL_151;
    case 0x73:
    case 0xE8:
      v32 = **(unsigned __int8 **)(v6 + 40);
      v12 = v32 - 10;
      if (v32 == 14)
        v13 = 131;
      else
        v13 = 637;
      v14 = v12 + 127;
      goto LABEL_151;
    case 0x74:
    case 0xE7:
      v36 = **(unsigned __int8 **)(v6 + 40);
      v12 = v36 - 10;
      if (v36 == 14)
        v13 = 121;
      else
        v13 = 637;
      v14 = v12 + 117;
      goto LABEL_151;
    case 0x75:
    case 0xED:
      v22 = **(unsigned __int8 **)(v6 + 40);
      v12 = v22 - 10;
      if (v22 == 14)
        v13 = 198;
      else
        v13 = 637;
      v14 = v12 + 194;
      goto LABEL_151;
    case 0x76:
    case 0xEE:
      v31 = **(unsigned __int8 **)(v6 + 40);
      v12 = v31 - 10;
      if (v31 == 14)
        v13 = 203;
      else
        v13 = 637;
      v14 = v12 + 199;
      goto LABEL_151;
    case 0x77:
    case 0xF7:
      v64 = **(unsigned __int8 **)(v6 + 40);
      v12 = v64 - 10;
      if (v64 == 14)
        v13 = 233;
      else
        v13 = 637;
      v14 = v12 + 229;
      goto LABEL_151;
    case 0x78:
    case 0xF6:
      v41 = **(unsigned __int8 **)(v6 + 40);
      v12 = v41 - 10;
      if (v41 == 14)
        v13 = 228;
      else
        v13 = 637;
      v14 = v12 + 224;
      goto LABEL_151;
    case 0x79:
    case 0xEB:
      v42 = **(unsigned __int8 **)(v6 + 40);
      v12 = v42 - 10;
      if (v42 == 14)
        v13 = 188;
      else
        v13 = 637;
      v14 = v12 + 184;
      goto LABEL_151;
    case 0x7A:
    case 0xF1:
      v40 = **(unsigned __int8 **)(v6 + 40);
      v12 = v40 - 10;
      if (v40 == 14)
        v13 = 218;
      else
        v13 = 637;
      v14 = v12 + 214;
      goto LABEL_151;
    case 0x7B:
    case 0xEF:
      v63 = **(unsigned __int8 **)(v6 + 40);
      v12 = v63 - 10;
      if (v63 == 14)
        v13 = 208;
      else
        v13 = 637;
      v14 = v12 + 204;
      goto LABEL_151;
    case 0x7C:
    case 0xF0:
      v47 = **(unsigned __int8 **)(v6 + 40);
      v12 = v47 - 10;
      if (v47 == 14)
        v13 = 213;
      else
        v13 = 637;
      v14 = v12 + 209;
      goto LABEL_151;
    case 0x7D:
    case 0xEC:
      v65 = **(unsigned __int8 **)(v6 + 40);
      v12 = v65 - 10;
      if (v65 == 14)
        v13 = 193;
      else
        v13 = 637;
      v14 = v12 + 189;
      goto LABEL_151;
    case 0x7E:
    case 0xF2:
      v15 = v7;
      v16 = v6;
      v17 = 234;
      v18 = 235;
      v19 = 236;
      v20 = 237;
      v21 = 238;
      goto LABEL_103;
    case 0x7F:
    case 0xF3:
      v15 = v7;
      v16 = v6;
      v17 = 239;
      v18 = 240;
      v19 = 241;
      v20 = 242;
      v21 = 243;
      goto LABEL_103;
    case 0x80:
    case 0xF4:
      v15 = v7;
      v16 = v6;
      v17 = 244;
      v18 = 245;
      v19 = 246;
      v20 = 247;
      v21 = 248;
      goto LABEL_103;
    case 0x81:
    case 0xF5:
      v15 = v7;
      v16 = v6;
      v17 = 249;
      v18 = 250;
      v19 = 251;
      v20 = 252;
      v21 = 253;
LABEL_103:
      sub_1C5CE002C(v15, v16, v17, v18, v19, v20, v21, (uint64_t)&v435);
      goto LABEL_156;
    case 0x84:
    case 0x85:
    case 0xD0:
    case 0xD1:
      v386 = v7;
      v167 = sub_1C6141934(v6);
      v168 = *(unsigned __int16 *)(v6 + 24);
      v169 = *(_QWORD *)(v6 + 40);
      v416 = *(_OWORD *)(*(_QWORD *)(v6 + 32) + 40 * v167);
      v170 = (uint64_t *)(*(_QWORD *)(v416 + 40) + 16 * DWORD2(v416));
      v171 = *v170;
      v172 = v170[1];
      v173 = *(llvm **)v169;
      v174 = *(_QWORD *)(v169 + 8);
      __p.n128_u64[0] = 0;
      v175 = *(unsigned __int8 **)(v6 + 64);
      v429 = (uint64_t *)v175;
      if (v175)
        llvm::MetadataTracking::track((uint64_t)&v429, v175, 2);
      LODWORD(v430[0]) = *(_DWORD *)(v6 + 60);
      v176 = 2;
      do
      {
        __p.n128_u8[0] = v176;
        __p.n128_u64[1] = 0;
        if (v173 == v176
          || sub_1C6329714((unsigned __int8 *)&__p, (uint64_t)v173, v174))
        {
          if (v168 == 208 || v168 == 132)
            FPTOSINT = llvm::RTLIB::getFPTOSINT(v171, v172, __p.n128_i8[0]);
          else
            FPTOSINT = llvm::RTLIB::getFPTOUINT(v171, v172, __p.n128_i8[0]);
          v178 = FPTOSINT;
        }
        else
        {
          v178 = 637;
        }
        if (v176 > 6)
          break;
        ++v176;
      }
      while (v178 == 637);
      if (v167)
      {
        v179 = *(uint64_t **)(v6 + 32);
        v180 = *v179;
        v181 = v179[1];
      }
      else
      {
        LODWORD(v181) = 0;
        v180 = 0;
      }
      v7 = v386;
      v199 = *(unsigned __int8 **)(v386 + 8);
      v200 = *(_QWORD *)(v386 + 16);
      v404[0] = 0;
      v404[1] = 0;
      v405 = 0;
      v406 = 0;
      v407 = 4;
      sub_1C5D7B380(v199, v200, v178, __p.n128_i64[0], __p.n128_i64[1], (uint64_t)&v416, 1uLL, (uint64_t)v404, (uint64_t)&v438, (uint64_t)&v429, v180, v181);
      v201 = *(_QWORD *)(v386 + 16);
      v202 = *(_QWORD *)(v201 + 832);
      if (v202)
        v203 = *(_WORD *)(v202 + 8);
      else
        v203 = 0;
      v217 = sub_1C5D52060(v201, 201, (const llvm::APInt *)&v429, v173, v174, v438, *((unint64_t *)&v438 + 1), v203);
      v219 = v218;
      v220 = v436;
      if (v436 >= HIDWORD(v436))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v220 = v436;
      }
      v221 = (uint64_t **)((char *)v435 + 16 * v220);
      *v221 = v217;
      v221[1] = v219;
      v222 = (v436 + 1);
      LODWORD(v436) = v436 + 1;
      if (v167)
      {
        v223 = *(_OWORD *)v439;
        if (v222 >= HIDWORD(v436))
        {
          v393 = *(_OWORD *)v439;
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v222 + 1, 16);
          v223 = v393;
          LODWORD(v222) = v436;
        }
        *((_OWORD *)v435 + v222) = v223;
        LODWORD(v436) = v436 + 1;
      }
      v129 = (unsigned __int8 *)v429;
      if (!v429)
        goto LABEL_156;
      p_p = (__n128 *)&v429;
      goto LABEL_205;
    case 0x86:
    case 0x87:
    case 0xCA:
    case 0xCB:
      v385 = v7;
      v148 = sub_1C6141934(v6);
      v149 = *(unsigned __int16 *)(v6 + 24);
      v151 = v149 == 202 || v149 == 134;
      v376 = v151;
      v152 = v148;
      v153 = *(uint64_t **)(v6 + 40);
      v154 = (unsigned int *)(*(_QWORD *)(v6 + 32) + 40 * v148);
      v155 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v154 + 40) + 16 * v154[2]);
      v156 = *v155;
      v157 = v155[1];
      v158 = *v153;
      v159 = v153[1];
      *(_QWORD *)&v416 = 0;
      v160 = *(unsigned __int8 **)(v6 + 64);
      __p.n128_u64[0] = (unint64_t)v160;
      if (v160)
        llvm::MetadataTracking::track((uint64_t)&__p, v160, 2);
      __p.n128_u32[2] = *(_DWORD *)(v6 + 60);
      v161 = 2;
      do
      {
        LOBYTE(v416) = v161;
        *((_QWORD *)&v416 + 1) = 0;
        if (v156 == v161 || sub_1C6329714((unsigned __int8 *)&v416, v156, v157))
        {
          if (v149 == 202 || v149 == 134)
            SINTTOFP = llvm::RTLIB::getSINTTOFP(v416, *((uint64_t *)&v416 + 1), v158);
          else
            SINTTOFP = llvm::RTLIB::getUINTTOFP(v416, *((uint64_t *)&v416 + 1), v158);
          v163 = SINTTOFP;
        }
        else
        {
          v163 = 637;
        }
        if (v161 > 6)
          break;
        ++v161;
      }
      while (v163 == 637);
      v164 = *(uint64_t **)(v6 + 32);
      if (v152)
      {
        v165 = *v164;
        v166 = v164[1];
      }
      else
      {
        LODWORD(v166) = 0;
        v165 = 0;
      }
      v187 = *(_QWORD *)(v385 + 16);
      if (v376)
        v188 = 198;
      else
        v188 = 199;
      v189 = &v164[5 * v152];
      v190 = *v189;
      v191 = v189[1];
      v192 = *(_QWORD *)(v187 + 832);
      if (v192)
        v193 = *(_WORD *)(v192 + 8);
      else
        v193 = 0;
      v429 = sub_1C5D52060(v187, v188, (const llvm::APInt *)&__p, (llvm *)v416, *((uint64_t *)&v416 + 1), v190, v191, v193);
      v430[0] = v210;
      v211 = *(unsigned __int8 **)(v385 + 8);
      v212 = *(_QWORD *)(v385 + 16);
      v408[0] = 0;
      v408[1] = 0;
      v409 = 0;
      v410 = 0;
      v411 = v376 | 4;
      sub_1C5D7B380(v211, v212, v163, v158, v159, (uint64_t)&v429, 1uLL, (uint64_t)v408, (uint64_t)&v438, (uint64_t)&__p, v165, v166);
      v213 = v438;
      v214 = v436;
      if (v436 >= HIDWORD(v436))
      {
        *(_OWORD *)v380 = v438;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v213 = *(_OWORD *)v380;
        v214 = v436;
      }
      *((_OWORD *)v435 + v214) = v213;
      v215 = (v436 + 1);
      LODWORD(v436) = v436 + 1;
      v7 = v385;
      if (v152)
      {
        v216 = *(_OWORD *)v439;
        if (v215 >= HIDWORD(v436))
        {
          *(_OWORD *)v381 = *(_OWORD *)v439;
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v215 + 1, 16);
          v216 = *(_OWORD *)v381;
          LODWORD(v215) = v436;
        }
        *((_OWORD *)v435 + v215) = v216;
        LODWORD(v436) = v436 + 1;
      }
      v129 = (unsigned __int8 *)__p.n128_u64[0];
      if (!__p.n128_u64[0])
        goto LABEL_156;
      p_p = &__p;
      goto LABEL_205;
    case 0x88:
    case 0xD4:
      v182 = v7;
      v183 = sub_1C6141934(v6);
      v184 = *(uint64_t **)(v6 + 32);
      v416 = *(_OWORD *)&v184[5 * v183];
      if (v183)
      {
        v185 = *v184;
        v186 = v184[1];
      }
      else
      {
        LODWORD(v186) = 0;
        v185 = 0;
      }
      v290 = *(uint64_t **)(v6 + 40);
      v291 = *v290;
      v292 = v290[1];
      v293 = (_QWORD *)(*(_QWORD *)(v416 + 40) + 16 * DWORD2(v416));
      FPROUND = llvm::RTLIB::getFPROUND(*v293, v293[1], v291);
      v295 = *(unsigned __int8 **)(v182 + 8);
      v296 = *(_QWORD *)(v182 + 16);
      v400[0] = 0;
      v400[1] = 0;
      v401 = 0;
      v402 = 0;
      v403 = 4;
      v297 = *(unsigned __int8 **)(v6 + 64);
      __p.n128_u64[0] = (unint64_t)v297;
      if (v297)
        llvm::MetadataTracking::track((uint64_t)&__p, v297, 2);
      __p.n128_u32[2] = *(_DWORD *)(v6 + 60);
      sub_1C5D7B380(v295, v296, FPROUND, v291, v292, (uint64_t)&v416, 1uLL, (uint64_t)v400, (uint64_t)&v438, (uint64_t)&__p, v185, v186);
      if (__p.n128_u64[0])
        llvm::MetadataTracking::untrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0]);
      v298 = v438;
      v299 = v436;
      v7 = v182;
      if (v436 >= HIDWORD(v436))
      {
        v392 = v438;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v298 = v392;
        v299 = v436;
      }
      *((_OWORD *)v435 + v299) = v298;
      v300 = (v436 + 1);
      LODWORD(v436) = v436 + 1;
      if (v183)
      {
        v301 = *(_OWORD *)v439;
        if (v300 >= HIDWORD(v436))
        {
          v395 = *(_OWORD *)v439;
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v300 + 1, 16);
          v301 = v395;
          LODWORD(v300) = v436;
        }
        *((_OWORD *)v435 + v300) = v301;
        LODWORD(v436) = v436 + 1;
      }
      goto LABEL_156;
    case 0x89:
    case 0xDD:
      v382 = v7;
      v24 = *(_QWORD *)(v6 + 32);
      v25 = v24 + 40;
      v26 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v24 + 40) + 40) + 16 * *(unsigned int *)(v24 + 48));
      v27 = *v26;
      if (v10 == 221)
      {
        v28 = (v27 - 10);
        v84 = v28 >= 5;
        v29 = v28 + 264;
        if (v84)
          FPEXT = 637;
        else
          FPEXT = v29;
      }
      else
      {
        FPEXT = llvm::RTLIB::getFPEXT(v27, v26[1], **(_QWORD **)(v6 + 40));
      }
      v74 = *(unsigned __int8 **)(v382 + 8);
      v75 = *(_QWORD *)(v382 + 16);
      v76 = *(uint64_t **)(v6 + 40);
      v77 = *v76;
      v78 = v76[1];
      v396[0] = 0;
      v396[1] = 0;
      v397 = 0;
      v398 = 0;
      v399 = 4;
      v79 = *(unsigned __int8 **)(v6 + 64);
      *(_QWORD *)&v416 = v79;
      if (v79)
      {
        llvm::MetadataTracking::track((uint64_t)&v416, v79, 2);
        v24 = *(_QWORD *)(v6 + 32);
        v80 = v6;
        v9 = *(_DWORD *)(v6 + 60);
      }
      else
      {
        v80 = v6;
      }
      DWORD2(v416) = v9;
      sub_1C5D7B380(v74, v75, FPEXT, v77, v78, v25, 1uLL, (uint64_t)v396, (uint64_t)&v438, (uint64_t)&v416, *(_QWORD *)v24, *(_QWORD *)(v24 + 8));
      if ((_QWORD)v416)
        llvm::MetadataTracking::untrack((uint64_t)&v416, (unsigned __int8 *)v416);
      v112 = v438;
      v113 = v436;
      v7 = v382;
      v6 = v80;
      if (v436 >= HIDWORD(v436))
      {
        *(_OWORD *)v378 = v438;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v112 = *(_OWORD *)v378;
        v113 = v436;
      }
      *((_OWORD *)v435 + v113) = v112;
      v104 = (v436 + 1);
      LODWORD(v436) = v104;
      v105 = *(_OWORD *)v439;
      if (v104 < HIDWORD(v436))
        goto LABEL_191;
      *(_OWORD *)v379 = *(_OWORD *)v439;
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v104 + 1, 16);
      v105 = *(_OWORD *)v379;
      goto LABEL_398;
    case 0xBD:
      v96 = **(unsigned __int8 **)(v6 + 40);
      v89 = v7;
      if (v96 == 5)
      {
        v82 = 59;
      }
      else if (v96 == 6)
      {
        v82 = 60;
      }
      else
      {
        v82 = 61;
      }
      goto LABEL_180;
    case 0xD7:
      v81 = (_QWORD *)(*(_QWORD *)(**(_QWORD **)(v6 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(v6 + 32) + 8));
      v82 = llvm::RTLIB::getFPEXT(*v81, v81[1], **(_QWORD **)(v6 + 40));
      goto LABEL_179;
    case 0xDA:
      if (**(_BYTE **)(v6 + 40) != 10)
        goto LABEL_156;
      v89 = v7;
      v82 = 263;
      goto LABEL_180;
    case 0xDB:
      v86 = (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v6 + 32) + 40)
                                       + 16 * *(unsigned int *)(*(_QWORD *)(v6 + 32) + 8))
                            - 10)
          + 264;
      v87 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(v6 + 32) + 40)
                                             + 16 * *(unsigned int *)(*(_QWORD *)(v6 + 32) + 8))
          - 10 >= 5;
      v88 = 637;
LABEL_176:
      if (v87)
        v82 = v88;
      else
        v82 = v86;
LABEL_179:
      v89 = v7;
LABEL_180:
      v90 = v6;
      v91 = 0;
LABEL_181:
      v106 = sub_1C5CE00FC(v89, v82, v90, v91);
      goto LABEL_182;
    case 0xDC:
      if (**(_BYTE **)(v6 + 40) != 10)
        goto LABEL_156;
      v97 = *(unsigned __int8 **)(v7 + 8);
      v98 = *(_QWORD *)(v7 + 16);
      v99 = *(uint64_t **)(v6 + 32);
      v100 = (uint64_t)(v99 + 5);
      v412[0] = 0;
      v412[1] = 0;
      v413 = 0;
      v414 = 0;
      v415 = 4;
      v101 = *(unsigned __int8 **)(v6 + 64);
      *(_QWORD *)&v416 = v101;
      if (v101)
      {
        llvm::MetadataTracking::track((uint64_t)&v416, v101, 2);
        v9 = *(_DWORD *)(v6 + 60);
        v99 = *(uint64_t **)(v6 + 32);
      }
      DWORD2(v416) = v9;
      sub_1C5D7B380(v97, v98, 263, 10, 0, v100, 1uLL, (uint64_t)v412, (uint64_t)&v438, (uint64_t)&v416, *v99, v99[1]);
      if ((_QWORD)v416)
        llvm::MetadataTracking::untrack((uint64_t)&v416, (unsigned __int8 *)v416);
      v102 = v438;
      v103 = v436;
      if (v436 >= HIDWORD(v436))
      {
        v390 = v438;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v102 = v390;
        v103 = v436;
      }
      *((_OWORD *)v435 + v103) = v102;
      v104 = (v436 + 1);
      LODWORD(v436) = v104;
      v105 = *(_OWORD *)v439;
      if (v104 >= HIDWORD(v436))
      {
        v383 = *(_OWORD *)v439;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v104 + 1, 16);
        v105 = v383;
LABEL_398:
        LODWORD(v104) = v436;
      }
LABEL_191:
      *((_OWORD *)v435 + v104) = v105;
      goto LABEL_192;
    case 0xE1:
      v92 = **(unsigned __int8 **)(v6 + 40);
      v12 = v92 - 10;
      if (v92 == 14)
        v13 = 106;
      else
        v13 = 637;
      v14 = v12 + 102;
LABEL_151:
      if ((v12 & 0xFC) != 0)
        v93 = v13;
      else
        v93 = v14;
      v94 = v7;
      v95 = v6;
      goto LABEL_155;
    case 0xFC:
      v238 = *(uint64_t **)(v6 + 40);
      v240 = *v238;
      v239 = v238[1];
      v241 = (v240 - 10) + 167;
      v242 = v7;
      v243 = *(_QWORD *)(v7 + 16);
      v433 = (unsigned __int8 *)v240;
      v434 = v239;
      llvm::EVT::getTypeForEVT((llvm::EVT *)&v433, *(llvm::LLVMContext **)(v243 + 56));
      v245 = v244;
      v246 = *(uint64_t **)(v6 + 32);
      v247 = *v246;
      v248 = *((_DWORD *)v246 + 2);
      v249 = operator new(0x30uLL);
      *v249 = 0;
      v249[1] = v247;
      *((_DWORD *)v249 + 4) = v248;
      *((_DWORD *)v249 + 5) = 0;
      v249[3] = v245;
      *((_DWORD *)v249 + 8) = 0;
      v249[5] = 0;
      v250 = sub_1C5D44240(*(_QWORD *)(v242 + 16), (uint64_t)v433, v434, 1u);
      v252 = v251;
      v253 = llvm::PointerType::get(v245, 0);
      v254 = operator new(0x60uLL);
      v254[6] = 0;
      v254[7] = v250;
      v367 = v252;
      v369 = v250;
      v254[8] = v252;
      v254[9] = v253;
      *((_DWORD *)v254 + 20) = 0;
      v254[11] = 0;
      v255 = *((_OWORD *)v249 + 1);
      *(_OWORD *)v254 = *(_OWORD *)v249;
      *((_OWORD *)v254 + 1) = v255;
      *((_OWORD *)v254 + 2) = *((_OWORD *)v249 + 2);
      operator delete(v249);
      v256 = sub_1C5D44240(*(_QWORD *)(v242 + 16), (uint64_t)v433, v434, 1u);
      v258 = v257;
      v259 = llvm::PointerType::get(v245, 0);
      v260 = operator new(0xC0uLL);
      v260[12] = 0;
      v260[13] = v256;
      v371 = v258;
      v260[14] = v258;
      v260[15] = v259;
      *((_DWORD *)v260 + 32) = 0;
      v260[17] = 0;
      v261 = *((_OWORD *)v254 + 3);
      *((_OWORD *)v260 + 2) = *((_OWORD *)v254 + 2);
      *((_OWORD *)v260 + 3) = v261;
      v262 = *((_OWORD *)v254 + 5);
      *((_OWORD *)v260 + 4) = *((_OWORD *)v254 + 4);
      *((_OWORD *)v260 + 5) = v262;
      v263 = *((_OWORD *)v254 + 1);
      v264 = v243 + 112;
      *(_OWORD *)v260 = *(_OWORD *)v254;
      *((_OWORD *)v260 + 1) = v263;
      operator delete(v254);
      v265 = *(_QWORD *)(v242 + 8);
      v266 = *(_QWORD *)(v242 + 16);
      v267 = *(char **)(v265 + 8 * v241 + 174048);
      v268 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v265 + 32))(v265, *(_QWORD *)(**(_QWORD **)(v266 + 40) + 40) + 272, 0);
      v269 = sub_1C63675D8(v266, v267, v268, 0);
      v271 = v270;
      v272 = 0;
      v273 = *(unsigned __int8 **)(v6 + 64);
      v431 = v273;
      if (v273)
      {
        llvm::MetadataTracking::track((uint64_t)&v431, v273, 2);
        v272 = v431;
      }
      v274 = *(_DWORD *)(v6 + 60);
      v432 = v274;
      v275 = *(_QWORD *)(v242 + 16);
      *(_QWORD *)&v438 = 0;
      DWORD2(v438) = 0;
      *(_QWORD *)v439 = 0;
      *(_DWORD *)&v439[8] = *(_WORD *)&v439[8] & 0xFC00 | 0x20;
      *(_QWORD *)&v439[12] = 0xFFFFFFFFLL;
      v440 = 0;
      v441 = 0;
      v442 = 0;
      v443 = 0;
      v444 = 0;
      v445 = v275;
      v447 = 0;
      v448 = 0;
      v449 = v451;
      v450 = 0x2000000000;
      v452 = v454;
      v453 = 0x2000000000;
      v455 = v457;
      v456 = 0x2000000000;
      v458 = v460;
      v459 = 0x400000000;
      v461 = 0;
      v462 = 0;
      v446 = v272;
      if (v272)
      {
        llvm::MetadataTracking::track((uint64_t)&v446, v272, 2);
        v274 = v432;
        v275 = *(_QWORD *)(v242 + 16);
        v276 = v442;
      }
      else
      {
        v276 = 0;
      }
      *(_QWORD *)&v438 = v264;
      v447 = v274;
      DWORD2(v438) = 0;
      v277 = *(unsigned int *)(*(_QWORD *)(v242 + 8) + 4 * v241 + 181700);
      *(_QWORD *)v439 = **(_QWORD **)(v275 + 56) + 1576;
      v440 = v269;
      v441 = v271;
      *(_DWORD *)&v439[16] = v277;
      *(_DWORD *)&v439[12] = 3;
      if (v276)
      {
        v443 = v276;
        operator delete(v276);
      }
      v442 = (char *)v260;
      v443 = (char *)(v260 + 18);
      v444 = (char *)(v260 + 24);
      (***(void (****)(_QWORD, _QWORD, uint64_t, void **))(v445 + 24))(*(_QWORD *)(v445 + 24), *(_QWORD *)(v445 + 40), v277, (void **)&v442);
      sub_1C5D1FE10(*(unsigned __int8 **)(v242 + 8), (uint64_t)&v438, (uint64_t)&v416);
      v278 = *(_QWORD *)(v242 + 16);
      v430[0] = 0;
      v429 = 0;
      *(_QWORD *)((char *)v430 + 5) = 0;
      __p = 0u;
      v428 = 0u;
      v279 = sub_1C63681B0(v278, (uint64_t)v433, v434, (uint64_t)&v431, v417, SDWORD2(v417), v369, v367, (__int128 *)&v429, 0, 0, 0, (uint64_t)&__p, 0);
      v281 = v280;
      v282 = v436;
      if (v436 >= HIDWORD(v436))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v282 = v436;
      }
      v283 = (char *)v435 + 16 * v282;
      *v283 = v279;
      v283[1] = v281;
      LODWORD(v436) = v436 + 1;
      v284 = *(_QWORD *)(v242 + 16);
      v425 = 0;
      v426[0] = 0;
      *(uint64_t *)((char *)v426 + 5) = 0;
      __p = 0u;
      v428 = 0u;
      v285 = sub_1C63681B0(v284, (uint64_t)v433, v434, (uint64_t)&v431, v417, SDWORD2(v417), v256, v371, (__int128 *)&v425, 0, 0, 0, (uint64_t)&__p, 0);
      v287 = v286;
      v288 = v436;
      if (v436 >= HIDWORD(v436))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
        v288 = v436;
      }
      v289 = (char *)v435 + 16 * v288;
      *v289 = v285;
      v289[1] = v287;
      LODWORD(v436) = v436 + 1;
      sub_1C632CB64(&v438);
      if (v431)
        llvm::MetadataTracking::untrack((uint64_t)&v431, v431);
      v7 = v242;
      goto LABEL_156;
    default:
      switch(*(_WORD *)(v6 + 24))
      {
        case 0x11C:
          __p = 0uLL;
          *(_QWORD *)&v428 = 0;
          v224 = *(_QWORD *)(v7 + 16);
          *(_QWORD *)&v438 = 0;
          DWORD2(v438) = 0;
          *(_QWORD *)v439 = 0;
          *(_DWORD *)&v439[8] = 32;
          *(_QWORD *)&v439[12] = 0xFFFFFFFFLL;
          v440 = 0;
          v441 = 0;
          v442 = 0;
          v443 = 0;
          v444 = 0;
          v445 = v224;
          v447 = 0;
          v448 = 0;
          v449 = v451;
          v450 = 0x2000000000;
          v452 = v454;
          v453 = 0x2000000000;
          v455 = v457;
          v456 = 0x2000000000;
          v458 = v460;
          v459 = 0x400000000;
          v461 = 0;
          v462 = 0;
          v446 = v423;
          if (v423)
          {
            llvm::MetadataTracking::track((uint64_t)&v446, v423, 2);
            v9 = v424;
            v224 = *(_QWORD *)(v7 + 16);
          }
          v447 = v9;
          v225 = *(uint64_t **)(v6 + 32);
          v227 = *v225;
          v226 = v225[1];
          *(_QWORD *)&v438 = v227;
          DWORD2(v438) = v226;
          v228 = **(_QWORD **)(v224 + 56) + 1576;
          v229 = (*(unsigned __int8 (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v7 + 8) + 32))(*(_QWORD *)(v7 + 8), *(_QWORD *)(**(_QWORD **)(v224 + 40) + 40) + 272, 0);
          v230 = "abort";
          goto LABEL_301;
        case 0x121:
          __p = 0uLL;
          *(_QWORD *)&v428 = 0;
          v224 = *(_QWORD *)(v7 + 16);
          *(_QWORD *)&v438 = 0;
          DWORD2(v438) = 0;
          *(_QWORD *)v439 = 0;
          *(_DWORD *)&v439[8] = 32;
          *(_QWORD *)&v439[12] = 0xFFFFFFFFLL;
          v440 = 0;
          v441 = 0;
          v442 = 0;
          v443 = 0;
          v444 = 0;
          v445 = v224;
          v447 = 0;
          v448 = 0;
          v449 = v451;
          v450 = 0x2000000000;
          v452 = v454;
          v453 = 0x2000000000;
          v455 = v457;
          v456 = 0x2000000000;
          v458 = v460;
          v459 = 0x400000000;
          v461 = 0;
          v462 = 0;
          v446 = v423;
          if (v423)
          {
            llvm::MetadataTracking::track((uint64_t)&v446, v423, 2);
            v9 = v424;
            v224 = *(_QWORD *)(v7 + 16);
          }
          v447 = v9;
          v231 = *(uint64_t **)(v6 + 32);
          v233 = *v231;
          v232 = v231[1];
          *(_QWORD *)&v438 = v233;
          DWORD2(v438) = v232;
          v228 = **(_QWORD **)(v224 + 56) + 1576;
          v229 = (*(unsigned __int8 (**)(_QWORD, uint64_t, _QWORD))(**(_QWORD **)(v7 + 8) + 32))(*(_QWORD *)(v7 + 8), *(_QWORD *)(**(_QWORD **)(v224 + 40) + 40) + 272, 0);
          v230 = "__sync_synchronize";
LABEL_301:
          v234 = sub_1C63675D8(v224, v230, v229, 0);
          sub_1C5CDFD60((uint64_t)&v438, 0, v228, v234, v235, &__p);
          sub_1C5D1FE10(*(unsigned __int8 **)(v7 + 8), (uint64_t)&v438, (uint64_t)&v416);
          v236 = v417;
          v237 = v436;
          if (v436 >= HIDWORD(v436))
          {
            v391 = v417;
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
            v236 = v391;
            v237 = v436;
          }
          *((_OWORD *)v435 + v237) = v236;
          LODWORD(v436) = v436 + 1;
          sub_1C632CB64(&v438);
          if (__p.n128_u64[0])
          {
            __p.n128_u64[1] = __p.n128_u64[0];
            operator delete((void *)__p.n128_u64[0]);
          }
          break;
        case 0x124:
        case 0x126:
        case 0x127:
        case 0x128:
        case 0x129:
        case 0x12A:
        case 0x12B:
        case 0x12C:
        case 0x12D:
        case 0x12E:
        case 0x12F:
        case 0x130:
        case 0x131:
          v66 = *(_BYTE *)(v6 + 80);
          v67 = *(unsigned __int16 *)(*(_QWORD *)(v6 + 96) + 36);
          v68 = (v67 >> 8) & 0xF;
          v69 = v67 >> 12;
          v70 = (_DWORD)v69 == 5 && (_DWORD)v68 == 4;
          if (v70 || ((_DWORD)v69 == 4 ? (v71 = (_DWORD)v68 == 5) : (v71 = 0), v71))
          {
            v72 = v7;
            v73 = 6;
          }
          else
          {
            v72 = v7;
            if (byte_1C65ED518[8 * v68 + v69])
              v73 = v68;
            else
              v73 = v69;
          }
          OUTLINE_ATOMIC = llvm::RTLIB::getOUTLINE_ATOMIC(*(unsigned __int16 *)(v6 + 24), v73, *(_BYTE *)(v6 + 80));
          v133 = *(_QWORD *)(v6 + 32);
          v132 = *(uint64_t **)(v6 + 40);
          v375 = *v132;
          v384 = v132[1];
          *(_QWORD *)&v438 = v439;
          *((_QWORD *)&v438 + 1) = 0x400000000;
          v134 = (char *)(v133 + 40 * *(unsigned __int16 *)(v6 + 56));
          if (*(_QWORD *)(*(_QWORD *)(v72 + 8) + 8 * OUTLINE_ATOMIC + 174048))
          {
            SYNC = OUTLINE_ATOMIC;
            sub_1C6132D88((unsigned int *)&v438, (char *)(v133 + 80), (char *)(v133 + 40 * *(unsigned __int16 *)(v6 + 56)));
            v137 = *(_OWORD *)(*(_QWORD *)(v6 + 32) + 40);
            v138 = DWORD2(v438);
            if (DWORD2(v438) >= HIDWORD(v438))
            {
              v373 = *(_OWORD *)(*(_QWORD *)(v6 + 32) + 40);
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v438, (uint64_t)v439, DWORD2(v438) + 1, 16);
              v137 = v373;
              v138 = DWORD2(v438);
            }
            *(_OWORD *)(v438 + 16 * v138) = v137;
            v136 = ++DWORD2(v438);
          }
          else
          {
            SYNC = llvm::RTLIB::getSYNC(v10, v66);
            sub_1C6132D88((unsigned int *)&v438, (char *)(v133 + 40), v134);
            v136 = DWORD2(v438);
          }
          v7 = v72;
          v139 = *(unsigned __int8 **)(v72 + 8);
          v140 = *(_QWORD *)(v72 + 16);
          v141 = v438;
          v142 = v136;
          v419[0] = 0;
          v419[1] = 0;
          v420 = 0;
          v421 = 0;
          v422 = 4;
          v143 = *(unsigned __int8 **)(v6 + 64);
          __p.n128_u64[0] = (unint64_t)v143;
          if (v143)
            llvm::MetadataTracking::track((uint64_t)&__p, v143, 2);
          __p.n128_u32[2] = *(_DWORD *)(v6 + 60);
          sub_1C5D7B380(v139, v140, SYNC, v375, v384, v141, v142, (uint64_t)v419, (uint64_t)&v416, (uint64_t)&__p, **(_QWORD **)(v6 + 32), *(_QWORD *)(*(_QWORD *)(v6 + 32) + 8));
          if (__p.n128_u64[0])
            llvm::MetadataTracking::untrack((uint64_t)&__p, (unsigned __int8 *)__p.n128_u64[0]);
          v144 = v416;
          v145 = v436;
          if (v436 >= HIDWORD(v436))
          {
            v388 = v416;
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v436 + 1, 16);
            v144 = v388;
            v145 = v436;
          }
          *((_OWORD *)v435 + v145) = v144;
          v146 = (v436 + 1);
          LODWORD(v436) = v146;
          v147 = v417;
          if (v146 >= HIDWORD(v436))
          {
            v389 = v417;
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v435, (uint64_t)v437, v146 + 1, 16);
            v147 = v389;
            LODWORD(v146) = v436;
          }
          *((_OWORD *)v435 + v146) = v147;
          LODWORD(v436) = v436 + 1;
          if ((_BYTE *)v438 != v439)
            free((void *)v438);
          break;
        default:
          goto LABEL_156;
      }
      goto LABEL_156;
  }
}

void sub_1C5CDB9A0(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned __int8 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  llvm *v19;
  uint64_t *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  __int16 v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t *v31;
  unsigned int v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t *v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unsigned int v46;
  unint64_t v47;
  uint64_t v48;
  llvm *v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  llvm *v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  __int16 v75;
  unsigned __int8 v76;
  char v77;
  unsigned __int8 v78;
  uint64_t v79;
  llvm *v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  unsigned __int8 *v86;
  uint64_t v87;
  __int16 v88;
  uint64_t *v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  uint64_t **v93;
  unsigned __int8 *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  __int16 v103;
  uint64_t v104;
  uint64_t v105;
  unsigned int v106;
  unsigned int v107;
  _BOOL4 v110;
  unsigned int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  __int16 v117;
  uint64_t v118;
  void *v119;
  _DWORD *v120;
  uint64_t ExtendedSizeInBits;
  int v122;
  uint64_t v123;
  uint64_t v124;
  int v125;
  uint64_t *v126;
  uint64_t v127;
  const char *v128;
  int v129;
  uint64_t *v130;
  uint64_t *v131;
  uint64_t v132;
  const char *v133;
  uint64_t v134;
  uint64_t *v135;
  unsigned int v136;
  unint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  __int16 v141;
  uint64_t *v142;
  unsigned int v143;
  unint64_t v144;
  int v145;
  uint64_t v146;
  uint64_t *v147;
  uint64_t *v148;
  uint64_t *v149;
  uint64_t *v150;
  unsigned int v151;
  uint64_t **v152;
  uint64_t v153;
  unsigned __int8 *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  __int16 v160;
  uint64_t v161;
  llvm *v162;
  uint64_t v163;
  int v164;
  int v165;
  const char *v166;
  uint64_t v167;
  _QWORD *v168;
  unint64_t v169;
  uint64_t v170;
  uint64_t v171;
  unsigned int v172;
  unsigned int v173;
  uint64_t *v174;
  __int16 v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t *v178;
  unsigned int v179;
  uint64_t v180;
  uint64_t v181;
  int v182;
  uint64_t *v183;
  int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  int v188;
  uint64_t v189;
  uint64_t *v190;
  int v191;
  int v192;
  __int16 v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t *v196;
  uint64_t v197;
  const char *v198;
  int v199;
  uint64_t *v200;
  uint64_t v201;
  int v202;
  uint64_t v203;
  uint64_t *v204;
  unsigned int v205;
  uint64_t *v206;
  unsigned int v207;
  uint64_t **v208;
  uint64_t v209;
  char *v210;
  uint64_t v211;
  uint64_t *v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  __int16 v216;
  unint64_t v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  __int16 v221;
  uint64_t *v222;
  uint64_t *v223;
  uint64_t *v224;
  unsigned int v225;
  uint64_t **v226;
  unsigned __int8 *v227;
  uint64_t *v228;
  unsigned int v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  __int16 v236;
  uint64_t *v237;
  unsigned int v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  unsigned int v246;
  uint64_t v247;
  uint64_t *v248;
  int v249;
  uint64_t *v250;
  int v251;
  int v252;
  int v253;
  char v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  unint64_t v262;
  uint64_t v263;
  __int16 v264;
  uint64_t *v265;
  unsigned int v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  unint64_t v271;
  uint64_t v272;
  __int16 v273;
  uint64_t *v274;
  int v275;
  uint64_t *v276;
  unsigned int v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  llvm *v282;
  uint64_t v283;
  __int16 v284;
  uint64_t v285;
  uint64_t v286;
  llvm *v287;
  uint64_t v288;
  uint64_t v289;
  unint64_t v290;
  const char *v291;
  unsigned int v292;
  const char *v293;
  unsigned int v294;
  unint64_t v295;
  uint64_t v296;
  uint64_t v297;
  llvm *v298;
  uint64_t v299;
  unint64_t v300;
  uint64_t v301;
  uint64_t v302;
  unsigned int v303;
  uint64_t *v304;
  uint64_t v305;
  _BOOL4 v306;
  _BOOL4 v307;
  int v308;
  uint64_t v309;
  uint64_t v310;
  llvm *v311;
  uint64_t *v312;
  uint64_t v313;
  unint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  char v319;
  uint64_t v320;
  uint64_t v321;
  __int16 v322;
  _BOOL4 v323;
  int v324;
  _BOOL4 v326;
  uint64_t v327;
  uint64_t v328;
  void *v329;
  llvm *v330;
  uint64_t *v331;
  uint64_t v332;
  unint64_t v333;
  uint64_t v334;
  uint64_t v335;
  llvm *v336;
  uint64_t v337;
  char v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  __int16 v342;
  uint64_t *v343;
  __int16 v344;
  unsigned int v345;
  unint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  uint64_t v351;
  uint64_t *v352;
  unsigned int v353;
  uint64_t v354;
  uint64_t *v355;
  unint64_t v356;
  uint64_t v357;
  llvm *v358;
  uint64_t v359;
  _BOOL8 v360;
  _QWORD *v361;
  unint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  unint64_t v368;
  uint64_t v369;
  int v370;
  __int16 v371;
  int v372;
  uint64_t v373;
  uint64_t v374;
  unint64_t v375;
  uint64_t v376;
  __int16 v377;
  uint64_t *v378;
  int v379;
  int v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  unint64_t v384;
  uint64_t v385;
  __int16 v386;
  uint64_t *v387;
  uint64_t v388;
  int v389;
  uint64_t *v390;
  unsigned int v391;
  unint64_t v392;
  uint64_t v393;
  llvm *v394;
  uint64_t v395;
  uint64_t *v396;
  unsigned int v397;
  uint64_t *v398;
  uint64_t *v399;
  unsigned int v400;
  uint64_t **v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t *v405;
  uint64_t v406;
  unint64_t v407;
  uint64_t v408;
  __int16 v409;
  int v410;
  int v411;
  int v412;
  const char *v413;
  int v414;
  uint64_t v415;
  uint64_t *v416;
  uint64_t v417;
  unint64_t v418;
  uint64_t v419;
  __int16 v420;
  uint64_t v421;
  uint64_t *v422;
  uint64_t v423;
  unint64_t v424;
  uint64_t v425;
  __int16 v426;
  uint64_t v427;
  int v428;
  uint64_t v429;
  uint64_t *v430;
  uint64_t v431;
  unint64_t v432;
  uint64_t v433;
  __int16 v434;
  uint64_t *v435;
  unsigned int v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  __int16 v440;
  uint64_t *v441;
  uint64_t *v442;
  uint64_t *v443;
  unsigned int v444;
  uint64_t **v445;
  unint64_t v446;
  uint64_t v447;
  uint64_t *v448;
  unsigned int v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  unint64_t v454;
  uint64_t v455;
  __int16 v456;
  uint64_t *v457;
  unsigned int v458;
  uint64_t v459;
  uint64_t *v460;
  __int16 v461;
  unsigned int v462;
  unint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  unint64_t v467;
  uint64_t v468;
  uint64_t *v469;
  unsigned int v470;
  uint64_t v471;
  __int16 v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t *v475;
  unsigned int v476;
  unint64_t v477;
  uint64_t v478;
  unsigned __int8 v479;
  unsigned int v480;
  llvm *v481;
  uint64_t v482;
  uint64_t v483;
  unsigned __int8 v484;
  _QWORD *v485;
  unint64_t v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t *v489;
  unsigned int v490;
  unint64_t v491;
  uint64_t v492;
  uint64_t v493;
  __int16 v494;
  unsigned int v495;
  unsigned int v496;
  uint64_t *v497;
  __int16 v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t *v501;
  unsigned int v502;
  unint64_t v503;
  llvm *v504;
  uint64_t v505;
  llvm *ShiftAmountTy;
  uint64_t v507;
  _QWORD *v508;
  unint64_t v509;
  uint64_t v510;
  uint64_t v511;
  unsigned int v512;
  uint64_t *v513;
  uint64_t v514;
  __int16 v515;
  uint64_t v516;
  uint64_t v517;
  unint64_t v518;
  uint64_t v519;
  uint64_t v520;
  unsigned int v521;
  _QWORD *v522;
  uint64_t v523;
  uint64_t v524;
  uint64_t *v525;
  uint64_t v526;
  unint64_t v527;
  uint64_t v528;
  __int16 v529;
  uint64_t v530;
  uint64_t v531;
  int v532;
  uint64_t *v533;
  int v534;
  int v535;
  uint64_t v536;
  uint64_t v537;
  int v538;
  uint64_t *v539;
  int v540;
  int v541;
  uint64_t v542;
  uint64_t v543;
  int v544;
  uint64_t v545;
  uint64_t *v546;
  int v547;
  int v548;
  __int16 v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t *v552;
  uint64_t v553;
  const char *v554;
  int v555;
  uint64_t v556;
  uint64_t v557;
  int v558;
  uint64_t *v559;
  int v560;
  uint64_t v561;
  uint64_t *v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  _QWORD *v571;
  unsigned int v572;
  uint64_t *v573;
  uint64_t v574;
  uint64_t v575;
  __int16 v576;
  unsigned __int8 v577;
  unsigned __int8 v578;
  const char *v579;
  unsigned int v580;
  uint64_t v581;
  uint64_t v582;
  unint64_t v583;
  uint64_t v584;
  llvm *v585;
  uint64_t v586;
  unsigned __int8 *v587;
  uint64_t v588;
  _QWORD *v589;
  unint64_t v590;
  uint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t *v594;
  unint64_t v595;
  uint64_t v596;
  uint64_t *v597;
  uint64_t v598;
  unint64_t v599;
  uint64_t v600;
  __int16 v601;
  unsigned __int8 v602;
  char v603;
  unsigned __int8 v604;
  uint64_t *v605;
  uint64_t v606;
  unint64_t v607;
  unsigned __int8 *v608;
  uint64_t v609;
  uint64_t v610;
  __int16 v611;
  unsigned int v612;
  uint64_t v613;
  uint64_t *v614;
  uint64_t v615;
  unint64_t v616;
  uint64_t v617;
  __int16 v618;
  unsigned __int8 v619;
  unsigned __int8 v620;
  const char *v621;
  unsigned int v622;
  _QWORD *v623;
  unint64_t v624;
  uint64_t v625;
  unint64_t v626;
  uint64_t v627;
  llvm *v628;
  void *v629;
  uint64_t v630;
  uint64_t v631;
  _QWORD *v632;
  unint64_t v633;
  unint64_t v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t *v637;
  unint64_t v638;
  uint64_t v639;
  uint64_t *v640;
  uint64_t v641;
  unint64_t v642;
  uint64_t v643;
  __int16 v644;
  _QWORD *v645;
  unint64_t v646;
  uint64_t v647;
  uint64_t v648;
  _QWORD *v649;
  unint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t *v653;
  uint64_t *v654;
  uint64_t *v655;
  unsigned int v656;
  uint64_t **v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  unint64_t v661;
  uint64_t v662;
  __int16 v663;
  uint64_t *v664;
  __int16 v665;
  int v666;
  int v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  unint64_t v671;
  uint64_t v672;
  uint64_t *v673;
  uint64_t *v674;
  int v675;
  uint64_t v676;
  uint64_t *v677;
  __int16 v678;
  unsigned int v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  uint64_t v683;
  unint64_t v684;
  uint64_t v685;
  uint64_t *v686;
  __int16 v687;
  unsigned int v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  unint64_t v693;
  uint64_t v694;
  uint64_t *v695;
  int v696;
  uint64_t v697;
  __int16 v698;
  uint64_t v699;
  unint64_t v700;
  uint64_t *v701;
  uint64_t v702;
  uint64_t v703;
  const char *v704;
  _QWORD *v705;
  const char *v706;
  int v707;
  unsigned int v708;
  int v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  _QWORD *v714;
  uint64_t *v715;
  __int16 v716;
  unsigned int v717;
  unsigned int v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  unint64_t v722;
  uint64_t v723;
  uint64_t *v724;
  const char *v725;
  unsigned int v726;
  unsigned int v727;
  const char *v728;
  unsigned int v729;
  int v730;
  _QWORD *v731;
  unsigned int v732;
  unsigned int v733;
  unsigned int v734;
  uint64_t v735;
  uint64_t v736;
  _DWORD *v737;
  int v738;
  int v739;
  int v740;
  int v741;
  unsigned int v742;
  uint64_t *v743;
  int v744;
  uint64_t v745;
  uint64_t *v746;
  unint64_t v747;
  uint64_t *v748;
  uint64_t v749;
  unint64_t v750;
  uint64_t v751;
  _QWORD *v752;
  unint64_t v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t *v757;
  unint64_t v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  uint64_t *v762;
  uint64_t *v763;
  uint64_t *v764;
  uint64_t v765;
  uint64_t **v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  unint64_t v771;
  uint64_t *v772;
  uint64_t v773;
  uint64_t v774;
  __int16 v775;
  uint64_t *v776;
  uint64_t *v777;
  uint64_t *v778;
  unsigned int v779;
  uint64_t **v780;
  void *v781;
  unint64_t v782;
  uint64_t *v783;
  uint64_t v784;
  uint64_t v785;
  __int16 v786;
  uint64_t *v787;
  uint64_t *v788;
  uint64_t *v789;
  unsigned int v790;
  uint64_t **v791;
  uint64_t *v792;
  unint64_t v793;
  unint64_t v794;
  uint64_t v795;
  uint64_t v796;
  __int16 v797;
  uint64_t *v798;
  unint64_t v799;
  uint64_t v800;
  unint64_t v801;
  uint64_t v802;
  _QWORD *v803;
  unint64_t v804;
  uint64_t v805;
  uint64_t v806;
  llvm *v807;
  uint64_t v808;
  uint64_t *v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  uint64_t v813;
  uint64_t *v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  unsigned int v819;
  uint64_t v820;
  uint64_t v821;
  __int16 v822;
  uint64_t *v823;
  uint64_t *v824;
  uint64_t *v825;
  unsigned int v826;
  uint64_t **v827;
  unsigned __int8 *v828;
  void **v829;
  uint64_t *v830;
  int v831;
  int v832;
  uint64_t v833;
  uint64_t v834;
  uint64_t v835;
  uint64_t v836;
  void *v837;
  uint64_t v838;
  uint64_t v839;
  unint64_t v840;
  uint64_t *v841;
  uint64_t v842;
  uint64_t v843;
  __int16 v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  __int16 v848;
  unsigned __int8 *v849;
  uint64_t v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t *v853;
  uint64_t *v854;
  unsigned int v855;
  uint64_t **v856;
  uint64_t *v857;
  uint64_t *v858;
  uint64_t *v859;
  unsigned int v860;
  uint64_t **v861;
  uint64_t v862;
  uint64_t **v863;
  unsigned int v864;
  uint64_t v865;
  uint64_t *v866;
  uint64_t v867;
  uint64_t v868;
  uint64_t *v869;
  int v870;
  uint64_t *v871;
  int v872;
  uint64_t *v873;
  int v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  const char *v879;
  uint64_t v880;
  uint64_t *v881;
  uint64_t *v882;
  uint64_t *v883;
  unsigned int v884;
  uint64_t **v885;
  uint64_t v886;
  char *v887;
  uint64_t v888;
  char *v889;
  uint64_t v890;
  uint64_t v891;
  unsigned int v892;
  unint64_t v893;
  uint64_t v894;
  unsigned int v895;
  uint64_t v896;
  llvm *v897;
  unint64_t v898;
  uint64_t v899;
  uint64_t v900;
  unsigned int v901;
  unint64_t v902;
  uint64_t v903;
  int v904;
  uint64_t v905;
  llvm *v906;
  _BOOL4 v907;
  llvm *v908;
  void *__src;
  void *v910;
  unsigned __int8 *v911;
  int v912;
  unsigned __int8 v913;
  unsigned __int8 v914;
  _QWORD v915[2];
  void *v916[2];
  uint64_t *v917;
  uint64_t v918;
  uint64_t *v919;
  uint64_t v920;
  uint64_t *v921;
  int v922;
  uint64_t v923;
  int v924;
  unsigned __int8 *v925;
  uint64_t v926;
  uint64_t *v927;
  uint64_t v928;
  void *v929;
  uint64_t v930;
  uint64_t *v931;
  uint64_t v932;
  _QWORD v933[18];

  v933[16] = *MEMORY[0x1E0C80C00];
  v931 = v933;
  v932 = 0x800000000;
  v4 = **(_QWORD **)(a2 + 40);
  v914 = v4;
  v5 = *(unsigned __int16 *)(a2 + 24);
  v6 = v5 - 134;
  if (v6 > 0x3B)
  {
LABEL_5:
    if (v5 - 202 < 2)
    {
LABEL_6:
      v4 = *(_QWORD *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
      v914 = v4;
      if (v5 != 192)
      {
LABEL_7:
        v7 = v4;
        goto LABEL_12;
      }
      goto LABEL_10;
    }
    if (v5 != 260)
      goto LABEL_7;
LABEL_10:
    v11 = *(_QWORD *)(a2 + 32);
    v9 = *(_QWORD *)(v11 + 80);
    v10 = *(unsigned int *)(v11 + 88);
    goto LABEL_11;
  }
  if (((1 << (v5 + 122)) & 0x33) == 0)
  {
    if (((1 << (v5 + 122)) & 0x800000000006000) != 0)
      goto LABEL_6;
    if (v6 == 58)
      goto LABEL_10;
    goto LABEL_5;
  }
  v8 = *(_QWORD *)(a2 + 32);
  v9 = *(_QWORD *)(v8 + 40);
  v10 = *(unsigned int *)(v8 + 48);
LABEL_11:
  v7 = *(_QWORD *)(*(_QWORD *)(v9 + 40) + 16 * v10);
  v914 = v7;
LABEL_12:
  v913 = sub_1C6132CB4(a1[1], v5, v7);
  v13 = *(unsigned __int8 **)(a2 + 64);
  v911 = v13;
  if (v13)
    llvm::MetadataTracking::track((uint64_t)&v911, v13, 2);
  v14 = *(_DWORD *)(a2 + 60);
  v912 = v14;
  v15 = *(unsigned __int16 *)(a2 + 24);
  switch(*(_WORD *)(a2 + 24))
  {
    case 0x3A:
    case 0x3B:
    case 0x3C:
    case 0x3D:
    case 0x3E:
    case 0xAB:
    case 0xAC:
    case 0xAD:
      if (v914 - 15 >= 0x9C)
      {
        if ((unsigned __int16)(v15 - 59) > 3u)
          v17 = 200;
        else
          v17 = dword_1C866BC90[(__int16)(v15 - 59)];
        v16 = 201;
      }
      else
      {
        v16 = 216;
        v17 = 216;
      }
      v25 = a1[2];
      v26 = *(uint64_t **)(a2 + 32);
      v27 = *v26;
      v28 = v26[1];
      v29 = *(_QWORD *)(v25 + 832);
      if (v29)
        v30 = *(_WORD *)(v29 + 8);
      else
        v30 = 0;
      v31 = sub_1C5D52060(v25, v17, (const llvm::APInt *)&v911, (llvm *)v913, 0, v27, v28, v30);
      v33 = v32;
      v34 = a1[2];
      v35 = *(_QWORD *)(a2 + 32);
      v36 = *(_QWORD *)(v35 + 40);
      v37 = *(_QWORD *)(v35 + 48);
      v38 = *(_QWORD *)(v34 + 832);
      if (v38)
        v39 = *(_WORD *)(v38 + 8);
      else
        v39 = 0;
      v40 = sub_1C5D52060(v34, v17, (const llvm::APInt *)&v911, (llvm *)v913, 0, v36, v37, v39);
      v43 = a1[2];
      v44 = *(_QWORD *)(v43 + 832);
      if (v44)
        LOWORD(v44) = *(_WORD *)(v44 + 8);
      v45 = sub_1C5D56C70(v43, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v31, v33, v42, (uint64_t)v40, v41, v44);
      v47 = v46;
      v48 = a1[2];
      v49 = (llvm *)v914;
      v50 = *(_QWORD *)(v48 + 832);
      if (v50)
        v51 = *(_WORD *)(v50 + 8);
      else
        v51 = 0;
      v52 = v16;
      goto LABEL_37;
    case 0x3F:
    case 0x40:
      if ((_DWORD)v15 == 64)
        v403 = 199;
      else
        v403 = 198;
      v404 = a1[2];
      v405 = *(uint64_t **)(a2 + 32);
      v406 = *v405;
      v407 = v405[1];
      v408 = *(_QWORD *)(v404 + 832);
      if (v408)
        v409 = *(_WORD *)(v408 + 8);
      else
        v409 = 0;
      v460 = sub_1C5D52060(v404, v403, (const llvm::APInt *)&v911, (llvm *)v913, 0, v406, v407, v409);
      v461 = 0;
      v463 = v462;
      v464 = a1[2];
      v465 = *(_QWORD *)(a2 + 32);
      v466 = *(_QWORD *)(v465 + 40);
      v467 = *(_QWORD *)(v465 + 48);
      v468 = *(_QWORD *)(v464 + 832);
      if (v468)
        v461 = *(_WORD *)(v468 + 8);
      v469 = sub_1C5D52060(v464, v403, (const llvm::APInt *)&v911, (llvm *)v913, 0, v466, v467, v461);
      v472 = 0;
      v473 = a1[2];
      v474 = *(_QWORD *)(v473 + 832);
      if (v474)
        v472 = *(_WORD *)(v474 + 8);
      v475 = sub_1C5D56C70(v473, 58, (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v460, v463, v471, (uint64_t)v469, v470, v472);
      v477 = v476;
      v478 = *(_QWORD *)(**(_QWORD **)(a1[2] + 40) + 40) + 272;
      v479 = v914;
      if ((v914 - 15) <= 0x9Bu)
        v479 = sub_1C47F37A0(&v914);
      LOBYTE(v916[0]) = v479;
      v480 = sub_1C47A8C74((unsigned __int8 *)v916);
      v481 = (llvm *)v913;
      v482 = v480;
      v483 = a1[2];
      v484 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)a1[1] + 56))(a1[1], v478, v913, 0);
      v485 = sub_1C6366AB4(v483, v482, (const llvm::APInt *)&v911, (llvm *)v484, 0, 0, 0);
      v488 = *(_QWORD *)(v483 + 832);
      if (v488)
        LOWORD(v488) = *(_WORD *)(v488 + 8);
      v489 = sub_1C5D56C70(v483, 177, (const llvm::APInt *)&v911, v481, 0, (uint64_t)v475, v477, v487, (uint64_t)v485, v486, v488);
      v491 = v490;
      v492 = a1[2];
      v493 = *(_QWORD *)(v492 + 832);
      if (v493)
        v494 = *(_WORD *)(v493 + 8);
      else
        v494 = 0;
      v653 = sub_1C5D52060(v492, 201, (const llvm::APInt *)&v911, (llvm *)v914, 0, (uint64_t)v475, v477, v494);
      v655 = v654;
      v656 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v656 = v932;
      }
      v657 = (uint64_t **)&v931[2 * v656];
      *v657 = v653;
      v657[1] = v655;
      LODWORD(v932) = v932 + 1;
      v48 = a1[2];
      v49 = (llvm *)v914;
      v658 = *(_QWORD *)(v48 + 832);
      if (v658)
        v51 = *(_WORD *)(v658 + 8);
      else
        v51 = 0;
      v52 = 201;
      v53 = 0;
      v45 = v489;
      v47 = v491;
      goto LABEL_107;
    case 0x41:
    case 0x42:
    case 0x43:
    case 0x44:
    case 0x45:
    case 0x46:
    case 0x47:
    case 0x48:
    case 0x49:
    case 0x4A:
    case 0x4B:
    case 0x4C:
    case 0x4D:
    case 0x4E:
    case 0x4F:
    case 0x50:
    case 0x51:
    case 0x52:
    case 0x53:
    case 0x54:
    case 0x55:
    case 0x56:
    case 0x57:
    case 0x58:
    case 0x59:
    case 0x5A:
    case 0x5B:
    case 0x5C:
    case 0x5D:
    case 0x5E:
    case 0x5F:
    case 0x7E:
    case 0x7F:
    case 0x80:
    case 0x81:
    case 0x82:
    case 0x83:
    case 0x88:
    case 0x89:
    case 0x8C:
    case 0x8E:
    case 0x90:
    case 0x91:
    case 0x95:
    case 0x96:
    case 0x97:
    case 0x98:
    case 0x9C:
    case 0x9D:
    case 0x9E:
    case 0x9F:
    case 0xA0:
    case 0xA1:
    case 0xA2:
    case 0xA3:
    case 0xA4:
    case 0xA5:
    case 0xA6:
    case 0xA7:
    case 0xA8:
    case 0xA9:
    case 0xAA:
    case 0xAE:
    case 0xAF:
    case 0xB0:
    case 0xB1:
    case 0xB2:
    case 0xB3:
    case 0xB4:
    case 0xB5:
    case 0xBB:
    case 0xBF:
    case 0xC2:
    case 0xC3:
    case 0xC4:
    case 0xC5:
    case 0xC6:
    case 0xC7:
    case 0xC8:
    case 0xC9:
    case 0xCC:
    case 0xCD:
    case 0xCE:
    case 0xCF:
    case 0xD4:
    case 0xD5:
    case 0xD6:
    case 0xD7:
    case 0xD8:
    case 0xD9:
    case 0xDA:
    case 0xDB:
    case 0xDC:
    case 0xDD:
    case 0xE1:
    case 0xF2:
    case 0xF3:
    case 0xF4:
    case 0xF5:
    case 0xF8:
    case 0xF9:
    case 0xFA:
    case 0xFB:
    case 0xFC:
    case 0xFD:
    case 0xFE:
    case 0xFF:
    case 0x100:
    case 0x101:
    case 0x102:
    case 0x103:
    case 0x105:
    case 0x106:
    case 0x107:
    case 0x108:
    case 0x109:
    case 0x10A:
    case 0x10B:
    case 0x10C:
    case 0x10D:
    case 0x10E:
      goto LABEL_156;
    case 0x60:
    case 0x61:
    case 0x62:
    case 0x63:
    case 0x64:
    case 0xE5:
    case 0xF6:
    case 0xF7:
      v211 = a1[2];
      v212 = *(uint64_t **)(a2 + 32);
      v213 = *v212;
      v214 = v212[1];
      v215 = *(_QWORD *)(v211 + 832);
      if (v215)
        v216 = *(_WORD *)(v215 + 8);
      else
        v216 = 0;
      v343 = sub_1C5D52060(v211, 215, (const llvm::APInt *)&v911, (llvm *)v913, 0, v213, v214, v216);
      v344 = 0;
      v346 = v345;
      v347 = a1[2];
      v348 = *(_QWORD *)(a2 + 32);
      v349 = *(_QWORD *)(v348 + 40);
      v350 = *(_QWORD *)(v348 + 48);
      v351 = *(_QWORD *)(v347 + 832);
      if (v351)
        v344 = *(_WORD *)(v351 + 8);
      v352 = sub_1C5D52060(v347, 215, (const llvm::APInt *)&v911, (llvm *)v913, 0, v349, v350, v344);
      v178 = sub_1C5D56C70(a1[2], *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v343, v346, v354, (uint64_t)v352, v353, *(_WORD *)(a2 + 72));
      goto LABEL_258;
    case 0x65:
    case 0x66:
    case 0x67:
    case 0x68:
    case 0x69:
    case 0x6C:
    case 0x77:
    case 0x78:
      v180 = a1[2];
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v181 = *(_QWORD *)(a2 + 32);
      v182 = *(_DWORD *)(v181 + 8);
      v925 = *(unsigned __int8 **)v181;
      LODWORD(v926) = v182;
      v927 = *(uint64_t **)(v181 + 40);
      LODWORD(v928) = *(_DWORD *)(v181 + 48);
      v183 = sub_1C6366344(v180, (const char *)0x89, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v185 = v184;
      v186 = a1[2];
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v187 = *(_QWORD *)(a2 + 32);
      v188 = *(_DWORD *)(v187 + 8);
      v925 = *(unsigned __int8 **)v187;
      LODWORD(v926) = v188;
      v927 = *(uint64_t **)(v187 + 80);
      LODWORD(v928) = *(_DWORD *)(v187 + 88);
      v190 = sub_1C6366344(v186, (const char *)0x89, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v192 = v191;
      v193 = 0;
      v194 = a1[2];
      v195 = *(_QWORD *)(v194 + 832);
      if (v195)
        v193 = *(_WORD *)(v195 + 8);
      v196 = sub_1C5D56C70(v194, 2, (const llvm::APInt *)&v911, (llvm *)1, 0, (uint64_t)v183, 1uLL, v189, (uint64_t)v190, 1uLL, v193);
      v197 = a1[2];
      v198 = (const char *)*(unsigned __int16 *)(a2 + 24);
      LOBYTE(v925) = v913;
      v926 = 0;
      LOBYTE(v927) = 1;
      v928 = 0;
      v916[0] = v196;
      LODWORD(v916[1]) = v199;
      v917 = v183;
      LODWORD(v918) = v185;
      v919 = v190;
      LODWORD(v920) = v192;
      goto LABEL_136;
    case 0x6A:
      v530 = a1[2];
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v531 = *(_QWORD *)(a2 + 32);
      v532 = *(_DWORD *)(v531 + 8);
      v925 = *(unsigned __int8 **)v531;
      LODWORD(v926) = v532;
      v927 = *(uint64_t **)(v531 + 40);
      LODWORD(v928) = *(_DWORD *)(v531 + 48);
      v533 = sub_1C6366344(v530, (const char *)0x89, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v535 = v534;
      v536 = a1[2];
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v537 = *(_QWORD *)(a2 + 32);
      v538 = *(_DWORD *)(v537 + 8);
      v925 = *(unsigned __int8 **)v537;
      LODWORD(v926) = v538;
      v927 = *(uint64_t **)(v537 + 80);
      LODWORD(v928) = *(_DWORD *)(v537 + 88);
      v539 = sub_1C6366344(v536, (const char *)0x89, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v541 = v540;
      v542 = a1[2];
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v543 = *(_QWORD *)(a2 + 32);
      v544 = *(_DWORD *)(v543 + 8);
      v925 = *(unsigned __int8 **)v543;
      LODWORD(v926) = v544;
      v927 = *(uint64_t **)(v543 + 120);
      LODWORD(v928) = *(_DWORD *)(v543 + 128);
      v546 = sub_1C6366344(v542, (const char *)0x89, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v548 = v547;
      v549 = 0;
      v550 = a1[2];
      v551 = *(_QWORD *)(v550 + 832);
      if (v551)
        v549 = *(_WORD *)(v551 + 8);
      v552 = sub_1C5D58E08(v550, (const char *)2, (const llvm::APInt *)&v911, (llvm *)1, 0, (uint64_t)v533, 1, v545, (uint64_t)v539, 1, (uint64_t)v546, 1, 0, v549);
      v553 = a1[2];
      v554 = (const char *)*(unsigned __int16 *)(a2 + 24);
      LOBYTE(v925) = v913;
      v926 = 0;
      LOBYTE(v927) = 1;
      v928 = 0;
      v916[0] = v552;
      LODWORD(v916[1]) = v555;
      v917 = v533;
      LODWORD(v918) = v535;
      v919 = v539;
      LODWORD(v920) = v541;
      v921 = v546;
      v922 = v548;
      v130 = (uint64_t *)&v925;
      v131 = (uint64_t *)v916;
      v132 = v553;
      v133 = v554;
      v134 = 4;
      goto LABEL_137;
    case 0x6B:
    case 0x6E:
    case 0x6F:
    case 0x70:
    case 0x71:
    case 0x72:
    case 0x73:
    case 0x74:
    case 0x75:
    case 0x76:
    case 0x79:
    case 0x7A:
    case 0x7B:
    case 0x7C:
    case 0x7D:
      v123 = a1[2];
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v124 = *(_QWORD *)(a2 + 32);
      v125 = *(_DWORD *)(v124 + 8);
      v925 = *(unsigned __int8 **)v124;
      LODWORD(v926) = v125;
      v927 = *(uint64_t **)(v124 + 40);
      LODWORD(v928) = *(_DWORD *)(v124 + 48);
      v126 = sub_1C6366344(v123, (const char *)0x89, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v127 = a1[2];
      v128 = (const char *)*(unsigned __int16 *)(a2 + 24);
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v925 = (unsigned __int8 *)v126;
      v926 = 1;
      v927 = v126;
      LODWORD(v928) = v129;
      v130 = (uint64_t *)v916;
      v131 = (uint64_t *)&v925;
      v132 = v127;
      v133 = v128;
      v134 = 2;
      goto LABEL_137;
    case 0x6D:
      v556 = a1[2];
      LOBYTE(v916[0]) = v913;
      v916[1] = 0;
      LOBYTE(v917) = 1;
      v918 = 0;
      v557 = *(_QWORD *)(a2 + 32);
      v558 = *(_DWORD *)(v557 + 8);
      v925 = *(unsigned __int8 **)v557;
      LODWORD(v926) = v558;
      v927 = *(uint64_t **)(v557 + 40);
      LODWORD(v928) = *(_DWORD *)(v557 + 48);
      v559 = sub_1C6366344(v556, (const char *)0x89, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v197 = a1[2];
      v198 = (const char *)*(unsigned __int16 *)(a2 + 24);
      LOBYTE(v925) = v913;
      v926 = 0;
      LOBYTE(v927) = 1;
      v928 = 0;
      v916[0] = v559;
      v916[1] = (void *)1;
      v917 = v559;
      LODWORD(v918) = v560;
      v561 = *(_QWORD *)(a2 + 32);
      v919 = *(uint64_t **)(v561 + 80);
      LODWORD(v920) = *(_DWORD *)(v561 + 88);
LABEL_136:
      v130 = (uint64_t *)&v925;
      v131 = (uint64_t *)v916;
      v132 = v197;
      v133 = v198;
      v134 = 3;
LABEL_137:
      v200 = sub_1C6366344(v132, v133, (const llvm::APInt *)&v911, v130, 2, v131, v134);
      v201 = a1[2];
      LOBYTE(v925) = v914;
      v926 = 0;
      LOBYTE(v927) = 1;
      v928 = 0;
      v916[0] = v200;
      v916[1] = (void *)1;
      v917 = v200;
      LODWORD(v918) = v202;
      v919 = sub_1C63662D4(v201, 0, (const llvm::APInt *)&v911, 0);
      v920 = v203;
      v204 = sub_1C6366344(v201, (const char *)0x88, (const llvm::APInt *)&v911, (uint64_t *)&v925, 2, (uint64_t *)v916, 3);
      v206 = (uint64_t *)v205;
      v207 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v207 = v932;
      }
      v208 = (uint64_t **)&v931[2 * v207];
      *v208 = v204;
      v208[1] = v206;
      goto LABEL_140;
    case 0x84:
    case 0x85:
    case 0xD0:
    case 0xD1:
      v306 = sub_1C6141934(a2);
      v307 = v306;
      v308 = *(unsigned __int16 *)(a2 + 24);
      v309 = *(_QWORD *)(a2 + 40);
      v311 = *(llvm **)v309;
      v310 = *(_QWORD *)(v309 + 8);
      v312 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v306);
      v313 = *v312;
      v314 = v312[1];
      if (v306)
        v315 = 132;
      else
        v315 = 208;
      v316 = a1[1];
      if (v306)
        v317 = 133;
      else
        v317 = 209;
      LOBYTE(v318) = (_BYTE)v311;
      while (1)
      {
        v319 = v318 + 1;
        v318 = (v318 + 1);
        if (v319)
        {
          if ((v319 == 1 || *(_QWORD *)(v316 + 8 * v318 + 96))
            && (*(_BYTE *)(v316 + 390 * v318 + v315 + 3862) & 0xFB) == 0)
          {
            break;
          }
        }
        if (v308 != 132
          && v308 != 208
          && v319
          && (v319 == 1 || *(_QWORD *)(v316 + 8 * v318 + 96))
          && (*(_BYTE *)(v316 + 390 * v318 + v317 + 3862) & 0xFB) == 0)
        {
          v315 = v317;
          break;
        }
      }
      v320 = a1[2];
      if (v307)
      {
        v845 = sub_1C636A8B4(v320, v318, 0, 1, 0);
        v435 = sub_1C636D6B4(a1[2], (const char *)v315, (const llvm::APInt *)&v911, v845, v846, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), v847, v313, v314);
      }
      else
      {
        v321 = *(_QWORD *)(v320 + 832);
        if (v321)
          v322 = *(_WORD *)(v321 + 8);
        else
          v322 = 0;
        v435 = sub_1C5D52060(v320, v315, (const llvm::APInt *)&v911, (llvm *)v318, 0, v313, v314, v322);
      }
      v437 = (uint64_t)v435;
      v438 = a1[2];
      v439 = *(_QWORD *)(v438 + 832);
      if (v439)
        v440 = *(_WORD *)(v439 + 8);
      else
        v440 = 0;
      v441 = sub_1C5D52060(v438, 201, (const llvm::APInt *)&v911, v311, v310, v437, v436, v440);
      v443 = v442;
      v444 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v444 = v932;
      }
      v445 = (uint64_t **)&v931[2 * v444];
      *v445 = v441;
      v445[1] = v443;
      v153 = (v932 + 1);
      LODWORD(v932) = v932 + 1;
      if (!v307)
        goto LABEL_112;
      if (v153 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v153 + 1, 16);
        LODWORD(v153) = v932;
      }
      v210 = (char *)&v931[2 * v153];
      *(_QWORD *)v210 = v437;
      goto LABEL_143;
    case 0x86:
    case 0x87:
    case 0xCA:
    case 0xCB:
      v323 = sub_1C6141934(a2);
      v324 = *(unsigned __int16 *)(a2 + 24);
      v326 = v324 == 202 || v324 == 134;
      v327 = *(_QWORD *)(a2 + 32);
      v328 = *(_QWORD *)(a2 + 40);
      v330 = *(llvm **)v328;
      v329 = *(void **)(v328 + 8);
      v331 = (uint64_t *)(v327 + 40 * v323);
      v332 = *v331;
      v333 = v331[1];
      if (v323)
        v334 = 135;
      else
        v334 = 203;
      if (v323)
        v335 = 134;
      else
        v335 = 202;
      v336 = *(llvm **)(*(_QWORD *)(v332 + 40) + 16 * v333);
      v337 = a1[1];
      while (1)
      {
        v338 = (_BYTE)v336 + 1;
        v336 = (llvm *)((_BYTE)v336 + 1);
        if (v338)
        {
          if ((v338 == 1 || *(_QWORD *)(v337 + 8 * (_QWORD)v336 + 96))
            && (*(_BYTE *)(v337 + 390 * v336 + v335 + 3862) & 0xFB) == 0)
          {
            break;
          }
        }
        if (v324 != 134
          && v324 != 202
          && v338
          && (v338 == 1 || *(_QWORD *)(v337 + 8 * (_QWORD)v336 + 96))
          && (*(_BYTE *)(v337 + 390 * v336 + v334 + 3862) & 0xFB) == 0)
        {
          v335 = v334;
          break;
        }
      }
      v339 = a1[2];
      if (!v323)
      {
        if (v326)
          v340 = 198;
        else
          v340 = 199;
        v341 = *(_QWORD *)(v339 + 832);
        if (v341)
          v342 = *(_WORD *)(v341 + 8);
        else
          v342 = 0;
        v45 = sub_1C5D52060(a1[2], v340, (const llvm::APInt *)&v911, v336, 0, v332, v333, v342);
        v47 = v446;
        v447 = *(_QWORD *)(v339 + 832);
        if (v447)
          v51 = *(_WORD *)(v447 + 8);
        else
          v51 = 0;
        v48 = v339;
        v52 = v335;
        v49 = v330;
        v53 = (uint64_t)v329;
        goto LABEL_107;
      }
      v848 = 0;
      v916[0] = v330;
      v916[1] = v329;
      LOBYTE(v917) = 1;
      v918 = 0;
      v849 = *(unsigned __int8 **)v327;
      LODWORD(v926) = *(_DWORD *)(v327 + 8);
      v925 = v849;
      if (v326)
        v850 = 198;
      else
        v850 = 199;
      v851 = *(_QWORD *)(v339 + 832);
      if (v851)
        v848 = *(_WORD *)(v851 + 8);
      v927 = sub_1C5D52060(v339, v850, (const llvm::APInt *)&v911, v336, 0, v332, v333, v848);
      v928 = v852;
      v204 = sub_1C6366344(v339, (const char *)v335, (const llvm::APInt *)&v911, (uint64_t *)v916, 2, (uint64_t *)&v925, 2);
      v854 = v853;
      v855 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v855 = v932;
      }
      v856 = (uint64_t **)&v931[2 * v855];
      *v856 = v204;
      v856[1] = v854;
LABEL_140:
      v209 = (v932 + 1);
      LODWORD(v932) = v209;
      if (v209 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v209 + 1, 16);
        LODWORD(v209) = v932;
      }
      v210 = (char *)&v931[2 * v209];
      *(_QWORD *)v210 = v204;
LABEL_143:
      *((_QWORD *)v210 + 1) = 1;
      goto LABEL_111;
    case 0x8A:
    case 0x8B:
    case 0xC1:
      if (v913 - 120 < 0x20 || v913 - 2 < 6 || v913 - 15 <= 0x3B)
      {
        if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 80) + 76) - 18) < 4)
          v402 = 198;
        else
          v402 = 199;
      }
      else
      {
        v402 = 215;
      }
      if (!sub_1C6141934(a2))
      {
        v429 = a1[2];
        v430 = *(uint64_t **)(a2 + 32);
        v431 = *v430;
        v432 = v430[1];
        v433 = *(_QWORD *)(v429 + 832);
        if (v433)
          v434 = *(_WORD *)(v433 + 8);
        else
          v434 = 0;
        v448 = sub_1C5D52060(v429, v402, (const llvm::APInt *)&v911, (llvm *)v913, 0, v431, v432, v434);
        v450 = v449;
        v451 = a1[2];
        v452 = *(_QWORD *)(a2 + 32);
        v453 = *(_QWORD *)(v452 + 40);
        v454 = *(_QWORD *)(v452 + 48);
        v455 = *(_QWORD *)(v451 + 832);
        if (v455)
          v456 = *(_WORD *)(v455 + 8);
        else
          v456 = 0;
        v457 = sub_1C5D52060(v451, v402, (const llvm::APInt *)&v911, (llvm *)v913, 0, v453, v454, v456);
        v147 = sub_1C5D58E08(a1[2], (const char *)0xC1, (const llvm::APInt *)&v911, **(llvm ***)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)v448, v450, v459, (uint64_t)v457, v458, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 88), HIDWORD(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 88)), *(_WORD *)(a2 + 72));
        goto LABEL_108;
      }
      v866 = *(uint64_t **)(a2 + 32);
      v867 = *v866;
      v868 = v866[1];
      sub_1C5D3F7CC(a1[2], v866[5], v866[6], *v866, v868, (const llvm::APInt *)&v911, v913, 0, (uint64_t)v916);
      v869 = (uint64_t *)v916[0];
      v870 = (int)v916[1];
      sub_1C5D3F7CC(a1[2], *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 88), v867, v868, (const llvm::APInt *)&v911, v913, 0, (uint64_t)v916);
      v871 = (uint64_t *)v916[0];
      v872 = (int)v916[1];
      v925 = (unsigned __int8 *)&v927;
      v927 = v869;
      v928 = 1;
      v929 = v916[0];
      v930 = 1;
      v926 = 0x200000002;
      v873 = sub_1C5D63E30(a1[2], (const llvm::APInt *)&v911, (uint64_t)&v925);
      LODWORD(v868) = v874;
      v875 = sub_1C636A8B4(a1[2], **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), 1, 0);
      v877 = v876;
      v878 = a1[2];
      v879 = (const char *)*(unsigned __int16 *)(a2 + 24);
      v916[0] = v873;
      LODWORD(v916[1]) = v868;
      v917 = v869;
      LODWORD(v918) = v870;
      v919 = v871;
      LODWORD(v920) = v872;
      v880 = *(_QWORD *)(a2 + 32);
      v921 = *(uint64_t **)(v880 + 120);
      v922 = *(_DWORD *)(v880 + 128);
      v881 = sub_1C636D410(v878, v879, (const llvm::APInt *)&v911, v875, v877, (uint64_t *)v916, 4, *(_WORD *)(a2 + 72));
      v883 = v882;
      v884 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v884 = v932;
      }
      v885 = (uint64_t **)&v931[2 * v884];
      *v885 = v881;
      v885[1] = v883;
      v886 = (v932 + 1);
      LODWORD(v932) = v886;
      v887 = (char *)v931;
      v888 = v931[2 * v886 - 2];
      if (v886 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v886 + 1, 16);
        v887 = (char *)v931;
        v886 = v932;
      }
      v889 = &v887[16 * v886];
      *(_QWORD *)v889 = v888;
      *((_QWORD *)v889 + 1) = 1;
      LODWORD(v932) = v932 + 1;
      v227 = v925;
      if (v925 != (unsigned __int8 *)&v927)
LABEL_155:
        free(v227);
LABEL_156:
      LODWORD(v153) = v932;
      goto LABEL_112;
    case 0x8D:
      v524 = a1[2];
      v525 = *(uint64_t **)(a2 + 32);
      v526 = *v525;
      v527 = v525[1];
      v528 = *(_QWORD *)(v524 + 832);
      if (v528)
        v529 = *(_WORD *)(v528 + 8);
      else
        v529 = 0;
      v677 = sub_1C5D52060(v524, 215, (const llvm::APInt *)&v911, (llvm *)v913, 0, v526, v527, v529);
      v678 = 0;
      v680 = v679;
      v681 = a1[2];
      v682 = *(_QWORD *)(a2 + 32);
      v683 = *(_QWORD *)(v682 + 40);
      v684 = *(_QWORD *)(v682 + 48);
      v685 = *(_QWORD *)(v681 + 832);
      if (v685)
        v678 = *(_WORD *)(v685 + 8);
      v686 = sub_1C5D52060(v681, 215, (const llvm::APInt *)&v911, (llvm *)v913, 0, v683, v684, v678);
      v687 = 0;
      v689 = v688;
      v690 = a1[2];
      v691 = *(_QWORD *)(a2 + 32);
      v692 = *(_QWORD *)(v691 + 80);
      v693 = *(_QWORD *)(v691 + 88);
      v694 = *(_QWORD *)(v690 + 832);
      if (v694)
        v687 = *(_WORD *)(v694 + 8);
      v695 = sub_1C5D52060(v690, 215, (const llvm::APInt *)&v911, (llvm *)v913, 0, v692, v693, v687);
      v698 = 0;
      v357 = a1[2];
      v358 = (llvm *)v914;
      v699 = *(_QWORD *)(v357 + 832);
      if (v699)
        v698 = *(_WORD *)(v699 + 8);
      v355 = sub_1C5D58E08(v357, (const char *)*(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v677, v680, v697, (uint64_t)v686, v689, (uint64_t)v695, v696, 0, v698);
      v356 = v700;
      v359 = a1[2];
      goto LABEL_259;
    case 0x8F:
    case 0xE4:
      v421 = a1[2];
      v422 = *(uint64_t **)(a2 + 32);
      v423 = *v422;
      v424 = v422[1];
      v425 = *(_QWORD *)(v421 + 832);
      if (v425)
        v426 = *(_WORD *)(v425 + 8);
      else
        v426 = 0;
      v513 = sub_1C5D52060(v421, 215, (const llvm::APInt *)&v911, (llvm *)v913, 0, v423, v424, v426);
      v515 = 0;
      v516 = *(_QWORD *)(a2 + 32);
      v517 = *(_QWORD *)(v516 + 40);
      v518 = *(unsigned int *)(v516 + 48);
      v519 = a1[2];
      v520 = *(_QWORD *)(v519 + 832);
      if (v520)
        v515 = *(_WORD *)(v520 + 8);
      v355 = sub_1C5D56C70(v519, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v513, v512, v514, v517, v518, v515);
      v356 = v521;
      v360 = *(unsigned __int16 *)(a2 + 24) == 143;
      v357 = a1[2];
      v358 = (llvm *)v914;
      v359 = v357;
      goto LABEL_260;
    case 0x92:
      v76 = sub_1C47F37A0(&v914);
      v77 = sub_1C47F37A0(&v913);
      v78 = sub_1C5CE06A4(v76, v77);
      v916[0] = &v917;
      v916[1] = (void *)0x800000000;
      if (*(_WORD *)(a2 + 56))
      {
        v79 = 0;
        v80 = (llvm *)v78;
        v81 = 40 * *(unsigned __int16 *)(a2 + 56);
        do
        {
          v82 = (uint64_t *)(*(_QWORD *)(a2 + 32) + v79);
          v83 = *v82;
          v84 = v82[1];
          v85 = a1[2];
          v86 = *(unsigned __int8 **)(*v82 + 64);
          v925 = v86;
          if (v86)
            llvm::MetadataTracking::track((uint64_t)&v925, v86, 2);
          LODWORD(v926) = *(_DWORD *)(v83 + 60);
          v87 = *(_QWORD *)(v85 + 832);
          if (v87)
            v88 = *(_WORD *)(v87 + 8);
          else
            v88 = 0;
          v89 = sub_1C5D52060(v85, 216, (const llvm::APInt *)&v925, v80, 0, v83, v84, v88);
          v91 = v90;
          v92 = LODWORD(v916[1]);
          if (LODWORD(v916[1]) >= (unint64_t)HIDWORD(v916[1]))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v916, (uint64_t)&v917, LODWORD(v916[1]) + 1, 16);
            v92 = LODWORD(v916[1]);
          }
          v93 = (uint64_t **)((char *)v916[0] + 16 * v92);
          *v93 = v89;
          v93[1] = v91;
          ++LODWORD(v916[1]);
          if (v925)
            llvm::MetadataTracking::untrack((uint64_t)&v925, v925);
          v79 += 40;
        }
        while (v81 != v79);
      }
      v94 = *(unsigned __int8 **)(a2 + 64);
      v925 = v94;
      if (v94)
        llvm::MetadataTracking::track((uint64_t)&v925, v94, 2);
      LODWORD(v926) = *(_DWORD *)(a2 + 60);
      v95 = a1[2];
      v96 = *(_QWORD *)(v95 + 832);
      if (v96)
        v97 = *(unsigned __int16 *)(v96 + 8);
      else
        v97 = 0;
      v218 = sub_1C636D0C8(v95, (const char *)0x95, (const llvm::APInt *)&v925, (llvm *)v913, 0, (uint64_t *)v916[0], LODWORD(v916[1]), v97);
      v219 = a1[2];
      v220 = *(_QWORD *)(v219 + 832);
      if (v220)
        v221 = *(_WORD *)(v220 + 8);
      else
        v221 = 0;
      v222 = sub_1C5D52060(v219, 216, (const llvm::APInt *)&v925, (llvm *)v914, 0, (uint64_t)v218, v217, v221);
      v224 = v223;
      v225 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v225 = v932;
      }
      v226 = (uint64_t **)&v931[2 * v225];
      *v226 = v222;
      v226[1] = v224;
      LODWORD(v932) = v932 + 1;
      if (v925)
        llvm::MetadataTracking::untrack((uint64_t)&v925, v925);
      v227 = (unsigned __int8 *)v916[0];
      if (v916[0] != &v917)
        goto LABEL_155;
      goto LABEL_156;
    case 0x93:
      v619 = sub_1C47F37A0(&v914);
      v620 = sub_1C47F37A0(&v913);
      v906 = (llvm *)v620;
      LOBYTE(v915[0]) = sub_1C5CE06A4(v619, v620);
      if ((LOBYTE(v915[0]) - 120) <= 0x32u)
        llvm::reportInvalidSizeRequest((llvm *)"Possible incorrect use of MVT::getVectorNumElements() for scalable vector. Scalable flag may be dropped, use MVT::getVectorElementCount() instead", v621);
      v622 = sub_1C47F381C((unsigned __int8 *)v915);
      v623 = *(_QWORD **)(a2 + 32);
      v624 = v623[6];
      v894 = v623[5];
      v625 = v623[10];
      v626 = v623[11];
      v627 = *(_QWORD *)(v625 + 40) + 16 * v626;
      v628 = *(llvm **)v627;
      v910 = *(void **)(v627 + 8);
      v629 = *(void **)(a2 + 64);
      v916[0] = v629;
      if (v629)
        llvm::MetadataTracking::track((uint64_t)v916, (unsigned __int8 *)v629, 2);
      LODWORD(v916[1]) = *(_DWORD *)(a2 + 60);
      v630 = a1[2];
      v925 = 0;
      v926 = 0;
      v903 = v622;
      v632 = sub_1C6366AB4(v630, v622, (const llvm::APInt *)&v925, v628, (uint64_t)v910, 0, 0);
      v634 = v633;
      if (v925)
        llvm::MetadataTracking::untrack((uint64_t)&v925, v925);
      v635 = a1[2];
      v636 = *(_QWORD *)(v635 + 832);
      if (v636)
        LOWORD(v636) = *(_WORD *)(v636 + 8);
      v637 = sub_1C5D56C70(v635, 58, (const llvm::APInt *)v916, v628, (uint64_t)v910, v625, v626, v631, (uint64_t)v632, v634, v636);
      v898 = v638;
      v900 = (uint64_t)v637;
      v639 = a1[2];
      v640 = *(uint64_t **)(a2 + 32);
      v641 = *v640;
      v642 = v640[1];
      v643 = *(_QWORD *)(v639 + 832);
      if (v643)
        v644 = *(_WORD *)(v643 + 8);
      else
        v644 = 0;
      v792 = sub_1C5D52060(v639, 216, (const llvm::APInt *)v916, (llvm *)v913, 0, v641, v642, v644);
      v794 = v793;
      v795 = a1[2];
      v796 = *(_QWORD *)(v795 + 832);
      if (v796)
        v797 = *(_WORD *)(v796 + 8);
      else
        v797 = 0;
      v798 = sub_1C5D52060(v795, 216, (const llvm::APInt *)v916, (llvm *)LOBYTE(v915[0]), 0, v894, v624, v797);
      v893 = v799;
      v896 = (uint64_t)v798;
      if (v622)
      {
        v800 = 0;
        do
        {
          v803 = sub_1C6366AB4(a1[2], v800, (const llvm::APInt *)v916, v628, (uint64_t)v910, 0, 0);
          v804 = v801;
          v805 = a1[2];
          v806 = *(_QWORD *)(v805 + 832);
          if (v806)
            LOWORD(v806) = *(_WORD *)(v806 + 8);
          v807 = v628;
          v809 = sub_1C5D56C70(v805, 56, (const llvm::APInt *)v916, v628, (uint64_t)v910, v900, v898, v802, (uint64_t)v803, v801, v806);
          v811 = v810;
          v812 = a1[2];
          v813 = *(_QWORD *)(v812 + 832);
          if (v813)
            LOWORD(v813) = *(_WORD *)(v813 + 8);
          v814 = sub_1C5D56C70(v812, 148, (const llvm::APInt *)v916, v906, 0, v896, v893, v808, (uint64_t)v803, v804, v813);
          v817 = a1[2];
          v818 = *(_QWORD *)(v817 + 832);
          if (v818)
            LOWORD(v818) = *(_WORD *)(v818 + 8);
          v792 = sub_1C5D58E08(v817, (const char *)0x93, (const llvm::APInt *)v916, (llvm *)v913, 0, (uint64_t)v792, v794, v816, (uint64_t)v814, v815, (uint64_t)v809, v811, SHIDWORD(v811), v818);
          v794 = v794 & 0xFFFFFFFF00000000 | v819;
          ++v800;
          v628 = v807;
        }
        while (v903 != v800);
      }
      v820 = a1[2];
      v821 = *(_QWORD *)(v820 + 832);
      if (v821)
        v822 = *(_WORD *)(v821 + 8);
      else
        v822 = 0;
      v823 = sub_1C5D52060(v820, 216, (const llvm::APInt *)v916, (llvm *)v914, 0, (uint64_t)v792, v794, v822);
      v825 = v824;
      v826 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v826 = v932;
      }
      v827 = (uint64_t **)&v931[2 * v826];
      *v827 = v823;
      v827[1] = v825;
      LODWORD(v932) = v932 + 1;
      v828 = (unsigned __int8 *)v916[0];
      if (!v916[0])
        goto LABEL_156;
      v829 = v916;
      goto LABEL_522;
    case 0x94:
      v577 = sub_1C47F37A0(&v914);
      v578 = sub_1C47F37A0(&v913);
      v897 = (llvm *)v577;
      v908 = (llvm *)v578;
      LOBYTE(v915[0]) = sub_1C5CE06A4(v577, v578);
      if ((LOBYTE(v915[0]) - 120) <= 0x32u)
        llvm::reportInvalidSizeRequest((llvm *)"Possible incorrect use of MVT::getVectorNumElements() for scalable vector. Scalable flag may be dropped, use MVT::getVectorElementCount() instead", v579);
      v580 = sub_1C47F381C((unsigned __int8 *)v915);
      v581 = *(_QWORD *)(a2 + 32);
      v582 = *(_QWORD *)(v581 + 40);
      v583 = *(_QWORD *)(v581 + 48);
      v584 = *(_QWORD *)(v582 + 40) + 16 * v583;
      v585 = *(llvm **)v584;
      v586 = *(_QWORD *)(v584 + 8);
      v587 = *(unsigned __int8 **)(a2 + 64);
      v925 = v587;
      if (v587)
        llvm::MetadataTracking::track((uint64_t)&v925, v587, 2);
      LODWORD(v926) = *(_DWORD *)(a2 + 60);
      v588 = v580;
      v589 = sub_1C6366AB4(a1[2], v580, (const llvm::APInt *)&v925, v585, v586, 0, 0);
      v592 = a1[2];
      v593 = *(_QWORD *)(v592 + 832);
      if (v593)
        LOWORD(v593) = *(_WORD *)(v593 + 8);
      v594 = sub_1C5D56C70(v592, 58, (const llvm::APInt *)&v925, v585, v586, v582, v583, v591, (uint64_t)v589, v590, v593);
      v902 = v595;
      v905 = (uint64_t)v594;
      v596 = a1[2];
      v597 = *(uint64_t **)(a2 + 32);
      v598 = *v597;
      v599 = v597[1];
      v600 = *(_QWORD *)(v596 + 832);
      if (v600)
        v601 = *(_WORD *)(v600 + 8);
      else
        v601 = 0;
      v746 = sub_1C5D52060(v596, 216, (const llvm::APInt *)&v925, (llvm *)v913, 0, v598, v599, v601);
      v748 = (uint64_t *)&v917;
      v916[0] = &v917;
      v916[1] = (void *)0x800000000;
      if (v580)
      {
        v749 = (uint64_t)v746;
        v750 = v747;
        v751 = 0;
        do
        {
          v752 = sub_1C6366AB4(a1[2], v751, (const llvm::APInt *)&v925, v585, v586, 0, 0);
          v755 = a1[2];
          v756 = *(_QWORD *)(v755 + 832);
          if (v756)
            LOWORD(v756) = *(_WORD *)(v756 + 8);
          v757 = sub_1C5D56C70(v755, 56, (const llvm::APInt *)&v925, v585, v586, v905, v902, v754, (uint64_t)v752, v753, v756);
          v760 = a1[2];
          v761 = *(_QWORD *)(v760 + 832);
          if (v761)
            LOWORD(v761) = *(_WORD *)(v761 + 8);
          v762 = sub_1C5D56C70(v760, 148, (const llvm::APInt *)&v925, v908, 0, v749, v750, v759, (uint64_t)v757, v758, v761);
          v764 = v763;
          v765 = LODWORD(v916[1]);
          if (LODWORD(v916[1]) >= (unint64_t)HIDWORD(v916[1]))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v916, (uint64_t)&v917, LODWORD(v916[1]) + 1, 16);
            v765 = LODWORD(v916[1]);
          }
          v766 = (uint64_t **)((char *)v916[0] + 16 * v765);
          *v766 = v762;
          v766[1] = v764;
          v767 = ++LODWORD(v916[1]);
          ++v751;
        }
        while (v588 != v751);
        v748 = (uint64_t *)v916[0];
      }
      else
      {
        v767 = 0;
      }
      v768 = a1[2];
      v769 = *(_QWORD *)(v768 + 832);
      if (v769)
        v770 = *(unsigned __int16 *)(v769 + 8);
      else
        v770 = 0;
      v772 = sub_1C636D0C8(v768, (const char *)0x92, (const llvm::APInt *)&v925, (llvm *)LOBYTE(v915[0]), 0, v748, v767, v770);
      v773 = a1[2];
      v774 = *(_QWORD *)(v773 + 832);
      if (v774)
        v775 = *(_WORD *)(v774 + 8);
      else
        v775 = 0;
      v776 = sub_1C5D52060(v773, 216, (const llvm::APInt *)&v925, v897, 0, (uint64_t)v772, v771, v775);
      v778 = v777;
      v779 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v779 = v932;
      }
      v780 = (uint64_t **)&v931[2 * v779];
      *v780 = v776;
      v780[1] = v778;
      LODWORD(v932) = v932 + 1;
      v781 = v916[0];
      if (v916[0] == &v917)
        goto LABEL_520;
      goto LABEL_481;
    case 0x99:
      *(_OWORD *)v916 = *(_OWORD *)*(_QWORD *)(a2 + 40);
      __src = *(void **)(a2 + 80);
      v612 = sub_1C612FE00((llvm::EVT *)v916, (const char *)v15);
      v613 = a1[2];
      v614 = *(uint64_t **)(a2 + 32);
      v615 = *v614;
      v616 = v614[1];
      v617 = *(_QWORD *)(v613 + 832);
      if (v617)
        v618 = *(_WORD *)(v617 + 8);
      else
        v618 = 0;
      v715 = sub_1C5D52060(v613, 216, (const llvm::APInt *)&v911, (llvm *)v913, 0, v615, v616, v618);
      v716 = 0;
      v718 = v717;
      v719 = a1[2];
      v720 = *(_QWORD *)(a2 + 32);
      v721 = *(_QWORD *)(v720 + 40);
      v722 = *(_QWORD *)(v720 + 48);
      v723 = *(_QWORD *)(v719 + 832);
      if (v723)
        v716 = *(_WORD *)(v723 + 8);
      v724 = sub_1C5D52060(v719, 216, (const llvm::APInt *)&v911, (llvm *)v913, 0, v721, v722, v716);
      v726 = v725;
      v925 = (unsigned __int8 *)v913;
      v926 = 0;
      v915[0] = v914;
      v915[1] = 0;
      v727 = sub_1C612FE00((llvm::EVT *)v915, v725);
      v729 = sub_1C612FE00((llvm::EVT *)&v925, v728);
      v730 = v729 / v727;
      if (v729 / v727 == 1)
      {
        v731 = sub_1C5D41DE4(a1[2], (llvm *)v925, v926, (uint64_t)&v911, (uint64_t)v715, v718, (uint64_t)v724, v726, __src, v612);
        v733 = v732;
      }
      else
      {
        v916[0] = &v917;
        v916[1] = (void *)0x800000000;
        v895 = v726;
        v899 = (uint64_t)v724;
        v901 = v718;
        v734 = 0;
        v735 = 0;
        v736 = v727;
        v737 = __src;
        do
        {
          if (v727 <= v729)
          {
            v738 = 0;
            v739 = v737[v735];
            v740 = v730;
            do
            {
              if (v739 < 0)
              {
                v742 = HIDWORD(v916[1]);
                v741 = -1;
              }
              else
              {
                v741 = v738 + v739 * v730;
                v742 = HIDWORD(v916[1]);
              }
              if (v734 >= v742)
              {
                v892 = v729;
                v891 = v736;
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v916, (uint64_t)&v917, v734 + 1, 4);
                v736 = v891;
                v729 = v892;
                v737 = __src;
                v734 = v916[1];
              }
              *((_DWORD *)v916[0] + v734) = v741;
              v734 = ++LODWORD(v916[1]);
              ++v738;
              --v740;
            }
            while (v740);
          }
          ++v735;
        }
        while (v735 != v736);
        v731 = sub_1C5D41DE4(a1[2], (llvm *)v925, v926, (uint64_t)&v911, (uint64_t)v715, v901, v899, v895, v916[0], v734);
        v733 = v864;
        if (v916[0] != &v917)
          free(v916[0]);
      }
      v290 = v733;
      v285 = a1[2];
      v287 = (llvm *)v914;
      v865 = *(_QWORD *)(v285 + 832);
      if (v865)
        v284 = *(_WORD *)(v865 + 8);
      else
        v284 = 0;
      v286 = 216;
      v288 = 0;
      v289 = (uint64_t)v731;
      goto LABEL_279;
    case 0x9A:
      v98 = a1[2];
      v99 = *(uint64_t **)(a2 + 32);
      v100 = *v99;
      v101 = v99[1];
      v102 = *(_QWORD *)(v98 + 832);
      if (v102)
        v103 = *(_WORD *)(v102 + 8);
      else
        v103 = 0;
      v228 = sub_1C5D52060(v98, 200, (const llvm::APInt *)&v911, (llvm *)v913, 0, v100, v101, v103);
      v230 = v229;
      v231 = a1[2];
      v232 = *(_QWORD *)(a2 + 32);
      v233 = *(_QWORD *)(v232 + 40);
      v234 = *(_QWORD *)(v232 + 48);
      v235 = *(_QWORD *)(v231 + 832);
      if (v235)
        v236 = *(_WORD *)(v235 + 8);
      else
        v236 = 0;
      v237 = sub_1C5D52060(v231, 200, (const llvm::APInt *)&v911, (llvm *)v913, 0, v233, v234, v236);
      v240 = a1[2];
      v241 = *(_QWORD *)(a2 + 32);
      v242 = *(_QWORD *)(v241 + 80);
      v243 = *(_QWORD *)(v241 + 88);
      v244 = *(_QWORD *)(v240 + 832);
      if (v244)
        LOWORD(v244) = *(_WORD *)(v244 + 8);
      v245 = sub_1C5D58E08(v240, (const char *)0x9A, (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v228, v230, v239, (uint64_t)v237, v238, v242, v243, SHIDWORD(v243), v244);
      goto LABEL_164;
    case 0x9B:
      v602 = sub_1C47F37A0(&v914);
      v603 = sub_1C47F37A0(&v913);
      v604 = sub_1C5CE06A4(v602, v603);
      v605 = *(uint64_t **)(a2 + 32);
      v606 = *v605;
      v607 = v605[1];
      v608 = *(unsigned __int8 **)(a2 + 64);
      v925 = v608;
      if (v608)
        llvm::MetadataTracking::track((uint64_t)&v925, v608, 2);
      LODWORD(v926) = *(_DWORD *)(a2 + 60);
      v609 = a1[2];
      v610 = *(_QWORD *)(v609 + 832);
      if (v610)
        v611 = *(_WORD *)(v610 + 8);
      else
        v611 = 0;
      v701 = sub_1C5D52060(v609, 216, (const llvm::APInt *)&v925, (llvm *)v604, 0, v606, v607, v611);
      v703 = v702;
      v705 = sub_1C61312D0(a1[2], (llvm *)v604, 0);
      v706 = v704;
      v916[0] = &v917;
      v917 = v701;
      v918 = v703;
      v916[1] = (void *)0x800000001;
      if (v914 - 120 <= 0x32)
        llvm::reportInvalidSizeRequest((llvm *)"Possible incorrect use of MVT::getVectorNumElements() for scalable vector. Scalable flag may be dropped, use MVT::getVectorElementCount() instead", v704);
      v707 = sub_1C47F381C(&v914);
      v708 = v916[1];
      v709 = v707 - 1;
      if (v707 != 1)
      {
        do
        {
          if (v708 >= HIDWORD(v916[1]))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v916, (uint64_t)&v917, v708 + 1, 16);
            v708 = v916[1];
          }
          v714 = (char *)v916[0] + 16 * v708;
          *v714 = v705;
          v714[1] = v706;
          v708 = ++LODWORD(v916[1]);
          --v709;
        }
        while (v709);
      }
      v710 = a1[2];
      v711 = v708;
      v712 = *(_QWORD *)(v710 + 832);
      if (v712)
        v713 = *(unsigned __int16 *)(v712 + 8);
      else
        v713 = 0;
      v783 = sub_1C636D0C8(v710, (const char *)0x95, (const llvm::APInt *)&v925, (llvm *)v913, 0, (uint64_t *)v916[0], v711, v713);
      v784 = a1[2];
      v785 = *(_QWORD *)(v784 + 832);
      if (v785)
        v786 = *(_WORD *)(v785 + 8);
      else
        v786 = 0;
      v787 = sub_1C5D52060(v784, 216, (const llvm::APInt *)&v925, (llvm *)v914, 0, (uint64_t)v783, v782, v786);
      v789 = v788;
      v790 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v790 = v932;
      }
      v791 = (uint64_t **)&v931[2 * v790];
      *v791 = v787;
      v791[1] = v789;
      LODWORD(v932) = v932 + 1;
      v781 = v916[0];
      if (v916[0] != &v917)
LABEL_481:
        free(v781);
      goto LABEL_520;
    case 0xB6:
    case 0xBA:
      v410 = sub_1C47A8C74(&v913);
      v412 = v411;
      v414 = sub_1C47A8C74(&v914);
      if (v412 == 1)
      v415 = a1[2];
      v416 = *(uint64_t **)(a2 + 32);
      v417 = *v416;
      v418 = v416[1];
      v419 = *(_QWORD *)(v415 + 832);
      if (v419)
        v420 = *(_WORD *)(v419 + 8);
      else
        v420 = 0;
      v495 = v410 - v414;
      v497 = sub_1C5D52060(v415, 199, (const llvm::APInt *)&v911, (llvm *)v913, 0, v417, v418, v420);
      v498 = 0;
      v499 = a1[2];
      v500 = *(_QWORD *)(v499 + 832);
      if (v500)
        v498 = *(_WORD *)(v500 + 8);
      v501 = sub_1C5D52060(v499, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v497, v496, v498);
      v503 = v502;
      v504 = (llvm *)v913;
      v505 = a1[2];
      ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy((uint64_t *)a1[1], v913, 0, *(_QWORD *)(**(_QWORD **)(v505 + 40) + 40) + 272, 1);
      v508 = sub_1C6366AB4(v505, v495, (const llvm::APInt *)&v911, ShiftAmountTy, v507, 0, 0);
      v511 = *(_QWORD *)(v505 + 832);
      if (v511)
        LOWORD(v511) = *(_WORD *)(v511 + 8);
      v245 = sub_1C5D56C70(v505, 177, (const llvm::APInt *)&v911, v504, 0, (uint64_t)v501, v503, v510, (uint64_t)v508, v509, v511);
LABEL_164:
      v45 = v245;
      v47 = v246;
      v48 = a1[2];
      v49 = (llvm *)v914;
      v247 = *(_QWORD *)(v48 + 832);
      if (v247)
        v51 = *(_WORD *)(v247 + 8);
      else
        v51 = 0;
      v52 = 201;
LABEL_37:
      v53 = 0;
      goto LABEL_107;
    case 0xB7:
    case 0xB8:
    case 0xB9:
    case 0xBC:
    case 0xBD:
      if ((_DWORD)v15 == 188 || (_DWORD)v15 == 183)
      {
        v18 = a1[2];
        v19 = (llvm *)v913;
        v20 = *(uint64_t **)(a2 + 32);
        v21 = *v20;
        v22 = v20[1];
        v23 = *(_QWORD *)(v18 + 832);
        if (v23)
          v24 = *(_WORD *)(v23 + 8);
        else
          v24 = 0;
        v69 = 200;
      }
      else
      {
        v18 = a1[2];
        v19 = (llvm *)v913;
        v67 = *(uint64_t **)(a2 + 32);
        v21 = *v67;
        v22 = v67[1];
        v68 = *(_QWORD *)(v18 + 832);
        if (v68)
          v24 = *(_WORD *)(v68 + 8);
        else
          v24 = 0;
        v69 = 199;
      }
      v135 = sub_1C5D52060(v18, v69, (const llvm::APInt *)&v911, v19, 0, v21, v22, v24);
      v137 = v136;
      v138 = *(unsigned __int16 *)(a2 + 24);
      if ((_DWORD)v138 != 183)
        goto LABEL_98;
      v292 = sub_1C47A8C74(&v913);
      if ((_DWORD)v291 == 1)
      v294 = sub_1C47A8C74(&v914);
      if ((_DWORD)v293 == 1)
      LODWORD(v916[1]) = v292;
      if (v292 <= 0x40)
      {
        v295 = 0;
        v296 = 1 << v294;
LABEL_191:
        v916[0] = (void *)(v295 | v296);
        goto LABEL_192;
      }
      llvm::APInt::initSlowCase((llvm::APInt *)v916, 0, 0);
      v296 = 1 << v294;
      if (LODWORD(v916[1]) <= 0x40)
      {
        v295 = (unint64_t)v916[0];
        goto LABEL_191;
      }
      *((_QWORD *)v916[0] + (v294 >> 6)) |= v296;
LABEL_192:
      v297 = a1[2];
      v298 = (llvm *)v913;
      v299 = sub_1C63666FC(v297, (llvm::LLVMContext *)v916, (const llvm::APInt *)&v911, v913, 0, 0, 0);
      v302 = *(_QWORD *)(v297 + 832);
      if (v302)
        LOWORD(v302) = *(_WORD *)(v302 + 8);
      v135 = sub_1C5D56C70(v297, 172, (const llvm::APInt *)&v911, v298, 0, (uint64_t)v135, v137, v301, v299, v300, v302);
      v137 = v303;
      if (LODWORD(v916[1]) >= 0x41 && v916[0])
        MEMORY[0x1CAA32F9C](v916[0], 0x1000C8000313F17);
      v138 = *(unsigned __int16 *)(a2 + 24);
LABEL_98:
      v139 = a1[2];
      v140 = *(_QWORD *)(v139 + 832);
      if (v140)
        v141 = *(_WORD *)(v140 + 8);
      else
        v141 = 0;
      v142 = sub_1C5D52060(v139, v138, (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v135, v137, v141);
      v144 = v143;
      v145 = *(unsigned __int16 *)(a2 + 24);
      if (v145 == 189 || v145 == 184)
      {
        v161 = a1[2];
        v162 = (llvm *)v913;
        v163 = sub_1C47A8C74(&v913);
        v165 = v164;
        v167 = v163 - sub_1C47A8C74(&v914);
        if (v165 == 1)
        v168 = sub_1C6366AB4(v161, v167, (const llvm::APInt *)&v911, (llvm *)v913, 0, 0, 0);
        v171 = *(_QWORD *)(v161 + 832);
        if (v171)
          LOWORD(v171) = *(_WORD *)(v171 + 8);
        v142 = sub_1C5D56C70(v161, 57, (const llvm::APInt *)&v911, v162, 0, (uint64_t)v142, v144, v170, (uint64_t)v168, v169, v171);
        v144 = v172;
      }
      v48 = a1[2];
      v49 = (llvm *)v914;
      v146 = *(_QWORD *)(v48 + 832);
      if (v146)
        v51 = *(_WORD *)(v146 + 8);
      else
        v51 = 0;
      v52 = 201;
      v53 = 0;
      v45 = v142;
      v47 = v144;
LABEL_107:
      v147 = sub_1C5D52060(v48, v52, (const llvm::APInt *)&v911, v49, v53, (uint64_t)v45, v47, v51);
LABEL_108:
      v149 = v147;
      v150 = v148;
      v151 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v151 = v932;
      }
      v152 = (uint64_t **)&v931[2 * v151];
      *v152 = v149;
      v152[1] = v150;
      goto LABEL_111;
    case 0xBE:
      v118 = *(_QWORD *)(a2 + 40);
      v119 = *(void **)v118;
      v120 = *(_DWORD **)(v118 + 8);
      if (!(_BYTE)v119)
      {
        if ((v120[2] & 0xFE) != 0x12)
        {
          v916[0] = v119;
          v916[1] = v120;
          ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v916);
          goto LABEL_171;
        }
LABEL_173:
        v254 = 0;
        v255 = 216;
        v256 = 216;
        goto LABEL_174;
      }
      if (v119 - 15 < 0x9C)
        goto LABEL_173;
      v916[0] = v119;
      v916[1] = v120;
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)v916);
LABEL_171:
      v252 = v122;
      if (ExtendedSizeInBits == sub_1C47A8C74(&v913) && v252 == v253)
        goto LABEL_173;
      v304 = *(uint64_t **)(a2 + 40);
      v305 = *v304;
      if (!*v304)
      {
        v427 = v304[1];
        v428 = *(_DWORD *)(v427 + 8);
        if ((v428 & 0xFE) == 0x12)
          v428 = *(_DWORD *)(**(_QWORD **)(v427 + 16) + 8);
        if (v428 != 13)
          goto LABEL_202;
LABEL_301:
        v254 = 0;
        v256 = 200;
        v255 = 201;
        goto LABEL_174;
      }
      if ((v305 + 104) > 0xDFu
        || (v305 - 8) > 0xF9u
        || (v305 - 75) >= 0xC4u)
      {
        goto LABEL_301;
      }
LABEL_202:
      v256 = 215;
      v255 = 212;
      v254 = 1;
LABEL_174:
      v257 = *(_QWORD *)(a2 + 32);
      v258 = *(_QWORD *)v257;
      v259 = *(unsigned int *)(v257 + 8);
      v260 = a1[2];
      v261 = *(_QWORD *)(v257 + 40);
      v262 = *(_QWORD *)(v257 + 48);
      v263 = *(_QWORD *)(v260 + 832);
      if (v263)
        v264 = *(_WORD *)(v263 + 8);
      else
        v264 = 0;
      v265 = sub_1C5D52060(v260, v256, (const llvm::APInt *)&v911, (llvm *)v913, 0, v261, v262, v264);
      v267 = v266;
      v268 = a1[2];
      v269 = *(_QWORD *)(a2 + 32);
      v270 = *(_QWORD *)(v269 + 80);
      v271 = *(_QWORD *)(v269 + 88);
      v272 = *(_QWORD *)(v268 + 832);
      if (v272)
        v273 = *(_WORD *)(v272 + 8);
      else
        v273 = 0;
      v274 = sub_1C5D52060(v268, v256, (const llvm::APInt *)&v911, (llvm *)v913, 0, v270, v271, v273);
      v276 = sub_1C4815A8C(a1[2], (const llvm::APInt *)&v911, (llvm *)v913, 0, v258, v259, (uint64_t)v265, v267, (uint64_t)v274, v275, 0);
      v278 = v277;
      *((_WORD *)v276 + 36) = *(_WORD *)(a2 + 72);
      v279 = a1[2];
      v280 = *(_QWORD *)(a2 + 40);
      v282 = *(llvm **)v280;
      v281 = *(_QWORD *)(v280 + 8);
      if ((v254 & 1) != 0)
      {
        v649 = sub_1C63662D4(a1[2], 0, (const llvm::APInt *)&v911, 0);
        v652 = *(_QWORD *)(v279 + 832);
        if (v652)
          LOWORD(v652) = *(_WORD *)(v652 + 8);
        v396 = sub_1C5D56C70(v279, 212, (const llvm::APInt *)&v911, v282, v281, (uint64_t)v276, v278, v651, (uint64_t)v649, v650, v652);
      }
      else
      {
        v283 = *(_QWORD *)(v279 + 832);
        if (v283)
          v284 = *(_WORD *)(v283 + 8);
        else
          v284 = 0;
        v285 = a1[2];
        v286 = v255;
        v287 = v282;
        v288 = v281;
        v289 = (uint64_t)v276;
        v290 = v278;
LABEL_279:
        v396 = sub_1C5D52060(v285, v286, (const llvm::APInt *)&v911, v287, v288, v289, v290, v284);
      }
LABEL_280:
      v398 = v396;
      v399 = (uint64_t *)v397;
      v400 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v400 = v932;
      }
      v401 = (uint64_t **)&v931[2 * v400];
      *v401 = v398;
      v401[1] = v399;
LABEL_111:
      LODWORD(v153) = v932 + 1;
      LODWORD(v932) = v932 + 1;
LABEL_112:
      if ((_DWORD)v153)
        sub_1C5CD122C((uint64_t)a1, a2, v931);
      if (v911)
        llvm::MetadataTracking::untrack((uint64_t)&v911, v911);
      if (v931 != v933)
        free(v931);
      return;
    case 0xC0:
      v104 = *(_QWORD *)(a2 + 32);
      v105 = *(_QWORD *)(v104 + 160);
      v106 = *(_DWORD *)(v105 + 76);
      v107 = v913;
      v110 = v913 - 2 < 6 || v913 - 15 < 0x3C || v913 - 120 < 0x20;
      if (v106 - 18 < 4)
        v111 = 198;
      else
        v111 = 199;
      if (v110)
        v112 = v111;
      else
        v112 = 215;
      v907 = v110;
      v904 = *(_DWORD *)(v104 + 168);
      if (((*(_DWORD *)(a1[1] + 92 * v106 + 4 * (**(_QWORD **)(a2 + 40) >> 3) + 171588) >> (4 * (**(_QWORD **)(a2 + 40) & 7))) & 0xF) != 0)
      {
        v113 = a1[2];
        v114 = *(_QWORD *)v104;
        v115 = *(_QWORD *)(v104 + 8);
        v116 = *(_QWORD *)(v113 + 832);
        if (v116)
          v117 = *(_WORD *)(v116 + 8);
        else
          v117 = 0;
        v248 = sub_1C5D52060(v113, v112, (const llvm::APInt *)&v911, (llvm *)v913, 0, v114, v115, v117);
        v365 = a1[2];
        v366 = *(_QWORD *)(a2 + 32);
        v367 = *(_QWORD *)(v366 + 40);
        v368 = *(_QWORD *)(v366 + 48);
        v369 = *(_QWORD *)(v365 + 832);
        v249 = v370;
        if (v369)
          v371 = *(_WORD *)(v369 + 8);
        else
          v371 = 0;
        v250 = sub_1C5D52060(v365, v112, (const llvm::APInt *)&v911, (llvm *)v913, 0, v367, v368, v371);
        v251 = v372;
        v107 = v913;
        v104 = *(_QWORD *)(a2 + 32);
      }
      else
      {
        v248 = *(uint64_t **)v104;
        v249 = *(_DWORD *)(v104 + 8);
        v250 = *(uint64_t **)(v104 + 40);
        v251 = *(_DWORD *)(v104 + 48);
      }
      v373 = a1[2];
      v374 = *(_QWORD *)(v104 + 80);
      v375 = *(_QWORD *)(v104 + 88);
      v376 = *(_QWORD *)(v373 + 832);
      if (v376)
        v377 = *(_WORD *)(v376 + 8);
      else
        v377 = 0;
      v378 = sub_1C5D52060(v373, v112, (const llvm::APInt *)&v911, (llvm *)v107, 0, v374, v375, v377);
      v380 = v379;
      v381 = a1[2];
      v382 = *(_QWORD *)(a2 + 32);
      v383 = *(_QWORD *)(v382 + 120);
      v384 = *(_QWORD *)(v382 + 128);
      v385 = *(_QWORD *)(v381 + 832);
      if (v385)
        v386 = *(_WORD *)(v385 + 8);
      else
        v386 = 0;
      v387 = sub_1C5D52060(v381, v112, (const llvm::APInt *)&v911, (llvm *)v913, 0, v383, v384, v386);
      v388 = a1[2];
      v916[0] = v248;
      LODWORD(v916[1]) = v249;
      v917 = v250;
      LODWORD(v918) = v251;
      v919 = v378;
      LODWORD(v920) = v380;
      v921 = v387;
      v922 = v389;
      v923 = v105;
      v924 = v904;
      v390 = sub_1C636D0C8(v388, (const char *)0xC0, (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t *)v916, 5, *(unsigned __int16 *)(a2 + 72));
      v392 = v391;
      v393 = a1[2];
      v394 = (llvm *)v914;
      if (v907)
      {
        v395 = *(_QWORD *)(v393 + 832);
        if (v395)
          v284 = *(_WORD *)(v395 + 8);
        else
          v284 = 0;
        v285 = a1[2];
        v286 = 201;
        v287 = (llvm *)v914;
        v288 = 0;
        v289 = (uint64_t)v390;
        v290 = v392;
        goto LABEL_279;
      }
      v645 = sub_1C63662D4(v393, 0, (const llvm::APInt *)&v911, 0);
      v648 = *(_QWORD *)(v393 + 832);
      if (v648)
        LOWORD(v648) = *(_WORD *)(v648 + 8);
      v396 = sub_1C5D56C70(v393, 212, (const llvm::APInt *)&v911, v394, 0, (uint64_t)v390, v392, v647, (uint64_t)v645, v646, v648);
      goto LABEL_280;
    case 0xD2:
    case 0xD3:
      v54 = **(llvm ***)(a2 + 40);
      v55 = a1[1];
      do
      {
        do
        {
          v56 = (_BYTE)v54 + 1;
          v54 = (llvm *)((_BYTE)v54 + 1);
        }
        while (!v56);
      }
      while (v56 != 1 && !*(_QWORD *)(v55 + 8 * (_QWORD)v54 + 96)
           || (*(_BYTE *)(v55 + 390 * v54 + v15 + 3862) & 0xFB) != 0);
      v57 = a1[2];
      v58 = *(uint64_t **)(a2 + 32);
      v59 = *v58;
      v60 = v58[1];
      v61 = v58[5];
      v62 = v58[6];
      v63 = *(_QWORD *)(v57 + 832);
      if (v63)
        LOWORD(v63) = *(_WORD *)(v63 + 8);
      v45 = sub_1C5D56C70(v57, v15, (const llvm::APInt *)&v911, v54, 0, v59, v60, v12, v61, v62, v63);
      v47 = v64;
      v48 = a1[2];
      v65 = *(_QWORD *)(a2 + 40);
      v49 = *(llvm **)v65;
      v53 = *(_QWORD *)(v65 + 8);
      v66 = *(_QWORD *)(v48 + 832);
      if (v66)
        v51 = *(_WORD *)(v66 + 8);
      else
        v51 = 0;
      v52 = 201;
      goto LABEL_107;
    case 0xDE:
    case 0xDF:
    case 0xE0:
    case 0xE2:
    case 0xE3:
    case 0xE6:
    case 0xE7:
    case 0xE8:
    case 0xE9:
    case 0xEA:
    case 0xEB:
    case 0xEC:
    case 0xED:
    case 0xEE:
    case 0xEF:
    case 0xF0:
    case 0xF1:
      v70 = a1[2];
      v71 = *(uint64_t **)(a2 + 32);
      v72 = *v71;
      v73 = v71[1];
      v74 = *(_QWORD *)(v70 + 832);
      if (v74)
        v75 = *(_WORD *)(v74 + 8);
      else
        v75 = 0;
      v174 = sub_1C5D52060(v70, 215, (const llvm::APInt *)&v911, (llvm *)v913, 0, v72, v73, v75);
      v175 = 0;
      v176 = a1[2];
      v177 = *(_QWORD *)(v176 + 832);
      if (v177)
        v175 = *(_WORD *)(v177 + 8);
      v178 = sub_1C5D52060(v176, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v911, (llvm *)v913, 0, (uint64_t)v174, v173, v175);
LABEL_258:
      v355 = v178;
      v356 = v179;
      v357 = a1[2];
      v358 = (llvm *)v914;
      v359 = v357;
LABEL_259:
      v360 = 0;
LABEL_260:
      v361 = sub_1C63662D4(v359, v360, (const llvm::APInt *)&v911, 0);
      v364 = *(_QWORD *)(v357 + 832);
      if (v364)
        LOWORD(v364) = *(_WORD *)(v364 + 8);
      v147 = sub_1C5D56C70(v357, 212, (const llvm::APInt *)&v911, v358, 0, (uint64_t)v355, v356, v363, (uint64_t)v361, v362, v364);
      goto LABEL_108;
    case 0x104:
      v522 = *(_QWORD **)(a2 + 32);
      if (v913 - 120 < 0x20 || v913 - 2 < 6 || v913 - 15 <= 0x3B)
      {
        if ((*(_DWORD *)(v522[5] + 76) - 18) < 4)
          v523 = 198;
        else
          v523 = 199;
      }
      else
      {
        v523 = 215;
      }
      v659 = a1[2];
      v660 = v522[10];
      v661 = v522[11];
      v662 = *(_QWORD *)(v659 + 832);
      if (v662)
        v663 = *(_WORD *)(v662 + 8);
      else
        v663 = 0;
      v664 = sub_1C5D52060(v659, v523, (const llvm::APInt *)&v911, (llvm *)v913, 0, v660, v661, v663);
      v665 = 0;
      v667 = v666;
      v668 = a1[2];
      v669 = *(_QWORD *)(a2 + 32);
      v670 = *(_QWORD *)(v669 + 120);
      v671 = *(_QWORD *)(v669 + 128);
      v672 = *(_QWORD *)(v668 + 832);
      if (v672)
        v665 = *(_WORD *)(v672 + 8);
      v673 = sub_1C5D52060(v668, v523, (const llvm::APInt *)&v911, (llvm *)v913, 0, v670, v671, v665);
      v674 = *(uint64_t **)(a2 + 32);
      v147 = sub_1C63698B8(a1[2], (const char *)0x104, (const llvm::APInt *)&v911, **(llvm ***)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), *v674, v674[1], v676, v674[5], v674[6], (uint64_t)v664, v667, (uint64_t)v673, v675, v674[20], v674[21]);
      goto LABEL_108;
    case 0x10F:
      v562 = *(uint64_t **)(a2 + 32);
      v563 = *v562;
      v564 = v562[1];
      v565 = v562[5];
      v566 = v562[6];
      if (v914 - 15 >= 0x9C)
        v567 = 201;
      else
        v567 = 216;
      v568 = v562[10];
      v569 = v562[11];
      v570 = *(_QWORD *)(v562[15] + 80);
      v571 = (_QWORD *)(v570 + 24);
      if (*(_DWORD *)(v570 + 32) >= 0x41u)
        v571 = (_QWORD *)*v571;
      v573 = sub_1C636CD84(a1[2], v913, 0, (const llvm::APInt *)&v911, v563, v564, v565, v566, v568, v569, SHIDWORD(v569), *v571);
      v574 = a1[2];
      v575 = *(_QWORD *)(v574 + 832);
      if (v575)
        v576 = *(_WORD *)(v575 + 8);
      else
        v576 = 0;
      v743 = sub_1C5D52060(v574, v567, (const llvm::APInt *)&v911, (llvm *)v914, 0, (uint64_t)v573, v572, v576);
      sub_1C5D6146C(a1[2], a2, 0, (uint64_t)v743, v744);
      sub_1C5D6146C(a1[2], a2, 1, (uint64_t)v573, 1);
      v745 = a1[4];
      if (v745)
      {
        v916[0] = v743;
        sub_1C62B3A60(v745, (uint64_t *)v916);
        v890 = a1[4];
        v916[0] = v573;
        sub_1C62B3A60(v890, (uint64_t *)v916);
      }
      sub_1C5CDE8D8((uint64_t)a1, a2);
      goto LABEL_156;
    default:
      if ((_DWORD)v15 != 294)
        goto LABEL_156;
      v154 = *(unsigned __int8 **)(a2 + 64);
      v925 = v154;
      if (v154)
      {
        llvm::MetadataTracking::track((uint64_t)&v925, v154, 2);
        v14 = *(_DWORD *)(a2 + 60);
      }
      LODWORD(v926) = v14;
      v155 = a1[2];
      v156 = *(_QWORD *)(a2 + 32);
      v157 = *(_QWORD *)(v156 + 80);
      v158 = *(_QWORD *)(v156 + 88);
      v159 = *(_QWORD *)(v155 + 832);
      if (v159)
        v160 = *(_WORD *)(v159 + 8);
      else
        v160 = 0;
      v830 = sub_1C5D52060(v155, 216, (const llvm::APInt *)&v925, (llvm *)v913, 0, v157, v158, v160);
      v832 = v831;
      v833 = a1[2];
      v834 = v913;
      v835 = sub_1C636A8B4(v833, v913, 0, 1, 0);
      v836 = *(_QWORD *)(a2 + 32);
      v837 = *(void **)v836;
      LODWORD(v916[1]) = *(_DWORD *)(v836 + 8);
      v916[0] = v837;
      v917 = *(uint64_t **)(v836 + 40);
      LODWORD(v918) = *(_DWORD *)(v836 + 48);
      v919 = v830;
      LODWORD(v920) = v832;
      v841 = sub_1C636A43C(v833, 294, (uint64_t)&v925, v834, 0, v835, v838, v839, (uint64_t *)v916, 3, *(_QWORD *)(a2 + 96));
      v842 = a1[2];
      v843 = *(_QWORD *)(v842 + 832);
      if (v843)
        v844 = *(_WORD *)(v843 + 8);
      else
        v844 = 0;
      v857 = sub_1C5D52060(v842, 216, (const llvm::APInt *)&v925, (llvm *)v914, 0, (uint64_t)v841, v840, v844);
      v859 = v858;
      v860 = v932;
      if (v932 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v932 + 1, 16);
        v860 = v932;
      }
      v861 = (uint64_t **)&v931[2 * v860];
      *v861 = v857;
      v861[1] = v859;
      v862 = (v932 + 1);
      LODWORD(v932) = v862;
      if (v862 >= HIDWORD(v932))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v931, (uint64_t)v933, v862 + 1, 16);
        LODWORD(v862) = v932;
      }
      v863 = (uint64_t **)&v931[2 * v862];
      *v863 = v841;
      v863[1] = (uint64_t *)1;
      LODWORD(v932) = v932 + 1;
LABEL_520:
      v828 = v925;
      if (v925)
      {
        v829 = (void **)&v925;
LABEL_522:
        llvm::MetadataTracking::untrack((uint64_t)v829, v828);
      }
      goto LABEL_156;
  }
}

uint64_t sub_1C5CDE8D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v8 = a2;
  v3 = *(_QWORD *)(a1 + 24);
  v4 = sub_1C477672C(v3, a2);
  v5 = *(_QWORD *)(v3 + 8);
  v6 = 16;
  if (v5 == *(_QWORD *)v3)
    v6 = 20;
  if (v4 != (_QWORD *)(v5 + 8 * *(unsigned int *)(v3 + v6)))
  {
    *v4 = -2;
    ++*(_DWORD *)(v3 + 24);
  }
  result = *(_QWORD *)(a1 + 32);
  if (result)
    return sub_1C62B3A60(result, &v8);
  return result;
}

_QWORD *sub_1C5CDE958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  char v11;
  char v12;
  const char *v14;
  unsigned int v15;
  unsigned int ExtendedSizeInBits;
  const char *v17;
  unsigned int v18;
  unsigned int v19;
  const char *v20;
  unsigned int v21;
  uint64_t v22;
  unsigned __int8 v23;
  unsigned __int8 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *FixedStack;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  __int128 v50;
  int v51;
  char v52;
  __int128 v53;
  int v54;
  char v55;
  _QWORD v56[2];
  int v57;
  char v58;
  __int128 v59;
  __int128 v60;
  _QWORD v61[2];
  int v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v11 = a6;
  v12 = a4;
  v68 = a2;
  v69 = a3;
  v66 = a4;
  v67 = a5;
  v64 = a6;
  v65 = a7;
  v15 = sub_1C6131A64((unsigned int *)&v68);
  if ((_DWORD)v14 == 1)
  if (v12)
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v66);
  else
    ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v66);
  v18 = ExtendedSizeInBits;
  if ((_DWORD)v17 == 1)
  if (v11)
    v19 = sub_1C47A8C74((unsigned __int8 *)&v64);
  else
    v19 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v64);
  v21 = v19;
  if ((_DWORD)v20 == 1)
  llvm::EVT::getTypeForEVT((llvm::EVT *)&v64, *(llvm::LLVMContext **)(*(_QWORD *)(a1 + 16) + 56));
  llvm::DataLayout::getAlignment(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 16) + 40) + 40) + 272, v22);
  v24 = v23;
  if (v15 > v18)
  {
    v25 = 16 * v69;
    v26 = *(unsigned __int8 *)(*(_QWORD *)(v68 + 40) + v25);
    if (!*(_BYTE *)(*(_QWORD *)(v68 + 40) + v25))
      return 0;
    v27 = *(_QWORD *)(a1 + 8);
    if (!*(_QWORD *)(v27 + 8 * v26 + 96)
      || !(_BYTE)v66
      || (*(unsigned __int8 *)(v27 + 179 * v26 + v66 + 137754) | 4) != 4)
    {
      return 0;
    }
  }
  if (v18 >= v21)
    goto LABEL_25;
  if (!(_BYTE)v64)
    return 0;
  result = 0;
  if ((_BYTE)v66)
  {
    if ((*(_WORD *)(*(_QWORD *)(a1 + 8) + 358 * v64 + 2 * v66 + 73672) & 0xF0 | 0x40) != 0x40)
      return 0;
LABEL_25:
    v29 = *(_QWORD *)(a1 + 16);
    v30 = *(_QWORD *)(**(_QWORD **)(v29 + 40) + 40) + 272;
    v59 = *(_OWORD *)(*(_QWORD *)(v68 + 40) + 16 * v69);
    llvm::EVT::getTypeForEVT((llvm::EVT *)&v59, *(llvm::LLVMContext **)(v29 + 56));
    llvm::DataLayout::getAlignment(v30, v31);
    LOBYTE(v30) = v32;
    v33 = *(_QWORD *)(a1 + 16);
    v34 = sub_1C47C1C70((unsigned __int8 *)&v66);
    v35 = v30;
    v37 = sub_1C636847C(v33, v34, v36, v30);
    v49 = v38;
    FixedStack = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 40) + 432), *(_DWORD *)(v37 + 76));
    v40 = (unint64_t)FixedStack | 4;
    if (FixedStack)
      v41 = *((_DWORD *)FixedStack + 3);
    else
      v41 = 0;
    v42 = *(_QWORD *)(a1 + 16);
    if (v15 <= v18)
    {
      v56[0] = v40;
      v56[1] = 0;
      v57 = v41;
      v58 = 0;
      v59 = 0u;
      v60 = 0u;
      v43 = v49;
      v44 = sub_1C636B75C(v42, a9, a10, a8, v68, v69, v37, v49, (uint64_t)v56, v35, SHIDWORD(v35), 0, (uint64_t)&v59);
    }
    else
    {
      v61[0] = v40;
      v61[1] = 0;
      v62 = v41;
      v63 = 0;
      v59 = 0u;
      v60 = 0u;
      v43 = v49;
      v44 = sub_1C636B9CC(v42, a9, a10, a8, v68, v69, v37, v49, (uint64_t)v61, v66, v67, v35, SHIDWORD(v35), 0, (uint64_t)&v59);
    }
    v47 = (uint64_t)v44;
    v48 = *(_QWORD *)(a1 + 16);
    if (v18 == v21)
    {
      v53 = (unint64_t)v40;
      v54 = v41;
      v55 = 0;
      v59 = 0u;
      v60 = 0u;
      return sub_1C63681B0(v48, v64, v65, a8, v47, v45, v37, v43, &v53, v24 | 0x100u, (v24 | 0x100uLL) >> 32, 0, (uint64_t)&v59, 0);
    }
    else
    {
      v50 = (unint64_t)v40;
      v51 = v41;
      v52 = 0;
      v59 = 0u;
      v60 = 0u;
      return sub_1C636B4C8(v48, 1, a8, v64, v65, v47, v45, v46, v37, v43, &v50, v66, v67, v24 | 0x100u, (v24 | 0x100uLL) >> 32, 0, (uint64_t)&v59);
    }
  }
  return result;
}

uint64_t *sub_1C5CDED34(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  int v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  llvm *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int v23;
  uint64_t *v24;
  char v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t EVT;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t *v48;
  unsigned int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD v65[2];
  uint64_t v66;
  _QWORD v67[2];
  _QWORD v68[2];
  _BYTE *v69;
  _BYTE *v70;
  uint64_t v71;
  int v72;
  _BYTE v73[256];
  unsigned __int8 *v74;
  int v75;
  uint64_t v76;
  _QWORD v77[2];
  __int128 v78;
  _OWORD v79[6];
  _QWORD *v80;
  uint64_t v81;
  _QWORD v82[19];

  v82[16] = *MEMORY[0x1E0C80C00];
  v6 = *(uint64_t **)(a2 + 32);
  v7 = *v6;
  v8 = v6[1];
  v9 = v6[5];
  v10 = v6[6];
  v11 = *(unsigned __int8 **)(a2 + 64);
  v74 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v74, v11, 2);
  v75 = *(_DWORD *)(a2 + 60);
  v69 = v73;
  v70 = v73;
  v71 = 32;
  v72 = 0;
  v80 = v82;
  v81 = 0x1000000000;
  sub_1C4774094((llvm::SmallPtrSetImplBase *)&v69, a2);
  v12 = v81;
  if (v81 >= HIDWORD(v81))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v80, (uint64_t)v82, v81 + 1, 8);
    v12 = v81;
  }
  v80[v12] = v9;
  LODWORD(v81) = v81 + 1;
  v13 = *(_QWORD *)(v7 + 48);
  v63 = v9;
  v62 = v10;
  if (v13)
  {
    while (1)
    {
      v14 = *(_QWORD **)(v13 + 16);
      if (v14)
      {
        if (*((_WORD *)v14 + 12) == 254 && (*((_WORD *)v14 + 13) & 0x780) == 0)
        {
          v28 = v14[4];
          if (*(_QWORD *)(v28 + 40) == v7
            && *(_DWORD *)(v28 + 48) == (_DWORD)v8
            && sub_1C5D62468((uint64_t *)v28, *(_QWORD *)(a1 + 16) + 112, 0, 2)
            && (sub_1C5CB0A7C((uint64_t)v14, (uint64_t)&v69, (unsigned int *)&v80, 0, 0) & 1) == 0
            && (sub_1C636F90C((uint64_t)v14, a2) & 1) == 0)
          {
            break;
          }
        }
      }
      v13 = *(_QWORD *)(v13 + 32);
      if (!v13)
        goto LABEL_6;
    }
    v29 = v14[4];
    v15 = *(_QWORD *)(v29 + 80);
    v16 = *(unsigned int *)(v29 + 88);
  }
  else
  {
LABEL_6:
    v14 = 0;
    v15 = 0;
    v16 = 0;
  }
  v17 = a3;
  v18 = *(_QWORD *)(v7 + 40) + 16 * v8;
  v20 = *(llvm **)v18;
  v19 = *(_QWORD *)(v18 + 8);
  v68[0] = *(_QWORD *)v18;
  v68[1] = v19;
  if (v14)
  {
    v27 = 0;
  }
  else
  {
    v21 = sub_1C5D44240(*(_QWORD *)(a1 + 16), (uint64_t)v20, v19, 1u);
    v22 = *(_QWORD *)(a1 + 16);
    v79[0] = 0u;
    v78 = 0u;
    v76 = 0;
    v77[0] = 0;
    *(_QWORD *)((char *)v77 + 5) = 0;
    v16 = v23;
    v24 = (uint64_t *)(*(_QWORD *)(v7 + 40) + 16 * v8);
    v15 = v21;
    sub_1C6365BD8(v22, *v24, v24[1]);
    v14 = sub_1C636B75C(v22, v22 + 112, 0, (uint64_t)&v74, v7, v8, v15, v16, (uint64_t)&v76, v25, 0, 0, (uint64_t)&v78);
    v27 = v26;
  }
  v30 = (uint64_t *)(*(_QWORD *)(a2 + 40) + 16 * v17);
  v31 = *v30;
  v32 = v30[1];
  v33 = *v30;
  if (v33)
  {
    if ((v33 - 15) >= 0x9C)
      goto LABEL_23;
LABEL_26:
    v48 = sub_1C5D9FF38(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v15, v16, v20, v19, v31, v32, v63, v62);
    v50 = v49;
    v51 = *(_QWORD *)(a1 + 16);
    v52 = (uint64_t *)(*(_QWORD *)(a2 + 40) + 16 * v17);
    v53 = *v52;
    v54 = v52[1];
    v66 = 0;
    v67[0] = 0;
    *(_QWORD *)((char *)v67 + 5) = 0;
    v79[0] = 0u;
    v78 = 0u;
    v55 = sub_1C63681B0(v51, v53, v54, (uint64_t)&v74, (uint64_t)v14, v27, (uint64_t)v48, v50, (__int128 *)&v66, 0, 0, 0, (uint64_t)&v78, 0);
    goto LABEL_29;
  }
  if ((*(_DWORD *)(v32 + 8) & 0xFE) == 0x12)
    goto LABEL_26;
LABEL_23:
  v34 = sub_1C5D9FE70(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), v15, v16, v20, v19, v63, v62);
  v36 = v17;
  v37 = (uint64_t)v34;
  v39 = v38;
  v40 = *(_QWORD *)(a1 + 16);
  v41 = (uint64_t *)(*(_QWORD *)(a2 + 40) + 16 * v36);
  v42 = *v41;
  v43 = v41[1];
  v64 = 0;
  v65[0] = 0;
  *(_QWORD *)((char *)v65 + 5) = 0;
  if ((_BYTE)v20)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)v68);
    v47 = 0;
    v45 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v19 + 24), 0, v35);
    v47 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  v79[0] = 0u;
  v78 = 0u;
  v55 = sub_1C636B4C8(v40, 1, (uint64_t)&v74, v42, v43, (uint64_t)v14, v27, v46, v37, v39, (__int128 *)&v64, v47 | EVT, v45, 0, 0, 0, (uint64_t)&v78);
LABEL_29:
  v56 = (uint64_t)v55;
  sub_1C5D6146C(*(_QWORD *)(a1 + 16), (uint64_t)v14, v27, (uint64_t)v55, 1);
  v57 = *(char **)(v56 + 32);
  v58 = &v57[40 * *(unsigned __int16 *)(v56 + 56)];
  *(_QWORD *)&v78 = v79;
  *((_QWORD *)&v78 + 1) = 0x600000000;
  sub_1C6132D88((unsigned int *)&v78, v57, v58);
  v59 = v78;
  *(_QWORD *)v78 = v14;
  *(_DWORD *)(v59 + 8) = v27;
  v60 = sub_1C636DEEC(*(_QWORD *)(a1 + 16), v56, (uint64_t *)v78, DWORD2(v78));
  if ((_OWORD *)v78 != v79)
    free((void *)v78);
  if (v80 != v82)
    free(v80);
  if (v70 != v69)
    free(v70);
  if (v74)
    llvm::MetadataTracking::untrack((uint64_t)&v74, v74);
  return v60;
}

_QWORD *sub_1C5CDF1F8(uint64_t a1, uint64_t a2, BOOL a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t EVT;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t *FixedStack;
  int v16;
  uint64_t ExtendedSizeInBits;
  const char *v18;
  unsigned int v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  unint64_t v26;
  int v27;
  unint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t *v32;
  unsigned int v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t *v47;
  char v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  _QWORD *v56;
  _BOOL4 v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t *v62;
  unsigned int v63;
  unsigned int v64;
  __int128 v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  unsigned __int8 *v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  _QWORD v85[18];

  v85[16] = *MEMORY[0x1E0C80C00];
  v4 = *(uint64_t **)(a2 + 40);
  v6 = *v4;
  v5 = v4[1];
  v79 = v6;
  v80 = v5;
  if (*(_WORD *)(a2 + 24) == 146)
  {
    if ((_BYTE)v6)
    {
      LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v79);
      v9 = 0;
      v8 = 0;
    }
    else
    {
      EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v5 + 24), 0, a3);
      v9 = EVT & 0xFFFFFFFFFFFFFF00;
    }
    v11 = v9 | EVT;
  }
  else
  {
    v10 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
    v11 = *v10;
    v8 = v10[1];
  }
  v77 = v11;
  v78 = v8;
  v12 = *(unsigned __int8 **)(a2 + 64);
  v75 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v75, v12, 2);
  v76 = *(_DWORD *)(a2 + 60);
  v13 = sub_1C5D44240(*(_QWORD *)(a1 + 16), v79, v80, 1u);
  v59 = v14;
  v60 = v13;
  FixedStack = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(*(_QWORD *)(a1 + 16) + 40) + 432), *(_DWORD *)(v13 + 76));
  *(_QWORD *)&v73 = (unint64_t)FixedStack | 4;
  *((_QWORD *)&v73 + 1) = 0;
  BYTE4(v74) = 0;
  if (FixedStack)
    v16 = *((_DWORD *)FixedStack + 3);
  else
    v16 = 0;
  LODWORD(v74) = v16;
  v83 = v85;
  v84 = 0x800000000;
  if ((_BYTE)v77)
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v77);
  else
    ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v77);
  v20 = ExtendedSizeInBits;
  if ((_DWORD)v18 == 1)
  if (*(_WORD *)(a2 + 24) != 146)
  {
LABEL_29:
    v58 = 0;
    goto LABEL_30;
  }
  v21 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
  v23 = *v21;
  v22 = v21[1];
  v19 = v77;
  if (v77 != v23)
  {
    *(_QWORD *)&v69 = v23;
    *((_QWORD *)&v69 + 1) = v22;
    if ((_BYTE)v77)
    {
      v24 = sub_1C47A8C74((unsigned __int8 *)&v77);
LABEL_24:
      v26 = v24;
      v27 = v25;
      if ((_BYTE)v23)
        v28 = sub_1C47A8C74((unsigned __int8 *)&v69);
      else
        v28 = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v69);
      if (v27 != 1 || v29 == 1)
      {
        v58 = v26 < v28;
        goto LABEL_30;
      }
      goto LABEL_29;
    }
LABEL_21:
    v24 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v77);
    goto LABEL_24;
  }
  v58 = 0;
  if (!(_BYTE)v77)
  {
    v19 = v78;
    if (v78 != v22)
    {
      *(_QWORD *)&v69 = v23;
      *((_QWORD *)&v69 + 1) = v22;
      goto LABEL_21;
    }
  }
LABEL_30:
  if (*(_WORD *)(a2 + 56))
  {
    v33 = 0;
    v34 = 0;
    v35 = v20 >> 3;
    v36 = 40 * *(unsigned __int16 *)(a2 + 56);
    do
    {
      if (*(_WORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + v34) + 24) != 51)
      {
        v64 = v19 & 0xFFFFF000;
        v62 = sub_1C6369954(*(_QWORD *)(a1 + 16), v60, v59, v33, 0, (const llvm::APInt *)&v75, v19 & 0xF000);
        v63 = v37;
        v38 = *(_QWORD *)(a1 + 16);
        v39 = (uint64_t *)(*(_QWORD *)(a2 + 32) + v34);
        v41 = *v39;
        v40 = v39[1];
        if (v58)
        {
          sub_1C4824250((uint64_t *)&v73, v33, (uint64_t)&v71);
          v43 = v77;
          v42 = v78;
          v69 = 0u;
          v70 = 0u;
          v81 = v71;
          v82 = v72;
          sub_1C6365BD8(v38, v77, v78);
          v45 = sub_1C636B9CC(v38, v38 + 112, 0, (uint64_t)&v75, v41, v40, (uint64_t)v62, v63, (uint64_t)&v81, v43, v42, v44, 0, 0, (uint64_t)&v69);
        }
        else
        {
          sub_1C4824250((uint64_t *)&v73, v33, (uint64_t)&v67);
          v69 = 0u;
          v70 = 0u;
          v81 = v67;
          v82 = v68;
          v47 = (uint64_t *)(*(_QWORD *)(v41 + 40) + 16 * v40);
          sub_1C6365BD8(v38, *v47, v47[1]);
          v45 = sub_1C636B75C(v38, v38 + 112, 0, (uint64_t)&v75, v41, v40, (uint64_t)v62, v63, (uint64_t)&v81, v48, 0, 0, (uint64_t)&v69);
        }
        v49 = v45;
        v50 = v46;
        v51 = v84;
        if (v84 >= (unint64_t)HIDWORD(v84))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v83, (uint64_t)v85, v84 + 1, 16);
          v51 = v84;
        }
        v52 = &v83[2 * v51];
        *v52 = (uint64_t)v49;
        v52[1] = v50;
        LODWORD(v84) = v84 + 1;
        v19 = v64;
      }
      v34 += 40;
      v33 += v35;
    }
    while (v36 != v34);
  }
  v30 = *(_QWORD *)(a1 + 16);
  if ((_DWORD)v84)
  {
    v53 = *(_QWORD *)(v30 + 832);
    if (v53)
      v54 = *(unsigned __int16 *)(v53 + 8);
    else
      v54 = 0;
    v32 = sub_1C636D0C8(v30, (const char *)2, (const llvm::APInt *)&v75, (llvm *)1, 0, v83, v84, v54);
    v31 = v55;
    v30 = *(_QWORD *)(a1 + 16);
  }
  else
  {
    v31 = 0;
    v32 = (uint64_t *)(v30 + 112);
  }
  v65 = v73;
  v66 = v74;
  v69 = 0u;
  v70 = 0u;
  v56 = sub_1C63681B0(v30, v79, v80, (uint64_t)&v75, (uint64_t)v32, v31, v60, v59, &v65, 0, 0, 0, (uint64_t)&v69, 0);
  if (v83 != v85)
    free(v83);
  if (v75)
    llvm::MetadataTracking::untrack((uint64_t)&v75, v75);
  return v56;
}

void sub_1C5CDF6E4(uint64_t a1, uint64_t a2, const llvm::APInt *a3, uint64_t a4, unint64_t a5)
{
  llvm::LLVMContext *v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  int v20;
  unsigned int v21;
  __int128 *v22;
  unsigned int v23;
  uint64_t v24;
  char v25;
  uint64_t ExtendedIntegerVT;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  int v33;
  uint64_t *FixedStack;
  int v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  _QWORD *v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t *v43;
  unsigned int v44;
  unsigned int v45;
  uint64_t *v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  unsigned int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  unsigned __int8 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;

  v67 = *(_OWORD *)(*(_QWORD *)(a4 + 40) + 16 * a5);
  v10 = sub_1C6131328((unsigned __int8 *)&v67, a2, (BOOL)a3);
  v11 = v10;
  *(_OWORD *)a2 = v67;
  if ((int)v10 <= 31)
  {
    switch((_DWORD)v10)
    {
      case 1:
        v12 = 2;
        goto LABEL_12;
      case 0x10:
        v12 = 4;
        goto LABEL_12;
      case 8:
        v12 = 3;
        goto LABEL_12;
    }
  }
  else
  {
    switch((_DWORD)v10)
    {
      case 0x20:
        v12 = 5;
LABEL_12:
        v13 = 0;
        v14 = (uint64_t *)(a1 + 8);
        v15 = v12;
        goto LABEL_13;
      case 0x40:
        v12 = 6;
        goto LABEL_12;
      case 0x80:
        v12 = 7;
        goto LABEL_12;
    }
  }
  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)(a1 + 16) + 56), v10);
  v14 = (uint64_t *)(a1 + 8);
  v15 = ExtendedIntegerVT;
  if (!(_BYTE)ExtendedIntegerVT)
  {
    v16 = *v14;
    goto LABEL_29;
  }
  v12 = ExtendedIntegerVT;
  v13 = v27;
LABEL_13:
  v16 = *v14;
  if (*(_QWORD *)(v16 + 8 * v15 + 96))
  {
    v17 = *(_QWORD *)(a1 + 16);
    v18 = *(_QWORD *)(v17 + 832);
    if (v18)
      v19 = *(_WORD *)(v18 + 8);
    else
      v19 = 0;
    *(_QWORD *)(a2 + 112) = sub_1C5D52060(v17, 216, a3, (llvm *)v12, v13, a4, a5, v19);
    *(_DWORD *)(a2 + 120) = v20;
    DWORD2(v64) = v11;
    if (v11 > 0x40)
    {
      v22 = &v64;
      llvm::APInt::initSlowCase((llvm::APInt *)&v64, 0, 0);
      v23 = DWORD2(v64);
      v21 = v11 - 1;
      if (DWORD2(v64) >= 0x41)
        v22 = (__int128 *)(v64 + 8 * (v21 >> 6));
    }
    else
    {
      *(_QWORD *)&v64 = 0;
      LOBYTE(v21) = v11 - 1;
      v22 = &v64;
      v23 = v11;
    }
    *(_QWORD *)v22 |= 1 << v21;
    if (*(_DWORD *)(a2 + 136) >= 0x41u)
    {
      v24 = *(_QWORD *)(a2 + 128);
      if (v24)
        MEMORY[0x1CAA32F9C](v24, 0x1000C8000313F17);
    }
    *(_QWORD *)(a2 + 128) = v64;
    *(_DWORD *)(a2 + 136) = v23;
    v25 = v11 - 1;
    goto LABEL_23;
  }
LABEL_29:
  v28 = *(_QWORD *)(a1 + 16);
  v59 = *(_QWORD *)(**(_QWORD **)(v28 + 40) + 40);
  v66 = *(_BYTE *)(v16 + 1889);
  v29 = v66;
  v30 = sub_1C5D442D8(v28, v67, *((uint64_t *)&v67 + 1), v66, 0);
  v32 = v31;
  v33 = *(_DWORD *)(v30 + 76);
  *(_QWORD *)(a2 + 32) = v30;
  *(_DWORD *)(a2 + 40) = v31;
  v56 = *(_QWORD *)(*(_QWORD *)(a1 + 16) + 40);
  FixedStack = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(v56 + 432), v33);
  v61 = v29;
  v60 = v32;
  v57 = v33;
  if (FixedStack)
    v35 = *((_DWORD *)FixedStack + 3);
  else
    v35 = 0;
  *(_QWORD *)(a2 + 88) = (unint64_t)FixedStack | 4;
  *(_QWORD *)(a2 + 96) = 0;
  *(_DWORD *)(a2 + 104) = v35;
  *(_BYTE *)(a2 + 108) = 0;
  v36 = *(_QWORD *)(a1 + 16);
  v37 = *(_QWORD *)(a2 + 32);
  v58 = *(_QWORD *)(a2 + 40);
  v68 = *(_OWORD *)(a2 + 88);
  v69 = *(_QWORD *)(a2 + 104);
  v64 = 0u;
  v65 = 0u;
  sub_1C6365BD8(v36, *(_QWORD *)(*(_QWORD *)(a4 + 40) + 16 * a5), *(_QWORD *)(*(_QWORD *)(a4 + 40) + 16 * a5 + 8));
  v39 = sub_1C636B75C(v36, v36 + 112, 0, (uint64_t)a3, a4, a5, v37, v58, (uint64_t)&v68, v38, 0, 0, (uint64_t)&v64);
  *(_QWORD *)(a2 + 16) = v39;
  *(_DWORD *)(a2 + 24) = v41;
  if (*(_BYTE *)(v59 + 272))
  {
    v49 = (uint64_t)v39;
    *(_OWORD *)(a2 + 64) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a2 + 77) = *(_QWORD *)(a2 + 101);
    v43 = (uint64_t *)v30;
    v48 = v29;
    v45 = v60;
  }
  else
  {
    v42 = (v11 >> 3) - 1;
    v43 = sub_1C6369954(*(_QWORD *)(a1 + 16), v30, v60, v42, 0, a3, 0);
    v45 = v44;
    v46 = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(v56 + 432), v57);
    if (v46)
      v47 = *((_DWORD *)v46 + 3);
    else
      v47 = 0;
    v48 = v61;
    *(_QWORD *)(a2 + 64) = (unint64_t)v46 | 4;
    *(_QWORD *)(a2 + 72) = v42;
    *(_DWORD *)(a2 + 80) = v47;
    *(_BYTE *)(a2 + 84) = 0;
    v49 = *(_QWORD *)(a2 + 16);
  }
  *(_QWORD *)(a2 + 48) = v43;
  *(_DWORD *)(a2 + 56) = v45;
  v50 = *(_QWORD *)(a1 + 16);
  v51 = *(_QWORD *)(a2 + 24);
  v62 = *(_OWORD *)(a2 + 64);
  v63 = *(_QWORD *)(a2 + 80);
  v64 = 0u;
  v65 = 0u;
  *(_QWORD *)(a2 + 112) = sub_1C636B4C8(v50, 1, (uint64_t)a3, v48, 0, v49, v51, v40, (uint64_t)v43, v45, &v62, 3, 0, 0, 0, 0, (uint64_t)&v64);
  *(_DWORD *)(a2 + 120) = v52;
  if ((v48 - 15) <= 0x9Bu)
    LOBYTE(v48) = sub_1C47F37A0(&v66);
  LOBYTE(v64) = v48;
  v53 = sub_1C47A8C74((unsigned __int8 *)&v64);
  DWORD2(v64) = v53;
  if (v53 >= 0x41)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&v64, 0, 0);
    v53 = DWORD2(v64);
    if (DWORD2(v64) > 0x40)
    {
      v54 = v64;
      *(_QWORD *)v64 |= 0x80uLL;
    }
    else
    {
      v54 = v64 | 0x80;
    }
  }
  else
  {
    v54 = 128;
  }
  if (*(_DWORD *)(a2 + 136) >= 0x41u)
  {
    v55 = *(_QWORD *)(a2 + 128);
    if (v55)
      MEMORY[0x1CAA32F9C](v55, 0x1000C8000313F17);
  }
  *(_QWORD *)(a2 + 128) = v54;
  *(_DWORD *)(a2 + 136) = v53;
  v25 = 7;
LABEL_23:
  *(_BYTE *)(a2 + 144) = v25;
}

uint64_t *sub_1C5CDFB90(uint64_t a1, uint64_t a2, const llvm::APInt *a3, uint64_t a4, unint64_t a5)
{
  unsigned int v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  char v20;
  _QWORD *v21;
  int v22;
  int v23;
  uint64_t v24;
  llvm *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;

  v5 = a5;
  v10 = *(_QWORD *)(a2 + 16);
  if (v10)
  {
    v15 = *(_QWORD *)(a1 + 16);
    v16 = *(_QWORD *)(a2 + 24);
    v17 = *(_QWORD *)(a2 + 48);
    v18 = *(_QWORD *)(a2 + 56);
    v19 = *(_OWORD *)(a2 + 64);
    v34 = *(_QWORD *)(a2 + 80);
    v32 = 0u;
    v33 = v19;
    v31 = 0u;
    sub_1C6365BD8(v15, 3, 0);
    v21 = sub_1C636B9CC(v15, v10, v16, (uint64_t)a3, a4, v5, v17, v18, (uint64_t)&v33, 3, 0, v20, 0, 0, (uint64_t)&v31);
    v23 = v22;
    v24 = *(_QWORD *)(a1 + 16);
    v25 = *(llvm **)a2;
    v26 = *(_QWORD *)(a2 + 8);
    v27 = *(_QWORD *)(a2 + 32);
    v28 = *(_QWORD *)(a2 + 40);
    v29 = *(_OWORD *)(a2 + 88);
    v30 = *(_QWORD *)(a2 + 104);
    v31 = 0u;
    v32 = 0u;
    return sub_1C63681B0(v24, (uint64_t)v25, v26, (uint64_t)a3, (uint64_t)v21, v23, v27, v28, &v29, 0, 0, 0, (uint64_t)&v31, 0);
  }
  else
  {
    v11 = *(_QWORD *)(a1 + 16);
    v12 = *(_QWORD *)(v11 + 832);
    if (v12)
      v13 = *(_WORD *)(v12 + 8);
    else
      v13 = 0;
    return sub_1C5D52060(v11, 216, a3, *(llvm **)a2, *(_QWORD *)(a2 + 8), a4, a5, v13);
  }
}

unint64_t sub_1C5CDFCF8(uint64_t a1, unint64_t a2)
{
  uint64_t v3;
  unint64_t v5;
  unint64_t v6;
  unint64_t v8;

  v3 = *(unsigned int *)(a1 + 8);
  if (v3 >= *(_DWORD *)(a1 + 12))
  {
    v5 = v3 + 1;
    v6 = *(_QWORD *)a1 + 96 * v3;
    if (*(_QWORD *)a1 <= a2 && v6 > a2)
    {
      v8 = a2 - *(_QWORD *)a1;
      sub_1C632CA2C(a1, v5);
      return *(_QWORD *)a1 + v8;
    }
    else
    {
      sub_1C632CA2C(a1, v5);
    }
  }
  return a2;
}

uint64_t sub_1C5CDFD60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, __n128 *a6)
{
  uint64_t v8;
  __n128 v9;

  *(_QWORD *)(a1 + 16) = a3;
  *(_QWORD *)(a1 + 40) = a4;
  *(_DWORD *)(a1 + 48) = a5;
  *(_DWORD *)(a1 + 28) = -1431655765 * ((a6->n128_u64[1] - a6->n128_u64[0]) >> 4);
  *(_DWORD *)(a1 + 32) = a2;
  v8 = a1 + 56;
  v9 = sub_1C6184574(a1 + 56, a6);
  (***(void (****)(_QWORD, _QWORD, uint64_t, uint64_t, __n128))(*(_QWORD *)(a1 + 80) + 24))(*(_QWORD *)(*(_QWORD *)(a1 + 80) + 24), *(_QWORD *)(*(_QWORD *)(a1 + 80) + 40), a2, v8, v9);
  return a1;
}

void sub_1C5CDFDE4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  unsigned __int8 *v10;
  uint64_t v11;
  unsigned __int8 **v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unsigned __int8 *v18;
  uint64_t v19;
  void *v20;
  unint64_t v21;
  unsigned __int8 *v22;
  __int128 v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  unsigned __int8 *v30;
  int v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;
  char v35;
  __int128 v36;
  __int128 v37;
  void *v38;
  uint64_t v39;
  _QWORD v40[10];

  v40[8] = *MEMORY[0x1E0C80C00];
  if (sub_1C6141934(a2))
  {
    v14 = *(_QWORD *)(a2 + 32);
    v13 = *(uint64_t **)(a2 + 40);
    v16 = *v13;
    v15 = v13[1];
    v17 = (char *)(v14 + 40 * *(unsigned __int16 *)(a2 + 56));
    v38 = v40;
    v39 = 0x400000000;
    sub_1C6132D88((unsigned int *)&v38, (char *)(v14 + 40), v17);
    v18 = *(unsigned __int8 **)(a1 + 8);
    v19 = *(_QWORD *)(a1 + 16);
    v20 = v38;
    v21 = v39;
    v32[0] = 0;
    v32[1] = 0;
    v33 = 0;
    v34 = 0;
    v35 = 4;
    v22 = *(unsigned __int8 **)(a2 + 64);
    v30 = v22;
    if (v22)
      llvm::MetadataTracking::track((uint64_t)&v30, v22, 2);
    v31 = *(_DWORD *)(a2 + 60);
    sub_1C5D7B380(v18, v19, a3, v16, v15, (uint64_t)v20, v21, (uint64_t)v32, (uint64_t)&v36, (uint64_t)&v30, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
    if (v30)
      llvm::MetadataTracking::untrack((uint64_t)&v30, v30);
    v23 = v36;
    v24 = *(unsigned int *)(a4 + 8);
    if (v24 >= *(_DWORD *)(a4 + 12))
    {
      v28 = v36;
      llvm::SmallVectorBase<unsigned int>::grow_pod(a4, a4 + 16, v24 + 1, 16);
      v23 = v28;
      LODWORD(v24) = *(_DWORD *)(a4 + 8);
    }
    *(_OWORD *)(*(_QWORD *)a4 + 16 * v24) = v23;
    v25 = *(_DWORD *)(a4 + 12);
    v26 = (*(_DWORD *)(a4 + 8) + 1);
    *(_DWORD *)(a4 + 8) = v26;
    v27 = v37;
    if (v26 >= v25)
    {
      v29 = v37;
      llvm::SmallVectorBase<unsigned int>::grow_pod(a4, a4 + 16, v26 + 1, 16);
      v27 = v29;
      LODWORD(v26) = *(_DWORD *)(a4 + 8);
    }
    *(_OWORD *)(*(_QWORD *)a4 + 16 * v26) = v27;
    ++*(_DWORD *)(a4 + 8);
    if (v38 != v40)
      free(v38);
  }
  else
  {
    v8 = sub_1C5CE00FC(a1, a3, a2, 0);
    v10 = v9;
    v11 = *(unsigned int *)(a4 + 8);
    if (v11 >= *(_DWORD *)(a4 + 12))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(a4, a4 + 16, v11 + 1, 16);
      LODWORD(v11) = *(_DWORD *)(a4 + 8);
    }
    v12 = (unsigned __int8 **)(*(_QWORD *)a4 + 16 * v11);
    *v12 = v8;
    v12[1] = v10;
    ++*(_DWORD *)(a4 + 8);
  }
}

void sub_1C5CE002C(uint64_t a1, uint64_t a2, unsigned int a3, unsigned int a4, unsigned int a5, unsigned int a6, unsigned int a7, uint64_t a8)
{
  unsigned int *v16;

  v16 = (unsigned int *)(*(_QWORD *)(a2 + 32) + 40 * sub_1C6141934(a2));
  switch(*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v16 + 40) + 16 * v16[2]))
  {
    case 0xA:
      break;
    case 0xB:
      a3 = a4;
      break;
    case 0xC:
      a3 = a5;
      break;
    case 0xD:
      a3 = a6;
      break;
    default:
      if (*(_BYTE *)(*(_QWORD *)(*(_QWORD *)v16 + 40) + 16 * v16[2]) == 14)
        a3 = a7;
      else
        a3 = 637;
      break;
  }
  sub_1C5CDFDE4(a1, a2, a3, a8);
}

unsigned __int8 *sub_1C5CE00FC(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4)
{
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  __int16 v14;
  __int16 v15;
  __int16 v16;
  unint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  unsigned __int8 v27;
  size_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  size_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  unsigned __int8 *v44;
  int v45;
  uint64_t v46;
  __int16 v47;
  unsigned __int8 **v48;
  unsigned __int8 *v49;
  int v51;
  uint64_t v52;
  unsigned int v55;
  unsigned int *v56;
  int v57;
  char *v58;
  unsigned __int8 *v59;
  int v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  __int16 v67;
  __int16 v68;
  uint64_t v69;
  size_t v70;
  int v71;
  void *__p;
  void *v73;
  char *v74;
  uint64_t v75;
  unsigned __int8 *v76;
  int v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD v81[194];
  _QWORD v82[66];
  _QWORD v83[194];
  _BYTE v84[96];
  uint64_t v85;

  v85 = *MEMORY[0x1E0C80C00];
  v55 = a4;
  if (*(_WORD *)(a3 + 56))
  {
    v7 = a4;
    v8 = 0;
    v5 = 0;
    v9 = *(unsigned int **)(a3 + 32);
    v56 = &v9[10 * *(unsigned __int16 *)(a3 + 56)];
    v58 = 0;
    do
    {
      v65 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v9 + 40) + 16 * v9[2]);
      llvm::EVT::getTypeForEVT((llvm::EVT *)&v65, *(llvm::LLVMContext **)(*(_QWORD *)(a1 + 16) + 56));
      v11 = v10;
      v12 = *(_QWORD *)v9;
      v13 = v9[2];
      v14 = (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 928))(*(_QWORD *)(a1 + 8), v65, *((_QWORD *)&v65 + 1), v7);
      if ((*(unsigned int (**)(_QWORD, _QWORD, _QWORD, uint64_t))(**(_QWORD **)(a1 + 8) + 928))(*(_QWORD *)(a1 + 8), v65, *((_QWORD *)&v65 + 1), v7))
      {
        v15 = 0;
      }
      else
      {
        v15 = 2;
      }
      v16 = v15 | v14;
      if (v8 >= v58)
      {
        v17 = 0xAAAAAAAAAAAAAAABLL * ((v8 - v5) >> 4) + 1;
        if (v17 > 0x555555555555555)
          abort();
        if (0x5555555555555556 * ((v58 - v5) >> 4) > v17)
          v17 = 0x5555555555555556 * ((v58 - v5) >> 4);
        if (0xAAAAAAAAAAAAAAABLL * ((v58 - v5) >> 4) >= 0x2AAAAAAAAAAAAAALL)
          v18 = 0x555555555555555;
        else
          v18 = v17;
        if (v18)
        {
          if (v18 > 0x555555555555555)
            sub_1C4764EE4();
          v19 = (char *)operator new(48 * v18);
        }
        else
        {
          v19 = 0;
        }
        v20 = &v19[16 * ((v8 - v5) >> 4)];
        *(_QWORD *)v20 = 0;
        *((_QWORD *)v20 + 1) = v12;
        *((_DWORD *)v20 + 4) = v13;
        *((_DWORD *)v20 + 5) = 0;
        *((_QWORD *)v20 + 3) = v11;
        *((_WORD *)v20 + 16) = v16;
        *((_WORD *)v20 + 17) = 0;
        *((_QWORD *)v20 + 5) = 0;
        if (v8 == v5)
        {
          v5 = &v19[16 * ((v8 - v5) >> 4)];
          v7 = v55;
        }
        else
        {
          v21 = &v19[16 * ((v8 - v5) >> 4)];
          v7 = v55;
          do
          {
            v22 = *((_OWORD *)v8 - 3);
            v23 = *((_OWORD *)v8 - 1);
            *((_OWORD *)v21 - 2) = *((_OWORD *)v8 - 2);
            *((_OWORD *)v21 - 1) = v23;
            *((_OWORD *)v21 - 3) = v22;
            v21 -= 48;
            v8 -= 48;
          }
          while (v8 != v5);
          v8 = v5;
          v5 = v21;
        }
        v58 = &v19[48 * v18];
        v6 = v20 + 48;
        if (v8)
          operator delete(v8);
      }
      else
      {
        *(_QWORD *)v8 = 0;
        *((_QWORD *)v8 + 1) = v12;
        *((_DWORD *)v8 + 4) = v13;
        *((_DWORD *)v8 + 5) = 0;
        *((_QWORD *)v8 + 3) = v11;
        *((_WORD *)v8 + 16) = v16;
        *((_WORD *)v8 + 17) = 0;
        v6 = v8 + 48;
        *((_QWORD *)v8 + 5) = 0;
      }
      v9 += 10;
      v8 = v6;
    }
    while (v9 != v56);
  }
  else
  {
    v5 = 0;
    v6 = 0;
    v58 = 0;
  }
  v24 = *(_QWORD *)(a1 + 8);
  v25 = *(_QWORD *)(a1 + 16);
  v26 = *(char **)(v24 + 8 * a2 + 174048);
  v27 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)v24 + 32))(v24, *(_QWORD *)(**(_QWORD **)(v25 + 40) + 40) + 272, 0);
  v28 = sub_1C63675D8(v25, v26, v27, 0);
  LODWORD(v26) = v29;
  v64 = *(_OWORD *)*(_QWORD *)(a3 + 40);
  llvm::EVT::getTypeForEVT((llvm::EVT *)&v64, *(llvm::LLVMContext **)(*(_QWORD *)(a1 + 16) + 56));
  v31 = v30;
  v32 = *(_QWORD *)(a1 + 8);
  v33 = *(_QWORD *)(a1 + 16);
  v34 = v33 + 112;
  v62 = v33 + 112;
  v63 = 0;
  v35 = **(_QWORD **)(v33 + 40);
  v57 = (int)v26;
  v52 = v31;
  if ((sub_1C6374C1C(v32, v33, a3, (uint64_t)&v62) & 1) == 0)
  {
    v38 = v28;
    v39 = 0;
    v51 = v63;
    v37 = v55;
    goto LABEL_34;
  }
  v36 = **(_QWORD **)(*(_QWORD *)(v35 + 24) + 16);
  if (v31 == v36)
  {
    v51 = v63;
    v37 = v55;
LABEL_32:
    v38 = v28;
    v39 = 1;
    v34 = v62;
    goto LABEL_34;
  }
  v51 = v63;
  v37 = v55;
  if (*(_DWORD *)(v36 + 8) == 7)
    goto LABEL_32;
  v38 = v28;
  v39 = 0;
LABEL_34:
  *(_QWORD *)&v65 = 0;
  DWORD2(v65) = 0;
  v66 = 0;
  v67 = v67 & 0xFC00 | 0x20;
  v68 = 0;
  v69 = 0xFFFFFFFFLL;
  v70 = 0;
  v71 = 0;
  __p = 0;
  v73 = 0;
  v40 = *(_QWORD *)(a1 + 8);
  v41 = *(_QWORD *)(a1 + 16);
  v74 = 0;
  v75 = v41;
  v76 = 0;
  v77 = 0;
  v78 = 0;
  v79 = v81;
  v80 = 0x2000000000;
  v81[192] = v82;
  v81[193] = 0x2000000000;
  v82[64] = v83;
  v82[65] = 0x2000000000;
  v83[192] = v84;
  v83[193] = 0x400000000;
  v84[64] = 0;
  v84[88] = 0;
  v42 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD, uint64_t))(*(_QWORD *)v40 + 928))(v40, v64, *((_QWORD *)&v64 + 1), v37);
  v43 = a3;
  v44 = *(unsigned __int8 **)(a3 + 64);
  v59 = v44;
  if (v44)
  {
    llvm::MetadataTracking::track((uint64_t)&v59, v44, 2);
    v43 = a3;
  }
  v60 = *(_DWORD *)(v43 + 60);
  if (v76)
    llvm::MetadataTracking::untrack((uint64_t)&v76, v76);
  v76 = v59;
  if (v59)
    llvm::MetadataTracking::track((uint64_t)&v76, v59, 2);
  *(_QWORD *)&v65 = v34;
  v45 = v51;
  if (!v39)
    v45 = 0;
  v77 = v60;
  DWORD2(v65) = v45;
  v46 = *(unsigned int *)(*(_QWORD *)(a1 + 8) + 4 * a2 + 181700);
  v66 = v52;
  v70 = v38;
  v71 = v57;
  LODWORD(v69) = -1431655765 * ((unint64_t)(v6 - v5) >> 4);
  HIDWORD(v69) = v46;
  if (__p)
  {
    v73 = __p;
    operator delete(__p);
  }
  __p = v5;
  v73 = v6;
  v74 = v58;
  (***(void (****)(_QWORD, _QWORD, uint64_t, void **))(v75 + 24))(*(_QWORD *)(v75 + 24), *(_QWORD *)(v75 + 40), v46, &__p);
  LOBYTE(v68) = v39;
  if (v42)
    v47 = 0;
  else
    v47 = 2;
  v67 = v47 | v42 | v67 & 0xFFFC;
  HIBYTE(v68) = 1;
  if (v59)
    llvm::MetadataTracking::untrack((uint64_t)&v59, v59);
  v48 = &v59;
  sub_1C5D1FE10(*(unsigned __int8 **)(a1 + 8), (uint64_t)&v65, (uint64_t)&v59);
  if (!v61)
    v48 = (unsigned __int8 **)(*(_QWORD *)(a1 + 16) + 192);
  v49 = *v48;
  sub_1C632CB64(&v65);
  return v49;
}

uint64_t sub_1C5CE06A4(unsigned __int8 a1, char a2)
{
  const char *v2;
  unint64_t v3;
  unint64_t v4;
  const char *v5;
  unint64_t v7;
  char v8;
  unsigned __int8 v9;

  v9 = a1;
  v8 = a2;
  v3 = sub_1C47A8C74(&v9);
  if ((_DWORD)v2 == 1)
  v4 = sub_1C47A8C74((unsigned __int8 *)&v8);
  if ((_DWORD)v5 == 1)
  {
    v7 = v4;
    v4 = v7;
  }
  return sub_1C47AC934(v8, v3 / v4);
}

void sub_1C5CE0730()
{
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CE0744(uint64_t a1)
{
  _QWORD *result;
  uint64_t v3;

  result = operator new(0x10uLL);
  v3 = *(_QWORD *)(a1 + 8);
  *result = &off_1E81984F8;
  result[1] = v3;
  return result;
}

uint64_t sub_1C5CE0778(uint64_t result, _QWORD *a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(result + 8);
  *a2 = &off_1E81984F8;
  a2[1] = v2;
  return result;
}

_QWORD *sub_1C5CE0794(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  result = sub_1C477672C(v2, *a2);
  v4 = *(_QWORD *)(v2 + 8);
  v5 = 16;
  if (v4 == *(_QWORD *)v2)
    v5 = 20;
  if (result != (_QWORD *)(v4 + 8 * *(unsigned int *)(v2 + v5)))
  {
    *result = -2;
    ++*(_DWORD *)(v2 + 24);
  }
  return result;
}

_QWORD *sub_1C5CE07F4(unint64_t a1, uint64_t a2, _BOOL8 a3, uint64_t a4)
{
  _BYTE v6[8];
  llvm *v7;
  uint64_t v8;

  llvm::TargetLoweringBase::getTypeConversion(a1, *(llvm::EVT **)(a2 + 56), a3, a4, (uint64_t)v6);
  return sub_1C61312D0(a2, v7, v8);
}

uint64_t *sub_1C5CE0830(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  __n128 v18;
  unsigned __int8 *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(uint64_t **)(a2 + 32);
  v6 = *v4;
  v5 = v4[1];
  v7 = v4[5];
  v8 = v4[6];
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v20);
  v9 = v21;
  v10 = v22;
  v11 = *(unsigned __int8 **)(a2 + 64);
  v20 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v20, v11, 2);
  LODWORD(v21) = *(_DWORD *)(a2 + 60);
  v12 = *(_QWORD **)(a2 + 32);
  v13 = v12[10];
  v14 = v12[11];
  v15 = *(_QWORD *)(v12[15] + 80);
  v16 = (_QWORD *)(v15 + 24);
  if (*(_DWORD *)(v15 + 32) >= 0x41u)
    v16 = (_QWORD *)*v16;
  v17 = sub_1C636CD84(*(_QWORD *)(a1 + 8), v9, v10, (const llvm::APInt *)&v20, v6, v5, v7, v8, v13, v14, SHIDWORD(v14), *v16);
  if (v17 != (uint64_t *)a2)
    sub_1C5CED824(a1, a2, 1, (uint64_t)v17, 1uLL, v18);
  if (v20)
    llvm::MetadataTracking::untrack((uint64_t)&v20, v20);
  return v17;
}

uint64_t sub_1C5CE094C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  int *v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v19;

  v3 = a2;
  v5 = sub_1C633764C(a1, a2, a3);
  v6 = *(_DWORD *)(a1 + 776);
  v7 = a1 + 784;
  if ((v6 & 1) != 0)
  {
    v8 = 8;
    v9 = a1 + 784;
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 784);
    v8 = *(_DWORD *)(a1 + 792);
    if (!v8)
    {
      v16 = 0;
      goto LABEL_10;
    }
  }
  v10 = v8 - 1;
  LODWORD(v11) = (v8 - 1) & (37 * v5);
  v12 = (int *)(v9 + 8 * v11);
  v13 = *v12;
  if (v5 == *v12)
    goto LABEL_11;
  v14 = 1;
  while (v13 != -1)
  {
    v15 = v11 + v14++;
    v11 = v15 & v10;
    v13 = *(_DWORD *)(v9 + 8 * v11);
    if (v5 == v13)
    {
      v12 = (int *)(v9 + 8 * v11);
      goto LABEL_11;
    }
  }
  if ((v6 & 1) != 0)
  {
    v16 = 8;
    v9 = a1 + 784;
  }
  else
  {
    v9 = *(_QWORD *)(a1 + 784);
    v16 = *(unsigned int *)(a1 + 792);
  }
LABEL_10:
  v12 = (int *)(v9 + 8 * v16);
LABEL_11:
  if ((v6 & 1) != 0)
  {
    v17 = 8;
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 784);
    v17 = *(unsigned int *)(a1 + 792);
  }
  if ((int *)(v7 + 8 * v17) != v12)
  {
    v19 = v12 + 1;
    sub_1C63478E0(a1, v12 + 1);
    return *(_QWORD *)(sub_1C6337D28(a1 + 400, v19) + 8);
  }
  return v3;
}

uint64_t *sub_1C5CE0A5C(unsigned __int8 **a1, uint64_t a2)
{
  _BOOL4 v4;
  _BOOL4 v5;
  int v6;
  _BOOL4 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  llvm *v15;
  unsigned __int8 *v16;
  int v17;
  int v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned __int8 *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t *v27;
  __n128 v28;
  unint64_t v29;
  unint64_t v30;
  __n128 v31;
  _QWORD v33[4];
  char v34;
  uint64_t v35[4];
  unsigned __int8 *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v40[2];
  __int128 v41;

  v4 = sub_1C6141934(a2);
  v5 = v4;
  v6 = *(unsigned __int16 *)(a2 + 24);
  v8 = v6 == 208 || v6 == 132;
  v9 = *(_QWORD *)(a2 + 40);
  v41 = *(_OWORD *)(*(_QWORD *)(a2 + 32) + 40 * v4);
  v10 = v41;
  v11 = (uint64_t *)(*(_QWORD *)(v41 + 40) + 16 * DWORD2(v41));
  v12 = *v11;
  v13 = v11[1];
  v40[0] = *v11;
  v40[1] = v13;
  v15 = *(llvm **)v9;
  v14 = *(_QWORD *)(v9 + 8);
  v38 = 0;
  v39 = 0;
  v16 = *(unsigned __int8 **)(a2 + 64);
  v36 = v16;
  if (v16)
    llvm::MetadataTracking::track((uint64_t)&v36, v16, 2);
  v37 = *(_DWORD *)(a2 + 60);
  v17 = sub_1C5CE0C34(v12, v13, (uint64_t)v15, v14, (unsigned __int8 *)&v38, v8);
  *(_QWORD *)&v41 = sub_1C5CE094C((uint64_t)a1, v10, *((uint64_t *)&v41 + 1));
  DWORD2(v41) = v18;
  if (v5)
  {
    v19 = *(uint64_t **)(a2 + 32);
    v20 = *v19;
    v21 = v19[1];
  }
  else
  {
    LODWORD(v21) = 0;
    v20 = 0;
  }
  v22 = *a1;
  v23 = (uint64_t)a1[1];
  v33[0] = v40;
  v33[1] = 1;
  v33[2] = v15;
  v33[3] = v14;
  v34 = 20;
  sub_1C5D7B380(v22, v23, v17, v38, v39, (uint64_t)&v41, 1uLL, (uint64_t)v33, (uint64_t)v35, (uint64_t)&v36, v20, v21);
  v24 = (uint64_t)a1[1];
  v25 = *(_QWORD *)(v24 + 832);
  if (v25)
    v26 = *(_WORD *)(v25 + 8);
  else
    v26 = 0;
  v27 = sub_1C5D52060(v24, 201, (const llvm::APInt *)&v36, v15, v14, v35[0], v35[1], v26);
  v30 = v29;
  if (v5)
  {
    sub_1C5CED824((uint64_t)a1, a2, 1, v35[2], v35[3], v28);
    sub_1C5CED824((uint64_t)a1, a2, 0, (uint64_t)v27, v30, v31);
    v27 = 0;
  }
  if (v36)
    llvm::MetadataTracking::untrack((uint64_t)&v36, v36);
  return v27;
}

uint64_t sub_1C5CE0C34(char a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 *a5, int a6)
{
  int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t result;

  v12 = a3;
  v13 = 2;
  do
  {
    *a5 = v13;
    *((_QWORD *)a5 + 1) = 0;
    if (v12 == v13 || sub_1C6329714(a5, a3, a4))
    {
      v14 = *(_QWORD *)a5;
      if (a6)
        result = llvm::RTLIB::getFPTOSINT(a1, a2, v14);
      else
        result = llvm::RTLIB::getFPTOUINT(a1, a2, v14);
    }
    else
    {
      result = 637;
    }
    if (v13 > 6)
      break;
    ++v13;
  }
  while ((_DWORD)result == 637);
  return result;
}

void sub_1C5CE0CF0(uint64_t a1, uint64_t a2, __n128 *a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  int v18;
  uint64_t v19;
  BOOL v20;
  void *v21;
  void *v22;
  unsigned int ExtendedSizeInBits;
  const char *v24;
  unint64_t v25;
  unint64_t v26;
  __n128 v27;
  unsigned __int32 v28;
  unsigned int v29;
  const llvm::APInt *v30;
  unsigned int v31;
  llvm *v32;
  uint64_t v33;
  unsigned __int8 *v34;
  int v35;
  _BYTE v36[8];
  _DWORD *v37;
  uint64_t v38[3];

  v38[2] = *MEMORY[0x1E0C80C00];
  if (a2 && *(_WORD *)(a2 + 24) == 253 && (*(_WORD *)(a2 + 26) & 0xF80) == 0)
  {
    sub_1C6348C44(a1, a2, a3, a4);
  }
  else
  {
    v8 = *(uint64_t **)(a2 + 32);
    v9 = *v8;
    v10 = v8[1];
    v11 = v8[5];
    v12 = v8[6];
    v13 = *(unsigned __int8 **)(a2 + 64);
    v34 = v13;
    if (v13)
      llvm::MetadataTracking::track((uint64_t)&v34, v13, 2);
    v35 = *(_DWORD *)(a2 + 60);
    llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)v36);
    v15 = v37;
    v14 = v38[0];
    v32 = (llvm *)v37;
    v33 = v38[0];
    v17 = sub_1C636B5B0(*(_QWORD *)(a1 + 8), (*(unsigned __int16 *)(a2 + 26) >> 10) & 3, (uint64_t)&v34, (uint64_t)v37, v38[0], v9, v10, v16, v11, v12, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), *(_QWORD *)(a2 + 96));
    *(_QWORD *)a4 = v17;
    *(_DWORD *)(a4 + 8) = v18;
    v19 = *(_QWORD *)(a1 + 8);
    sub_1C632993C((uint64_t)v15, v14, v20);
    v22 = v21;
    if ((_BYTE)v15)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v32);
    else
      ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v32);
    if ((_DWORD)v24 == 1)
    {
      v29 = ExtendedSizeInBits;
      ExtendedSizeInBits = v29;
    }
    v31 = ExtendedSizeInBits;
    if (ExtendedSizeInBits > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v30, 0, 0);
    else
      v30 = 0;
    v25 = v10 & 0xFFFFFFFF00000000;
    if (v22 == &unk_1C866F1C0)
      llvm::detail::DoubleAPFloat::DoubleAPFloat(&v37, (uint64_t)&unk_1C866F1C0, (uint64_t)&v30);
    else
      llvm::detail::IEEEFloat::initFromAPInt((llvm::detail::IEEEFloat *)&v37, v22, &v30);
    v26 = v25 | 1;
    a3->n128_u64[0] = (unint64_t)sub_1C6366D08(v19, (llvm::LLVMContext *)v36, (const llvm::APFloat *)&v34, v32, v33, 0);
    a3->n128_u32[2] = v28;
    if (v37 == (_DWORD *)&unk_1C866F1C0)
    {
      sub_1C4773C74(v38);
    }
    else if ((v37[2] - 64) <= 0xFFFFFF7F && v38[0])
    {
      MEMORY[0x1CAA32F9C](v38[0], 0x1000C8000313F17);
    }
    if (v31 >= 0x41 && v30)
      v27.n128_f64[0] = MEMORY[0x1CAA32F9C](v30, 0x1000C8000313F17);
    sub_1C5CED824(a1, a2, 1, (uint64_t)v17, v26, v27);
    if (v34)
      llvm::MetadataTracking::untrack((uint64_t)&v34, v34);
  }
}

uint64_t *sub_1C5CE0FD4(unint64_t *a1, uint64_t a2)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned __int8 *v12;
  _QWORD *v13;
  unsigned __int8 *v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  if (a2 && *(_WORD *)(a2 + 24) == 254 && (*(_WORD *)(a2 + 26) & 0x780) == 0)
    return sub_1C6349074((uint64_t)a1, a2);
  v5 = *(_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(v5 + 8);
  v8 = *(_QWORD *)(v5 + 80);
  v9 = *(_QWORD *)(v5 + 88);
  v10 = *(_QWORD *)(*(_QWORD *)(v5 + 40) + 40) + 16 * *(unsigned int *)(v5 + 48);
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *(_QWORD *)v10, *(_QWORD *)(v10 + 8), (uint64_t)&v18);
  v18 = 0;
  v19 = 0;
  v16 = 0;
  LODWORD(v17) = 0;
  sub_1C63339F8((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), (uint64_t)&v18, (uint64_t)&v16);
  v11 = a1[1];
  v12 = *(unsigned __int8 **)(a2 + 64);
  v14 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v14, v12, 2);
  v15 = *(_DWORD *)(a2 + 60);
  v13 = sub_1C5D5DBA0(v11, v6, v7, (uint64_t)&v14, v16, v17, v8, v9, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), *(_QWORD *)(a2 + 96));
  if (v14)
    llvm::MetadataTracking::untrack((uint64_t)&v14, v14);
  return v13;
}

uint64_t *sub_1C5CE1114(unint64_t *a1, uint64_t a2, BOOL a3)
{
  unsigned __int8 *v5;
  uint64_t *v6;
  _QWORD *v7;
  int v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t EVT;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  llvm *v20;
  uint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  __n128 v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  unsigned __int8 *v35;
  const char *v36;
  unsigned int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unsigned int v43;
  uint64_t *v44;
  BOOL v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  llvm::EVT **v50;
  unsigned __int8 *v51;
  unint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  llvm *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  unint64_t v65;
  _BOOL8 *v66;
  _BOOL8 v67;
  llvm *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 *v72;
  uint64_t v73;
  __int16 v74;
  uint64_t v76;
  unint64_t v77;
  unsigned int v78;
  __int128 v79;
  unsigned __int8 *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unsigned __int8 *v84;
  int v85;
  unsigned __int8 *v86;
  llvm *v87;
  uint64_t v88;

  v5 = *(unsigned __int8 **)(a2 + 64);
  v84 = v5;
  if (v5)
    llvm::MetadataTracking::track((uint64_t)&v84, v5, 2);
  v85 = *(_DWORD *)(a2 + 60);
  v6 = *(uint64_t **)(a2 + 32);
  v7 = (_QWORD *)v6[5];
  v8 = *((unsigned __int16 *)v7 + 12);
  if (v8 != 35 && v8 != 11)
    goto LABEL_28;
  v11 = *v6;
  v10 = v6[1];
  v12 = v6[6];
  v13 = *(uint64_t **)(*v6 + 40);
  v15 = *v13;
  v14 = v13[1];
  v82 = v15;
  v83 = v14;
  if ((_BYTE)v15)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v82);
    v19 = 0;
    v18 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v14 + 24), 0, a3);
    v18 = v17;
    v19 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  v20 = (llvm *)(v19 | EVT);
  v21 = v7[10];
  v22 = (unint64_t *)(v21 + 24);
  if (*(_DWORD *)(v21 + 32) >= 0x41u)
    v22 = (unint64_t *)*v22;
  v23 = *v22;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v82, v83, (uint64_t)&v86);
  switch(v86)
  {
    case 7u:
      v27 = sub_1C6335540((uint64_t)a1, v11, v10);
      v30 = v10 & 0xFFFFFFFF00000000 | v29;
      v31 = a1[1];
      v32 = *(_QWORD *)(v31 + 832);
      if (v32)
        LOWORD(v32) = *(_WORD *)(v32 + 8);
      v24 = (uint64_t)sub_1C5D56C70(v31, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v84, v20, v18, v27, v30, v28, (uint64_t)v7, v12, v32);
      goto LABEL_20;
    case 6u:
      v86 = 0;
      LODWORD(v87) = 0;
      v80 = 0;
      LODWORD(v81) = 0;
      sub_1C6347ABC((uint64_t)a1, v11, v10, (uint64_t)&v86, (uint64_t)&v80);
      v35 = v86;
      v79 = *(_OWORD *)(*((_QWORD *)v86 + 5) + 16 * v87);
      v37 = sub_1C612FE00((llvm::EVT *)&v79, v36);
      v39 = a1[1];
      v40 = *(unsigned __int16 *)(a2 + 24);
      if (v23 >= v37)
      {
        v35 = v80;
        v41 = v81;
        v78 = *(unsigned __int16 *)(a2 + 24);
        v76 = v7[5] + 16 * v12;
        v7 = sub_1C6366AB4(v39, v23 - v37, (const llvm::APInt *)&v84, *(llvm **)v76, *(_QWORD *)(v76 + 8), 0, 0);
        v12 = v77;
        v40 = v78;
      }
      else
      {
        v41 = (unint64_t)v87;
      }
      v42 = *(_QWORD *)(v39 + 832);
      if (v42)
        LOWORD(v42) = *(_WORD *)(v42 + 8);
      v33 = sub_1C5D56C70(v39, v40, (const llvm::APInt *)&v84, v20, v18, (uint64_t)v35, v41, v38, (uint64_t)v7, v12, v42);
      v34 = v43;
      goto LABEL_26;
    case 5u:
      v24 = sub_1C63354E0((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
LABEL_20:
      v33 = (uint64_t *)v24;
      v34 = v25;
LABEL_26:
      sub_1C5CED824((uint64_t)a1, a2, 0, (uint64_t)v33, v34, v26);
      v44 = 0;
      goto LABEL_44;
  }
  v6 = *(uint64_t **)(a2 + 32);
LABEL_28:
  v46 = sub_1C6347C3C((uint64_t)a1, *v6, v6[1]);
  v48 = v47;
  v49 = v46[5] + 16 * v47;
  v51 = *(unsigned __int8 **)v49;
  v50 = *(llvm::EVT ***)(v49 + 8);
  v86 = v51;
  v87 = (llvm *)v50;
  if ((_BYTE)v51)
  {
    LOBYTE(v52) = sub_1C47F37A0((unsigned __int8 *)&v86);
    v54 = 0;
    v55 = 0;
  }
  else
  {
    v52 = llvm::EVT::getEVT(v50[3], 0, v45);
    v55 = v56;
    v54 = v52 & 0xFFFFFFFFFFFFFF00;
  }
  v57 = (llvm *)(v54 | v52);
  v58 = a1[1];
  v59 = *(_QWORD *)(a2 + 32);
  v60 = *(_QWORD *)(v59 + 40);
  v61 = *(_QWORD *)(v59 + 48);
  v62 = *(_QWORD *)(v58 + 832);
  if (v62)
    LOWORD(v62) = *(_WORD *)(v62 + 8);
  v63 = sub_1C5D56C70(v58, 148, (const llvm::APInt *)&v84, v57, v55, (uint64_t)v46, v48, v53, v60, v61, v62);
  v65 = v64;
  v66 = *(_BOOL8 **)(a2 + 40);
  v67 = *v66;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *v66, v66[1], (uint64_t)&v86);
  v68 = v87;
  v69 = v88;
  v70 = a1[1];
  if (v67 == 9)
  {
    v71 = 218;
  }
  else
  {
    if (v87 != 9)
      llvm::report_fatal_error((llvm *)"Attempt at an invalid promotion-related conversion", (const char *)1);
    v71 = 219;
  }
  v72 = *(unsigned __int8 **)(a2 + 64);
  v86 = v72;
  if (v72)
    llvm::MetadataTracking::track((uint64_t)&v86, v72, 2);
  LODWORD(v87) = *(_DWORD *)(a2 + 60);
  v73 = *(_QWORD *)(v70 + 832);
  if (v73)
    v74 = *(_WORD *)(v73 + 8);
  else
    v74 = 0;
  v44 = sub_1C5D52060(v70, v71, (const llvm::APInt *)&v86, v68, v69, (uint64_t)v63, v65, v74);
  if (v86)
    llvm::MetadataTracking::untrack((uint64_t)&v86, v86);
LABEL_44:
  if (v84)
    llvm::MetadataTracking::untrack((uint64_t)&v84, v84);
  return v44;
}

_QWORD *sub_1C5CE14F8(unint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE v4[8];
  llvm *v5;
  uint64_t v6;

  v2 = a1[1];
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(v2 + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)v4);
  return sub_1C61312D0(v2, v5, v6);
}

uint64_t sub_1C5CE1540(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BYTE *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[192];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (a2 >= 9)
  {
    v3 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
    v4 = v3 | (v3 >> 2) | ((v3 | (v3 >> 2)) >> 4);
    v5 = ((v4 | (v4 >> 8)) >> 16) | v4 | (v4 >> 8);
    if ((v5 + 1) > 0x40)
      a2 = v5 + 1;
    else
      a2 = 64;
  }
  if ((*(_DWORD *)a1 & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 16);
    if (a2 > 8)
    {
      v13 = a2;
      *(_QWORD *)(a1 + 8) = operator new(24 * a2, (std::align_val_t)8uLL);
      *(_QWORD *)(a1 + 16) = v13;
    }
    else
    {
      *(_DWORD *)a1 |= 1u;
    }
    sub_1C5CE16E8(a1, v6, v6 + 24 * v7);
    JUMPOUT(0x1CAA32FB4);
  }
  v8 = 0;
  v9 = v14;
  do
  {
    if (*(_QWORD *)(a1 + v8 + 8))
      v10 = 0;
    else
      v10 = *(_DWORD *)(a1 + v8 + 16) > 0xFFFFFFFD;
    if (!v10)
    {
      *(_OWORD *)v9 = *(_OWORD *)(a1 + v8 + 8);
      *((_DWORD *)v9 + 4) = *(_DWORD *)(a1 + v8 + 24);
      v9 += 24;
    }
    v8 += 24;
  }
  while (v8 != 192);
  if (a2 > 8)
  {
    *(_DWORD *)a1 &= ~1u;
    v11 = a2;
    *(_QWORD *)(a1 + 8) = operator new(24 * a2, (std::align_val_t)8uLL);
    *(_QWORD *)(a1 + 16) = v11;
  }
  return sub_1C5CE16E8(a1, (uint64_t)v14, (uint64_t)v9);
}

uint64_t sub_1C5CE16E8(uint64_t result, uint64_t a2, uint64_t a3)
{
  _DWORD *v5;
  int v6;
  unsigned int v7;
  _OWORD *v8;
  _OWORD *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = (_DWORD *)result;
  v6 = *(_DWORD *)result;
  *(_QWORD *)result = *(_DWORD *)result & 1;
  if ((v6 & 1) != 0)
  {
    v8 = (_OWORD *)(result + 8);
    v9 = (_OWORD *)(result + 200);
  }
  else
  {
    v7 = *(_DWORD *)(result + 16);
    if (!v7)
      goto LABEL_13;
    v8 = *(_OWORD **)(result + 8);
    v9 = (_OWORD *)((char *)v8 + 24 * v7);
  }
  do
  {
    *v8 = xmmword_1C6429E90;
    v8 = (_OWORD *)((char *)v8 + 24);
  }
  while (v8 != v9);
LABEL_13:
  while (a2 != a3)
  {
    if (*(_QWORD *)a2)
      v10 = 0;
    else
      v10 = *(_DWORD *)(a2 + 8) > 0xFFFFFFFD;
    if (!v10)
    {
      v13 = 0;
      result = sub_1C63377A8((uint64_t)v5, a2, &v13);
      v11 = v13;
      v12 = *(_QWORD *)a2;
      *(_DWORD *)(v13 + 8) = *(_DWORD *)(a2 + 8);
      *(_QWORD *)v11 = v12;
      *(_DWORD *)(v11 + 16) = *(_DWORD *)(a2 + 16);
      *v5 += 2;
    }
    a2 += 24;
  }
  return result;
}

uint64_t sub_1C5CE17C8(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BYTE *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[192];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (a2 >= 9)
  {
    v3 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
    v4 = v3 | (v3 >> 2) | ((v3 | (v3 >> 2)) >> 4);
    v5 = ((v4 | (v4 >> 8)) >> 16) | v4 | (v4 >> 8);
    if ((v5 + 1) > 0x40)
      a2 = v5 + 1;
    else
      a2 = 64;
  }
  if ((*(_DWORD *)a1 & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 16);
    if (a2 > 8)
    {
      v13 = a2;
      *(_QWORD *)(a1 + 8) = operator new(24 * a2, (std::align_val_t)8uLL);
      *(_QWORD *)(a1 + 16) = v13;
    }
    else
    {
      *(_DWORD *)a1 |= 1u;
    }
    sub_1C6337C5C(a1, v6, v6 + 24 * v7);
    JUMPOUT(0x1CAA32FB4);
  }
  v8 = 0;
  v9 = v14;
  do
  {
    v10 = *(_DWORD *)(a1 + v8 + 8);
    if (v10 <= 0xFFFFFFFD)
    {
      *(_DWORD *)v9 = v10;
      *(_OWORD *)(v9 + 8) = *(_OWORD *)(a1 + v8 + 16);
      v9 += 24;
    }
    v8 += 24;
  }
  while (v8 != 192);
  if (a2 > 8)
  {
    *(_DWORD *)a1 &= ~1u;
    v11 = a2;
    *(_QWORD *)(a1 + 8) = operator new(24 * a2, (std::align_val_t)8uLL);
    *(_QWORD *)(a1 + 16) = v11;
  }
  return sub_1C6337C5C(a1, (uint64_t)v14, (uint64_t)v9);
}

_DWORD *sub_1C5CE1960(_DWORD *a1, uint64_t a2, _DWORD *a3, _DWORD *a4)
{
  int v4;
  unsigned int v5;
  uint64_t v8;
  _DWORD *v9;

  v4 = *a1 >> 1;
  if ((*a1 & 1) != 0)
    v5 = 8;
  else
    v5 = a1[4];
  if (4 * v4 + 4 >= 3 * v5)
  {
    v5 *= 2;
  }
  else if (v5 + ~v4 - a1[1] > v5 >> 3)
  {
    goto LABEL_5;
  }
  v8 = (uint64_t)a1;
  sub_1C4840AE0((uint64_t)a1, v5);
  v9 = 0;
  sub_1C4840A30(v8, a3, &v9);
  a1 = (_DWORD *)v8;
  a4 = v9;
LABEL_5:
  *a1 += 2;
  if (*a4 != -1)
    --a1[1];
  return a4;
}

uint64_t *sub_1C5CE1A1C(unint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  _BOOL8 *v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  llvm *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  llvm *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  llvm *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  llvm::EVT *v43;
  uint64_t ExtendedSizeInBits;
  const char *v45;
  llvm::LLVMContext *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  llvm *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  __int16 v55;
  unsigned int v56;
  const char *v57;
  unsigned int v58;
  unsigned int v59;
  const char *v60;
  BOOL v61;
  unsigned int v62;
  int v63;
  llvm::LLVMContext *v64;
  unint64_t EVT;
  const char *v66;
  uint64_t v67;
  unint64_t v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71;
  llvm *v72;
  unint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  __int16 v76;
  unsigned int v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  unsigned int v90;
  unint64_t v91;
  uint64_t v92;
  llvm *v93;
  uint64_t v94;
  uint64_t v95;
  unint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unsigned int v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t ExtendedIntegerVT;
  uint64_t v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  const char *v110;
  unsigned int v111;
  llvm *ShiftAmountTy;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  _QWORD *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t *v120;
  unint64_t v121;
  __int128 v122;
  unsigned __int8 *v123;
  int v124;
  __int128 v125;
  llvm *v126;
  uint64_t v127;
  __int128 v128;
  _BOOL8 v129[2];
  _BYTE v130[24];

  v4 = *(uint64_t **)(a2 + 32);
  v6 = *v4;
  v5 = v4[1];
  v7 = (_BOOL8 *)(*(_QWORD *)(*v4 + 40) + 16 * v5);
  v9 = v7[1];
  v129[0] = *v7;
  v8 = v129[0];
  v129[1] = v9;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v129[0], v9, (uint64_t)v130);
  v128 = *(_OWORD *)&v130[8];
  v10 = *(uint64_t **)(a2 + 40);
  v12 = *v10;
  v11 = v10[1];
  v126 = (llvm *)v12;
  v127 = v11;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v12, v11, (uint64_t)v130);
  v125 = *(_OWORD *)&v130[8];
  v13 = *(unsigned __int8 **)(a2 + 64);
  v123 = v13;
  if (v13)
    llvm::MetadataTracking::track((uint64_t)&v123, v13, 2);
  v124 = *(_DWORD *)(a2 + 60);
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v8, v9, (uint64_t)v130);
  switch(v130[0])
  {
    case 1:
      if (!sub_1C6329824((llvm::EVT *)&v125, v128, *((uint64_t *)&v128 + 1)))
        goto LABEL_21;
      if ((_BYTE)v125)
      {
        if (v125 - 15 < 0x9C)
          goto LABEL_21;
      }
      else if ((*(_DWORD *)(*((_QWORD *)&v125 + 1) + 8) & 0xFE) == 0x12)
      {
        goto LABEL_21;
      }
      if ((_BYTE)v128)
      {
        if (v128 - 15 < 0x9C)
          goto LABEL_21;
      }
      else if ((*(_DWORD *)(*((_QWORD *)&v128 + 1) + 8) & 0xFE) == 0x12)
      {
        goto LABEL_21;
      }
      v69 = a1[1];
      v16 = *((_QWORD *)&v125 + 1);
      v15 = (llvm *)v125;
      v22 = sub_1C633BA30((uint64_t)a1, v6, v5);
      v24 = v70;
      v71 = *(_QWORD *)(v69 + 832);
      if (v71)
        v26 = *(_WORD *)(v71 + 8);
      else
        v26 = 0;
      v33 = v69;
      v34 = 216;
      goto LABEL_26;
    case 3:
      v14 = a1[1];
      v16 = *((_QWORD *)&v125 + 1);
      v15 = (llvm *)v125;
      v17 = sub_1C5CE094C((uint64_t)a1, v6, v5);
      goto LABEL_22;
    case 5:
      if ((_BYTE)v125)
      {
        if (v125 - 15 < 0x9C)
          goto LABEL_21;
        v19 = *((_QWORD *)&v125 + 1);
      }
      else
      {
        v19 = *((_QWORD *)&v125 + 1);
        if ((*(_DWORD *)(*((_QWORD *)&v125 + 1) + 8) & 0xFE) == 0x12)
          goto LABEL_21;
      }
      v27 = a1[1];
      v21 = (llvm *)v125;
      v28 = sub_1C63354E0((uint64_t)a1, v6, v5);
      v22 = (uint64_t)sub_1C6347B70((uint64_t)a1, v28, v29);
      v24 = v30;
      v31 = *(_QWORD *)(v27 + 832);
      if (v31)
        v26 = *(_WORD *)(v31 + 8);
      else
        v26 = 0;
      v33 = v27;
      v34 = 200;
      goto LABEL_51;
    case 6:
      if ((_BYTE)v125)
      {
        if (v125 - 15 < 0x9C)
          goto LABEL_21;
      }
      else if ((*(_DWORD *)(*((_QWORD *)&v125 + 1) + 8) & 0xFE) == 0x12)
      {
        goto LABEL_21;
      }
      *(_QWORD *)&v122 = 0;
      DWORD2(v122) = 0;
      v120 = 0;
      LODWORD(v121) = 0;
      sub_1C6347ABC((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), (uint64_t)&v122, (uint64_t)&v120);
      *(_QWORD *)&v122 = sub_1C6347B70((uint64_t)a1, v122, *((unint64_t *)&v122 + 1));
      DWORD2(v122) = v40;
      v120 = sub_1C6347B70((uint64_t)a1, (uint64_t)v120, v121);
      LODWORD(v121) = v41;
      v42 = a1[1];
      if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v42 + 40) + 40) + 272))
      {
        *(_OWORD *)v130 = v122;
        DWORD2(v122) = v121;
        *(_QWORD *)&v122 = v120;
        v120 = *(uint64_t **)v130;
        LODWORD(v121) = *(_DWORD *)&v130[8];
      }
      v43 = *(llvm::EVT **)(v42 + 56);
      if ((_BYTE)v125)
        ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v125);
      else
        ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v125);
      v46 = (llvm::LLVMContext *)ExtendedSizeInBits;
      if ((_DWORD)v45 == 1)
      if ((int)v46 <= 31)
      {
        switch((_DWORD)v46)
        {
          case 1:
            v47 = 0;
            v48 = 0;
            v49 = 2;
            goto LABEL_90;
          case 0x10:
            v47 = 0;
            v48 = 0;
            v49 = 4;
            goto LABEL_90;
          case 8:
            v47 = 0;
            v48 = 0;
            v49 = 3;
            goto LABEL_90;
        }
      }
      else
      {
        switch((_DWORD)v46)
        {
          case 0x20:
            v47 = 0;
            v48 = 0;
            v49 = 5;
            goto LABEL_90;
          case 0x40:
            v47 = 0;
            v48 = 0;
            v49 = 6;
            goto LABEL_90;
          case 0x80:
            v47 = 0;
            v48 = 0;
            v49 = 7;
            goto LABEL_90;
        }
      }
      ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(v43, v46);
      v48 = v104;
      v47 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
      v49 = ExtendedIntegerVT;
LABEL_90:
      v72 = (llvm *)(v49 | v47);
      v74 = sub_1C6347EEC((uint64_t)a1, v122, *((unint64_t *)&v122 + 1), (uint64_t)v120, v121);
      v75 = *(_QWORD *)(v42 + 832);
      if (v75)
        v76 = *(_WORD *)(v75 + 8);
      else
        v76 = 0;
      v22 = (uint64_t)sub_1C5D52060(v42, 200, (const llvm::APInt *)&v123, v72, v48, (uint64_t)v74, v73, v76);
      v78 = v5 & 0xFFFFFFFF00000000 | v77;
      v33 = a1[1];
      v36 = *((_QWORD *)&v125 + 1);
      v35 = (llvm *)v125;
      v79 = *(_QWORD *)(v33 + 832);
      if (v79)
        v26 = *(_WORD *)(v79 + 8);
      else
        v26 = 0;
      v34 = 216;
      v24 = v78;
      goto LABEL_27;
    case 7:
      if (sub_1C6329824((llvm::EVT *)&v125, v128, *((uint64_t *)&v128 + 1)))
      {
        if ((_BYTE)v125)
        {
          if (v125 - 15 >= 0x9C)
          {
            v39 = *((_QWORD *)&v125 + 1);
            goto LABEL_67;
          }
        }
        else
        {
          v39 = *((_QWORD *)&v125 + 1);
          if ((*(_DWORD *)(*((_QWORD *)&v125 + 1) + 8) & 0xFE) != 0x12)
          {
LABEL_67:
            v50 = a1[1];
            v51 = (llvm *)v125;
            v53 = sub_1C6335540((uint64_t)a1, v6, v5);
            v54 = *(_QWORD *)(v50 + 832);
            if (v54)
              v55 = *(_WORD *)(v54 + 8);
            else
              v55 = 0;
            v37 = sub_1C5D52060(v50, 216, (const llvm::APInt *)&v123, v51, v39, v53, v52, v55);
            v102 = v101;
            if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272))
            {
              if ((_BYTE)v128)
                v105 = sub_1C47A8C74((unsigned __int8 *)&v128);
              else
                v105 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v128);
              v107 = v105;
              v108 = v106;
              if (v8)
                v109 = sub_1C47A8C74((unsigned __int8 *)v129);
              else
                v109 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v129);
              v111 = v107 - v109;
              if (v108 == 1)
              ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy((uint64_t *)*a1, v125, *((uint64_t *)&v125 + 1), *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, 1);
              v113 = a1[1];
              v114 = v125;
              v116 = sub_1C6366AB4(v113, v111, (const llvm::APInt *)&v123, ShiftAmountTy, v115, 0, 0);
              v119 = *(_QWORD *)(v113 + 832);
              if (v119)
                LOWORD(v119) = *(_WORD *)(v119 + 8);
              v37 = sub_1C5D56C70(v113, 177, (const llvm::APInt *)&v123, (llvm *)v114, *((uint64_t *)&v114 + 1), (uint64_t)v37, v102, v118, (uint64_t)v116, v117, v119);
            }
            goto LABEL_28;
          }
        }
      }
      else if ((_BYTE)v125)
      {
        if (v125 - 15 >= 0x9C)
          goto LABEL_21;
      }
      else if ((*(_DWORD *)(*((_QWORD *)&v125 + 1) + 8) & 0xFE) != 0x12)
      {
        goto LABEL_21;
      }
      if ((_BYTE)v128)
        v56 = sub_1C47A8C74((unsigned __int8 *)&v128);
      else
        v56 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v128);
      v58 = v56;
      if ((_DWORD)v57 == 1)
      if ((_BYTE)v12)
        v59 = sub_1C47A8C74((unsigned __int8 *)&v126);
      else
        v59 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v126);
      v62 = v59;
      if ((_DWORD)v60 == 1)
      v63 = v58 / v62;
      if (v58 % v62)
        goto LABEL_21;
      v64 = *(llvm::LLVMContext **)(a1[1] + 56);
      if ((_BYTE)v126)
      {
        LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v126);
        v68 = 0;
        v67 = 0;
      }
      else
      {
        EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v127 + 24), 0, v61);
        v67 = (uint64_t)v66;
        v68 = EVT & 0xFFFFFFFFFFFFFF00;
      }
      v80 = v68 | EVT;
      v81 = sub_1C612FE00((llvm::EVT *)&v126, v66);
      v82 = sub_1C4816F98(v64, v80, v67, v81 * v63, 0);
      v84 = v83;
      llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v82, v83, (uint64_t)v130);
      if (v130[0])
      {
LABEL_21:
        v14 = a1[1];
        v16 = *((_QWORD *)&v125 + 1);
        v15 = (llvm *)v125;
        v17 = (uint64_t)sub_1C5CEE63C((uint64_t)a1, v6, v5, (uint64_t)v126, v127);
LABEL_22:
        v22 = v17;
        v24 = v18;
        v32 = *(_QWORD *)(v14 + 832);
        if (v32)
          v26 = *(_WORD *)(v32 + 8);
        else
          v26 = 0;
        v33 = v14;
        v34 = 200;
LABEL_26:
        v35 = v15;
        v36 = v16;
      }
      else
      {
        v85 = a1[1];
        v86 = sub_1C6335540((uint64_t)a1, v6, v5);
        v88 = sub_1C6367DA8(v85, v82, v84, v86, v87);
        v89 = v5 & 0xFFFFFFFF00000000;
        v91 = v5 & 0xFFFFFFFF00000000 | v90;
        v92 = a1[1];
        v93 = v126;
        v94 = v127;
        v95 = sub_1C6366C9C(v92, 0, (uint64_t)&v123, 0);
        v98 = *(_QWORD *)(v92 + 832);
        if (v98)
          LOWORD(v98) = *(_WORD *)(v98 + 8);
        v22 = (uint64_t)sub_1C5D56C70(v92, 151, (const llvm::APInt *)&v123, v93, v94, v88, v91, v97, v95, v96, v98);
        v24 = v99 | v89;
        v33 = a1[1];
        v36 = *((_QWORD *)&v125 + 1);
        v35 = (llvm *)v125;
        v100 = *(_QWORD *)(v33 + 832);
        if (v100)
          v26 = *(_WORD *)(v100 + 8);
        else
          v26 = 0;
        v34 = 200;
      }
LABEL_27:
      v37 = sub_1C5D52060(v33, v34, (const llvm::APInt *)&v123, v35, v36, v22, v24, v26);
LABEL_28:
      if (v123)
        llvm::MetadataTracking::untrack((uint64_t)&v123, v123);
      return v37;
    case 8:
      if ((_BYTE)v125)
      {
        if (v125 - 15 < 0x9C)
          goto LABEL_21;
        v19 = *((_QWORD *)&v125 + 1);
      }
      else
      {
        v19 = *((_QWORD *)&v125 + 1);
        if ((*(_DWORD *)(*((_QWORD *)&v125 + 1) + 8) & 0xFE) == 0x12)
          goto LABEL_21;
      }
      v20 = a1[1];
      v21 = (llvm *)v125;
      v22 = sub_1C632FA2C((uint64_t)a1, v6, v5);
      v24 = v23;
      v25 = *(_QWORD *)(v20 + 832);
      if (v25)
        v26 = *(_WORD *)(v25 + 8);
      else
        v26 = 0;
      v33 = v20;
      v34 = 219;
LABEL_51:
      v35 = v21;
      v36 = v19;
      goto LABEL_27;
    case 9:
      v14 = a1[1];
      v16 = *((_QWORD *)&v125 + 1);
      v15 = (llvm *)v125;
      v17 = sub_1C6336A5C((uint64_t)a1, v6, v5);
      goto LABEL_22;
    case 0xA:
      llvm::report_fatal_error((llvm *)"Scalarization of scalable vectors is not supported.", (const char *)1);
    default:
      goto LABEL_21;
  }
}

uint64_t *sub_1C5CE2334(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  llvm *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  char v12;
  uint64_t *v13;
  unsigned int v14;
  BOOL v15;
  int v16;
  BOOL v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int16 v22;
  uint64_t *v23;
  uint64_t *v24;
  unsigned int v26;
  uint64_t v27;
  BOOL v28;
  unsigned int v29;
  llvm *ShiftAmountTy;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  llvm *v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  _QWORD *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned __int8 *v45;
  int v46;
  llvm *v47;
  uint64_t v48;
  __int128 v49;

  v5 = sub_1C633BA30(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  v7 = v6;
  v49 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v8 = *(_QWORD *)(v5 + 40) + 16 * v6;
  v9 = *(llvm **)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v47 = *(llvm **)v8;
  v48 = v10;
  v11 = *(unsigned __int8 **)(a2 + 64);
  v45 = v11;
  v12 = v49;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v45, v11, 2);
  v46 = *(_DWORD *)(a2 + 60);
  if (!v12
    || (v12 - 15) < 0x9Cu
    || (v13 = *(uint64_t **)a1, (_BYTE)v9)
    && (v9 == 1 || v13[v9 + 12])
    && ((v14 = *((unsigned __int8 *)v13 + 390 * v9 + 4048), v15 = v14 > 4,
                                                                             v16 = (1 << v14) & 0x13,
                                                                             !v15)
      ? (v17 = v16 == 0)
      : (v17 = 1),
        !v17)
    || (v18 = sub_1C5D9CB70(v13, a2, *(_QWORD *)(a1 + 8))) == 0)
  {
    v26 = sub_1C6131328((unsigned __int8 *)&v47, (uint64_t)v11, v4);
    v29 = v26 - sub_1C6131328((unsigned __int8 *)&v49, v27, v28);
    ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)a1, (uint64_t)v47, v48, *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 8) + 40) + 40) + 272, 1);
    v32 = v31;
    v33 = *(_QWORD *)(a1 + 8);
    v34 = v47;
    v35 = v48;
    v36 = *(_QWORD *)(v33 + 832);
    if (v36)
      v37 = *(_WORD *)(v36 + 8);
    else
      v37 = 0;
    v38 = sub_1C5D52060(*(_QWORD *)(a1 + 8), 186, (const llvm::APInt *)&v45, v47, v48, v5, v7, v37);
    v40 = v39;
    v41 = sub_1C6366AB4(*(_QWORD *)(a1 + 8), v29, (const llvm::APInt *)&v45, ShiftAmountTy, v32, 0, 0);
    v44 = *(_QWORD *)(v33 + 832);
    if (v44)
      LOWORD(v44) = *(_WORD *)(v44 + 8);
    v23 = sub_1C5D56C70(v33, 177, (const llvm::APInt *)&v45, v34, v35, (uint64_t)v38, v40, v43, (uint64_t)v41, v42, v44);
  }
  else
  {
    v19 = (uint64_t)v18;
    v20 = *(_QWORD *)(a1 + 8);
    v21 = *(_QWORD *)(v20 + 832);
    if (v21)
      v22 = *(_WORD *)(v21 + 8);
    else
      v22 = 0;
    v23 = sub_1C5D52060(v20, 200, (const llvm::APInt *)&v45, v9, v10, v19, (unint64_t)v11, v22);
  }
  v24 = v23;
  if (v45)
    llvm::MetadataTracking::untrack((uint64_t)&v45, v45);
  return v24;
}

uint64_t *sub_1C5CE2574(uint64_t *a1, uint64_t a2)
{
  BOOL v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  llvm *v11;
  uint64_t v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  unsigned int v16;
  unsigned int v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t *v24;
  unsigned int v26;
  uint64_t v27;
  BOOL v28;
  unsigned int v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  llvm *v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unsigned int v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int16 v46;
  uint64_t v47;
  unsigned int v48;
  unsigned __int8 *v49;
  int v50;
  llvm *v51;
  uint64_t v52;
  _QWORD v53[2];

  v5 = sub_1C633BA30((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  v7 = v6;
  v8 = *(_QWORD **)(a2 + 40);
  v9 = v8[1];
  v53[0] = *v8;
  v53[1] = v9;
  v10 = *(_QWORD *)(v5 + 40) + 16 * v6;
  v11 = *(llvm **)v10;
  v12 = *(_QWORD *)(v10 + 8);
  v51 = *(llvm **)v10;
  v52 = v12;
  v13 = *(unsigned __int8 **)(a2 + 64);
  v49 = v13;
  v14 = LOBYTE(v53[0]);
  if (v13)
    llvm::MetadataTracking::track((uint64_t)&v49, v13, 2);
  v50 = *(_DWORD *)(a2 + 60);
  if (v14)
  {
    if ((v14 - 15) < 0x9C)
      goto LABEL_18;
  }
  else if ((*(_DWORD *)(v9 + 8) & 0xFE) == 0x12)
  {
    goto LABEL_18;
  }
  if ((_BYTE)v11)
  {
    v15 = *a1;
    if (*(_QWORD *)(*a1 + 8 * v11 + 96))
    {
      v16 = *(unsigned __int8 *)(v15 + 390 * v11 + 4045);
      if (v16 > 4 || ((1 << v16) & 0x13) == 0)
      {
        v18 = *(unsigned __int8 *)(v15 + 390 * v11 + 4050);
        if (v18 > 4 || ((1 << v18) & 0x13) == 0)
        {
          if (*(_BYTE *)(v15 + 390 * v11 + 4047))
          {
            if (*(_BYTE *)(v15 + 390 * v11 + 4046))
            {
              v41 = sub_1C5D9C098(v15, a2, a1[1]);
              if (v41)
              {
                v43 = (uint64_t)v41;
                v44 = a1[1];
                v45 = *(_QWORD *)(v44 + 832);
                if (v45)
                  v46 = *(_WORD *)(v45 + 8);
                else
                  v46 = 0;
                v24 = sub_1C5D52060(v44, 200, (const llvm::APInt *)&v49, v11, v12, v43, v42, v46);
                goto LABEL_23;
              }
            }
          }
        }
      }
    }
  }
LABEL_18:
  v20 = *(unsigned __int16 *)(a2 + 24);
  if ((_DWORD)v20 == 183)
  {
    v26 = sub_1C6131328((unsigned __int8 *)&v51, v20, v4);
    v29 = sub_1C6131328((unsigned __int8 *)v53, v27, v28);
    v30 = v29;
    v48 = v26;
    if (v26 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v47, 0, 0);
      v32 = 1 << v30;
      if (v48 > 0x40)
      {
        *(_QWORD *)(v47 + 8 * (v30 >> 6)) |= v32;
        goto LABEL_29;
      }
      v31 = v47;
    }
    else
    {
      v31 = 0;
      v32 = 1 << v29;
    }
    v47 = v31 | v32;
LABEL_29:
    v33 = a1[1];
    v34 = v51;
    v35 = v52;
    v36 = sub_1C63666FC(v33, (llvm::LLVMContext *)&v47, (const llvm::APInt *)&v49, (uint64_t)v51, v52, 0, 0);
    v39 = *(_QWORD *)(v33 + 832);
    if (v39)
      LOWORD(v39) = *(_WORD *)(v39 + 8);
    v5 = (uint64_t)sub_1C5D56C70(v33, 172, (const llvm::APInt *)&v49, v34, v35, v5, v7, v38, v36, v37, v39);
    v7 = v7 & 0xFFFFFFFF00000000 | v40;
    if (v48 >= 0x41 && v47)
      MEMORY[0x1CAA32F9C](v47, 0x1000C8000313F17);
    v20 = *(unsigned __int16 *)(a2 + 24);
    v11 = v51;
    v12 = v52;
  }
  v21 = a1[1];
  v22 = *(_QWORD *)(v21 + 832);
  if (v22)
    v23 = *(_WORD *)(v22 + 8);
  else
    v23 = 0;
  v24 = sub_1C5D52060(v21, v20, (const llvm::APInt *)&v49, v11, v12, v5, v7, v23);
LABEL_23:
  if (v49)
    llvm::MetadataTracking::untrack((uint64_t)&v49, v49);
  return v24;
}

_QWORD *sub_1C5CE2874(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned __int8 *v11;
  uint64_t *v12;
  _QWORD *v13;
  __n128 v14;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;

  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v17);
  v4 = v18;
  v5 = v19;
  v6 = sub_1C633BA30(a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 160), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 168));
  v8 = v7;
  v9 = *(unsigned __int16 *)(a2 + 26);
  if (((v9 >> 10) & 2) != 0)
    v10 = (v9 >> 10) & 3;
  else
    v10 = 1;
  v11 = *(unsigned __int8 **)(a2 + 64);
  v17 = v11;
  if (v11)
  {
    llvm::MetadataTracking::track((uint64_t)&v17, v11, 2);
    v9 = *(unsigned __int16 *)(a2 + 26);
  }
  LODWORD(v18) = *(_DWORD *)(a2 + 60);
  v12 = *(uint64_t **)(a2 + 32);
  LODWORD(v16) = (v9 >> 7) & 7;
  HIDWORD(v16) = v10;
  v13 = sub_1C5D5FD20(*(_QWORD *)(a1 + 8), v4, v5, (uint64_t)&v17, *v12, v12[1], v12[5], v12[6], v12[10], v12[11], v12[15], v12[16], v6, v8, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), *(_QWORD *)(a2 + 96), v16, (v9 & 0x1000) != 0);
  sub_1C5CED824(a1, a2, 1, (uint64_t)v13, 1uLL, v14);
  if (v17)
    llvm::MetadataTracking::untrack((uint64_t)&v17, v17);
  return v13;
}

_QWORD *sub_1C5CE29B0(unint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  char v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  __n128 v18;
  unsigned __int8 *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  v34 = *MEMORY[0x1E0C80C00];
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v22);
  v4 = v23;
  v5 = v24;
  v6 = sub_1C633BA30((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48));
  v8 = v7;
  v9 = *(unsigned __int16 *)(a2 + 26);
  if (((v9 >> 10) & 2) != 0)
    v10 = (v9 >> 10) & 3;
  else
    v10 = 1;
  v11 = *(unsigned __int8 **)(a2 + 64);
  v20 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v20, v11, 2);
  v21 = *(_DWORD *)(a2 + 60);
  v12 = *(_QWORD *)(a2 + 32);
  v13 = *(_QWORD *)v12;
  LODWORD(v23) = *(_DWORD *)(v12 + 8);
  v22 = v13;
  v24 = v6;
  v25 = v8;
  v26 = *(_QWORD *)(v12 + 80);
  v27 = *(_DWORD *)(v12 + 88);
  v28 = *(_QWORD *)(v12 + 120);
  v29 = *(_DWORD *)(v12 + 128);
  v31 = *(_DWORD *)(v12 + 168);
  v30 = *(_QWORD *)(v12 + 160);
  v33 = *(_DWORD *)(v12 + 208);
  v32 = *(_QWORD *)(v12 + 200);
  v14 = a1[1];
  v15 = sub_1C636A8B4(v14, v4, v5, 1, 0);
  v17 = sub_1C5D605F8(v14, v15, v16, *(void **)(a2 + 80), *(_QWORD *)(a2 + 88), (uint64_t)&v20, &v22, 6, *(_QWORD *)(a2 + 96), (*(unsigned __int16 *)(a2 + 26) >> 7) & 7, v10);
  sub_1C5CED824((uint64_t)a1, a2, 1, (uint64_t)v17, 1uLL, v18);
  if (v20)
    llvm::MetadataTracking::untrack((uint64_t)&v20, v20);
  return v17;
}

uint64_t sub_1C5CE2B74(unint64_t *a1, uint64_t a2)
{
  unsigned int *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  llvm *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unsigned int v19;
  unsigned int v20;
  __n128 v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  unsigned __int8 *v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  uint64_t v44[2];
  char v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  v4 = (unsigned int *)(*(_QWORD *)(a2 + 32) + 40 * sub_1C6141934(a2));
  v5 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v4 + 40) + 16 * v4[2]);
  v7 = *v5;
  v6 = v5[1];
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v36);
  v8 = v37;
  v9 = v38;
  v10 = (llvm *)(*(uint64_t (**)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, *(_QWORD *)(a1[1] + 56), v7, v6);
  v12 = v11;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), (_BOOL8)v10, v11, (uint64_t)&v36);
  if (v36 == 1)
  {
    llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v7, v6, (uint64_t)&v36);
    v10 = (llvm *)v8;
    v12 = v9;
    if (v36 == 1)
    {
      llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v7, v6, (uint64_t)&v36);
      v10 = (llvm *)(*(uint64_t (**)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, *(_QWORD *)(a1[1] + 56), v37, v38);
      v12 = v13;
    }
  }
  v14 = *(unsigned __int8 **)(a2 + 64);
  v34 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v34, v14, 2);
  v35 = *(_DWORD *)(a2 + 60);
  if (sub_1C6141934(a2))
  {
    v44[0] = (uint64_t)v10;
    v44[1] = v12;
    v45 = 1;
    v46 = 0;
    v16 = *(_QWORD *)(a2 + 32);
    v17 = *(_QWORD *)v16;
    LODWORD(v37) = *(_DWORD *)(v16 + 8);
    v36 = v17;
    v38 = *(_QWORD *)(v16 + 40);
    v39 = *(_DWORD *)(v16 + 48);
    v41 = *(_DWORD *)(v16 + 88);
    v40 = *(_QWORD *)(v16 + 80);
    v42 = *(_QWORD *)(v16 + 120);
    v43 = *(_DWORD *)(v16 + 128);
    v18 = sub_1C6366344(a1[1], (const char *)*(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v34, v44, 2, &v36, 4);
    v20 = v19;
    sub_1C5CED824((uint64_t)a1, a2, 1, (uint64_t)v18, 1uLL, v21);
  }
  else
  {
    v22 = a1[1];
    v23 = *(uint64_t **)(a2 + 32);
    v24 = *v23;
    v25 = v23[1];
    v26 = v23[5];
    v27 = v23[6];
    v28 = v23[10];
    v29 = v23[11];
    v30 = *(_QWORD *)(v22 + 832);
    if (v30)
      LOWORD(v30) = *(_WORD *)(v30 + 8);
    v18 = sub_1C5D58E08(v22, (const char *)*(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v34, v10, v12, v24, v25, v15, v26, v27, v28, v29, SHIDWORD(v29), v30);
    v20 = v31;
  }
  v32 = sub_1C6366480(a1[1], (uint64_t)v18, v20, (uint64_t)&v34, v8, v9);
  if (v34)
    llvm::MetadataTracking::untrack((uint64_t)&v34, v34);
  return v32;
}

void sub_1C5CE2E34(unint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  uint64_t v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE v13[8];
  uint64_t v14;
  uint64_t v15;

  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)v13);
  v11 = v14;
  v12 = v15;
  v4 = *(uint64_t **)(a2 + 32);
  v5 = *v4;
  v6 = v4[1];
  v7 = *(unsigned __int8 **)(a2 + 64);
  v9 = v7;
  if (v7)
    llvm::MetadataTracking::track((uint64_t)&v9, v7, 2);
  v10 = *(_DWORD *)(a2 + 60);
  v8 = *(_QWORD *)(v5 + 40) + 16 * v6;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *(_QWORD *)v8, *(_QWORD *)(v8 + 8), (uint64_t)v13);
  __asm { BR              X10 }
}

uint64_t *sub_1C5CE2EE0()
{
  uint64_t v0;
  uint64_t v1;
  llvm *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int16 v7;
  uint64_t *v8;
  unsigned __int8 *v10[18];

  v5 = *(_QWORD *)(v0 + 8);
  v6 = *(_QWORD *)(v5 + 832);
  if (v6)
    v7 = *(_WORD *)(v6 + 8);
  else
    v7 = 0;
  v8 = sub_1C5D52060(v5, 201, (const llvm::APInt *)v10, v2, v3, v1, v4, v7);
  if (v10[0])
    llvm::MetadataTracking::untrack((uint64_t)v10, v10[0]);
  return v8;
}

#error "1C5CE3214: call analysis failed (funcsize=98)"

uint64_t *sub_1C5CE3220(unint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  char *v20;
  int v21;
  unint64_t v22;
  char *v23;
  char *v24;
  int v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  uint64_t *v32;
  __n128 v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int16 v39;
  uint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  unsigned __int8 v46;
  _QWORD *v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unsigned int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  llvm *v64;
  unsigned __int8 v65;
  unsigned __int8 *v66;
  int v67;
  __int128 v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  _QWORD v72[18];

  v72[16] = *MEMORY[0x1E0C80C00];
  v4 = *(uint64_t **)(a2 + 32);
  v5 = *(uint64_t **)(a2 + 40);
  v6 = *v4;
  v7 = v4[1];
  v8 = v4[6];
  v63 = v4[5];
  v10 = *v5;
  v9 = v5[1];
  v11 = *(unsigned __int8 **)(a2 + 64);
  v66 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v66, v11, 2);
  v67 = *(_DWORD *)(a2 + 60);
  v12 = sub_1C47A8BD8(*a1, *(llvm::EVT **)(a1[1] + 56), v10, v9);
  v65 = v12;
  v13 = (*(uint64_t (**)(unint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 584))(*a1, *(_QWORD *)(a1[1] + 56), v10, v9, 0);
  v70 = v72;
  v71 = 0x800000000;
  sub_1C4825C80((unsigned int *)&v70, v13, 0, 0);
  if (v13)
  {
    v14 = 0;
    v15 = v6;
    do
    {
      v16 = *(uint64_t **)(a2 + 32);
      v17 = *(_QWORD *)(v16[15] + 80);
      v18 = (_QWORD *)(v17 + 24);
      if (*(_DWORD *)(v17 + 32) >= 0x41u)
        v18 = (_QWORD *)*v18;
      v19 = sub_1C636CD84(a1[1], v12, 0, (const llvm::APInt *)&v66, v15, v7, v63, v8, v16[10], v16[11], HIDWORD(v16[11]), *v18);
      v20 = (char *)v70 + v14;
      *(_QWORD *)v20 = v19;
      *((_DWORD *)v20 + 2) = v21;
      v15 = *(_QWORD *)((char *)v70 + v14);
      v7 = v7 & 0xFFFFFFFF00000000 | 1;
      v14 += 16;
    }
    while (16 * v13 != v14);
  }
  else
  {
    v15 = v6;
  }
  v22 = a1[1];
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v22 + 40) + 40) + 272))
  {
    if ((_DWORD)v71)
    {
      v23 = (char *)v70 + 16 * v71 - 16;
      if (v70 < v23)
      {
        v24 = (char *)v70 + 16;
        do
        {
          v68 = *((_OWORD *)v24 - 1);
          v25 = *((_DWORD *)v23 + 2);
          *((_QWORD *)v24 - 2) = *(_QWORD *)v23;
          *((_DWORD *)v24 - 2) = v25;
          *(_QWORD *)v23 = v68;
          *((_DWORD *)v23 + 2) = DWORD2(v68);
          v23 -= 16;
          v26 = v24 >= v23;
          v24 += 16;
        }
        while (!v26);
        v22 = a1[1];
      }
    }
  }
  v61 = v15;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(v22 + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v68);
  v27 = v69;
  v62 = a2;
  v64 = (llvm *)*((_QWORD *)&v68 + 1);
  v28 = a1[1];
  v29 = *(_QWORD *)(v28 + 832);
  if (v29)
    v30 = *(_WORD *)(v29 + 8);
  else
    v30 = 0;
  v32 = sub_1C5D52060(v28, 199, (const llvm::APInt *)&v66, *((llvm **)&v68 + 1), v69, *(_QWORD *)v70, *((_QWORD *)v70 + 1), v30);
  v34 = v31;
  if (v13 >= 2)
  {
    v35 = 0;
    v36 = 1;
    v59 = v13;
    v60 = v7;
    v58 = v31 & 0xFFFFFFFF00000000;
    do
    {
      v37 = a1[1];
      v38 = *(_QWORD *)(v37 + 832);
      if (v38)
        v39 = *(_WORD *)(v38 + 8);
      else
        v39 = 0;
      v40 = sub_1C5D52060(v37, 199, (const llvm::APInt *)&v66, v64, v27, *(_QWORD *)((char *)v70 + v35 + 16), *(_QWORD *)((char *)v70 + v35 + 24), v39);
      v42 = v41;
      v43 = a1[1];
      v45 = sub_1C47A8C74(&v65);
      if ((_DWORD)v44 == 1)
      v46 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, 0);
      v47 = sub_1C6366AB4(v43, v45 * v36, (const llvm::APInt *)&v66, (llvm *)v46, 0, 0, 0);
      v50 = *(_QWORD *)(v43 + 832);
      if (v50)
        LOWORD(v50) = *(_WORD *)(v50 + 8);
      v51 = sub_1C5D56C70(v43, 175, (const llvm::APInt *)&v66, v64, v27, (uint64_t)v40, v42, v49, (uint64_t)v47, v48, v50);
      v54 = a1[1];
      v55 = *(_QWORD *)(v54 + 832);
      if (v55)
        LOWORD(v55) = *(_WORD *)(v55 + 8);
      v32 = sub_1C5D56C70(v54, 172, (const llvm::APInt *)&v66, v64, v27, (uint64_t)v32, v34 | v58, v53, (uint64_t)v51, v42 & 0xFFFFFFFF00000000 | v52, v55);
      v34 = v56;
      ++v36;
      v35 += 16;
      v7 = v60;
    }
    while (v59 != v36);
  }
  sub_1C5CED824((uint64_t)a1, v62, 1, v61, v7, v33);
  if (v70 != v72)
    free(v70);
  if (v66)
    llvm::MetadataTracking::untrack((uint64_t)&v66, v66);
  return v32;
}

uint64_t *sub_1C5CE365C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  llvm *v5;
  BOOL v6;
  unint64_t EVT;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  unsigned __int8 *v11;
  uint64_t *v12;
  uint64_t v13;
  unint64_t v14;
  unsigned __int8 v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  unint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  llvm *v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  llvm *v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned __int8 *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  uint64_t v61;
  unsigned __int8 *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  llvm *v68;
  uint64_t v69;
  unsigned int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  const char *v74;
  unsigned int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  llvm *v83;
  uint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  uint64_t *v90;
  unint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t *v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  unsigned __int8 *v118;
  uint64_t v119;
  uint64_t *v120;
  unint64_t v121;
  unint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  uint64_t v126;
  unsigned __int8 *v128;
  uint64_t v129;
  __int128 v130;
  unsigned __int8 *v131;
  int v132;
  llvm *v133;
  uint64_t v134;
  _QWORD v135[2];
  void *v136;
  uint64_t v137;
  uint64_t v138;
  int v139;
  uint64_t v140;

  v140 = *MEMORY[0x1E0C80C00];
  v3 = *(_QWORD *)(a2 + 40);
  v5 = *(llvm **)v3;
  v4 = *(_QWORD *)(v3 + 8);
  v135[0] = v5;
  v135[1] = v4;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), (_BOOL8)v5, v4, (uint64_t)&v136);
  v133 = (llvm *)v137;
  v134 = v138;
  if ((_BYTE)v137)
  {
    v10 = sub_1C47F37A0((unsigned __int8 *)&v133);
    v9 = 0;
    v126 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v138 + 24), 0, v6);
    v126 = v8;
    v9 = EVT & 0xFFFFFFFFFFFFFF00;
    v10 = EVT;
  }
  v11 = *(unsigned __int8 **)(a2 + 64);
  v131 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v131, v11, 2);
  v132 = *(_DWORD *)(a2 + 60);
  v12 = *(uint64_t **)(a2 + 32);
  v13 = v12[5];
  v14 = v12[6];
  if ((_BYTE)v5)
  {
    if (v5 - 120 >= 0x33)
      goto LABEL_35;
  }
  else if (*(_BYTE *)(v4 + 8) != 19)
  {
    goto LABEL_8;
  }
  v15 = v10;
  v124 = *v12;
  v125 = v12[1];
  v16 = (uint64_t *)(*(_QWORD *)(*v12 + 40) + 16 * v125);
  v17 = *v16;
  v18 = v16[1];
  *(_QWORD *)&v130 = v17;
  *((_QWORD *)&v130 + 1) = v18;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v17, v18, (uint64_t)&v136);
  if (v136 == 6
    || (llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v17, v18, (uint64_t)&v136), !(_BYTE)v136))
  {
    v136 = (void *)sub_1C52B7018((uint64_t)&v130, *(llvm::LLVMContext **)(*(_QWORD *)(a1 + 8) + 56), v19);
    v137 = v20;
    v21 = sub_1C52B71D4((unsigned __int8 *)&v136);
    v22 = *(_QWORD *)(v13 + 80);
    v23 = (unint64_t *)(v22 + 24);
    if (*(_DWORD *)(v22 + 32) >= 0x41u)
      v23 = (unint64_t *)*v23;
    v24 = *v23;
    v25 = *(_QWORD *)(a1 + 8);
    v26 = (llvm *)v136;
    v27 = v137;
    v28 = v24 / v21 * v21;
    v29 = v24 % v21;
    v30 = v14;
    v31 = *(_QWORD *)(v13 + 40) + 16 * v14;
    v32 = sub_1C6366AB4(v25, v28, (const llvm::APInt *)&v131, *(llvm **)v31, *(_QWORD *)(v31 + 8), 0, 0);
    v35 = *(_QWORD *)(v25 + 832);
    if (v35)
      LOWORD(v35) = *(_WORD *)(v35 + 8);
    v36 = sub_1C5D56C70(v25, 151, (const llvm::APInt *)&v131, v26, v27, v124, v125, v34, (uint64_t)v32, v33, v35);
    v38 = v37;
    v39 = *(_QWORD *)(a1 + 8);
    v40 = sub_1C6366AB4(v39, v29, (const llvm::APInt *)&v131, *(llvm **)(*(_QWORD *)(v13 + 40) + 16 * v30), *(_QWORD *)(*(_QWORD *)(v13 + 40) + 16 * v30 + 8), 0, 0);
    v43 = *(_QWORD *)(v39 + 832);
    if (v43)
      LOWORD(v43) = *(_WORD *)(v43 + 8);
    v44 = sub_1C5D56C70(v39, 151, (const llvm::APInt *)&v131, v5, v4, (uint64_t)v36, v38, v42, (uint64_t)v40, v41, v43);
    v46 = v45;
    v47 = *(_QWORD *)(a1 + 8);
    v48 = v133;
    v49 = v134;
    v50 = *(_QWORD *)(v47 + 832);
    if (v50)
      v51 = *(_WORD *)(v50 + 8);
    else
      v51 = 0;
LABEL_22:
    v52 = sub_1C5D52060(v47, 200, (const llvm::APInt *)&v131, v48, v49, (uint64_t)v44, v46, v51);
    goto LABEL_59;
  }
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v17, v18, (uint64_t)&v136);
  if (v136 == 7)
  {
    v136 = (void *)sub_1C6335540(a1, v124, v125);
    v137 = v53;
    v138 = v13;
    v139 = v14;
    v54 = *(_QWORD *)(a1 + 8);
    v55 = *(unsigned __int8 **)(a2 + 64);
    v128 = v55;
    if (v55)
      llvm::MetadataTracking::track((uint64_t)&v128, v55, 2);
    LODWORD(v129) = *(_DWORD *)(a2 + 60);
    v56 = *(_QWORD *)(v54 + 832);
    if (v56)
      v57 = *(unsigned __int16 *)(v56 + 8);
    else
      v57 = 0;
    v67 = v54;
    v68 = v5;
    v69 = v4;
LABEL_69:
    v120 = sub_1C636D0C8(v67, (const char *)0x97, (const llvm::APInt *)&v128, v68, v69, (uint64_t *)&v136, 2, v57);
    v122 = v121;
    if (v128)
      llvm::MetadataTracking::untrack((uint64_t)&v128, v128);
    v47 = *(_QWORD *)(a1 + 8);
    v48 = v133;
    v49 = v134;
    v123 = *(_QWORD *)(v47 + 832);
    if (v123)
      v51 = *(_WORD *)(v123 + 8);
    else
      v51 = 0;
    v44 = v120;
    v46 = v122;
    goto LABEL_22;
  }
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v17, v18, (uint64_t)&v136);
  if (v136 == 1)
  {
    v136 = (void *)sub_1C633BA30(a1, v124, v125);
    v137 = v58;
    v138 = v13;
    v139 = v14;
    v60 = *((_QWORD *)v136 + 5) + 16 * v58;
    v62 = *(unsigned __int8 **)v60;
    v61 = *(_QWORD *)(v60 + 8);
    v128 = v62;
    v129 = v61;
    if ((_BYTE)v62)
    {
      LOBYTE(v63) = sub_1C47F37A0((unsigned __int8 *)&v128);
      v66 = 0;
      v65 = 0;
    }
    else
    {
      v63 = llvm::EVT::getEVT(*(llvm::EVT **)(v61 + 24), 0, v59);
      v65 = v64;
      v66 = v63 & 0xFFFFFFFFFFFFFF00;
    }
    v114 = sub_1C6347100((unsigned __int8 *)&v133, v66 | v63, v65);
    v116 = v115;
    v117 = *(_QWORD *)(a1 + 8);
    v118 = *(unsigned __int8 **)(a2 + 64);
    v128 = v118;
    if (v118)
      llvm::MetadataTracking::track((uint64_t)&v128, v118, 2);
    LODWORD(v129) = *(_DWORD *)(a2 + 60);
    v119 = *(_QWORD *)(v117 + 832);
    if (v119)
      v57 = *(unsigned __int16 *)(v119 + 8);
    else
      v57 = 0;
    v67 = v117;
    v68 = (llvm *)v114;
    v69 = v116;
    goto LABEL_69;
  }
  v10 = v15;
  if (!(_BYTE)v5)
  {
LABEL_8:
    if (*(_BYTE *)(v4 + 8) == 19)
      goto LABEL_9;
    goto LABEL_35;
  }
  if (v5 - 120 < 0x33)
LABEL_9:
    llvm::report_fatal_error((llvm *)"Unable to promote scalable types using BUILD_VECTOR", (const char *)1);
LABEL_35:
  v70 = *(unsigned int **)(a2 + 32);
  v71 = *(_QWORD *)v70;
  v72 = v70[2];
  v73 = *(_QWORD *)(*(_QWORD *)v70 + 40) + 16 * v72;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v73, *(_QWORD *)(v73 + 8), (uint64_t)&v136);
  if (v136 == 1)
  {
    v71 = sub_1C633BA30(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
    v72 = v74;
  }
  v130 = *(_OWORD *)(*(_QWORD *)(v71 + 40) + 16 * v72);
  v75 = sub_1C612FE00((llvm::EVT *)v135, v74);
  v136 = &v138;
  v137 = 0x800000000;
  if (v75 >= 9)
  {
    v76 = v75;
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v136, (uint64_t)&v138, v75, 16);
    goto LABEL_42;
  }
  if (v75)
  {
    v76 = v75;
LABEL_42:
    v79 = 0;
    v80 = v9 | v10;
    do
    {
      v81 = *(_QWORD *)(a1 + 8);
      v82 = *(_QWORD *)(v13 + 40) + 16 * v14;
      v83 = *(llvm **)v82;
      v84 = *(_QWORD *)(v82 + 8);
      v85 = sub_1C6366AB4(v81, v79, (const llvm::APInt *)&v131, *(llvm **)v82, v84, 0, 0);
      v88 = *(_QWORD *)(v81 + 832);
      if (v88)
        LOWORD(v88) = *(_WORD *)(v88 + 8);
      v90 = sub_1C5D56C70(v81, 56, (const llvm::APInt *)&v131, v83, v84, v13, v14, v87, (uint64_t)v85, v86, v88);
      v92 = v91;
      v93 = *(_QWORD *)(a1 + 8);
      if ((_BYTE)v130)
      {
        LOBYTE(v94) = sub_1C47F37A0((unsigned __int8 *)&v130);
        v98 = 0;
        v97 = 0;
      }
      else
      {
        v94 = llvm::EVT::getEVT(*(llvm::EVT **)(*((_QWORD *)&v130 + 1) + 24), 0, v89);
        v97 = v96;
        v98 = v94 & 0xFFFFFFFFFFFFFF00;
      }
      v99 = *(uint64_t **)(a2 + 32);
      v100 = *v99;
      v101 = v99[1];
      v102 = *(_QWORD *)(v93 + 832);
      if (v102)
        LOWORD(v102) = *(_WORD *)(v102 + 8);
      v103 = sub_1C5D56C70(v93, 148, (const llvm::APInt *)&v131, (llvm *)(v98 | v94), v97, v100, v101, v95, (uint64_t)v90, v92, v102);
      v105 = sub_1C63663BC(*(_QWORD *)(a1 + 8), (uint64_t)v103, v104, (uint64_t)&v131, v80, v126);
      v107 = v106;
      v108 = v137;
      if (v137 >= (unint64_t)HIDWORD(v137))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v136, (uint64_t)&v138, v137 + 1, 16);
        v108 = v137;
      }
      v109 = (uint64_t *)((char *)v136 + 16 * v108);
      *v109 = v105;
      v109[1] = v107;
      v77 = (v137 + 1);
      LODWORD(v137) = v137 + 1;
      ++v79;
    }
    while (v76 != v79);
    v78 = (uint64_t *)v136;
    goto LABEL_54;
  }
  v77 = 0;
  v78 = &v138;
LABEL_54:
  v110 = *(_QWORD *)(a1 + 8);
  v111 = *(_QWORD *)(v110 + 832);
  if (v111)
    v112 = *(unsigned __int16 *)(v111 + 8);
  else
    v112 = 0;
  v52 = sub_1C636D0C8(v110, (const char *)0x92, (const llvm::APInt *)&v131, v133, v134, v78, v77, v112);
  if (v136 != &v138)
    free(v136);
LABEL_59:
  if (v131)
    llvm::MetadataTracking::untrack((uint64_t)&v131, v131);
  return v52;
}

uint64_t *sub_1C5CE3DB8(unint64_t *a1, uint64_t a2)
{
  BOOL v4;
  unint64_t v5;
  unint64_t EVT;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 v10;
  unsigned __int8 *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  llvm *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t ExtendedSizeInBits;
  int v21;
  unint64_t v22;
  int v23;
  unint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  __int16 v28;
  uint64_t *v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t **v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  _QWORD v40[2];
  unsigned __int8 *v41;
  int v42;
  llvm *v43;
  uint64_t v44;
  llvm *v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;
  _QWORD v49[18];

  v49[16] = *MEMORY[0x1E0C80C00];
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v47);
  v43 = (llvm *)v48;
  v44 = v49[0];
  v5 = *(unsigned __int16 *)(a2 + 56);
  if ((_BYTE)v48)
  {
    v10 = sub_1C47F37A0((unsigned __int8 *)&v43);
    v9 = 0;
    v8 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v49[0] + 24), 0, v4);
    v8 = v7;
    v9 = EVT & 0xFFFFFFFFFFFFFF00;
    v10 = EVT;
  }
  v11 = *(unsigned __int8 **)(a2 + 64);
  v41 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v41, v11, 2);
  v42 = *(_DWORD *)(a2 + 60);
  v47 = v49;
  v48 = 0x800000000;
  if (v5 < 9)
  {
    if (!(_DWORD)v5)
    {
      v12 = 0;
      v13 = v49;
      goto LABEL_34;
    }
  }
  else
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v47, (uint64_t)v49, v5, 16);
  }
  v14 = 0;
  v15 = (llvm *)(v9 | v10);
  do
  {
    v16 = *(_QWORD *)(a2 + 32);
    v17 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v16 + v14) + 40) + 16 * *(unsigned int *)(v16 + v14 + 8));
    v19 = *v17;
    v18 = v17[1];
    v40[0] = v19;
    v40[1] = v18;
    if (v10 == v19)
    {
      if (v10 || v18 == v8)
        goto LABEL_29;
      v45 = v15;
      v46 = v8;
LABEL_15:
      ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v40);
      goto LABEL_18;
    }
    v45 = v15;
    v46 = v8;
    if (!(_BYTE)v19)
      goto LABEL_15;
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)v40);
LABEL_18:
    v22 = ExtendedSizeInBits;
    v23 = v21;
    if (v10)
      v24 = sub_1C47A8C74((unsigned __int8 *)&v45);
    else
      v24 = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v45);
    if (v23 == 1 && v25 != 1)
    {
      v16 = *(_QWORD *)(a2 + 32);
LABEL_29:
      v32 = v16 + v14;
      v29 = *(uint64_t **)v32;
      v31 = *(unsigned int *)(v32 + 8);
      goto LABEL_30;
    }
    v16 = *(_QWORD *)(a2 + 32);
    if (v22 >= v24)
      goto LABEL_29;
    v26 = a1[1];
    v27 = *(_QWORD *)(v26 + 832);
    if (v27)
      v28 = *(_WORD *)(v27 + 8);
    else
      v28 = 0;
    v29 = sub_1C5D52060(v26, 200, (const llvm::APInt *)&v41, v15, v8, *(_QWORD *)(v16 + v14), *(_QWORD *)(v16 + v14 + 8), v28);
    v31 = v30;
LABEL_30:
    v33 = v48;
    if (v48 >= (unint64_t)HIDWORD(v48))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v47, (uint64_t)v49, v48 + 1, 16);
      v33 = v48;
    }
    v9 = v9 & 0xFFFFFFFF00000000 | v31;
    v34 = (uint64_t **)((char *)v47 + 16 * v33);
    *v34 = v29;
    v34[1] = (uint64_t *)v9;
    v12 = (v48 + 1);
    LODWORD(v48) = v48 + 1;
    v14 += 40;
    --v5;
  }
  while (v5);
  v13 = (uint64_t *)v47;
LABEL_34:
  v35 = a1[1];
  v36 = *(_QWORD *)(v35 + 832);
  if (v36)
    v37 = *(unsigned __int16 *)(v36 + 8);
  else
    v37 = 0;
  v38 = sub_1C636D0C8(v35, (const char *)0x92, (const llvm::APInt *)&v41, v43, v44, v13, v12, v37);
  if (v47 != v49)
    free(v47);
  if (v41)
    llvm::MetadataTracking::untrack((uint64_t)&v41, v41);
  return v38;
}

uint64_t sub_1C5CE40B0(uint64_t a1, uint64_t a2)
{
  unsigned __int8 *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;
  unsigned int v8;
  unint64_t v9;
  const char *v10;
  BOOL v11;
  unsigned __int8 v12;
  unint64_t v13;
  unsigned int *v14;
  unint64_t *v15;
  unint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  unsigned int *v21;
  unint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  BOOL v27;
  unint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  BOOL v34;
  unint64_t v35;
  llvm::Type *v36;
  uint64_t v37;
  BOOL v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  BOOL v53;
  uint64_t v54;
  unint64_t *v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t EVT;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  llvm *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  unsigned int v74;
  uint64_t v75;
  void *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  _BOOL8 *v82;
  uint64_t v83;
  BOOL v84;
  unsigned int v85;
  unint64_t v86;
  uint64_t v87;
  BOOL v88;
  unint64_t v89;
  llvm::Type *v90;
  uint64_t v91;
  BOOL v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  unsigned int v96;
  uint64_t v97;
  uint64_t *v98;
  uint64_t v99;
  uint64_t v100;
  llvm *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t *v104;
  uint64_t v105;
  int v107;
  uint64_t v109;
  uint64_t v110;
  _BOOL8 v112;
  uint64_t v113;
  __int128 v114;
  _QWORD v115[2];
  unsigned __int8 *v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  _BYTE v122[144];
  uint64_t v123;

  v123 = *MEMORY[0x1E0C80C00];
  v2 = *(unsigned __int8 **)(a2 + 64);
  v116 = v2;
  if (v2)
    llvm::MetadataTracking::track((uint64_t)&v116, v2, 2);
  v117 = *(_DWORD *)(a2 + 60);
  v3 = *(uint64_t **)(a2 + 40);
  v4 = *v3;
  v5 = v3[1];
  v115[0] = v4;
  v115[1] = v5;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v4, v5, (uint64_t)v122);
  v114 = *(_OWORD *)&v122[8];
  v6 = *(unsigned __int16 *)(a2 + 56);
  v8 = sub_1C52B71D4((unsigned __int8 *)&v114);
  if ((_BYTE)v114)
  {
    v12 = sub_1C47F37A0((unsigned __int8 *)&v114);
    v13 = 0;
    v110 = 0;
    if ((_BYTE)v4)
    {
LABEL_5:
      if (v4 - 120 < 0x33)
        goto LABEL_6;
LABEL_10:
      *(_OWORD *)v122 = *(_OWORD *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40)
                                  + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
      v107 = sub_1C612FE00((llvm::EVT *)v122, v10);
      *(_QWORD *)v122 = &v122[16];
      *(_QWORD *)&v122[8] = 0x800000000;
      sub_1C4825C80((unsigned int *)v122, v8, 0, 0);
      v16 = (unint64_t *)a1;
      if ((_DWORD)v6)
      {
        v46 = 0;
        v47 = 0;
        v109 = v13 | v12;
        do
        {
          v48 = v6;
          v49 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v47);
          v51 = *v49;
          v50 = v49[1];
          v52 = *(_QWORD *)(*v49 + 40) + 16 * v50;
          llvm::TargetLoweringBase::getTypeConversion(*v16, *(llvm::EVT **)(v16[1] + 56), *(_QWORD *)v52, *(_QWORD *)(v52 + 8), (uint64_t)&v120);
          if (v120 == 1)
          {
            v51 = sub_1C633BA30((uint64_t)v16, v51, v50);
            v54 = v74;
            v50 = v50 & 0xFFFFFFFF00000000 | v74;
          }
          else
          {
            v54 = v50;
          }
          v55 = (unint64_t *)(*(_QWORD *)(v51 + 40) + 16 * v54);
          v57 = *v55;
          v56 = v55[1];
          v120 = v57;
          v121 = v56;
          if ((_BYTE)v57)
          {
            LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v120);
            v59 = 0;
            v60 = 0;
          }
          else
          {
            EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v56 + 24), 0, v53);
            v60 = v61;
            v59 = EVT & 0xFFFFFFFFFFFFFF00;
          }
          if (v107)
          {
            v62 = 0;
            v63 = (llvm *)(v59 | EVT);
            do
            {
              v64 = v16[1];
              v65 = sub_1C6366C9C(v64, v62, (uint64_t)&v116, 0);
              v68 = *(_QWORD *)(v64 + 832);
              if (v68)
                LOWORD(v68) = *(_WORD *)(v68 + 8);
              v69 = sub_1C5D56C70(v64, 148, (const llvm::APInt *)&v116, v63, v60, v51, v50, v67, v65, v66, v68);
              v16 = (unint64_t *)a1;
              v71 = sub_1C63663BC(*(_QWORD *)(a1 + 8), (uint64_t)v69, v70, (uint64_t)&v116, v109, v110);
              v72 = *(_QWORD *)v122 + 16 * (v46 + v62);
              *(_QWORD *)v72 = v71;
              *(_DWORD *)(v72 + 8) = v73;
              ++v62;
            }
            while (v107 != v62);
          }
          ++v47;
          v46 += v107;
          v6 = v48;
        }
        while (v47 != v48);
      }
      v17 = v16[1];
      v18 = *(_QWORD *)(v17 + 832);
      if (v18)
        v19 = *(unsigned __int16 *)(v18 + 8);
      else
        v19 = 0;
      v75 = (uint64_t)sub_1C636D0C8(v17, (const char *)0x92, (const llvm::APInt *)&v116, (llvm *)v114, *((uint64_t *)&v114 + 1), *(uint64_t **)v122, *(unsigned int *)&v122[8], v19);
      v76 = *(void **)v122;
      if (*(_BYTE **)v122 != &v122[16])
        goto LABEL_60;
      goto LABEL_61;
    }
  }
  else
  {
    v9 = llvm::EVT::getEVT(*(llvm::EVT **)(*((_QWORD *)&v114 + 1) + 24), 0, v7);
    v12 = v9;
    v110 = (uint64_t)v10;
    v13 = v9 & 0xFFFFFFFFFFFFFF00;
    if ((_BYTE)v4)
      goto LABEL_5;
  }
  if (*(_BYTE *)(v5 + 8) != 19)
    goto LABEL_10;
LABEL_6:
  v14 = *(unsigned int **)(a2 + 32);
  if (*(unsigned __int16 *)(a2 + 56) >= 2uLL)
  {
    v20 = &v14[10 * *(unsigned __int16 *)(a2 + 56)];
    v21 = v14 + 10;
    do
    {
      v22 = (unint64_t *)(*(_QWORD *)(*(_QWORD *)v14 + 40) + 16 * v14[2]);
      v24 = *v22;
      v23 = v22[1];
      v120 = v24;
      v121 = v23;
      if ((_BYTE)v24)
      {
        LOBYTE(v25) = sub_1C47F37A0((unsigned __int8 *)&v120);
        v28 = 0;
        v26 = 0;
      }
      else
      {
        v25 = llvm::EVT::getEVT(*(llvm::EVT **)(v23 + 24), 0, v11);
        v28 = v25 & 0xFFFFFFFFFFFFFF00;
      }
      *(_QWORD *)v122 = v28 | v25;
      *(_QWORD *)&v122[8] = v26;
      v29 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v21 + 40) + 16 * v21[2]);
      v31 = *v29;
      v30 = v29[1];
      v118 = v31;
      v119 = v30;
      if ((_BYTE)v31)
      {
        LOBYTE(v32) = sub_1C47F37A0((unsigned __int8 *)&v118);
        v35 = 0;
        v33 = 0;
      }
      else
      {
        v32 = llvm::EVT::getEVT(*(llvm::EVT **)(v30 + 24), 0, v27);
        v35 = v32 & 0xFFFFFFFFFFFFFF00;
      }
      v120 = v35 | v32;
      v121 = v33;
      v36 = sub_1C6131328(v122, v33, v34);
      if (v36 < sub_1C6131328((unsigned __int8 *)&v120, v37, v38))
        v14 = v21;
      v21 += 10;
      v15 = (unint64_t *)a1;
    }
    while (v21 != v20);
  }
  else
  {
    v15 = (unint64_t *)a1;
  }
  v39 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v14 + 40) + 16 * v14[2]);
  v41 = *v39;
  v40 = v39[1];
  *(_QWORD *)v122 = v41;
  *(_QWORD *)&v122[8] = v40;
  if ((_BYTE)v41)
  {
    LOBYTE(v42) = sub_1C47F37A0(v122);
    v45 = 0;
    v44 = 0;
  }
  else
  {
    v42 = llvm::EVT::getEVT(*(llvm::EVT **)(v40 + 24), 0, v11);
    v44 = v43;
    v45 = v42 & 0xFFFFFFFFFFFFFF00;
  }
  v77 = v45 | v42;
  v118 = v77;
  v119 = v44;
  *(_QWORD *)v122 = &v122[16];
  *(_QWORD *)&v122[8] = 0x800000000;
  if ((_DWORD)v6)
  {
    v78 = 0;
    do
    {
      v79 = (uint64_t *)(*(_QWORD *)(a2 + 32) + v78);
      v81 = *v79;
      v80 = v79[1];
      v82 = (_BOOL8 *)(*(_QWORD *)(*v79 + 40) + 16 * v80);
      v83 = v82[1];
      v112 = *v82;
      v113 = v83;
      llvm::TargetLoweringBase::getTypeConversion(*v15, *(llvm::EVT **)(v15[1] + 56), v112, v83, (uint64_t)&v120);
      if (v120 == 1)
      {
        v81 = sub_1C633BA30((uint64_t)v15, v81, v80);
        v80 = v80 & 0xFFFFFFFF00000000 | v85;
      }
      if (v112)
      {
        LOBYTE(v86) = sub_1C47F37A0((unsigned __int8 *)&v112);
        v89 = 0;
        v87 = 0;
      }
      else
      {
        v86 = llvm::EVT::getEVT(*(llvm::EVT **)(v113 + 24), 0, v84);
        v89 = v86 & 0xFFFFFFFFFFFFFF00;
      }
      v120 = v89 | v86;
      v121 = v87;
      v90 = sub_1C6131328((unsigned __int8 *)&v120, v87, v88);
      if (v90 < sub_1C6131328((unsigned __int8 *)&v118, v91, v92))
      {
        v93 = *(_QWORD *)(a1 + 8);
        v94 = sub_1C6347100((unsigned __int8 *)&v112, v118, v119);
        v81 = sub_1C63663BC(v93, v81, v80, (uint64_t)&v116, v94, v95);
        v80 = v80 & 0xFFFFFFFF00000000 | v96;
      }
      v97 = *(unsigned int *)&v122[8];
      if (*(unsigned int *)&v122[8] >= (unint64_t)*(unsigned int *)&v122[12])
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v122, (uint64_t)&v122[16], *(unsigned int *)&v122[8] + 1, 16);
        v97 = *(unsigned int *)&v122[8];
      }
      v15 = (unint64_t *)a1;
      v98 = (uint64_t *)(*(_QWORD *)v122 + 16 * v97);
      *v98 = v81;
      v98[1] = v80;
      ++*(_DWORD *)&v122[8];
      v78 += 40;
    }
    while (40 * v6 != v78);
    v77 = v118;
    v44 = v119;
  }
  v99 = v15[1];
  v101 = (llvm *)sub_1C6347100((unsigned __int8 *)v115, v77, v44);
  v102 = *(_QWORD *)(v99 + 832);
  if (v102)
    v103 = *(unsigned __int16 *)(v102 + 8);
  else
    v103 = 0;
  v104 = sub_1C636D0C8(v99, (const char *)0x95, (const llvm::APInt *)&v116, v101, v100, *(uint64_t **)v122, *(unsigned int *)&v122[8], v103);
  v75 = sub_1C63663BC(v99, (uint64_t)v104, v105, (uint64_t)&v116, v114, *((uint64_t *)&v114 + 1));
  v76 = *(void **)v122;
  if (*(_BYTE **)v122 != &v122[16])
LABEL_60:
    free(v76);
LABEL_61:
  if (v116)
    llvm::MetadataTracking::untrack((uint64_t)&v116, v116);
  return v75;
}

uint64_t sub_1C5CE4748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  llvm *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  __int16 v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unsigned __int8 *v20;
  int v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unsigned __int8 *v29;
  int v30;
  _BYTE v31[8];
  llvm *v32;
  uint64_t v33;

  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)v31);
  v5 = v32;
  v4 = v33;
  v6 = *(unsigned __int8 **)(a2 + 64);
  v29 = v6;
  if (v6)
    llvm::MetadataTracking::track((uint64_t)&v29, v6, 2);
  v30 = *(_DWORD *)(a2 + 60);
  v7 = *(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8);
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v7, *(_QWORD *)(v7 + 8), (uint64_t)v31);
  if (v31[0] != 1
    || (v17 = sub_1C633BA30(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8)),
        v19 = v18,
        v20 = (unsigned __int8 *)(*(_QWORD *)(v17 + 40) + 16 * v18),
        v5 != *v20)
    || (v15 = v17, !(_BYTE)v5) && v4 != *((_QWORD *)v20 + 1))
  {
    v8 = *(_QWORD *)(a1 + 8);
    v9 = *(uint64_t **)(a2 + 32);
    v10 = *v9;
    v11 = v9[1];
    v12 = *(_QWORD *)(v8 + 832);
    if (v12)
      v13 = *(_WORD *)(v12 + 8);
    else
      v13 = 0;
    v14 = sub_1C5D52060(v8, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v29, v5, v4, v10, v11, v13);
    goto LABEL_8;
  }
  v21 = *(unsigned __int16 *)(a2 + 24);
  if (v21 == 199)
  {
    v28 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
    v14 = sub_1C5D3F9A0(*(_QWORD *)(a1 + 8), v17, v18, (const llvm::APInt *)&v29, *v28, v28[1]);
LABEL_8:
    v15 = (uint64_t)v14;
    goto LABEL_9;
  }
  if (v21 == 198)
  {
    v22 = *(_QWORD *)(a1 + 8);
    v23 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
    v24 = sub_1C6367494(v22, *v23, v23[1]);
    v27 = *(_QWORD *)(v22 + 832);
    if (v27)
      LOWORD(v27) = *(_WORD *)(v27 + 8);
    v14 = sub_1C5D56C70(v22, 204, (const llvm::APInt *)&v29, v5, v4, v15, v19, v26, v24, v25, v27);
    goto LABEL_8;
  }
LABEL_9:
  if (v29)
    llvm::MetadataTracking::untrack((uint64_t)&v29, v29);
  return v15;
}

uint64_t *sub_1C5CE4928(unint64_t *a1, uint64_t a2)
{
  llvm *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  int v8;
  unint64_t v9;
  unint64_t v10;
  _BOOL4 v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t *v15;
  unsigned int v16;
  unsigned int v17;
  __n128 v18;
  uint64_t v19;
  BOOL v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  __int16 v25;
  uint64_t v26;
  int v27;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unsigned __int8 *v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  int v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = *MEMORY[0x1E0C80C00];
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v44);
  v4 = (llvm *)*((_QWORD *)&v44 + 1);
  v5 = v45;
  v6 = *(unsigned __int16 *)(a2 + 24);
  v7 = *(unsigned __int8 **)(a2 + 64);
  v38 = v7;
  v8 = v6;
  if (v7)
  {
    llvm::MetadataTracking::track((uint64_t)&v38, v7, 2);
    v8 = *(unsigned __int16 *)(a2 + 24);
  }
  v39 = *(_DWORD *)(a2 + 60);
  if (v8 == 133)
  {
    if ((_BYTE)v4)
    {
      v10 = *a1;
      if ((v4 == 1 || *(_QWORD *)(v10 + 8 * v4 + 96))
        && *(_BYTE *)(v10 + 390 * v4 + 3995)
        && (*(_BYTE *)(v10 + 390 * v4 + 3994) | 4) == 4)
      {
        v6 = 132;
      }
    }
  }
  else if (v8 == 209)
  {
    if ((_BYTE)v4)
    {
      v9 = *a1;
      if ((v4 == 1 || *(_QWORD *)(v9 + 8 * v4 + 96))
        && *(_BYTE *)(v9 + 390 * v4 + 4071)
        && (*(_BYTE *)(v9 + 390 * v4 + 4070) | 4) == 4)
      {
        v6 = 208;
      }
    }
  }
  v11 = sub_1C6141934(a2);
  v12 = a1[1];
  if (v11)
  {
    *(_QWORD *)&v44 = v4;
    *((_QWORD *)&v44 + 1) = v5;
    LOBYTE(v45) = 1;
    v46 = 0;
    v13 = *(_QWORD *)(a2 + 32);
    v14 = *(_DWORD *)(v13 + 8);
    v40 = *(_QWORD *)v13;
    v41 = v14;
    v42 = *(_QWORD *)(v13 + 40);
    v43 = *(_DWORD *)(v13 + 48);
    v15 = sub_1C6366344(v12, (const char *)v6, (const llvm::APInt *)&v38, (uint64_t *)&v44, 2, &v40, 2);
    v17 = v16;
    sub_1C5CED824((uint64_t)a1, a2, 1, (uint64_t)v15, 1uLL, v18);
  }
  else
  {
    v21 = *(uint64_t **)(a2 + 32);
    v22 = *v21;
    v23 = v21[1];
    v24 = *(_QWORD *)(v12 + 832);
    if (v24)
      v25 = *(_WORD *)(v24 + 8);
    else
      v25 = 0;
    v15 = sub_1C5D52060(v12, v6, (const llvm::APInt *)&v38, v4, v5, v22, v23, v25);
    v17 = v19;
  }
  v26 = a1[1];
  v27 = *(unsigned __int16 *)(a2 + 24);
  if (v27 == 133 || v27 == 209)
    v29 = 4;
  else
    v29 = 3;
  v44 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v30 = sub_1C6131264((unsigned __int8 *)&v44, v19, v20);
  v32 = sub_1C6367494(v26, v30, v31);
  v35 = *(_QWORD *)(v26 + 832);
  if (v35)
    LOWORD(v35) = *(_WORD *)(v35 + 8);
  v36 = sub_1C5D56C70(v26, v29, (const llvm::APInt *)&v38, v4, v5, (uint64_t)v15, v17, v34, v32, v33, v35);
  if (v38)
    llvm::MetadataTracking::untrack((uint64_t)&v38, v38);
  return v36;
}

uint64_t *sub_1C5CE4BFC(uint64_t **a1, uint64_t a2, BOOL a3)
{
  unsigned __int8 *v5;
  __int128 *v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t *v14;
  unsigned int v15;
  uint64_t *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t *v19;
  unint64_t v20;
  unint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  unsigned int v29;
  unsigned int v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  llvm *ShiftAmountTy;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unsigned int v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int v68;
  unint64_t *v69;
  unint64_t v70;
  unint64_t *v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  unsigned int v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  unsigned int v93;
  unint64_t v94;
  unsigned int v95;
  uint64_t v96;
  unsigned int v97;
  __int128 v98;
  __int128 v99;
  unsigned __int8 *v100;
  int v101;

  v5 = *(unsigned __int8 **)(a2 + 64);
  v100 = v5;
  if (v5)
    llvm::MetadataTracking::track((uint64_t)&v100, v5, 2);
  v101 = *(_DWORD *)(a2 + 60);
  v6 = *(__int128 **)(a2 + 32);
  v99 = *v6;
  v8 = *((_QWORD *)v6 + 5);
  v7 = *((_QWORD *)v6 + 6);
  v9 = sub_1C6329368((unsigned int *)&v99, (uint64_t)v5, a3);
  v10 = *(unsigned __int16 *)(a2 + 24);
  v11 = v10 & 0xFFFE;
  if (v11 == 86)
  {
    v12 = sub_1C633BA30((uint64_t)a1, v99, *((uint64_t *)&v99 + 1));
LABEL_8:
    v14 = (uint64_t *)v12;
    v15 = v13;
    v16 = sub_1C633BB94((uint64_t)a1, v8, v7);
    goto LABEL_9;
  }
  if ((_DWORD)v10 == 85 || (_DWORD)v10 == 83)
  {
    v12 = (uint64_t)sub_1C633BB94((uint64_t)a1, v99, *((uint64_t *)&v99 + 1));
    goto LABEL_8;
  }
  v14 = sub_1C633BA90((uint64_t)a1, v99, *((uint64_t *)&v99 + 1));
  v15 = v29;
  v16 = sub_1C633BA90((uint64_t)a1, v8, v7);
LABEL_9:
  v19 = v16;
  v20 = v17;
  v21 = v15;
  v98 = *(_OWORD *)(v14[5] + 16 * v15);
  v22 = sub_1C6131328((unsigned __int8 *)&v98, v17, v18);
  if ((_DWORD)v10 == 85)
  {
    v24 = (uint64_t)a1[1];
    v25 = *(_QWORD *)(v24 + 832);
    if (v25)
      LOWORD(v25) = *(_WORD *)(v25 + 8);
    v26 = sub_1C5D56C70(v24, 85, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v14, v15, v23, (uint64_t)v19, v20, v25);
LABEL_13:
    v27 = v26;
    goto LABEL_14;
  }
  v30 = v22;
  if ((_DWORD)v10 == 83)
  {
    v95 = v9;
    if (v9 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v94, -1, 1);
    }
    else
    {
      v31 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v9;
      if (!v9)
        v31 = 0;
      v94 = v31;
    }
    llvm::APInt::zext((llvm::APInt *)&v94, v30, (uint64_t)&v96);
    if (v95 >= 0x41 && v94)
      MEMORY[0x1CAA32F9C](v94, 0x1000C8000313F17);
    v33 = sub_1C63666FC((uint64_t)a1[1], (llvm::LLVMContext *)&v96, (const llvm::APInt *)&v100, v98, *((uint64_t *)&v98 + 1), 0, 0);
    v35 = v34;
    v36 = (uint64_t)a1[1];
    v37 = *(_QWORD *)(v36 + 832);
    if (v37)
      LOWORD(v37) = *(_WORD *)(v37 + 8);
    v39 = sub_1C5D56C70(v36, 56, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v14, v21, v32, (uint64_t)v19, v20, v37);
    v41 = (uint64_t)a1[1];
    v42 = *(_QWORD *)(v41 + 832);
    if (v42)
      LOWORD(v42) = *(_WORD *)(v42 + 8);
    v27 = sub_1C5D56C70(v41, 169, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v39, v38, v40, v33, v35, v42);
    if (v97 >= 0x41 && v96)
      MEMORY[0x1CAA32F9C](v96, 0x1000C8000313F17);
    goto LABEL_14;
  }
  v43 = *a1;
  if (v11 == 86)
  {
LABEL_35:
    if ((_DWORD)v10 == 87)
      v44 = 177;
    else
      v44 = 176;
    ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy(v43, v98, *((uint64_t *)&v98 + 1), *(_QWORD *)(*(_QWORD *)a1[1][5] + 40) + 272, 1);
    v49 = sub_1C6366AB4((uint64_t)a1[1], v30 - v9, (const llvm::APInt *)&v100, ShiftAmountTy, v46, 0, 0);
    v50 = v47;
    v51 = (uint64_t)a1[1];
    v52 = *(_QWORD *)(v51 + 832);
    if (v52)
      LOWORD(v52) = *(_WORD *)(v52 + 8);
    v54 = sub_1C5D56C70(v51, 175, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v14, v21, v48, (uint64_t)v49, v47, v52);
    v56 = v55;
    if (v11 != 86)
    {
      v57 = (uint64_t)a1[1];
      v58 = *(_QWORD *)(v57 + 832);
      if (v58)
        LOWORD(v58) = *(_WORD *)(v58 + 8);
      v19 = sub_1C5D56C70(v57, 175, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v19, v20, v53, (uint64_t)v49, v50, v58);
      v20 = v59;
    }
    v60 = (uint64_t)a1[1];
    v61 = *(_QWORD *)(v60 + 832);
    if (v61)
      LOWORD(v61) = *(_WORD *)(v61 + 8);
    v63 = sub_1C5D56C70(v60, v10, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v54, v56, v53, (uint64_t)v19, v20, v61);
    v65 = (uint64_t)a1[1];
    v66 = *(_QWORD *)(v65 + 832);
    if (v66)
      LOWORD(v66) = *(_WORD *)(v66 + 8);
    v26 = sub_1C5D56C70(v65, v44, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v63, v62, v64, (uint64_t)v49, v50, v66);
    goto LABEL_13;
  }
  if ((_BYTE)v98)
  {
    if (v98 == 1)
    {
      if (v10 > 0x185)
        goto LABEL_56;
    }
    else if (!v43[v98 + 12] || v10 > 0x185)
    {
      goto LABEL_56;
    }
    if (!*((_BYTE *)v43 + 390 * v98 + v10 + 3862))
      goto LABEL_35;
  }
LABEL_56:
  if ((_DWORD)v10 == 82)
    v67 = 56;
  else
    v67 = 57;
  v95 = v9;
  if (v9 > 0x40)
  {
    v69 = &v94;
    llvm::APInt::initSlowCase((llvm::APInt *)&v94, 0, 0);
    v68 = v9 - 1;
    if (v95 >= 0x41)
      v69 = (unint64_t *)(v94 + 8 * (v68 >> 6));
  }
  else
  {
    v94 = 0;
    LOBYTE(v68) = v9 - 1;
    v69 = &v94;
  }
  *v69 |= 1 << v68;
  llvm::APInt::sext((llvm::APInt *)&v94, v30, (llvm::APInt *)&v96);
  if (v95 >= 0x41 && v94)
    MEMORY[0x1CAA32F9C](v94, 0x1000C8000313F17);
  v93 = v9;
  if (v9 > 0x40)
  {
    v71 = &v92;
    llvm::APInt::initSlowCase((llvm::APInt *)&v92, -1, 1);
    LODWORD(v70) = v9 - 1;
    if (v93 >= 0x41)
      v71 = (unint64_t *)(v92 + 8 * (v70 >> 6));
  }
  else
  {
    if (v9)
      v70 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v9;
    else
      v70 = 0;
    v92 = v70;
    LOBYTE(v70) = v9 - 1;
    v71 = &v92;
  }
  *v71 &= ~(1 << v70);
  llvm::APInt::sext((llvm::APInt *)&v92, v30, (llvm::APInt *)&v94);
  if (v93 >= 0x41 && v92)
    MEMORY[0x1CAA32F9C](v92, 0x1000C8000313F17);
  v72 = sub_1C63666FC((uint64_t)a1[1], (llvm::LLVMContext *)&v96, (const llvm::APInt *)&v100, v98, *((uint64_t *)&v98 + 1), 0, 0);
  v74 = v73;
  v76 = sub_1C63666FC((uint64_t)a1[1], (llvm::LLVMContext *)&v94, (const llvm::APInt *)&v100, v98, *((uint64_t *)&v98 + 1), 0, 0);
  v78 = v77;
  v79 = (uint64_t)a1[1];
  v80 = *(_QWORD *)(v79 + 832);
  if (v80)
    LOWORD(v80) = *(_WORD *)(v80 + 8);
  v82 = sub_1C5D56C70(v79, v67, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v14, v21, v75, (uint64_t)v19, v20, v80);
  v84 = (uint64_t)a1[1];
  v85 = v81 & 0xFFFFFFFF00000000;
  v86 = *(_QWORD *)(v84 + 832);
  if (v86)
    LOWORD(v86) = *(_WORD *)(v86 + 8);
  v88 = sub_1C5D56C70(v84, 167, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v82, v81, v83, v76, v78, v86);
  v90 = (uint64_t)a1[1];
  v91 = *(_QWORD *)(v90 + 832);
  if (v91)
    LOWORD(v91) = *(_WORD *)(v91 + 8);
  v27 = sub_1C5D56C70(v90, 168, (const llvm::APInt *)&v100, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v88, v87 | v85, v89, v72, v74, v91);
  if (v95 >= 0x41 && v94)
    MEMORY[0x1CAA32F9C](v94, 0x1000C8000313F17);
  if (v97 >= 0x41 && v96)
    MEMORY[0x1CAA32F9C](v96, 0x1000C8000313F17);
LABEL_14:
  if (v100)
    llvm::MetadataTracking::untrack((uint64_t)&v100, v100);
  return v27;
}

uint64_t sub_1C5CE52D4(uint64_t **a1, uint64_t a2)
{
  unsigned __int8 *v4;
  int v5;
  uint64_t *v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t *v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  llvm *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unsigned int v20;
  uint64_t *v21;
  int v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v29;
  uint64_t *v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t *v33;
  unint64_t ShiftAmountTy;
  uint64_t v35;
  BOOL v36;
  unsigned int v37;
  uint64_t v38;
  BOOL v39;
  uint64_t v40;
  unsigned int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  llvm *v52;
  uint64_t v53;
  _QWORD *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  llvm *v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  llvm *v68;
  unsigned int v69;
  __int128 v70;
  llvm *v71;
  uint64_t v72;
  unsigned __int8 *v73;
  int v74;

  v4 = *(unsigned __int8 **)(a2 + 64);
  v73 = v4;
  if (v4)
    llvm::MetadataTracking::track((uint64_t)&v73, v4, 2);
  v74 = *(_DWORD *)(a2 + 60);
  v5 = *(unsigned __int16 *)(a2 + 24);
  if ((v5 | 2) == 0x5E)
  {
    v6 = sub_1C633BA90((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
    v8 = v7;
    v9 = sub_1C633BA90((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48));
  }
  else
  {
    v6 = sub_1C633BB94((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
    v8 = v11;
    v9 = sub_1C633BB94((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48));
  }
  v12 = (uint64_t)v9;
  v13 = v10;
  v14 = v8;
  v15 = v6[5] + 16 * v8;
  v16 = *(llvm **)v15;
  v17 = *(_QWORD *)(v15 + 8);
  v71 = *(llvm **)v15;
  v72 = v17;
  v18 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 80) + 80);
  v19 = (_QWORD *)(v18 + 24);
  if (*(_DWORD *)(v18 + 32) >= 0x41u)
    v19 = (_QWORD *)*v19;
  v20 = *(_DWORD *)v19;
  v21 = *a1;
  v69 = v5 & 0xFFFFFFFD;
  if (!(_BYTE)v16 || !v21[v16 + 12])
    goto LABEL_17;
  if (*(unsigned __int16 *)(a2 + 24) <= 0x185u)
  {
    v22 = *((unsigned __int8 *)v21 + 390 * v16 + *(unsigned __int16 *)(a2 + 24) + 3862);
    if (!*((_BYTE *)v21 + 390 * v16 + *(unsigned __int16 *)(a2 + 24) + 3862))
    {
      if ((*(unsigned int (**)(uint64_t *))(*v21 + 520))(v21))
        v22 = 0;
      else
        v22 = 2;
      v21 = *a1;
    }
    if ((v22 & 0xFFFFFFFB) != 0)
    {
LABEL_17:
      v23 = sub_1C5DA21E8(v21, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v73, (uint64_t)v6, v14, v12, v13, v20, (uint64_t)a1[1]);
      if (!v23)
      {
        v30 = *a1;
        v29 = (uint64_t)a1[1];
        v70 = *(_OWORD *)*(_QWORD *)(a2 + 40);
        v31 = sub_1C6131328((unsigned __int8 *)&v70, v24, v25);
        v26 = sub_1C5CE6350(a2, (uint64_t)v6, v14, v12, v13, v20, v30, v29, v31);
        goto LABEL_19;
      }
      v26 = (uint64_t)v23;
      v27 = v24;
      if ((v5 & 0xFFFE) != 0x5E)
        goto LABEL_19;
      v70 = *(_OWORD *)*(_QWORD *)(a2 + 40);
      v32 = sub_1C6131328((unsigned __int8 *)&v70, v24, v25);
      v33 = sub_1C5CE6080(v26, v27, (const llvm::APInt *)&v73, v32, v69 == 92, (uint64_t)a1[1]);
      goto LABEL_24;
    }
  }
  ShiftAmountTy = llvm::TargetLoweringBase::getShiftAmountTy(v21, (uint64_t)v16, v17, *(_QWORD *)(*(_QWORD *)a1[1][5] + 40) + 272, 1);
  v67 = v35;
  v68 = (llvm *)ShiftAmountTy;
  v37 = sub_1C6131328((unsigned __int8 *)&v71, v35, v36);
  v70 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v41 = v37 - sub_1C6131328((unsigned __int8 *)&v70, v38, v39);
  v42 = v5 & 0xFFFE;
  if (v42 == 94)
  {
    v58 = v12;
    v59 = (uint64_t)a1[1];
    v60 = v71;
    v66 = v72;
    v61 = sub_1C6366AB4(v59, v41, (const llvm::APInt *)&v73, v68, v67, 0, 0);
    v64 = *(_QWORD *)(v59 + 832);
    if (v64)
      LOWORD(v64) = *(_WORD *)(v64 + 8);
    v6 = sub_1C5D56C70(v59, 175, (const llvm::APInt *)&v73, v60, v66, (uint64_t)v6, v14, v63, (uint64_t)v61, v62, v64);
    v14 = v65;
    v12 = v58;
  }
  v43 = (uint64_t)a1[1];
  v44 = *(_QWORD *)(a2 + 32);
  v45 = *(_QWORD *)(v44 + 80);
  v46 = *(_QWORD *)(v44 + 88);
  v47 = *(_QWORD *)(v43 + 832);
  if (v47)
    LOWORD(v47) = *(_WORD *)(v47 + 8);
  v26 = (uint64_t)sub_1C5D58E08(v43, (const char *)*(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v73, v71, v72, (uint64_t)v6, v14, v40, v12, v13, v45, v46, SHIDWORD(v46), v47);
  v49 = v48;
  if (v42 == 94)
  {
    v50 = (uint64_t)a1[1];
    if (v69 == 92)
      v51 = 176;
    else
      v51 = 177;
    v52 = v71;
    v53 = v72;
    v54 = sub_1C6366AB4(v50, v41, (const llvm::APInt *)&v73, v68, v67, 0, 0);
    v57 = *(_QWORD *)(v50 + 832);
    if (v57)
      LOWORD(v57) = *(_WORD *)(v57 + 8);
    v33 = sub_1C5D56C70(v50, v51, (const llvm::APInt *)&v73, v52, v53, v26, v49, v56, (uint64_t)v54, v55, v57);
LABEL_24:
    v26 = (uint64_t)v33;
  }
LABEL_19:
  if (v73)
    llvm::MetadataTracking::untrack((uint64_t)&v73, v73);
  return v26;
}

uint64_t *sub_1C5CE56C4(uint64_t a1, uint64_t a2)
{
  _BOOL8 *v4;
  uint64_t v5;
  _BOOL8 v6;
  llvm *v7;
  uint64_t v8;
  uint64_t *v9;
  unsigned int v10;
  BOOL v11;
  int v12;
  BOOL v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  __int16 v21;
  uint64_t v22;
  uint64_t v23;
  llvm *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unsigned __int8 *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unsigned __int8 *v37;
  llvm *v38;
  uint64_t v39;

  v4 = *(_BOOL8 **)(a2 + 40);
  v6 = *v4;
  v5 = v4[1];
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *v4, v5, (uint64_t)&v37);
  v7 = v38;
  v8 = v39;
  if (v6)
  {
    if (v6 - 15 < 0x9C)
      goto LABEL_23;
  }
  else if ((*(_DWORD *)(v5 + 8) & 0xFE) == 0x12)
  {
LABEL_23:
    v28 = sub_1C633BA90(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
    v30 = v29;
    v31 = *(_QWORD *)(a1 + 8);
    v32 = *(unsigned __int8 **)(a2 + 64);
    v37 = v32;
    if (v32)
      llvm::MetadataTracking::track((uint64_t)&v37, v32, 2);
    LODWORD(v38) = *(_DWORD *)(a2 + 60);
    v33 = v28[5] + 16 * v30;
    v24 = *(llvm **)v33;
    v25 = *(_QWORD *)(v33 + 8);
    v34 = *(_QWORD *)(v31 + 832);
    if (v34)
      v21 = *(_WORD *)(v34 + 8);
    else
      v21 = 0;
    v22 = v31;
    v23 = 174;
    v26 = (uint64_t)v28;
    v27 = v30;
    goto LABEL_29;
  }
  v9 = *(uint64_t **)a1;
  if ((_BYTE)v38 && (v38 == 1 || v9[v38 + 12]))
  {
    v10 = *((unsigned __int8 *)v9 + 390 * v38 + 4036);
    v11 = v10 > 4;
    v12 = (1 << v10) & 0x13;
    v13 = v11 || v12 == 0;
    if (!v13
      || (v38 == 1 || v9[v38 + 12])
      && !*((_BYTE *)v9 + 390 * v38 + 4030))
    {
      goto LABEL_23;
    }
  }
  v14 = sub_1C5D9C6B8(v9, a2, *(_QWORD *)(a1 + 8), 0);
  if (!v14)
    goto LABEL_23;
  v16 = v14;
  v17 = v15;
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(unsigned __int8 **)(a2 + 64);
  v37 = v19;
  if (v19)
    llvm::MetadataTracking::track((uint64_t)&v37, v19, 2);
  LODWORD(v38) = *(_DWORD *)(a2 + 60);
  v20 = *(_QWORD *)(v18 + 832);
  if (v20)
    v21 = *(_WORD *)(v20 + 8);
  else
    v21 = 0;
  v22 = v18;
  v23 = 200;
  v24 = v7;
  v25 = v8;
  v26 = (uint64_t)v16;
  v27 = v17;
LABEL_29:
  v35 = sub_1C5D52060(v22, v23, (const llvm::APInt *)&v37, v24, v25, v26, v27, v21);
  if (v37)
    llvm::MetadataTracking::untrack((uint64_t)&v37, v37);
  return v35;
}

uint64_t *sub_1C5CE58C8(unint64_t *a1, uint64_t a2, int a3)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  __n128 v31;
  __n128 v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  unsigned __int8 *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __n128 v58;
  unint64_t v59;
  unint64_t i;
  unsigned __int8 *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  int v71;
  uint64_t v72;

  v72 = *MEMORY[0x1E0C80C00];
  v5 = *(_QWORD **)(a2 + 32);
  v6 = v5[10];
  if (a3 == 1)
  {
    v7 = (*(uint64_t (**)(void))(*(_QWORD *)*a1 + 400))();
    v9 = v8;
    llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 24), (uint64_t)&v64);
    v10 = v65;
    v11 = v66;
    if ((_BYTE)v7 && *(_QWORD *)(*a1 + 8 * v7 + 96))
    {
      v11 = v9;
      v10 = v7;
    }
    v13 = sub_1C636B134(a1[1], **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), v10, v11, 1, 0);
    v15 = v14;
    v16 = a1[1];
    v17 = *(unsigned __int8 **)(a2 + 64);
    v62 = v17;
    if (v17)
      llvm::MetadataTracking::track((uint64_t)&v62, v17, 2);
    v63 = *(_DWORD *)(a2 + 60);
    v18 = *(_QWORD *)(a2 + 80);
    v19 = *(_QWORD *)(a2 + 88);
    v20 = *(uint64_t **)(a2 + 32);
    v21 = *v20;
    v22 = v20[1];
    v23 = v20[5];
    v24 = v20[6];
    v25 = v20[10];
    v26 = v20[11];
    v28 = v20[15];
    v27 = v20[16];
    v29 = *(_QWORD *)(a2 + 96);
    v64 = v21;
    LODWORD(v65) = v22;
    v66 = v23;
    v67 = v24;
    v68 = v25;
    v69 = v26;
    v70 = v28;
    v71 = v27;
    v30 = sub_1C636A43C(v16, 293, (uint64_t)&v62, v18, v19, v13, v15, v12, &v64, 4, v29);
    if (v62)
      llvm::MetadataTracking::untrack((uint64_t)&v62, v62);
    sub_1C5CED824((uint64_t)a1, a2, 0, (uint64_t)v30, 0, v31);
    sub_1C5CED824((uint64_t)a1, a2, 2, (uint64_t)v30, 2uLL, v32);
  }
  else
  {
    v33 = v5[11];
    v34 = sub_1C633BA30((uint64_t)a1, v5[15], v5[16]);
    v36 = v35;
    v37 = (*(uint64_t (**)(unint64_t))(*(_QWORD *)*a1 + 992))(*a1);
    if (v37 == 200)
    {
      v38 = sub_1C633BA30((uint64_t)a1, v6, v33);
    }
    else if (v37 == 199)
    {
      v38 = (uint64_t)sub_1C633BB94((uint64_t)a1, v6, v33);
    }
    else
    {
      v38 = (uint64_t)sub_1C633BA90((uint64_t)a1, v6, v33);
    }
    v40 = v38;
    v41 = v39;
    v42 = (uint64_t *)(*(_QWORD *)(v38 + 40) + 16 * v39);
    v44 = sub_1C636B134(a1[1], *v42, v42[1], *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 24), 1, 0);
    v46 = v45;
    v47 = a1[1];
    v48 = *(unsigned __int16 *)(a2 + 24);
    v49 = *(unsigned __int8 **)(a2 + 64);
    v62 = v49;
    if (v49)
      llvm::MetadataTracking::track((uint64_t)&v62, v49, 2);
    v63 = *(_DWORD *)(a2 + 60);
    v50 = *(_QWORD *)(a2 + 80);
    v51 = *(_QWORD *)(a2 + 88);
    v52 = *(uint64_t **)(a2 + 32);
    v53 = *v52;
    v54 = v52[1];
    v56 = v52[5];
    v55 = v52[6];
    v57 = *(_QWORD *)(a2 + 96);
    v64 = v53;
    LODWORD(v65) = v54;
    v66 = v56;
    v67 = v55;
    v68 = v40;
    v69 = v41;
    v70 = v34;
    v71 = v36;
    v30 = sub_1C636A43C(v47, v48, (uint64_t)&v62, v50, v51, v44, v46, v43, &v64, 4, v57);
    if (v62)
      llvm::MetadataTracking::untrack((uint64_t)&v62, v62);
    v59 = *(unsigned __int16 *)(a2 + 58);
    if (v59 >= 2)
    {
      for (i = 1; i != v59; ++i)
        sub_1C5CED824((uint64_t)a1, a2, i, (uint64_t)v30, i, v58);
    }
  }
  return v30;
}

void sub_1C5CE5C34(uint64_t *a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  __n128 v6;

  v4 = sub_1C5D99EA4(*a1, a2, 1, a1[1]);
  sub_1C5CED824((uint64_t)a1, a2, 0, (uint64_t)v4, v5, v6);
}

uint64_t *sub_1C5CE5C78(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  BOOL v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  const char *v13;
  unsigned int v14;
  uint64_t v15;
  BOOL v16;
  unsigned int v17;
  uint64_t v18;
  __int128 v19;
  _QWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unsigned int v26;
  unint64_t v27;
  const char *v28;
  int v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unsigned int v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unsigned int v55;
  unint64_t v56;
  uint64_t *v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  unsigned __int8 *v78;
  int v79;

  v73 = sub_1C633BA30((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  v74 = v4;
  v5 = sub_1C633BA30((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48));
  v7 = v6;
  v9 = sub_1C633BA30((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 88));
  v11 = v10;
  v12 = *(unsigned __int8 **)(a2 + 64);
  v78 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v78, v12, 2);
  v79 = *(_DWORD *)(a2 + 60);
  v77 = *(_OWORD *)(*(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8));
  v75 = v5;
  v76 = *(_OWORD *)(*(_QWORD *)(v5 + 40) + 16 * v7);
  v13 = (const char *)*(unsigned __int16 *)(a2 + 24);
  v14 = sub_1C6131328((unsigned __int8 *)&v77, (uint64_t)v12, v8);
  v17 = sub_1C6131328((unsigned __int8 *)&v76, v15, v16);
  v18 = a1[1];
  v19 = v76;
  v20 = sub_1C6366AB4(v18, v14, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), 0, 0);
  v23 = *(_QWORD *)(v18 + 832);
  if (v23)
    LOWORD(v23) = *(_WORD *)(v23 + 8);
  v24 = sub_1C5D56C70(v18, 62, (const llvm::APInt *)&v78, (llvm *)v19, *((uint64_t *)&v19 + 1), v9, v11, v22, (uint64_t)v20, v21, v23);
  v25 = v24;
  v27 = v11 & 0xFFFFFFFF00000000 | v26;
  v28 = v13;
  if (v17 < 2 * v14
    || (v29 = *((unsigned __int16 *)v24 + 12), v29 == 11)
    || v29 == 35
    || (_BYTE)v76
    && ((v47 = *a1, v76 == 1) || *(_QWORD *)(v47 + 8 * v76 + 96))
    && (v13 > 0x185 || (v13[390 * v76 + 3862 + v47] & 0xFB) == 0))
  {
    v32 = sub_1C6366AB4(a1[1], v17 - v14, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), 0, 0);
    v33 = v30;
    v34 = a1[1];
    v35 = *(_QWORD *)(v34 + 832);
    if (v35)
      LOWORD(v35) = *(_WORD *)(v35 + 8);
    v37 = sub_1C5D56C70(v34, 175, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), v75, v7, v31, (uint64_t)v32, v30, v35);
    v39 = v7 & 0xFFFFFFFF00000000 | v38;
    if ((_DWORD)v28 == 181)
    {
      v40 = a1[1];
      v41 = *(_QWORD *)(v40 + 832);
      if (v41)
        LOWORD(v41) = *(_WORD *)(v41 + 8);
      v25 = sub_1C5D56C70(v40, 56, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), (uint64_t)v25, v27, v36, (uint64_t)v32, v33, v41);
      v27 = v42 | v11 & 0xFFFFFFFF00000000;
    }
    v43 = a1[1];
    v44 = *(_QWORD *)(v43 + 832);
    if (v44)
      LOWORD(v44) = *(_WORD *)(v44 + 8);
    v45 = sub_1C5D58E08(v43, v28, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), v73, v74, v36, (uint64_t)v37, v39, (uint64_t)v25, v27, SHIDWORD(v27), v44);
  }
  else
  {
    v50 = sub_1C6366AB4(a1[1], v14, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), 0, 0);
    v51 = v48;
    v52 = a1[1];
    v53 = *(_QWORD *)(v52 + 832);
    if (v53)
      LOWORD(v53) = *(_WORD *)(v53 + 8);
    v54 = sub_1C5D56C70(v52, 175, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), v73, v74, v49, (uint64_t)v50, v48, v53);
    v56 = v74 & 0xFFFFFFFF00000000 | v55;
    v57 = sub_1C5D3F9A0(a1[1], v75, v7, (const llvm::APInt *)&v78, v77, *((uint64_t *)&v77 + 1));
    v60 = a1[1];
    v61 = *(_QWORD *)(v60 + 832);
    if (v61)
      LOWORD(v61) = *(_WORD *)(v61 + 8);
    v62 = sub_1C5D56C70(v60, 172, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), (uint64_t)v54, v56, v59, (uint64_t)v57, v7 & 0xFFFFFFFF00000000 | v58, v61);
    v65 = v64;
    v66 = a1[1];
    if ((_DWORD)v13 == 181)
      v67 = 177;
    else
      v67 = 175;
    v68 = *(_QWORD *)(v66 + 832);
    if (v68)
      LOWORD(v68) = *(_WORD *)(v68 + 8);
    v45 = sub_1C5D56C70(v66, v67, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), (uint64_t)v62, v65, v63, (uint64_t)v25, v27, v68);
    if ((_DWORD)v28 != 181)
    {
      v71 = a1[1];
      v72 = *(_QWORD *)(v71 + 832);
      if (v72)
        LOWORD(v72) = *(_WORD *)(v72 + 8);
      v45 = sub_1C5D56C70(v71, 177, (const llvm::APInt *)&v78, (llvm *)v76, *((uint64_t *)&v76 + 1), (uint64_t)v45, v65 & 0xFFFFFFFF00000000 | v69, v70, (uint64_t)v50, v51, v72);
    }
  }
  if (v78)
    llvm::MetadataTracking::untrack((uint64_t)&v78, v78);
  return v45;
}

uint64_t *sub_1C5CE6080(uint64_t a1, unint64_t a2, const llvm::APInt *a3, unsigned int a4, char a5, uint64_t a6)
{
  unsigned int v12;
  unsigned int v13;
  __int128 v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  unsigned int v22;
  unsigned int v23;
  __int128 v24;
  unint64_t v25;
  unsigned int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  __int128 v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  unsigned int v39;
  __int128 v40;

  v40 = *(_OWORD *)(*(_QWORD *)(a1 + 40) + 16 * a2);
  v12 = sub_1C6131328((unsigned __int8 *)&v40, a2, (BOOL)a3);
  v13 = v12;
  if ((a5 & 1) != 0)
  {
    v14 = v40;
    v15 = a4 - 1;
    v39 = v12;
    if (v12 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v38, 0, 0);
      v15 = a4 - 1;
    }
    else
    {
      v38 = 0;
    }
    sub_1C4912E54(&v38, 0, v15);
    v16 = sub_1C63666FC(a6, (llvm::LLVMContext *)&v38, a3, v40, *((uint64_t *)&v40 + 1), 0, 0);
    v19 = *(_QWORD *)(a6 + 832);
    if (v19)
      LOWORD(v19) = *(_WORD *)(v19 + 8);
    v20 = a2 & 0xFFFFFFFF00000000;
    v21 = sub_1C5D56C70(a6, 167, a3, (llvm *)v14, *((uint64_t *)&v14 + 1), a1, a2, v18, v16, v17, v19);
    v23 = v22;
    if (v39 >= 0x41 && v38)
      MEMORY[0x1CAA32F9C](v38, 0x1000C8000313F17);
    v24 = v40;
    v25 = v23 | v20;
    v26 = ~v13 + a4;
    v39 = v13;
    if (v13 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v38, 0, 0);
      v13 = v39;
    }
    else
    {
      v38 = 0;
    }
    sub_1C4912E54(&v38, v26 + v13, v13);
    v27 = sub_1C63666FC(a6, (llvm::LLVMContext *)&v38, a3, v40, *((uint64_t *)&v40 + 1), 0, 0);
    v30 = *(_QWORD *)(a6 + 832);
    if (v30)
      LOWORD(v30) = *(_WORD *)(v30 + 8);
    v31 = sub_1C5D56C70(a6, 168, a3, (llvm *)v24, *((uint64_t *)&v24 + 1), (uint64_t)v21, v25, v29, v27, v28, v30);
    if (v39 >= 0x41 && v38)
      MEMORY[0x1CAA32F9C](v38, 0x1000C8000313F17);
  }
  else
  {
    v32 = v40;
    v39 = v12;
    if (v12 > 0x40)
      llvm::APInt::initSlowCase((llvm::APInt *)&v38, 0, 0);
    else
      v38 = 0;
    sub_1C4912E54(&v38, 0, a4);
    v33 = sub_1C63666FC(a6, (llvm::LLVMContext *)&v38, a3, v40, *((uint64_t *)&v40 + 1), 0, 0);
    v36 = *(_QWORD *)(a6 + 832);
    if (v36)
      LOWORD(v36) = *(_WORD *)(v36 + 8);
    v31 = sub_1C5D56C70(a6, 169, a3, (llvm *)v32, *((uint64_t *)&v32 + 1), a1, a2, v35, v33, v34, v36);
    if (v39 >= 0x41 && v38)
      MEMORY[0x1CAA32F9C](v38, 0x1000C8000313F17);
  }
  return v31;
}

uint64_t sub_1C5CE6350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t *a7, uint64_t a8, unsigned int a9)
{
  unsigned int v17;
  int v18;
  unsigned __int8 *v19;
  llvm::LLVMContext *v20;
  unsigned int v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  llvm::LLVMContext *v26;
  llvm::Type *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  unsigned int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t ExtendedIntegerVT;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t *v47;
  unsigned __int8 *v48;
  int v49;
  __int128 v50;

  v50 = *(_OWORD *)(*(_QWORD *)(a2 + 40) + 16 * a3);
  v17 = sub_1C6131328((unsigned __int8 *)&v50, a2, a3);
  v18 = *(unsigned __int16 *)(a1 + 24);
  v19 = *(unsigned __int8 **)(a1 + 64);
  v48 = v19;
  if (v19)
    llvm::MetadataTracking::track((uint64_t)&v48, v19, 2);
  v49 = *(_DWORD *)(a1 + 60);
  v20 = (llvm::LLVMContext *)(2 * v17);
  v46 = a4;
  v47 = a7;
  v21 = a6;
  if ((int)v20 > 63)
  {
    if ((_DWORD)v20 == 64)
    {
      v22 = 0;
      v23 = 0;
      v24 = 6;
      goto LABEL_12;
    }
    if ((_DWORD)v20 == 128)
    {
      v22 = 0;
      v23 = 0;
      v24 = 7;
      goto LABEL_12;
    }
  }
  else
  {
    switch((_DWORD)v20)
    {
      case 0x20:
        v22 = 0;
        v23 = 0;
        v24 = 5;
        goto LABEL_12;
      case 0x10:
        v22 = 0;
        v23 = 0;
        v24 = 4;
        goto LABEL_12;
      case 8:
        v22 = 0;
        v23 = 0;
        v24 = 3;
        goto LABEL_12;
    }
  }
  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a8 + 56), v20);
  v23 = v44;
  v22 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
  v24 = ExtendedIntegerVT;
LABEL_12:
  v25 = v24 | v22;
  v45 = v17;
  if ((_BYTE)v50)
  {
    if (v50 - 15 >= 0x9C)
      goto LABEL_17;
    goto LABEL_16;
  }
  if ((*(_DWORD *)(*((_QWORD *)&v50 + 1) + 8) & 0xFE) == 0x12)
  {
LABEL_16:
    v26 = *(llvm::LLVMContext **)(a8 + 56);
    v27 = (llvm::Type *)sub_1C52B71D4((unsigned __int8 *)&v50);
    v25 = sub_1C47AC578(v26, v25, v23, v27);
    v23 = v28;
  }
LABEL_17:
  if ((v18 | 2) == 0x5E)
  {
    v29 = sub_1C6366480(a8, a2, a3, (uint64_t)&v48, v25, v23);
    v31 = v30;
    v32 = sub_1C6366480(a8, v46, a5, (uint64_t)&v48, v25, v23);
  }
  else
  {
    v29 = sub_1C6366544(a8, a2, a3, (uint64_t)&v48, v25, v23);
    v31 = v34;
    v32 = sub_1C6366544(a8, v46, a5, (uint64_t)&v48, v25, v23);
  }
  v35 = sub_1C5DA21E8(v47, *(unsigned __int16 *)(a1 + 24), (const llvm::APInt *)&v48, v29, a3 & 0xFFFFFFFF00000000 | v31, v32, a5 & 0xFFFFFFFF00000000 | v33, v21, a8);
  v37 = v35;
  v38 = v36;
  if ((v18 & 0xFFFE) == 0x5E)
  {
    if (a9)
      v39 = a9;
    else
      v39 = v45;
    v37 = sub_1C5CE6080((uint64_t)v35, v36, (const llvm::APInt *)&v48, v39, (v18 & 0xFFFFFFFD) == 92, a8);
    v38 = v38 & 0xFFFFFFFF00000000 | v40;
  }
  v41 = sub_1C6366544(a8, (uint64_t)v37, v38, (uint64_t)&v48, v50, *((uint64_t *)&v50 + 1));
  if (v48)
    llvm::MetadataTracking::untrack((uint64_t)&v48, v48);
  return v41;
}

uint64_t *sub_1C5CE6618(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  __int128 v16;
  void *v17;
  uint64_t v18;
  _QWORD v19[33];

  v19[32] = *MEMORY[0x1E0C80C00];
  v16 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v4 = sub_1C612FE00((llvm::EVT *)&v16, (const char *)a2);
  v17 = v19;
  v18 = 0x1000000000;
  if (v4)
  {
    v5 = 0;
    v6 = 40 * v4;
    do
    {
      v7 = sub_1C633BA30(a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + v5), *(_QWORD *)(*(_QWORD *)(a2 + 32) + v5 + 8));
      v9 = v8;
      v10 = v18;
      if (v18 >= (unint64_t)HIDWORD(v18))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v17, (uint64_t)v19, v18 + 1, 16);
        v10 = v18;
      }
      v11 = (uint64_t *)((char *)v17 + 16 * v10);
      *v11 = v7;
      v11[1] = v9;
      v12 = (v18 + 1);
      LODWORD(v18) = v18 + 1;
      v5 += 40;
    }
    while (v6 != v5);
    v13 = (uint64_t *)v17;
  }
  else
  {
    v12 = 0;
    v13 = v19;
  }
  v14 = sub_1C636DEEC(*(_QWORD *)(a1 + 8), a2, v13, v12);
  if (v17 != v19)
    free(v17);
  return v14;
}

uint64_t *sub_1C5CE6764(uint64_t a1, uint64_t a2, BOOL a3)
{
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  llvm *v32;
  BOOL v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t EVT;
  const char *v41;
  unsigned __int8 v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  llvm *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t *v55;
  uint64_t v56;
  uint64_t v57;
  __int16 v58;
  uint64_t *v59;
  uint64_t *v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t **v63;
  uint64_t v64;
  uint64_t v65;
  llvm *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v71;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  unsigned __int8 *v78;
  int v79;
  void *v80[2];
  _QWORD v81[18];

  v81[16] = *MEMORY[0x1E0C80C00];
  v4 = *(unsigned __int8 **)(a2 + 64);
  v78 = v4;
  if (v4)
    llvm::MetadataTracking::track((uint64_t)&v78, v4, 2);
  v79 = *(_DWORD *)(a2 + 60);
  v5 = *(_QWORD *)(a2 + 40);
  v7 = *(void **)v5;
  v6 = *(_QWORD *)(v5 + 8);
  v8 = *(unsigned __int16 *)(a2 + 56);
  v9 = *(_QWORD *)v5;
  v71 = v8;
  if (v9)
  {
    if ((v9 - 120) >= 0x33)
    {
      v80[0] = v7;
      v80[1] = (void *)v6;
      v13 = sub_1C47F37A0((unsigned __int8 *)v80);
      v12 = 0;
      v75 = 0;
LABEL_14:
      v80[0] = v81;
      v80[1] = (void *)0x800000000;
      if (v8 < 9)
      {
        if (!(_DWORD)v8)
        {
          v29 = 0;
          v30 = v81;
LABEL_36:
          v64 = *(_QWORD *)(a1 + 8);
          v65 = *(_QWORD *)(a2 + 40);
          v66 = *(llvm **)v65;
          v67 = *(_QWORD *)(v65 + 8);
          v68 = *(_QWORD *)(v64 + 832);
          if (v68)
            v69 = *(unsigned __int16 *)(v68 + 8);
          else
            v69 = 0;
          v15 = sub_1C636D0C8(v64, (const char *)0x92, (const llvm::APInt *)&v78, v66, v67, v30, v29, v69);
          if (v80[0] != v81)
            free(v80[0]);
          goto LABEL_41;
        }
      }
      else
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v80, (uint64_t)v81, v8, 16);
      }
      v31 = 0;
      v32 = (llvm *)(v12 | v13);
      do
      {
        v74 = v31;
        v34 = sub_1C633BA30(a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40 * v31), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40 * v31 + 8));
        v36 = v35;
        v37 = *(uint64_t **)(v34 + 40);
        v39 = *v37;
        v38 = v37[1];
        *(_QWORD *)&v77 = v39;
        *((_QWORD *)&v77 + 1) = v38;
        if ((_BYTE)v39)
        {
          v42 = sub_1C47F37A0((unsigned __int8 *)&v77);
          v44 = 0;
          v43 = 0;
        }
        else
        {
          EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v38 + 24), 0, v33);
          v42 = EVT;
          v43 = (uint64_t)v41;
          v44 = EVT & 0xFFFFFFFFFFFFFF00;
        }
        v77 = *(_OWORD *)*(_QWORD *)(v34 + 40);
        v45 = sub_1C612FE00((llvm::EVT *)&v77, v41);
        if (v45)
        {
          v46 = 0;
          v47 = (llvm *)(v44 | v42);
          v48 = v45;
          do
          {
            v49 = *(_QWORD *)(a1 + 8);
            v50 = sub_1C6366C9C(v49, v46, (uint64_t)&v78, 0);
            v53 = *(_QWORD *)(v49 + 832);
            if (v53)
              LOWORD(v53) = *(_WORD *)(v53 + 8);
            v55 = sub_1C5D56C70(v49, 148, (const llvm::APInt *)&v78, v47, v43, v34, v36, v52, v50, v51, v53);
            v56 = *(_QWORD *)(a1 + 8);
            v57 = *(_QWORD *)(v56 + 832);
            if (v57)
              v58 = *(_WORD *)(v57 + 8);
            else
              v58 = 0;
            v59 = sub_1C5D52060(v56, 201, (const llvm::APInt *)&v78, v32, v75, (uint64_t)v55, v54, v58);
            v61 = v60;
            v62 = LODWORD(v80[1]);
            if (LODWORD(v80[1]) >= (unint64_t)HIDWORD(v80[1]))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v80, (uint64_t)v81, LODWORD(v80[1]) + 1, 16);
              v62 = LODWORD(v80[1]);
            }
            v63 = (uint64_t **)((char *)v80[0] + 16 * v62);
            *v63 = v59;
            v63[1] = v61;
            ++LODWORD(v80[1]);
            ++v46;
          }
          while (v48 != v46);
        }
        v31 = v74 + 1;
      }
      while (v74 + 1 != v71);
      v30 = (uint64_t *)v80[0];
      v29 = LODWORD(v80[1]);
      goto LABEL_36;
    }
  }
  else if (*(_BYTE *)(v6 + 8) != 19)
  {
    v10 = llvm::EVT::getEVT(*(llvm::EVT **)(v6 + 24), 0, a3);
    v75 = v11;
    v12 = v10 & 0xFFFFFFFFFFFFFF00;
    v13 = v10;
    goto LABEL_14;
  }
  v15 = sub_1C61312D0(*(_QWORD *)(a1 + 8), (llvm *)v7, v6);
  if ((_DWORD)v8)
  {
    v16 = 0;
    v17 = 0;
    v73 = v14 & 0xFFFFFFFF00000000;
    v76 = v6;
    v18 = v14;
    do
    {
      v19 = (uint64_t *)(*(_QWORD *)(a2 + 32) + v16);
      v21 = *v19;
      v20 = v19[1];
      *(_OWORD *)v80 = *(_OWORD *)(*(_QWORD *)(*v19 + 40) + 16 * v20);
      v22 = sub_1C52B71D4((unsigned __int8 *)v80);
      v23 = *(_QWORD *)(a1 + 8);
      v24 = sub_1C63662D4(v23, (v22 * v17), (const llvm::APInt *)&v78, 0);
      v27 = *(_QWORD *)(v23 + 832);
      if (v27)
        LOWORD(v27) = *(_WORD *)(v27 + 8);
      v15 = sub_1C5D58E08(v23, (const char *)0x96, (const llvm::APInt *)&v78, (llvm *)v7, v76, (uint64_t)v15, v18 | v73, v26, v21, v20, (uint64_t)v24, v25, SHIDWORD(v25), v27);
      v18 = v28;
      ++v17;
      v16 += 40;
    }
    while (v71 != v17);
  }
LABEL_41:
  if (v78)
    llvm::MetadataTracking::untrack((uint64_t)&v78, v78);
  return v15;
}

uint64_t *sub_1C5CE6B84(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = sub_1C633BA30(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  return sub_1C636DA9C(v3, a2, v4, v5);
}

uint64_t *sub_1C5CE6BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  int v5;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = sub_1C633BA90(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  return sub_1C636DA9C(v3, a2, (uint64_t)v4, v5);
}

uint64_t *sub_1C5CE6C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(uint64_t **)(a2 + 32);
  v5 = *v4;
  v6 = v4[1];
  v7 = sub_1C633BA90(a1, v4[5], v4[6]);
  return sub_1C636DCBC(v3, a2, v5, v6, (uint64_t)v7, v8);
}

uint64_t *sub_1C5CE6C64(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  int v5;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = sub_1C633BB94(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  return sub_1C636DA9C(v3, a2, (uint64_t)v4, v5);
}

uint64_t *sub_1C5CE6CA8(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  int v8;

  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(uint64_t **)(a2 + 32);
  v5 = *v4;
  v6 = v4[1];
  v7 = sub_1C633BB94(a1, v4[5], v4[6]);
  return sub_1C636DCBC(v3, a2, v5, v6, (uint64_t)v7, v8);
}

uint64_t *sub_1C5CE6D00(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  int v5;

  v4 = sub_1C633BB94(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8));
  return sub_1C636DA9C(*(_QWORD *)(a1 + 8), a2, (uint64_t)v4, v5);
}

uint64_t *sub_1C5CE6D44(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  int v5;

  v4 = sub_1C633BB94(a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48));
  return sub_1C636DCBC(*(_QWORD *)(a1 + 8), a2, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), (uint64_t)v4, v5);
}

void *sub_1C5CE6D90(uint64_t *a1, uint64_t *a2, uint64_t *a3, int a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BOOL8 v10;
  _BOOL8 v11;
  uint64_t v12;
  _BOOL8 v13;
  _BOOL8 v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  BOOL v25;
  int v26;
  void *result;
  int v28;
  unsigned int v29;
  uint64_t v30;
  BOOL v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  uint64_t v36;
  BOOL v37;
  int v38;
  int v39;
  uint64_t v40;
  unsigned int v41;
  uint64_t v42;
  unsigned int v43;

  v7 = *a2;
  v8 = a2[1];
  if ((a4 - 18) <= 3)
  {
LABEL_23:
    *a2 = (uint64_t)sub_1C633BA90((uint64_t)a1, v7, v8);
    *((_DWORD *)a2 + 2) = v38;
    result = sub_1C633BA90((uint64_t)a1, *a3, a3[1]);
    goto LABEL_24;
  }
  v9 = sub_1C633BA30((uint64_t)a1, v7, v8);
  v11 = v10;
  v12 = sub_1C633BA30((uint64_t)a1, *a3, a3[1]);
  v14 = v13;
  v15 = (uint64_t *)(*(_QWORD *)(*a2 + 40) + 16 * *((unsigned int *)a2 + 2));
  v16 = *v15;
  v17 = v15[1];
  v18 = (_QWORD *)(*(_QWORD *)(v9 + 40) + 16 * v11);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD))(*(_QWORD *)*a1 + 1208))(*a1, v16, v17, *v18, v18[1]))
  {
    sub_1C6368768(a1[1], v9, v11, 0, (uint64_t)&v40);
    v19 = v41;
    if (v41 > 0x40)
    {
      v39 = llvm::APInt::countLeadingOnesSlowCase((llvm::APInt *)&v40);
    }
    else if (v41)
    {
      v39 = __clz(~(v40 << -(char)v41));
    }
    else
    {
      v39 = 0;
    }
    if (v43 >= 0x41)
    {
      v29 = v19;
      if (v42)
      {
        MEMORY[0x1CAA32F9C](v42, 0x1000C8000313F17);
        v29 = v41;
      }
    }
    else
    {
      v29 = v19;
    }
    if (v29 >= 0x41 && v40)
      MEMORY[0x1CAA32F9C](v40, 0x1000C8000313F17);
    sub_1C6368768(a1[1], v12, v14, 0, (uint64_t)&v40);
    v32 = v41;
    if (v41 > 0x40)
    {
      v33 = llvm::APInt::countLeadingOnesSlowCase((llvm::APInt *)&v40);
    }
    else if (v41)
    {
      v33 = __clz(~(v40 << -(char)v41));
    }
    else
    {
      v33 = 0;
    }
    if (v43 >= 0x41)
    {
      v34 = v32;
      if (v42)
      {
        MEMORY[0x1CAA32F9C](v42, 0x1000C8000313F17);
        v34 = v41;
      }
    }
    else
    {
      v34 = v32;
    }
    v35 = v19 - v39;
    if (v34 >= 0x41 && v40)
      MEMORY[0x1CAA32F9C](v40, 0x1000C8000313F17);
    if ((unint64_t)sub_1C6329368((unsigned int *)a2, v30, v31) >= v35)
    {
      result = sub_1C6329368((unsigned int *)a3, v36, v37);
      if ((unint64_t)result >= v32 - v33)
        goto LABEL_26;
    }
    v7 = *a2;
    v8 = a2[1];
    goto LABEL_23;
  }
  v20 = sub_1C6368C2C(a1[1], v9, v11, 0);
  v21 = sub_1C6368C2C(a1[1], v12, v14, 0);
  if ((unint64_t)sub_1C6329368((unsigned int *)a2, v22, v23) >= v20)
  {
    result = sub_1C6329368((unsigned int *)a3, v24, v25);
    if ((unint64_t)result >= v21)
    {
LABEL_26:
      *a2 = v9;
      *((_DWORD *)a2 + 2) = v11;
      goto LABEL_27;
    }
  }
  *a2 = (uint64_t)sub_1C633BB94((uint64_t)a1, *a2, a2[1]);
  *((_DWORD *)a2 + 2) = v26;
  result = sub_1C633BB94((uint64_t)a1, *a3, a3[1]);
LABEL_24:
  v12 = (uint64_t)result;
  LODWORD(v14) = v28;
LABEL_27:
  *a3 = v12;
  *((_DWORD *)a3 + 2) = v14;
  return result;
}

void sub_1C5CE7094(unint64_t *a1, uint64_t a2, __n128 *a3, uint64_t a4)
{
  uint64_t v8;
  llvm *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  uint64_t v16;
  __int16 v17;
  __int128 v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  unsigned __int32 v25;
  unint64_t v26;
  const char *v27;
  unsigned int v28;
  llvm *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unsigned __int8 v35;
  _QWORD *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int v41;
  __n128 v42;
  llvm *v43;
  llvm *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t *v59;
  __n128 v60;
  __n128 v61;
  unsigned __int8 *v62;
  llvm **v63;
  uint64_t v64;
  uint64_t v65;
  unsigned __int32 v66;
  uint64_t ExtendedSizeInBits;
  int v68;
  _QWORD *v69;
  int v70;
  const char *v71;
  int v72;
  uint64_t v73;
  const char *v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  const char *v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  uint64_t v83;
  unsigned int v84;
  const char *v85;
  uint64_t v86;
  llvm::LLVMContext *v87;
  unint64_t v88;
  uint64_t v89;
  unsigned int v90;
  int v91;
  llvm::LLVMContext *v92;
  uint64_t v93;
  unint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  const char *v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t *v102;
  unsigned int v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t v106;
  llvm *v107;
  uint64_t v108;
  _QWORD *v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int v114;
  int v115;
  uint64_t *v116;
  unsigned int v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  unsigned __int32 v126;
  uint64_t v127;
  uint64_t v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  uint64_t v132;
  const char *v133;
  unint64_t v134;
  llvm::LLVMContext *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  unsigned __int8 v139;
  _QWORD *v140;
  unint64_t v141;
  uint64_t v142;
  __int16 v143;
  uint64_t v144;
  uint64_t *v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  unsigned __int32 v149;
  uint64_t v150;
  int v151;
  llvm *v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  const char *v156;
  uint64_t v157;
  llvm::LLVMContext *v158;
  uint64_t v159;
  unsigned __int8 v160;
  _QWORD *v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t ExtendedIntegerVT;
  llvm::LLVMContext *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  llvm::EVT *v172;
  uint64_t v173;
  llvm *v174;
  unint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  llvm::LLVMContext *v179;
  llvm::LLVMContext *v180;
  uint64_t v181;
  unint64_t v182;
  unint64_t v183;
  unint64_t v184;
  int v185;
  unint64_t v186;
  uint64_t v187;
  __int16 v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  llvm *v192;
  llvm *v193;
  unsigned int v194;
  __int128 v195;
  __int128 v196;
  uint64_t v197;
  __int128 v198;
  __int128 v199;
  uint64_t v200;
  __int128 v201;
  uint64_t v202;
  __int128 v203;
  unsigned __int8 *v204;
  int v205;
  llvm *v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  _QWORD *v210;
  int v211;
  _QWORD *v212;
  int v213;
  uint64_t v214;

  v214 = *MEMORY[0x1E0C80C00];
  if ((*(_WORD *)(*(_QWORD *)(a2 + 96) + 36) & 0xF00) == 0)
  {
    if (*(_WORD *)(a2 + 24) == 253 && (*(_WORD *)(a2 + 26) & 0xF80) == 0)
    {
      sub_1C6348C44((uint64_t)a1, a2, a3, a4);
      return;
    }
    llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (uint64_t)&v208);
    v9 = (llvm *)*((_QWORD *)&v208 + 1);
    v10 = v209;
    v206 = (llvm *)*((_QWORD *)&v208 + 1);
    v207 = v209;
    v11 = *(uint64_t **)(a2 + 32);
    v13 = *v11;
    v12 = v11[1];
    v14 = v11[6];
    v191 = v11[5];
    v15 = (*(unsigned __int16 *)(a2 + 26) >> 10) & 3;
    v16 = *(_QWORD *)(a2 + 96);
    v17 = *(_WORD *)(v16 + 32);
    v18 = *(_OWORD *)(v16 + 56);
    v208 = *(_OWORD *)(v16 + 40);
    v209 = v18;
    v19 = *(unsigned __int8 **)(a2 + 64);
    v204 = v19;
    if (v19)
    {
      llvm::MetadataTracking::track((uint64_t)&v204, v19, 2);
      v9 = v206;
      v10 = v207;
    }
    v205 = *(_DWORD *)(a2 + 60);
    v20 = *(_QWORD *)(a2 + 80);
    v21 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)&v203 = v20;
    *((_QWORD *)&v203 + 1) = v21;
    if (v20 == v9 && ((_BYTE)v20 || v21 == v10))
    {
LABEL_12:
      v22 = a1[1];
      v23 = *(_QWORD *)(a2 + 96);
      v201 = *(_OWORD *)v23;
      v202 = *(_QWORD *)(v23 + 16);
      v24 = sub_1C636B4C8(v22, v15, (uint64_t)&v204, (uint64_t)v9, v10, v13, v12, v8, v191, v14, &v201, v20, v21, *(unsigned __int8 *)(v23 + 34) | 0x100u, (*(unsigned __int8 *)(v23 + 34) | 0x100uLL) >> 32, v17, (uint64_t)&v208);
      a3->n128_u64[0] = (unint64_t)v24;
      a3->n128_u32[2] = v25;
      v26 = v12 & 0xFFFFFFFF00000000 | 1;
      if (v15 == 3)
      {
        v69 = sub_1C6366AB4(a1[1], 0, (const llvm::APInt *)&v204, v206, v207, 0, 0);
      }
      else
      {
        if (v15 == 2)
        {
          v186 = v26;
          v28 = sub_1C6131A64((unsigned int *)a3);
          if ((_DWORD)v27 == 1)
          v29 = v206;
          v30 = v207;
          v32 = a3->n128_u64[0];
          v31 = a3->n128_u64[1];
          v33 = v28 - 1;
          v34 = a1[1];
          v35 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(v34 + 40) + 40) + 272, 0);
          v36 = sub_1C6366AB4(v34, v33, (const llvm::APInt *)&v204, (llvm *)v35, 0, 0, 0);
          v39 = *(_QWORD *)(v34 + 832);
          if (v39)
            LOWORD(v39) = *(_WORD *)(v39 + 8);
          v40 = sub_1C5D56C70(v34, 176, (const llvm::APInt *)&v204, v29, v30, v32, v31, v38, (uint64_t)v36, v37, v39);
LABEL_19:
          *(_QWORD *)a4 = v40;
          *(_DWORD *)(a4 + 8) = v41;
          v26 = v186;
LABEL_92:
          sub_1C5CED824((uint64_t)a1, a2, 1, (uint64_t)v24, v26, v42);
          v62 = v204;
          if (!v204)
            return;
          v63 = (llvm **)&v204;
          goto LABEL_94;
        }
        v69 = sub_1C61312D0(a1[1], v206, v207);
      }
      *(_QWORD *)a4 = v69;
      *(_DWORD *)(a4 + 8) = v70;
      goto LABEL_92;
    }
    if (sub_1C632979C((unsigned __int8 *)&v203, (uint64_t)v9, v10))
    {
      v20 = *(_QWORD *)(a2 + 80);
      v21 = *(_QWORD *)(a2 + 88);
      v9 = v206;
      v10 = v207;
      goto LABEL_12;
    }
    v64 = a1[1];
    v185 = v15;
    v188 = v17;
    if (!*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v64 + 40) + 40) + 272))
    {
      v65 = *(_QWORD *)(a2 + 96);
      v199 = *(_OWORD *)v65;
      v200 = *(_QWORD *)(v65 + 16);
      v181 = v13;
      a3->n128_u64[0] = (unint64_t)sub_1C63681B0(v64, (uint64_t)v206, v207, (uint64_t)&v204, v13, v12, v191, v14, &v199, *(unsigned __int8 *)(v65 + 34) | 0x100u, (*(unsigned __int8 *)(v65 + 34) | 0x100uLL) >> 32, v17, (uint64_t)&v208, 0);
      a3->n128_u32[2] = v66;
      v203 = *(_OWORD *)(a2 + 80);
      if ((_BYTE)v203)
        ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v203);
      else
        ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v203);
      v75 = ExtendedSizeInBits;
      v76 = v68;
      if ((_BYTE)v206)
        v77 = sub_1C47A8C74((unsigned __int8 *)&v206);
      else
        v77 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v206);
      v87 = (llvm::LLVMContext *)(v75 - v77);
      if (v76 == 1)
      v187 = v12;
      if ((int)v87 <= 31)
      {
        switch((_DWORD)v87)
        {
          case 1:
            v88 = 0;
            v179 = 0;
            v89 = 2;
            goto LABEL_69;
          case 0x10:
            v88 = 0;
            v179 = 0;
            v89 = 4;
            goto LABEL_69;
          case 8:
            v88 = 0;
            v179 = 0;
            v89 = 3;
            goto LABEL_69;
        }
      }
      else
      {
        switch((_DWORD)v87)
        {
          case 0x20:
            v88 = 0;
            v179 = 0;
            v89 = 5;
LABEL_69:
            if ((_BYTE)v206)
              v98 = sub_1C47A8C74((unsigned __int8 *)&v206);
            else
              v98 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v206);
            v100 = v98;
            v177 = v89 | v88;
            if ((_DWORD)v99 == 1)
            v101 = (v100 >> 3);
            v102 = sub_1C6369954(a1[1], v191, v14, v101, 0, (const llvm::APInt *)&v204, 0);
            v104 = v14 & 0xFFFFFFFF00000000 | v103;
            v105 = a1[1];
            v107 = v206;
            v106 = v207;
            sub_1C4824250(*(uint64_t **)(a2 + 96), v101, (uint64_t)&v198);
            v169 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 96) + 34) | 0x100;
            v109 = sub_1C636B4C8(v105, v185, (uint64_t)&v204, (uint64_t)v107, v106, v181, v187, v108, (uint64_t)v102, v104, &v198, v177, (uint64_t)v179, v169, SHIDWORD(v169), v188, (uint64_t)&v208);
            *(_QWORD *)a4 = v109;
            *(_DWORD *)(a4 + 8) = v111;
            v112 = a1[1];
            v113 = *(_QWORD *)(v112 + 832);
            if (v113)
              LOWORD(v113) = *(_WORD *)(v113 + 8);
            v24 = sub_1C5D56C70(v112, 2, (const llvm::APInt *)&v204, (llvm *)1, 0, a3->n128_u64[0], 1uLL, v110, (uint64_t)v109, 1uLL, v113);
            v26 = v187 & 0xFFFFFFFF00000000 | v114;
            goto LABEL_92;
          case 0x40:
            v88 = 0;
            v179 = 0;
            v89 = 6;
            goto LABEL_69;
          case 0x80:
            v88 = 0;
            v179 = 0;
            v89 = 7;
            goto LABEL_69;
        }
      }
      ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a1[1] + 56), v87);
      v179 = v167;
      v88 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
      v89 = ExtendedIntegerVT;
      goto LABEL_69;
    }
    v203 = *(_OWORD *)(a2 + 80);
    v72 = sub_1C47C1C70((unsigned __int8 *)&v203);
    if ((_DWORD)v71 == 1)
    if ((_BYTE)v206)
      v73 = sub_1C47A8C74((unsigned __int8 *)&v206);
    else
      v73 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v206);
    v79 = v73;
    v182 = v14;
    if ((_DWORD)v74 == 1)
    v80 = v13;
    v176 = v79;
    v81 = v72 - (v79 >> 3);
    v82 = a1[1];
    v173 = v207;
    v174 = v206;
    v83 = *(_QWORD *)(a2 + 96);
    v196 = *(_OWORD *)v83;
    v197 = *(_QWORD *)(v83 + 16);
    v172 = *(llvm::EVT **)(v82 + 56);
    if ((_BYTE)v203)
      v84 = sub_1C47A8C74((unsigned __int8 *)&v203);
    else
      v84 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v203);
    v90 = v84;
    v91 = 8 * v81;
    v180 = (llvm::LLVMContext *)(8 * v81);
    if ((_DWORD)v85 == 1)
    {
      v91 = 8 * v81;
    }
    v92 = (llvm::LLVMContext *)(v90 - v91);
    if ((int)v92 <= 31)
    {
      v93 = v80;
      if ((_DWORD)v92 == 1)
      {
        v94 = 0;
        v95 = 0;
        v96 = 2;
        goto LABEL_58;
      }
      v97 = v182;
      if ((_DWORD)v92 == 16)
      {
        v94 = 0;
        v95 = 0;
        v96 = 4;
        goto LABEL_79;
      }
      if ((_DWORD)v92 == 8)
      {
        v94 = 0;
        v95 = 0;
        v96 = 3;
        goto LABEL_79;
      }
    }
    else
    {
      v93 = v80;
      if ((_DWORD)v92 == 32)
      {
        v94 = 0;
        v95 = 0;
        v96 = 5;
LABEL_58:
        v97 = v182;
        goto LABEL_79;
      }
      v97 = v182;
      if ((_DWORD)v92 == 64)
      {
        v94 = 0;
        v95 = 0;
        v96 = 6;
        goto LABEL_79;
      }
      if ((_DWORD)v92 == 128)
      {
        v94 = 0;
        v95 = 0;
        v96 = 7;
        goto LABEL_79;
      }
    }
    v168 = llvm::EVT::getExtendedIntegerVT(v172, v92);
    v94 = v168 & 0xFFFFFFFFFFFFFF00;
    v96 = v168;
LABEL_79:
    v170 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 96) + 34) | 0x100;
    *(_QWORD *)a4 = sub_1C636B4C8(v82, v15, (uint64_t)&v204, (uint64_t)v174, v173, v93, v12, v86, v191, v97, &v196, v96 | v94, v95, v170, SHIDWORD(v170), v188, (uint64_t)&v208);
    *(_DWORD *)(a4 + 8) = v115;
    v116 = sub_1C6369954(a1[1], v191, v97, (v176 >> 3), 0, (const llvm::APInt *)&v204, 0);
    v183 = v97 & 0xFFFFFFFF00000000 | v117;
    v118 = a1[1];
    v119 = v207;
    v192 = v206;
    sub_1C4824250(*(uint64_t **)(a2 + 96), (v176 >> 3), (uint64_t)&v195);
    if ((int)v180 > 63)
    {
      if ((_DWORD)v180 == 64)
      {
        v121 = 0;
        v122 = 0;
        v123 = 6;
        goto LABEL_84;
      }
      if ((_DWORD)v180 == 128)
      {
        v121 = 0;
        v122 = 0;
        v123 = 7;
        goto LABEL_84;
      }
    }
    else
    {
      switch((_DWORD)v180)
      {
        case 0x20:
          v121 = 0;
          v122 = 0;
          v123 = 5;
LABEL_84:
          v171 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 96) + 34) | 0x100;
          v124 = sub_1C636B4C8(v118, 3, (uint64_t)&v204, (uint64_t)v192, v119, v93, v12, v120, (uint64_t)v116, v183, &v195, v123 | v121, v122, v171, SHIDWORD(v171), v188, (uint64_t)&v208);
          a3->n128_u64[0] = (unint64_t)v124;
          a3->n128_u32[2] = v126;
          v127 = a1[1];
          v128 = *(_QWORD *)(v127 + 832);
          v129 = v15;
          if (v128)
            LOWORD(v128) = *(_WORD *)(v128 + 8);
          v24 = sub_1C5D56C70(v127, 2, (const llvm::APInt *)&v204, (llvm *)1, 0, (uint64_t)v124, 1uLL, v125, *(_QWORD *)a4, 1uLL, v128);
          v131 = v130;
          if ((_BYTE)v206)
            v132 = sub_1C47A8C74((unsigned __int8 *)&v206);
          else
            v132 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v206);
          v134 = v132;
          v135 = v180;
          if ((_DWORD)v133 == 1)
          {
            v135 = v180;
          }
          v26 = v12 & 0xFFFFFFFF00000000 | v131;
          if (v134 <= (unint64_t)v135)
            goto LABEL_92;
          v136 = v207;
          v189 = a3->n128_u64[0];
          v193 = v206;
          v184 = a3->n128_u64[1];
          v175 = *(_QWORD *)(a4 + 8);
          v178 = *(_QWORD *)a4;
          v137 = a1[1];
          v138 = (uint64_t)v135;
          v139 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(v137 + 40) + 40) + 272, 0);
          v140 = sub_1C6366AB4(v137, v138, (const llvm::APInt *)&v204, (llvm *)v139, 0, 0, 0);
          v143 = 0;
          v144 = *(_QWORD *)(v137 + 832);
          if (v144)
            v143 = *(_WORD *)(v144 + 8);
          v145 = sub_1C5D56C70(v137, 175, (const llvm::APInt *)&v204, v193, v136, v178, v175, v142, (uint64_t)v140, v141, v143);
          v148 = *(_QWORD *)(v137 + 832);
          v186 = v26;
          if (v148)
            LOWORD(v148) = *(_WORD *)(v148 + 8);
          a3->n128_u64[0] = (unint64_t)sub_1C5D56C70(v137, 172, (const llvm::APInt *)&v204, v193, v136, v189, v184, v147, (uint64_t)v145, v146, v148);
          a3->n128_u32[2] = v149;
          v150 = a1[1];
          if (v129 == 2)
            v151 = 176;
          else
            v151 = 177;
          v194 = v151;
          v152 = v206;
          v190 = v207;
          v154 = *(_QWORD *)a4;
          v153 = *(_QWORD *)(a4 + 8);
          if ((_BYTE)v206)
            v155 = sub_1C47A8C74((unsigned __int8 *)&v206);
          else
            v155 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v206);
          v157 = v155;
          v158 = v180;
          if ((_DWORD)v156 == 1)
          {
            v158 = v180;
          }
          v159 = v157 - (_QWORD)v158;
          v160 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, 0);
          v161 = sub_1C6366AB4(v150, v159, (const llvm::APInt *)&v204, (llvm *)v160, 0, 0, 0);
          v164 = *(_QWORD *)(v150 + 832);
          if (v164)
            LOWORD(v164) = *(_WORD *)(v164 + 8);
          v40 = sub_1C5D56C70(v150, v194, (const llvm::APInt *)&v204, v152, v190, v154, v153, v163, (uint64_t)v161, v162, v164);
          goto LABEL_19;
        case 0x10:
          v121 = 0;
          v122 = 0;
          v123 = 4;
          goto LABEL_84;
        case 8:
          v121 = 0;
          v122 = 0;
          v123 = 3;
          goto LABEL_84;
      }
    }
    v165 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a1[1] + 56), v180);
    v121 = v165 & 0xFFFFFFFFFFFFFF00;
    v123 = v165;
    goto LABEL_84;
  }
  v43 = *(llvm **)(a2 + 64);
  v206 = v43;
  if (v43)
    llvm::MetadataTracking::track((uint64_t)&v206, (unsigned __int8 *)v43, 2);
  LODWORD(v207) = *(_DWORD *)(a2 + 60);
  v44 = *(llvm **)(a2 + 80);
  v45 = *(_QWORD *)(a2 + 88);
  v46 = sub_1C636B134(a1[1], (uint64_t)v44, v45, 2, 0, 1, 0);
  v48 = v47;
  v49 = sub_1C6366AB4(a1[1], 0, (const llvm::APInt *)&v206, v44, v45, 0, 0);
  v50 = a1[1];
  v51 = *(uint64_t **)(a2 + 32);
  v52 = *v51;
  v53 = v51[1];
  v55 = v51[5];
  v54 = v51[6];
  v56 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)&v208 = v52;
  DWORD2(v208) = v53;
  *(_QWORD *)&v209 = v55;
  DWORD2(v209) = v54;
  v210 = v49;
  v211 = v57;
  v212 = v49;
  v213 = v57;
  v59 = sub_1C636A43C(v50, 293, (uint64_t)&v206, (uint64_t)v44, v45, v46, v48, v58, (uint64_t *)&v208, 4, v56);
  sub_1C5CED824((uint64_t)a1, a2, 0, (uint64_t)v59, 0, v60);
  sub_1C5CED824((uint64_t)a1, a2, 1, (uint64_t)v59, 2uLL, v61);
  v62 = (unsigned __int8 *)v206;
  if (v206)
  {
    v63 = &v206;
LABEL_94:
    llvm::MetadataTracking::untrack((uint64_t)v63, v62);
  }
}

void sub_1C5CE7D3C(uint64_t a1, unsigned __int8 **a2, uint64_t a3)
{
  int v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;
  BOOL v11;
  int v12;
  unsigned int OUTLINE_ATOMIC;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  int SYNC;
  unsigned int v20;
  __int128 v21;
  unsigned int v22;
  uint64_t v23;
  unsigned __int8 *v24;
  void *v25;
  unint64_t v26;
  unsigned __int8 *v27;
  __int128 v28;
  unsigned __int8 *v30;
  int v31;
  _QWORD v32[2];
  char v33;
  uint64_t v34;
  char v35;
  void *v36;
  uint64_t v37;
  _QWORD v38[10];

  v38[8] = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int16 *)(a3 + 24);
  v6 = *(_BYTE *)(a3 + 80);
  v7 = *(unsigned __int16 *)(*(_QWORD *)(a3 + 96) + 36);
  v8 = (v7 >> 8) & 0xF;
  v9 = v7 >> 12;
  v10 = (_DWORD)v9 == 5 && (_DWORD)v8 == 4;
  if (v10 || ((_DWORD)v9 == 4 ? (v11 = (_DWORD)v8 == 5) : (v11 = 0), v11))
  {
    v12 = 6;
  }
  else if (byte_1C65ED518[8 * v8 + v9])
  {
    v12 = v8;
  }
  else
  {
    v12 = v9;
  }
  OUTLINE_ATOMIC = llvm::RTLIB::getOUTLINE_ATOMIC(*(unsigned __int16 *)(a3 + 24), v12, *(_BYTE *)(a3 + 80));
  v15 = *(_QWORD *)(a3 + 32);
  v14 = *(uint64_t **)(a3 + 40);
  v17 = *v14;
  v16 = v14[1];
  v36 = v38;
  v37 = 0x400000000;
  v18 = (char *)(v15 + 40 * *(unsigned __int16 *)(a3 + 56));
  if (*(_QWORD *)&(*a2)[8 * OUTLINE_ATOMIC + 174048])
  {
    SYNC = OUTLINE_ATOMIC;
    sub_1C6132D88((unsigned int *)&v36, (char *)(v15 + 80), (char *)(v15 + 40 * *(unsigned __int16 *)(a3 + 56)));
    v21 = *(_OWORD *)(*(_QWORD *)(a3 + 32) + 40);
    v22 = v37;
    if (v37 >= HIDWORD(v37))
    {
      v28 = *(_OWORD *)(*(_QWORD *)(a3 + 32) + 40);
      llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v36, (uint64_t)v38, v37 + 1, 16);
      v21 = v28;
      v22 = v37;
    }
    *((_OWORD *)v36 + v22) = v21;
    v20 = v37 + 1;
    LODWORD(v37) = v37 + 1;
  }
  else
  {
    SYNC = llvm::RTLIB::getSYNC(v5, v6);
    sub_1C6132D88((unsigned int *)&v36, (char *)(v15 + 40), v18);
    v20 = v37;
  }
  v24 = *a2;
  v23 = (uint64_t)a2[1];
  v25 = v36;
  v26 = v20;
  v32[0] = 0;
  v32[1] = 0;
  v33 = 0;
  v34 = 0;
  v35 = 4;
  v27 = *(unsigned __int8 **)(a3 + 64);
  v30 = v27;
  if (v27)
    llvm::MetadataTracking::track((uint64_t)&v30, v27, 2);
  v31 = *(_DWORD *)(a3 + 60);
  sub_1C5D7B380(v24, v23, SYNC, v17, v16, (uint64_t)v25, v26, (uint64_t)v32, a1, (uint64_t)&v30, **(_QWORD **)(a3 + 32), *(_QWORD *)(*(_QWORD *)(a3 + 32) + 8));
  if (v30)
    llvm::MetadataTracking::untrack((uint64_t)&v30, v30);
  if (v36 != v38)
    free(v36);
}

uint64_t *sub_1C5CE7F78(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  llvm *v11;
  int v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int16 v24;
  int v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int16 v32;
  int v33;
  unint64_t v34;
  BOOL v35;
  int v36;
  uint64_t v37;
  int v38;
  int v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int16 v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  llvm *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  int v86;
  _QWORD *v87;
  uint64_t v88;
  llvm *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unsigned int v105;
  uint64_t v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  llvm *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int16 v125;
  uint64_t v126;
  uint64_t *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *result;
  int v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  int v141;
  int v142;
  uint64_t v143;
  uint64_t v144;
  __int16 v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  uint64_t *v152;
  uint64_t v153;
  unint64_t v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  uint64_t v159;
  uint64_t *v160;
  int v161;
  uint64_t v162;
  uint64_t v163;
  __int16 v164;
  uint64_t *v165;
  int v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t *v169;
  int v170;
  uint64_t v171;
  uint64_t *v172;
  int v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unsigned int v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unsigned int v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t *v188;
  llvm *v189;
  int v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  int v194;
  uint64_t v195;
  int v196;
  uint64_t v197;
  int v198;
  uint64_t v199;
  unsigned int v200;
  unsigned __int8 *v201;
  int v202;
  uint64_t v203;
  int v204;
  uint64_t v205;
  int v206;
  uint64_t *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;

  v213 = *MEMORY[0x1E0C80C00];
  v8 = *(unsigned __int8 **)(a2 + 64);
  v201 = v8;
  if (v8)
    llvm::MetadataTracking::track((uint64_t)&v201, v8, 2);
  v202 = *(_DWORD *)(a2 + 60);
  v199 = 0;
  v200 = 0;
  v197 = 0;
  v198 = 0;
  v195 = 0;
  v196 = 0;
  v193 = 0;
  v194 = 0;
  sub_1C6347954((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), (uint64_t)&v199, (uint64_t)&v197);
  sub_1C6347954((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), (uint64_t)&v195, (uint64_t)&v193);
  v9 = *(_QWORD *)(v199 + 40) + 16 * v200;
  v11 = *(llvm **)v9;
  v10 = *(_QWORD *)(v9 + 8);
  v209 = v199;
  LODWORD(v210) = v200;
  v211 = v195;
  LODWORD(v212) = v196;
  v203 = v197;
  v204 = v198;
  v205 = v193;
  v206 = v194;
  v207 = 0;
  v208 = 0;
  v12 = *(unsigned __int16 *)(a2 + 24);
  v13 = *a1;
  v14 = sub_1C634633C(*a1, *(llvm::EVT **)(a1[1] + 56), (_BOOL8)v11, v10);
  if (v14 && (v14 || *(_QWORD *)(v13 + 8 * v14 + 96)))
  {
    v15 = 72;
    if (v12 != 56)
      v15 = 73;
    if ((*(_BYTE *)(v13 + 390 * v14 + v15 + 3862) & 0xFB) == 0)
    {
      v16 = a1[1];
      v17 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, llvm *, uint64_t))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(v16 + 40) + 40) + 272, *(_QWORD *)(v16 + 56), v11, v10);
      v20 = sub_1C636A8B4(v16, (uint64_t)v11, v10, v17, v18);
      v21 = v19;
      v22 = a1[1];
      v23 = *(_QWORD *)(v22 + 832);
      if (*(_WORD *)(a2 + 24) == 56)
      {
        if (v23)
          v24 = *(_WORD *)(v23 + 8);
        else
          v24 = 0;
        v160 = sub_1C636D410(v22, (const char *)0x4D, (const llvm::APInt *)&v201, v20, v19, &v209, 2, v24);
        *(_QWORD *)a3 = v160;
        *(_DWORD *)(a3 + 8) = v161;
        v207 = v160;
        LODWORD(v208) = 1;
        v162 = a1[1];
        v163 = *(_QWORD *)(v162 + 832);
        if (v163)
          v164 = *(_WORD *)(v163 + 8);
        else
          v164 = 0;
        v168 = 72;
      }
      else
      {
        if (v23)
          v56 = *(_WORD *)(v23 + 8);
        else
          v56 = 0;
        v165 = sub_1C636D410(v22, (const char *)0x4F, (const llvm::APInt *)&v201, v20, v19, &v209, 2, v56);
        *(_QWORD *)a3 = v165;
        *(_DWORD *)(a3 + 8) = v166;
        v207 = v165;
        LODWORD(v208) = 1;
        v162 = a1[1];
        v167 = *(_QWORD *)(v162 + 832);
        if (v167)
          v164 = *(_WORD *)(v167 + 8);
        else
          v164 = 0;
        v168 = 73;
      }
LABEL_102:
      result = sub_1C636D410(v162, (const char *)v168, (const llvm::APInt *)&v201, v20, v21, &v203, 3, v164);
      goto LABEL_103;
    }
  }
  v25 = *(unsigned __int16 *)(a2 + 24);
  v26 = *a1;
  v27 = sub_1C634633C(*a1, *(llvm::EVT **)(a1[1] + 56), (_BOOL8)v11, v10);
  if (v27 && (v27 || *(_QWORD *)(v26 + 8 * v27 + 96)))
  {
    v28 = 68;
    if (v25 != 56)
      v28 = 69;
    if ((*(_BYTE *)(v26 + 390 * v27 + v28 + 3862) & 0xFB) == 0)
    {
      v20 = sub_1C636A8B4(a1[1], (uint64_t)v11, v10, 172, 0);
      v21 = v29;
      v30 = a1[1];
      v31 = *(_QWORD *)(v30 + 832);
      if (*(_WORD *)(a2 + 24) == 56)
      {
        if (v31)
          v32 = *(_WORD *)(v31 + 8);
        else
          v32 = 0;
        v169 = sub_1C636D410(v30, (const char *)0x44, (const llvm::APInt *)&v201, v20, v29, &v209, 2, v32);
        *(_QWORD *)a3 = v169;
        *(_DWORD *)(a3 + 8) = v170;
        v207 = v169;
        LODWORD(v208) = 1;
        v162 = a1[1];
        v171 = *(_QWORD *)(v162 + 832);
        if (v171)
          v164 = *(_WORD *)(v171 + 8);
        else
          v164 = 0;
        v168 = 70;
      }
      else
      {
        if (v31)
          v145 = *(_WORD *)(v31 + 8);
        else
          v145 = 0;
        v172 = sub_1C636D410(v30, (const char *)0x45, (const llvm::APInt *)&v201, v20, v29, &v209, 2, v145);
        *(_QWORD *)a3 = v172;
        *(_DWORD *)(a3 + 8) = v173;
        v207 = v172;
        LODWORD(v208) = 1;
        v162 = a1[1];
        v174 = *(_QWORD *)(v162 + 832);
        if (v174)
          v164 = *(_WORD *)(v174 + 8);
        else
          v164 = 0;
        v168 = 71;
      }
      goto LABEL_102;
    }
  }
  v33 = *(unsigned __int16 *)(a2 + 24);
  v34 = *a1;
  v35 = sub_1C634633C(*a1, *(llvm::EVT **)(a1[1] + 56), (_BOOL8)v11, v10);
  if (!v35 || !v35 && !*(_QWORD *)(v34 + 8 * v35 + 96))
  {
    v36 = sub_1C6329468((unsigned int *)*a1, (char)v11, v10);
    goto LABEL_37;
  }
  if (v33 == 56)
    v37 = 77;
  else
    v37 = 79;
  v38 = *(_BYTE *)(v34 + 390 * v35 + v37 + 3862) & 0xFB;
  v39 = sub_1C6329468((unsigned int *)*a1, (char)v11, v10);
  v36 = v39;
  if (v38)
  {
LABEL_37:
    v52 = a1[1];
    v53 = *(_QWORD *)(v52 + 832);
    v192 = a4;
    v190 = v36;
    if (*(_WORD *)(a2 + 24) == 56)
    {
      if (v53)
        v54 = *(unsigned __int16 *)(v53 + 8);
      else
        v54 = 0;
      *(_QWORD *)a3 = sub_1C636D0C8(v52, (const char *)0x38, (const llvm::APInt *)&v201, v11, v10, &v209, 2, v54);
      *(_DWORD *)(a3 + 8) = v57;
      v58 = a1[1];
      v59 = *(_QWORD *)(v58 + 832);
      v60 = (uint64_t *)a3;
      if (v59)
        v61 = *(unsigned __int16 *)(v59 + 8);
      else
        v61 = 0;
      *(_QWORD *)a4 = sub_1C636D0C8(v58, (const char *)0x38, (const llvm::APInt *)&v201, v11, v10, &v203, 2, v61);
      *(_DWORD *)(a4 + 8) = v66;
      v67 = a1[1];
      v68 = (llvm *)(*(uint64_t (**)(unint64_t, uint64_t, _QWORD, llvm *, uint64_t))(*(_QWORD *)*a1
                                                                                                  + 400))(*a1, *(_QWORD *)(**(_QWORD **)(v67 + 40) + 40) + 272, *(_QWORD *)(v67 + 56), v11, v10);
      v70 = v69;
      v72 = *v60;
      v71 = v60[1];
      v188 = v60;
      v73 = v209;
      v74 = v210;
      v75 = sub_1C6367818((_QWORD *)v67, 0xCu);
      v78 = *(_QWORD *)(v67 + 832);
      if (v78)
        LOWORD(v78) = *(_WORD *)(v78 + 8);
      v80 = sub_1C5D58E08(v67, (const char *)0xC1, (const llvm::APInt *)&v201, v68, v70, v72, v71, v77, v73, v74, v75, v76, SHIDWORD(v76), v78);
      v81 = v79;
      v82 = a1[1];
      if (v190 == 1)
      {
        v83 = sub_1C6366544(v82, (uint64_t)v80, v79, (uint64_t)&v201, (uint64_t)v11, v10);
      }
      else
      {
        v107 = sub_1C6366AB4(a1[1], 1, (const llvm::APInt *)&v201, v11, v10, 0, 0);
        v109 = v108;
        v110 = sub_1C6366AB4(a1[1], 0, (const llvm::APInt *)&v201, v11, v10, 0, 0);
        v191 = sub_1C4815A8C(v82, (const llvm::APInt *)&v201, v11, v10, (uint64_t)v80, v81, (uint64_t)v107, v109, (uint64_t)v110, v111, v112);
        v186 = v113;
        v114 = a1[1];
        v115 = (llvm *)(*(uint64_t (**)(unint64_t, uint64_t, _QWORD, llvm *, uint64_t))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(v114 + 40) + 40) + 272, *(_QWORD *)(v114 + 56), v11, v10);
        v117 = v116;
        v119 = *v188;
        v118 = v188[1];
        v120 = v211;
        v121 = v212;
        v122 = sub_1C6367818((_QWORD *)v114, 0xCu);
        v125 = 0;
        v126 = *(_QWORD *)(v114 + 832);
        if (v126)
          v125 = *(_WORD *)(v126 + 8);
        v127 = sub_1C5D58E08(v114, (const char *)0xC1, (const llvm::APInt *)&v201, v115, v117, v119, v118, v124, v120, v121, v122, v123, SHIDWORD(v123), v125);
        v129 = v128;
        v130 = a1[1];
        v131 = sub_1C6366AB4(v130, 1, (const llvm::APInt *)&v201, v11, v10, 0, 0);
        v83 = (uint64_t)sub_1C4815A8C(v130, (const llvm::APInt *)&v201, v11, v10, (uint64_t)v127, v129, (uint64_t)v131, v132, (uint64_t)v191, v186, SHIDWORD(v186));
      }
      v133 = a1[1];
      a4 = v192;
      v134 = *(_QWORD *)(v133 + 832);
      if (v134)
        LOWORD(v134) = *(_WORD *)(v134 + 8);
      result = sub_1C5D56C70(v133, 56, (const llvm::APInt *)&v201, v11, v10, *(_QWORD *)v192, *(_QWORD *)(v192 + 8), v85, v83, v84, v134);
    }
    else
    {
      if (v53)
        v55 = *(unsigned __int16 *)(v53 + 8);
      else
        v55 = 0;
      *(_QWORD *)a3 = sub_1C636D0C8(v52, (const char *)0x39, (const llvm::APInt *)&v201, v11, v10, &v209, 2, v55);
      *(_DWORD *)(a3 + 8) = v62;
      v63 = a1[1];
      v64 = *(_QWORD *)(v63 + 832);
      if (v64)
        v65 = *(unsigned __int16 *)(v64 + 8);
      else
        v65 = 0;
      *(_QWORD *)a4 = sub_1C636D0C8(v63, (const char *)0x39, (const llvm::APInt *)&v201, v11, v10, &v203, 2, v65);
      *(_DWORD *)(a4 + 8) = v86;
      v87 = (_QWORD *)(*(_QWORD *)(v209 + 40) + 16 * v210);
      v88 = a1[1];
      v89 = (llvm *)(*(uint64_t (**)(unint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(v88 + 40) + 40) + 272, *(_QWORD *)(v88 + 56), *v87, v87[1]);
      v91 = v90;
      v93 = v209;
      v92 = v210;
      v95 = v211;
      v94 = v212;
      v96 = sub_1C6367818((_QWORD *)v88, 0xCu);
      v99 = *(_QWORD *)(v88 + 832);
      if (v99)
        LOWORD(v99) = *(_WORD *)(v99 + 8);
      v101 = sub_1C5D58E08(v88, (const char *)0xC1, (const llvm::APInt *)&v201, v89, v91, v93, v92, v98, v95, v94, v96, v97, SHIDWORD(v97), v99);
      v102 = v100;
      v103 = a1[1];
      if (v190 == 1)
      {
        v104 = sub_1C6366544(v103, (uint64_t)v101, v100, (uint64_t)&v201, (uint64_t)v11, v10);
      }
      else
      {
        v137 = sub_1C6366AB4(a1[1], 1, (const llvm::APInt *)&v201, v11, v10, 0, 0);
        v139 = v138;
        v140 = sub_1C6366AB4(a1[1], 0, (const llvm::APInt *)&v201, v11, v10, 0, 0);
        v104 = (uint64_t)sub_1C4815A8C(v103, (const llvm::APInt *)&v201, v11, v10, (uint64_t)v101, v102, (uint64_t)v137, v139, (uint64_t)v140, v141, v142);
      }
      v143 = a1[1];
      a4 = v192;
      v144 = *(_QWORD *)(v143 + 832);
      if (v144)
        LOWORD(v144) = *(_WORD *)(v144 + 8);
      result = sub_1C5D56C70(v143, 57, (const llvm::APInt *)&v201, v11, v10, *(_QWORD *)v192, *(_QWORD *)(v192 + 8), v106, v104, v105, v144);
    }
    goto LABEL_103;
  }
  v40 = v39;
  v41 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, llvm *, uint64_t))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, *(_QWORD *)(a1[1] + 56), v11, v10);
  v187 = v42;
  v189 = (llvm *)v41;
  v43 = sub_1C636A8B4(a1[1], (uint64_t)v11, v10, v41, v42);
  v45 = v44;
  v46 = *(unsigned __int16 *)(a2 + 24);
  v47 = a1[1];
  if (v46 == 56)
    v48 = 77;
  else
    v48 = 79;
  if (v46 == 56)
    v49 = 56;
  else
    v49 = 57;
  v50 = *(_QWORD *)(v47 + 832);
  if (v50)
    v51 = *(_WORD *)(v50 + 8);
  else
    v51 = 0;
  *(_QWORD *)a3 = sub_1C636D410(v47, (const char *)v48, (const llvm::APInt *)&v201, v43, v45, &v209, 2, v51);
  *(_DWORD *)(a3 + 8) = v146;
  v147 = a1[1];
  v148 = *(_QWORD *)(v147 + 832);
  if (v148)
    v149 = *(unsigned __int16 *)(v148 + 8);
  else
    v149 = 0;
  result = sub_1C636D0C8(v147, (const char *)v49, (const llvm::APInt *)&v201, v11, v10, &v203, 2, v149);
  *(_QWORD *)a4 = result;
  v150 = a4;
  *(_DWORD *)(a4 + 8) = v151;
  v152 = *(uint64_t **)a3;
  if (v40 == 2)
  {
    if (v46 == 56)
      v175 = 57;
    else
      v175 = 56;
    v176 = sub_1C6366480(a1[1], (uint64_t)v152, 1, (uint64_t)&v201, (uint64_t)v11, v10);
    v179 = a1[1];
    a4 = v150;
    v180 = *(_QWORD *)(v179 + 832);
    if (v180)
      LOWORD(v180) = *(_WORD *)(v180 + 8);
    result = sub_1C5D56C70(v179, v175, (const llvm::APInt *)&v201, v11, v10, *(_QWORD *)v150, *(_QWORD *)(v150 + 8), v178, v176, v177, v180);
  }
  else
  {
    if (v40 == 1)
    {
      v159 = 1;
    }
    else
    {
      if (v40)
        goto LABEL_104;
      v153 = a1[1];
      v155 = sub_1C6366AB4(v153, 1, (const llvm::APInt *)&v201, v189, v187, 0, 0);
      v157 = *(_QWORD *)(v153 + 832);
      if (v157)
        LOWORD(v157) = *(_WORD *)(v157 + 8);
      v152 = sub_1C5D56C70(v153, 171, (const llvm::APInt *)&v201, v189, v187, (uint64_t)v155, v154, v156, (uint64_t)v152, 1uLL, v157);
      v159 = v158;
    }
    v181 = sub_1C6366544(a1[1], (uint64_t)v152, v159, (uint64_t)&v201, (uint64_t)v11, v10);
    v184 = a1[1];
    a4 = v150;
    v185 = *(_QWORD *)(v184 + 832);
    if (v185)
      LOWORD(v185) = *(_WORD *)(v185 + 8);
    result = sub_1C5D56C70(v184, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v201, v11, v10, *(_QWORD *)v150, *(_QWORD *)(v150 + 8), v183, v181, v182, v185);
  }
LABEL_103:
  *(_QWORD *)a4 = result;
  *(_DWORD *)(a4 + 8) = v136;
LABEL_104:
  if (v201)
    return (uint64_t *)llvm::MetadataTracking::untrack((uint64_t)&v201, v201);
  return result;
}

uint64_t sub_1C5CE8B24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  int v13;
  uint64_t result;
  int v16;
  unsigned int v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t ShiftAmountTy;
  unsigned __int8 *v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int16 v34;
  int v35;
  unsigned int v36;
  char v37;
  int v38;
  uint64_t v39;
  llvm::LLVMContext *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;
  int v47;
  unsigned __int8 *v48;
  uint64_t v49;
  uint64_t ExtendedIntegerVT;
  uint64_t v51;
  _QWORD v52[2];
  char v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  int v59;
  unsigned __int8 *v60;
  int v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  int v65;
  uint64_t v66;
  int v67;
  uint64_t v68;

  v68 = *MEMORY[0x1E0C80C00];
  v8 = *(uint64_t **)(a2 + 40);
  v9 = *v8;
  v10 = v8[1];
  v11 = *(unsigned __int8 **)(a2 + 64);
  v60 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v60, v11, 2);
  v61 = *(_DWORD *)(a2 + 60);
  v12 = *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40);
  v13 = *(unsigned __int16 *)(v12 + 24);
  if (v13 == 35 || v13 == 11)
  {
    result = (uint64_t)sub_1C6344274(a1, a2, (void ***)(*(_QWORD *)(v12 + 80) + 24), a3, a4);
  }
  else
  {
    result = sub_1C6345270(a1, a2, a3, a4);
    if ((result & 1) == 0)
    {
      v16 = *(unsigned __int16 *)(a2 + 24);
      if (v16 == 177)
        v17 = 197;
      else
        v17 = 196;
      if (v16 == 175)
        v18 = 195;
      else
        v18 = v17;
      llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v9, v10, (uint64_t)&v62);
      if ((_BYTE)v63
        && ((v19 = *(_QWORD *)a1,
             *(_BYTE *)(*(_QWORD *)a1 + 390 * v63 + v18 + 3862) == 4)
         || !*(_BYTE *)(*(_QWORD *)a1 + 390 * v63 + v18 + 3862)
         && *(_QWORD *)(v19 + 8 * v63 + 96))
        && (*(unsigned int (**)(unint64_t, _QWORD, uint64_t))(*(_QWORD *)v19 + 456))(v19, *(_QWORD *)(a1 + 8), a2))
      {
        v56 = 0;
        LODWORD(v57) = 0;
        v58 = 0;
        v59 = 0;
        sub_1C6347954(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), (uint64_t)&v56, (uint64_t)&v58);
        v20 = (uint64_t *)(*(_QWORD *)(v56 + 40) + 16 * v57);
        v21 = *v20;
        v22 = v20[1];
        v23 = *(_QWORD *)(a2 + 32);
        v24 = *(_QWORD *)(v23 + 40);
        v25 = *(_QWORD *)(v23 + 48);
        ShiftAmountTy = llvm::TargetLoweringBase::getShiftAmountTy(*(uint64_t **)a1, v21, v22, *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 8) + 40) + 40) + 272, 1);
        v28 = (unsigned __int8 *)(*(_QWORD *)(v24 + 40) + 16 * v25);
        if (*v28 != ShiftAmountTy || !*v28 && *((_QWORD *)v28 + 1) != v26)
        {
          v24 = sub_1C6366544(*(_QWORD *)(a1 + 8), v24, v25, (uint64_t)&v60, ShiftAmountTy, v26);
          LODWORD(v25) = v29;
        }
        v62 = v56;
        v63 = v57;
        v64 = v58;
        v65 = v59;
        v66 = v24;
        v67 = v25;
        v30 = *(_QWORD *)(a1 + 8);
        v32 = sub_1C636A8B4(v30, v21, v22, v21, v22);
        v33 = *(_QWORD *)(v30 + 832);
        if (v33)
          v34 = *(_WORD *)(v33 + 8);
        else
          v34 = 0;
        result = (uint64_t)sub_1C636D410(v30, (const char *)v18, (const llvm::APInt *)&v60, v32, v31, &v62, 3, v34);
        *(_QWORD *)a3 = result;
        *(_DWORD *)(a3 + 8) = v38;
        *(_QWORD *)a4 = result;
        *(_DWORD *)(a4 + 8) = 1;
      }
      else
      {
        v35 = *(unsigned __int16 *)(a2 + 24);
        if (v35 != 177)
        {
          if (v35 == 175)
          {
            v36 = 0;
            v37 = 0;
            switch((char)v9)
            {
              case 4:
                goto LABEL_46;
              case 5:
                v37 = 0;
                v36 = 1;
                goto LABEL_46;
              case 6:
                v37 = 0;
                v36 = 2;
                goto LABEL_46;
              case 7:
                v37 = 0;
                v36 = 3;
                goto LABEL_46;
              default:
                goto LABEL_47;
            }
          }
          v37 = 1;
          v36 = 8;
          switch((char)v9)
          {
            case 4:
              goto LABEL_46;
            case 5:
              v36 = 9;
              goto LABEL_46;
            case 6:
              v36 = 10;
              goto LABEL_46;
            case 7:
              v36 = 11;
              goto LABEL_46;
            default:
              goto LABEL_47;
          }
        }
        v36 = v9;
        v37 = 0;
        switch((char)v9)
        {
          case 4:
            goto LABEL_46;
          case 5:
            v37 = 0;
            v36 = 5;
            goto LABEL_46;
          case 6:
            v37 = 0;
            v36 = 6;
            goto LABEL_46;
          case 7:
            v37 = 0;
            v36 = 7;
LABEL_46:
            if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v36 + 174048))
              goto LABEL_47;
            v39 = *(_QWORD *)(a1 + 8);
            v40 = (llvm::LLVMContext *)*(unsigned int *)(**(_QWORD **)(v39 + 32) + 148);
            if ((int)v40 <= 31)
            {
              switch((_DWORD)v40)
              {
                case 1:
                  v41 = 0;
                  v42 = 0;
                  v43 = 2;
                  goto LABEL_59;
                case 0x10:
                  v41 = 0;
                  v42 = 0;
                  v43 = 4;
                  goto LABEL_59;
                case 8:
                  v41 = 0;
                  v42 = 0;
                  v43 = 3;
                  goto LABEL_59;
              }
            }
            else
            {
              switch((_DWORD)v40)
              {
                case 0x20:
                  v41 = 0;
                  v42 = 0;
                  v43 = 5;
                  goto LABEL_59;
                case 0x40:
                  v41 = 0;
                  v42 = 0;
                  v43 = 6;
                  goto LABEL_59;
                case 0x80:
                  v41 = 0;
                  v42 = 0;
                  v43 = 7;
                  goto LABEL_59;
              }
            }
            ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(v39 + 56), v40);
            v42 = v51;
            v41 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
            v43 = ExtendedIntegerVT;
            v39 = *(_QWORD *)(a1 + 8);
LABEL_59:
            v44 = sub_1C6366544(v39, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), (uint64_t)&v60, v43 | v41, v42);
            v45 = *(_QWORD *)(a2 + 32);
            v46 = *(_DWORD *)(v45 + 8);
            v62 = *(_QWORD *)v45;
            v63 = v46;
            v64 = v44;
            v65 = v47;
            v48 = *(unsigned __int8 **)a1;
            v49 = *(_QWORD *)(a1 + 8);
            v52[0] = 0;
            v52[1] = 0;
            v53 = 0;
            v54 = 0;
            v55 = v37 | 4;
            sub_1C5D7B380(v48, v49, v36, v9, v10, (uint64_t)&v62, 2uLL, (uint64_t)v52, (uint64_t)&v56, (uint64_t)&v60, 0, 0);
            result = (uint64_t)sub_1C63483FC((uint64_t *)a1, v56, v57, a3, (uint64_t **)a4);
            break;
          default:
LABEL_47:
            result = (uint64_t)sub_1C6345A88((unint64_t *)a1, a2, a3, a4);
            break;
        }
      }
    }
  }
  if (v60)
    return llvm::MetadataTracking::untrack((uint64_t)&v60, v60);
  return result;
}

void sub_1C5CE9060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  llvm *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  llvm *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  unsigned int v60;
  uint64_t v61;
  uint64_t v62;
  llvm *v63;
  uint64_t v64;
  _QWORD *v65;
  _QWORD *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  __n128 v74;
  unsigned int v75;
  unint64_t v76;
  int v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  int v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  unsigned int v85;
  uint64_t v86;
  unsigned int v87;
  unsigned __int8 *v88;
  int v89;
  uint64_t v90;
  unsigned int v91;
  uint64_t v92;
  int v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;

  v96 = *MEMORY[0x1E0C80C00];
  v8 = *(uint64_t **)(a2 + 32);
  v9 = *v8;
  v10 = v8[1];
  v11 = v8[6];
  v79 = v8[5];
  v12 = *(unsigned __int8 **)(a2 + 64);
  v88 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v88, v12, 2);
  v89 = *(_DWORD *)(a2 + 60);
  v13 = *(unsigned __int16 *)(a2 + 24);
  if (v13 == 76)
    v14 = 74;
  else
    v14 = 75;
  v15 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(v9 + 40) + 16 * v10;
  v17 = sub_1C634633C(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v16, *(_QWORD *)(v16 + 8));
  if (v17
    && (v17 || *(_QWORD *)(v15 + 8 * v17 + 96))
    && (*(_BYTE *)(v15 + 390 * v17 + v14 + 3862) & 0xFB) == 0)
  {
    v86 = 0;
    v87 = 0;
    v84 = 0;
    v85 = 0;
    v82 = 0;
    v83 = 0;
    v80 = 0;
    v81 = 0;
    sub_1C6347954(a1, v9, v10, (uint64_t)&v86, (uint64_t)&v84);
    sub_1C6347954(a1, v79, v11, (uint64_t)&v82, (uint64_t)&v80);
    v19 = (uint64_t *)(*(_QWORD *)(v86 + 40) + 16 * v87);
    v20 = sub_1C636A8B4(*(_QWORD *)(a1 + 8), *v19, v19[1], *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 24));
    v22 = v21;
    v23 = 0;
    v24 = *(_QWORD *)(a1 + 8);
    if (v13 == 76)
      v25 = 77;
    else
      v25 = 79;
    v90 = v86;
    v91 = v87;
    v92 = v82;
    v93 = v83;
    v26 = *(_QWORD *)(v24 + 832);
    if (v26)
      v23 = *(_WORD *)(v26 + 8);
    v27 = sub_1C636D410(v24, (const char *)v25, (const llvm::APInt *)&v88, v20, v22, &v90, 2, v23);
    *(_QWORD *)a3 = v27;
    *(_DWORD *)(a3 + 8) = v28;
    v29 = *(_QWORD *)(a1 + 8);
    v90 = v84;
    v91 = v85;
    v92 = v80;
    v93 = v81;
    v94 = v27;
    v95 = 1;
    v30 = *(_QWORD *)(v29 + 832);
    if (v30)
      v31 = *(_WORD *)(v30 + 8);
    else
      v31 = 0;
    v73 = sub_1C636D410(v29, (const char *)v14, (const llvm::APInt *)&v88, v20, v22, &v90, 3, v31);
    *(_QWORD *)a4 = v73;
    *(_DWORD *)(a4 + 8) = v77;
    v76 = 1;
  }
  else
  {
    v78 = v13;
    v32 = *(_QWORD *)(a1 + 8);
    if (*(_WORD *)(a2 + 24) == 76)
      v33 = 56;
    else
      v33 = 57;
    v34 = *(_QWORD *)(v9 + 40) + 16 * v10;
    v35 = *(llvm **)v34;
    v36 = *(_QWORD *)(v34 + 8);
    v37 = *(_QWORD *)(v32 + 832);
    if (v37)
      LOWORD(v37) = *(_WORD *)(v37 + 8);
    v38 = sub_1C5D56C70(v32, v33, (const llvm::APInt *)&v88, v35, v36, v9, v10, v18, v79, v11, v37);
    v40 = v39;
    sub_1C63483FC((uint64_t *)a1, (uint64_t)v38, v39, a3, (uint64_t **)a4);
    v42 = *(_QWORD *)(v9 + 40) + 16 * v10;
    v43 = *(llvm **)v42;
    v44 = *(_QWORD *)(v42 + 8);
    v45 = *(_QWORD *)(a1 + 8);
    v46 = *(_QWORD *)(v45 + 832);
    if (v46)
      LOWORD(v46) = *(_WORD *)(v46 + 8);
    v49 = sub_1C5D56C70(v45, 173, (const llvm::APInt *)&v88, v43, v44, v9, v10, v41, v79, v11, v46);
    v50 = v47;
    if (v78 == 76)
    {
      v49 = sub_1C6366760(*(_QWORD *)(a1 + 8), (const llvm::APInt *)&v88, (uint64_t)v49, v47, v43, v44);
      v50 = v50 & 0xFFFFFFFF00000000 | v51;
    }
    v52 = *(_QWORD *)(a1 + 8);
    v53 = *(_QWORD *)(v52 + 832);
    if (v53)
      LOWORD(v53) = *(_WORD *)(v53 + 8);
    v54 = sub_1C5D56C70(v52, 173, (const llvm::APInt *)&v88, v43, v44, v9, v10, v48, (uint64_t)v38, v40, v53);
    v57 = *(_QWORD *)(a1 + 8);
    v58 = *(_QWORD *)(v57 + 832);
    if (v58)
      LOWORD(v58) = *(_WORD *)(v58 + 8);
    v59 = sub_1C5D56C70(v57, 171, (const llvm::APInt *)&v88, v43, v44, (uint64_t)v49, v50, v56, (uint64_t)v54, v55, v58);
    v61 = v60;
    v62 = *(_QWORD *)(a2 + 40);
    v63 = *(llvm **)(v62 + 16);
    v64 = *(_QWORD *)(v62 + 24);
    v65 = *(_QWORD **)(a1 + 8);
    v66 = sub_1C6366AB4((uint64_t)v65, 0, (const llvm::APInt *)&v88, v43, v44, 0, 0);
    v68 = v67;
    v69 = sub_1C6367818(v65, 0x14u);
    v72 = v65[104];
    if (v72)
      LOWORD(v72) = *(_WORD *)(v72 + 8);
    v73 = sub_1C5D58E08((uint64_t)v65, (const char *)0xC1, (const llvm::APInt *)&v88, v63, v64, (uint64_t)v59, v61, v71, (uint64_t)v66, v68, v69, v70, SHIDWORD(v70), v72);
    v76 = v75;
  }
  sub_1C5CED824(a1, a2, 1, (uint64_t)v73, v76, v74);
  if (v88)
    llvm::MetadataTracking::untrack((uint64_t)&v88, v88);
}

void sub_1C5CE94C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned __int8 *v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int16 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  __int16 v30;
  uint64_t v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  llvm *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  llvm *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  __n128 v50;
  unsigned int v51;
  unint64_t v52;
  int v53;
  uint64_t v55;
  int v56;
  uint64_t v57;
  int v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  unsigned int v62;
  unsigned __int8 *v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  unsigned int v72;
  uint64_t v73;
  int v74;
  uint64_t v75;

  v75 = *MEMORY[0x1E0C80C00];
  v7 = *(uint64_t **)(a2 + 32);
  v8 = *v7;
  v9 = v7[1];
  v10 = v7[5];
  v11 = v7[6];
  v12 = *(unsigned __int8 **)(a2 + 64);
  v63 = v12;
  if (v12)
    llvm::MetadataTracking::track((uint64_t)&v63, v12, 2);
  v64 = *(_DWORD *)(a2 + 60);
  v13 = *(unsigned __int16 *)(a2 + 24);
  if (v13 == 77)
    v14 = 72;
  else
    v14 = 73;
  v15 = *(_QWORD *)a1;
  v16 = *(_QWORD *)(v8 + 40) + 16 * v9;
  v17 = sub_1C634633C(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v16, *(_QWORD *)(v16 + 8));
  if (v17
    && (v17 || *(_QWORD *)(v15 + 8 * v17 + 96))
    && (*(_BYTE *)(v15 + 390 * v17 + v14 + 3862) & 0xFB) == 0)
  {
    v61 = 0;
    v62 = 0;
    v59 = 0;
    v60 = 0;
    v57 = 0;
    v58 = 0;
    v55 = 0;
    v56 = 0;
    sub_1C6347954(a1, v8, v9, (uint64_t)&v61, (uint64_t)&v59);
    sub_1C6347954(a1, v10, v11, (uint64_t)&v57, (uint64_t)&v55);
    v19 = (uint64_t *)(*(_QWORD *)(v61 + 40) + 16 * v62);
    v21 = sub_1C636A8B4(*(_QWORD *)(a1 + 8), *v19, v19[1], *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 24));
    v22 = v20;
    v23 = 0;
    v71 = v61;
    v72 = v62;
    v73 = v57;
    v74 = v58;
    v65 = v59;
    v66 = v60;
    v67 = v55;
    v68 = v56;
    v70 = 1;
    v24 = *(_QWORD *)(a1 + 8);
    v25 = *(_QWORD *)(v24 + 832);
    if (v25)
      v23 = *(_WORD *)(v25 + 8);
    v26 = sub_1C636D410(v24, (const char *)*(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v63, v21, v20, &v71, 2, v23);
    *(_QWORD *)a3 = v26;
    *(_DWORD *)(a3 + 8) = v27;
    v69 = v26;
    v28 = *(_QWORD *)(a1 + 8);
    v29 = *(_QWORD *)(v28 + 832);
    if (v29)
      v30 = *(_WORD *)(v29 + 8);
    else
      v30 = 0;
    v49 = sub_1C636D410(v28, (const char *)v14, (const llvm::APInt *)&v63, v21, v22, &v65, 3, v30);
    *(_QWORD *)a4 = v49;
    *(_DWORD *)(a4 + 8) = v53;
    v52 = 1;
  }
  else
  {
    if (v13 == 77)
      v31 = 56;
    else
      v31 = 57;
    if (v13 == 77)
      v32 = 12;
    else
      v32 = 10;
    v33 = *(_QWORD *)(a1 + 8);
    v34 = *(_QWORD *)(v8 + 40) + 16 * v9;
    v35 = *(llvm **)v34;
    v36 = *(_QWORD *)(v34 + 8);
    v37 = *(_QWORD *)(v33 + 832);
    if (v37)
      LOWORD(v37) = *(_WORD *)(v37 + 8);
    v38 = sub_1C5D56C70(v33, v31, (const llvm::APInt *)&v63, v35, v36, v8, v9, v18, v10, v11, v37);
    v40 = v39;
    sub_1C63483FC((uint64_t *)a1, (uint64_t)v38, v39, a3, (uint64_t **)a4);
    v41 = *(_QWORD **)(a1 + 8);
    v42 = *(_QWORD *)(a2 + 40);
    v43 = *(llvm **)(v42 + 16);
    v44 = *(_QWORD *)(v42 + 24);
    v45 = sub_1C6367818(v41, v32);
    v48 = v41[104];
    if (v48)
      LOWORD(v48) = *(_WORD *)(v48 + 8);
    v49 = sub_1C5D58E08((uint64_t)v41, (const char *)0xC1, (const llvm::APInt *)&v63, v43, v44, (uint64_t)v38, v40, v47, v8, v9, v45, v46, SHIDWORD(v46), v48);
    v52 = v51;
  }
  sub_1C5CED824(a1, a2, 1, (uint64_t)v49, v52, v50);
  if (v63)
    llvm::MetadataTracking::untrack((uint64_t)&v63, v63);
}

void sub_1C5CE980C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  __int128 *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  __int16 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t *v53;
  unsigned int v54;
  uint64_t *v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  BOOL v61;
  unsigned int v62;
  llvm *ShiftAmountTy;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  int v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  unsigned int v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  llvm *v107;
  uint64_t v108;
  unsigned int v109;
  int v110;
  uint64_t v111;
  int v112;
  uint64_t v113;
  unsigned int v114;
  unsigned int v115;
  llvm *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unsigned int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t *v135;
  unint64_t v136;
  unint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t *v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t *v148;
  unint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;
  unsigned int v153;
  unsigned int v154;
  _QWORD *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t *v160;
  unint64_t v161;
  unint64_t v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t *v168;
  unint64_t v169;
  unint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  _QWORD *v181;
  unint64_t v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t *v198;
  unsigned int v199;
  _QWORD *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  int v211;
  uint64_t v212;
  llvm *v213;
  unsigned int v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  unsigned int v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  _QWORD *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  unsigned int v227;
  unsigned int v228;
  _QWORD *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t *v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  uint64_t v238;
  __int128 v239;
  _QWORD *v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t *v244;
  uint64_t v245;
  uint64_t v246;
  _QWORD *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  int v254;
  int v255;
  uint64_t *v256;
  unint64_t v257;
  unint64_t v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t *v264;
  unint64_t v265;
  unint64_t v266;
  _QWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t *v272;
  unint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t *v277;
  unint64_t v278;
  uint64_t v279;
  uint64_t v280;
  unsigned int v281;
  unsigned int v282;
  _QWORD *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  unint64_t v288;
  _QWORD *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  unint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t *v302;
  unint64_t v303;
  uint64_t v304;
  uint64_t v305;
  unsigned int v306;
  uint64_t v307;
  unint64_t v308;
  unsigned int v309;
  unint64_t *v310;
  unint64_t v311;
  uint64_t v312;
  __int128 v313;
  uint64_t v314;
  uint64_t v315;
  int v316;
  uint64_t v317;
  __int128 v318;
  uint64_t v319;
  uint64_t v320;
  int v321;
  uint64_t v322;
  unsigned int v323;
  uint64_t *v324;
  uint64_t v325;
  __int128 v326;
  uint64_t v327;
  uint64_t v328;
  int v329;
  int v330;
  char v331;
  uint64_t v332;
  char *v333;
  unint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t *v337;
  unsigned int v338;
  uint64_t v339;
  unint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  _QWORD *v347;
  uint64_t v348;
  uint64_t v349;
  unint64_t v350;
  uint64_t v351;
  uint64_t v352;
  llvm *v353;
  uint64_t v356;
  unsigned int v357;
  unint64_t v358;
  unsigned int v359;
  unint64_t v360;
  unsigned int v361;
  uint64_t *v362;
  uint64_t v363;
  uint64_t *v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t *v368;
  uint64_t v369;
  __int128 v370;
  __int128 v371;
  unsigned __int8 *v372;
  int v373;
  char *v374;
  _OWORD v375[4];
  uint64_t v376;

  v376 = *MEMORY[0x1E0C80C00];
  v6 = *(unsigned __int8 **)(a2 + 64);
  v372 = v6;
  if (v6)
    llvm::MetadataTracking::track((uint64_t)&v372, v6, 2);
  v373 = *(_DWORD *)(a2 + 60);
  v371 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v8 = sub_1C6131328((unsigned __int8 *)&v371, (uint64_t)v6, a3);
  v9 = *(uint64_t **)(a2 + 32);
  v11 = *v9;
  v10 = v9[1];
  v12 = *(_QWORD *)(v9[10] + 80);
  v13 = (unint64_t *)(v12 + 24);
  if (*(_DWORD *)(v12 + 32) >= 0x41u)
    v13 = (unint64_t *)*v13;
  v14 = v9[5];
  v15 = v9[6];
  v16 = *v13;
  v17 = *(unsigned __int16 *)(a2 + 24);
  v18 = v17 & 0xFFFFFFFD;
  if (!*v13)
  {
    if ((v17 & 0xFFFE) == 0x5A)
    {
      v20 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, *(_QWORD *)(a1[1] + 56), v371, *((_QWORD *)&v371 + 1));
      v21 = v19;
      if (v18 == 88)
        v22 = 80;
      else
        v22 = 81;
      v23 = a1[1];
      v353 = (llvm *)v20;
      v24 = sub_1C636A8B4(v23, v371, *((uint64_t *)&v371 + 1), v20, v19);
      v27 = sub_1C636D6B4(v23, (const char *)v22, (const llvm::APInt *)&v372, v24, v25, v11, v10, v26, v14, v15);
      v28 = (uint64_t)v27;
      if ((v17 | 2) == 0x5A)
      {
        LODWORD(v375[0]) = v8;
        v348 = v21;
        v351 = (uint64_t)v27;
        if (v8 >= 0x41)
        {
          llvm::APInt::initSlowCase((llvm::APInt *)&v374, 0, 0);
          v331 = v8 - 1;
          v332 = (v8 - 1) >> 6;
          if (LODWORD(v375[0]) >= 0x41)
            v333 = &v374[8 * v332];
          else
            v333 = (char *)&v374;
          v29 = 1 << v331;
          *(_QWORD *)v333 |= 1 << v331;
          DWORD2(v370) = v8;
          v31 = &v370;
          llvm::APInt::initSlowCase((llvm::APInt *)&v370, -1, 1);
          if (DWORD2(v370) >= 0x41)
            v31 = (__int128 *)(v370 + 8 * v332);
        }
        else
        {
          v29 = 1 << (v8 - 1);
          v374 = (char *)v29;
          DWORD2(v370) = v8;
          if (v8)
            v30 = 0xFFFFFFFFFFFFFFFFLL >> ((v8 - 1) & 0x3F ^ 0x3F);
          else
            v30 = 0;
          *(_QWORD *)&v370 = v30;
          v31 = &v370;
        }
        *(_QWORD *)v31 &= ~v29;
        v32 = sub_1C63666FC(a1[1], (llvm::LLVMContext *)&v374, (const llvm::APInt *)&v372, v371, *((uint64_t *)&v371 + 1), 0, 0);
        v34 = v33;
        v35 = sub_1C63666FC(a1[1], (llvm::LLVMContext *)&v370, (const llvm::APInt *)&v372, v371, *((uint64_t *)&v371 + 1), 0, 0);
        v346 = v36;
        v38 = sub_1C6366AB4(a1[1], 0, (const llvm::APInt *)&v372, (llvm *)v371, *((uint64_t *)&v371 + 1), 0, 0);
        v344 = v39;
        v40 = 0;
        v41 = a1[1];
        v42 = *(_QWORD *)(v41 + 832);
        if (v42)
          v40 = *(_WORD *)(v42 + 8);
        v43 = sub_1C5D56C70(v41, 173, (const llvm::APInt *)&v372, (llvm *)v371, *((uint64_t *)&v371 + 1), v11, v10, v37, v14, v15, v40);
        v45 = v44;
        v46 = (_QWORD *)a1[1];
        v47 = sub_1C6367818(v46, 0x14u);
        v50 = v46[104];
        if (v50)
          LOWORD(v50) = *(_WORD *)(v50 + 8);
        v51 = sub_1C5D58E08((uint64_t)v46, (const char *)0xC1, (const llvm::APInt *)&v372, v353, v348, (uint64_t)v43, v45, v49, (uint64_t)v38, v344, v47, v48, SHIDWORD(v48), v50);
        v53 = sub_1C4815A8C(a1[1], (const llvm::APInt *)&v372, (llvm *)v371, *((uint64_t *)&v371 + 1), (uint64_t)v51, v52, v32, v34, v35, v346, SHIDWORD(v346));
        v55 = sub_1C4815A8C(a1[1], (const llvm::APInt *)&v372, (llvm *)v371, *((uint64_t *)&v371 + 1), v351, 1, (uint64_t)v53, v54, v351, 0, 0);
        v57 = v56;
        if (DWORD2(v370) >= 0x41 && (_QWORD)v370)
          MEMORY[0x1CAA32F9C](v370, 0x1000C8000313F17);
      }
      else
      {
        LODWORD(v375[0]) = v8;
        if (v8 > 0x40)
        {
          llvm::APInt::initSlowCase((llvm::APInt *)&v374, -1, 1);
        }
        else
        {
          v75 = (char *)(0xFFFFFFFFFFFFFFFFLL >> -(char)v8);
          if (!v8)
            v75 = 0;
          v374 = v75;
        }
        v76 = sub_1C63666FC(a1[1], (llvm::LLVMContext *)&v374, (const llvm::APInt *)&v372, v371, *((uint64_t *)&v371 + 1), 0, 0);
        v55 = sub_1C4815A8C(a1[1], (const llvm::APInt *)&v372, (llvm *)v371, *((uint64_t *)&v371 + 1), v28, 1, v76, v77, v28, 0, 0);
        v57 = v78;
      }
      if (LODWORD(v375[0]) >= 0x41 && v374)
        MEMORY[0x1CAA32F9C](v374, 0x1000C8000313F17);
    }
    else
    {
      v72 = a1[1];
      v73 = *(_QWORD *)(v72 + 832);
      if (v73)
        LOWORD(v73) = *(_WORD *)(v73 + 8);
      v55 = sub_1C5D56C70(v72, 58, (const llvm::APInt *)&v372, (llvm *)v371, *((uint64_t *)&v371 + 1), v11, v10, v7, v14, v15, v73);
      v57 = v74;
    }
    sub_1C63483FC(a1, (uint64_t)v55, v57, a3, (uint64_t **)a4);
    goto LABEL_44;
  }
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v371, *((uint64_t *)&v371 + 1), (uint64_t)&v374);
  v370 = v375[0];
  v368 = 0;
  LODWORD(v369) = 0;
  v366 = 0;
  LODWORD(v367) = 0;
  v364 = 0;
  LODWORD(v365) = 0;
  v362 = 0;
  LODWORD(v363) = 0;
  sub_1C6347954((uint64_t)a1, v11, v10, (uint64_t)&v368, (uint64_t)&v366);
  sub_1C6347954((uint64_t)a1, v14, v15, (uint64_t)&v364, (uint64_t)&v362);
  v374 = (char *)v375 + 8;
  *(_QWORD *)&v375[0] = 0x400000000;
  if (v18 == 88)
    v59 = 63;
  else
    v59 = 64;
  if ((sub_1C5D97CD8((uint64_t *)*a1, v59, (llvm *)v371, *((uint64_t *)&v371 + 1), (const llvm::APInt *)&v372, v11, v10, v58, v14, v15, (uint64_t)&v374, (llvm *)v370, *((uint64_t *)&v370 + 1), a1[1], 1, v368, v369, v366, v367,
          v364,
          v365,
          v362,
          v363) & 1) == 0)
    llvm::report_fatal_error((llvm *)"Unable to expand MUL_FIX using MUL_LOHI.", (const char *)1);
  v62 = sub_1C6131328((unsigned __int8 *)&v370, v60, v61);
  ShiftAmountTy = (llvm *)llvm::TargetLoweringBase::getShiftAmountTy((uint64_t *)*a1, v370, *((uint64_t *)&v370 + 1), *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, 1);
  v65 = v64;
  v66 = v62;
  v67 = v16 / v62;
  v68 = v16 % v62;
  if (v68)
  {
    v81 = sub_1C6366AB4(a1[1], v68, (const llvm::APInt *)&v372, ShiftAmountTy, v65, 0, 0);
    v82 = a1[1];
    v83 = (uint64_t *)&v374[16 * v67 + 16];
    v84 = *v83;
    v85 = v83[1];
    v86 = (uint64_t *)&v374[16 * v67];
    v87 = *v86;
    v88 = v86[1];
    v89 = *(_QWORD *)(v82 + 832);
    if (v89)
      LOWORD(v89) = *(_WORD *)(v89 + 8);
    v349 = v79;
    v90 = (uint64_t)v81;
    *(_QWORD *)a3 = sub_1C5D58E08(v82, (const char *)0xB5, (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), v84, v85, v80, v87, v88, (uint64_t)v81, v79, SHIDWORD(v79), v89);
    *(_DWORD *)(a3 + 8) = v92;
    v93 = a1[1];
    v94 = &v374[16 * v67];
    v95 = *((_QWORD *)v94 + 4);
    v96 = *((_QWORD *)v94 + 5);
    v97 = (uint64_t *)&v374[16 * v67 + 16];
    v98 = *v97;
    v99 = v97[1];
    v100 = *(_QWORD *)(v93 + 832);
    if (v100)
      LOWORD(v100) = *(_WORD *)(v100 + 8);
    *(_QWORD *)a4 = sub_1C5D58E08(v93, (const char *)0xB5, (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), v95, v96, v91, v98, v99, v90, v349, SHIDWORD(v349), v100);
    *(_DWORD *)(a4 + 8) = v101;
  }
  else
  {
    v69 = &v374[16 * v67];
    v70 = *((_DWORD *)v69 + 2);
    *(_QWORD *)a3 = *(_QWORD *)v69;
    *(_DWORD *)(a3 + 8) = v70;
    v71 = *((_DWORD *)v69 + 6);
    *(_QWORD *)a4 = *((_QWORD *)v69 + 2);
    *(_DWORD *)(a4 + 8) = v71;
  }
  if ((v17 & 0xFFFE) == 0x5A && v16 != v8)
  {
    v339 = *((_QWORD *)v374 + 4);
    v340 = *((_QWORD *)v374 + 5);
    v345 = *((_QWORD *)v374 + 6);
    v350 = *((_QWORD *)v374 + 7);
    v347 = sub_1C6366AB4(a1[1], 0, (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), 0, 0);
    v352 = v102;
    v103 = sub_1C6366AB4(a1[1], -1, (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), 0, 0);
    v341 = v104;
    v342 = (uint64_t)v103;
    v105 = (*(uint64_t (**)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, *(_QWORD *)(a1[1] + 56), v370, *((_QWORD *)&v370 + 1));
    v107 = (llvm *)v105;
    v108 = v106;
    if ((v17 | 2) != 0x5A)
    {
      if (v16 >= v62)
      {
        v205 = v106;
        if (v16 == v62)
        {
          v206 = (_QWORD *)a1[1];
          v207 = sub_1C6367818(v206, 0x16u);
          v210 = v206[104];
          if (v210)
            LOWORD(v210) = *(_WORD *)(v210 + 8);
          v198 = sub_1C5D58E08((uint64_t)v206, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v108, v345, v350, v209, (uint64_t)v347, v352, v207, v208, SHIDWORD(v208), v210);
        }
        else
        {
          v238 = a1[1];
          v239 = v370;
          v240 = sub_1C6366AB4(v238, v16 - v66, (const llvm::APInt *)&v372, ShiftAmountTy, v65, 0, 0);
          v243 = *(_QWORD *)(v238 + 832);
          if (v243)
            LOWORD(v243) = *(_WORD *)(v243 + 8);
          v244 = sub_1C5D56C70(v238, 177, (const llvm::APInt *)&v372, (llvm *)v239, *((uint64_t *)&v239 + 1), v339, v340, v242, (uint64_t)v240, v241, v243);
          v246 = v245;
          v247 = (_QWORD *)a1[1];
          v248 = sub_1C6367818(v247, 0x16u);
          v251 = v247[104];
          if (v251)
            LOWORD(v251) = *(_WORD *)(v251 + 8);
          v198 = sub_1C5D58E08((uint64_t)v247, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v205, (uint64_t)v244, v246, v250, (uint64_t)v347, v352, v248, v249, SHIDWORD(v249), v251);
        }
      }
      else
      {
        v179 = a1[1];
        v180 = v370;
        v181 = sub_1C6366AB4(v179, v16, (const llvm::APInt *)&v372, ShiftAmountTy, v65, 0, 0);
        v184 = *(_QWORD *)(v179 + 832);
        if (v184)
          LOWORD(v184) = *(_WORD *)(v184 + 8);
        v186 = sub_1C5D56C70(v179, 177, (const llvm::APInt *)&v372, (llvm *)v180, *((uint64_t *)&v180 + 1), v339, v340, v183, (uint64_t)v181, v182, v184);
        v188 = a1[1];
        v189 = *(_QWORD *)(v188 + 832);
        if (v189)
          LOWORD(v189) = *(_WORD *)(v189 + 8);
        v190 = sub_1C5D56C70(v188, 172, (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), (uint64_t)v186, v185, v187, v345, v350, v189);
        v192 = v191;
        v193 = (_QWORD *)a1[1];
        v194 = sub_1C6367818(v193, 0x16u);
        v197 = v193[104];
        if (v197)
          LOWORD(v197) = *(_WORD *)(v197 + 8);
        v198 = sub_1C5D58E08((uint64_t)v193, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v108, (uint64_t)v190, v192, v196, (uint64_t)v347, v352, v194, v195, SHIDWORD(v195), v197);
      }
      v252 = (uint64_t)v198;
      v253 = v199;
      *(_QWORD *)a4 = sub_1C4815A8C(a1[1], (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), (uint64_t)v198, v199, v342, v341, *(_QWORD *)a4, *(_QWORD *)(a4 + 8), HIDWORD(*(_QWORD *)(a4 + 8)));
      *(_DWORD *)(a4 + 8) = v254;
      *(_QWORD *)a3 = sub_1C4815A8C(a1[1], (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), v252, v253, v342, v341, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), HIDWORD(*(_QWORD *)(a3 + 8)));
      *(_DWORD *)(a3 + 8) = v255;
      goto LABEL_30;
    }
    if (v16 >= v62)
    {
      v113 = v106;
      if (v16 != v62)
      {
        v211 = v8 - v16 + 1;
        v212 = a1[1];
        v361 = v62;
        v213 = (llvm *)v105;
        if (v62 > 0x40)
        {
          llvm::APInt::initSlowCase((llvm::APInt *)&v360, 0, 0);
          v214 = v361;
        }
        else
        {
          v360 = 0;
          v214 = v62;
        }
        v114 = v62;
        sub_1C4912E54(&v360, v214 - v211, v214);
        v215 = sub_1C63666FC(v212, (llvm::LLVMContext *)&v360, (const llvm::APInt *)&v372, v370, *((uint64_t *)&v370 + 1), 0, 0);
        v343 = v216;
        if (v361 >= 0x41 && v360)
          MEMORY[0x1CAA32F9C](v360, 0x1000C8000313F17);
        v217 = a1[1];
        v218 = v114 - v211;
        v361 = v114;
        if (v114 > 0x40)
          llvm::APInt::initSlowCase((llvm::APInt *)&v360, 0, 0);
        else
          v360 = 0;
        sub_1C4912E54(&v360, 0, v218);
        v219 = sub_1C63666FC(v217, (llvm::LLVMContext *)&v360, (const llvm::APInt *)&v372, v370, *((uint64_t *)&v370 + 1), 0, 0);
        v221 = v220;
        if (v361 >= 0x41 && v360)
          MEMORY[0x1CAA32F9C](v360, 0x1000C8000313F17);
        v222 = (_QWORD *)a1[1];
        v223 = sub_1C6367818(v222, 0x12u);
        v226 = v222[104];
        if (v226)
          LOWORD(v226) = *(_WORD *)(v226 + 8);
        v152 = sub_1C5D58E08((uint64_t)v222, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v108, v345, v350, v225, v219, v221, v223, v224, SHIDWORD(v224), v226);
        v228 = v227;
        v229 = (_QWORD *)a1[1];
        v230 = sub_1C6367818(v229, 0x14u);
        v233 = v229[104];
        if (v233)
          LOWORD(v233) = *(_WORD *)(v233 + 8);
        v234 = sub_1C5D58E08((uint64_t)v229, (const char *)0xC1, (const llvm::APInt *)&v372, v213, v113, v345, v350, v232, v215, v343, v230, v231, SHIDWORD(v231), v233);
        v236 = v235;
        v237 = v228;
        goto LABEL_139;
      }
      v200 = (_QWORD *)a1[1];
      v201 = sub_1C6367818(v200, 0x12u);
      v204 = v200[104];
      v116 = v107;
      v114 = v62;
      if (v204)
        LOWORD(v204) = *(_WORD *)(v204 + 8);
      v256 = sub_1C5D58E08((uint64_t)v200, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v113, v345, v350, v203, (uint64_t)v347, v352, v201, v202, SHIDWORD(v202), v204);
      v258 = v257;
      v259 = (_QWORD *)a1[1];
      v260 = sub_1C6367818(v259, 0x11u);
      v263 = v259[104];
      if (v263)
        LOWORD(v263) = *(_WORD *)(v263 + 8);
      v264 = sub_1C5D58E08((uint64_t)v259, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v113, v345, v350, v262, (uint64_t)v347, v352, v260, v261, SHIDWORD(v261), v263);
      v266 = v265;
      v267 = (_QWORD *)a1[1];
      v268 = sub_1C6367818(v267, 0x14u);
      v271 = v267[104];
      if (v271)
        LOWORD(v271) = *(_WORD *)(v271 + 8);
      v272 = sub_1C5D58E08((uint64_t)v267, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v113, v339, v340, v270, (uint64_t)v347, v352, v268, v269, SHIDWORD(v269), v271);
      v275 = a1[1];
      v276 = *(_QWORD *)(v275 + 832);
      if (v276)
        LOWORD(v276) = *(_WORD *)(v276 + 8);
      v277 = sub_1C5D56C70(v275, 171, (const llvm::APInt *)&v372, v107, v113, (uint64_t)v264, v266, v274, (uint64_t)v272, v273, v276);
      v280 = *(_QWORD *)(v275 + 832);
      if (v280)
        LOWORD(v280) = *(_WORD *)(v280 + 8);
      v152 = sub_1C5D56C70(v275, 172, (const llvm::APInt *)&v372, v107, v113, (uint64_t)v256, v258, v279, (uint64_t)v277, v278, v280);
      v282 = v281;
      v283 = (_QWORD *)a1[1];
      v284 = sub_1C6367818(v283, 0x14u);
      v287 = v283[104];
      v338 = v282;
      if (v287)
        LOWORD(v287) = *(_WORD *)(v287 + 8);
      v160 = sub_1C5D58E08((uint64_t)v283, (const char *)0xC1, (const llvm::APInt *)&v372, v116, v113, v345, v350, v286, v342, v341, v284, v285, SHIDWORD(v285), v287);
      v162 = v288;
      v289 = (_QWORD *)a1[1];
      v290 = sub_1C6367818(v289, 0x11u);
      v293 = v289[104];
      if (v293)
        LOWORD(v293) = *(_WORD *)(v293 + 8);
      v168 = sub_1C5D58E08((uint64_t)v289, (const char *)0xC1, (const llvm::APInt *)&v372, v116, v113, v345, v350, v292, v342, v341, v290, v291, SHIDWORD(v291), v293);
      v170 = v294;
      v295 = (_QWORD *)a1[1];
      v296 = sub_1C6367818(v295, 0x13u);
      v299 = v295[104];
      if (v299)
        LOWORD(v299) = *(_WORD *)(v299 + 8);
      v176 = sub_1C5D58E08((uint64_t)v295, (const char *)0xC1, (const llvm::APInt *)&v372, v116, v113, v339, v340, v298, (uint64_t)v347, v352, v296, v297, SHIDWORD(v297), v299);
    }
    else
    {
      v109 = v62;
      v110 = ~(v8 - v16);
      v111 = a1[1];
      v112 = v109 + v110;
      v361 = v109;
      v113 = v106;
      if (v109 > 0x40)
      {
        v114 = v109;
        llvm::APInt::initSlowCase((llvm::APInt *)&v360, 0, 0);
        v115 = v361;
      }
      else
      {
        v360 = 0;
        v114 = v109;
        v115 = v109;
      }
      v116 = v107;
      sub_1C4912E54(&v360, v112 + v115, v115);
      v117 = sub_1C63666FC(v111, (llvm::LLVMContext *)&v360, (const llvm::APInt *)&v372, v370, *((uint64_t *)&v370 + 1), 0, 0);
      v335 = v118;
      v336 = v117;
      if (v361 >= 0x41 && v360)
        MEMORY[0x1CAA32F9C](v360, 0x1000C8000313F17);
      v119 = a1[1];
      v120 = v110 + v8;
      v361 = v114;
      if (v114 > 0x40)
        llvm::APInt::initSlowCase((llvm::APInt *)&v360, 0, 0);
      else
        v360 = 0;
      sub_1C4912E54(&v360, 0, v120);
      v121 = sub_1C63666FC(v119, (llvm::LLVMContext *)&v360, (const llvm::APInt *)&v372, v370, *((uint64_t *)&v370 + 1), 0, 0);
      v123 = v122;
      if (v361 >= 0x41 && v360)
        MEMORY[0x1CAA32F9C](v360, 0x1000C8000313F17);
      v124 = (_QWORD *)a1[1];
      v125 = sub_1C6367818(v124, 0x12u);
      v128 = v124[104];
      if (v128)
        LOWORD(v128) = *(_WORD *)(v128 + 8);
      v337 = sub_1C5D58E08((uint64_t)v124, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v113, v345, v350, v127, (uint64_t)v347, v352, v125, v126, SHIDWORD(v126), v128);
      v334 = v129;
      v130 = (_QWORD *)a1[1];
      v131 = sub_1C6367818(v130, 0x11u);
      v134 = v130[104];
      if (v134)
        LOWORD(v134) = *(_WORD *)(v134 + 8);
      v135 = sub_1C5D58E08((uint64_t)v130, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v113, v345, v350, v133, (uint64_t)v347, v352, v131, v132, SHIDWORD(v132), v134);
      v137 = v136;
      v138 = (_QWORD *)a1[1];
      v139 = sub_1C6367818(v138, 0xAu);
      v142 = v138[104];
      if (v142)
        LOWORD(v142) = *(_WORD *)(v142 + 8);
      v143 = sub_1C5D58E08((uint64_t)v138, (const char *)0xC1, (const llvm::APInt *)&v372, v107, v113, v339, v340, v141, v121, v123, v139, v140, SHIDWORD(v140), v142);
      v146 = a1[1];
      v147 = *(_QWORD *)(v146 + 832);
      if (v147)
        LOWORD(v147) = *(_WORD *)(v147 + 8);
      v148 = sub_1C5D56C70(v146, 171, (const llvm::APInt *)&v372, v107, v113, (uint64_t)v135, v137, v145, (uint64_t)v143, v144, v147);
      v151 = *(_QWORD *)(v146 + 832);
      if (v151)
        LOWORD(v151) = *(_WORD *)(v151 + 8);
      v152 = sub_1C5D56C70(v146, 172, (const llvm::APInt *)&v372, v107, v113, (uint64_t)v337, v334, v150, (uint64_t)v148, v149, v151);
      v154 = v153;
      v155 = (_QWORD *)a1[1];
      v156 = sub_1C6367818(v155, 0x14u);
      v159 = v155[104];
      v338 = v154;
      if (v159)
        LOWORD(v159) = *(_WORD *)(v159 + 8);
      v160 = sub_1C5D58E08((uint64_t)v155, (const char *)0xC1, (const llvm::APInt *)&v372, v116, v113, v345, v350, v158, v342, v341, v156, v157, SHIDWORD(v157), v159);
      v162 = v161;
      v163 = (_QWORD *)a1[1];
      v164 = sub_1C6367818(v163, 0x11u);
      v167 = v163[104];
      if (v167)
        LOWORD(v167) = *(_WORD *)(v167 + 8);
      v168 = sub_1C5D58E08((uint64_t)v163, (const char *)0xC1, (const llvm::APInt *)&v372, v116, v113, v345, v350, v166, v342, v341, v164, v165, SHIDWORD(v165), v167);
      v170 = v169;
      v171 = (_QWORD *)a1[1];
      v172 = sub_1C6367818(v171, 0xCu);
      v175 = v171[104];
      if (v175)
        LOWORD(v175) = *(_WORD *)(v175 + 8);
      v176 = sub_1C5D58E08((uint64_t)v171, (const char *)0xC1, (const llvm::APInt *)&v372, v116, v113, v339, v340, v174, v336, v335, v172, v173, SHIDWORD(v173), v175);
    }
    v300 = a1[1];
    v301 = *(_QWORD *)(v300 + 832);
    if (v301)
      LOWORD(v301) = *(_WORD *)(v301 + 8);
    v302 = sub_1C5D56C70(v300, 171, (const llvm::APInt *)&v372, v116, v113, (uint64_t)v168, v170, v178, (uint64_t)v176, v177, v301);
    v305 = *(_QWORD *)(v300 + 832);
    if (v305)
      LOWORD(v305) = *(_WORD *)(v305 + 8);
    v237 = v338;
    v234 = sub_1C5D56C70(v300, 172, (const llvm::APInt *)&v372, v116, v113, (uint64_t)v160, v162, v304, (uint64_t)v302, v303, v305);
    v236 = v306;
LABEL_139:
    v307 = v237;
    v361 = v114;
    if (v114 > 0x40)
    {
      v310 = &v360;
      llvm::APInt::initSlowCase((llvm::APInt *)&v360, -1, 1);
      v309 = v114;
      LODWORD(v308) = v114 - 1;
      if (v361 >= 0x41)
        v310 = (unint64_t *)(v360 + 8 * (v308 >> 6));
    }
    else
    {
      if (v114)
        v308 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v114;
      else
        v308 = 0;
      v360 = v308;
      LOBYTE(v308) = v114 - 1;
      v309 = v114;
      v310 = &v360;
    }
    *v310 &= ~(1 << v308);
    v359 = v309;
    if (v309 > 0x40)
    {
      llvm::APInt::initSlowCase((llvm::APInt *)&v358, -1, 1);
    }
    else
    {
      if (v309)
        v311 = 0xFFFFFFFFFFFFFFFFLL >> -(char)v309;
      else
        v311 = 0;
      v358 = v311;
    }
    v312 = a1[1];
    v313 = v370;
    v314 = sub_1C63666FC(v312, (llvm::LLVMContext *)&v360, (const llvm::APInt *)&v372, v370, *((uint64_t *)&v370 + 1), 0, 0);
    *(_QWORD *)a4 = sub_1C4815A8C(v312, (const llvm::APInt *)&v372, (llvm *)v313, *((uint64_t *)&v313 + 1), (uint64_t)v152, v307, v314, v315, *(_QWORD *)a4, *(_QWORD *)(a4 + 8), HIDWORD(*(_QWORD *)(a4 + 8)));
    *(_DWORD *)(a4 + 8) = v316;
    v317 = a1[1];
    v318 = v370;
    v319 = sub_1C63666FC(v317, (llvm::LLVMContext *)&v358, (const llvm::APInt *)&v372, v370, *((uint64_t *)&v370 + 1), 0, 0);
    *(_QWORD *)a3 = sub_1C4815A8C(v317, (const llvm::APInt *)&v372, (llvm *)v318, *((uint64_t *)&v318 + 1), (uint64_t)v152, v307, v319, v320, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), HIDWORD(*(_QWORD *)(a3 + 8)));
    *(_DWORD *)(a3 + 8) = v321;
    v357 = v309;
    if (v309 > 0x40)
    {
      v322 = (uint64_t)v347;
      v324 = &v356;
      llvm::APInt::initSlowCase((llvm::APInt *)&v356, 0, 0);
      v323 = v309 - 1;
      if (v357 >= 0x41)
        v324 = (uint64_t *)(v356 + 8 * (v323 >> 6));
    }
    else
    {
      v322 = (uint64_t)v347;
      v356 = 0;
      LOBYTE(v323) = v309 - 1;
      v324 = &v356;
    }
    *v324 |= 1 << v323;
    v325 = a1[1];
    v326 = v370;
    v327 = sub_1C63666FC(v325, (llvm::LLVMContext *)&v356, (const llvm::APInt *)&v372, v370, *((uint64_t *)&v370 + 1), 0, 0);
    *(_QWORD *)a4 = sub_1C4815A8C(v325, (const llvm::APInt *)&v372, (llvm *)v326, *((uint64_t *)&v326 + 1), (uint64_t)v234, v236, v327, v328, *(_QWORD *)a4, *(_QWORD *)(a4 + 8), HIDWORD(*(_QWORD *)(a4 + 8)));
    *(_DWORD *)(a4 + 8) = v329;
    *(_QWORD *)a3 = sub_1C4815A8C(a1[1], (const llvm::APInt *)&v372, (llvm *)v370, *((uint64_t *)&v370 + 1), (uint64_t)v234, v236, v322, v352, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), HIDWORD(*(_QWORD *)(a3 + 8)));
    *(_DWORD *)(a3 + 8) = v330;
    if (v357 >= 0x41 && v356)
      MEMORY[0x1CAA32F9C](v356, 0x1000C8000313F17);
    if (v359 >= 0x41 && v358)
      MEMORY[0x1CAA32F9C](v358, 0x1000C8000313F17);
    if (v361 >= 0x41 && v360)
      MEMORY[0x1CAA32F9C](v360, 0x1000C8000313F17);
  }
LABEL_30:
  if (v374 != (char *)v375 + 8)
    free(v374);
LABEL_44:
  if (v372)
    llvm::MetadataTracking::untrack((uint64_t)&v372, v372);
}

uint64_t *sub_1C5CEAD84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  unsigned __int8 *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int *v15;
  uint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned int *v25;
  uint64_t v26;
  unsigned int v27;
  uint64_t *result;
  unsigned __int8 *v29;
  int v30;

  v8 = *(unsigned __int8 **)(a2 + 64);
  v29 = v8;
  if (v8)
    llvm::MetadataTracking::track((uint64_t)&v29, v8, 2);
  v30 = *(_DWORD *)(a2 + 60);
  v9 = *(uint64_t **)(a2 + 32);
  v10 = *v9;
  v11 = v9[1];
  v12 = v9[5];
  v13 = v9[6];
  v14 = *(_QWORD *)(v9[10] + 80);
  v15 = (unsigned int *)(v14 + 24);
  if (*(_DWORD *)(v14 + 32) >= 0x41u)
    v15 = *(unsigned int **)v15;
  v16 = sub_1C5DA21E8(*(uint64_t **)a1, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v29, v10, v11, v12, v13, *v15, *(_QWORD *)(a1 + 8));
  v18 = v17;
  if (v16)
  {
    v26 = (uint64_t)v16;
  }
  else
  {
    v19 = *(uint64_t **)(a2 + 32);
    v20 = *v19;
    v21 = v19[1];
    v22 = v19[5];
    v23 = v19[6];
    v24 = *(_QWORD *)(v19[10] + 80);
    v25 = (unsigned int *)(v24 + 24);
    if (*(_DWORD *)(v24 + 32) >= 0x41u)
      v25 = *(unsigned int **)v25;
    v26 = sub_1C5CE6350(a2, v20, v21, v22, v23, *v25, *(uint64_t **)a1, *(_QWORD *)(a1 + 8), 0);
    v18 = v18 & 0xFFFFFFFF00000000 | v27;
  }
  result = sub_1C63483FC((uint64_t *)a1, v26, v18, a3, a4);
  if (v29)
    return (uint64_t *)llvm::MetadataTracking::untrack((uint64_t)&v29, v29);
  return result;
}

void *sub_1C5CEAEA4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t **a4)
{
  uint64_t v8;
  llvm *v9;
  uint64_t v10;
  llvm::EVT *v11;
  const char *v12;
  llvm::Type *v13;
  llvm::LLVMContext *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned int ExtendedSizeInBits;
  const char *v20;
  unint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int16 v31;
  uint64_t *v32;
  uint64_t v33;
  unsigned int v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  void *result;
  uint64_t ExtendedIntegerVT;
  size_t v45;
  unsigned int v46;
  uint64_t v47;
  uint64_t v48;
  void *v49;
  unsigned int v50;
  void *__src;
  unsigned int v52;
  unsigned __int8 *v53;
  int v54;
  unint64_t v55;
  uint64_t v56;

  v8 = *(_QWORD *)(a2 + 40);
  v9 = *(llvm **)v8;
  v10 = *(_QWORD *)(v8 + 8);
  v11 = *(llvm::EVT **)(a1[1] + 56);
  v13 = sub_1C4916CF4(a2, 0);
  if ((_DWORD)v12 == 1)
  v14 = (llvm::LLVMContext *)((unint64_t)v13 >> 1);
  if ((int)((unint64_t)v13 >> 1) <= 31)
  {
    switch((_DWORD)v14)
    {
      case 1:
        v15 = 0;
        v16 = 0;
        v17 = 2;
        goto LABEL_14;
      case 0x10:
        v15 = 0;
        v16 = 0;
        v17 = 4;
        goto LABEL_14;
      case 8:
        v15 = 0;
        v16 = 0;
        v17 = 3;
        goto LABEL_14;
    }
  }
  else
  {
    switch((_DWORD)v14)
    {
      case 0x20:
        v15 = 0;
        v16 = 0;
        v17 = 5;
        goto LABEL_14;
      case 0x40:
        v15 = 0;
        v16 = 0;
        v17 = 6;
        goto LABEL_14;
      case 0x80:
        v15 = 0;
        v16 = 0;
        v17 = 7;
        goto LABEL_14;
    }
  }
  ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(v11, v14);
  v15 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
  v17 = ExtendedIntegerVT;
LABEL_14:
  v55 = v17 | v15;
  v56 = v16;
  v18 = *(unsigned __int8 **)(a2 + 64);
  v53 = v18;
  if (v18)
    llvm::MetadataTracking::track((uint64_t)&v53, v18, 2);
  v54 = *(_DWORD *)(a2 + 60);
  if (v17)
    ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v55);
  else
    ExtendedSizeInBits = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v55);
  if ((_DWORD)v20 == 1)
  {
    v46 = ExtendedSizeInBits;
    ExtendedSizeInBits = v46;
  }
  v52 = ExtendedSizeInBits;
  if (ExtendedSizeInBits > 0x40)
  {
    llvm::APInt::initSlowCase((llvm::APInt *)&__src, 1, 0);
    v23 = a1[1];
    v24 = v55;
    v25 = v56;
    v50 = v52;
    if (v52 > 0x40)
    {
      v45 = (((unint64_t)v52 + 63) >> 3) & 0x3FFFFFF8;
      v47 = v56;
      v48 = v55;
      v49 = (void *)operator new[]();
      memcpy(v49, __src, v45);
      v25 = v47;
      v24 = v48;
      goto LABEL_26;
    }
    v22 = __src;
  }
  else
  {
    v21 = 0xFFFFFFFFFFFFFFFFLL >> -(char)ExtendedSizeInBits;
    if (!ExtendedSizeInBits)
      LOBYTE(v21) = 0;
    v22 = (void *)(v21 & 1);
    __src = v22;
    v23 = a1[1];
    v24 = v55;
    v25 = v56;
    v50 = ExtendedSizeInBits;
  }
  v49 = v22;
LABEL_26:
  v26 = sub_1C5C9E150(v23, (const llvm::APInt *)&v53, v24, v25, (llvm::APInt *)&v49);
  v28 = v27;
  if (v50 >= 0x41 && v49)
    MEMORY[0x1CAA32F9C](v49, 0x1000C8000313F17);
  v29 = a1[1];
  v30 = *(_QWORD *)(v29 + 832);
  if (v30)
    v31 = *(_WORD *)(v30 + 8);
  else
    v31 = 0;
  v32 = sub_1C5D52060(v29, 199, (const llvm::APInt *)&v53, v9, v10, v26, v28, v31);
  v35 = v28 & 0xFFFFFFFF00000000 | v34;
  v36 = a1[1];
  v37 = *(uint64_t **)(a2 + 32);
  v38 = *v37;
  v39 = v37[1];
  v40 = *(_QWORD *)(v36 + 832);
  if (v40)
    LOWORD(v40) = *(_WORD *)(v40 + 8);
  v41 = sub_1C5D56C70(v36, 58, (const llvm::APInt *)&v53, v9, v10, (uint64_t)v32, v35, v33, v38, v39, v40);
  result = sub_1C63483FC(a1, (uint64_t)v41, v42, a3, a4);
  if (v52 >= 0x41)
  {
    result = __src;
    if (__src)
      result = (void *)MEMORY[0x1CAA32F9C](__src, 0x1000C8000313F17);
  }
  if (v53)
    return (void *)llvm::MetadataTracking::untrack((uint64_t)&v53, v53);
  return result;
}

void sub_1C5CEB1E4(uint64_t a1@<X0>, unsigned int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  unint64_t v7;
  size_t v8;
  void *v9;

  v6 = *(unsigned int *)(a1 + 8);
  *(_DWORD *)(a3 + 8) = v6;
  if (v6 > 0x40)
  {
    v7 = v6 + 63;
    v8 = ((unint64_t)(v6 + 63) >> 3) & 0x3FFFFFF8;
    v9 = (void *)operator new[]();
    *(_QWORD *)a3 = v9;
    memcpy(v9, *(const void **)a1, v8);
    llvm::APInt::tcShiftRight((llvm::APInt *)v9, (unint64_t *)(v7 >> 6), a2);
  }
  else if ((_DWORD)v6 == a2)
  {
    *(_QWORD *)a3 = 0;
  }
  else
  {
    *(_QWORD *)a3 = *(_QWORD *)a1 >> a2;
  }
}

_QWORD *sub_1C5CEB29C(unsigned __int8 *a1, unsigned int *a2, uint64_t a3, uint64_t a4, const llvm::APInt *a5)
{
  llvm::PointerType *v7;
  llvm::PointerType *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  char *v15;
  uint64_t *v16;
  int v17;
  char *v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unsigned __int8 v39;
  _QWORD *v40;
  unsigned int v41;
  _QWORD *v42;
  unsigned int v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  __int128 v51;
  char *v52;
  unsigned __int8 v53;
  size_t v54;
  int v55;
  int v56;
  unsigned __int8 *v57;
  char *v58;
  int v59;
  uint64_t v60;
  __int128 v61;
  _QWORD *v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v69;
  llvm::PointerType *v70;
  _QWORD *v72;
  uint64_t v73;
  _QWORD v74[2];
  _OWORD v75[2];
  __int128 v76;
  __int128 v77;
  _BYTE v78[20];
  size_t v79;
  int v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  unsigned __int8 *v85;
  int v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD v90[194];
  _QWORD v91[66];
  _QWORD v92[194];
  _BYTE v93[96];
  uint64_t v94;

  v94 = *MEMORY[0x1E0C80C00];
  v72 = (_QWORD *)(a3 + 112);
  v76 = *(_OWORD *)(*(_QWORD *)(**(_QWORD **)(a4 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a4 + 32) + 8));
  llvm::EVT::getTypeForEVT((llvm::EVT *)&v76, *(llvm::LLVMContext **)(a3 + 56));
  v8 = v7;
  v9 = sub_1C5D44240(a3, v76, *((uint64_t *)&v76 + 1), 1u);
  v11 = v10;
  v70 = v8;
  v12 = llvm::PointerType::get(v8, 0);
  v13 = (char *)operator new(0x30uLL);
  v14 = v13;
  v15 = v13 + 48;
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = v9;
  v65 = v11;
  v66 = v9;
  *((_QWORD *)v13 + 2) = v11;
  *((_QWORD *)v13 + 3) = v12;
  *((_DWORD *)v13 + 8) = 0;
  *((_QWORD *)v13 + 5) = 0;
  v16 = *(uint64_t **)(a4 + 32);
  if (!*(_WORD *)(a4 + 56))
  {
    v17 = 0;
    v18 = v13 + 48;
    goto LABEL_24;
  }
  v64 = a4;
  v19 = 0;
  v69 = &v16[5 * *(unsigned __int16 *)(a4 + 56)];
  v18 = v13 + 48;
  do
  {
    v20 = sub_1C5D44240(a3, v76, *((uint64_t *)&v76 + 1), 1u);
    v22 = v21;
    v23 = *v16;
    v24 = v16[1];
    v77 = 0u;
    *(_OWORD *)v78 = 0u;
    memset(v75, 0, 21);
    v25 = (uint64_t *)(*(_QWORD *)(v23 + 40) + 16 * v24);
    sub_1C6365BD8(a3, *v25, v25[1]);
    v72 = sub_1C636B75C(a3, (uint64_t)v72, v19, (uint64_t)a5, v23, v24, v20, v22, (uint64_t)v75, v26, 0, 0, (uint64_t)&v77);
    v17 = v27;
    v28 = llvm::PointerType::get(v70, 0);
    v29 = v28;
    if (v15 < v18)
    {
      *(_QWORD *)v15 = 0;
      *((_QWORD *)v15 + 1) = v20;
      *((_DWORD *)v15 + 4) = v22;
      *((_DWORD *)v15 + 5) = 0;
      *((_QWORD *)v15 + 3) = v28;
      *((_DWORD *)v15 + 8) = 0;
      *((_QWORD *)v15 + 5) = 0;
      v15 += 48;
      goto LABEL_22;
    }
    v30 = 0xAAAAAAAAAAAAAAABLL * ((v15 - v14) >> 4) + 1;
    if (v30 > 0x555555555555555)
      goto LABEL_48;
    if (0x5555555555555556 * ((v18 - v14) >> 4) > v30)
      v30 = 0x5555555555555556 * ((v18 - v14) >> 4);
    if (0xAAAAAAAAAAAAAAABLL * ((v18 - v14) >> 4) >= 0x2AAAAAAAAAAAAAALL)
      v31 = 0x555555555555555;
    else
      v31 = v30;
    if (v31)
    {
      if (v31 > 0x555555555555555)
        goto LABEL_49;
      v32 = (char *)operator new(48 * v31);
    }
    else
    {
      v32 = 0;
    }
    v33 = &v32[16 * ((v15 - v14) >> 4)];
    *(_QWORD *)v33 = 0;
    *((_QWORD *)v33 + 1) = v20;
    *((_DWORD *)v33 + 4) = v22;
    *((_DWORD *)v33 + 5) = 0;
    v18 = &v32[48 * v31];
    *((_QWORD *)v33 + 3) = v29;
    *((_DWORD *)v33 + 8) = 0;
    *((_QWORD *)v33 + 5) = 0;
    v34 = v33 + 48;
    if (v15 == v14)
    {
      v14 = v15;
    }
    else
    {
      do
      {
        v35 = *((_OWORD *)v15 - 3);
        v36 = *((_OWORD *)v15 - 1);
        *((_OWORD *)v33 - 2) = *((_OWORD *)v15 - 2);
        *((_OWORD *)v33 - 1) = v36;
        *((_OWORD *)v33 - 3) = v35;
        v33 -= 48;
        v15 -= 48;
      }
      while (v15 != v14);
      if (!v14)
        goto LABEL_21;
    }
    operator delete(v14);
LABEL_21:
    v14 = v33;
    v15 = v34;
LABEL_22:
    v19 = v17;
    v16 += 5;
  }
  while (v16 != v69);
  v16 = *(uint64_t **)(v64 + 32);
LABEL_24:
  v77 = *(_OWORD *)(*(_QWORD *)(*v16 + 40) + 16 * *((unsigned int *)v16 + 2));
  llvm::EVT::getTypeForEVT((llvm::EVT *)&v77, *(llvm::LLVMContext **)(a3 + 56));
  v38 = (unint64_t)*(unsigned int *)(v37 + 8) >> 8;
  v39 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, _QWORD))(*(_QWORD *)a1 + 32))(a1, *(_QWORD *)(**(_QWORD **)(a3 + 40) + 40) + 272, 0);
  v40 = sub_1C6366AB4(a3, v38, a5, (llvm *)v39, 0, 0, 0);
  v42 = v40;
  v43 = v41;
  v44 = **(_QWORD **)(a3 + 56) + 1960;
  if (v15 >= v18)
  {
    v46 = 0xAAAAAAAAAAAAAAABLL * ((v15 - v14) >> 4) + 1;
    if (v46 > 0x555555555555555)
LABEL_48:
      abort();
    if (0x5555555555555556 * ((v18 - v14) >> 4) > v46)
      v46 = 0x5555555555555556 * ((v18 - v14) >> 4);
    if (0xAAAAAAAAAAAAAAABLL * ((v18 - v14) >> 4) >= 0x2AAAAAAAAAAAAAALL)
      v47 = 0x555555555555555;
    else
      v47 = v46;
    if (v47)
    {
      if (v47 > 0x555555555555555)
LABEL_49:
        sub_1C4764EE4();
      v48 = (char *)operator new(48 * v47);
    }
    else
    {
      v48 = 0;
    }
    v49 = &v48[16 * ((v15 - v14) >> 4)];
    *(_QWORD *)v49 = 0;
    *((_QWORD *)v49 + 1) = v42;
    v18 = &v48[48 * v47];
    *((_DWORD *)v49 + 4) = v43;
    *((_DWORD *)v49 + 5) = 0;
    *((_QWORD *)v49 + 3) = v44;
    *((_DWORD *)v49 + 8) = 2;
    *((_QWORD *)v49 + 5) = 0;
    v45 = v49 + 48;
    if (v15 == v14)
      goto LABEL_39;
    do
    {
      v50 = *((_OWORD *)v15 - 3);
      v51 = *((_OWORD *)v15 - 1);
      *((_OWORD *)v49 - 2) = *((_OWORD *)v15 - 2);
      *((_OWORD *)v49 - 1) = v51;
      *((_OWORD *)v49 - 3) = v50;
      v49 -= 48;
      v15 -= 48;
    }
    while (v15 != v14);
    if (v14)
LABEL_39:
      operator delete(v14);
    v14 = v49;
  }
  else
  {
    *(_QWORD *)v15 = 0;
    *((_QWORD *)v15 + 1) = v40;
    *((_QWORD *)v15 + 2) = v41;
    *((_QWORD *)v15 + 3) = v44;
    *((_DWORD *)v15 + 8) = 2;
    v45 = v15 + 48;
    *((_QWORD *)v15 + 5) = 0;
  }
  v52 = *(char **)&a1[8 * *a2 + 174048];
  v53 = (*(uint64_t (**)(unsigned __int8 *, uint64_t, _QWORD))(*(_QWORD *)a1 + 32))(a1, *(_QWORD *)(**(_QWORD **)(a3 + 40) + 40) + 272, 0);
  v54 = sub_1C63675D8(a3, v52, v53, 0);
  v56 = v55;
  *(_QWORD *)&v77 = 0;
  DWORD2(v77) = 0;
  *(_QWORD *)v78 = 0;
  *(_DWORD *)&v78[8] = *(_WORD *)&v78[8] & 0xFC00 | 0x20;
  *(_QWORD *)&v78[12] = 0xFFFFFFFFLL;
  v79 = 0;
  v80 = 0;
  v81 = 0;
  v82 = 0;
  v83 = 0;
  v84 = a3;
  v85 = 0;
  v86 = 0;
  v87 = 0;
  v88 = v90;
  v89 = 0x2000000000;
  v90[192] = v91;
  v90[193] = 0x2000000000;
  v91[64] = v92;
  v91[65] = 0x2000000000;
  v92[192] = v93;
  v92[193] = 0x400000000;
  v93[64] = 0;
  v93[88] = 0;
  if (&v85 != (unsigned __int8 **)a5 && (v57 = *(unsigned __int8 **)a5, (v85 = v57) != 0))
  {
    llvm::MetadataTracking::track((uint64_t)&v85, v57, 2);
    v58 = v81;
  }
  else
  {
    v58 = 0;
  }
  v59 = *((_DWORD *)a5 + 2);
  *(_QWORD *)&v77 = v72;
  v86 = v59;
  DWORD2(v77) = v17;
  v60 = *(unsigned int *)&a1[4 * *a2 + 181700];
  *(_QWORD *)v78 = **(_QWORD **)(a3 + 56) + 1576;
  v79 = v54;
  v80 = v56;
  *(_DWORD *)&v78[12] = -1431655765 * ((unint64_t)(v45 - v14) >> 4);
  *(_DWORD *)&v78[16] = v60;
  if (v58)
  {
    v82 = v58;
    operator delete(v58);
  }
  v81 = v14;
  v82 = v45;
  v83 = v18;
  (***(void (****)(_QWORD, _QWORD, uint64_t, void **))(v84 + 24))(*(_QWORD *)(v84 + 24), *(_QWORD *)(v84 + 40), v60, (void **)&v81);
  *(_WORD *)&v78[8] &= ~0x20u;
  sub_1C5D1FE10(a1, (uint64_t)&v77, (uint64_t)v75);
  v61 = v75[1];
  v73 = 0;
  v74[0] = 0;
  *(_QWORD *)((char *)v74 + 5) = 0;
  memset(v75, 0, sizeof(v75));
  v62 = sub_1C63681B0(a3, v76, *((uint64_t *)&v76 + 1), (uint64_t)a5, v61, SDWORD2(v61), v66, v65, (__int128 *)&v73, 0, 0, 0, (uint64_t)v75, 0);
  sub_1C632CB64(&v77);
  return v62;
}

uint64_t *sub_1C5CEB918(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int16 v21;
  __int128 v22;
  unsigned __int8 *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  __int128 *v29;
  _QWORD *v30;
  int v31;
  uint64_t ExtendedSizeInBits;
  int v33;
  unsigned __int8 *v34;
  uint64_t *v35;
  uint64_t *v36;
  unsigned __int8 *v37;
  unsigned __int8 **v38;
  uint64_t v39;
  __int128 *v40;
  uint64_t v41;
  uint64_t *v42;
  const char *v43;
  int v44;
  uint64_t v45;
  const char *v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  const char *v50;
  uint64_t v51;
  int v52;
  llvm::EVT *v53;
  unsigned int v54;
  const char *v55;
  llvm::LLVMContext *v56;
  unint64_t v57;
  uint64_t v58;
  unsigned int v59;
  unint64_t v60;
  llvm::LLVMContext *v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  const char *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unsigned int v71;
  unsigned int v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  const char *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  uint64_t v86;
  llvm *v87;
  uint64_t v88;
  const char *v89;
  unint64_t v90;
  uint64_t v91;
  unsigned __int8 v92;
  _QWORD *v93;
  unint64_t v94;
  uint64_t v95;
  __int16 v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  llvm *v100;
  unint64_t v101;
  uint64_t v102;
  unsigned __int8 v103;
  _QWORD *v104;
  unint64_t v105;
  uint64_t v106;
  __int16 v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  __int128 *v114;
  _QWORD *v115;
  int v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  unsigned int v120;
  unsigned int v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  _QWORD *v125;
  uint64_t v126;
  int v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t ExtendedIntegerVT;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  uint64_t v144;
  unint64_t v145;
  uint64_t v146;
  __int16 v147;
  int v148;
  uint64_t v149;
  _BYTE v150[24];
  __int128 v151;
  uint64_t v152;
  _BYTE v153[24];
  __int128 v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  __int128 v158;
  uint64_t *v159;
  unint64_t v160;
  uint64_t v161;
  unint64_t v162;
  unsigned __int8 *v163;
  int v164;
  __int128 v165;
  __int128 v166;
  llvm *v167;
  uint64_t v168;

  v10 = *(_QWORD *)(a2 + 96);
  if ((*(_WORD *)(v10 + 36) & 0xF00) != 0)
  {
    v34 = *(unsigned __int8 **)(a2 + 64);
    *(_QWORD *)&v165 = v34;
    if (v34)
    {
      llvm::MetadataTracking::track((uint64_t)&v165, v34, 2);
      v10 = *(_QWORD *)(a2 + 96);
    }
    DWORD2(v165) = *(_DWORD *)(a2 + 60);
    v35 = *(uint64_t **)(a2 + 32);
    v36 = sub_1C636A7A0(a1[1], 294, (uint64_t)&v165, *(_QWORD *)(a2 + 80), *(_QWORD *)(a2 + 88), *v35, v35[1], a8, v35[10], v35[11], v35[5], v35[6], v10);
    v37 = (unsigned __int8 *)v165;
    if (!(_QWORD)v165)
      return v36;
    v38 = (unsigned __int8 **)&v165;
    goto LABEL_100;
  }
  if (*(_WORD *)(a2 + 24) == 254 && (*(_WORD *)(a2 + 26) & 0x780) == 0)
    return sub_1C6349074((uint64_t)a1, a2);
  v12 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 40)
      + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 48);
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *(_QWORD *)v12, *(_QWORD *)(v12 + 8), (uint64_t)&v165);
  v13 = *((_QWORD *)&v165 + 1);
  v14 = v166;
  v167 = (llvm *)*((_QWORD *)&v165 + 1);
  v168 = v166;
  v15 = *(uint64_t **)(a2 + 32);
  v16 = *v15;
  v17 = v15[1];
  v19 = v15[10];
  v18 = v15[11];
  v20 = *(_QWORD *)(a2 + 96);
  v21 = *(_WORD *)(v20 + 32);
  v22 = *(_OWORD *)(v20 + 56);
  v165 = *(_OWORD *)(v20 + 40);
  v166 = v22;
  v23 = *(unsigned __int8 **)(a2 + 64);
  v163 = v23;
  if (v23)
  {
    llvm::MetadataTracking::track((uint64_t)&v163, v23, 2);
    v13 = (uint64_t)v167;
    v14 = v168;
  }
  v164 = *(_DWORD *)(a2 + 60);
  v161 = 0;
  LODWORD(v162) = 0;
  LODWORD(v160) = 0;
  v24 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)&v158 = *(_QWORD *)(a2 + 80);
  *((_QWORD *)&v158 + 1) = v24;
  v159 = 0;
  if (v158 == v13 && ((_BYTE)v158 || v24 == v14))
  {
    v26 = *(_QWORD *)(a2 + 32);
    goto LABEL_19;
  }
  v25 = sub_1C632979C((unsigned __int8 *)&v158, v13, v14);
  v26 = *(_QWORD *)(a2 + 32);
  if (v25)
  {
LABEL_19:
    sub_1C6347954((uint64_t)a1, *(_QWORD *)(v26 + 40), *(_QWORD *)(v26 + 48), (uint64_t)&v161, (uint64_t)&v159);
    v39 = a1[1];
    v41 = *(_QWORD *)(a2 + 88);
    v40 = *(__int128 **)(a2 + 96);
    v156 = *v40;
    v157 = *((_QWORD *)v40 + 2);
    v42 = sub_1C636B9CC(v39, v16, v17, (uint64_t)&v163, v161, v162, v19, v18, (uint64_t)&v156, *(_QWORD *)(a2 + 80), v41, *((_BYTE *)v40 + 34), 0, v21, (uint64_t)&v165);
    goto LABEL_98;
  }
  v149 = v16;
  v27 = *(unsigned __int8 *)(*(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272);
  sub_1C6347954((uint64_t)a1, *(_QWORD *)(v26 + 40), *(_QWORD *)(v26 + 48), (uint64_t)&v161, (uint64_t)&v159);
  v148 = v17;
  v147 = v21;
  if (!v27)
  {
    v28 = a1[1];
    v29 = *(__int128 **)(a2 + 96);
    v154 = *v29;
    v155 = *((_QWORD *)v29 + 2);
    v30 = sub_1C636B75C(v28, v149, v17, (uint64_t)&v163, v161, v162, v19, v18, (uint64_t)&v154, *((_BYTE *)v29 + 34), 0, v21, (uint64_t)&v165);
    LODWORD(v162) = v31;
    v158 = *(_OWORD *)(a2 + 80);
    if ((_BYTE)v158)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v158);
    else
      ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v158);
    v47 = ExtendedSizeInBits;
    v48 = v33;
    if ((_BYTE)v167)
      v49 = sub_1C47A8C74((unsigned __int8 *)&v167);
    else
      v49 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v167);
    v56 = (llvm::LLVMContext *)(v47 - v49);
    if (v48 == 1)
    if ((int)v56 <= 31)
    {
      switch((_DWORD)v56)
      {
        case 1:
          v57 = 0;
          v141 = 0;
          v58 = 2;
          goto LABEL_58;
        case 0x10:
          v57 = 0;
          v141 = 0;
          v58 = 4;
          goto LABEL_58;
        case 8:
          v57 = 0;
          v141 = 0;
          v58 = 3;
          goto LABEL_58;
      }
    }
    else
    {
      switch((_DWORD)v56)
      {
        case 0x20:
          v57 = 0;
          v141 = 0;
          v58 = 5;
LABEL_58:
          v144 = (uint64_t)v30;
          if ((_BYTE)v167)
            v65 = sub_1C47A8C74((unsigned __int8 *)&v167);
          else
            v65 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v167);
          v67 = v65;
          v68 = v58 | v57;
          if ((_DWORD)v66 == 1)
          v69 = (v67 >> 3);
          v70 = sub_1C6369954(a1[1], v19, v18, v69, 0, (const llvm::APInt *)&v163, 3);
          v72 = v71;
          v73 = a1[1];
          v75 = (uint64_t)v159;
          v74 = v160;
          sub_1C4824250(*(uint64_t **)(a2 + 96), v69, (uint64_t)v153);
          v135 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 96) + 34);
          v76 = sub_1C636B9CC(v73, v149, v148, (uint64_t)&v163, v75, v74, (uint64_t)v70, v72, (uint64_t)v153, v68, v141, v135, SHIDWORD(v135), v147, (uint64_t)&v165);
          LODWORD(v160) = v78;
          v79 = a1[1];
          v80 = *(_QWORD *)(v79 + 832);
          if (v80)
            LOWORD(v80) = *(_WORD *)(v80 + 8);
          v42 = sub_1C5D56C70(v79, 2, (const llvm::APInt *)&v163, (llvm *)1, 0, v144, v162, v77, (uint64_t)v76, v160, v80);
          goto LABEL_98;
        case 0x40:
          v57 = 0;
          v141 = 0;
          v58 = 6;
          goto LABEL_58;
        case 0x80:
          v57 = 0;
          v141 = 0;
          v58 = 7;
          goto LABEL_58;
      }
    }
    ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a1[1] + 56), v56);
    v141 = v132;
    v57 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
    v58 = ExtendedIntegerVT;
    goto LABEL_58;
  }
  v158 = *(_OWORD *)(a2 + 80);
  v44 = sub_1C47C1C70((unsigned __int8 *)&v158);
  if ((_DWORD)v43 == 1)
  if ((_BYTE)v167)
    v45 = sub_1C47A8C74((unsigned __int8 *)&v167);
  else
    v45 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v167);
  v51 = v45;
  if ((_DWORD)v46 == 1)
  v140 = v51;
  v52 = v44 - (v51 >> 3);
  v53 = *(llvm::EVT **)(a1[1] + 56);
  if ((_BYTE)v158)
    v54 = sub_1C47A8C74((unsigned __int8 *)&v158);
  else
    v54 = llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v158);
  v59 = v54;
  v60 = (8 * v52);
  if ((_DWORD)v55 == 1)
  v61 = (llvm::LLVMContext *)(v59 - v60);
  v62 = v149;
  if ((int)v61 <= 31)
  {
    switch((_DWORD)v61)
    {
      case 1:
        v63 = 0;
        v139 = 0;
        v64 = 2;
        goto LABEL_68;
      case 0x10:
        v63 = 0;
        v139 = 0;
        v64 = 4;
        goto LABEL_68;
      case 8:
        v63 = 0;
        v139 = 0;
        v64 = 3;
        goto LABEL_68;
    }
  }
  else
  {
    switch((_DWORD)v61)
    {
      case 0x20:
        v63 = 0;
        v139 = 0;
        v64 = 5;
        goto LABEL_68;
      case 0x40:
        v63 = 0;
        v139 = 0;
        v64 = 6;
        goto LABEL_68;
      case 0x80:
        v63 = 0;
        v139 = 0;
        v64 = 7;
        goto LABEL_68;
    }
  }
  v133 = llvm::EVT::getExtendedIntegerVT(v53, v61);
  v139 = v134;
  v63 = v133 & 0xFFFFFFFFFFFFFF00;
  v64 = v133;
LABEL_68:
  if ((_BYTE)v167)
    v81 = sub_1C47A8C74((unsigned __int8 *)&v167);
  else
    v81 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v167);
  v83 = v81;
  if ((_DWORD)v82 == 1)
  v84 = v64 | v63;
  v85 = v159;
  v86 = a1[1];
  if (v83 <= v60)
  {
    LODWORD(v143) = v162;
    v146 = v161;
    v90 = v140;
  }
  else
  {
    v138 = v84;
    v87 = v167;
    v142 = v168;
    v145 = v160;
    if ((_BYTE)v167)
      v88 = sub_1C47A8C74((unsigned __int8 *)&v167);
    else
      v88 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v167);
    v91 = v88;
    if ((_DWORD)v89 == 1)
    v92 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, 0);
    v93 = sub_1C6366AB4(v86, v91 - v60, (const llvm::APInt *)&v163, (llvm *)v92, 0, 0, 0);
    v96 = 0;
    v97 = *(_QWORD *)(v86 + 832);
    if (v97)
      v96 = *(_WORD *)(v97 + 8);
    v137 = sub_1C5D56C70(v86, 175, (const llvm::APInt *)&v163, v87, v142, (uint64_t)v85, v145, v95, (uint64_t)v93, v94, v96);
    LODWORD(v160) = v98;
    v100 = v167;
    v99 = v168;
    v101 = v160;
    v143 = v162;
    v146 = v161;
    v102 = a1[1];
    v103 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(v102 + 40) + 40) + 272, 0);
    v104 = sub_1C6366AB4(v102, v60, (const llvm::APInt *)&v163, (llvm *)v103, 0, 0, 0);
    v107 = 0;
    v108 = *(_QWORD *)(v102 + 832);
    v90 = v140;
    if (v108)
      v107 = *(_WORD *)(v108 + 8);
    v109 = sub_1C5D56C70(v102, 177, (const llvm::APInt *)&v163, v100, v99, v146, v143, v106, (uint64_t)v104, v105, v107);
    v112 = *(_QWORD *)(v102 + 832);
    if (v112)
      LOWORD(v112) = *(_WORD *)(v112 + 8);
    v85 = sub_1C5D56C70(v102, 172, (const llvm::APInt *)&v163, v100, v99, (uint64_t)v137, v101, v111, (uint64_t)v109, v110, v112);
    LODWORD(v160) = v113;
    v86 = a1[1];
    v84 = v138;
    v62 = v149;
  }
  v114 = *(__int128 **)(a2 + 96);
  v151 = *v114;
  v152 = *((_QWORD *)v114 + 2);
  v115 = sub_1C636B9CC(v86, v62, v148, (uint64_t)&v163, (uint64_t)v85, v160, v19, v18, (uint64_t)&v151, v84, v139, *((_BYTE *)v114 + 34), 0, v147, (uint64_t)&v165);
  LODWORD(v160) = v116;
  v117 = (v90 >> 3);
  v118 = 3;
  v119 = sub_1C6369954(a1[1], v19, v18, v117, 0, (const llvm::APInt *)&v163, 3);
  v121 = v120;
  v122 = a1[1];
  sub_1C4824250(*(uint64_t **)(a2 + 96), v117, (uint64_t)v150);
  if ((int)v60 > 63)
  {
    if ((_DWORD)v60 == 64)
    {
      v123 = 0;
      v124 = 0;
      v118 = 6;
      goto LABEL_95;
    }
    if ((_DWORD)v60 == 128)
    {
      v123 = 0;
      v124 = 0;
      v118 = 7;
      goto LABEL_95;
    }
LABEL_108:
    v130 = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a1[1] + 56), (llvm::LLVMContext *)v60);
    v123 = v130 & 0xFFFFFFFFFFFFFF00;
    v118 = v130;
    goto LABEL_95;
  }
  if ((_DWORD)v60 != 32)
  {
    if ((_DWORD)v60 == 16)
    {
      v123 = 0;
      v124 = 0;
      v118 = 4;
      goto LABEL_95;
    }
    v123 = 0;
    v124 = 0;
    if ((_DWORD)v60 == 8)
      goto LABEL_95;
    goto LABEL_108;
  }
  v123 = 0;
  v124 = 0;
  v118 = 5;
LABEL_95:
  v136 = *(unsigned __int8 *)(*(_QWORD *)(a2 + 96) + 34);
  v125 = sub_1C636B9CC(v122, v62, v148, (uint64_t)&v163, v146, v143, (uint64_t)v119, v121, (uint64_t)v150, v118 | v123, v124, v136, SHIDWORD(v136), v147, (uint64_t)&v165);
  LODWORD(v162) = v127;
  v128 = a1[1];
  v129 = *(_QWORD *)(v128 + 832);
  if (v129)
    LOWORD(v129) = *(_WORD *)(v129 + 8);
  v42 = sub_1C5D56C70(v128, 2, (const llvm::APInt *)&v163, (llvm *)1, 0, (uint64_t)v125, v162, v126, (uint64_t)v115, v160, v129);
LABEL_98:
  v36 = v42;
  v37 = v163;
  if (v163)
  {
    v38 = &v163;
LABEL_100:
    llvm::MetadataTracking::untrack((uint64_t)v38, v37);
  }
  return v36;
}

uint64_t *sub_1C5CEC32C(uint64_t a1, uint64_t *a2, uint64_t *a3, unsigned int *a4, const llvm::APInt *a5)
{
  uint64_t *v7;
  unsigned int **v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  BOOL v14;
  uint64_t v15;
  unsigned int v16;
  llvm::APInt *v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t *result;
  int v37;
  int v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  unsigned int *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  llvm *v51;
  int v52;
  uint64_t v53;
  uint64_t *v54;
  unsigned int v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  unsigned int *v68;
  uint64_t v69;
  uint64_t v70;
  llvm *v71;
  uint64_t v72;
  uint64_t v73;
  unsigned int v74;
  uint64_t v75;
  unsigned int v76;
  uint64_t v77;
  llvm *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unsigned int v85;
  int v86;
  uint64_t *v87;
  int v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t *v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int *v94;
  uint64_t *v95;
  int v96;
  unsigned int v97;
  BOOL v98;
  unsigned int v99;
  _BOOL8 *v100;
  uint64_t v101;
  BOOL v102;
  unint64_t v103;
  int v104;
  uint64_t v105;
  uint64_t v106;
  unsigned int *v107;
  llvm *v108;
  uint64_t v109;
  uint64_t *v110;
  int v111;
  unsigned int v112;
  uint64_t v113;
  llvm *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  int v124;
  uint64_t v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  llvm *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unsigned int **v148;
  uint64_t v149;
  uint64_t v150;
  int v151;
  int v152;
  int v153;
  uint64_t v154;
  int v155;
  uint64_t v156;
  uint64_t v157;
  unsigned int v158;
  uint64_t v159;
  _BOOL8 v160;
  unint64_t v161;
  int v162;
  llvm *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v167;
  int v168;
  char v169;
  uint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  unint64_t v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;

  v7 = a2;
  v8 = (unsigned int **)a1;
  *(_QWORD *)&v176 = 0;
  DWORD2(v176) = 0;
  *(_QWORD *)&v175 = 0;
  DWORD2(v175) = 0;
  v173 = 0;
  LODWORD(v174) = 0;
  v171 = 0;
  LODWORD(v172) = 0;
  sub_1C6347954(a1, *a2, a2[1], (uint64_t)&v176, (uint64_t)&v175);
  sub_1C6347954((uint64_t)v8, *a3, a3[1], (uint64_t)&v173, (uint64_t)&v171);
  v10 = *a4;
  if (*a4 != 22 && v10 != 17)
  {
    v38 = *(unsigned __int16 *)(*a3 + 24);
    if (v38 == 35 || v38 == 11)
      __asm { BR              X11 }
    v44 = dword_1C866C608[v10 - 10];
    v167 = 0;
    v168 = 1;
    v169 = 1;
    v46 = *v8;
    v45 = (uint64_t)v8[1];
    v170 = v45;
    v47 = v176;
    v48 = *(_QWORD *)(*(_QWORD *)(v176 + 40) + 16 * DWORD2(v176));
    v150 = v176;
    if ((_BYTE)v48)
    {
      if (*(_QWORD *)&v46[2 * v48 + 24])
      {
        v49 = v173;
        v50 = *(_QWORD *)(v173 + 40);
        if (*(_BYTE *)(v50 + 16 * v174))
        {
          if (*(_QWORD *)&v46[2 * *(unsigned __int8 *)(v50 + 16 * v174) + 24])
          {
            v51 = (llvm *)(*(uint64_t (**)(unsigned int *, uint64_t, _QWORD))(*(_QWORD *)v46 + 400))(v46, *(_QWORD *)(**(_QWORD **)(v45 + 40) + 40) + 272, *(_QWORD *)(v45 + 56));
            LODWORD(v45) = DWORD2(v176);
            v52 = v174;
            v54 = sub_1C5D8C994(v46, v51, v53, v47, *((uint64_t *)&v176 + 1), v49, v174, v44, 0, (uint64_t)&v167, a5);
            if (v54)
            {
              v156 = v49;
              goto LABEL_40;
            }
            v46 = *v8;
            v45 = (uint64_t)v8[1];
          }
        }
      }
    }
    v163 = (llvm *)(*(uint64_t (**)(unsigned int *, uint64_t, _QWORD))(*(_QWORD *)v46 + 400))(v46, *(_QWORD *)(**(_QWORD **)(v45 + 40) + 40) + 272, *(_QWORD *)(v45 + 56));
    v57 = v56;
    v58 = *((_QWORD *)&v176 + 1);
    v59 = v174;
    v156 = v173;
    v60 = sub_1C6367818((_QWORD *)v45, v44);
    v63 = *(_QWORD *)(v45 + 832);
    if (v63)
      LOWORD(v63) = *(_WORD *)(v63 + 8);
    v146 = v60;
    v64 = v45;
    v45 = v58;
    v52 = v59;
    v54 = sub_1C5D58E08(v64, (const char *)0xC1, a5, v163, v57, v47, v45, v62, v156, v59, v146, v61, SHIDWORD(v61), v63);
LABEL_40:
    v65 = v54;
    v66 = v175;
    v67 = *(_QWORD *)(*(_QWORD *)(v175 + 40) + 16 * DWORD2(v175));
    v68 = *v8;
    v151 = v45;
    v158 = v55;
    v159 = DWORD2(v175);
    if ((_BYTE)v67
      && *(_QWORD *)&v68[2 * v67 + 24]
      && (v69 = v171, v70 = *(_QWORD *)(v171 + 40), *(_BYTE *)(v70 + 16 * v172))
      && *(_QWORD *)&v68[2 * *(unsigned __int8 *)(v70 + 16 * v172) + 24])
    {
      v71 = (llvm *)(*(uint64_t (**)(unsigned int *, uint64_t, _QWORD))(*(_QWORD *)v68 + 400))(v68, *(_QWORD *)(**((_QWORD **)v8[1] + 5) + 40) + 272, *((_QWORD *)v8[1] + 7));
      v72 = *((_QWORD *)&v175 + 1);
      v161 = v172;
      v164 = v69;
      result = sub_1C5D8C994(v68, v71, v73, v66, *((uint64_t *)&v175 + 1), v69, v172, *a4, 0, (uint64_t)&v167, a5);
      if (result)
      {
        v75 = (uint64_t)result;
        v76 = v74;
        goto LABEL_50;
      }
      v153 = v52;
      v68 = *v8;
    }
    else
    {
      v153 = v52;
    }
    v77 = (uint64_t)v8[1];
    v78 = (llvm *)(*(uint64_t (**)(unsigned int *, uint64_t, _QWORD))(*(_QWORD *)v68 + 400))(v68, *(_QWORD *)(**(_QWORD **)(v77 + 40) + 40) + 272, *(_QWORD *)(v77 + 56));
    v80 = v79;
    v72 = *((_QWORD *)&v175 + 1);
    v161 = v172;
    v164 = v171;
    v81 = sub_1C6367818(v8[1], *a4);
    v84 = *(_QWORD *)(v77 + 832);
    if (v84)
      LOWORD(v84) = *(_WORD *)(v84 + 8);
    result = sub_1C5D58E08(v77, (const char *)0xC1, a5, v78, v80, v66, v72, v83, v164, v161, v81, v82, SHIDWORD(v82), v84);
    v75 = (uint64_t)result;
    v76 = v85;
    v52 = v153;
LABEL_50:
    v154 = v72;
    v86 = *((unsigned __int16 *)v65 + 12);
    if (v86 == 35 || v86 == 11)
      v87 = v65;
    else
      v87 = 0;
    v88 = *(unsigned __int16 *)(v75 + 24);
    if (v88 == 11 || v88 == 35)
    {
      v89 = *(_QWORD *)(v75 + 80);
      if (((*a4 - 11) & 0xFFFFFFF5) == 0)
      {
LABEL_65:
        result = (uint64_t *)(v89 + 24);
        v99 = *(_DWORD *)(v89 + 32);
        if (v99 > 0x40)
        {
          result = (uint64_t *)llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)result);
          if ((_DWORD)result != v99)
            goto LABEL_67;
        }
        else if (*result)
        {
          goto LABEL_67;
        }
LABEL_71:
        *v7 = v75;
        goto LABEL_72;
      }
      v148 = v8;
      v90 = a3;
      v91 = v7;
      v92 = v75;
      v93 = v76;
      v94 = a4;
      v95 = v65;
      v96 = v52;
      result = (uint64_t *)(v89 + 24);
      v97 = *(_DWORD *)(v89 + 32);
      if (v97 > 0x40)
      {
        result = (uint64_t *)llvm::APInt::countLeadingZerosSlowCase((llvm::APInt *)result);
        v98 = (_DWORD)result == v97 - 1;
      }
      else
      {
        v98 = *result == 1;
      }
      v52 = v96;
      v65 = v95;
      a4 = v94;
      v76 = v93;
      v75 = v92;
      v7 = v91;
      a3 = v90;
      v8 = v148;
      if (v98)
        goto LABEL_71;
    }
    else if (((*a4 - 11) & 0xFFFFFFF5) == 0)
    {
      goto LABEL_67;
    }
    if (!v87)
    {
LABEL_67:
      if (v66 == v164 && (_DWORD)v159 == (_DWORD)v161)
      {
        *v7 = (uint64_t)v65;
        v76 = v158;
LABEL_72:
        *((_DWORD *)v7 + 2) = v76;
        *a3 = 0;
        *((_DWORD *)a3 + 2) = 0;
        return result;
      }
      v149 = (uint64_t)v65;
      v100 = (_BOOL8 *)(*(_QWORD *)(v66 + 40) + 16 * v159);
      v101 = v100[1];
      v160 = *v100;
      v102 = sub_1C634633C((unint64_t)*v8, *((llvm::EVT **)v8[1] + 7), *v100, v101);
      v103 = (unint64_t)*v8;
      v105 = v150;
      v104 = v151;
      if (!v102
        || !v102 && !*(_QWORD *)(v103 + 8 * v102 + 96)
        || (*(unsigned __int8 *)(v103 + 390 * v102 + 4056) | 4) != 4)
      {
        v106 = v76;
        v107 = *v8;
        v108 = (llvm *)(*(uint64_t (**)(unsigned int *, uint64_t, _QWORD, _BOOL8, uint64_t))(*(_QWORD *)v103 + 400))(*v8, *(_QWORD *)(**((_QWORD **)v8[1] + 5) + 40) + 272, *((_QWORD *)v8[1] + 7), v160, v101);
        v110 = sub_1C5D8C994(v107, v108, v109, v66, v154, v164, v161, 0x11u, 0, (uint64_t)&v167, a5);
        *v7 = (uint64_t)v110;
        *((_DWORD *)v7 + 2) = v111;
        if (!v110)
        {
          v113 = (uint64_t)v8[1];
          v114 = (llvm *)(*(uint64_t (**)(unsigned int *, uint64_t, _QWORD, _BOOL8, uint64_t))(*(_QWORD *)*v8 + 400))(*v8, *(_QWORD *)(**(_QWORD **)(v113 + 40) + 40) + 272, *(_QWORD *)(v113 + 56), v160, v101);
          v116 = v115;
          v117 = sub_1C6367818((_QWORD *)v113, 0x11u);
          v120 = *(_QWORD *)(v113 + 832);
          if (v120)
            LOWORD(v120) = *(_WORD *)(v120 + 8);
          v110 = sub_1C5D58E08(v113, (const char *)0xC1, a5, v114, v116, v66, v154, v119, v164, v161, v117, v118, SHIDWORD(v118), v120);
          *v7 = (uint64_t)v110;
          *((_DWORD *)v7 + 2) = v121;
        }
        result = sub_1C4815A8C((uint64_t)v8[1], a5, *(llvm **)(*(_QWORD *)(v149 + 40) + 16 * v158), *(_QWORD *)(*(_QWORD *)(v149 + 40) + 16 * v158 + 8), (uint64_t)v110, v7[1], v149, v158, v75, v106, SHIDWORD(v106));
        goto LABEL_80;
      }
      v122 = *a4;
      v147 = v101;
      if ((int)*a4 > 17)
      {
        if (v122 == 18)
        {
          v128 = 20;
        }
        else
        {
          v123 = v151;
          v14 = v122 == 21;
          v124 = v154;
          v125 = v156;
          v127 = v161;
          v126 = v164;
          if (!v14)
            goto LABEL_96;
          v128 = 19;
        }
      }
      else if (v122 == 10)
      {
        v128 = 12;
      }
      else
      {
        v123 = v151;
        v14 = v122 == 13;
        v124 = v154;
        v125 = v156;
        v127 = v161;
        v126 = v164;
        if (!v14)
          goto LABEL_96;
        v128 = 11;
      }
      *a4 = v128;
      v177 = v176;
      DWORD2(v176) = v174;
      *(_QWORD *)&v176 = v173;
      v104 = v174;
      v173 = v177;
      LODWORD(v174) = DWORD2(v177);
      v177 = v175;
      DWORD2(v175) = v172;
      *(_QWORD *)&v175 = v171;
      LODWORD(v172) = DWORD2(v177);
      v171 = v177;
      v124 = DWORD2(v175);
      v105 = v176;
      v123 = DWORD2(v176);
      v125 = v173;
      v52 = v174;
      v66 = v175;
      v126 = v177;
      v127 = DWORD2(v177);
LABEL_96:
      v155 = v124;
      v157 = v125;
      v152 = v104;
      v162 = v127;
      v165 = v126;
      v129 = (uint64_t *)(*(_QWORD *)(v105 + 40) + 16 * v123);
      v130 = *v129;
      v131 = v129[1];
      v132 = (uint64_t)v8[1];
      v133 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)v103 + 400))(v103, *(_QWORD *)(**(_QWORD **)(v132 + 40) + 40) + 272, *(_QWORD *)(v132 + 56), *v129, v131);
      v135 = sub_1C636A8B4(v132, v130, v131, v133, v134);
      v138 = sub_1C636D6B4((uint64_t)v8[1], (const char *)0x4F, a5, v135, v136, v105, v152, v137, v157, v52);
      v139 = (uint64_t)v8[1];
      v140 = (llvm *)(*(uint64_t (**)(unsigned int *, uint64_t, _QWORD, _BOOL8, uint64_t))(*(_QWORD *)*v8 + 400))(*v8, *(_QWORD *)(**(_QWORD **)(v139 + 40) + 40) + 272, *(_QWORD *)(v139 + 56), v160, v147);
      v142 = v141;
      v143 = sub_1C6367818(v8[1], *a4);
      result = sub_1C6366A24(v139, (const char *)0xC2, a5, v140, v142, v66, v155, v145, v165, v162, (uint64_t)v138, 1, v143, v144);
LABEL_80:
      v76 = v112;
      *v7 = (uint64_t)result;
      goto LABEL_72;
    }
    v89 = v87[10];
    goto LABEL_65;
  }
  v11 = v173;
  v12 = v171;
  if (v173 != v171 || (_DWORD)v174 != (_DWORD)v172)
    goto LABEL_13;
  v13 = *(unsigned __int16 *)(v173 + 24);
  v14 = v13 == 35 || v13 == 11;
  if (!v14)
    goto LABEL_13;
  v15 = *(_QWORD *)(v173 + 80);
  v16 = *(_DWORD *)(v15 + 32);
  if (v16)
  {
    v17 = (llvm::APInt *)(v15 + 24);
    if (v16 > 0x40)
    {
      if (llvm::APInt::countTrailingOnesSlowCase(v17) != v16)
        goto LABEL_13;
    }
    else if (*(_QWORD *)v17 != 0xFFFFFFFFFFFFFFFFLL >> -(char)v16)
    {
LABEL_13:
      v18 = (uint64_t)v8[1];
      v19 = v176;
      v21 = *(_QWORD *)(v18 + 832);
      if (v21)
        LOWORD(v21) = *(_WORD *)(v21 + 8);
      v20 = *(_QWORD *)(v176 + 40) + 16 * DWORD2(v176);
      *v7 = (uint64_t)sub_1C5D56C70(v18, 173, a5, *(llvm **)v20, *(_QWORD *)(v20 + 8), v176, *((unint64_t *)&v176 + 1), v9, v11, v174, v21);
      *((_DWORD *)v7 + 2) = v23;
      v24 = (uint64_t)v8[1];
      v26 = *(_QWORD *)(v24 + 832);
      if (v26)
        LOWORD(v26) = *(_WORD *)(v26 + 8);
      v25 = *(_QWORD *)(v19 + 40) + 16 * DWORD2(v19);
      v27 = sub_1C5D56C70(v24, 173, a5, *(llvm **)v25, *(_QWORD *)(v25 + 8), v175, *((unint64_t *)&v175 + 1), v22, v12, v172, v26);
      *a3 = (uint64_t)v27;
      *((_DWORD *)a3 + 2) = v29;
      v30 = (uint64_t)v8[1];
      v32 = *(_QWORD *)(v30 + 832);
      if (v32)
        LOWORD(v32) = *(_WORD *)(v32 + 8);
      v31 = *(_QWORD *)(*v7 + 40) + 16 * *((unsigned int *)v7 + 2);
      v33 = sub_1C5D56C70(v30, 172, a5, *(llvm **)v31, *(_QWORD *)(v31 + 8), *v7, v7[1], v28, (uint64_t)v27, a3[1], v32);
      *v7 = (uint64_t)v33;
      *((_DWORD *)v7 + 2) = v34;
      v35 = v33[5] + 16 * v34;
      result = sub_1C6366AB4((uint64_t)v8[1], 0, a5, *(llvm **)v35, *(_QWORD *)(v35 + 8), 0, 0);
      *a3 = (uint64_t)result;
      *((_DWORD *)a3 + 2) = v37;
      return result;
    }
  }
  v40 = (uint64_t)v8[1];
  v42 = *(_QWORD *)(v40 + 832);
  if (v42)
    LOWORD(v42) = *(_WORD *)(v42 + 8);
  v41 = *(_QWORD *)(v176 + 40) + 16 * DWORD2(v176);
  result = sub_1C5D56C70(v40, 171, a5, *(llvm **)v41, *(_QWORD *)(v41 + 8), v176, *((unint64_t *)&v176 + 1), v9, v175, *((unint64_t *)&v175 + 1), v42);
  *v7 = (uint64_t)result;
  *((_DWORD *)v7 + 2) = v43;
  *((_DWORD *)a3 + 2) = v174;
  *a3 = v173;
  return result;
}

int *sub_1C5CECE7C(uint64_t a1, _DWORD *a2)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int *v6;
  int v7;
  int v8;
  uint64_t v9;
  int v11;

  if ((*(_DWORD *)a1 & 1) != 0)
  {
    v2 = 8;
    v3 = a1 + 8;
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 8);
    v2 = *(_DWORD *)(a1 + 16);
    if (!v2)
    {
      v9 = 0;
      return (int *)(v3 + 8 * v9);
    }
  }
  v4 = v2 - 1;
  LODWORD(v5) = (37 * *a2) & (v2 - 1);
  v6 = (int *)(v3 + 8 * v5);
  v7 = *v6;
  if (*a2 == *v6)
    return v6;
  v8 = 1;
  while (v7 != -1)
  {
    v11 = v5 + v8++;
    v5 = v11 & v4;
    v7 = *(_DWORD *)(v3 + 8 * v5);
    if (*a2 == v7)
      return (int *)(v3 + 8 * v5);
  }
  if ((*(_DWORD *)a1 & 1) != 0)
  {
    v9 = 8;
    v3 = a1 + 8;
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 8);
    v9 = *(unsigned int *)(a1 + 16);
  }
  return (int *)(v3 + 8 * v9);
}

uint64_t sub_1C5CECF38(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  char v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __n128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  int v35;
  unint64_t v36;
  _BYTE v37[28];
  int v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[32];

  sub_1C6329230((uint64_t)v37, *(_QWORD *)(*(_QWORD *)(a1 + 8) + 192), *(_QWORD *)(*(_QWORD *)(a1 + 8) + 200));
  v38 = -2;
  v2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(v2 + 192) = 0;
  *(_DWORD *)(v2 + 200) = 0;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = v3 + 208;
  v5 = *(_QWORD *)(v3 + 216);
  if (v5 != v3 + 208)
  {
    do
    {
      if (v5)
        v11 = v5 - 8;
      else
        v11 = 0;
      if (*(_WORD *)(v11 + 56))
      {
        *(_DWORD *)(v11 + 28) = -2;
      }
      else
      {
        *(_DWORD *)(v11 + 28) = 0;
        v12 = *(unsigned int *)(a1 + 1424);
        if (v12 >= *(unsigned int *)(a1 + 1428))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod(a1 + 1416, a1 + 1432, v12 + 1, 8);
          v12 = *(unsigned int *)(a1 + 1424);
        }
        *(_QWORD *)(*(_QWORD *)(a1 + 1416) + 8 * v12) = v11;
        ++*(_DWORD *)(a1 + 1424);
      }
      v5 = *(_QWORD *)(v5 + 8);
    }
    while (v5 != v4);
  }
  v6 = *(_DWORD *)(a1 + 1424);
  v7 = 0;
  if (v6)
  {
    while (1)
    {
      if (byte_1ED8241F8)
      {
        sub_1C6347194(a1);
        v6 = *(_DWORD *)(a1 + 1424);
      }
      v13 = *(_QWORD *)(*(_QWORD *)(a1 + 1416) + 8 * v6 - 8);
      *(_DWORD *)(a1 + 1424) = v6 - 1;
      v14 = *(unsigned __int16 *)(v13 + 24);
      if (v14 != 9 && v14 != 35)
      {
        v15 = *(unsigned __int16 *)(v13 + 58);
        if (*(_WORD *)(v13 + 58))
        {
          v16 = 0;
          v17 = 0;
          while (2)
          {
            llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)(*(_QWORD *)(v13 + 40) + v16), *(_QWORD *)(*(_QWORD *)(v13 + 40) + v16 + 8), (uint64_t)v41);
            switch(v41[0])
            {
              case 1:
                sub_1C6337E04(a1, v13, v17);
                goto LABEL_47;
              case 2:
                sub_1C633E2F4(a1, v13, v17);
                goto LABEL_47;
              case 3:
                sub_1C632CBF4(a1, v13, v17, v18);
                goto LABEL_47;
              case 4:
                sub_1C6330CD0((unint64_t *)a1, v13, v17);
                goto LABEL_47;
              case 5:
                sub_1C6349BE8((unint64_t *)a1, v13, v17, v18);
                goto LABEL_47;
              case 6:
                sub_1C634D6D8((unint64_t *)a1, v13, v17);
                goto LABEL_47;
              case 7:
                sub_1C5CF9D70((uint64_t *)a1, v13, v17);
                goto LABEL_47;
              case 8:
                sub_1C6334424(a1, v13, v17);
                goto LABEL_47;
              case 9:
                sub_1C63355A0(a1, v13, v17);
LABEL_47:
                v7 = 1;
                goto LABEL_48;
              case 0xA:
LABEL_77:
                llvm::report_fatal_error((llvm *)"Scalarization of scalable vectors is not supported.", (const char *)1);
              default:
                ++v17;
                v16 += 16;
                if (v15 == v17)
                  break;
                continue;
            }
            break;
          }
        }
      }
      v19 = *(unsigned __int16 *)(v13 + 56);
      if (*(_WORD *)(v13 + 56))
      {
        v20 = 0;
        v21 = 0;
        do
        {
          v22 = *(_QWORD *)(v13 + 32);
          v23 = *(_QWORD *)(v22 + v20);
          v24 = *(unsigned __int16 *)(v23 + 24);
          if (v24 != 9 && v24 != 35)
          {
            v25 = *(_QWORD *)(v23 + 40) + 16 * *(unsigned int *)(v22 + v20 + 8);
            llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v25, *(_QWORD *)(v25 + 8), (uint64_t)v41);
            if (v41[0])
            {
              switch(v41[0])
              {
                case 1:
                  if ((sub_1C633BF94((uint64_t *)a1, v13, v21) & 1) == 0)
                    goto LABEL_47;
                  goto LABEL_37;
                case 2:
                  if ((sub_1C63463BC((unsigned __int8 **)a1, v13, v21) & 1) == 0)
                    goto LABEL_47;
                  goto LABEL_37;
                case 3:
                  if ((sub_1C632FA8C(a1, v13) & 1) == 0)
                    goto LABEL_47;
                  goto LABEL_37;
                case 4:
                  if ((sub_1C6332730((unint64_t *)a1, v13, v21) & 1) == 0)
                    goto LABEL_47;
                  goto LABEL_37;
                case 5:
                  if ((sub_1C634C130(a1, v13) & 1) == 0)
                    goto LABEL_47;
                  goto LABEL_37;
                case 6:
                  if ((sub_1C6351E64((uint64_t *)a1, v13, v21) & 1) != 0)
                    goto LABEL_37;
                  goto LABEL_47;
                case 7:
                  if ((sub_1C6356A2C((uint64_t *)a1, v13, v21) & 1) == 0)
                    goto LABEL_47;
                  goto LABEL_37;
                case 8:
                  if (!sub_1C6333AC4((_QWORD *)a1, v13, v21))
                    goto LABEL_47;
                  goto LABEL_37;
                case 9:
                  if (!sub_1C6336ABC((unint64_t *)a1, v13, v21))
                    goto LABEL_47;
LABEL_37:
                  *(_DWORD *)(v13 + 28) = -1;
                  v27 = sub_1C5CED438(a1, v13, v26);
                  if (v27 != v13)
                  {
                    v29 = *(unsigned __int16 *)(v13 + 58);
                    if (*(_WORD *)(v13 + 58))
                    {
                      v30 = v27;
                      v31 = 0;
                      do
                      {
                        sub_1C5CED824(a1, v13, v31, v30, v31, v28);
                        ++v31;
                      }
                      while (v29 != v31);
                    }
                  }
                  v7 = 1;
                  goto LABEL_58;
                case 0xA:
                  goto LABEL_77;
                default:
                  goto LABEL_48;
              }
            }
          }
          ++v21;
          v20 += 40;
        }
        while (v19 != v21);
      }
LABEL_48:
      *(_DWORD *)(v13 + 28) = -3;
      v32 = *(_QWORD *)(v13 + 48);
      if (v32)
        break;
LABEL_58:
      v6 = *(_DWORD *)(a1 + 1424);
      if (!v6)
        goto LABEL_3;
    }
    while (1)
    {
      v33 = *(_QWORD *)(v32 + 16);
      v34 = *(_DWORD *)(v33 + 28);
      if (v34 < 1)
      {
        if (v34 != -1)
        {
          v35 = *(unsigned __int16 *)(v33 + 56) - 1;
          *(_DWORD *)(v33 + 28) = v35;
          if (!v35)
          {
LABEL_54:
            v36 = *(unsigned int *)(a1 + 1424);
            if (v36 >= *(unsigned int *)(a1 + 1428))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod(a1 + 1416, a1 + 1432, v36 + 1, 8);
              v36 = *(unsigned int *)(a1 + 1424);
            }
            *(_QWORD *)(*(_QWORD *)(a1 + 1416) + 8 * v36) = v33;
            ++*(_DWORD *)(a1 + 1424);
          }
        }
      }
      else
      {
        *(_DWORD *)(v33 + 28) = v34 - 1;
        if (v34 == 1)
          goto LABEL_54;
      }
      v32 = *(_QWORD *)(v32 + 32);
      if (!v32)
        goto LABEL_58;
    }
  }
LABEL_3:
  if (byte_1ED8241F8)
    sub_1C6347194(a1);
  v8 = *(_QWORD *)(a1 + 8);
  v9 = v40;
  *(_QWORD *)(v8 + 192) = v39;
  *(_DWORD *)(v8 + 200) = v9;
  sub_1C6365284(*(_QWORD **)(a1 + 8));
  sub_1C636F550((uint64_t)v37);
  return v7 & 1;
}

uint64_t sub_1C5CED438(uint64_t a1, uint64_t a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  unint64_t v10;
  int v11;
  uint64_t *v12;
  uint64_t v13;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  __int128 v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  unint64_t v38;
  unint64_t v39;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t *v45;
  int v46;
  uint64_t v47;
  int v49;
  uint64_t v50;
  __n128 v51;
  char *v52;
  __int128 v53;

  v3 = a2;
  if (*(_DWORD *)(a2 + 28) < 0xFFFFFFFE)
    return v3;
  v5 = *(unsigned __int16 *)(a2 + 56);
  if (*(_WORD *)(a2 + 56))
  {
    v6 = 0;
    v7 = 0;
    v8 = 0;
    v9 = 0;
    v52 = 0;
    v10 = 0;
    v11 = 0;
    v50 = *(unsigned __int16 *)(a2 + 56);
    do
    {
      v12 = (uint64_t *)(*(_QWORD *)(v3 + 32) + 40 * v10);
      v13 = *v12;
      *(_QWORD *)&v53 = *v12;
      a3.n128_u64[0] = v12[1];
      v51 = a3;
      *((_QWORD *)&v53 + 1) = a3.n128_u64[0];
      sub_1C6347894(a1, (uint64_t *)&v53);
      if (*(_DWORD *)(v53 + 28) == -3)
        ++v11;
      if (v8 == v9)
      {
        a3.n128_u64[1] = v51.n128_u64[1];
        if ((_QWORD)v53 == v13 && DWORD2(v53) == v51.n128_u32[0])
        {
          v9 = v8;
        }
        else
        {
          v49 = v11;
          if (v10)
          {
            v15 = *(__int128 **)(v3 + 32);
            v16 = v52 - v8;
            if ((uint64_t)v10 <= (v52 - v8) >> 4)
            {
              v34 = 0;
              v35 = v7;
              do
              {
                v36 = *v15;
                v15 = (__int128 *)((char *)v15 + 40);
                *(_OWORD *)&v8[v34] = v36;
                v34 += 16;
                v35 -= 40;
              }
              while (v35);
              v22 = &v8[v34];
              v11 = v49;
            }
            else
            {
              if (v10 >> 60)
                goto LABEL_78;
              v17 = v16 >> 3;
              if (v16 >> 3 <= v10)
                v17 = v10;
              if ((unint64_t)v16 >= 0x7FFFFFFFFFFFFFF0)
                v18 = 0xFFFFFFFFFFFFFFFLL;
              else
                v18 = v17;
              if (v18 >> 60)
LABEL_79:
                sub_1C4764EE4();
              v19 = (char *)operator new(16 * v18);
              v20 = v19;
              v21 = 0;
              v22 = &v19[16 * v10];
              do
              {
                v23 = *v15;
                v15 = (__int128 *)((char *)v15 + 40);
                *(_OWORD *)&v19[v21] = v23;
                v21 += 16;
              }
              while (v6 != v21);
              v52 = &v19[16 * v18];
              if (v8)
                operator delete(v8);
              v8 = v20;
              v11 = v49;
              v5 = v50;
            }
          }
          else
          {
            v22 = v8;
          }
          if (v22 >= v52)
          {
            v37 = (v22 - v8) >> 4;
            v38 = v37 + 1;
            if ((unint64_t)(v37 + 1) >> 60)
LABEL_78:
              abort();
            if ((v52 - v8) >> 3 > v38)
              v38 = (v52 - v8) >> 3;
            if ((unint64_t)(v52 - v8) >= 0x7FFFFFFFFFFFFFF0)
              v39 = 0xFFFFFFFFFFFFFFFLL;
            else
              v39 = v38;
            if (v39)
            {
              if (v39 >> 60)
                goto LABEL_79;
              v40 = (char *)operator new(16 * v39);
            }
            else
            {
              v40 = 0;
            }
            v41 = &v40[16 * v37];
            a3.n128_u64[1] = *((_QWORD *)&v53 + 1);
            *(_OWORD *)v41 = v53;
            v42 = v41;
            while (v22 != v8)
            {
              v43 = *((_QWORD *)v22 - 2);
              v22 -= 16;
              v44 = *((_DWORD *)v22 + 2);
              *((_QWORD *)v42 - 2) = v43;
              v42 -= 16;
              *((_DWORD *)v42 + 2) = v44;
            }
            v52 = &v40[16 * v39];
            v9 = v41 + 16;
            if (v8)
              operator delete(v8);
            v8 = v42;
            v11 = v49;
          }
          else
          {
            a3.n128_u64[1] = *((_QWORD *)&v53 + 1);
            *(_OWORD *)v22 = v53;
            v9 = v22 + 16;
          }
        }
      }
      else if (v9 >= v52)
      {
        v24 = a1;
        v25 = v11;
        v26 = (v9 - v8) >> 4;
        v27 = v26 + 1;
        if ((unint64_t)(v26 + 1) >> 60)
          goto LABEL_78;
        if ((v52 - v8) >> 3 > v27)
          v27 = (v52 - v8) >> 3;
        if ((unint64_t)(v52 - v8) >= 0x7FFFFFFFFFFFFFF0)
          v28 = 0xFFFFFFFFFFFFFFFLL;
        else
          v28 = v27;
        if (v28)
        {
          if (v28 >> 60)
            goto LABEL_79;
          v29 = (char *)operator new(16 * v28);
        }
        else
        {
          v29 = 0;
        }
        v30 = &v29[16 * v26];
        a3.n128_u64[1] = *((_QWORD *)&v53 + 1);
        *(_OWORD *)v30 = v53;
        v31 = v30;
        do
        {
          v32 = *((_QWORD *)v9 - 2);
          v9 -= 16;
          v33 = *((_DWORD *)v9 + 2);
          *((_QWORD *)v31 - 2) = v32;
          v31 -= 16;
          *((_DWORD *)v31 + 2) = v33;
        }
        while (v9 != v8);
        v52 = &v29[16 * v28];
        v9 = v30 + 16;
        if (v8)
          operator delete(v8);
        v8 = v31;
        v11 = v25;
        a1 = v24;
        v5 = v50;
      }
      else
      {
        a3.n128_u64[1] = *((_QWORD *)&v53 + 1);
        *(_OWORD *)v9 = v53;
        v9 += 16;
      }
      ++v10;
      v7 += 40;
      v6 += 16;
    }
    while (v10 != v5);
    if (v8 != v9)
    {
      v45 = sub_1C636DEEC(*(_QWORD *)(a1 + 8), v3, (uint64_t *)v8, (v9 - v8) >> 4);
      if (v45 != (uint64_t *)v3)
      {
        *(_DWORD *)(v3 + 28) = -1;
        v3 = (uint64_t)v45;
        if (*((_DWORD *)v45 + 7) < 0xFFFFFFFE)
          goto LABEL_75;
      }
    }
  }
  else
  {
    v8 = 0;
    v11 = 0;
  }
  v46 = *(unsigned __int16 *)(v3 + 56) - v11;
  *(_DWORD *)(v3 + 28) = v46;
  if (!v46)
  {
    v47 = *(unsigned int *)(a1 + 1424);
    if (v47 >= *(_DWORD *)(a1 + 1428))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(a1 + 1416, a1 + 1432, v47 + 1, 8);
      LODWORD(v47) = *(_DWORD *)(a1 + 1424);
    }
    *(_QWORD *)(*(_QWORD *)(a1 + 1416) + 8 * v47) = v3;
    ++*(_DWORD *)(a1 + 1424);
  }
LABEL_75:
  if (v8)
    operator delete(v8);
  return v3;
}

void sub_1C5CED824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, __n128 a6)
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v12;
  uint64_t v13;
  int64x2_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  int i;
  char *v19;
  uint64_t v20;
  __n128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  uint64_t (**v37)();
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  int v42;
  _QWORD v43[17];
  char *v44;
  uint64_t v45;
  _QWORD v46[18];

  v46[16] = *MEMORY[0x1E0C80C00];
  v12 = sub_1C5CED438(a1, a4, a6);
  if (*(_DWORD *)(v12 + 28) == -3)
  {
    LODWORD(v43[0]) = sub_1C633764C(a1, v12, a5);
    sub_1C63478E0(a1, v43);
    v31 = sub_1C6337D28(a1 + 400, v43);
    v12 = *(_QWORD *)(v31 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v31 + 16);
  }
  v43[0] = 1;
  v13 = 1;
  v14 = vdupq_n_s64(0xFFFFFFFFFFFFF000);
  do
  {
    *(int64x2_t *)&v43[v13] = v14;
    v13 += 2;
  }
  while (v13 != 17);
  v44 = (char *)v46;
  v45 = 0x1000000000;
  v15 = *(_QWORD *)(a1 + 8);
  v16 = *(_QWORD *)(v15 + 656);
  *(_QWORD *)(v15 + 656) = &v37;
  v37 = &off_1E8198558;
  v38 = v16;
  v39 = v15;
  v40 = a1;
  v41 = v43;
  v32 = (_DWORD *)(a1 + 1344);
  v35 = a5;
  v33 = v12;
  v34 = a2;
  while (1)
  {
    v36 = 0;
    v36 = sub_1C633764C(a1, a2, a3);
    v17 = sub_1C633764C(a1, v12, a5);
    if (v36 != v17)
      sub_1C6337DA8(v32, &v36)[1] = v17;
    sub_1C5D6146C(*(_QWORD *)(a1 + 8), a2, a3, v12, a5);
    for (i = v45; (_DWORD)v45; i = v45)
    {
      while (1)
      {
        v19 = &v44[8 * i];
        v20 = *((_QWORD *)v19 - 1);
        sub_1C5C5BC18(v43, (_QWORD *)v19 - 1);
        i = v45 - 1;
        LODWORD(v45) = v45 - 1;
        if (*(_DWORD *)(v20 + 28) == -1)
          break;
        if (!i)
          goto LABEL_22;
      }
      v22 = sub_1C5CED438(a1, v20, v21);
      if (v22 != v20)
      {
        v23 = *(unsigned __int16 *)(v20 + 58);
        if (*(_WORD *)(v20 + 58))
        {
          v24 = v22;
          v25 = 0;
          do
          {
            v26 = v7 & 0xFFFFFFFF00000000;
            v7 = v7 & 0xFFFFFFFF00000000 | v25;
            if (*(_DWORD *)(v24 + 28) == -3)
            {
              v42 = 0;
              v42 = sub_1C633764C(a1, v24, v7);
              sub_1C63478E0(a1, &v42);
              v27 = sub_1C6337D28(a1 + 400, &v42);
              v28 = *(_QWORD *)(v27 + 8);
              v7 = v26 | *(unsigned int *)(v27 + 16);
            }
            else
            {
              v28 = v24;
            }
            v6 = v6 & 0xFFFFFFFF00000000 | v25;
            v42 = 0;
            v42 = sub_1C633764C(a1, v20, v6);
            v29 = sub_1C633764C(a1, v28, v7);
            sub_1C5D6146C(*(_QWORD *)(a1 + 8), v20, v6, v28, v7);
            if (v42 != v29)
              sub_1C6337DA8(v32, &v42)[1] = v29;
            ++v25;
          }
          while (v23 != v25);
        }
      }
    }
LABEL_22:
    a2 = v34;
    a5 = v35;
    v30 = *(_QWORD *)(v34 + 48);
    v12 = v33;
    if (!v30)
      break;
    while (*(_DWORD *)(v30 + 8) != (_DWORD)a3)
    {
      v30 = *(_QWORD *)(v30 + 32);
      if (!v30)
        goto LABEL_25;
    }
  }
LABEL_25:
  *(_QWORD *)(v39 + 656) = v38;
  if (v44 != (char *)v46)
    free(v44);
  if ((v43[0] & 1) == 0)
    MEMORY[0x1CAA32FB4](v43[1], 8);
}

uint64_t sub_1C5CEDB74(uint64_t a1, uint64_t *a2)
{
  uint64_t result;
  int v5;
  int v6;

  v6 = sub_1C633764C(a1, *a2, a2[1]);
  sub_1C63478E0(a1, &v6);
  result = sub_1C6337D28(a1 + 400, &v6);
  v5 = *(_DWORD *)(result + 16);
  *a2 = *(_QWORD *)(result + 8);
  *((_DWORD *)a2 + 2) = v5;
  return result;
}

_QWORD *sub_1C5CEDBD4(_QWORD *result)
{
  *result = &off_1E8198BC8;
  *(_QWORD *)(result[2] + 656) = result[1];
  return result;
}

void sub_1C5CEDBF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, __n128 a6)
{
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  int v13;
  int v14;

  v10 = sub_1C5CED438(a1, a4, a6);
  if (*(_DWORD *)(v10 + 28) == -3)
  {
    v14 = sub_1C633764C(a1, v10, a5);
    sub_1C63478E0(a1, &v14);
    v11 = sub_1C6337D28(a1 + 400, &v14);
    v10 = *(_QWORD *)(v11 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v11 + 16);
  }
  v13 = sub_1C633764C(a1, a2, a3);
  v12 = sub_1C6337DA8((_DWORD *)(a1 + 600), &v13);
  v12[1] = sub_1C633764C(a1, v10, a5);
  *(_WORD *)(v10 + 72) = *(_WORD *)(a2 + 72);
  sub_1C5D55498(*(_QWORD *)(a1 + 8), a2, a3, v10, a5, 0, 0, 1);
}

uint64_t sub_1C5CEDCEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, __n128 a6)
{
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t result;
  int v14;
  int v15;

  v10 = sub_1C5CED438(a1, a4, a6);
  if (*(_DWORD *)(v10 + 28) == -3)
  {
    v15 = sub_1C633764C(a1, v10, a5);
    sub_1C63478E0(a1, &v15);
    v11 = sub_1C6337D28(a1 + 400, &v15);
    v10 = *(_QWORD *)(v11 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v11 + 16);
  }
  v14 = sub_1C633764C(a1, a2, a3);
  v12 = sub_1C6337DA8((_DWORD *)(a1 + 776), &v14);
  result = sub_1C633764C(a1, v10, a5);
  v12[1] = result;
  return result;
}

uint64_t sub_1C5CEDDBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, __n128 a6)
{
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t result;
  int v14;
  int v15;

  v10 = sub_1C5CED438(a1, a4, a6);
  if (*(_DWORD *)(v10 + 28) == -3)
  {
    v15 = sub_1C633764C(a1, v10, a5);
    sub_1C63478E0(a1, &v15);
    v11 = sub_1C6337D28(a1 + 400, &v15);
    v10 = *(_QWORD *)(v11 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v11 + 16);
  }
  v14 = sub_1C633764C(a1, a2, a3);
  v12 = sub_1C6337DA8((_DWORD *)(a1 + 848), &v14);
  result = sub_1C633764C(a1, v10, a5);
  v12[1] = result;
  return result;
}

uint64_t sub_1C5CEDE8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, __n128 a6)
{
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t result;
  int v14;
  int v15;

  v10 = sub_1C5CED438(a1, a4, a6);
  if (*(_DWORD *)(v10 + 28) == -3)
  {
    v15 = sub_1C633764C(a1, v10, a5);
    sub_1C63478E0(a1, &v15);
    v11 = sub_1C6337D28(a1 + 400, &v15);
    v10 = *(_QWORD *)(v11 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v11 + 16);
  }
  v14 = sub_1C633764C(a1, a2, a3);
  v12 = sub_1C6337DA8((_DWORD *)(a1 + 920), &v14);
  result = sub_1C633764C(a1, v10, a5);
  v12[1] = result;
  return result;
}

uint64_t sub_1C5CEDF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, __n128 a6)
{
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t result;
  int v14;
  int v15;

  v10 = sub_1C5CED438(a1, a4, a6);
  if (*(_DWORD *)(v10 + 28) == -3)
  {
    v15 = sub_1C633764C(a1, v10, a5);
    sub_1C63478E0(a1, &v15);
    v11 = sub_1C6337D28(a1 + 400, &v15);
    v10 = *(_QWORD *)(v11 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v11 + 16);
  }
  v14 = sub_1C633764C(a1, a2, a3);
  v12 = sub_1C6337DA8((_DWORD *)(a1 + 1096), &v14);
  result = sub_1C633764C(a1, v10, a5);
  v12[1] = result;
  return result;
}

uint64_t sub_1C5CEE02C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, __n128 a8)
{
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  const char *v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  const char *v29;
  int v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  const char *v34;
  unsigned int v35;
  const char *v36;
  const char *v37;
  unsigned int v38;
  _DWORD *v39;
  uint64_t result;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  int v46;

  v45 = a5;
  v43 = a7;
  v14 = sub_1C5CED438(a1, a4, a8);
  v44 = v14;
  if (*(_DWORD *)(v14 + 28) == -3)
  {
    v46 = sub_1C633764C(a1, v14, a5);
    sub_1C63478E0(a1, &v46);
    v16 = sub_1C6337D28(a1 + 400, &v46);
    v17 = *(_QWORD *)(v16 + 8);
    LODWORD(v45) = *(_DWORD *)(v16 + 16);
    v44 = v17;
  }
  v18 = sub_1C5CED438(a1, a6, v15);
  v42 = v18;
  if (*(_DWORD *)(v18 + 28) == -3)
  {
    v46 = sub_1C633764C(a1, v18, a7);
    sub_1C63478E0(a1, &v46);
    v19 = sub_1C6337D28(a1 + 400, &v46);
    v20 = *(_QWORD *)(v19 + 8);
    LODWORD(v43) = *(_DWORD *)(v19 + 16);
    v42 = v20;
  }
  v21 = *(_QWORD *)(a1 + 8);
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v21 + 40) + 40) + 272))
  {
    v32 = v42;
    v33 = v43;
    v35 = sub_1C6131A64((unsigned int *)&v42);
    if ((_DWORD)v34 == 1)
    sub_1C5D55498(v21, a2, a3, v32, v33, 0, v35, 0);
    v26 = *(_QWORD *)(a1 + 8);
    v27 = v44;
    v28 = v45;
    v30 = sub_1C6131A64((unsigned int *)&v42);
    if ((_DWORD)v36 == 1)
    v31 = &v44;
  }
  else
  {
    v22 = v44;
    v23 = v45;
    v25 = sub_1C6131A64((unsigned int *)&v44);
    if ((_DWORD)v24 == 1)
    sub_1C5D55498(v21, a2, a3, v22, v23, 0, v25, 0);
    v26 = *(_QWORD *)(a1 + 8);
    v27 = v42;
    v28 = v43;
    v30 = sub_1C6131A64((unsigned int *)&v44);
    if ((_DWORD)v29 == 1)
    v31 = &v42;
  }
  v38 = sub_1C6131A64((unsigned int *)v31);
  if ((_DWORD)v37 == 1)
  {
    v41 = v38;
    v38 = v41;
  }
  sub_1C5D55498(v26, a2, a3, v27, v28, v30, v38, 1);
  v46 = sub_1C633764C(a1, a2, a3);
  v39 = sub_1C63489E4((_DWORD *)(a1 + 672), &v46);
  v39[1] = sub_1C633764C(a1, v44, v45);
  result = sub_1C633764C(a1, v42, v43);
  v39[2] = result;
  return result;
}

uint64_t sub_1C5CEE2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, __n128 a8)
{
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t result;
  int v21;
  int v22;
  int v23;

  v14 = sub_1C5CED438(a1, a4, a8);
  if (*(_DWORD *)(v14 + 28) == -3)
  {
    v22 = sub_1C633764C(a1, v14, a5);
    sub_1C63478E0(a1, &v22);
    v16 = sub_1C6337D28(a1 + 400, &v22);
    v14 = *(_QWORD *)(v16 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v16 + 16);
  }
  v17 = sub_1C5CED438(a1, a6, v15);
  if (*(_DWORD *)(v17 + 28) == -3)
  {
    v23 = sub_1C633764C(a1, v17, a7);
    sub_1C63478E0(a1, &v23);
    v18 = sub_1C6337D28(a1 + 400, &v23);
    v17 = *(_QWORD *)(v18 + 8);
    a7 = a7 & 0xFFFFFFFF00000000 | *(unsigned int *)(v18 + 16);
  }
  v21 = sub_1C633764C(a1, a2, a3);
  v19 = sub_1C63489E4((_DWORD *)(a1 + 992), &v21);
  v19[1] = sub_1C633764C(a1, v14, a5);
  result = sub_1C633764C(a1, v17, a7);
  v19[2] = result;
  return result;
}

uint64_t sub_1C5CEE420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, uint64_t a6, unint64_t a7, __n128 a8)
{
  uint64_t v14;
  __n128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t result;
  int v21;
  int v22;
  int v23;

  v14 = sub_1C5CED438(a1, a4, a8);
  if (*(_DWORD *)(v14 + 28) == -3)
  {
    v22 = sub_1C633764C(a1, v14, a5);
    sub_1C63478E0(a1, &v22);
    v16 = sub_1C6337D28(a1 + 400, &v22);
    v14 = *(_QWORD *)(v16 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v16 + 16);
  }
  v17 = sub_1C5CED438(a1, a6, v15);
  if (*(_DWORD *)(v17 + 28) == -3)
  {
    v23 = sub_1C633764C(a1, v17, a7);
    sub_1C63478E0(a1, &v23);
    v18 = sub_1C6337D28(a1 + 400, &v23);
    v17 = *(_QWORD *)(v18 + 8);
    a7 = a7 & 0xFFFFFFFF00000000 | *(unsigned int *)(v18 + 16);
  }
  v21 = sub_1C633764C(a1, a2, a3);
  v19 = sub_1C63489E4((_DWORD *)(a1 + 1168), &v21);
  v19[1] = sub_1C633764C(a1, v14, a5);
  result = sub_1C633764C(a1, v17, a7);
  v19[2] = result;
  return result;
}

uint64_t sub_1C5CEE56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, __n128 a6)
{
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t result;
  int v14;
  int v15;

  v10 = sub_1C5CED438(a1, a4, a6);
  if (*(_DWORD *)(v10 + 28) == -3)
  {
    v15 = sub_1C633764C(a1, v10, a5);
    sub_1C63478E0(a1, &v15);
    v11 = sub_1C6337D28(a1 + 400, &v15);
    v10 = *(_QWORD *)(v11 + 8);
    a5 = a5 & 0xFFFFFFFF00000000 | *(unsigned int *)(v11 + 16);
  }
  v14 = sub_1C633764C(a1, a2, a3);
  v12 = sub_1C6337DA8((_DWORD *)(a1 + 1272), &v14);
  result = sub_1C633764C(a1, v10, a5);
  v12[1] = result;
  return result;
}

_QWORD *sub_1C5CEE63C(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;
  unsigned __int8 *v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  int v23;
  _QWORD *v24;
  uint64_t v26;
  _QWORD v27[2];
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  _QWORD v31[2];
  unsigned __int8 *v32;
  int v33;

  v10 = a3;
  v11 = *(unsigned __int8 **)(a2 + 64);
  v32 = v11;
  if (v11)
    llvm::MetadataTracking::track((uint64_t)&v32, v11, 2);
  v33 = *(_DWORD *)(a2 + 60);
  LODWORD(v12) = sub_1C5D44120(*(_QWORD *)(a1 + 8), a4, a5);
  v13 = sub_1C5D44120(*(_QWORD *)(a1 + 8), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16 * v10), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 16 * v10 + 8));
  if (v12 <= v13)
    v12 = v13;
  else
    v12 = v12;
  v14 = *(_QWORD *)(a1 + 8);
  v28 = *(_OWORD *)(*(_QWORD *)(a2 + 40) + 16 * v10);
  v15 = sub_1C47C1C70((unsigned __int8 *)&v28);
  v17 = sub_1C636847C(v14, v15, v16, v12);
  v19 = v18;
  v20 = *(_QWORD *)(a1 + 8);
  v30 = 0;
  v31[0] = 0;
  *(_QWORD *)((char *)v31 + 5) = 0;
  v28 = 0u;
  v29 = 0u;
  v21 = sub_1C636B75C(v20, v20 + 112, 0, (uint64_t)&v32, a2, a3, v17, v18, (uint64_t)&v30, v12, SHIDWORD(v12), 0, (uint64_t)&v28);
  v22 = *(_QWORD *)(a1 + 8);
  v26 = 0;
  v27[0] = 0;
  *(_QWORD *)((char *)v27 + 5) = 0;
  v28 = 0u;
  v29 = 0u;
  v24 = sub_1C63681B0(v22, a4, a5, (uint64_t)&v32, (uint64_t)v21, v23, v17, v19, (__int128 *)&v26, (unsigned __int16)v12 | 0x100u, (v12 | 0x100uLL) >> 32, 0, (uint64_t)&v28, 0);
  if (v32)
    llvm::MetadataTracking::untrack((uint64_t)&v32, v32);
  return v24;
}

BOOL sub_1C5CEE7DC(_QWORD *a1, uint64_t a2, unsigned __int8 a3, uint64_t a4, int a5)
{
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  uint64_t v14;
  void *v16;
  uint64_t v17;
  _QWORD v18[17];

  v18[16] = *MEMORY[0x1E0C80C00];
  if (!a3)
    return 0;
  v7 = (_QWORD *)*a1;
  v8 = *(unsigned __int16 *)(a2 + 24);
  if (v8 <= 0x185 && *((_BYTE *)v7 + 390 * a3 + v8 + 3862) != 4)
    return 0;
  v16 = v18;
  v17 = 0x800000000;
  v9 = 1960;
  if (a5)
    v9 = 1976;
  (*(void (**)(_QWORD *, uint64_t, void **, _QWORD))(*v7 + v9))(v7, a2, &v16, a1[1]);
  v11 = v17;
  v12 = (_DWORD)v17 != 0;
  if ((_DWORD)v17)
  {
    v13 = 0;
    v14 = 0;
    do
    {
      sub_1C5CED824((uint64_t)a1, a2, v14++, *(_QWORD *)((char *)v16 + v13), *(_QWORD *)((char *)v16 + v13 + 8), v10);
      v13 += 16;
    }
    while (v11 != v14);
  }
  if (v16 != v18)
    free(v16);
  return v12;
}

BOOL sub_1C5CEE918(uint64_t *a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t v5;
  uint64_t v6;
  __n128 v7;
  uint64_t v8;
  _BOOL8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unsigned __int8 *v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  void *v20;
  uint64_t v21;
  _QWORD v22[17];

  v22[16] = *MEMORY[0x1E0C80C00];
  if (!a3)
    return 0;
  v5 = *a1;
  v6 = *(unsigned __int16 *)(a2 + 24);
  if (v6 <= 0x185 && *(_BYTE *)(v5 + 390 * a3 + v6 + 3862) != 4)
    return 0;
  v20 = v22;
  v21 = 0x800000000;
  (*(void (**)(uint64_t, uint64_t, void **, uint64_t))(*(_QWORD *)v5 + 1976))(v5, a2, &v20, a1[1]);
  v8 = v21;
  v9 = (_DWORD)v21 != 0;
  if ((_DWORD)v21)
  {
    v10 = 0;
    v11 = 0;
    do
    {
      v12 = *(_QWORD *)(a2 + 40);
      v13 = *(unsigned __int8 *)(v12 + v10);
      v14 = *(_QWORD *)((char *)v20 + v10);
      v15 = (unsigned __int8 *)(*(_QWORD *)(v14 + 40) + 16 * *(unsigned int *)((char *)v20 + v10 + 8));
      if (v13 == *v15
        && ((v16 = *((_QWORD *)v15 + 1), v17 = *(_QWORD *)(v12 + v10 + 8), !v13) ? (v18 = v17 == v16) : (v18 = 1), v18))
      {
        sub_1C5CED824((uint64_t)a1, a2, v11, v14, *(_QWORD *)((char *)v20 + v10 + 8), v7);
      }
      else
      {
        sub_1C5CEE56C((uint64_t)a1, a2, v11, v14, *(_QWORD *)((char *)v20 + v10 + 8), v7);
      }
      ++v11;
      v10 += 16;
    }
    while (v8 != v11);
  }
  if (v20 != v22)
    free(v20);
  return v9;
}

void sub_1C5CEEA9C(_QWORD *a1)
{
  *a1 = &off_1E8198BC8;
  *(_QWORD *)(a1[2] + 656) = a1[1];
  JUMPOUT(0x1CAA32FC0);
}

_QWORD *sub_1C5CEEAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  _DWORD *v7;
  int v8;
  _QWORD *v9;
  int v10;
  _QWORD *result;
  uint64_t v13;
  uint64_t v14;
  _DWORD *v15;
  int v16;
  int v17;
  _QWORD *v18;

  v13 = a3;
  v14 = a2;
  v4 = *(unsigned __int16 *)(a2 + 58);
  if (*(_WORD *)(a2 + 58))
  {
    v6 = 0;
    v7 = *(_DWORD **)(a1 + 24);
    do
    {
      v8 = sub_1C633764C((uint64_t)v7, a3, v6);
      v17 = 0;
      v17 = sub_1C633764C((uint64_t)v7, a2, v6);
      if (v17 != v8)
      {
        sub_1C6337DA8(v7 + 336, &v17)[1] = v8;
        v15 = 0;
        if (sub_1C6337AE8((uint64_t)(v7 + 100), &v17, &v15))
        {
          *v15 = -2;
          v7[100] -= 2;
          ++v7[101];
        }
        sub_1C4840998((uint64_t)(v7 + 150), &v17);
        sub_1C5CEED00(v7 + 168, v17);
        sub_1C4840998((uint64_t)(v7 + 194), &v17);
        sub_1C4840998((uint64_t)(v7 + 212), &v17);
        sub_1C4840998((uint64_t)(v7 + 230), &v17);
        sub_1C5CEED00(v7 + 248, v17);
        sub_1C4840998((uint64_t)(v7 + 274), &v17);
        sub_1C5CEED00(v7 + 292, v17);
        sub_1C4840998((uint64_t)(v7 + 318), &v17);
      }
      v15 = (_DWORD *)a2;
      v16 = v6;
      v18 = 0;
      if (sub_1C63377A8((uint64_t)(v7 + 50), (uint64_t)&v15, &v18))
      {
        v9 = v18;
        *v18 = 0;
        *((_DWORD *)v9 + 2) = -2;
        v10 = v7[51] + 1;
        v7[50] -= 2;
        v7[51] = v10;
      }
      ++v6;
    }
    while (v4 != v6);
  }
  result = sub_1C6348508(*(_QWORD *)(a1 + 32), &v14);
  if (*(_DWORD *)(a3 + 28) == -1)
    return (_QWORD *)sub_1C62B3A60(*(_QWORD *)(a1 + 32), &v13);
  return result;
}

BOOL sub_1C5CEECD0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = a2;
  *(_DWORD *)(a2 + 28) = -1;
  return sub_1C62B3A60(*(_QWORD *)(a1 + 32), &v3);
}

uint64_t sub_1C5CEED00(_DWORD *a1, int a2)
{
  uint64_t result;
  int v4;
  _DWORD *v5;

  v5 = 0;
  result = sub_1C6348580((uint64_t)a1, a2, &v5);
  if ((_DWORD)result)
  {
    *v5 = -2;
    v4 = a1[1] + 1;
    *a1 -= 2;
    a1[1] = v4;
  }
  return result;
}

uint64_t sub_1C5CEED50(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  _BYTE *v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[96];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (a2 >= 9)
  {
    v3 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
    v4 = v3 | (v3 >> 2) | ((v3 | (v3 >> 2)) >> 4);
    v5 = ((v4 | (v4 >> 8)) >> 16) | v4 | (v4 >> 8);
    if ((v5 + 1) > 0x40)
      a2 = v5 + 1;
    else
      a2 = 64;
  }
  if ((*(_DWORD *)a1 & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v7 = *(_DWORD *)(a1 + 16);
    if (a2 > 8)
    {
      v13 = a2;
      *(_QWORD *)(a1 + 8) = operator new(12 * a2, (std::align_val_t)4uLL);
      *(_QWORD *)(a1 + 16) = v13;
    }
    else
    {
      *(_DWORD *)a1 |= 1u;
    }
    sub_1C6348B04(a1, v6, v6 + 12 * v7);
    JUMPOUT(0x1CAA32FB4);
  }
  v8 = 0;
  v9 = v14;
  do
  {
    v10 = *(_DWORD *)(a1 + v8 + 8);
    if (v10 <= 0xFFFFFFFD)
    {
      *(_DWORD *)v9 = v10;
      *(_QWORD *)(v9 + 4) = *(_QWORD *)(a1 + v8 + 12);
      v9 += 12;
    }
    v8 += 12;
  }
  while (v8 != 96);
  if (a2 > 8)
  {
    *(_DWORD *)a1 &= ~1u;
    v11 = a2;
    *(_QWORD *)(a1 + 8) = operator new(12 * a2, (std::align_val_t)4uLL);
    *(_QWORD *)(a1 + 16) = v11;
  }
  return sub_1C6348B04(a1, (uint64_t)v14, (uint64_t)v9);
}

uint64_t sub_1C5CEEEDC()
{
  int v1;

  v1 = 1;
  sub_1C6348938(&v1);
  return __cxa_atexit((void (*)(void *))sub_1C484246C, &qword_1ED824178, &dword_1C475E000);
}

void sub_1C5CEEF1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _BOOL8 *v8;
  _BOOL8 v9;
  uint64_t v10;
  llvm *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  int v18;
  llvm::LLVMContext *v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  llvm *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  const char *v28;
  unint64_t v29;
  llvm::LLVMContext *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t ExtendedIntegerVT;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int16 v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t **v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  uint64_t *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  llvm::EVT *v65;
  const char *v66;
  uint64_t v67;
  unsigned int v68;
  llvm::LLVMContext *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t **v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  int v83;
  char *v84;
  int v85;
  llvm *v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  __int16 v93;
  uint64_t v94;
  BOOL v95;
  int v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  __int16 v104;
  int v105;
  BOOL v106;
  int v107;
  uint64_t v108;
  unsigned int v109;
  unsigned __int8 v110;
  unsigned __int8 v111;
  uint64_t v112;
  unint64_t v113;
  int v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t *FixedStack;
  int v119;
  uint64_t v120;
  unsigned int v121;
  uint64_t *v122;
  char v123;
  _QWORD *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  int v128;
  int v129;
  uint64_t ExtendedSizeInBits;
  const char *v131;
  unint64_t v132;
  uint64_t v133;
  uint64_t *v134;
  unsigned int v135;
  unint64_t v136;
  uint64_t v137;
  __int128 v138;
  int v139;
  int v140;
  int v141;
  uint64_t v142;
  uint64_t v143;
  __int16 v144;
  int v145;
  int v146;
  uint64_t v147;
  uint64_t v148;
  __int16 v149;
  int v150;
  int v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  unsigned __int8 *v161;
  int v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  _OWORD v169[9];
  uint64_t v170;

  v170 = *MEMORY[0x1E0C80C00];
  v8 = *(_BOOL8 **)(a2 + 40);
  v9 = *v8;
  v10 = v8[1];
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *v8, v10, (uint64_t)v169);
  v11 = (llvm *)*((_QWORD *)&v169[0] + 1);
  v12 = *(_QWORD *)&v169[1];
  v166 = *(_OWORD *)((char *)v169 + 8);
  v165 = *(_OWORD *)*(_QWORD *)(a2 + 32);
  v13 = v165;
  v14 = (uint64_t *)(*(_QWORD *)(v165 + 40) + 16 * DWORD2(v165));
  v15 = *v14;
  v16 = v14[1];
  v163 = *v14;
  v164 = v16;
  v17 = *(unsigned __int8 **)(a2 + 64);
  v161 = v17;
  if (v17)
  {
    llvm::MetadataTracking::track((uint64_t)&v161, v17, 2);
    v15 = v163;
    v16 = v164;
  }
  v162 = *(_DWORD *)(a2 + 60);
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v15, v16, (uint64_t)v169);
  switch(LOBYTE(v169[0]))
  {
    case 2:
    case 4:
      v86 = v11;
      v87 = a4;
      v88 = *(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 8) + 40) + 40);
      sub_1C63339F8(a1, v13, *((uint64_t *)&v165 + 1), a3, v87);
      if (*(_BYTE *)(v88 + 272))
        v89 = 1;
      else
        v89 = (v9 == 14) == (v163 == 14);
      if (!v89)
      {
        v169[0] = *(_OWORD *)a3;
        v90 = *(_DWORD *)(v87 + 8);
        *(_QWORD *)a3 = *(_QWORD *)v87;
        *(_DWORD *)(a3 + 8) = v90;
        *(_QWORD *)v87 = *(_QWORD *)&v169[0];
        *(_DWORD *)(v87 + 8) = DWORD2(v169[0]);
      }
      v91 = *(_QWORD *)(a1 + 8);
      v92 = *(_QWORD *)(v91 + 832);
      if (v92)
        v93 = *(_WORD *)(v92 + 8);
      else
        v93 = 0;
      *(_QWORD *)a3 = sub_1C5D52060(v91, 216, (const llvm::APInt *)&v161, v86, v12, *(_QWORD *)a3, *(_QWORD *)(a3 + 8), v93);
      *(_DWORD *)(a3 + 8) = v141;
      v142 = *(_QWORD *)(a1 + 8);
      v143 = *(_QWORD *)(v142 + 832);
      if (v143)
        v144 = *(_WORD *)(v143 + 8);
      else
        v144 = 0;
      *(_QWORD *)v87 = sub_1C5D52060(v142, 216, (const llvm::APInt *)&v161, v86, v12, *(_QWORD *)v87, *(_QWORD *)(v87 + 8), v144);
      *(_DWORD *)(v87 + 8) = v145;
      goto LABEL_126;
    case 3:
      v99 = sub_1C5CE094C(a1, v13, *((uint64_t *)&v165 + 1));
      goto LABEL_92;
    case 5:
      v97 = sub_1C63354E0(a1, v13, *((uint64_t *)&v165 + 1));
      v99 = (uint64_t)sub_1C6347B70(a1, v97, v98);
LABEL_92:
      sub_1C63483FC((uint64_t *)a1, v99, v100, a3, (uint64_t **)a4);
      goto LABEL_93;
    case 6:
      sub_1C6347ABC(a1, v13, *((uint64_t *)&v165 + 1), a3, a4);
      v94 = *(_QWORD *)(a1 + 8);
      if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v94 + 40) + 40) + 272))
        v95 = 1;
      else
        v95 = v9 == 14;
      if (!v95)
        goto LABEL_94;
      v169[0] = *(_OWORD *)a3;
      v96 = *(_DWORD *)(a4 + 8);
      *(_QWORD *)a3 = *(_QWORD *)a4;
      *(_DWORD *)(a3 + 8) = v96;
      *(_QWORD *)a4 = *(_QWORD *)&v169[0];
      *(_DWORD *)(a4 + 8) = DWORD2(v169[0]);
LABEL_93:
      v94 = *(_QWORD *)(a1 + 8);
LABEL_94:
      v101 = *(_QWORD *)a3;
      v102 = *(_QWORD *)(a3 + 8);
      v103 = *(_QWORD *)(v94 + 832);
      if (v103)
        v104 = *(_WORD *)(v103 + 8);
      else
        v104 = 0;
LABEL_122:
      *(_QWORD *)a3 = sub_1C5D52060(v94, 216, (const llvm::APInt *)&v161, v11, v12, v101, v102, v104);
      *(_DWORD *)(a3 + 8) = v146;
      v147 = *(_QWORD *)(a1 + 8);
      v148 = *(_QWORD *)(v147 + 832);
      if (v148)
        v149 = *(_WORD *)(v148 + 8);
      else
        v149 = 0;
      *(_QWORD *)a4 = sub_1C5D52060(v147, 216, (const llvm::APInt *)&v161, v11, v12, *(_QWORD *)a4, *(_QWORD *)(a4 + 8), v149);
      *(_DWORD *)(a4 + 8) = v150;
      goto LABEL_126;
    case 7:
      *(_QWORD *)&v165 = sub_1C6335540(a1, v13, *((uint64_t *)&v165 + 1));
      DWORD2(v165) = v105;
      sub_1C636F9DC(*(_QWORD *)(a1 + 8), (_BOOL8 *)&v163, v106, (unint64_t *)v169);
      v167 = v169[0];
      v159 = v169[1];
      sub_1C636FB88(*(_QWORD *)(a1 + 8), (uint64_t *)&v165, (const llvm::APInt *)&v161, (uint64_t)&v167, (uint64_t)&v159, (uint64_t)v169);
      *(_QWORD *)a3 = *(_QWORD *)&v169[0];
      *(_DWORD *)(a3 + 8) = DWORD2(v169[0]);
      *(_QWORD *)a4 = *(_QWORD *)&v169[1];
      *(_DWORD *)(a4 + 8) = DWORD2(v169[1]);
      v94 = *(_QWORD *)(a1 + 8);
      if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v94 + 40) + 40) + 272) || v9 == 14)
      {
        v169[0] = *(_OWORD *)a3;
        v107 = *(_DWORD *)(a4 + 8);
        *(_QWORD *)a3 = *(_QWORD *)a4;
        *(_DWORD *)(a3 + 8) = v107;
        *(_QWORD *)a4 = *(_QWORD *)&v169[0];
        *(_DWORD *)(a4 + 8) = DWORD2(v169[0]);
        v94 = *(_QWORD *)(a1 + 8);
      }
      v101 = *(_QWORD *)a3;
      v102 = *(_QWORD *)(a3 + 8);
      v108 = *(_QWORD *)(v94 + 832);
      if (v108)
        v104 = *(_WORD *)(v108 + 8);
      else
        v104 = 0;
      goto LABEL_122;
    case 0xA:
      llvm::report_fatal_error((llvm *)"Scalarization of scalable vectors is not supported.", (const char *)1);
    default:
      v153 = v12;
      v155 = a4;
      if ((_BYTE)v163)
      {
        if (v163 - 15 >= 0x9C)
          goto LABEL_103;
      }
      else if ((*(_DWORD *)(v164 + 8) & 0xFE) != 0x12)
      {
        goto LABEL_103;
      }
      if (v9)
      {
        if (v9 - 120 >= 0x20 && v9 - 2 >= 6 && v9 - 15 >= 0x3C)
        {
LABEL_103:
          v109 = sub_1C5D44120(*(_QWORD *)(a1 + 8), v163, v164);
          v110 = sub_1C5D44120(*(_QWORD *)(a1 + 8), (uint64_t)v11, v12);
          if (v109 <= v110)
            v111 = v110;
          else
            v111 = v109;
          v112 = *(_QWORD *)(a1 + 8);
          v113 = sub_1C47C1C70((unsigned __int8 *)&v163);
          v115 = sub_1C636847C(v112, v113, v114, v111);
          v117 = v116;
          FixedStack = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(*(_QWORD *)(a1 + 8) + 40) + 432), *(_DWORD *)(v115 + 76));
          *(_QWORD *)&v159 = (unint64_t)FixedStack | 4;
          *((_QWORD *)&v159 + 1) = 0;
          BYTE4(v160) = 0;
          v152 = v115;
          if (FixedStack)
            v119 = *((_DWORD *)FixedStack + 3);
          else
            v119 = 0;
          LODWORD(v160) = v119;
          v120 = *(_QWORD *)(a1 + 8);
          v121 = DWORD2(v165);
          v167 = v159;
          v168 = v160;
          memset(v169, 0, 32);
          v122 = (uint64_t *)(*(_QWORD *)(v13 + 40) + 16 * DWORD2(v165));
          sub_1C6365BD8(v120, *v122, v122[1]);
          v124 = sub_1C636B75C(v120, v120 + 112, 0, (uint64_t)&v161, v13, v121, v152, v117, (uint64_t)&v167, v123, 0, 0, (uint64_t)v169);
          v125 = *(_QWORD *)(a1 + 8);
          v157 = v159;
          v158 = v160;
          v126 = v110 | 0x100;
          memset(v169, 0, 32);
          v127 = v153;
          v154 = (uint64_t)v124;
          v151 = v128;
          *(_QWORD *)a3 = sub_1C63681B0(v125, (uint64_t)v11, v127, (uint64_t)&v161, (uint64_t)v124, v128, v152, v117, &v157, v110 | 0x100u, SHIDWORD(v126), 0, (uint64_t)v169, 0);
          *(_DWORD *)(a3 + 8) = v129;
          if ((_BYTE)v11)
            ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v166);
          else
            ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v166);
          v132 = ExtendedSizeInBits;
          if ((_DWORD)v131 == 1)
          v133 = (v132 >> 3);
          v134 = sub_1C6369954(*(_QWORD *)(a1 + 8), v152, v117, v133, 0, (const llvm::APInt *)&v161, 0);
          v136 = v117 & 0xFFFFFFFF00000000 | v135;
          v137 = *(_QWORD *)(a1 + 8);
          v138 = v166;
          sub_1C4824250((uint64_t *)&v159, v133, (uint64_t)&v156);
          memset(v169, 0, 32);
          *(_QWORD *)v155 = sub_1C63681B0(v137, v138, *((uint64_t *)&v138 + 1), (uint64_t)&v161, v154, v151, (uint64_t)v134, v136, &v156, v126, SHIDWORD(v126), 0, (uint64_t)v169, 0);
          *(_DWORD *)(v155 + 8) = v139;
          if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 8) + 40) + 40) + 272) || v9 == 14)
          {
            v169[0] = *(_OWORD *)a3;
            v140 = *(_DWORD *)(v155 + 8);
            *(_QWORD *)a3 = *(_QWORD *)v155;
            *(_DWORD *)(a3 + 8) = v140;
            *(_QWORD *)v155 = *(_QWORD *)&v169[0];
            *(_DWORD *)(v155 + 8) = DWORD2(v169[0]);
          }
          goto LABEL_126;
        }
      }
      else
      {
        if ((*(_DWORD *)(v10 + 8) & 0xFE) == 0x12)
          v18 = *(unsigned __int8 *)(**(_QWORD **)(v10 + 16) + 8);
        else
          v18 = *(_DWORD *)(v10 + 8);
        if (v18 != 13)
          goto LABEL_103;
      }
      v159 = v166;
      v19 = *(llvm::LLVMContext **)(*(_QWORD *)(a1 + 8) + 56);
      v21 = *((_QWORD *)&v166 + 1);
      v20 = v166;
      v22 = 2;
      v23 = 2;
      break;
  }
  while (1)
  {
    v24 = (llvm *)sub_1C4816F98(v19, v20, v21, v23, 0);
    v26 = v25;
    llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), (_BOOL8)v24, v25, (uint64_t)v169);
    if (!LOBYTE(v169[0]))
      break;
    if ((_BYTE)v159)
      v27 = sub_1C47A8C74((unsigned __int8 *)&v159);
    else
      v27 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v159);
    v29 = v27;
    if ((_DWORD)v28 == 1)
    v30 = (llvm::LLVMContext *)(v29 >> 1);
    if ((v29 >> 1) < 8)
      break;
    if ((int)v30 > 63)
    {
      if ((_DWORD)v30 == 64)
      {
        v31 = 0;
        v21 = 0;
        v32 = 6;
        goto LABEL_33;
      }
      if ((_DWORD)v30 == 128)
      {
        v31 = 0;
        v21 = 0;
        v32 = 7;
        goto LABEL_33;
      }
    }
    else
    {
      switch((_DWORD)v30)
      {
        case 0x20:
          v31 = 0;
          v21 = 0;
          v32 = 5;
          goto LABEL_33;
        case 0x10:
          v31 = 0;
          v21 = 0;
          v32 = 4;
          goto LABEL_33;
        case 8:
          v31 = 0;
          v21 = 0;
          v32 = 3;
          goto LABEL_33;
      }
    }
    ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), v30);
    v21 = v34;
    v31 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
    v32 = ExtendedIntegerVT;
LABEL_33:
    v22 *= 2;
    v20 = v32 | v31;
    *(_QWORD *)&v159 = v32 | v31;
    *((_QWORD *)&v159 + 1) = v21;
    v19 = *(llvm::LLVMContext **)(*(_QWORD *)(a1 + 8) + 56);
    v23 = v22;
  }
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), (_BOOL8)v24, v26, (uint64_t)v169);
  if (LOBYTE(v169[0]))
  {
    v12 = v153;
    goto LABEL_103;
  }
  v35 = *(_QWORD *)(a1 + 8);
  v36 = *(_QWORD *)(v35 + 832);
  if (v36)
    v37 = *(_WORD *)(v36 + 8);
  else
    v37 = 0;
  v38 = sub_1C5D52060(v35, 216, (const llvm::APInt *)&v161, v24, v26, v13, *((unint64_t *)&v165 + 1), v37);
  *(_QWORD *)&v169[0] = &v169[1];
  *((_QWORD *)&v169[0] + 1) = 0x800000000;
  if (v22)
  {
    v40 = (uint64_t)v38;
    v41 = v39;
    v42 = 0;
    v43 = v22;
    do
    {
      v44 = *(_QWORD *)(a1 + 8);
      v45 = v159;
      v46 = sub_1C6366C9C(v44, v42, (uint64_t)&v161, 0);
      v49 = *(_QWORD *)(v44 + 832);
      if (v49)
        LOWORD(v49) = *(_WORD *)(v49 + 8);
      v50 = sub_1C5D56C70(v44, 148, (const llvm::APInt *)&v161, (llvm *)v45, *((uint64_t *)&v45 + 1), v40, v41, v48, v46, v47, v49);
      v52 = v51;
      v53 = DWORD2(v169[0]);
      if (DWORD2(v169[0]) >= (unint64_t)HIDWORD(v169[0]))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v169, (uint64_t)&v169[1], DWORD2(v169[0]) + 1, 16);
        v53 = DWORD2(v169[0]);
      }
      v54 = (uint64_t **)(*(_QWORD *)&v169[0] + 16 * v53);
      *v54 = v50;
      v54[1] = v52;
      v55 = DWORD2(v169[0]);
      v56 = ++DWORD2(v169[0]);
      ++v42;
    }
    while (v43 != v42);
    if (v56 >= 3)
    {
      v57 = 0;
      v58 = v55 + 1;
      while (1)
      {
        v167 = *(_OWORD *)(*(_QWORD *)&v169[0] + 16 * v57);
        v59 = (uint64_t *)(*(_QWORD *)&v169[0] + 16 * (v57 + 1));
        v60 = *v59;
        v61 = v59[1];
        v62 = *(_QWORD *)(a1 + 8);
        if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v62 + 40) + 40) + 272))
        {
          v63 = v167;
          v64 = DWORD2(v167);
          *(_QWORD *)&v167 = v60;
          DWORD2(v167) = v61;
          v61 = v61 & 0xFFFFFFFF00000000 | v64;
          v60 = v63;
        }
        v65 = *(llvm::EVT **)(v62 + 56);
        v68 = sub_1C6131A64((unsigned int *)&v167);
        if ((_DWORD)v66 == 1)
        v69 = (llvm::LLVMContext *)(2 * v68);
        if ((int)v69 > 63)
        {
          if ((_DWORD)v69 == 64)
          {
            v70 = 0;
            v71 = 0;
            v72 = 6;
          }
          else
          {
            if ((_DWORD)v69 != 128)
            {
LABEL_71:
              v79 = llvm::EVT::getExtendedIntegerVT(v65, v69);
              v71 = v80;
              v70 = v79 & 0xFFFFFFFFFFFFFF00;
              v72 = v79;
              goto LABEL_63;
            }
            v70 = 0;
            v71 = 0;
            v72 = 7;
          }
        }
        else
        {
          switch((_DWORD)v69)
          {
            case 0x20:
              v70 = 0;
              v71 = 0;
              v72 = 5;
              break;
            case 0x10:
              v70 = 0;
              v71 = 0;
              v72 = 4;
              break;
            case 8:
              v70 = 0;
              v71 = 0;
              v72 = 3;
              break;
            default:
              goto LABEL_71;
          }
        }
LABEL_63:
        v73 = *(_QWORD *)(v62 + 832);
        if (v73)
          LOWORD(v73) = *(_WORD *)(v73 + 8);
        v74 = sub_1C5D56C70(v62, 54, (const llvm::APInt *)&v161, (llvm *)(v72 | v70), v71, v167, *((unint64_t *)&v167 + 1), v67, v60, v61, v73);
        v76 = v75;
        v77 = DWORD2(v169[0]);
        if (DWORD2(v169[0]) >= (unint64_t)HIDWORD(v169[0]))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)v169, (uint64_t)&v169[1], DWORD2(v169[0]) + 1, 16);
          v77 = DWORD2(v169[0]);
        }
        v78 = (uint64_t **)(*(_QWORD *)&v169[0] + 16 * v77);
        *v78 = v74;
        v78[1] = v76;
        ++DWORD2(v169[0]);
        v57 += 2;
        if (--v58 <= 2)
          goto LABEL_73;
      }
    }
  }
  v57 = 0;
LABEL_73:
  v81 = *(char **)&v169[0];
  v82 = *(_QWORD *)&v169[0] + 16 * v57;
  v83 = *(_DWORD *)(v82 + 8);
  *(_QWORD *)a3 = *(_QWORD *)v82;
  *(_DWORD *)(a3 + 8) = v83;
  v84 = &v81[16 * (v57 | 1)];
  LODWORD(v82) = *((_DWORD *)v84 + 2);
  *(_QWORD *)v155 = *(_QWORD *)v84;
  *(_DWORD *)(v155 + 8) = v82;
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 8) + 40) + 40) + 272))
  {
    v167 = *(_OWORD *)a3;
    v85 = *((_DWORD *)v84 + 2);
    *(_QWORD *)a3 = *(_QWORD *)v84;
    *(_DWORD *)(a3 + 8) = v85;
    *(_QWORD *)v155 = v167;
    *(_DWORD *)(v155 + 8) = DWORD2(v167);
  }
  if (v81 != (char *)&v169[1])
    free(v81);
LABEL_126:
  if (v161)
    llvm::MetadataTracking::untrack((uint64_t)&v161, v161);
}

uint64_t *sub_1C5CEFB58(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;

  sub_1C63339F8((uint64_t)a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), a3, a4);
  v8 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 80);
  v9 = (_QWORD *)(v8 + 24);
  if (*(_DWORD *)(v8 + 32) >= 0x41u)
    v9 = (_QWORD *)*v9;
  if (*v9)
    v10 = a4;
  else
    v10 = a3;
  return sub_1C6347DC4(a1, *(_QWORD *)v10, *(_QWORD *)(v10 + 8), a3, a4);
}

uint64_t *sub_1C5CEFBD8(unint64_t *a1, uint64_t a2, __int128 *a3, uint64_t a4)
{
  uint64_t **v7;
  unint64_t v8;
  uint64_t *v9;
  BOOL v10;
  unsigned int v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 EVT;
  uint64_t v16;
  uint64_t v17;
  unsigned __int8 *v18;
  _BOOL8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  llvm *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  __int16 v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t v32;
  llvm *v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  llvm *v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  llvm *v60;
  _QWORD *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t *v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *result;
  int v71;
  int v72;
  uint64_t v74;
  llvm *v75;
  unsigned __int8 *v76;
  int v77;
  __int128 v78;
  uint64_t v79;

  v7 = *(uint64_t ***)(a2 + 32);
  v9 = *v7;
  v8 = (unint64_t)v7[1];
  v78 = *(_OWORD *)((*v7)[5] + 16 * v8);
  v11 = sub_1C612FE00((llvm::EVT *)&v78, (const char *)a2);
  v12 = (uint64_t *)(v9[5] + 16 * v8);
  v14 = *v12;
  v13 = v12[1];
  *(_QWORD *)&v78 = v14;
  *((_QWORD *)&v78 + 1) = v13;
  if ((_BYTE)v14)
  {
    EVT = sub_1C47F37A0((unsigned __int8 *)&v78);
    v17 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v13 + 24), 0, v10);
    v17 = v16;
  }
  v18 = *(unsigned __int8 **)(a2 + 64);
  v76 = v18;
  if (v18)
    llvm::MetadataTracking::track((uint64_t)&v76, v18, 2);
  v77 = *(_DWORD *)(a2 + 60);
  v19 = *(_BOOL8 **)(a2 + 40);
  v20 = *v19;
  v21 = v19[1];
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *v19, v21, (uint64_t)&v78);
  v74 = v79;
  v75 = (llvm *)*((_QWORD *)&v78 + 1);
  if (EVT != v20 || !EVT && v17 != v21)
  {
    v23 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(a1[1] + 56), v20, v21, v11, 0);
    v24 = a1[1];
    v25 = *(uint64_t **)(a2 + 32);
    v26 = *v25;
    v27 = v25[1];
    v28 = *(_QWORD *)(v24 + 832);
    if (v28)
      v29 = *(_WORD *)(v28 + 8);
    else
      v29 = 0;
    v9 = sub_1C5D52060(v24, 200, (const llvm::APInt *)&v76, v23, v22, v26, v27, v29);
    v8 = v8 & 0xFFFFFFFF00000000 | v30;
  }
  v31 = a1[1];
  v33 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(v31 + 56), (uint64_t)v75, v74, 2 * v11, 0);
  v34 = *(_QWORD *)(v31 + 832);
  if (v34)
    v35 = *(_WORD *)(v34 + 8);
  else
    v35 = 0;
  v37 = sub_1C5D52060(v31, 216, (const llvm::APInt *)&v76, v33, v32, (uint64_t)v9, v8, v35);
  v39 = v38;
  v40 = *(_QWORD *)(a2 + 32);
  v41 = *(_QWORD *)(v40 + 40);
  v42 = *(_QWORD *)(v40 + 48);
  v43 = a1[1];
  v44 = *(_QWORD *)(v41 + 40) + 16 * v42;
  v45 = *(llvm **)v44;
  v46 = *(_QWORD *)(v44 + 8);
  v47 = *(_QWORD *)(v43 + 832);
  if (v47)
    LOWORD(v47) = *(_WORD *)(v47 + 8);
  v50 = sub_1C5D56C70(v43, 56, (const llvm::APInt *)&v76, v45, v46, v41, v42, v36, v41, v42, v47);
  v51 = v48;
  v52 = v42 & 0xFFFFFFFF00000000 | v48;
  v53 = a1[1];
  v54 = *(_QWORD *)(v53 + 832);
  if (v54)
    LOWORD(v54) = *(_WORD *)(v54 + 8);
  v55 = v42 & 0xFFFFFFFF00000000;
  *(_QWORD *)a3 = sub_1C5D56C70(v53, 148, (const llvm::APInt *)&v76, v75, v74, (uint64_t)v37, v39, v49, (uint64_t)v50, v42 & 0xFFFFFFFF00000000 | v48, v54);
  *((_DWORD *)a3 + 2) = v56;
  v57 = a1[1];
  v58 = v50[5] + 16 * v51;
  v60 = *(llvm **)v58;
  v59 = *(_QWORD *)(v58 + 8);
  v61 = sub_1C6366AB4(v57, 1, (const llvm::APInt *)&v76, *(llvm **)v58, v59, 0, 0);
  v64 = *(_QWORD *)(v57 + 832);
  if (v64)
    LOWORD(v64) = *(_WORD *)(v64 + 8);
  v65 = sub_1C5D56C70(v57, 56, (const llvm::APInt *)&v76, v60, v59, (uint64_t)v50, v52, v63, (uint64_t)v61, v62, v64);
  v68 = a1[1];
  v69 = *(_QWORD *)(v68 + 832);
  if (v69)
    LOWORD(v69) = *(_WORD *)(v69 + 8);
  result = sub_1C5D56C70(v68, 148, (const llvm::APInt *)&v76, v75, v74, (uint64_t)v37, v39, v67, (uint64_t)v65, v66 | v55, v69);
  *(_QWORD *)a4 = result;
  *(_DWORD *)(a4 + 8) = v71;
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272))
  {
    v78 = *a3;
    v72 = *(_DWORD *)(a4 + 8);
    *(_QWORD *)a3 = *(_QWORD *)a4;
    *((_DWORD *)a3 + 2) = v72;
    *(_QWORD *)a4 = v78;
    *(_DWORD *)(a4 + 8) = DWORD2(v78);
  }
  if (v76)
    return (uint64_t *)llvm::MetadataTracking::untrack((uint64_t)&v76, v76);
  return result;
}

void sub_1C5CEFF20(uint64_t a1, uint64_t a2, __n128 *a3, uint64_t a4)
{
  _BOOL8 *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t *v19;
  unsigned __int32 v20;
  uint64_t *v21;
  __n128 v22;
  int v23;
  unsigned __int32 v24;
  _BOOL8 v25;
  unsigned __int8 *v26;
  int v27;
  __n128 v28;
  uint64_t v29;

  v8 = *(_BOOL8 **)(a2 + 40);
  v25 = *v8;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *v8, v8[1], (uint64_t)&v28);
  v9 = v28.n128_i64[1];
  v10 = v29;
  v11 = *(uint64_t **)(a2 + 32);
  v12 = *v11;
  v13 = v11[1];
  v14 = v11[5];
  v15 = v11[6];
  v16 = *(unsigned __int8 **)(a2 + 64);
  v26 = v16;
  if (v16)
  {
    llvm::MetadataTracking::track((uint64_t)&v26, v16, 2);
    v11 = *(uint64_t **)(a2 + 32);
  }
  v27 = *(_DWORD *)(a2 + 60);
  v17 = *(_QWORD *)(v11[15] + 80);
  v18 = (_QWORD *)(v17 + 24);
  if (*(_DWORD *)(v17 + 32) >= 0x41u)
    v18 = (_QWORD *)*v18;
  v19 = sub_1C636CD84(*(_QWORD *)(a1 + 8), v9, v10, (const llvm::APInt *)&v26, v12, v13, v14, v15, v11[10], v11[11], HIDWORD(v11[11]), *v18);
  a3->n128_u64[0] = (unint64_t)v19;
  a3->n128_u32[2] = v20;
  v21 = sub_1C636CD84(*(_QWORD *)(a1 + 8), v9, v10, (const llvm::APInt *)&v26, (uint64_t)v19, 1, v14, v15, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 88), HIDWORD(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 88)), 0);
  *(_QWORD *)a4 = v21;
  *(_DWORD *)(a4 + 8) = v23;
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(*(_QWORD *)(a1 + 8) + 40) + 40) + 272) || v25 == 14)
  {
    v22 = *a3;
    v28 = *a3;
    v24 = *(_DWORD *)(a4 + 8);
    a3->n128_u64[0] = *(_QWORD *)a4;
    a3->n128_u32[2] = v24;
    *(_QWORD *)a4 = v28.n128_u64[0];
    *(_DWORD *)(a4 + 8) = v28.n128_u32[2];
  }
  sub_1C5CED824(a1, a2, 1, (uint64_t)v21, v13 & 0xFFFFFFFF00000000 | 1, v22);
  if (v26)
    llvm::MetadataTracking::untrack((uint64_t)&v26, v26);
}

void *sub_1C5CF00D4(uint64_t *a1, uint64_t a2, unint64_t a3, unsigned int a4, uint64_t a5, llvm *a6, uint64_t a7)
{
  unsigned __int8 *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  __int16 v19;
  void *result;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  int v28;
  __int128 v29;
  __int128 v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;

  v33 = *MEMORY[0x1E0C80C00];
  v14 = *(unsigned __int8 **)(a2 + 64);
  v27 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v27, v14, 2);
  v15 = 0;
  v28 = *(_DWORD *)(a2 + 60);
  do
  {
    v16 = (char *)&v30 + v15;
    *(_QWORD *)v16 = 0;
    *((_DWORD *)v16 + 2) = 0;
    v15 += 16;
  }
  while (v15 != 32);
  if (a4 >= 2)
  {
    v26 = a4 >> 1;
    sub_1C63483FC(a1, a2, a3, (uint64_t)&v30, &v31);
    if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272))
    {
      v29 = v30;
      DWORD2(v30) = v32;
      *(_QWORD *)&v30 = v31;
      v31 = (uint64_t *)v29;
      LODWORD(v32) = DWORD2(v29);
    }
    sub_1C5CF00D4(a1, v30, *((_QWORD *)&v30 + 1), v26, a5, a6, a7);
    result = (void *)sub_1C5CF00D4(a1, v31, v32, v26, a5, a6, a7);
  }
  else
  {
    v17 = a1[1];
    v18 = *(_QWORD *)(v17 + 832);
    if (v18)
      v19 = *(_WORD *)(v18 + 8);
    else
      v19 = 0;
    result = sub_1C5D52060(v17, 216, (const llvm::APInt *)&v27, a6, a7, a2, a3, v19);
    v21 = result;
    v23 = v22;
    v24 = *(unsigned int *)(a5 + 8);
    if (v24 >= *(_DWORD *)(a5 + 12))
    {
      result = llvm::SmallVectorBase<unsigned int>::grow_pod(a5, a5 + 16, v24 + 1, 16);
      LODWORD(v24) = *(_DWORD *)(a5 + 8);
    }
    v25 = (_QWORD *)(*(_QWORD *)a5 + 16 * v24);
    *v25 = v21;
    v25[1] = v23;
    ++*(_DWORD *)(a5 + 8);
  }
  if (v27)
    return (void *)llvm::MetadataTracking::untrack((uint64_t)&v27, v27);
  return result;
}

_QWORD *sub_1C5CF02C8(unint64_t *a1, uint64_t a2)
{
  unsigned __int8 *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v14;
  int v15;
  _QWORD *v16;
  llvm::EVT *v18;
  unsigned int v19;
  llvm *v20;
  llvm *v21;
  uint64_t v22;
  uint64_t v23;
  const char *v24;
  BOOL v25;
  llvm **v26;
  uint64_t *v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t EVT;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  llvm *v41;
  uint64_t v42;
  uint64_t v43;
  __int16 v44;
  llvm *v45;
  uint64_t v46;
  unsigned __int8 *v47;
  int v48;
  void *v49[2];
  uint64_t v50[18];

  v50[17] = *MEMORY[0x1E0C80C00];
  v4 = *(unsigned __int8 **)(a2 + 64);
  v47 = v4;
  if (v4)
    llvm::MetadataTracking::track((uint64_t)&v47, v4, 2);
  v48 = *(_DWORD *)(a2 + 60);
  v5 = *(uint64_t **)(a2 + 40);
  v6 = *v5;
  v7 = v5[1];
  v8 = *v5;
  if (v8)
  {
    if ((v8 - 15) < 0x9C)
      goto LABEL_5;
LABEL_14:
    v9 = *(unsigned int **)(a2 + 32);
    v10 = *(_QWORD *)v9;
    goto LABEL_18;
  }
  if ((*(_DWORD *)(v7 + 8) & 0xFE) != 0x12)
    goto LABEL_14;
LABEL_5:
  v9 = *(unsigned int **)(a2 + 32);
  v10 = *(_QWORD *)v9;
  v11 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v9 + 40) + 16 * v9[2]);
  v12 = *v11;
  v13 = v11[1];
  if (!(_BYTE)v12)
  {
    if ((*(_DWORD *)(v13 + 8) & 0xFE) == 0x12)
      v15 = *(unsigned __int8 *)(**(_QWORD **)(v13 + 16) + 8);
    else
      v15 = *(_DWORD *)(v13 + 8);
    if (v15 == 13)
      goto LABEL_22;
LABEL_18:
    v16 = sub_1C5CEE63C((uint64_t)a1, v10, *((_QWORD *)v9 + 1), v6, v7);
    goto LABEL_19;
  }
  v14 = v12 - 120 >= 0x20 && v12 - 2 >= 6;
  if (v14 && v12 - 15 >= 0x3C)
    goto LABEL_18;
LABEL_22:
  v18 = *(llvm::EVT **)(a1[1] + 56);
  llvm::TargetLoweringBase::getTypeConversion(*a1, v18, v12, v13, (uint64_t)v49);
  v19 = 2;
  v20 = (llvm *)sub_1C4816F98(v18, (uint64_t)v49[1], v50[0], 2u, 0);
  LOBYTE(v21) = (_BYTE)v20;
  v23 = v22;
  v45 = v20;
  v46 = v22;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), (_BOOL8)v20, v22, (uint64_t)v49);
  if (LOBYTE(v49[0]))
  {
    *(_OWORD *)v49 = *(_OWORD *)*(_QWORD *)(a2 + 40);
    v19 = sub_1C612FE00((llvm::EVT *)v49, v24);
    v26 = *(llvm ***)(a2 + 40);
    v21 = *v26;
    v23 = (uint64_t)v26[1];
    v45 = *v26;
    v46 = v23;
  }
  v49[0] = v50;
  v49[1] = (void *)0x800000000;
  v27 = *(uint64_t **)(a2 + 32);
  v28 = *v27;
  v29 = v27[1];
  if ((_BYTE)v21)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v45);
    v33 = 0;
    v32 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v23 + 24), 0, v25);
    v32 = v31;
    v33 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  sub_1C5CF00D4((uint64_t *)a1, v28, v29, v19, (uint64_t)v49, (llvm *)(v33 | EVT), v32);
  v34 = a1[1];
  v35 = *(_QWORD *)(v34 + 832);
  if (v35)
    v36 = *(unsigned __int16 *)(v35 + 8);
  else
    v36 = 0;
  v38 = sub_1C636D0C8(v34, (const char *)0x92, (const llvm::APInt *)&v47, v45, v46, (uint64_t *)v49[0], v19, v36);
  v39 = a1[1];
  v40 = *(_QWORD *)(a2 + 40);
  v41 = *(llvm **)v40;
  v42 = *(_QWORD *)(v40 + 8);
  v43 = *(_QWORD *)(v39 + 832);
  if (v43)
    v44 = *(_WORD *)(v43 + 8);
  else
    v44 = 0;
  v16 = sub_1C5D52060(v39, 216, (const llvm::APInt *)&v47, v41, v42, (uint64_t)v38, v37, v44);
  if (v49[0] != v50)
    free(v49[0]);
LABEL_19:
  if (v47)
    llvm::MetadataTracking::untrack((uint64_t)&v47, v47);
  return v16;
}

uint64_t *sub_1C5CF05A0(unint64_t *a1, uint64_t a2)
{
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  unint64_t v9;
  unsigned int v10;
  uint64_t v11;
  llvm *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  uint64_t *v27;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  unsigned __int8 *v33;
  int v34;
  __int128 v35;
  __int128 v36;
  void *v37;
  uint64_t v38;
  _QWORD v39[33];

  v39[32] = *MEMORY[0x1E0C80C00];
  v35 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v4 = sub_1C612FE00((llvm::EVT *)&v35, (const char *)a2);
  v5 = *(_QWORD *)(**(_QWORD **)(a2 + 32) + 40) + 16 * *(unsigned int *)(*(_QWORD *)(a2 + 32) + 8);
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *(_QWORD *)v5, *(_QWORD *)(v5 + 8), (uint64_t)&v37);
  v6 = v38;
  v7 = v39[0];
  v8 = *(unsigned __int8 **)(a2 + 64);
  v33 = v8;
  if (v8)
    llvm::MetadataTracking::track((uint64_t)&v33, v8, 2);
  v34 = *(_DWORD *)(a2 + 60);
  v37 = v39;
  v38 = 0x1000000000;
  v9 = 2 * v4;
  if (v9 >= 0x11)
    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v37, (uint64_t)v39, v9, 16);
  if (v4)
  {
    v16 = 0;
    v17 = 40 * v4;
    do
    {
      *(_QWORD *)&v32 = 0;
      DWORD2(v32) = 0;
      *(_QWORD *)&v31 = 0;
      DWORD2(v31) = 0;
      sub_1C63339F8((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + v16), *(_QWORD *)(*(_QWORD *)(a2 + 32) + v16 + 8), (uint64_t)&v32, (uint64_t)&v31);
      if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272))
      {
        v36 = v32;
        DWORD2(v32) = DWORD2(v31);
        *(_QWORD *)&v32 = v31;
        *(_QWORD *)&v31 = v36;
        DWORD2(v31) = DWORD2(v36);
      }
      v18 = v32;
      v19 = v38;
      if (v38 >= (unint64_t)HIDWORD(v38))
      {
        v29 = v32;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v37, (uint64_t)v39, v38 + 1, 16);
        v18 = v29;
        v19 = v38;
      }
      *((_OWORD *)v37 + v19) = v18;
      v20 = (v38 + 1);
      LODWORD(v38) = v20;
      v21 = v31;
      if (v20 >= HIDWORD(v38))
      {
        v30 = v31;
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v37, (uint64_t)v39, v20 + 1, 16);
        v21 = v30;
        LODWORD(v20) = v38;
      }
      *((_OWORD *)v37 + v20) = v21;
      v10 = v38 + 1;
      LODWORD(v38) = v38 + 1;
      v16 += 40;
    }
    while (v17 != v16);
  }
  else
  {
    v10 = v38;
  }
  v12 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(a1[1] + 56), v6, v7, v10, 0);
  v13 = a1[1];
  v14 = *(_QWORD *)(v13 + 832);
  if (v14)
    v15 = *(unsigned __int16 *)(v14 + 8);
  else
    v15 = 0;
  v23 = sub_1C636D0C8(v13, (const char *)0x92, (const llvm::APInt *)&v33, v12, v11, (uint64_t *)v37, v38, v15);
  v24 = a1[1];
  v25 = *(_QWORD *)(v24 + 832);
  if (v25)
    v26 = *(_WORD *)(v25 + 8);
  else
    v26 = 0;
  v27 = sub_1C5D52060(v24, 216, (const llvm::APInt *)&v33, (llvm *)v35, *((uint64_t *)&v35 + 1), (uint64_t)v23, v22, v26);
  if (v37 != v39)
    free(v37);
  if (v33)
    llvm::MetadataTracking::untrack((uint64_t)&v33, v33);
  return v27;
}

uint64_t sub_1C5CF086C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;

  v9 = 0;
  v10 = 0;
  v7 = 0;
  v8 = 0;
  sub_1C63339F8(a1, **(_QWORD **)(a2 + 32), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 8), (uint64_t)&v9, (uint64_t)&v7);
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 32) + 40) + 80);
  v4 = (_QWORD *)(v3 + 24);
  if (*(_DWORD *)(v3 + 32) >= 0x41u)
    v4 = (_QWORD *)*v4;
  if (*v4)
    v5 = &v7;
  else
    v5 = &v9;
  return *v5;
}

uint64_t *sub_1C5CF0904(unint64_t *a1, uint64_t a2)
{
  int v4;
  unsigned __int8 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  llvm *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  __int16 v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  llvm *v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  llvm *v38;
  unsigned int v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  llvm *v44;
  _QWORD *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t *v50;
  int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  __int16 v59;
  uint64_t *v60;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  unsigned __int8 *v67;
  int v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;

  v69 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v4 = sub_1C612FE00((llvm::EVT *)&v69, (const char *)a2);
  v5 = *(unsigned __int8 **)(a2 + 64);
  v67 = v5;
  if (v5)
    llvm::MetadataTracking::track((uint64_t)&v67, v5, 2);
  v68 = *(_DWORD *)(a2 + 60);
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_QWORD *)(v6 + 40);
  v8 = *(_QWORD *)(v6 + 48);
  v9 = *(_QWORD *)(v7 + 40) + 16 * v8;
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *(_QWORD *)v9, *(_QWORD *)(v9 + 8), (uint64_t)&v70);
  v11 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(a1[1] + 56), *((uint64_t *)&v70 + 1), v71, 2 * v4, 0);
  v12 = a1[1];
  v13 = *(uint64_t **)(a2 + 32);
  v14 = *v13;
  v15 = v13[1];
  v16 = *(_QWORD *)(v12 + 832);
  if (v16)
    v17 = *(_WORD *)(v16 + 8);
  else
    v17 = 0;
  v63 = v10;
  v18 = sub_1C5D52060(v12, 216, (const llvm::APInt *)&v67, v11, v10, v14, v15, v17);
  v20 = v19;
  *(_QWORD *)&v66 = 0;
  DWORD2(v66) = 0;
  v64 = 0;
  LODWORD(v65) = 0;
  sub_1C63339F8((uint64_t)a1, v7, v8, (uint64_t)&v66, (uint64_t)&v64);
  v22 = a1[1];
  if (*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v22 + 40) + 40) + 272))
  {
    v70 = v66;
    DWORD2(v66) = v65;
    *(_QWORD *)&v66 = v64;
    v64 = v70;
    LODWORD(v65) = DWORD2(v70);
  }
  v23 = *(_QWORD *)(a2 + 32);
  v24 = *(_QWORD *)(v23 + 80);
  v25 = *(_QWORD *)(v23 + 88);
  v26 = *(_QWORD *)(v24 + 40) + 16 * v25;
  v27 = *(llvm **)v26;
  v28 = *(_QWORD *)(v26 + 8);
  v29 = *(_QWORD *)(v22 + 832);
  if (v29)
    LOWORD(v29) = *(_WORD *)(v29 + 8);
  v32 = sub_1C5D56C70(v22, 56, (const llvm::APInt *)&v67, v27, v28, v24, v25, v21, v24, v25, v29);
  v33 = v30;
  v34 = v25 & 0xFFFFFFFF00000000 | v30;
  v35 = a1[1];
  v36 = *(_QWORD *)(v35 + 832);
  if (v36)
    LOWORD(v36) = *(_WORD *)(v36 + 8);
  v37 = v25 & 0xFFFFFFFF00000000;
  v38 = v11;
  v62 = sub_1C5D58E08(v35, (const char *)0x93, (const llvm::APInt *)&v67, v11, v63, (uint64_t)v18, v20, v31, v66, *((uint64_t *)&v66 + 1), (uint64_t)v32, v30, (v25 & 0xFFFFFFFF00000000) >> 32, v36);
  v40 = v20 & 0xFFFFFFFF00000000 | v39;
  v41 = a1[1];
  v42 = v32[5] + 16 * v33;
  v44 = *(llvm **)v42;
  v43 = *(_QWORD *)(v42 + 8);
  v45 = sub_1C6366AB4(v41, 1, (const llvm::APInt *)&v67, *(llvm **)v42, v43, 0, 0);
  v48 = *(_QWORD *)(v41 + 832);
  if (v48)
    LOWORD(v48) = *(_WORD *)(v48 + 8);
  v49 = v20 & 0xFFFFFFFF00000000;
  v50 = sub_1C5D56C70(v41, 56, (const llvm::APInt *)&v67, v44, v43, (uint64_t)v32, v34, v47, (uint64_t)v45, v46, v48);
  v53 = a1[1];
  v54 = *(_QWORD *)(v53 + 832);
  if (v54)
    LOWORD(v54) = *(_WORD *)(v54 + 8);
  v56 = sub_1C5D58E08(v53, (const char *)0x93, (const llvm::APInt *)&v67, v38, v63, (uint64_t)v62, v40, v52, v64, v65, (uint64_t)v50, v51 | v37, SHIDWORD(v37), v54);
  v57 = a1[1];
  v58 = *(_QWORD *)(v57 + 832);
  if (v58)
    v59 = *(_WORD *)(v58 + 8);
  else
    v59 = 0;
  v60 = sub_1C5D52060(v57, 216, (const llvm::APInt *)&v67, (llvm *)v69, *((uint64_t *)&v69 + 1), (uint64_t)v56, v55 | v49, v59);
  if (v67)
    llvm::MetadataTracking::untrack((uint64_t)&v67, v67);
  return v60;
}

uint64_t *sub_1C5CF0C04(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 *v8;
  const char *v9;
  BOOL v10;
  uint64_t v11;
  __int128 *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unsigned __int8 *v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char EVT;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *result;
  int v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int *v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[2];
  uint64_t *v52;
  int v53;
  uint64_t *v54;
  int v55;
  _QWORD v56[2];
  __int128 v57;
  unsigned __int8 *v58;
  int v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  int v65;
  int v66;
  uint64_t v67;
  int v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v72 = 0;
  LODWORD(v73) = 0;
  v70 = 0;
  LODWORD(v71) = 0;
  v67 = 0;
  v68 = 0;
  v64 = 0;
  v65 = 0;
  v8 = *(unsigned __int8 **)(a2 + 64);
  v58 = v8;
  if (v8)
    llvm::MetadataTracking::track((uint64_t)&v58, v8, 2);
  v59 = *(_DWORD *)(a2 + 60);
  v9 = (const char *)*(unsigned __int16 *)(a2 + 24);
  sub_1C6349360((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 40), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 48), (uint64_t)&v72, (uint64_t)&v70);
  sub_1C6349360((uint64_t)a1, *(_QWORD *)(*(_QWORD *)(a2 + 32) + 80), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 88), (uint64_t)&v67, (uint64_t)&v64);
  v12 = *(__int128 **)(a2 + 32);
  v57 = *v12;
  v13 = *((_DWORD *)v12 + 2);
  v60 = *(uint64_t **)v12;
  LODWORD(v61) = v13;
  v62 = v60;
  LODWORD(v63) = v13;
  v14 = v57;
  v15 = DWORD2(v57);
  v16 = (unsigned __int8 *)(*(_QWORD *)(v57 + 40) + 16 * DWORD2(v57));
  if (!*v16)
  {
    if ((*(_DWORD *)(*((_QWORD *)v16 + 1) + 8) & 0xFE) != 0x12)
      goto LABEL_17;
LABEL_7:
    v56[0] = sub_1C5CFF95C(a1, a2, v10);
    v56[1] = v17;
    if (v56[0])
    {
      v42 = a1[1];
      v43 = (unsigned int *)v56;
    }
    else
    {
      llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), *(_QWORD *)(*(_QWORD *)(v57 + 40) + 16 * DWORD2(v57)), *(_QWORD *)(*(_QWORD *)(v57 + 40) + 16 * DWORD2(v57) + 8), (uint64_t)&v52);
      if (v52 == 6)
      {
        sub_1C6347ABC((uint64_t)a1, v14, *((uint64_t *)&v57 + 1), (uint64_t)&v62, (uint64_t)&v60);
        goto LABEL_17;
      }
      if (*(_WORD *)(v14 + 24) == 193)
      {
        v19 = *(_QWORD *)(v14 + 40);
        v20 = (uint64_t *)(*(_QWORD *)(**(_QWORD **)(v14 + 32) + 40)
                        + 16 * *(unsigned int *)(*(_QWORD *)(v14 + 32) + 8));
        v22 = *v20;
        v21 = v20[1];
        v23 = (uint64_t *)(v19 + 16 * v15);
        v25 = *v23;
        v24 = v23[1];
        v51[0] = v25;
        v51[1] = v24;
        if ((_BYTE)v25)
          EVT = sub_1C47F37A0((unsigned __int8 *)v51);
        else
          EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v24 + 24), 0, v18);
        if (EVT != 2
          || (llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v22, v21, (uint64_t)&v52),
              (_BYTE)v52))
        {
          v27 = v57;
LABEL_16:
          sub_1C634F7C4((uint64_t)a1, v27, (uint64_t)&v62, (uint64_t)&v60);
          goto LABEL_17;
        }
        v38 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)*a1 + 400))(*a1, *(_QWORD *)(**(_QWORD **)(a1[1] + 40) + 40) + 272, *(_QWORD *)(a1[1] + 56), v22, v21);
        v40 = v39;
        v27 = v57;
        v41 = *(_QWORD *)(v57 + 40) + 16 * DWORD2(v57);
        if (v38 != *(_BYTE *)v41 || !v38 && v40 != *(_QWORD *)(v41 + 8))
          goto LABEL_16;
      }
      v42 = a1[1];
      v43 = (unsigned int *)&v57;
    }
    sub_1C63493B4(v42, v43, (const llvm::APInt *)&v58, (uint64_t)&v52);
    v62 = v52;
    LODWORD(v63) = v53;
    v60 = v54;
    LODWORD(v61) = v55;
    goto LABEL_17;
  }
  if (*v16 - 15 < 0x9C)
    goto LABEL_7;
LABEL_17:
  if (((_DWORD)v9 - 389) > 0xFFFFFFFD)
  {
    sub_1C5D636A4(a1[1], *(_QWORD *)(*(_QWORD *)(a2 + 32) + 120), *(_QWORD *)(*(_QWORD *)(a2 + 32) + 128), **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), (const llvm::APInt *)&v58, &v52);
    v44 = (uint64_t)v54;
    v45 = v55;
    v46 = *(_QWORD *)(v72 + 40) + 16 * v73;
    *(_QWORD *)a3 = sub_1C6366A24(a1[1], v9, (const llvm::APInt *)&v58, *(llvm **)v46, *(_QWORD *)(v46 + 8), (uint64_t)v62, v63, v47, v72, v73, v67, v68, (uint64_t)v52, v53);
    *(_DWORD *)(a3 + 8) = v48;
    v49 = *(_QWORD *)(v70 + 40) + 16 * v71;
    result = sub_1C6366A24(a1[1], v9, (const llvm::APInt *)&v58, *(llvm **)v49, *(_QWORD *)(v49 + 8), (uint64_t)v60, v61, v50, v70, v71, v64, v65, v44, v45);
  }
  else
  {
    v28 = a1[1];
    v30 = *(_QWORD *)(v28 + 832);
    if (v30)
      LOWORD(v30) = *(_WORD *)(v30 + 8);
    v29 = *(_QWORD *)(v72 + 40) + 16 * v73;
    *(_QWORD *)a3 = sub_1C5D58E08(v28, v9, (const llvm::APInt *)&v58, *(llvm **)v29, *(_QWORD *)(v29 + 8), (uint64_t)v62, v63, v11, v72, v73, v67, v68, v69, v30);
    *(_DWORD *)(a3 + 8) = v32;
    v33 = a1[1];
    v35 = *(_QWORD *)(v33 + 832);
    if (v35)
      LOWORD(v35) = *(_WORD *)(v35 + 8);
    v34 = *(_QWORD *)(v70 + 40) + 16 * v71;
    result = sub_1C5D58E08(v33, v9, (const llvm::APInt *)&v58, *(llvm **)v34, *(_QWORD *)(v34 + 8), (uint64_t)v60, v61, v31, v70, v71, v64, v65, v66, v35);
  }
  *(_QWORD *)a4 = result;
  *(_DWORD *)(a4 + 8) = v37;
  if (v58)
    return (uint64_t *)llvm::MetadataTracking::untrack((uint64_t)&v58, v58);
  return result;
}

BOOL sub_1C5CF1028(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  __n128 v3;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BOOL8 v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v16;
  _QWORD *v17[2];
  char v18;
  _QWORD v19[258];

  v19[257] = *MEMORY[0x1E0C80C00];
  v1 = (_QWORD *)a1[3];
  v17[0] = a1;
  v17[1] = v1;
  v18 = 0;
  v19[0] = 1;
  v2 = 4;
  v3 = (__n128)xmmword_1C6429E90;
  do
  {
    *(_OWORD *)&v17[v2] = xmmword_1C6429E90;
    v2 += 4;
  }
  while (v2 != 260);
  for (i = v17[0][27]; ; i = *(_QWORD *)(i + 8))
  {
    if (i == *(_QWORD *)(v17[0][26] + 8))
    {
      v8 = 0;
      goto LABEL_24;
    }
    v5 = i ? i - 8 : 0;
    if (*(_WORD *)(v5 + 58))
      break;
LABEL_15:
    ;
  }
  v6 = 16 * *(unsigned __int16 *)(v5 + 58);
  v7 = *(_QWORD *)(v5 + 40) + 8;
  while (*(_BYTE *)(v7 - 8))
  {
    if (*(unsigned __int8 *)(v7 - 8) - 15 < 0x9C)
      goto LABEL_17;
LABEL_14:
    v7 += 16;
    v6 -= 16;
    if (!v6)
      goto LABEL_15;
  }
  if ((*(_DWORD *)(*(_QWORD *)v7 + 8) & 0xFE) != 0x12)
    goto LABEL_14;
LABEL_17:
  sub_1C5D620C0((uint64_t)v17[0]);
  v9 = v17[0];
  v10 = v17[0][26];
  v11 = v17[0][27];
  if (v11 != *(_QWORD *)(v10 + 8))
  {
    do
    {
      if (v11)
        v12 = v11 - 8;
      else
        v12 = 0;
      sub_1C5CF11D4((uint64_t *)v17, v12, 0);
      v11 = *(_QWORD *)(v11 + 8);
    }
    while (v11 != *(_QWORD *)(v10 + 8));
    v9 = v17[0];
  }
  v16 = *((_OWORD *)v9 + 12);
  v13 = sub_1C6349B78(v19, (uint64_t)&v16);
  v14 = *(_QWORD *)(v13 + 24);
  v9[24] = *(_QWORD *)(v13 + 16);
  *((_DWORD *)v9 + 50) = v14;
  sub_1C6349834((char *)v19);
  sub_1C6365284(v17[0]);
  v8 = v18 != 0;
LABEL_24:
  if ((v19[0] & 1) == 0)
    MEMORY[0x1CAA32FB4](v19[1], 8, v3);
  return v8;
}

uint64_t sub_1C5CF11D4(uint64_t *a1, unint64_t a2, unsigned int a3)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned __int8 *v27;
  uint64_t v28;
  unsigned __int8 *v29;
  unsigned int *v30;
  unsigned int *v31;
  unsigned __int8 *v32;
  uint64_t v33;
  uint64_t v34;
  __int16 v35;
  uint64_t v36;
  _BYTE *v37;
  uint64_t v38;
  uint64_t *v39;
  unsigned __int8 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  _BOOL4 v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  BOOL v53;
  uint64_t *v54;
  uint64_t *v55;
  unsigned int v56;
  uint64_t **v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  unsigned __int8 EVT;
  uint64_t v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t *v66;
  uint64_t v67;
  unsigned __int8 *v68;
  uint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  _BOOL4 v75;
  unsigned __int8 *v76;
  __int128 *v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  unsigned __int8 *v86;
  uint64_t *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int *v93;
  uint64_t v94;
  __int128 v95;
  unsigned int v96;
  unsigned int v97;
  uint64_t v98;
  __int128 v99;
  uint64_t *v100;
  __int128 v101;
  unsigned int v102;
  unsigned __int8 *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  llvm *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  unsigned __int8 v114;
  int v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  llvm *v120;
  uint64_t v121;
  uint64_t v122;
  int v123;
  int v124;
  uint64_t *v125;
  uint64_t v126;
  uint64_t *v127;
  int v128;
  __int128 v129;
  unsigned int v130;
  unsigned __int8 *v131;
  unsigned __int8 v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t *v139;
  uint64_t *v140;
  uint64_t *v141;
  uint64_t *v142;
  uint64_t v143;
  unsigned int v144;
  uint64_t v145;
  __int128 v146;
  int v147;
  unsigned int v148;
  uint64_t **v149;
  unsigned int v150;
  uint64_t v151;
  _QWORD *v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  int v156;
  uint64_t v157;
  uint64_t v158;
  unsigned __int8 *v159;
  unsigned int v160;
  uint64_t v161;
  BOOL v162;
  unsigned int v163;
  unint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  unint64_t v167;
  uint64_t *v168;
  uint64_t v169;
  unint64_t v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t *v176;
  uint64_t v177;
  uint64_t *v178;
  uint64_t v179;
  uint64_t v180;
  int v181;
  unsigned __int8 *v182;
  uint64_t v183;
  uint64_t v184;
  unint64_t v185;
  unint64_t v186;
  uint64_t v187;
  unsigned int *v188;
  _QWORD *v189;
  int v190;
  BOOL v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  int v196;
  int v197;
  uint64_t *v198;
  unsigned int v199;
  uint64_t **v200;
  llvm::LLVMContext *v201;
  uint64_t *v202;
  uint64_t v203;
  uint64_t v204;
  llvm::Type *v205;
  uint64_t v206;
  llvm *v207;
  uint64_t v208;
  uint64_t v209;
  int v210;
  uint64_t v211;
  unsigned __int8 v212;
  uint64_t v213;
  BOOL v214;
  llvm *v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t *v218;
  unsigned __int8 *v219;
  unint64_t v220;
  uint64_t *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t *v224;
  llvm *v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t v229;
  uint64_t *v230;
  uint64_t v231;
  unsigned int v232;
  uint64_t **v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v237;
  int v238;
  uint64_t v239;
  unsigned __int8 *v240;
  __int128 *v241;
  unsigned int v242;
  unsigned int v243;
  uint64_t *v244;
  uint64_t v245;
  BOOL v246;
  unsigned int v247;
  BOOL v248;
  uint64_t v249;
  llvm *v250;
  uint64_t v251;
  uint64_t v252;
  int v253;
  __int128 v254;
  _QWORD *v255;
  uint64_t v256;
  int v257;
  _QWORD *v258;
  int v259;
  uint64_t v260;
  int v261;
  unsigned __int8 *v262;
  uint64_t v263;
  uint64_t *v264;
  llvm *v265;
  uint64_t v266;
  uint64_t v267;
  unint64_t v268;
  uint64_t v269;
  __int16 v270;
  unsigned __int8 *v271;
  uint64_t **v272;
  const char *v273;
  unint64_t v274;
  int v275;
  uint64_t v276;
  const char *v277;
  BOOL v278;
  unsigned __int8 *v279;
  uint64_t **v280;
  const char *v281;
  int v282;
  uint64_t ExtendedSizeInBits;
  const char *v284;
  BOOL v285;
  unint64_t v286;
  uint64_t v287;
  uint64_t *v288;
  uint64_t *v289;
  uint64_t v290;
  uint64_t v291;
  unsigned __int8 v292;
  unint64_t v293;
  uint64_t v294;
  unint64_t v295;
  uint64_t v296;
  unsigned __int8 *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  unint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t *v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  unint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  llvm *v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t *v319;
  uint64_t v320;
  int v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  _QWORD *v325;
  int v326;
  int v327;
  uint64_t *v328;
  uint64_t v329;
  int v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t *v333;
  uint64_t *v334;
  uint64_t *v335;
  unsigned int v336;
  uint64_t **v337;
  int v338;
  uint64_t v339;
  int v340;
  uint64_t v341;
  uint64_t *v342;
  int v343;
  uint64_t v344;
  int v345;
  uint64_t v346;
  uint64_t *v347;
  int v348;
  uint64_t v349;
  uint64_t *v350;
  uint64_t v351;
  BOOL v352;
  unsigned int v353;
  uint64_t v354;
  BOOL v355;
  unsigned int v356;
  unint64_t v357;
  uint64_t v358;
  unint64_t v359;
  uint64_t v360;
  __int128 v361;
  uint64_t v362;
  unint64_t v363;
  uint64_t *v364;
  uint64_t v365;
  uint64_t v366;
  llvm *v367;
  unsigned __int8 *v368;
  uint64_t *v369;
  uint64_t v370;
  unint64_t v371;
  uint64_t v372;
  __int16 v373;
  uint64_t v374;
  unint64_t v375;
  llvm::Type *v376;
  llvm::LLVMContext *v377;
  uint64_t v378;
  BOOL v379;
  unint64_t v380;
  uint64_t v381;
  llvm *v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  _QWORD *v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  __int16 v391;
  uint64_t v392;
  int v393;
  _QWORD *v394;
  unsigned int v395;
  unsigned int v396;
  uint64_t v397;
  void *__src;
  uint64_t v399;
  uint64_t v400;
  _DWORD *v401;
  uint64_t v402;
  __int128 v403;
  unint64_t v404;
  _QWORD *v405;
  uint64_t v406;
  __int16 v407;
  uint64_t v408;
  __int128 *v409;
  unint64_t v410;
  llvm::Type *v411;
  llvm::LLVMContext *v412;
  unint64_t v413;
  uint64_t v414;
  BOOL v415;
  unint64_t v416;
  uint64_t v417;
  llvm *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  __int16 v426;
  uint64_t v427;
  int v428;
  __int128 *v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  _DWORD *v434;
  __int128 v435;
  __int128 v436;
  _QWORD *v437;
  unsigned int v438;
  unint64_t v439;
  _QWORD *v440;
  uint64_t v441;
  __int16 v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  _QWORD *v447;
  unsigned int v448;
  _QWORD *v449;
  unsigned int v450;
  unint64_t v451;
  uint64_t v452;
  __int16 v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  _QWORD *v458;
  uint64_t v459;
  unsigned int v460;
  llvm *v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  unsigned int v465;
  unsigned int v466;
  uint64_t *v467;
  uint64_t v468;
  uint64_t v469;
  BOOL v470;
  llvm *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  uint64_t v475;
  _QWORD *v476;
  int v477;
  int v478;
  uint64_t *v479;
  unint64_t v480;
  unsigned int v481;
  unint64_t v482;
  uint64_t *v483;
  unsigned int v484;
  uint64_t *v485;
  uint64_t v486;
  uint64_t v487;
  char v488;
  uint64_t v489;
  uint64_t v490;
  __int128 v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t *v496;
  unint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t *v500;
  uint64_t v501;
  uint64_t v502;
  __int16 v503;
  unsigned int v504;
  unint64_t v505;
  uint64_t v506;
  __int16 v507;
  unsigned int v508;
  unint64_t v509;
  uint64_t v510;
  unint64_t v511;
  unint64_t v512;
  uint64_t v513;
  unint64_t v514;
  uint64_t v515;
  unsigned int v516;
  unint64_t v517;
  uint64_t v518;
  uint64_t *v519;
  unsigned int v520;
  uint64_t v521;
  uint64_t v522;
  unint64_t v523;
  uint64_t *v524;
  uint64_t v525;
  llvm *v526;
  uint64_t v527;
  uint64_t v528;
  __int16 v529;
  unsigned int v530;
  unsigned int v531;
  uint64_t v532;
  int v533;
  int v534;
  llvm::Type *v535;
  uint64_t v536;
  __int16 v537;
  unsigned __int8 *v538;
  uint64_t *v539;
  uint64_t v540;
  unint64_t v541;
  uint64_t v542;
  __int16 v543;
  uint64_t v544;
  uint64_t v545;
  _QWORD *v546;
  unsigned int v547;
  _QWORD *v548;
  unsigned int v549;
  unint64_t v550;
  uint64_t v551;
  __int16 v552;
  unsigned int v553;
  uint64_t *v554;
  uint64_t v555;
  __int16 v556;
  uint64_t *v557;
  unsigned int v558;
  unint64_t v559;
  unsigned int v560;
  uint64_t **v561;
  int v562;
  uint64_t v563;
  __int16 v564;
  unsigned int v565;
  unint64_t v566;
  uint64_t *v567;
  uint64_t v568;
  unint64_t v569;
  uint64_t v570;
  unint64_t v571;
  uint64_t v572;
  int v573;
  uint64_t v574;
  uint64_t *v575;
  unsigned int v576;
  uint64_t v577;
  uint64_t v578;
  unint64_t v579;
  uint64_t *v580;
  uint64_t v581;
  llvm *v582;
  uint64_t v583;
  uint64_t v584;
  __int16 v585;
  llvm *v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  uint64_t v590;
  unint64_t v591;
  uint64_t v592;
  unint64_t v593;
  uint64_t v594;
  uint64_t v595;
  int v596;
  uint64_t v597;
  unint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t *v603;
  uint64_t v604;
  uint64_t v605;
  unint64_t v606;
  unint64_t v607;
  uint64_t v608;
  uint64_t *v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t *v614;
  uint64_t v615;
  int v616[2];
  int v617;
  int v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  uint64_t *v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  signed int v628;
  uint64_t v629;
  uint64_t v630;
  int v631;
  llvm *v632;
  uint64_t *v633;
  uint64_t v634;
  unint64_t v635;
  uint64_t v636;
  uint64_t v637;
  unint64_t v638;
  int v639;
  uint64_t v640;
  unint64_t v641;
  uint64_t v642;
  _QWORD *v643;
  uint64_t v644;
  uint64_t v645;
  unint64_t v646;
  uint64_t v647;
  uint64_t v648;
  uint64_t v649;
  llvm *v650;
  unsigned __int8 v651;
  uint64_t v652;
  uint64_t *v653;
  uint64_t *v654;
  llvm *v655;
  uint64_t v656;
  unint64_t v657;
  uint64_t *v658;
  int v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  uint64_t v663;
  int v664;
  __int128 v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  _QWORD *v670;
  unint64_t v671;
  __int128 v672;
  uint64_t *v673;
  __int128 v674;
  llvm::Type *v675;
  __int128 v676;
  __int128 v677;
  uint64_t *v678;
  unint64_t v679;
  uint64_t *v680;
  uint64_t v681;
  uint64_t v682;
  __int128 v683;
  __int128 v684;
  __int128 v685;
  char v686;
  __int128 v687;
  void *v688;
  uint64_t v689;
  _BYTE v690[128];
  void *v691;
  uint64_t v692;
  _BYTE v693[128];
  __int128 v694;
  __int128 v695;
  __int128 v696;
  uint64_t v697;
  int v698;
  uint64_t v699;
  int v700;
  uint64_t v701;
  int v702;
  uint64_t v703;

  v703 = *MEMORY[0x1E0C80C00];
  v6 = sub_1C63498B4((uint64_t)(a1 + 3), a2, a3);
  if ((a1[3] & 1) != 0)
  {
    v7 = a1 + 4;
    v8 = 64;
  }
  else
  {
    v7 = (_QWORD *)a1[4];
    v8 = *((unsigned int *)a1 + 10);
  }
  if (&v7[4 * v8] != (_QWORD *)v6)
    return *(_QWORD *)(v6 + 16);
  v691 = v693;
  v692 = 0x800000000;
  v10 = *(unsigned __int16 *)(a2 + 56);
  if (*(_WORD *)(a2 + 56))
  {
    v11 = *(_QWORD **)(a2 + 32);
    v12 = &v11[5 * *(unsigned __int16 *)(a2 + 56)];
    do
    {
      v13 = sub_1C5CF11D4(a1, *v11, v11[1]);
      v15 = v14;
      v16 = v692;
      if (v692 >= (unint64_t)HIDWORD(v692))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v691, (uint64_t)v693, v692 + 1, 16);
        v16 = v692;
      }
      v17 = (uint64_t *)((char *)v691 + 16 * v16);
      *v17 = v13;
      v17[1] = v15;
      v10 = v692 + 1;
      LODWORD(v692) = v692 + 1;
      v11 += 5;
    }
    while (v11 != v12);
    v18 = (uint64_t *)v691;
  }
  else
  {
    v18 = (uint64_t *)v693;
  }
  v19 = sub_1C636DEEC(*a1, a2, v18, v10);
  v9 = (uint64_t)v19;
  v27 = (unsigned __int8 *)v19[5];
  if (!*((_WORD *)v19 + 29))
  {
LABEL_20:
    if (*((_WORD *)v19 + 28))
    {
      v30 = (unsigned int *)v19[4];
      v31 = &v30[10 * *((unsigned __int16 *)v19 + 28)];
      do
      {
        v32 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v30 + 40) + 16 * v30[2]);
        if (*v32)
        {
          if (*v32 - 15 < 0x9C)
            goto LABEL_31;
        }
        else if ((*(_DWORD *)(*((_QWORD *)v32 + 1) + 8) & 0xFE) == 0x12)
        {
          goto LABEL_31;
        }
        v30 += 10;
      }
      while (v30 != v31);
    }
    v33 = *(unsigned __int16 *)(a2 + 58);
    if (*(_WORD *)(a2 + 58))
    {
      v34 = 0;
      do
      {
        sub_1C5CF4CB0((uint64_t)a1, a2, v34, v9, v34);
        ++v34;
      }
      while (v33 != v34);
    }
    goto LABEL_302;
  }
  v28 = 16 * *((unsigned __int16 *)v19 + 29);
  v29 = v27 + 8;
  while (1)
  {
    if (*(v29 - 8))
    {
      if (*(v29 - 8) - 15 < 0x9C)
        break;
      goto LABEL_19;
    }
    if ((*(_DWORD *)(*(_QWORD *)v29 + 8) & 0xFE) == 0x12)
      break;
LABEL_19:
    v29 += 16;
    v28 -= 16;
    if (!v28)
      goto LABEL_20;
  }
LABEL_31:
  LOBYTE(v681) = 0;
  v682 = 0;
  v35 = *(_WORD *)(a2 + 24);
  switch(v35)
  {
    case 55:
      LODWORD(v36) = *v27;
      if (!*v27)
        goto LABEL_104;
      v37 = (_BYTE *)a1[1];
      v49 = *(unsigned __int16 *)(v9 + 24);
      if (v49 > 0x185)
        goto LABEL_70;
      LOBYTE(v36) = v37[390 * v36 + 3862 + v49];
      if (!(_BYTE)v36)
        goto LABEL_104;
      goto LABEL_36;
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
    case 65:
    case 66:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 141:
    case 143:
    case 145:
    case 159:
    case 160:
    case 167:
    case 168:
    case 169:
    case 170:
    case 171:
    case 172:
    case 173:
    case 174:
    case 175:
    case 176:
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 188:
    case 189:
    case 190:
    case 191:
    case 192:
    case 198:
    case 199:
    case 200:
    case 201:
    case 204:
    case 205:
    case 206:
    case 207:
    case 208:
    case 209:
    case 210:
    case 211:
    case 212:
    case 215:
    case 222:
    case 223:
    case 224:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 310:
    case 334:
    case 335:
    case 336:
    case 337:
    case 338:
    case 339:
    case 340:
    case 341:
    case 342:
    case 343:
    case 344:
    case 345:
    case 346:
    case 347:
    case 348:
    case 349:
    case 350:
    case 351:
    case 352:
    case 353:
    case 354:
    case 355:
    case 356:
    case 357:
    case 358:
    case 359:
    case 360:
    case 361:
    case 362:
    case 363:
    case 364:
    case 368:
    case 369:
    case 370:
    case 371:
    case 372:
    case 373:
    case 374:
    case 375:
    case 376:
    case 377:
    case 378:
    case 379:
    case 380:
    case 381:
    case 382:
    case 383:
    case 384:
    case 385:
    case 386:
    case 387:
    case 388:
    case 389:
      LODWORD(v36) = *v27;
      if (*v27)
        goto LABEL_33;
      goto LABEL_104;
    case 88:
    case 89:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
    case 95:
      v21 = *(_QWORD *)v27;
      if (!*(_QWORD *)v27)
        goto LABEL_104;
      v37 = (_BYTE *)a1[1];
      if (*(unsigned __int16 *)(v9 + 24) > 0x185u)
        goto LABEL_70;
      LOBYTE(v36) = v37[390 * *(_QWORD *)v27 + 3862 + *(unsigned __int16 *)(v9 + 24)];
      if ((_BYTE)v36)
        goto LABEL_36;
      if (((*(uint64_t (**)(_BYTE *))(*(_QWORD *)v37 + 520))(v37) & 1) == 0)
        goto LABEL_104;
      goto LABEL_96;
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
    case 109:
    case 110:
    case 111:
    case 112:
    case 113:
    case 114:
    case 115:
    case 116:
    case 117:
    case 118:
    case 119:
    case 120:
    case 121:
    case 122:
    case 123:
    case 124:
    case 125:
    case 126:
    case 127:
    case 128:
    case 129:
    case 130:
    case 131:
    case 132:
    case 133:
    case 134:
    case 135:
    case 136:
    case 137:
    case 138:
    case 139:
      v21 = *(_QWORD *)v27;
      v22 = *((_QWORD *)v27 + 1);
      v681 = *(_QWORD *)v27;
      v682 = v22;
      if ((v35 & 0xFFFE) == 0x86)
      {
        v39 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)(v19[4] + 40) + 40) + 16 * *(unsigned int *)(v19[4] + 48));
        v21 = *v39;
        v22 = v39[1];
        v681 = *v39;
        v682 = v22;
      }
      v37 = (_BYTE *)a1[1];
      v20 = *(unsigned __int16 *)(v9 + 24);
      if (!(_BYTE)v21)
        goto LABEL_42;
      if (v20 > 0x185)
        goto LABEL_70;
      LODWORD(v36) = v37[390 * v21 + 3862 + v20];
      if ((_DWORD)v36 != 2)
        goto LABEL_36;
LABEL_42:
      if (!v37[184290] && !sub_1C632C838((uint64_t)v37, v20, v21))
      {
        if ((_BYTE)v681)
        {
          v40 = sub_1C47F37A0((unsigned __int8 *)&v681);
          v22 = 0;
        }
        else
        {
          EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v682 + 24), 0, v21);
          v22 = v63;
          v40 = EVT;
        }
        v64 = a1[1];
        v20 = *(unsigned __int16 *)(v9 + 24);
        if ((!v40 || v20 <= 0x185 && *(_BYTE *)(v64 + 390 * v40 + v20 + 3862) == 2)
          && !sub_1C632C838(v64, v20, v40))
        {
          goto LABEL_96;
        }
      }
      goto LABEL_104;
    case 193:
      v36 = v19[4];
      v47 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v36 + 40) + 16 * *(unsigned int *)(v36 + 8));
      v37 = (_BYTE *)a1[1];
      LODWORD(v36) = (*(_DWORD *)&v37[92 * *(unsigned int *)(*(_QWORD *)(v36 + 80) + 76)
                                    + 171588
                                    + 4 * (v47 >> 3)] >> (4 * (v47 & 7))) & 0xF;
      if ((_DWORD)v36)
        goto LABEL_36;
      LODWORD(v36) = *v27;
      if (!*v27)
        goto LABEL_104;
      goto LABEL_34;
    case 202:
    case 203:
    case 321:
    case 322:
    case 323:
    case 324:
    case 325:
    case 326:
    case 327:
    case 328:
    case 329:
    case 330:
    case 331:
    case 332:
    case 333:
    case 366:
    case 367:
      v41 = v19[4];
      v42 = *(_QWORD *)v41;
      v43 = *(unsigned int *)(v41 + 8);
      goto LABEL_47;
    case 253:
      v45 = (*((unsigned __int16 *)v19 + 13) >> 10) & 3;
      v36 = v19[10];
      if (v19[10])
        v46 = (v36 - 15) < 0x9C;
      else
        v46 = (*(_DWORD *)(v19[11] + 8) & 0xFE) == 18;
      if (!v46 || v45 == 0)
        goto LABEL_96;
      if (!v19[10])
        goto LABEL_104;
      v61 = *v27;
      if (!v61)
        goto LABEL_104;
      LODWORD(v36) = (*(unsigned __int16 *)(a1[1] + 358 * v61 + 2 * v36 + 73672) >> (4 * v45)) & 0xF;
      goto LABEL_36;
    case 254:
      v36 = v19[10];
      if (v19[10])
      {
        if ((v36 - 15) >= 0x9C)
          goto LABEL_96;
      }
      else if ((*(_DWORD *)(v19[11] + 8) & 0xFE) != 0x12)
      {
LABEL_96:
        v688 = v690;
        v689 = 0x800000000;
        goto LABEL_297;
      }
      if ((*((_WORD *)v19 + 13) & 0x400) == 0)
        goto LABEL_96;
      if (v19[10]
        && *(_BYTE *)(*(_QWORD *)(*(_QWORD *)(v19[4] + 40) + 40) + 16 * *(unsigned int *)(v19[4] + 48)))
      {
        LOBYTE(v36) = *(_BYTE *)(a1[1]
                               + 179
                               * *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v19[4] + 40) + 40)
                                                    + 16 * *(unsigned int *)(v19[4] + 48))
                               + v36
                               + 137754);
LABEL_36:
        v688 = v690;
        v689 = 0x800000000;
        __asm { BR              X10 }
      }
LABEL_104:
      v688 = v690;
      v689 = 0x800000000;
      goto LABEL_105;
    case 319:
    case 320:
      v44 = v19[4];
      v42 = *(_QWORD *)(v44 + 40);
      v43 = *(unsigned int *)(v44 + 48);
LABEL_47:
      v36 = *(unsigned __int8 *)(*(_QWORD *)(v42 + 40) + 16 * v43);
      if (!v36)
        goto LABEL_104;
LABEL_33:
      v37 = (_BYTE *)a1[1];
      goto LABEL_34;
    case 365:
      v36 = v19[4];
      v48 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v36 + 40) + 16 * *(unsigned int *)(v36 + 8));
      v37 = (_BYTE *)a1[1];
      LODWORD(v36) = (*(_DWORD *)&v37[92 * *(unsigned int *)(*(_QWORD *)(v36 + 80) + 76)
                                    + 171588
                                    + 4 * (v48 >> 3)] >> (4 * (v48 & 7))) & 0xF;
      if ((_DWORD)v36)
        goto LABEL_36;
      LODWORD(v36) = v48;
      if (!(_BYTE)v48)
        goto LABEL_104;
LABEL_34:
      v38 = *(unsigned __int16 *)(v9 + 24);
      if (v38 <= 0x185)
      {
        LOBYTE(v36) = v37[390 * v36 + 3862 + v38];
        goto LABEL_36;
      }
LABEL_70:
      v688 = v690;
      v689 = 0x800000000;
      v50 = (*(uint64_t (**)(_BYTE *, uint64_t, _QWORD, uint64_t))(*(_QWORD *)v37 + 1968))(v37, v9, 0, *a1);
      if (!v50)
      {
LABEL_105:
        v65 = *(unsigned __int16 *)(v9 + 24);
        if (v65 <= 0x140)
        {
          switch(*(_WORD *)(v9 + 24))
          {
            case 0x37:
              if (*(_WORD *)(v9 + 58))
              {
                v143 = 0;
                v144 = v689;
                v145 = 40 * *(unsigned __int16 *)(v9 + 58);
                do
                {
                  v146 = *(_OWORD *)(*(_QWORD *)(v9 + 32) + v143);
                  if (v144 >= HIDWORD(v689))
                  {
                    v665 = *(_OWORD *)(*(_QWORD *)(v9 + 32) + v143);
                    llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v144 + 1, 16);
                    v146 = v665;
                    v144 = v689;
                  }
                  *((_OWORD *)v688 + v144) = v146;
                  v144 = v689 + 1;
                  LODWORD(v689) = v689 + 1;
                  v143 += 40;
                }
                while (v145 != v143);
              }
              goto LABEL_222;
            case 0x38:
            case 0x39:
            case 0x3A:
            case 0x3B:
            case 0x3C:
            case 0x3F:
            case 0x40:
            case 0x41:
            case 0x42:
            case 0x43:
            case 0x44:
            case 0x45:
            case 0x46:
            case 0x47:
            case 0x48:
            case 0x49:
            case 0x4A:
            case 0x4B:
            case 0x56:
            case 0x57:
            case 0x5A:
            case 0x5B:
            case 0x5E:
            case 0x5F:
            case 0x60:
            case 0x62:
            case 0x63:
            case 0x64:
            case 0x8C:
            case 0x8D:
            case 0x8E:
            case 0x8F:
            case 0x90:
            case 0x91:
            case 0x92:
            case 0x93:
            case 0x94:
            case 0x95:
            case 0x96:
            case 0x97:
            case 0x98:
            case 0x99:
            case 0x9A:
            case 0x9B:
            case 0x9C:
            case 0x9D:
            case 0x9E:
            case 0x9F:
            case 0xA0:
            case 0xA1:
            case 0xA2:
            case 0xA3:
            case 0xA4:
            case 0xA5:
            case 0xA6:
            case 0xAB:
            case 0xAC:
            case 0xAD:
            case 0xAF:
            case 0xB0:
            case 0xB1:
            case 0xBB:
            case 0xC0:
            case 0xC2:
            case 0xC3:
            case 0xC4:
            case 0xC5:
            case 0xC6:
            case 0xC7:
            case 0xC8:
            case 0xC9:
            case 0xCA:
            case 0xD0:
            case 0xD2:
            case 0xD3:
            case 0xD4:
            case 0xD5:
            case 0xD6:
            case 0xD7:
            case 0xD8:
            case 0xD9:
            case 0xDA:
            case 0xDB:
            case 0xDC:
            case 0xDD:
            case 0xDF:
            case 0xE0:
            case 0xE1:
            case 0xE2:
            case 0xE3:
            case 0xE4:
            case 0xE5:
            case 0xE6:
            case 0xE7:
            case 0xE8:
            case 0xE9:
            case 0xEA:
            case 0xEB:
            case 0xEC:
            case 0xED:
            case 0xEE:
            case 0xEF:
            case 0xF0:
            case 0xF1:
            case 0xF2:
            case 0xF3:
            case 0xF4:
            case 0xF5:
            case 0xF8:
            case 0xF9:
            case 0xFA:
            case 0xFB:
            case 0xFC:
              goto LABEL_292;
            case 0x3D:
            case 0x3E:
              *(_QWORD *)&v695 = 0;
              DWORD2(v695) = 0;
              if (sub_1C5DA3F1C(a1[1], v9, (uint64_t)&v695, *a1, v23, v24, v25, v26))
              {
                v100 = (uint64_t *)v695;
              }
              else
              {
                v100 = sub_1C5D625F4(*a1, v9, 0);
                *(_QWORD *)&v695 = v100;
                DWORD2(v695) = v147;
              }
              v142 = (uint64_t *)*((_QWORD *)&v695 + 1);
              goto LABEL_218;
            case 0x4C:
            case 0x4E:
              *(_QWORD *)&v695 = 0;
              DWORD2(v695) = 0;
              *(_QWORD *)&v694 = 0;
              DWORD2(v694) = 0;
              sub_1C5DA2BD4(a1[1], v9, (uint64_t *)&v695, (uint64_t)&v694, *a1, v24, v25, v26);
              goto LABEL_158;
            case 0x4D:
            case 0x4F:
              *(_QWORD *)&v695 = 0;
              DWORD2(v695) = 0;
              *(_QWORD *)&v694 = 0;
              DWORD2(v694) = 0;
              sub_1C5DA28DC(a1[1], v9, (uint64_t *)&v695, (uint64_t)&v694, *a1, v24, v25, v26);
LABEL_158:
              v101 = v695;
              v102 = v689;
              if (v689 >= HIDWORD(v689))
              {
                v674 = v695;
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
                v101 = v674;
                v102 = v689;
              }
              *((_OWORD *)v688 + v102) = v101;
              v97 = HIDWORD(v689);
              v98 = (v689 + 1);
              LODWORD(v689) = v689 + 1;
              v99 = v694;
              goto LABEL_182;
            case 0x50:
            case 0x51:
              *(_QWORD *)&v694 = 0;
              DWORD2(v694) = 0;
              *(_QWORD *)&v687 = 0;
              DWORD2(v687) = 0;
              if ((sub_1C5DA2F18((uint64_t *)a1[1], v9, (uint64_t **)&v694, (uint64_t)&v687, *a1) & 1) == 0)
              {
                sub_1C5D62B4C(*a1, v9, 0, (uint64_t **)&v695);
                *(_QWORD *)&v694 = v695;
                DWORD2(v694) = DWORD2(v695);
                *(_QWORD *)&v687 = v696;
                DWORD2(v687) = DWORD2(v696);
              }
              v95 = v694;
              v96 = v689;
              if (v689 >= HIDWORD(v689))
              {
                v676 = v694;
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
                v95 = v676;
                v96 = v689;
              }
              *((_OWORD *)v688 + v96) = v95;
              v97 = HIDWORD(v689);
              v98 = (v689 + 1);
              LODWORD(v689) = v689 + 1;
              v99 = v687;
              goto LABEL_182;
            case 0x52:
            case 0x53:
            case 0x54:
            case 0x55:
              v66 = sub_1C5DA0CBC((unsigned int *)a1[1], v9, *a1, v22, v23, v24, v25, v26);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0x58:
            case 0x59:
              v66 = sub_1C5DA1354((uint64_t *)a1[1], v9, *a1);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0x5C:
            case 0x5D:
              v85 = (uint64_t *)a1[1];
              v86 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v695 = v86;
              if (v86)
                llvm::MetadataTracking::track((uint64_t)&v695, v86, 2);
              DWORD2(v695) = *(_DWORD *)(v9 + 60);
              v87 = *(uint64_t **)(v9 + 32);
              v88 = *v87;
              v89 = v87[1];
              v90 = v87[5];
              v91 = v87[6];
              v92 = *(_QWORD *)(v87[10] + 80);
              v93 = (unsigned int *)(v92 + 24);
              if (*(_DWORD *)(v92 + 32) >= 0x41u)
                v93 = *(unsigned int **)v93;
              v51 = sub_1C5DA21E8(v85, v65, (const llvm::APInt *)&v695, v88, v89, v90, v91, *v93, *a1);
              v52 = v94;
              if ((_QWORD)v695)
                llvm::MetadataTracking::untrack((uint64_t)&v695, (unsigned __int8 *)v695);
              if (!v51)
                goto LABEL_222;
              goto LABEL_294;
            case 0x61:
              v134 = **(unsigned __int8 **)(v9 + 40);
              v135 = a1[1];
              if (v134 != 1 && (!**(_BYTE **)(v9 + 40) || !*(_QWORD *)(v135 + 8 * v134 + 96))
                || (*(unsigned __int8 *)(v135 + 390 * **(unsigned __int8 **)(v9 + 40) + 4084) | 4) != 4
                || v134 != 1 && !*(_QWORD *)(v135 + 8 * v134 + 96)
                || (*(unsigned __int8 *)(v135 + 390 * **(unsigned __int8 **)(v9 + 40) + 3958) | 4) != 4)
              {
                goto LABEL_292;
              }
              goto LABEL_222;
            case 0x65:
            case 0x66:
            case 0x67:
            case 0x68:
            case 0x69:
            case 0x6A:
            case 0x6B:
            case 0x6C:
            case 0x6D:
            case 0x6E:
            case 0x6F:
            case 0x70:
            case 0x71:
            case 0x72:
            case 0x73:
            case 0x74:
            case 0x75:
            case 0x76:
            case 0x77:
            case 0x78:
            case 0x79:
            case 0x7A:
            case 0x7B:
            case 0x7C:
            case 0x7D:
            case 0x7E:
            case 0x7F:
            case 0x80:
            case 0x81:
            case 0x82:
            case 0x83:
            case 0x84:
            case 0x85:
            case 0x86:
            case 0x87:
            case 0x88:
            case 0x89:
            case 0x8A:
            case 0x8B:
              if (v65 == 133)
                goto LABEL_113;
              if (v65 == 135)
LABEL_109:
                sub_1C5CF5118((uint64_t)a1, v9, (uint64_t)&v688);
              else
                sub_1C5CF5854(a1, v9, (_BOOL8)&v688);
              goto LABEL_222;
            case 0xA7:
            case 0xA8:
            case 0xA9:
            case 0xAA:
              sub_1C5DA0948(a1[1], v9);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xAE:
              v66 = sub_1C5D9C6B8((uint64_t *)a1[1], v9, *a1, 0);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xB2:
            case 0xB3:
              v66 = sub_1C5D99EA4(a1[1], v9, 0, *a1);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xB4:
            case 0xB5:
              v66 = sub_1C5D99590(a1[1], v9, *a1);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xB6:
              v178 = *(uint64_t **)(v9 + 40);
              v179 = *v178;
              v180 = v178[1];
              v181 = *v178;
              if (*v178)
              {
                if ((v181 - 120) < 0x33)
                {
LABEL_238:
                  v66 = sub_1C6378FFC((uint64_t *)a1[1], v9, *a1);
                  goto LABEL_293;
                }
              }
              else if (*(_BYTE *)(v180 + 8) == 19)
              {
                goto LABEL_238;
              }
              *(_QWORD *)&v695 = &v696;
              *((_QWORD *)&v695 + 1) = 0x1000000000;
              v650 = (llvm *)v179;
              sub_1C5CF5770(v179, v180, (uint64_t)&v695);
              v215 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(*a1 + 56), 3, 0, DWORD2(v695), 0);
              v217 = v216;
              if ((*(unsigned int (**)(uint64_t, _QWORD, _QWORD, llvm *, uint64_t))(*(_QWORD *)a1[1] + 488))(a1[1], v695, DWORD2(v695), v215, v216))
              {
                v642 = v180;
                v367 = v215;
                v368 = *(unsigned __int8 **)(v9 + 64);
                *(_QWORD *)&v694 = v368;
                if (v368)
                  llvm::MetadataTracking::track((uint64_t)&v694, v368, 2);
                DWORD2(v694) = *(_DWORD *)(v9 + 60);
                v369 = *(uint64_t **)(v9 + 32);
                v370 = *v369;
                v371 = v369[1];
                v372 = *(_QWORD *)(*a1 + 832);
                if (v372)
                  v373 = *(_WORD *)(v372 + 8);
                else
                  v373 = 0;
                v633 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v694, v215, v217, v370, v371, v373);
                v445 = v444;
                v446 = *a1;
                v447 = sub_1C61312D0(*a1, v367, v217);
                v449 = sub_1C5D41DE4(v446, v367, v217, (uint64_t)&v694, (uint64_t)v633, v445, (uint64_t)v447, v448, (void *)v695, DWORD2(v695));
                v451 = v445 & 0xFFFFFFFF00000000 | v450;
                v452 = *(_QWORD *)(*a1 + 832);
                if (v452)
                  v453 = *(_WORD *)(v452 + 8);
                else
                  v453 = 0;
                v51 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v694, v650, v642, (uint64_t)v449, v451, v453);
                v52 = v454;
                if ((_QWORD)v694)
                  llvm::MetadataTracking::untrack((uint64_t)&v694, (unsigned __int8 *)v694);
                goto LABEL_332;
              }
              if (!v181)
                goto LABEL_330;
              v218 = (uint64_t *)a1[1];
              if (v181 == 1)
              {
                if (!(_BYTE)v650)
                  goto LABEL_330;
              }
              else if (!(_BYTE)v650 || !v218[v650 + 12])
              {
                goto LABEL_330;
              }
              if ((*((unsigned __int8 *)v218 + 390 * v650 + 4037) | 4) == 4
                && (v181 == 1 || v218[v650 + 12])
                && (*((unsigned __int8 *)v218 + 390 * v650 + 4039) | 4) == 4
                && (v181 == 1 || v218[v650 + 12]))
              {
                v242 = *((unsigned __int8 *)v218 + 390 * v650 + 4033);
                if (v242 <= 4 && ((1 << v242) & 0x13) != 0 && (v181 == 1 || v218[v650 + 12]))
                {
                  v243 = *((unsigned __int8 *)v218 + 390 * v650 + 4034);
                  if (v243 <= 4 && ((1 << v243) & 0x13) != 0)
                  {
                    v244 = sub_1C6378FFC(v218, v9, *a1);
LABEL_331:
                    v51 = v244;
                    v52 = v245;
LABEL_332:
                    if ((__int128 *)v695 != &v696)
                      free((void *)v695);
                    goto LABEL_294;
                  }
                }
              }
LABEL_330:
              v244 = sub_1C5D625F4(*a1, v9, 0);
              goto LABEL_331;
            case 0xB7:
            case 0xBC:
              v66 = sub_1C5D9C098(a1[1], v9, *a1);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xB8:
            case 0xBD:
              v66 = sub_1C6378B0C((uint64_t *)a1[1], v9, *a1);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xB9:
              v66 = sub_1C5D9B888((uint64_t *)a1[1], v9, *a1);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xBA:
              v136 = *(uint64_t **)(v9 + 40);
              v138 = *v136;
              v137 = v136[1];
              *(_QWORD *)&v694 = v138;
              *((_QWORD *)&v694 + 1) = v137;
              if ((_BYTE)v138)
              {
                if (v138 - 120 < 0x33)
                {
LABEL_207:
                  v139 = (uint64_t *)a1[1];
LABEL_208:
                  v140 = sub_1C5D9CB70(v139, v9, *a1);
                  goto LABEL_209;
                }
              }
              else if (*(_BYTE *)(v137 + 8) == 19)
              {
                goto LABEL_207;
              }
              v211 = a1[1];
              v212 = sub_1C6131264((unsigned __int8 *)&v694, v20, v21);
              if (v212 == 1)
              {
                if (!v212)
                  goto LABEL_458;
              }
              else if (!v212 || !*(_QWORD *)(v211 + 8 * v212 + 96))
              {
LABEL_458:
                v460 = sub_1C6131328((unsigned __int8 *)&v694, v213, v214);
                if (v460 >= 9 && (v460 & 7) == 0)
                {
                  *(_QWORD *)&v695 = &v696;
                  *((_QWORD *)&v695 + 1) = 0x1000000000;
                  sub_1C5CF5770(v694, *((uint64_t *)&v694 + 1), (uint64_t)&v695);
                  v461 = (llvm *)sub_1C4816F98(*(llvm::LLVMContext **)(*a1 + 56), 3, 0, DWORD2(v695), 0);
                  v463 = v462;
                  if ((*(unsigned int (**)(uint64_t, _QWORD, _QWORD, llvm *, uint64_t))(*(_QWORD *)a1[1]
                                                                                                + 488))(a1[1], v695, DWORD2(v695), v461, v462))
                  {
                    v464 = a1[1];
                    if (v461 == 1
                      || (_BYTE)v461 && *(_QWORD *)(v464 + 8 * v461 + 96))
                    {
                      if ((*(unsigned __int8 *)(v464 + 390 * v461 + 4048) | 4) == 4
                        || (v461 == 1 || *(_QWORD *)(v464 + 8 * v461 + 96))
                        && (*(unsigned __int8 *)(v464 + 390 * v461 + 4037) | 4) == 4
                        && (v461 == 1 || *(_QWORD *)(v464 + 8 * v461 + 96))
                        && (*(unsigned __int8 *)(v464 + 390 * v461 + 4039) | 4) == 4
                        && (_BYTE)v461
                        && (v461 == 1 || *(_QWORD *)(v464 + 8 * v461 + 96))
                        && (v465 = *(unsigned __int8 *)(v464 + 390 * v461 + 4033), v465 <= 4)
                        && ((1 << v465) & 0x13) != 0
                        && (v461 == 1 || *(_QWORD *)(v464 + 8 * v461 + 96))
                        && (v466 = *(unsigned __int8 *)(v464 + 390 * v461 + 4034), v466 <= 4)
                        && ((1 << v466) & 0x13) != 0)
                      {
                        v538 = *(unsigned __int8 **)(v9 + 64);
                        *(_QWORD *)&v687 = v538;
                        if (v538)
                          llvm::MetadataTracking::track((uint64_t)&v687, v538, 2);
                        DWORD2(v687) = *(_DWORD *)(v9 + 60);
                        v539 = *(uint64_t **)(v9 + 32);
                        v540 = *v539;
                        v541 = v539[1];
                        v542 = *(_QWORD *)(*a1 + 832);
                        if (v542)
                          v543 = *(_WORD *)(v542 + 8);
                        else
                          v543 = 0;
                        v678 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v687, v461, v463, v540, v541, v543);
                        v545 = v544;
                        v660 = *a1;
                        v546 = sub_1C61312D0(*a1, v461, v463);
                        v548 = sub_1C5D41DE4(v660, v461, v463, (uint64_t)&v687, (uint64_t)v678, v545, (uint64_t)v546, v547, (void *)v695, DWORD2(v695));
                        v679 = v545 & 0xFFFFFFFF00000000;
                        v550 = v545 & 0xFFFFFFFF00000000 | v549;
                        v551 = *(_QWORD *)(*a1 + 832);
                        if (v551)
                          v552 = *(_WORD *)(v551 + 8);
                        else
                          v552 = 0;
                        v554 = sub_1C5D52060(*a1, 186, (const llvm::APInt *)&v687, v461, v463, (uint64_t)v548, v550, v552);
                        v555 = *(_QWORD *)(*a1 + 832);
                        if (v555)
                          v556 = *(_WORD *)(v555 + 8);
                        else
                          v556 = 0;
                        v557 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v687, (llvm *)v694, *((uint64_t *)&v694 + 1), (uint64_t)v554, v553 | v679, v556);
                        v559 = v558 | v679;
                        v560 = v689;
                        if (v689 >= HIDWORD(v689))
                        {
                          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
                          v560 = v689;
                        }
                        v561 = (uint64_t **)((char *)v688 + 16 * v560);
                        *v561 = v557;
                        v561[1] = (uint64_t *)v559;
                        LODWORD(v689) = v689 + 1;
                        if ((_QWORD)v687)
                          llvm::MetadataTracking::untrack((uint64_t)&v687, (unsigned __int8 *)v687);
                        if ((__int128 *)v695 != &v696)
                          free((void *)v695);
                        goto LABEL_222;
                      }
                    }
                  }
                  if ((__int128 *)v695 != &v696)
                    free((void *)v695);
                }
                if ((_BYTE)v694)
                {
                  v139 = (uint64_t *)a1[1];
                  if ((v694 == 1 || v139[v694 + 12])
                    && (*((unsigned __int8 *)v139 + 390 * v694 + 4037) | 4) == 4
                    && (v694 == 1 || v139[v694 + 12])
                    && (*((unsigned __int8 *)v139 + 390 * v694 + 4039) | 4) == 4
                    && (v694 == 1 || v139[v694 + 12]))
                  {
                    v530 = *((unsigned __int8 *)v139 + 390 * v694 + 4033);
                    if (v530 <= 4
                      && ((1 << v530) & 0x13) != 0
                      && (v694 == 1 || v139[v694 + 12]))
                    {
                      v531 = *((unsigned __int8 *)v139 + 390 * v694 + 4034);
                      if (v531 <= 4 && ((1 << v531) & 0x13) != 0)
                        goto LABEL_208;
                    }
                  }
                }
LABEL_411:
                v140 = sub_1C5D625F4(*a1, v9, 0);
LABEL_209:
                v100 = v140;
                v142 = v141;
LABEL_218:
                v148 = v689;
                if (v689 >= HIDWORD(v689))
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
                  v148 = v689;
                }
                v149 = (uint64_t **)((char *)v688 + 16 * v148);
                *v149 = v100;
                v149[1] = v142;
LABEL_221:
                LODWORD(v689) = v689 + 1;
                goto LABEL_222;
              }
              if ((*(unsigned __int8 *)(v211 + 390 * v212 + 4048) | 4) == 4)
                goto LABEL_411;
              goto LABEL_458;
            case 0xBE:
              v695 = *(_OWORD *)*(_QWORD *)(v9 + 40);
              v131 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v694 = v131;
              v132 = v695;
              if (v131)
                llvm::MetadataTracking::track((uint64_t)&v694, v131, 2);
              DWORD2(v694) = *(_DWORD *)(v9 + 60);
              if (!v132)
                goto LABEL_402;
              v133 = a1[1];
              if (*(_BYTE *)(v133 + 390 * v132 + 4033) == 2
                || *(_BYTE *)(v133 + 390 * v132 + 4035) == 2
                || *(_BYTE *)(v133 + 390 * v132 + 4034) == 2)
              {
                goto LABEL_402;
              }
              v374 = 156;
              if (v132 - 15 < 0x69)
                v374 = 146;
              if (*(_BYTE *)(v133 + 390 * v132 + v374 + 3862) == 2)
              {
LABEL_402:
                v176 = sub_1C5D625F4(*a1, v9, 0);
                goto LABEL_403;
              }
              v467 = *(uint64_t **)(v9 + 32);
              v468 = v467[1];
              v644 = *v467;
              v657 = v467[6];
              v613 = v467[5];
              v623 = v467[10];
              v671 = v467[11];
              *(_QWORD *)&v687 = sub_1C612EE78((llvm::EVT *)&v695, (uint64_t)v131, v21);
              *((_QWORD *)&v687 + 1) = v469;
              v471 = (llvm *)sub_1C6131264((unsigned __int8 *)&v687, v469, v470);
              v473 = v472;
              v474 = *a1;
              v634 = sub_1C63293BC(*a1, (const llvm::APInt *)&v694, (_BOOL8)v471, v472, 0, 0);
              v604 = v475;
              v476 = sub_1C6366AB4(*a1, 0, (const llvm::APInt *)&v694, v471, v473, 0, 0);
              v479 = sub_1C4815A8C(v474, (const llvm::APInt *)&v694, v471, v473, v644, v468, v634, v604, (uint64_t)v476, v477, v478);
              v480 = v468 & 0xFFFFFFFF00000000;
              v482 = v468 & 0xFFFFFFFF00000000 | v481;
              if ((_BYTE)v695)
              {
                if (v695 - 15 >= 0x69)
                  goto LABEL_487;
              }
              else if (*(_BYTE *)(*((_QWORD *)&v695 + 1) + 8) != 18)
              {
LABEL_487:
                v483 = sub_1C5CA0F18(*a1, (llvm *)v687, *((uint64_t *)&v687 + 1), (const llvm::APInt *)&v694, (uint64_t)v479, v482);
                goto LABEL_498;
              }
              v483 = sub_1C5CA0FB8(*a1, (llvm *)v687, *((uint64_t *)&v687 + 1), (const llvm::APInt *)&v694, (uint64_t)v479, v482);
LABEL_498:
              v645 = (uint64_t)v483;
              v635 = v484 | v480;
              v502 = *(_QWORD *)(*a1 + 832);
              if (v502)
                v503 = *(_WORD *)(v502 + 8);
              else
                v503 = 0;
              v614 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v694, (llvm *)v687, *((uint64_t *)&v687 + 1), v613, v657, v503);
              v505 = v657 & 0xFFFFFFFF00000000 | v504;
              v506 = *(_QWORD *)(*a1 + 832);
              if (v506)
                v507 = *(_WORD *)(v506 + 8);
              else
                v507 = 0;
              v606 = v657 & 0xFFFFFFFF00000000;
              v658 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v694, (llvm *)v687, *((uint64_t *)&v687 + 1), v623, v671, v507);
              v509 = v671 & 0xFFFFFFFF00000000 | v508;
              v624 = sub_1C6366760(*a1, (const llvm::APInt *)&v694, v645, v635, (llvm *)v687, *((uint64_t *)&v687 + 1));
              v512 = v511;
              v513 = *(_QWORD *)(*a1 + 832);
              if (v513)
                LOWORD(v513) = *(_WORD *)(v513 + 8);
              v514 = v671 & 0xFFFFFFFF00000000;
              v673 = sub_1C5D56C70(*a1, 171, (const llvm::APInt *)&v694, (llvm *)v687, *((uint64_t *)&v687 + 1), (uint64_t)v614, v505, v510, v645, v635, v513);
              v517 = v516 | v606;
              v518 = *(_QWORD *)(*a1 + 832);
              if (v518)
                LOWORD(v518) = *(_WORD *)(v518 + 8);
              v519 = sub_1C5D56C70(*a1, 171, (const llvm::APInt *)&v694, (llvm *)v687, *((uint64_t *)&v687 + 1), (uint64_t)v658, v509, v515, (uint64_t)v624, v512, v518);
              v522 = *(_QWORD *)(*a1 + 832);
              if (v522)
                LOWORD(v522) = *(_WORD *)(v522 + 8);
              v524 = sub_1C5D56C70(*a1, 172, (const llvm::APInt *)&v694, (llvm *)v687, *((uint64_t *)&v687 + 1), (uint64_t)v673, v517, v521, (uint64_t)v519, v520 | v514, v522);
              v525 = *(_QWORD *)(v9 + 40);
              v526 = *(llvm **)v525;
              v527 = *(_QWORD *)(v525 + 8);
              v528 = *(_QWORD *)(*a1 + 832);
              if (v528)
                v529 = *(_WORD *)(v528 + 8);
              else
                v529 = 0;
              v176 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v694, v526, v527, (uint64_t)v524, v523, v529);
LABEL_403:
              v51 = v176;
              v52 = v177;
LABEL_404:
              v240 = (unsigned __int8 *)v694;
              if (!(_QWORD)v694)
                goto LABEL_294;
              v241 = &v694;
              break;
            case 0xBF:
              v182 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v695 = v182;
              if (v182)
                llvm::MetadataTracking::track((uint64_t)&v695, v182, 2);
              DWORD2(v695) = *(_DWORD *)(v9 + 60);
              v183 = *(_QWORD *)(v9 + 32);
              v184 = *(_QWORD *)v183;
              v185 = *(_QWORD *)(v183 + 8);
              v694 = *(_OWORD *)(v183 + 40);
              v187 = *(_QWORD *)(v183 + 80);
              v186 = *(_QWORD *)(v183 + 88);
              v687 = *(_OWORD *)(*(_QWORD *)(v184 + 40) + 16 * v185);
              if (!(_BYTE)v687)
                goto LABEL_311;
              v188 = (unsigned int *)a1[1];
              if (*((_BYTE *)v188 + 390 * v687 + 4033) == 2
                || *((_BYTE *)v188 + 390 * v687 + 4035) == 2
                || *((_BYTE *)v188 + 390 * v687 + 4034) == 2)
              {
                goto LABEL_311;
              }
              v649 = v694;
              v666 = DWORD2(v694);
              v189 = (_QWORD *)(*(_QWORD *)(v694 + 40) + 16 * DWORD2(v694));
              v190 = sub_1C6329468(v188, *v189, v189[1]);
              if (v190 == 1)
              {
                v485 = (uint64_t *)(*(_QWORD *)(v649 + 40) + 16 * v666);
                v487 = *v485;
                v486 = v485[1];
                *(_QWORD *)&v685 = v487;
                *((_QWORD *)&v685 + 1) = v486;
                if ((_BYTE)v487)
                  v488 = sub_1C47F37A0((unsigned __int8 *)&v685);
                else
                  v488 = llvm::EVT::getEVT(*(llvm::EVT **)(v486 + 24), 0, v191);
                if (v488 != 2)
                  goto LABEL_311;
              }
              else if (v190 != 2)
              {
                goto LABEL_311;
              }
              v532 = sub_1C47A8C74((unsigned __int8 *)&v687);
              v659 = v533;
              v675 = (llvm::Type *)v532;
              v535 = sub_1C6131A64((unsigned int *)&v694);
              v239 = *a1;
              if (v675 != v535 || v659 != v534)
                goto LABEL_312;
              v536 = *(_QWORD *)(v239 + 832);
              if (v536)
                v537 = *(_WORD *)(v536 + 8);
              else
                v537 = 0;
              *(_QWORD *)&v694 = sub_1C5D52060(v239, 216, (const llvm::APInt *)&v695, (llvm *)v687, *((uint64_t *)&v687 + 1), v694, *((unint64_t *)&v694 + 1), v537);
              DWORD2(v694) = v562;
              v563 = *(_QWORD *)(*a1 + 832);
              if (v563)
                v564 = *(_WORD *)(v563 + 8);
              else
                v564 = 0;
              v680 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v695, (llvm *)v687, *((uint64_t *)&v687 + 1), v187, v186, v564);
              v566 = v186 & 0xFFFFFFFF00000000 | v565;
              v567 = sub_1C6366760(*a1, (const llvm::APInt *)&v695, v184, v185, (llvm *)v687, *((uint64_t *)&v687 + 1));
              v646 = v569;
              v661 = (uint64_t)v567;
              v570 = *(_QWORD *)(*a1 + 832);
              if (v570)
                LOWORD(v570) = *(_WORD *)(v570 + 8);
              v571 = v186 & 0xFFFFFFFF00000000;
              *(_QWORD *)&v694 = sub_1C5D56C70(*a1, 171, (const llvm::APInt *)&v695, (llvm *)v687, *((uint64_t *)&v687 + 1), v694, *((unint64_t *)&v694 + 1), v568, v184, v185, v570);
              DWORD2(v694) = v573;
              v574 = *(_QWORD *)(*a1 + 832);
              if (v574)
                LOWORD(v574) = *(_WORD *)(v574 + 8);
              v575 = sub_1C5D56C70(*a1, 171, (const llvm::APInt *)&v695, (llvm *)v687, *((uint64_t *)&v687 + 1), (uint64_t)v680, v566, v572, v661, v646, v574);
              v578 = *(_QWORD *)(*a1 + 832);
              if (v578)
                LOWORD(v578) = *(_WORD *)(v578 + 8);
              v580 = sub_1C5D56C70(*a1, 172, (const llvm::APInt *)&v695, (llvm *)v687, *((uint64_t *)&v687 + 1), v694, *((unint64_t *)&v694 + 1), v577, (uint64_t)v575, v576 | v571, v578);
              v581 = *(_QWORD *)(v9 + 40);
              v582 = *(llvm **)v581;
              v583 = *(_QWORD *)(v581 + 8);
              v584 = *(_QWORD *)(*a1 + 832);
              if (v584)
                v585 = *(_WORD *)(v584 + 8);
              else
                v585 = 0;
              v230 = sub_1C5D52060(*a1, 216, (const llvm::APInt *)&v695, v582, v583, (uint64_t)v580, v579, v585);
              goto LABEL_313;
            case 0xC1:
              goto LABEL_128;
            case 0xCB:
              goto LABEL_109;
            case 0xCC:
              v695 = *(_OWORD *)*(_QWORD *)(v9 + 40);
              if (!(_BYTE)v695)
                goto LABEL_292;
              v158 = a1[1];
              if (*(_BYTE *)(v158 + 390 * v695 + 4038) == 2
                || *(_BYTE *)(v158 + 390 * v695 + 4037) == 2)
              {
                goto LABEL_292;
              }
              v159 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v694 = v159;
              if (v159)
                llvm::MetadataTracking::track((uint64_t)&v694, v159, 2);
              DWORD2(v694) = *(_DWORD *)(v9 + 60);
              v687 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)(v9 + 32) + 40) + 80);
              v160 = sub_1C6131328((unsigned __int8 *)&v695, (uint64_t)v159, v21);
              v163 = sub_1C6131328((unsigned __int8 *)&v687, v161, v162);
              v166 = sub_1C6366AB4(*a1, v160 - v163, (const llvm::APInt *)&v694, (llvm *)v695, *((uint64_t *)&v695 + 1), 0, 0);
              v167 = v164;
              v168 = *(uint64_t **)(v9 + 32);
              v169 = *v168;
              v170 = v168[1];
              v171 = *(_QWORD *)(*a1 + 832);
              if (v171)
                LOWORD(v171) = *(_WORD *)(v171 + 8);
              v173 = sub_1C5D56C70(*a1, 175, (const llvm::APInt *)&v694, (llvm *)v695, *((uint64_t *)&v695 + 1), v169, v170, v165, (uint64_t)v166, v164, v171);
              v175 = *(_QWORD *)(*a1 + 832);
              if (v175)
                LOWORD(v175) = *(_WORD *)(v175 + 8);
              v176 = sub_1C5D56C70(*a1, 176, (const llvm::APInt *)&v694, (llvm *)v695, *((uint64_t *)&v695 + 1), (uint64_t)v173, v172, v174, (uint64_t)v166, v167, v175);
              goto LABEL_403;
            case 0xCD:
              v279 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v694 = v279;
              if (v279)
                llvm::MetadataTracking::track((uint64_t)&v694, v279, 2);
              DWORD2(v694) = *(_DWORD *)(v9 + 60);
              v687 = *(_OWORD *)*(_QWORD *)(v9 + 40);
              v618 = sub_1C612FE00((llvm::EVT *)&v687, (const char *)v279);
              v280 = *(uint64_t ***)(v9 + 32);
              v654 = *v280;
              v668 = (uint64_t)v280[1];
              v685 = *(_OWORD *)((*v280)[5] + 16 * v668);
              v628 = sub_1C612FE00((llvm::EVT *)&v685, v281);
              v282 = v685;
              if (v685 == v687
                && ((_BYTE)v685 || *((_QWORD *)&v685 + 1) == *((_QWORD *)&v687 + 1)))
              {
                goto LABEL_357;
              }
              if (sub_1C632979C((unsigned __int8 *)&v685, v687, *((uint64_t *)&v687 + 1)))
              {
                v282 = v687;
LABEL_357:
                if (v282)
                  ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v687);
                else
                  ExtendedSizeInBits = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v687);
                v410 = ExtendedSizeInBits;
                if ((_DWORD)v284 == 1)
                v411 = sub_1C6131328((unsigned __int8 *)&v685, (uint64_t)v284, v285);
                v412 = *(llvm::LLVMContext **)(*a1 + 56);
                v413 = v410 / (unint64_t)v411;
                v416 = sub_1C6131264((unsigned __int8 *)&v685, v414, v415);
                v628 = v413;
                v418 = (llvm *)sub_1C4816F98(v412, v416, v417, v413, 0);
                v420 = v419;
                *(_QWORD *)&v685 = v418;
                *((_QWORD *)&v685 + 1) = v419;
                v421 = *a1;
                v643 = sub_1C61312D0(*a1, v418, v419);
                v612 = v422;
                v423 = sub_1C6366C9C(*a1, 0, (uint64_t)&v694, 0);
                v426 = 0;
                v427 = *(_QWORD *)(v421 + 832);
                if (v427)
                  v426 = *(_WORD *)(v427 + 8);
                v654 = sub_1C5D58E08(v421, (const char *)0x96, (const llvm::APInt *)&v694, v418, v420, (uint64_t)v643, v612, v425, (uint64_t)v654, v668, v423, v424, SHIDWORD(v424), v426);
                LODWORD(v668) = v428;
              }
              *(_QWORD *)&v695 = &v696;
              *((_QWORD *)&v695 + 1) = 0x1000000000;
              if (v628)
              {
                if (v628 >= 0x11)
                {
                  llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v695, (uint64_t)&v696, v628, 4);
                  v430 = DWORD2(v695);
                  v429 = (__int128 *)v695;
                }
                else
                {
                  v430 = 0;
                  v429 = &v696;
                }
                memset((char *)v429 + 4 * v430, 255, 4 * v628);
                DWORD2(v695) += v628;
              }
              else
              {
                v429 = &v696;
              }
              v431 = *a1;
              if (v618 >= 1)
              {
                v432 = 0;
                v433 = v628 / v618 - 1;
                if (!*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v431 + 40) + 40) + 272))
                  v433 = 0;
                v434 = (_DWORD *)v429 + v433;
                do
                {
                  *v434 = v432++;
                  v434 += v628 / v618;
                }
                while (v618 != v432);
              }
              v435 = v687;
              v436 = v685;
              v437 = sub_1C61312D0(v431, (llvm *)v685, *((uint64_t *)&v685 + 1));
              v440 = sub_1C5D41DE4(v431, (llvm *)v436, *((uint64_t *)&v436 + 1), (uint64_t)&v694, (uint64_t)v654, v668, (uint64_t)v437, v438, (void *)v695, DWORD2(v695));
              v441 = *(_QWORD *)(v431 + 832);
              if (v441)
                v442 = *(_WORD *)(v441 + 8);
              else
                v442 = 0;
              v51 = sub_1C5D52060(v431, 216, (const llvm::APInt *)&v694, (llvm *)v435, *((uint64_t *)&v435 + 1), (uint64_t)v440, v439, v442);
              v52 = v443;
              v409 = (__int128 *)v695;
              goto LABEL_447;
            case 0xCE:
              v262 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v695 = v262;
              if (v262)
                llvm::MetadataTracking::track((uint64_t)&v695, v262, 2);
              DWORD2(v695) = *(_DWORD *)(v9 + 60);
              v264 = *(uint64_t **)(v9 + 32);
              v263 = *(_QWORD *)(v9 + 40);
              v265 = *(llvm **)v263;
              v266 = *(_QWORD *)(v263 + 8);
              *(_QWORD *)&v694 = *(_QWORD *)v263;
              *((_QWORD *)&v694 + 1) = v266;
              v267 = *v264;
              v268 = v264[1];
              v687 = *(_OWORD *)(*(_QWORD *)(*v264 + 40) + 16 * v268);
              v269 = *(_QWORD *)(*a1 + 832);
              if (v269)
                v270 = *(_WORD *)(v269 + 8);
              else
                v270 = 0;
              v350 = sub_1C5D52060(*a1, 205, (const llvm::APInt *)&v695, v265, v266, v267, v268, v270);
              v641 = v351;
              v656 = (uint64_t)v350;
              v353 = sub_1C6131328((unsigned __int8 *)&v694, v351, v352);
              v356 = sub_1C6131328((unsigned __int8 *)&v687, v354, v355);
              v670 = sub_1C6366AB4(*a1, v353 - v356, (const llvm::APInt *)&v695, (llvm *)v694, *((uint64_t *)&v694 + 1), 0, 0);
              v359 = v357;
              v360 = *a1;
              v361 = v694;
              v362 = *(_QWORD *)(*a1 + 832);
              if (v362)
                LOWORD(v362) = *(_WORD *)(v362 + 8);
              v364 = sub_1C5D56C70(v360, 175, (const llvm::APInt *)&v695, (llvm *)v694, *((uint64_t *)&v694 + 1), v656, v641, v358, (uint64_t)v670, v357, v362);
              v366 = *(_QWORD *)(v360 + 832);
              if (v366)
                LOWORD(v366) = *(_WORD *)(v366 + 8);
              v230 = sub_1C5D56C70(v360, 176, (const llvm::APInt *)&v695, (llvm *)v361, *((uint64_t *)&v361 + 1), (uint64_t)v364, v363, v365, (uint64_t)v670, v359, v366);
              goto LABEL_313;
            case 0xCF:
              v271 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v694 = v271;
              if (v271)
                llvm::MetadataTracking::track((uint64_t)&v694, v271, 2);
              DWORD2(v694) = *(_DWORD *)(v9 + 60);
              v687 = *(_OWORD *)*(_QWORD *)(v9 + 40);
              v639 = sub_1C612FE00((llvm::EVT *)&v687, (const char *)v271);
              v272 = *(uint64_t ***)(v9 + 32);
              v653 = *v272;
              v667 = (uint64_t)v272[1];
              v685 = *(_OWORD *)((*v272)[5] + 16 * v667);
              LODWORD(v274) = sub_1C612FE00((llvm::EVT *)&v685, v273);
              v275 = v685;
              if (v685 == v687
                && ((_BYTE)v685 || *((_QWORD *)&v685 + 1) == *((_QWORD *)&v687 + 1)))
              {
                goto LABEL_348;
              }
              if (sub_1C632979C((unsigned __int8 *)&v685, v687, *((uint64_t *)&v687 + 1)))
              {
                v275 = v687;
LABEL_348:
                if (v275)
                  v276 = sub_1C47A8C74((unsigned __int8 *)&v687);
                else
                  v276 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v687);
                v375 = v276;
                if ((_DWORD)v277 == 1)
                v376 = sub_1C6131328((unsigned __int8 *)&v685, (uint64_t)v277, v278);
                v377 = *(llvm::LLVMContext **)(*a1 + 56);
                v274 = v375 / (unint64_t)v376;
                v380 = sub_1C6131264((unsigned __int8 *)&v685, v378, v379);
                v382 = (llvm *)sub_1C4816F98(v377, v380, v381, v274, 0);
                v384 = v383;
                *(_QWORD *)&v685 = v382;
                *((_QWORD *)&v685 + 1) = v383;
                v385 = *a1;
                v632 = v382;
                v386 = sub_1C61312D0(*a1, v382, v383);
                v611 = v387;
                v621 = (uint64_t)v386;
                v388 = sub_1C6366C9C(*a1, 0, (uint64_t)&v694, 0);
                v391 = 0;
                v392 = *(_QWORD *)(v385 + 832);
                if (v392)
                  v391 = *(_WORD *)(v392 + 8);
                v653 = sub_1C5D58E08(v385, (const char *)0x96, (const llvm::APInt *)&v694, v632, v384, v621, v611, v390, (uint64_t)v653, v667, v388, v389, SHIDWORD(v389), v391);
                LODWORD(v667) = v393;
              }
              v394 = sub_1C6366AB4(*a1, 0, (const llvm::APInt *)&v694, (llvm *)v685, *((uint64_t *)&v685 + 1), 0, 0);
              v396 = v395;
              v622 = (uint64_t)v394;
              *(_QWORD *)&v695 = &v696;
              *((_QWORD *)&v695 + 1) = 0x1000000000;
              sub_1C57E87D8((uint64_t)&v695, 0, (int)v274);
              v397 = *a1;
              __src = (void *)v695;
              if (v639 >= 1)
              {
                v399 = (int)v274 / v639 - 1;
                if (!*(_BYTE *)(*(_QWORD *)(**(_QWORD **)(v397 + 40) + 40) + 272))
                  v399 = 0;
                v400 = v639;
                v401 = (_DWORD *)(v695 + 4 * v399);
                v402 = 4 * ((int)v274 / v639);
                do
                {
                  *v401 = v274;
                  LODWORD(v274) = v274 + 1;
                  v401 = (_DWORD *)((char *)v401 + v402);
                  --v400;
                }
                while (v400);
              }
              v403 = v687;
              v405 = sub_1C5D41DE4(v397, (llvm *)v685, *((uint64_t *)&v685 + 1), (uint64_t)&v694, v622, v396, (uint64_t)v653, v667, __src, DWORD2(v695));
              v406 = *(_QWORD *)(v397 + 832);
              if (v406)
                v407 = *(_WORD *)(v406 + 8);
              else
                v407 = 0;
              v51 = sub_1C5D52060(v397, 216, (const llvm::APInt *)&v694, (llvm *)v403, *((uint64_t *)&v403 + 1), (uint64_t)v405, v404, v407);
              v52 = v408;
              v409 = (__int128 *)v695;
LABEL_447:
              if (v409 != &v696)
                free(v409);
              goto LABEL_404;
            case 0xD1:
LABEL_113:
              sub_1C5CF4FB0(a1, v9, (uint64_t)&v688);
              goto LABEL_222;
            case 0xDE:
              v192 = *(_QWORD *)(v9 + 40);
              if (!*(_QWORD *)v192)
                goto LABEL_292;
              v193 = a1[1];
              v194 = *(_QWORD *)v192;
              if ((_DWORD)v194 != 1 && (!*(_QWORD *)v192 || !*(_QWORD *)(v193 + 8 * v194 + 96)))
                goto LABEL_292;
              if ((*(unsigned __int8 *)(v193 + 390 * *(_QWORD *)v192 + 3959) | 4) != 4)
                goto LABEL_292;
              v219 = *(unsigned __int8 **)(v9 + 64);
              *(_QWORD *)&v695 = v219;
              if (v219)
              {
                llvm::MetadataTracking::track((uint64_t)&v695, v219, 2);
                v192 = *(_QWORD *)(v9 + 40);
              }
              DWORD2(v695) = *(_DWORD *)(v9 + 60);
              v221 = sub_1C5D404C4(*a1, (const llvm::APInt *)&v695, *(_QWORD *)v192, *(_QWORD *)(v192 + 8), 0, -0.0);
              v224 = *(uint64_t **)(v9 + 32);
              v223 = *(_QWORD *)(v9 + 40);
              v225 = *(llvm **)v223;
              v226 = *(_QWORD *)(v223 + 8);
              v227 = *v224;
              v228 = v224[1];
              v229 = *(_QWORD *)(*a1 + 832);
              if (v229)
                LOWORD(v229) = *(_WORD *)(v229 + 8);
              v230 = sub_1C5D56C70(*a1, 97, (const llvm::APInt *)&v695, v225, v226, (uint64_t)v221, v220, v222, v227, v228, v229);
              goto LABEL_313;
            case 0xF6:
            case 0xF7:
              v66 = sub_1C5D9B624(a1[1], v9, (_QWORD **)*a1, v22, v23, v24, v25, v26);
              if (!v66)
                goto LABEL_292;
              goto LABEL_293;
            case 0xFD:
              sub_1C5D9D4DC(v9, *a1, (uint64_t **)&v695);
              v129 = v695;
              v130 = v689;
              if (v689 >= HIDWORD(v689))
              {
                v677 = v695;
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
                v129 = v677;
                v130 = v689;
              }
              *((_OWORD *)v688 + v130) = v129;
              v97 = HIDWORD(v689);
              v98 = (v689 + 1);
              LODWORD(v689) = v689 + 1;
              v99 = v696;
LABEL_182:
              if (v98 >= v97)
              {
                v672 = v99;
                llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v98 + 1, 16);
                v99 = v672;
                LODWORD(v98) = v689;
              }
              *((_OWORD *)v688 + v98) = v99;
              goto LABEL_221;
            case 0xFE:
              v66 = sub_1C5D9DD98(a1[1], v9, *a1);
              goto LABEL_293;
            default:
              if (v65 - 319 >= 2)
                goto LABEL_292;
              v66 = sub_1C637A244(a1[1], v9, *a1);
              goto LABEL_293;
          }
LABEL_406:
          llvm::MetadataTracking::untrack((uint64_t)v241, v240);
          goto LABEL_294;
        }
        if (*(unsigned __int16 *)(v9 + 24) <= 0x16Cu)
        {
          if (v65 - 321 < 0xD)
          {
            v66 = sub_1C5DA3BA4(a1[1], v9, *a1);
LABEL_293:
            v51 = v66;
            v52 = v67;
            goto LABEL_294;
          }
LABEL_292:
          v66 = sub_1C5D625F4(*a1, v9, 0);
          goto LABEL_293;
        }
        if (v65 != 365)
        {
          if (v65 == 387)
          {
            v103 = *(unsigned __int8 **)(v9 + 64);
            *(_QWORD *)&v695 = v103;
            if (v103)
              llvm::MetadataTracking::track((uint64_t)&v695, v103, 2);
            DWORD2(v695) = *(_DWORD *)(v9 + 60);
            v104 = *(uint64_t **)(v9 + 32);
            v105 = *v104;
            v106 = v104[1];
            v107 = *(_QWORD *)(*v104 + 40) + 16 * v106;
            v108 = *(llvm **)v107;
            if (*(_QWORD *)v107)
            {
              v109 = a1[1];
              if (*(_BYTE *)(v109 + 390 * *(_QWORD *)v107 + 4197) != 2
                && *(_BYTE *)(v109 + 390 * *(_QWORD *)v107 + 4208) != 2
                && *(_BYTE *)(v109 + 390 * *(_QWORD *)v107 + 4201) != 2)
              {
                v110 = v104[5];
                v608 = v104[10];
                *(_QWORD *)v616 = v104[11];
                v626 = v104[6];
                v637 = v104[16];
                v648 = v104[15];
                v663 = *(_QWORD *)(v107 + 8);
                v111 = (uint64_t *)(*(_QWORD *)(v110 + 40) + 16 * v626);
                v113 = *v111;
                v112 = v111[1];
                *(_QWORD *)&v694 = v113;
                *((_QWORD *)&v694 + 1) = v112;
                if ((_BYTE)v113)
                  v114 = sub_1C47F37A0((unsigned __int8 *)&v694);
                else
                  v114 = llvm::EVT::getEVT(*(llvm::EVT **)(v112 + 24), 0, v21);
                v338 = v114;
                v239 = *a1;
                if (v338 == 2)
                {
                  v339 = sub_1C63293BC(v239, (const llvm::APInt *)&v695, (_BOOL8)v108, v663, 0, 0);
                  v342 = sub_1C6366A24(*a1, (const char *)0x15A, (const llvm::APInt *)&v695, v108, v663, v105, v106, v341, v339, v340, v105, v106, v648, v637);
                  v596 = v343;
                  v600 = (uint64_t)v342;
                  v603 = sub_1C6366A24(*a1, (const char *)0x14F, (const llvm::APInt *)&v695, v108, v663, v110, v626, v344, v105, v106, v105, v106, v648, v637);
                  v631 = v345;
                  v347 = sub_1C6366A24(*a1, (const char *)0x14F, (const llvm::APInt *)&v695, v108, v663, v608, v616[0], v346, v600, v596, v105, v106, v648, v637);
                  v230 = sub_1C6366A24(*a1, (const char *)0x153, (const llvm::APInt *)&v695, v108, v663, (uint64_t)v603, v631, v349, (uint64_t)v347, v348, v105, v106, v648, v637);
                  goto LABEL_313;
                }
LABEL_312:
                v230 = sub_1C5D625F4(v239, v9, 0);
LABEL_313:
                v51 = v230;
                v52 = v231;
                v240 = (unsigned __int8 *)v695;
                if (!(_QWORD)v695)
                  goto LABEL_294;
                v241 = &v695;
                goto LABEL_406;
              }
            }
          }
          else
          {
            if (v65 != 388)
              goto LABEL_292;
            v68 = *(unsigned __int8 **)(v9 + 64);
            *(_QWORD *)&v695 = v68;
            if (v68)
              llvm::MetadataTracking::track((uint64_t)&v695, v68, 2);
            DWORD2(v695) = *(_DWORD *)(v9 + 60);
            v69 = *(uint64_t **)(v9 + 32);
            v662 = v69[5];
            v647 = v69[6];
            v636 = v69[10];
            v615 = *v69;
            v625 = v69[11];
            v70 = v69[15];
            v71 = v69[16];
            v607 = v69[1];
            v72 = (uint64_t *)(*(_QWORD *)(*v69 + 40) + 16 * v607);
            v74 = *v72;
            v73 = v72[1];
            *(_QWORD *)&v694 = v74;
            *((_QWORD *)&v694 + 1) = v73;
            if ((_BYTE)v74)
              v75 = v74 - 15 < 0x69;
            else
              v75 = *(unsigned __int8 *)(v73 + 8) == 18;
            v201 = *(llvm::LLVMContext **)(*a1 + 56);
            v598 = v71;
            v601 = v70;
            v202 = (uint64_t *)(*(_QWORD *)(v70 + 40) + 16 * v71);
            v204 = *v202;
            v203 = v202[1];
            v205 = (llvm::Type *)sub_1C52B71D4((unsigned __int8 *)&v694);
            v207 = (llvm *)sub_1C47AC578(v201, v204, v203, v205);
            v208 = v206;
            v209 = a1[1];
            if (v75)
            {
              if ((_BYTE)v207 && (v207 == 1 || *(_QWORD *)(v209 + 8 * v207 + 96)))
              {
                v210 = *(unsigned __int8 *)(v209 + 390 * v207 + 4008);
                goto LABEL_307;
              }
            }
            else if ((v207 == 1
                    || (_BYTE)v207 && *(_QWORD *)(v209 + 8 * v207 + 96))
                   && (*(unsigned __int8 *)(v209 + 390 * v207 + 4020) | 4) == 4
                   && (v207 == 1 || *(_QWORD *)(v209 + 8 * v207 + 96)))
            {
              v210 = *(unsigned __int8 *)(v209 + 390 * v207 + 4018);
LABEL_307:
              if ((v210 | 4) == 4)
              {
                v238 = (*(unsigned __int8 (**)(uint64_t, uint64_t, _QWORD, llvm *, uint64_t))(*(_QWORD *)v209 + 400))(v209, *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, *(_QWORD *)(*a1 + 56), v207, v206);
                if (v238 == v694 && (v238 || v237 == *((_QWORD *)&v694 + 1)))
                {
                  v455 = sub_1C6367924(*a1, (const char *)&v695, (_BOOL8)v207, v208);
                  v594 = v456;
                  v597 = v455;
                  v457 = *a1;
                  if (v75)
                    v458 = sub_1C5CA0FB8(v457, v207, v208, (const llvm::APInt *)&v695, v601, v598);
                  else
                    v458 = sub_1C5CA0F18(v457, v207, v208, (const llvm::APInt *)&v695, v601, v598);
                  v605 = (uint64_t)v458;
                  v489 = v459;
                  v490 = *a1;
                  v491 = v694;
                  v492 = sub_1C6367818((_QWORD *)*a1, 0xCu);
                  v495 = *(_QWORD *)(v490 + 832);
                  if (v495)
                    LOWORD(v495) = *(_WORD *)(v495 + 8);
                  v496 = sub_1C5D58E08(v490, (const char *)0xC1, (const llvm::APInt *)&v695, (llvm *)v491, *((uint64_t *)&v491 + 1), v597, v594, v494, v605, v489, v492, v493, SHIDWORD(v493), v495);
                  v499 = *(_QWORD *)(*a1 + 832);
                  if (v499)
                    LOWORD(v499) = *(_WORD *)(v499 + 8);
                  v500 = sub_1C5D56C70(*a1, 171, (const llvm::APInt *)&v695, (llvm *)v694, *((uint64_t *)&v694 + 1), v615, v607, v498, (uint64_t)v496, v497, v499);
                  v230 = sub_1C4815A8C(*a1, (const llvm::APInt *)&v695, **(llvm ***)(v9 + 40), *(_QWORD *)(*(_QWORD *)(v9 + 40) + 8), (uint64_t)v500, v501, v662, v647, v636, v625, SHIDWORD(v625));
                  goto LABEL_313;
                }
              }
            }
          }
LABEL_311:
          v239 = *a1;
          goto LABEL_312;
        }
LABEL_128:
        v686 = 0;
        v76 = *(unsigned __int8 **)(v9 + 64);
        *(_QWORD *)&v685 = v76;
        if (v76)
          llvm::MetadataTracking::track((uint64_t)&v685, v76, 2);
        DWORD2(v685) = *(_DWORD *)(v9 + 60);
        v77 = *(__int128 **)(v9 + 32);
        v78 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v77 + 40) + 16 * *((unsigned int *)v77 + 2));
        v79 = a1[1];
        if (((*(_DWORD *)(v79
                         + 92 * *(unsigned int *)(*((_QWORD *)v77 + 10) + 76)
                         + 4 * (v78 >> 3)
                         + 171588) >> (4 * (v78 & 7))) & 0xF) != 2)
        {
          v694 = *(_OWORD *)*(_QWORD *)(v9 + 40);
          v247 = sub_1C612FE00((llvm::EVT *)&v694, (const char *)v76);
          if ((_BYTE)v694)
          {
            v638 = 0;
            v651 = sub_1C47F37A0((unsigned __int8 *)&v694);
            v599 = 0;
          }
          else
          {
            v286 = llvm::EVT::getEVT(*(llvm::EVT **)(*((_QWORD *)&v694 + 1) + 24), 0, v246);
            v599 = v287;
            v638 = v286 & 0xFFFFFFFFFFFFFF00;
            v651 = v286;
          }
          v288 = *(uint64_t **)(v9 + 32);
          v592 = v288[5];
          v593 = v288[1];
          v591 = v288[6];
          v589 = v288[11];
          v590 = v288[10];
          v595 = *v288;
          v289 = (uint64_t *)(*(_QWORD *)(*v288 + 40) + 16 * v593);
          v291 = *v289;
          v290 = v289[1];
          *(_QWORD *)&v695 = v291;
          *((_QWORD *)&v695 + 1) = v290;
          if ((_BYTE)v291)
          {
            v292 = sub_1C47F37A0((unsigned __int8 *)&v695);
            v293 = 0;
            v294 = 0;
          }
          else
          {
            v295 = llvm::EVT::getEVT(*(llvm::EVT **)(v290 + 24), 0, v248);
            v292 = v295;
            v294 = v296;
            v293 = v295 & 0xFFFFFFFFFFFFFF00;
          }
          v297 = *(unsigned __int8 **)(v9 + 64);
          *(_QWORD *)&v687 = v297;
          if (v297)
            llvm::MetadataTracking::track((uint64_t)&v687, v297, 2);
          DWORD2(v687) = *(_DWORD *)(v9 + 60);
          *(_QWORD *)&v695 = &v696;
          *((_QWORD *)&v695 + 1) = 0x800000000;
          v588 = v247;
          sub_1C4825C80((unsigned int *)&v695, v247, 0, 0);
          if (v247)
          {
            v298 = v292;
            v299 = 0;
            v586 = (llvm *)(v638 | v651);
            v587 = v294;
            v655 = (llvm *)(v293 | v298);
            v669 = 0;
            do
            {
              v300 = *a1;
              v301 = sub_1C6366C9C(*a1, v299, (uint64_t)&v687, 0);
              v304 = *(_QWORD *)(v300 + 832);
              if (v304)
                LOWORD(v304) = *(_WORD *)(v304 + 8);
              v305 = sub_1C5D56C70(v300, 148, (const llvm::APInt *)&v687, v655, v294, v595, v593, v303, v301, v302, v304);
              v619 = v306;
              v629 = (uint64_t)v305;
              v307 = *a1;
              v308 = sub_1C6366C9C(*a1, v299, (uint64_t)&v687, 0);
              v311 = *(_QWORD *)(v307 + 832);
              v640 = v299;
              if (v311)
                LOWORD(v311) = *(_WORD *)(v311 + 8);
              v609 = sub_1C5D56C70(v307, 148, (const llvm::APInt *)&v687, v655, v294, v592, v591, v310, v308, v309, v311);
              v313 = v312;
              v314 = *a1;
              v316 = (llvm *)(*(uint64_t (**)(uint64_t, uint64_t, _QWORD, llvm *, uint64_t))(*(_QWORD *)a1[1]
                                                                                                  + 400))(a1[1], *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, *(_QWORD *)(*a1 + 56), v655, v294);
              v318 = *(_QWORD *)(v314 + 832);
              if (v318)
                LOWORD(v318) = *(_WORD *)(v318 + 8);
              v319 = sub_1C5D58E08(v314, (const char *)0xC1, (const llvm::APInt *)&v687, v316, v315, v629, v619, v317, (uint64_t)v609, v313, v590, v589, SHIDWORD(v589), v318);
              v320 = v695 + v669;
              *(_QWORD *)v320 = v319;
              *(_DWORD *)(v320 + 8) = v321;
              v322 = *a1;
              v620 = *(_QWORD *)(v695 + v669 + 8);
              v630 = *(_QWORD *)(v695 + v669);
              v323 = sub_1C63293BC(*a1, (const llvm::APInt *)&v687, (_BOOL8)v586, v599, 0, 0);
              v602 = v324;
              v610 = v323;
              v325 = sub_1C6366AB4(*a1, 0, (const llvm::APInt *)&v687, v586, v599, 0, 0);
              v328 = sub_1C4815A8C(v322, (const llvm::APInt *)&v687, v586, v599, v630, v620, v610, v602, (uint64_t)v325, v326, v327);
              v329 = v695 + v669;
              *(_QWORD *)v329 = v328;
              *(_DWORD *)(v329 + 8) = v330;
              v299 = v640 + 1;
              v669 += 16;
              v294 = v587;
            }
            while (v588 != v640 + 1);
          }
          v331 = *(_QWORD *)(*a1 + 832);
          if (v331)
            v332 = *(unsigned __int16 *)(v331 + 8);
          else
            v332 = 0;
          v333 = sub_1C636D0C8(*a1, (const char *)0x92, (const llvm::APInt *)&v687, (llvm *)v694, *((uint64_t *)&v694 + 1), (uint64_t *)v695, DWORD2(v695), v332);
          v335 = v334;
          if ((__int128 *)v695 != &v696)
            free((void *)v695);
          if ((_QWORD)v687)
            llvm::MetadataTracking::untrack((uint64_t)&v687, (unsigned __int8 *)v687);
          v336 = v689;
          if (v689 >= HIDWORD(v689))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
            v336 = v689;
          }
          v337 = (uint64_t **)((char *)v688 + 16 * v336);
          *v337 = v333;
          v337[1] = v335;
          goto LABEL_259;
        }
        *(_QWORD *)&v694 = 0;
        DWORD2(v694) = 0;
        v687 = *v77;
        v80 = *(__int128 *)((char *)v77 + 40);
        v683 = v77[5];
        v684 = v80;
        if (v65 == 365)
        {
          v81 = *((_QWORD *)v77 + 15);
          v82 = *((unsigned int *)v77 + 32);
          v83 = *((_QWORD *)v77 + 20);
          v84 = *((unsigned int *)v77 + 42);
        }
        else
        {
          v83 = 0;
          v84 = 0;
          v81 = 0;
          v82 = 0;
        }
        v664 = v84;
        v115 = v82;
        v116 = v81;
        if (!sub_1C5DA4B34(v79, (_QWORD *)*a1, **(_QWORD **)(v9 + 40), *(_QWORD *)(*(_QWORD *)(v9 + 40) + 8), (unsigned int *)&v687, (uint64_t)&v684, &v683, v26, v81, v82, v83, v84, &v686))
        {
          v249 = *(_QWORD *)(v9 + 40);
          v250 = *(llvm **)v249;
          v251 = *(_QWORD *)(v249 + 8);
          v252 = *a1;
          v253 = DWORD2(v687);
          v652 = v687;
          v254 = v684;
          v255 = (_QWORD *)(*(_QWORD *)(v687 + 40) + 16 * DWORD2(v687));
          v256 = sub_1C6366888(*a1, 1, (const llvm::APInt *)&v685, (_BOOL8)v250, v251, *v255, v255[1]);
          v617 = v257;
          v627 = v256;
          v258 = sub_1C6366AB4(*a1, 0, (const llvm::APInt *)&v685, v250, v251, 0, 0);
          v127 = sub_1C63698B8(v252, (const char *)0xC0, (const llvm::APInt *)&v685, v250, v251, v652, v253, v260, v254, SDWORD2(v254), v627, v617, (uint64_t)v258, v259, v683, SDWORD2(v683));
          *(_QWORD *)&v687 = v127;
          DWORD2(v687) = v261;
          *((_WORD *)v127 + 36) = *(_WORD *)(v9 + 72);
          goto LABEL_256;
        }
        if ((_QWORD)v683)
        {
          v118 = *a1;
          v119 = *(_QWORD *)(v9 + 40);
          v120 = *(llvm **)v119;
          v121 = *(_QWORD *)(v119 + 8);
          if (v65 == 365)
          {
            *(_QWORD *)&v695 = v687;
            DWORD2(v695) = DWORD2(v687);
            *(_QWORD *)&v696 = v684;
            DWORD2(v696) = DWORD2(v684);
            v697 = v683;
            v698 = DWORD2(v683);
            v122 = v116;
            v699 = v116;
            v123 = v115;
            v700 = v115;
            v701 = v83;
            v124 = v664;
            v702 = v664;
            v125 = sub_1C636D0C8(v118, (const char *)0x16D, (const llvm::APInt *)&v685, v120, v121, (uint64_t *)&v695, 5, *(unsigned __int16 *)(v9 + 72));
            v126 = v83;
            v127 = v125;
            *(_QWORD *)&v687 = v125;
            DWORD2(v687) = v128;
            if (v686)
              goto LABEL_254;
LABEL_256:
            v198 = (uint64_t *)*((_QWORD *)&v687 + 1);
            v199 = v689;
            if (v689 >= HIDWORD(v689))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
              v199 = v689;
            }
            v200 = (uint64_t **)((char *)v688 + 16 * v199);
            *v200 = v127;
            v200[1] = v198;
LABEL_259:
            LODWORD(v689) = v689 + 1;
            if ((_QWORD)v685)
              llvm::MetadataTracking::untrack((uint64_t)&v685, (unsigned __int8 *)v685);
            goto LABEL_222;
          }
          v127 = sub_1C5D58E08(v118, (const char *)0xC1, (const llvm::APInt *)&v685, v120, v121, v687, *((uint64_t *)&v687 + 1), v117, v684, *((uint64_t *)&v684 + 1), v683, SDWORD2(v683), SHIDWORD(v683), *(_WORD *)(v9 + 72));
          *(_QWORD *)&v687 = v127;
          DWORD2(v687) = v197;
          if (!v686)
            goto LABEL_256;
        }
        else
        {
          v126 = v83;
          v127 = (uint64_t *)v687;
          if (!v686)
            goto LABEL_256;
          v53 = v65 == 365;
          v122 = v116;
          v123 = v115;
          v124 = v664;
          if (v53)
          {
LABEL_254:
            v195 = sub_1C6366924(*a1, (const llvm::APInt *)&v685, (uint64_t)v127, SDWORD2(v687), v122, v123, v126, v124, *(llvm **)v127[5], *(_QWORD *)(v127[5] + 8));
LABEL_360:
            v127 = v195;
            *(_QWORD *)&v687 = v195;
            DWORD2(v687) = v196;
            goto LABEL_256;
          }
        }
        v195 = sub_1C63667F0(*a1, (const llvm::APInt *)&v685, (uint64_t)v127, *((unint64_t *)&v687 + 1), *(llvm **)v127[5], *(_QWORD *)(v127[5] + 8));
        goto LABEL_360;
      }
      v51 = (uint64_t *)v50;
      v52 = v20;
      v53 = v9 == v50 && v20 == 0;
      if (v53)
        goto LABEL_222;
      v54 = (uint64_t *)*(unsigned __int16 *)(v9 + 58);
      if (!*(_WORD *)(v9 + 58))
        goto LABEL_222;
      if ((_DWORD)v54 == 1)
      {
LABEL_294:
        v232 = v689;
        if (v689 >= HIDWORD(v689))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v689 + 1, 16);
          v232 = v689;
        }
        v233 = (uint64_t **)((char *)v688 + 16 * v232);
        *v233 = v51;
        v233[1] = (uint64_t *)v52;
        v150 = v689 + 1;
        LODWORD(v689) = v150;
        if (!v150)
          goto LABEL_297;
        goto LABEL_223;
      }
      v55 = 0;
      v56 = v689;
      do
      {
        if (v56 >= HIDWORD(v689))
        {
          llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v688, (uint64_t)v690, v56 + 1, 16);
          v56 = v689;
        }
        v57 = (uint64_t **)((char *)v688 + 16 * v56);
        *v57 = v51;
        v57[1] = v55;
        v56 = v689 + 1;
        LODWORD(v689) = v689 + 1;
        v55 = (uint64_t *)((char *)v55 + 1);
      }
      while (v54 != v55);
LABEL_222:
      v150 = v689;
      if (!(_DWORD)v689)
      {
LABEL_297:
        v234 = *(unsigned __int16 *)(a2 + 58);
        if (*(_WORD *)(a2 + 58))
        {
          v235 = 0;
          do
          {
            sub_1C5CF4CB0((uint64_t)a1, a2, v235, v9, v235);
            ++v235;
          }
          while (v234 != v235);
        }
        goto LABEL_300;
      }
LABEL_223:
      v151 = 0;
      *((_BYTE *)a1 + 16) = 1;
      v152 = v688;
      v153 = v150;
      v154 = (uint64_t *)((char *)v688 + 8);
      do
      {
        v155 = sub_1C5CF11D4(a1, *(v154 - 1), *v154);
        *(v154 - 1) = v155;
        *(_DWORD *)v154 = v156;
        v157 = *v154;
        v154 += 2;
        sub_1C5CF4CB0((uint64_t)a1, a2, v151++, v155, v157);
      }
      while (v153 != v151);
      v9 = v152[2 * a3];
LABEL_300:
      if (v688 != v690)
        free(v688);
LABEL_302:
      if (v691 != v693)
        free(v691);
      return v9;
    default:
      v58 = *(unsigned __int16 *)(a2 + 58);
      if (*(_WORD *)(a2 + 58))
      {
        v59 = 0;
        do
        {
          sub_1C5CF4CB0((uint64_t)a1, a2, v59, v9, v59);
          ++v59;
        }
        while (v58 != v59);
      }
      goto LABEL_302;
  }
}

uint64_t sub_1C5CF4CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v7;
  uint64_t v9;
  uint64_t result;
  _BYTE v11[24];
  uint64_t v12;
  uint64_t v13;
  __int128 v14;

  v7 = a3;
  v9 = a1 + 24;
  v12 = a2;
  v13 = a3;
  *(_QWORD *)&v14 = a4;
  *((_QWORD *)&v14 + 1) = a5;
  result = sub_1C63499DC((uint64_t)v11, a1 + 24, (uint64_t)&v12, &v14);
  if (a2 != a4 || v7 != (_DWORD)a5)
  {
    v12 = a4;
    v13 = a5;
    *(_QWORD *)&v14 = a4;
    *((_QWORD *)&v14 + 1) = a5;
    return sub_1C63499DC((uint64_t)v11, v9, (uint64_t)&v12, &v14);
  }
  return result;
}

uint64_t sub_1C5CF4D48(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v13;
  _BYTE v14[2048];
  uint64_t v15;

  v15 = *MEMORY[0x1E0C80C00];
  if (a2 >= 0x41)
  {
    v3 = (a2 - 1) | ((unint64_t)(a2 - 1) >> 1);
    v4 = v3 | (v3 >> 2) | ((v3 | (v3 >> 2)) >> 4);
    v5 = ((v4 | (v4 >> 8)) >> 16) | v4 | (v4 >> 8);
    if ((v5 + 1) > 0x40)
      a2 = v5 + 1;
    else
      a2 = 64;
  }
  if ((*(_DWORD *)a1 & 1) == 0)
  {
    v6 = *(_QWORD *)(a1 + 8);
    v7 = *(unsigned int *)(a1 + 16);
    if (a2 > 0x40)
    {
      v13 = a2;
      *(_QWORD *)(a1 + 8) = operator new(32 * a2, (std::align_val_t)8uLL);
      *(_QWORD *)(a1 + 16) = v13;
    }
    else
    {
      *(_DWORD *)a1 |= 1u;
    }
    sub_1C5CF4ED8(a1, v6, v6 + 32 * v7);
    JUMPOUT(0x1CAA32FB4);
  }
  v8 = 0;
  v9 = v14;
  do
  {
    if (*(_QWORD *)(a1 + v8 + 8))
      v10 = 0;
    else
      v10 = *(_DWORD *)(a1 + v8 + 16) > 0xFFFFFFFD;
    if (!v10)
    {
      *v9 = *(_OWORD *)(a1 + v8 + 8);
      v9[1] = *(_OWORD *)(a1 + v8 + 24);
      v9 += 2;
    }
    v8 += 32;
  }
  while (v8 != 2048);
  if (a2 > 0x40)
  {
    *(_DWORD *)a1 &= ~1u;
    v11 = a2;
    *(_QWORD *)(a1 + 8) = operator new(32 * a2, (std::align_val_t)8uLL);
    *(_QWORD *)(a1 + 16) = v11;
  }
  return sub_1C5CF4ED8(a1, (uint64_t)v14, (uint64_t)v9);
}

uint64_t sub_1C5CF4ED8(uint64_t result, uint64_t a2, uint64_t a3)
{
  _DWORD *v5;
  int v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  unint64_t v10;
  unsigned int v11;
  BOOL v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v5 = (_DWORD *)result;
  v6 = *(_DWORD *)result;
  *(_QWORD *)result = *(_DWORD *)result & 1;
  if ((v6 & 1) != 0)
  {
    v8 = (_OWORD *)(result + 8);
    v9 = (_OWORD *)(result + 2056);
  }
  else
  {
    v7 = *(unsigned int *)(result + 16);
    if (!(_DWORD)v7)
      goto LABEL_13;
    v8 = *(_OWORD **)(result + 8);
    v9 = &v8[2 * v7];
  }
  do
  {
    *v8 = xmmword_1C6429E90;
    v8 += 2;
  }
  while (v8 != v9);
LABEL_13:
  while (a2 != a3)
  {
    v10 = *(_QWORD *)a2;
    v11 = *(_DWORD *)(a2 + 8);
    if (*(_QWORD *)a2)
      v12 = 0;
    else
      v12 = v11 > 0xFFFFFFFD;
    if (!v12)
    {
      v15 = 0;
      result = sub_1C6349910((uint64_t)v5, v10, v11, &v15);
      v13 = v15;
      v14 = *(_QWORD *)a2;
      *(_DWORD *)(v15 + 8) = *(_DWORD *)(a2 + 8);
      *(_QWORD *)v13 = v14;
      *(_OWORD *)(v13 + 16) = *(_OWORD *)(a2 + 16);
      *v5 += 2;
    }
    a2 += 32;
  }
  return result;
}

void sub_1C5CF4FB0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t **v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_QWORD *)&v18 = 0;
  DWORD2(v18) = 0;
  *(_QWORD *)&v17 = 0;
  DWORD2(v17) = 0;
  if (!sub_1C5D9AC98(a1[1], a2, (uint64_t)&v18, (uint64_t)&v17, *a1))
  {
    if (sub_1C6141934(a2))
    {
      sub_1C5CF5854(a1, a2, a3);
      return;
    }
    v10 = sub_1C5D625F4(*a1, a2, 0);
    v12 = v11;
    v13 = *(unsigned int *)(a3 + 8);
    if (v13 >= *(_DWORD *)(a3 + 12))
    {
      llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v13 + 1, 16);
      LODWORD(v13) = *(_DWORD *)(a3 + 8);
    }
    v14 = (uint64_t **)(*(_QWORD *)a3 + 16 * v13);
    *v14 = v10;
    v14[1] = v12;
    goto LABEL_13;
  }
  v6 = v18;
  v7 = *(unsigned int *)(a3 + 8);
  if (v7 >= *(_DWORD *)(a3 + 12))
  {
    v15 = v18;
    llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v7 + 1, 16);
    v6 = v15;
    LODWORD(v7) = *(_DWORD *)(a3 + 8);
  }
  *(_OWORD *)(*(_QWORD *)a3 + 16 * v7) = v6;
  ++*(_DWORD *)(a3 + 8);
  if (sub_1C6141934(a2))
  {
    v8 = v17;
    v9 = *(unsigned int *)(a3 + 8);
    if (v9 >= *(_DWORD *)(a3 + 12))
    {
      v16 = v17;
      llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v9 + 1, 16);
      v8 = v16;
      LODWORD(v9) = *(_DWORD *)(a3 + 8);
    }
    *(_OWORD *)(*(_QWORD *)a3 + 16 * v9) = v8;
LABEL_13:
    ++*(_DWORD *)(a3 + 8);
  }
}

void sub_1C5CF5118(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _BOOL4 v6;
  uint64_t *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  BOOL v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t **v24;
  llvm::Type *v25;
  int v26;
  unint64_t v27;
  _QWORD *v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  llvm *v47;
  uint64_t v48;
  uint64_t v49;
  __int16 v50;
  unint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  llvm *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t *v59;
  unsigned int v60;
  unint64_t v61;
  uint64_t v62;
  llvm *v63;
  uint64_t v64;
  uint64_t v65;
  __int16 v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  llvm *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t *v77;
  uint64_t v78;
  int v79;
  uint64_t *v80;
  int v81;
  int v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  uint64_t *v87;
  int v88;
  int v89;
  __int16 v90;
  uint64_t v91;
  uint64_t *v92;
  uint64_t v93;
  int v94;
  uint64_t *v95;
  uint64_t *v96;
  uint64_t *v97;
  uint64_t v98;
  uint64_t **v99;
  unsigned int v100;
  uint64_t v101;
  uint64_t **v102;
  _QWORD *v103;
  __int128 v104;
  uint64_t *v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  unsigned __int8 *v110;
  int v111;
  __int128 v112;
  __int128 v113;
  uint64_t *v114;
  uint64_t v115;
  uint64_t *v116;
  int v117;
  __int128 v118;
  uint64_t *v119;
  uint64_t v120;
  uint64_t v121;

  v121 = *MEMORY[0x1E0C80C00];
  v6 = sub_1C6141934(a2);
  v7 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v6);
  v8 = *v7;
  v9 = v7[1];
  v104 = *(_OWORD *)(*(_QWORD *)(*v7 + 40) + 16 * v9);
  v112 = v104;
  v10 = *(unsigned __int8 **)(a2 + 64);
  v110 = v10;
  if (v10)
    llvm::MetadataTracking::track((uint64_t)&v110, v10, 2);
  v111 = *(_DWORD *)(a2 + 60);
  *(_QWORD *)&v109 = 0;
  DWORD2(v109) = 0;
  *(_QWORD *)&v108 = 0;
  DWORD2(v108) = 0;
  if (!sub_1C6378554(*(uint64_t **)(a1 + 8), a2, (uint64_t)&v109, (uint64_t)&v108, *(_QWORD *)a1))
  {
    if (v6)
    {
      if (!(_BYTE)v104
        || (v17 = *(_QWORD *)(a1 + 8), *(_BYTE *)(v17 + 390 * v104 + 3996) == 2)
        || *(_BYTE *)(v17 + 390 * v104 + 4039) == 2)
      {
        sub_1C5CF5854((uint64_t *)a1, a2, a3);
        goto LABEL_23;
      }
    }
    else if (!(_BYTE)v104
           || (v18 = *(_QWORD *)(a1 + 8), *(_BYTE *)(v18 + 390 * v104 + 4064) == 2)
           || *(_BYTE *)(v18 + 390 * v104 + 4039) == 2)
    {
      v19 = sub_1C5D625F4(*(_QWORD *)a1, a2, 0);
LABEL_19:
      v21 = v19;
      v22 = v20;
      v23 = *(unsigned int *)(a3 + 8);
      if (v23 >= *(_DWORD *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v23 + 1, 16);
        LODWORD(v23) = *(_DWORD *)(a3 + 8);
      }
      v24 = (uint64_t **)(*(_QWORD *)a3 + 16 * v23);
      *v24 = v21;
      v24[1] = v22;
      goto LABEL_22;
    }
    v25 = sub_1C6131328((unsigned __int8 *)&v112, v11, v12);
    v26 = (int)v25;
    v27 = (unint64_t)v25 >> 1;
    v28 = sub_1C6366AB4(*(_QWORD *)a1, v25 >> 1, (const llvm::APInt *)&v110, (llvm *)v112, *((uint64_t *)&v112 + 1), 0, 0);
    v30 = v29;
    if (v26 == 64)
      v31 = 0xFFFFFFFFLL;
    else
      v31 = 0xFFFFLL;
    v103 = sub_1C6366AB4(*(_QWORD *)a1, v31, (const llvm::APInt *)&v110, (llvm *)v112, *((uint64_t *)&v112 + 1), 0, 0);
    v33 = v32;
    v105 = sub_1C5D404C4(*(_QWORD *)a1, (const llvm::APInt *)&v110, **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), 0, (double)(unint64_t)(1 << v27));
    v36 = v35;
    v37 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v37)
      LOWORD(v37) = *(_WORD *)(v37 + 8);
    v39 = sub_1C5D56C70(*(_QWORD *)a1, 177, (const llvm::APInt *)&v110, (llvm *)v112, *((uint64_t *)&v112 + 1), v8, v9, v34, (uint64_t)v28, v30, v37);
    v41 = v40;
    v42 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v42)
      LOWORD(v42) = *(_WORD *)(v42 + 8);
    v43 = sub_1C5D56C70(*(_QWORD *)a1, 171, (const llvm::APInt *)&v110, (llvm *)v112, *((uint64_t *)&v112 + 1), v8, v9, v38, (uint64_t)v103, v33, v42);
    v45 = v44;
    if (v6)
    {
      v74 = *(_QWORD *)a1;
      v75 = *(_QWORD *)(a2 + 32);
      v113 = *(_OWORD *)*(_QWORD *)(a2 + 40);
      LOBYTE(v114) = 1;
      v115 = 0;
      v76 = *(_DWORD *)(v75 + 8);
      *(_QWORD *)&v118 = *(_QWORD *)v75;
      DWORD2(v118) = v76;
      v119 = v39;
      LODWORD(v120) = v41;
      v77 = sub_1C6366344(v74, (const char *)0x86, (const llvm::APInt *)&v110, (uint64_t *)&v113, 2, (uint64_t *)&v118, 2);
      v78 = *(_QWORD *)a1;
      v118 = *(_OWORD *)*(_QWORD *)(a2 + 40);
      LOBYTE(v119) = 1;
      v120 = 0;
      *(_QWORD *)&v113 = v77;
      *((_QWORD *)&v113 + 1) = 1;
      v114 = v77;
      LODWORD(v115) = v79;
      v116 = v105;
      v117 = v36;
      v80 = sub_1C6366344(v78, (const char *)0x67, (const llvm::APInt *)&v110, (uint64_t *)&v118, 2, (uint64_t *)&v113, 3);
      v82 = v81;
      v83 = *(_QWORD *)a1;
      v84 = *(_QWORD *)(a2 + 32);
      v113 = *(_OWORD *)*(_QWORD *)(a2 + 40);
      LOBYTE(v114) = 1;
      v115 = 0;
      v85 = *(_DWORD *)(v84 + 8);
      *(_QWORD *)&v118 = *(_QWORD *)v84;
      DWORD2(v118) = v85;
      v119 = v43;
      LODWORD(v120) = v45;
      v87 = sub_1C6366344(v83, (const char *)0x86, (const llvm::APInt *)&v110, (uint64_t *)&v113, 2, (uint64_t *)&v118, 2);
      v89 = v88;
      v90 = 0;
      v91 = *(_QWORD *)(*(_QWORD *)a1 + 832);
      if (v91)
        v90 = *(_WORD *)(v91 + 8);
      v92 = sub_1C5D56C70(*(_QWORD *)a1, 2, (const llvm::APInt *)&v110, (llvm *)1, 0, (uint64_t)v80, 1uLL, v86, (uint64_t)v87, 1uLL, v90);
      v93 = *(_QWORD *)a1;
      v118 = *(_OWORD *)*(_QWORD *)(a2 + 40);
      LOBYTE(v119) = 1;
      v120 = 0;
      *(_QWORD *)&v113 = v92;
      DWORD2(v113) = v94;
      v114 = v80;
      LODWORD(v115) = v82;
      v116 = v87;
      v117 = v89;
      v95 = sub_1C6366344(v93, (const char *)0x65, (const llvm::APInt *)&v110, (uint64_t *)&v118, 2, (uint64_t *)&v113, 3);
      v97 = v96;
      v98 = *(unsigned int *)(a3 + 8);
      if (v98 >= *(_DWORD *)(a3 + 12))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v98 + 1, 16);
        LODWORD(v98) = *(_DWORD *)(a3 + 8);
      }
      v99 = (uint64_t **)(*(_QWORD *)a3 + 16 * v98);
      *v99 = v95;
      v99[1] = v97;
      v100 = *(_DWORD *)(a3 + 12);
      v101 = (*(_DWORD *)(a3 + 8) + 1);
      *(_DWORD *)(a3 + 8) = v101;
      if (v101 >= v100)
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v101 + 1, 16);
        LODWORD(v101) = *(_DWORD *)(a3 + 8);
      }
      v102 = (uint64_t **)(*(_QWORD *)a3 + 16 * v101);
      *v102 = v95;
      v102[1] = (uint64_t *)1;
      goto LABEL_22;
    }
    v46 = *(_QWORD *)(a2 + 40);
    v47 = *(llvm **)v46;
    v48 = *(_QWORD *)(v46 + 8);
    v49 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v49)
      v50 = *(_WORD *)(v49 + 8);
    else
      v50 = 0;
    v52 = sub_1C5D52060(*(_QWORD *)a1, 202, (const llvm::APInt *)&v110, v47, v48, (uint64_t)v39, v41, v50);
    v54 = v51;
    v55 = *(_QWORD *)(a2 + 40);
    v56 = *(llvm **)v55;
    v57 = *(_QWORD *)(v55 + 8);
    v58 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v58)
      LOWORD(v58) = *(_WORD *)(v58 + 8);
    v59 = sub_1C5D56C70(*(_QWORD *)a1, 98, (const llvm::APInt *)&v110, v56, v57, (uint64_t)v52, v51, v53, (uint64_t)v105, v36, v58);
    v61 = v54 & 0xFFFFFFFF00000000 | v60;
    v62 = *(_QWORD *)(a2 + 40);
    v63 = *(llvm **)v62;
    v64 = *(_QWORD *)(v62 + 8);
    v65 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v65)
      v66 = *(_WORD *)(v65 + 8);
    else
      v66 = 0;
    v67 = sub_1C5D52060(*(_QWORD *)a1, 202, (const llvm::APInt *)&v110, v63, v64, (uint64_t)v43, v45, v66);
    v70 = *(_QWORD *)(a2 + 40);
    v71 = *(llvm **)v70;
    v72 = *(_QWORD *)(v70 + 8);
    v73 = *(_QWORD *)(*(_QWORD *)a1 + 832);
    if (v73)
      LOWORD(v73) = *(_WORD *)(v73 + 8);
    v19 = sub_1C5D56C70(*(_QWORD *)a1, 96, (const llvm::APInt *)&v110, v71, v72, (uint64_t)v59, v61, v69, (uint64_t)v67, v68, v73);
    goto LABEL_19;
  }
  v13 = v109;
  v14 = *(unsigned int *)(a3 + 8);
  if (v14 >= *(_DWORD *)(a3 + 12))
  {
    v106 = v109;
    llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v14 + 1, 16);
    v13 = v106;
    LODWORD(v14) = *(_DWORD *)(a3 + 8);
  }
  *(_OWORD *)(*(_QWORD *)a3 + 16 * v14) = v13;
  v15 = (*(_DWORD *)(a3 + 8) + 1);
  *(_DWORD *)(a3 + 8) = v15;
  if (v6)
  {
    v16 = v108;
    if (v15 >= *(_DWORD *)(a3 + 12))
    {
      v107 = v108;
      llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v15 + 1, 16);
      v16 = v107;
      LODWORD(v15) = *(_DWORD *)(a3 + 8);
    }
    *(_OWORD *)(*(_QWORD *)a3 + 16 * v15) = v16;
LABEL_22:
    ++*(_DWORD *)(a3 + 8);
  }
LABEL_23:
  if (v110)
    llvm::MetadataTracking::untrack((uint64_t)&v110, v110);
}

uint64_t sub_1C5CF5770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  llvm::Type *v4;
  const char *v5;
  uint64_t result;
  int v7;
  int v8;
  unint64_t v9;
  int v10;
  unsigned int v11;
  unint64_t v12;
  int v13;
  _QWORD v14[2];

  v14[0] = a1;
  v14[1] = a2;
  v4 = sub_1C6131328((unsigned __int8 *)v14, a2, a3);
  result = sub_1C612FE00((llvm::EVT *)v14, v5);
  if ((_DWORD)result)
  {
    v7 = result;
    v8 = 0;
    v9 = (unint64_t)v4 >> 3;
    v10 = -1;
    do
    {
      if ((int)v9 >= 1)
      {
        v11 = *(_DWORD *)(a3 + 8);
        v12 = (unint64_t)v4 >> 3;
        do
        {
          if (v11 >= *(_DWORD *)(a3 + 12))
          {
            result = (uint64_t)llvm::SmallVectorBase<unsigned int>::grow_pod(a3, a3 + 16, v11 + 1, 4);
            v11 = *(_DWORD *)(a3 + 8);
          }
          v13 = v10 + v12;
          LODWORD(v12) = v12 - 1;
          *(_DWORD *)(*(_QWORD *)a3 + 4 * v11) = v13;
          v11 = *(_DWORD *)(a3 + 8) + 1;
          *(_DWORD *)(a3 + 8) = v11;
        }
        while ((v12 + 1) > 1);
      }
      ++v8;
      v10 += v9;
    }
    while (v8 != v7);
  }
  return result;
}

void sub_1C5CF5854(uint64_t *a1, uint64_t a2, _BOOL8 a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  llvm *v8;
  unint64_t EVT;
  const char *v10;
  const char *v11;
  unint64_t v12;
  llvm *v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int v39;
  uint64_t **v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t **v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  int v55;
  unsigned int v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t **v70;
  unsigned int v71;
  uint64_t v72;
  uint64_t **v73;
  llvm *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  unsigned int v79;
  _QWORD v80[2];
  unsigned __int8 *v81;
  int v82;
  llvm *v83;
  uint64_t v84;
  void *v85;
  uint64_t v86;
  _BYTE v87[64];
  void *v88;
  uint64_t v89;
  _BYTE v90[512];
  void *v91;
  uint64_t v92;
  _BYTE v93[512];
  uint64_t v94[2];
  char v95;
  uint64_t v96;
  uint64_t v97;

  v3 = a3;
  v97 = *MEMORY[0x1E0C80C00];
  v6 = *(_QWORD *)(a2 + 40);
  v8 = *(llvm **)v6;
  v7 = *(_QWORD *)(v6 + 8);
  v83 = v8;
  v84 = v7;
  if ((_BYTE)v8)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v83);
    v12 = 0;
    v11 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v7 + 24), 0, a3);
    v11 = v10;
    v12 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  v13 = (llvm *)(v12 | EVT);
  v14 = sub_1C612FE00((llvm::EVT *)&v83, v10);
  v79 = *(unsigned __int16 *)(a2 + 56);
  v15 = (uint64_t)v13;
  v16 = (uint64_t)v11;
  if ((*(_WORD *)(a2 + 24) & 0xFFFE) == 0x8A)
    v15 = (*(uint64_t (**)(_QWORD, uint64_t, _QWORD, llvm *, const char *))(**(_QWORD **)(*a1 + 24) + 400))(*(_QWORD *)(*a1 + 24), *(_QWORD *)(**(_QWORD **)(*a1 + 40) + 40) + 272, *(_QWORD *)(*a1 + 56), v13, v11);
  v94[0] = v15;
  v94[1] = v16;
  v95 = 1;
  v96 = 0;
  v78 = *(_OWORD *)*(_QWORD *)(a2 + 32);
  v17 = *(unsigned __int8 **)(a2 + 64);
  v81 = v17;
  if (v17)
    llvm::MetadataTracking::track((uint64_t)&v81, v17, 2);
  v82 = *(_DWORD *)(a2 + 60);
  v91 = v93;
  v92 = 0x2000000000;
  v88 = v90;
  v89 = 0x2000000000;
  if (v14)
  {
    v74 = v13;
    v75 = (uint64_t)v11;
    v76 = v3;
    v18 = 0;
    v77 = v14;
    while (1)
    {
      v85 = v87;
      v86 = 0x400000000;
      v20 = sub_1C6366C9C(*a1, v18, (uint64_t)&v81, 0);
      v22 = v21;
      v23 = v86;
      if (v86 >= (unint64_t)HIDWORD(v86))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v85, (uint64_t)v87, v86 + 1, 16);
        v23 = v86;
      }
      *((_OWORD *)v85 + v23) = v78;
      v24 = v86 + 1;
      LODWORD(v86) = v86 + 1;
      if (v79 >= 2)
        break;
LABEL_25:
      v41 = sub_1C6366344(*a1, (const char *)*(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v81, v94, 2, (uint64_t *)v85, v24);
      v42 = (uint64_t)v41;
      if ((*(_WORD *)(a2 + 24) & 0xFFFE) == 0x8A)
      {
        v49 = *a1;
        v50 = sub_1C63293BC(*a1, (const llvm::APInt *)&v81, (_BOOL8)v74, v75, 0, 0);
        v52 = v51;
        v53 = sub_1C6366AB4(*a1, 0, (const llvm::APInt *)&v81, v74, v75, 0, 0);
        v44 = sub_1C4815A8C(v49, (const llvm::APInt *)&v81, v74, v75, v42, 0, v50, v52, (uint64_t)v53, v54, v55);
        v43 = (uint64_t *)v56;
      }
      else
      {
        v43 = 0;
        v44 = v41;
      }
      v45 = v92;
      if (v92 >= (unint64_t)HIDWORD(v92))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v91, (uint64_t)v93, v92 + 1, 16);
        v45 = v92;
      }
      v46 = (uint64_t **)((char *)v91 + 16 * v45);
      *v46 = v44;
      v46[1] = v43;
      LODWORD(v92) = v92 + 1;
      v47 = v89;
      if (v89 >= (unint64_t)HIDWORD(v89))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v88, (uint64_t)v90, v89 + 1, 16);
        v47 = v89;
      }
      v48 = (uint64_t *)((char *)v88 + 16 * v47);
      *v48 = v42;
      v48[1] = 1;
      LODWORD(v89) = v89 + 1;
      if (v85 != v87)
        free(v85);
      if (++v18 == v77)
      {
        v57 = (uint64_t *)v91;
        v58 = v92;
        v3 = v76;
        goto LABEL_37;
      }
    }
    v25 = 0;
    while (1)
    {
      v26 = *(_QWORD *)(a2 + 32) + v25;
      v28 = *(uint64_t **)(v26 + 40);
      v27 = *(_QWORD *)(v26 + 48);
      v29 = (uint64_t *)(v28[5] + 16 * v27);
      v31 = *v29;
      v30 = v29[1];
      v80[0] = v31;
      v80[1] = v30;
      if ((_BYTE)v31)
      {
        if (v31 - 15 < 0x9C)
        {
          v32 = *a1;
          LOBYTE(v33) = sub_1C47F37A0((unsigned __int8 *)v80);
          v35 = 0;
          v36 = 0;
LABEL_19:
          v38 = *(_QWORD *)(v32 + 832);
          if (v38)
            LOWORD(v38) = *(_WORD *)(v38 + 8);
          v28 = sub_1C5D56C70(v32, 148, (const llvm::APInt *)&v81, (llvm *)(v35 | v33), v36, (uint64_t)v28, v27, v34, v20, v22, v38);
          v27 = v27 & 0xFFFFFFFF00000000 | v39;
          v24 = v86;
        }
      }
      else if ((*(_DWORD *)(v30 + 8) & 0xFE) == 0x12)
      {
        v32 = *a1;
        v33 = llvm::EVT::getEVT(*(llvm::EVT **)(v30 + 24), 0, v19);
        v36 = v37;
        v35 = v33 & 0xFFFFFFFFFFFFFF00;
        goto LABEL_19;
      }
      if (v24 >= HIDWORD(v86))
      {
        llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v85, (uint64_t)v87, v24 + 1, 16);
        v24 = v86;
      }
      v40 = (uint64_t **)((char *)v85 + 16 * v24);
      *v40 = v28;
      v40[1] = (uint64_t *)v27;
      v24 = v86 + 1;
      LODWORD(v86) = v86 + 1;
      v25 += 40;
      if (40 * v79 - 40 == v25)
        goto LABEL_25;
    }
  }
  v58 = 0;
  v57 = (uint64_t *)v93;
LABEL_37:
  v59 = *(_QWORD *)(*a1 + 832);
  if (v59)
    v60 = *(unsigned __int16 *)(v59 + 8);
  else
    v60 = 0;
  v61 = sub_1C636D0C8(*a1, (const char *)0x92, (const llvm::APInt *)&v81, v83, v84, v57, v58, v60);
  v63 = v62;
  v64 = *(_QWORD *)(*a1 + 832);
  if (v64)
    v65 = *(unsigned __int16 *)(v64 + 8);
  else
    v65 = 0;
  v66 = sub_1C636D0C8(*a1, (const char *)2, (const llvm::APInt *)&v81, (llvm *)1, 0, (uint64_t *)v88, v89, v65);
  v68 = v67;
  v69 = *(unsigned int *)(v3 + 8);
  if (v69 >= *(_DWORD *)(v3 + 12))
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod(v3, v3 + 16, v69 + 1, 16);
    LODWORD(v69) = *(_DWORD *)(v3 + 8);
  }
  v70 = (uint64_t **)(*(_QWORD *)v3 + 16 * v69);
  *v70 = v61;
  v70[1] = v63;
  v71 = *(_DWORD *)(v3 + 12);
  v72 = (*(_DWORD *)(v3 + 8) + 1);
  *(_DWORD *)(v3 + 8) = v72;
  if (v72 >= v71)
  {
    llvm::SmallVectorBase<unsigned int>::grow_pod(v3, v3 + 16, v72 + 1, 16);
    LODWORD(v72) = *(_DWORD *)(v3 + 8);
  }
  v73 = (uint64_t **)(*(_QWORD *)v3 + 16 * v72);
  *v73 = v66;
  v73[1] = v68;
  ++*(_DWORD *)(v3 + 8);
  if (v88 != v90)
    free(v88);
  if (v91 != v93)
    free(v91);
  if (v81)
    llvm::MetadataTracking::untrack((uint64_t)&v81, v81);
}

char *sub_1C5CF5E30(char *result)
{
  char *v1;
  unsigned int v2;
  unsigned int v3;
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  int v7;
  char *v8;

  v1 = result;
  v2 = *(_DWORD *)result;
  v3 = 1 << (33 - __clz((*(_DWORD *)result >> 1) - 1));
  if (*(_DWORD *)result >= 2u)
    v4 = v3;
  else
    v4 = 0;
  if ((v2 & 1) != 0 && v4 < 0x41)
  {
    v5 = result + 2056;
    *(_QWORD *)result = 1;
    v6 = result + 8;
    do
    {
LABEL_7:
      *v6 = xmmword_1C6429E90;
      v6 += 2;
    }
    while (v6 != v5);
    return result;
  }
  if ((v2 & 1) == 0)
  {
    if ((_DWORD)v4 == *((_DWORD *)result + 4))
    {
      *(_QWORD *)result = 0;
      if (v2 < 2)
        return result;
      v6 = (_OWORD *)*((_QWORD *)result + 1);
      v5 = &v6[2 * v4];
      goto LABEL_7;
    }
    MEMORY[0x1CAA32FB4](*((_QWORD *)result + 1), 8);
  }
  if (v4 <= 0x40)
  {
    *(_QWORD *)v1 = 1;
  }
  else
  {
    *(_DWORD *)v1 &= ~1u;
    result = (char *)operator new(32 * v4, (std::align_val_t)8uLL);
    *((_QWORD *)v1 + 1) = result;
    *((_QWORD *)v1 + 2) = v4;
    v7 = *(_DWORD *)v1;
    *(_QWORD *)v1 = *(_DWORD *)v1 & 1;
    if ((v7 & 1) == 0)
    {
      v8 = &result[32 * v4];
      goto LABEL_19;
    }
  }
  result = v1 + 8;
  v8 = v1 + 2056;
  do
  {
LABEL_19:
    *(_OWORD *)result = xmmword_1C6429E90;
    result += 32;
  }
  while (result != v8);
  return result;
}

uint64_t *sub_1C5CF5F40(_QWORD *a1, uint64_t a2, BOOL a3)
{
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 *v13;
  unint64_t EVT;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  llvm *v18;
  uint64_t v19;
  unsigned __int8 *v20;
  uint64_t v21;
  __int16 v22;
  uint64_t *v23;
  uint64_t v25;
  unsigned int v26;
  unsigned __int8 *v27;
  uint64_t v28;

  v5 = *(uint64_t **)(a2 + 32);
  v7 = *v5;
  v6 = v5[1];
  v8 = *(_QWORD *)(*v5 + 40) + 16 * v6;
  v9 = *(unsigned __int8 **)v8;
  v10 = *(_QWORD *)(v8 + 8);
  if ((_BYTE)v9)
  {
    if (v9 - 15 >= 0x9C)
      goto LABEL_5;
  }
  else if ((*(_DWORD *)(v10 + 8) & 0xFE) != 0x12)
  {
    goto LABEL_5;
  }
  v27 = v9;
  v28 = v10;
  if (sub_1C612FE00((llvm::EVT *)&v27, (const char *)a2) == 1)
  {
    v25 = *(_QWORD *)(v7 + 40);
    if (!*(_BYTE *)(v25 + 16 * v6)
      || !*(_QWORD *)(*a1 + 8 * *(unsigned __int8 *)(v25 + 16 * v6) + 96))
    {
      v7 = sub_1C63354E0((uint64_t)a1, v7, v6);
      v6 = v6 & 0xFFFFFFFF00000000 | v26;
    }
  }
LABEL_5:
  v11 = *(_QWORD *)(a2 + 40);
  v13 = *(unsigned __int8 **)v11;
  v12 = *(_QWORD *)(v11 + 8);
  v27 = v13;
  v28 = v12;
  if ((_BYTE)v13)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v27);
    v15 = 0;
    v16 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v12 + 24), 0, a3);
    v16 = v17;
    v15 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  v18 = (llvm *)(v15 | EVT);
  v19 = a1[1];
  v20 = *(unsigned __int8 **)(a2 + 64);
  v27 = v20;
  if (v20)
    llvm::MetadataTracking::track((uint64_t)&v27, v20, 2);
  LODWORD(v28) = *(_DWORD *)(a2 + 60);
  v21 = *(_QWORD *)(v19 + 832);
  if (v21)
    v22 = *(_WORD *)(v21 + 8);
  else
    v22 = 0;
  v23 = sub_1C5D52060(v19, 216, (const llvm::APInt *)&v27, v18, v16, v7, v6, v22);
  if (v27)
    llvm::MetadataTracking::untrack((uint64_t)&v27, v27);
  return v23;
}

uint64_t *sub_1C5CF60C4(uint64_t a1, uint64_t a2, BOOL a3)
{
  uint64_t v5;
  uint64_t v6;
  unsigned __int8 *v7;
  unint64_t EVT;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t **v12;
  uint64_t *v13;
  unint64_t v14;
  unsigned __int8 *v15;
  llvm *v16;
  uint64_t v17;
  unsigned __int8 *v18;
  uint64_t v19;
  __int16 v20;
  unsigned __int8 *v22;
  uint64_t v23;

  v5 = *(_QWORD *)(a2 + 40);
  v7 = *(unsigned __int8 **)v5;
  v6 = *(_QWORD *)(v5 + 8);
  v22 = v7;
  v23 = v6;
  if ((_BYTE)v7)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v22);
    v9 = 0;
    v10 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v6 + 24), 0, a3);
    v10 = v11;
    v9 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  v12 = *(uint64_t ***)(a2 + 32);
  v13 = *v12;
  v14 = (unint64_t)v12[1];
  v15 = (unsigned __int8 *)((*v12)[5] + 16 * v14);
  if (*v15 != EVT || !(_BYTE)EVT && *((_QWORD *)v15 + 1) != v10)
  {
    v16 = (llvm *)(v9 | EVT);
    v17 = *(_QWORD *)(a1 + 8);
    v18 = *(unsigned __int8 **)(a2 + 64);
    v22 = v18;
    if (v18)
      llvm::MetadataTracking::track((uint64_t)&v22, v18, 2);
    LODWORD(v23) = *(_DWORD *)(a2 + 60);
    v19 = *(_QWORD *)(v17 + 832);
    if (v19)
      v20 = *(_WORD *)(v19 + 8);
    else
      v20 = 0;
    v13 = sub_1C5D52060(v17, 201, (const llvm::APInt *)&v22, v16, v10, (uint64_t)v13, v14, v20);
    if (v22)
      llvm::MetadataTracking::untrack((uint64_t)&v22, v22);
  }
  return v13;
}

uint64_t *sub_1C5CF61E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unsigned __int8 *v13;
  uint64_t v14;
  uint64_t v15;
  llvm *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *result;
  int v31;
  __int128 v32;
  __int128 v33;
  llvm *v34;
  uint64_t v35;
  __int128 v36;
  unsigned __int8 *v37;
  int v38;

  v8 = *(uint64_t **)(a2 + 32);
  v9 = *v8;
  v10 = v8[1];
  v11 = v8[5];
  v12 = v8[6];
  v13 = *(unsigned __int8 **)(a2 + 64);
  v37 = v13;
  if (v13)
    llvm::MetadataTracking::track((uint64_t)&v37, v13, 2);
  v38 = *(_DWORD *)(a2 + 60);
  v14 = *(_QWORD *)(a1 + 8);
  v32 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  sub_1C636F9DC(v14, (_BOOL8 *)&v32, a3, (unint64_t *)&v33);
  v36 = v33;
  v16 = v34;
  v17 = v35;
  v18 = *(_QWORD *)(a1 + 8);
  v19 = *(_QWORD *)(v18 + 832);
  if (v19)
    LOWORD(v19) = *(_WORD *)(v19 + 8);
  *(_QWORD *)a3 = sub_1C5D56C70(v18, 151, (const llvm::APInt *)&v37, (llvm *)v33, *((uint64_t *)&v33 + 1), v9, v10, v15, v11, v12, v19);
  *(_DWORD *)(a3 + 8) = v20;
  v21 = *(_QWORD *)(v11 + 80);
  v22 = (_QWORD *)(v21 + 24);
  if (*(_DWORD *)(v21 + 32) >= 0x41u)
    v22 = (_QWORD *)*v22;
  v23 = (_QWORD *)*v22;
  v24 = *(_QWORD *)(a1 + 8);
  v25 = sub_1C52B71D4((unsigned __int8 *)&v36);
  v26 = sub_1C6366C9C(v24, (uint64_t)v23 + v25, (uint64_t)&v37, 0);
  v29 = *(_QWORD *)(v24 + 832);
  if (v29)
    LOWORD(v29) = *(_WORD *)(v29 + 8);
  result = sub_1C5D56C70(v24, 151, (const llvm::APInt *)&v37, v16, v17, v9, v10, v28, v26, v27, v29);
  *(_QWORD *)a4 = result;
  *(_DWORD *)(a4 + 8) = v31;
  if (v37)
    return (uint64_t *)llvm::MetadataTracking::untrack((uint64_t)&v37, v37);
  return result;
}

uint64_t *sub_1C5CF634C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t a4)
{
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  unsigned int v16;
  int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  unsigned int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *result;
  int v27;
  int v28;
  int v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  llvm *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int v41;
  unsigned __int8 v42;
  uint64_t v43;
  unint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t *FixedStack;
  uint64_t v50;
  int v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t *v55;
  unsigned int v56;
  unsigned int v57;
  uint64_t v58;
  int v59;
  char v60;
  _QWORD *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t ***v77;
  int v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int *v81;
  __int128 v82;
  uint64_t v83;
  __int128 v84;
  int v85;
  char v86;
  __int128 v87;
  __int128 v88;
  _QWORD v89[2];
  int v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  unsigned __int8 *v97;
  int v98;
  __int128 v99;
  uint64_t v100;

  v8 = *(uint64_t **)(a2 + 32);
  v9 = *v8;
  v10 = v8[1];
  v11 = v8[5];
  v12 = v8[6];
  v14 = v8[10];
  v13 = v8[11];
  v15 = *(unsigned __int8 **)(a2 + 64);
  v97 = v15;
  if (v15)
    llvm::MetadataTracking::track((uint64_t)&v97, v15, 2);
  v98 = *(_DWORD *)(a2 + 60);
  v81 = (unsigned int *)a4;
  sub_1C6347ABC((uint64_t)a1, v9, v10, (uint64_t)a3, a4);
  v96 = *(_OWORD *)(*(_QWORD *)(v9 + 40) + 16 * v10);
  v95 = *(_OWORD *)(*(_QWORD *)(*a3 + 40) + 16 * *((unsigned int *)a3 + 2));
  v94 = *(_OWORD *)(*(_QWORD *)(v11 + 40) + 16 * v12);
  v16 = sub_1C52B71D4((unsigned __int8 *)&v96);
  v17 = sub_1C52B71D4((unsigned __int8 *)&v94);
  v18 = sub_1C52B71D4((unsigned __int8 *)&v95);
  v20 = *(_QWORD *)(v14 + 80);
  v21 = (_QWORD *)(v20 + 24);
  if (*(_DWORD *)(v20 + 32) >= 0x41u)
    v21 = (_QWORD *)*v21;
  v22 = (_QWORD *)*v21;
  v23 = (_DWORD)v22 + v17;
  if ((int)v22 + v17 <= v18)
  {
    v24 = a1[1];
    v25 = *(_QWORD *)(v24 + 832);
    if (v25)
      LOWORD(v25) = *(_WORD *)(v25 + 8);
    result = sub_1C5D58E08(v24, (const char *)0x96, (const llvm::APInt *)&v97, (llvm *)v95, *((uint64_t *)&v95 + 1), *a3, a3[1], v19, v11, v12, v14, v13, SHIDWORD(v13), v25);
    goto LABEL_9;
  }
  if ((_BYTE)v96)
    v28 = v96 - 120 < 0x33;
  else
    v28 = *(unsigned __int8 *)(*((_QWORD *)&v96 + 1) + 8) == 19;
  if ((_BYTE)v94)
    v29 = v94 - 120 < 0x33;
  else
    v29 = *(unsigned __int8 *)(*((_QWORD *)&v94 + 1) + 8) == 19;
  v30 = a1[1];
  if (v28 != v29 || (v18 <= v22 ? (v31 = v23 > v16) : (v31 = 1), v31))
  {
    v42 = sub_1C5D44120(v30, v96, *((uint64_t *)&v96 + 1));
    v43 = a1[1];
    v44 = sub_1C47C1C70((unsigned __int8 *)&v96);
    v80 = v42;
    v46 = sub_1C636847C(v43, v44, v45, v42);
    v48 = v47;
    v92 = v46;
    v93 = v47;
    v77 = *(uint64_t ****)(a1[1] + 40);
    FixedStack = llvm::PseudoSourceValueManager::getFixedStack(v77[54], *(_DWORD *)(v46 + 76));
    v50 = (unint64_t)FixedStack | 4;
    if (FixedStack)
      v51 = *((_DWORD *)FixedStack + 3);
    else
      v51 = 0;
    v78 = v51;
    v52 = a1[1];
    v89[0] = v50;
    v89[1] = 0;
    v90 = v51;
    v91 = 0;
    v87 = 0u;
    v88 = 0u;
    v79 = v50;
    v75 = sub_1C636B75C(v52, v52 + 112, 0, (uint64_t)&v97, v9, v10, v46, v48, (uint64_t)v89, v80, SHIDWORD(v80), 0, (uint64_t)&v87);
    v54 = v53;
    v55 = sub_1C5D9FF38(*a1, a1[1], v46, v48, (llvm *)v96, *((uint64_t *)&v96 + 1), v94, *((uint64_t *)&v94 + 1), v14, v13);
    v57 = v56;
    v76 = v48;
    v58 = a1[1];
    v59 = *((_DWORD *)(*v77)[5] + 69);
    v99 = 0uLL;
    v87 = 0u;
    v88 = 0u;
    LODWORD(v100) = v59;
    BYTE4(v100) = 0;
    sub_1C6365BD8(v58, *(_QWORD *)(*(_QWORD *)(v11 + 40) + 16 * v12), *(_QWORD *)(*(_QWORD *)(v11 + 40) + 16 * v12 + 8));
    v61 = sub_1C636B75C(v58, (uint64_t)v75, v54, (uint64_t)&v97, v11, v12, (uint64_t)v55, v57, (uint64_t)&v99, v60, 0, 0, (uint64_t)&v87);
    v63 = v62;
    v64 = a1[1];
    v65 = (uint64_t *)(*(_QWORD *)(*a3 + 40) + 16 * *((unsigned int *)a3 + 2));
    v66 = *v65;
    v67 = v65[1];
    v84 = (unint64_t)v79;
    v85 = v78;
    v86 = 0;
    v87 = 0u;
    v88 = 0u;
    v68 = sub_1C63681B0(v64, v66, v67, (uint64_t)&v97, (uint64_t)v61, v63, v46, v76, &v84, (unsigned __int16)v80 | 0x100u, (v80 | 0x100uLL) >> 32, 0, (uint64_t)&v87, 0);
    *a3 = (uint64_t)v68;
    *((_DWORD *)a3 + 2) = v69;
    v70 = v68[12];
    v99 = *(_OWORD *)v70;
    v100 = *(_QWORD *)(v70 + 16);
    sub_1C63519B4((uint64_t)a1, (uint64_t)v68, v95, *((uint64_t *)&v95 + 1), (uint64_t)&v99, (uint64_t)&v92, 0);
    v71 = a1[1];
    a3 = (uint64_t *)v81;
    v72 = (uint64_t *)(*(_QWORD *)(*(_QWORD *)v81 + 40) + 16 * v81[2]);
    v73 = *v72;
    v74 = v72[1];
    v82 = v99;
    v83 = v100;
    v87 = 0u;
    v88 = 0u;
    result = sub_1C63681B0(v71, v73, v74, (uint64_t)&v97, (uint64_t)v61, v63, v92, v93, &v82, (unsigned __int16)v80 | 0x100u, (v80 | 0x100uLL) >> 32, 0, (uint64_t)&v87, 0);
LABEL_9:
    *a3 = (uint64_t)result;
    *((_DWORD *)a3 + 2) = v27;
    goto LABEL_10;
  }
  v32 = *(_QWORD *)v81;
  v33 = *((_QWORD *)v81 + 1);
  v34 = *(_QWORD *)(*(_QWORD *)v81 + 40) + 16 * v81[2];
  v35 = *(llvm **)v34;
  v36 = *(_QWORD *)(v34 + 8);
  v37 = sub_1C6366C9C(v30, v22 - v18, (uint64_t)&v97, 0);
  v40 = *(_QWORD *)(v30 + 832);
  if (v40)
    LOWORD(v40) = *(_WORD *)(v40 + 8);
  result = sub_1C5D58E08(v30, (const char *)0x96, (const llvm::APInt *)&v97, v35, v36, v32, v33, v39, v11, v12, v37, v38, SHIDWORD(v38), v40);
  *(_QWORD *)v81 = result;
  v81[2] = v41;
LABEL_10:
  if (v97)
    return (uint64_t *)llvm::MetadataTracking::untrack((uint64_t)&v97, v97);
  return result;
}

uint64_t sub_1C5CF680C(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  int v15;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  llvm *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  int v28;
  unsigned __int8 *v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  llvm *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  llvm *v44;
  unint64_t EVT;
  uint64_t v46;
  BOOL v47;
  unint64_t v48;
  llvm::LLVMContext *v49;
  llvm::Type *v50;
  uint64_t v51;
  llvm *v52;
  __int16 v53;
  uint64_t v54;
  uint64_t v55;
  int v56;
  uint64_t *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int16 v61;
  int v62;
  uint64_t v63;
  unint64_t v64;
  int v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *FixedStack;
  uint64_t v69;
  int v70;
  uint64_t v71;
  int v72;
  int v73;
  uint64_t *v74;
  unsigned int v75;
  uint64_t v76;
  int v77;
  llvm *v78;
  uint64_t v79;
  unint64_t ExtendedSizeInBits;
  _QWORD *v81;
  int v82;
  int v83;
  BOOL v84;
  __int128 v85;
  __int128 v86;
  uint64_t v87;
  _QWORD *v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  BOOL v94;
  __int128 v95;
  int v96;
  unsigned __int8 *v97;
  uint64_t v98;
  uint64_t v99;
  __int16 v100;
  int v101;
  unsigned __int8 *v102;
  uint64_t v103;
  uint64_t v104;
  __int16 v105;
  uint64_t v106;
  unsigned int v107;
  uint64_t v108;
  uint64_t ***v109;
  _QWORD *v110;
  int v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  llvm *v115;
  unsigned __int8 v116;
  unint64_t v117;
  uint64_t *v118;
  __int128 v119;
  __int128 v120;
  uint64_t v121;
  __int128 v122;
  uint64_t v123;
  __int128 v124;
  int v125;
  char v126;
  _QWORD v127[2];
  int v128;
  char v129;
  __int128 v130;
  __int128 v131;
  _QWORD v132[2];
  int v133;
  char v134;
  uint64_t v135;
  uint64_t v136;
  llvm *v137;
  uint64_t v138;
  llvm *v139;
  uint64_t v140;
  unsigned __int8 *v141;
  int v142;

  v8 = *(_QWORD *)(a2 + 32);
  v10 = *(uint64_t **)v8;
  v9 = *(_QWORD *)(v8 + 8);
  v11 = *(_QWORD *)(v8 + 48);
  v118 = *(uint64_t **)(v8 + 40);
  v12 = *(_QWORD *)(v8 + 80);
  v13 = *(_QWORD *)(v8 + 88);
  v14 = *(unsigned __int8 **)(a2 + 64);
  v141 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v141, v14, 2);
  v142 = *(_DWORD *)(a2 + 60);
  sub_1C6347ABC((uint64_t)a1, (uint64_t)v10, v9, (uint64_t)a3, (uint64_t)a4);
  v15 = *(unsigned __int16 *)(v12 + 24);
  if (v15 == 35 || v15 == 11)
  {
    v17 = *(_QWORD *)(v12 + 80);
    v18 = (_QWORD *)(v17 + 24);
    if (*(_DWORD *)(v17 + 32) >= 0x41u)
      v18 = (_QWORD *)*v18;
    v19 = (_QWORD *)*v18;
    v130 = *(_OWORD *)(*(_QWORD *)(*a3 + 40) + 16 * *((unsigned int *)a3 + 2));
    v20 = sub_1C52B71D4((unsigned __int8 *)&v130);
    if (v20 > v19)
    {
      v22 = a1[1];
      v23 = *(_QWORD *)(*a3 + 40) + 16 * *((unsigned int *)a3 + 2);
      v24 = *(llvm **)v23;
      v25 = *(_QWORD *)(v23 + 8);
      v26 = *(_QWORD *)(v22 + 832);
      if (v26)
        LOWORD(v26) = *(_WORD *)(v26 + 8);
      result = (uint64_t)sub_1C5D58E08(v22, (const char *)0x93, (const llvm::APInt *)&v141, v24, v25, *a3, a3[1], v21, (uint64_t)v118, v11, v12, v13, SHIDWORD(v13), v26);
      *a3 = result;
      *((_DWORD *)a3 + 2) = v28;
      goto LABEL_17;
    }
    v29 = (unsigned __int8 *)(v10[5] + 16 * v9);
    if (*v29)
    {
      if (*v29 - 120 < 0x33)
        goto LABEL_16;
    }
    else if (*(_BYTE *)(*((_QWORD *)v29 + 1) + 8) == 19)
    {
      goto LABEL_16;
    }
    v31 = a1[1];
    v32 = *a4;
    v33 = a4[1];
    v34 = *(_QWORD *)(*a4 + 40) + 16 * *((unsigned int *)a4 + 2);
    v35 = *(llvm **)v34;
    v36 = *(_QWORD *)(v34 + 8);
    v37 = sub_1C6366C9C(v31, v19 - v20, (uint64_t)&v141, 0);
    v40 = *(_QWORD *)(v31 + 832);
    if (v40)
      LOWORD(v40) = *(_WORD *)(v40 + 8);
    result = (uint64_t)sub_1C5D58E08(v31, (const char *)0x93, (const llvm::APInt *)&v141, v35, v36, v32, v33, v39, (uint64_t)v118, v11, v37, v38, SHIDWORD(v38), v40);
    goto LABEL_57;
  }
LABEL_16:
  result = sub_1C5CEE7DC(a1, a2, **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), 1);
  if ((result & 1) == 0)
  {
    v42 = v10[5] + 16 * v9;
    v44 = *(llvm **)v42;
    v43 = *(_QWORD *)(v42 + 8);
    v139 = v44;
    v140 = v43;
    if ((_BYTE)v44)
    {
      LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v139);
      v48 = 0;
      v46 = 0;
    }
    else
    {
      EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v43 + 24), 0, v30);
      v48 = EVT & 0xFFFFFFFFFFFFFF00;
    }
    v137 = (llvm *)(v48 | EVT);
    v138 = v46;
    if ((unint64_t)sub_1C6131328((unsigned __int8 *)&v139, v46, v47) <= 7)
    {
      LOBYTE(v137) = 3;
      v138 = 0;
      v49 = *(llvm::LLVMContext **)(a1[1] + 56);
      v115 = v137;
      v50 = (llvm::Type *)sub_1C52B71D4((unsigned __int8 *)&v139);
      v52 = (llvm *)sub_1C47AC578(v49, (uint64_t)v115, 0, v50);
      v53 = 0;
      v139 = v52;
      v140 = v51;
      v54 = a1[1];
      v55 = *(_QWORD *)(v54 + 832);
      if (v55)
        v53 = *(_WORD *)(v55 + 8);
      v10 = sub_1C5D52060(v54, 200, (const llvm::APInt *)&v141, v52, v51, (uint64_t)v10, v9, v53);
      LODWORD(v9) = v56;
      v57 = (uint64_t *)(v118[5] + 16 * v11);
      v58 = v57[1];
      if ((v137 != *v57 || !(_BYTE)v137 && v138 != v58)
        && sub_1C50989E0((unsigned __int8 *)&v137, *v57, v58))
      {
        v59 = a1[1];
        v60 = *(_QWORD *)(v59 + 832);
        if (v60)
          v61 = *(_WORD *)(v60 + 8);
        else
          v61 = 0;
        v118 = sub_1C5D52060(v59, 200, (const llvm::APInt *)&v141, v137, v138, (uint64_t)v118, v11, v61);
        LODWORD(v11) = v62;
      }
    }
    v116 = sub_1C5D44120(a1[1], (uint64_t)v139, v140);
    v63 = a1[1];
    v64 = sub_1C47C1C70((unsigned __int8 *)&v139);
    v114 = v116;
    v66 = sub_1C636847C(v63, v64, v65, v116);
    v135 = v66;
    v136 = v67;
    v117 = v67;
    v109 = *(uint64_t ****)(a1[1] + 40);
    FixedStack = llvm::PseudoSourceValueManager::getFixedStack(v109[54], *(_DWORD *)(v66 + 76));
    v69 = (unint64_t)FixedStack | 4;
    if (FixedStack)
      v70 = *((_DWORD *)FixedStack + 3);
    else
      v70 = 0;
    v71 = a1[1];
    v112 = v69;
    v132[0] = v69;
    v132[1] = 0;
    v111 = v70;
    v133 = v70;
    v134 = 0;
    v130 = 0u;
    v131 = 0u;
    v110 = sub_1C636B75C(v71, v71 + 112, 0, (uint64_t)&v141, (uint64_t)v10, v9, v66, v117, (uint64_t)v132, v114, SHIDWORD(v114), 0, (uint64_t)&v130);
    v73 = v72;
    v113 = v66;
    v74 = sub_1C5D9FE70(*a1, a1[1], v66, v117, v139, v140, v12, v13);
    v107 = v75;
    v108 = (uint64_t)v74;
    v76 = a1[1];
    v77 = *((_DWORD *)(*v109)[5] + 69);
    v127[0] = 0;
    v127[1] = 0;
    v128 = v77;
    v129 = 0;
    v78 = v137;
    v79 = v138;
    if ((_BYTE)v137)
      ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v137);
    else
      ExtendedSizeInBits = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v137);
    v130 = 0u;
    v131 = 0u;
    v106 = (63
                           - __clz(((1 << v114) | (ExtendedSizeInBits >> 3)) & -(uint64_t)((1 << v114) | (ExtendedSizeInBits >> 3))));
    v81 = sub_1C636B9CC(v76, (uint64_t)v110, v73, (uint64_t)&v141, (uint64_t)v118, v11, v108, v107, (uint64_t)v127, (uint64_t)v78, v79, v106, SHIDWORD(v106), 0, (uint64_t)&v130);
    v83 = v82;
    sub_1C636F9DC(a1[1], (_BOOL8 *)&v139, v84, (unint64_t *)&v130);
    v85 = v130;
    v86 = v131;
    v87 = a1[1];
    v124 = (unint64_t)v112;
    v125 = v111;
    v126 = 0;
    v130 = 0u;
    v131 = 0u;
    v88 = sub_1C63681B0(v87, v85, *((uint64_t *)&v85 + 1), (uint64_t)&v141, (uint64_t)v81, v83, v113, v117, &v124, (unsigned __int16)v114 | 0x100u, (v114 | 0x100uLL) >> 32, 0, (uint64_t)&v130, 0);
    *a3 = (uint64_t)v88;
    *((_DWORD *)a3 + 2) = v89;
    v90 = v88[12];
    v122 = *(_OWORD *)v90;
    v123 = *(_QWORD *)(v90 + 16);
    sub_1C63519B4((uint64_t)a1, (uint64_t)v88, v85, *((uint64_t *)&v85 + 1), (uint64_t)&v122, (uint64_t)&v135, 0);
    v91 = a1[1];
    v120 = v122;
    v121 = v123;
    v130 = 0u;
    v131 = 0u;
    *a4 = (uint64_t)sub_1C63681B0(v91, v86, *((uint64_t *)&v86 + 1), (uint64_t)&v141, (uint64_t)v81, v83, v135, v136, &v120, (unsigned __int16)v114 | 0x100u, (v114 | 0x100uLL) >> 32, 0, (uint64_t)&v130, 0);
    *((_DWORD *)a4 + 2) = v92;
    v93 = a1[1];
    v119 = *(_OWORD *)*(_QWORD *)(a2 + 40);
    result = sub_1C636F9DC(v93, (_BOOL8 *)&v119, v94, (unint64_t *)&v130);
    v95 = v131;
    v96 = v131;
    v97 = (unsigned __int8 *)(*(_QWORD *)(*a3 + 40) + 16 * *((unsigned int *)a3 + 2));
    if (v130 != *v97 || !(_BYTE)v130 && *((_QWORD *)&v130 + 1) != *((_QWORD *)v97 + 1))
    {
      v98 = a1[1];
      v99 = *(_QWORD *)(v98 + 832);
      if (v99)
        v100 = *(_WORD *)(v99 + 8);
      else
        v100 = 0;
      result = (uint64_t)sub_1C5D52060(v98, 201, (const llvm::APInt *)&v141, (llvm *)v130, *((uint64_t *)&v130 + 1), *a3, a3[1], v100);
      *a3 = result;
      *((_DWORD *)a3 + 2) = v101;
    }
    v102 = (unsigned __int8 *)(*(_QWORD *)(*a4 + 40) + 16 * *((unsigned int *)a4 + 2));
    if (v96 != *v102 || !v96 && *((_QWORD *)&v95 + 1) != *((_QWORD *)v102 + 1))
    {
      v103 = a1[1];
      v104 = *(_QWORD *)(v103 + 832);
      if (v104)
        v105 = *(_WORD *)(v104 + 8);
      else
        v105 = 0;
      result = (uint64_t)sub_1C5D52060(v103, 201, (const llvm::APInt *)&v141, (llvm *)v95, *((uint64_t *)&v95 + 1), *a4, a4[1], v105);
LABEL_57:
      *a4 = result;
      *((_DWORD *)a4 + 2) = v41;
    }
  }
LABEL_17:
  if (v141)
    return llvm::MetadataTracking::untrack((uint64_t)&v141, v141);
  return result;
}

void sub_1C5CF6EF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  unsigned __int8 *v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t *v25;
  int v26;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 *v34;
  __int128 v35;
  uint64_t v36;
  unint64_t v37;
  __int128 v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int v54;
  uint64_t v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unsigned int v69;
  __n128 v70;
  void *v71;
  __int128 v72;
  uint64_t v73;
  void *v74;
  __int128 v75;
  uint64_t v77;
  int v78;
  uint64_t v79;
  int v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  __int128 v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  __int128 v99;
  unsigned __int8 *v100;
  int v101;
  __int128 v102;
  uint64_t v103;
  int v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  int v112;
  __int128 v113;
  __int128 v114;
  uint64_t v115;
  int v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;

  v123 = *MEMORY[0x1E0C80C00];
  v9 = *(unsigned __int8 **)(a2 + 64);
  v100 = v9;
  if (v9)
    llvm::MetadataTracking::track((uint64_t)&v100, v9, 2);
  v101 = *(_DWORD *)(a2 + 60);
  v10 = *(_QWORD *)(a1 + 8);
  v102 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  sub_1C636F9DC(v10, (_BOOL8 *)&v102, a3, (unint64_t *)&v113);
  v72 = v113;
  v75 = v114;
  v11 = *(uint64_t **)(a2 + 32);
  v13 = *v11;
  v12 = v11[1];
  v99 = *(_OWORD *)sub_1C6131AB0(a2);
  v14 = *(unsigned __int16 *)(a2 + 24);
  if (v14 == 310)
  {
    v15 = *(_QWORD *)(a2 + 32);
    v93 = *(_QWORD *)(v15 + 80);
    LODWORD(v94) = *(_DWORD *)(v15 + 88);
    v95 = *(_QWORD *)(v15 + 160);
    LODWORD(v96) = *(_DWORD *)(v15 + 168);
    v97 = *(_QWORD *)(v15 + 200);
    v98 = *(_DWORD *)(v15 + 208);
  }
  else
  {
    v16 = *(_QWORD *)(a2 + 32);
    v17 = v14 == 371;
    v18 = 200;
    if (v17)
      v18 = 160;
    v19 = v16 + v18;
    v20 = *(_DWORD *)(v19 + 8);
    v93 = *(_QWORD *)v19;
    LODWORD(v94) = v20;
    v21 = 120;
    v22 = 80;
    if (!v17)
      v22 = 120;
    v23 = v16 + v22;
    v24 = *(_DWORD *)(v23 + 8);
    v95 = *(_QWORD *)v23;
    LODWORD(v96) = v24;
    if (!v17)
      v21 = 160;
    v25 = (uint64_t *)(v16 + v21);
    v26 = *((_DWORD *)v25 + 2);
    v97 = *v25;
    v98 = v26;
  }
  v92 = *(_OWORD *)(a2 + 80);
  v27 = *(_BYTE *)(*(_QWORD *)(a2 + 96) + 34);
  v90 = 0;
  v91 = 0;
  v88 = 0;
  v89 = 0;
  if ((a5 & 1) != 0)
  {
    v28 = v93;
    if (*(_WORD *)(v93 + 24) == 193)
    {
      sub_1C634F7C4(a1, v93, (uint64_t)&v90, (uint64_t)&v88);
      goto LABEL_17;
    }
  }
  else
  {
    v28 = v93;
  }
  sub_1C6351C28(&v113, a1, v28, v94, (const llvm::APInt *)&v100);
  v90 = v113;
  v91 = DWORD2(v113);
  v88 = v114;
  v89 = DWORD2(v114);
LABEL_17:
  sub_1C636F9DC(*(_QWORD *)(a1 + 8), (_BOOL8 *)&v92, v29, (unint64_t *)&v113);
  v30 = *((_QWORD *)&v113 + 1);
  v71 = (void *)v113;
  v73 = *((_QWORD *)&v114 + 1);
  v74 = (void *)v114;
  v86 = 0;
  v87 = 0;
  v84 = 0;
  v85 = 0;
  v31 = v95;
  v32 = *(_QWORD *)(v95 + 40) + 16 * v96;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v32, *(_QWORD *)(v32 + 8), (uint64_t)&v113);
  if (v113 == 6)
  {
    sub_1C6347ABC(a1, v31, v96, (uint64_t)&v84, (uint64_t)&v86);
  }
  else
  {
    sub_1C63493B4(*(_QWORD *)(a1 + 8), (unsigned int *)&v95, (const llvm::APInt *)&v100, (uint64_t)&v113);
    v84 = v113;
    v85 = DWORD2(v113);
    v86 = v114;
    v87 = DWORD2(v114);
  }
  v33 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 40);
  v34 = *(__int128 **)(a2 + 96);
  v82 = *v34;
  v83 = *((_QWORD *)v34 + 2);
  v35 = *(__int128 *)((char *)v34 + 56);
  v113 = *(__int128 *)((char *)v34 + 40);
  v114 = v35;
  v36 = *((_QWORD *)v34 + 9);
  v37 = sub_1C484358C(v33 + 128, 80, 3);
  *(_OWORD *)v37 = v82;
  *(_QWORD *)(v37 + 16) = v83;
  *(_QWORD *)(v37 + 24) = 0;
  v38 = v114;
  *(_OWORD *)(v37 + 40) = v113;
  *(_WORD *)(v37 + 32) = 1;
  *(_BYTE *)(v37 + 34) = v27;
  *(_OWORD *)(v37 + 56) = v38;
  *(_QWORD *)(v37 + 72) = v36;
  *(_WORD *)(v37 + 36) = 1;
  v39 = *(unsigned __int16 *)(a2 + 24);
  if (v39 == 310)
  {
    v81 = *(_OWORD *)(*(_QWORD *)(a2 + 32) + 40);
    v79 = 0;
    v80 = 0;
    v77 = 0;
    v78 = 0;
    v40 = *(_QWORD *)(v81 + 40) + 16 * DWORD2(v81);
    llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v40, *(_QWORD *)(v40 + 8), (uint64_t)&v113);
    if (v113 == 6)
    {
      sub_1C6347ABC(a1, v81, *((uint64_t *)&v81 + 1), (uint64_t)&v79, (uint64_t)&v77);
    }
    else
    {
      sub_1C63493B4(*(_QWORD *)(a1 + 8), (unsigned int *)&v81, (const llvm::APInt *)&v100, (uint64_t)&v113);
      v79 = v113;
      v80 = DWORD2(v113);
      v77 = v114;
      v78 = DWORD2(v114);
    }
    v56 = *(unsigned __int16 *)(a2 + 26);
    v57 = (v56 >> 10) & 3;
    *(_QWORD *)&v113 = v13;
    v58 = (v56 >> 7) & 7;
    DWORD2(v113) = v12;
    *(_QWORD *)&v114 = v79;
    DWORD2(v114) = v80;
    v115 = v90;
    v116 = v91;
    v117 = v99;
    v118 = DWORD2(v99);
    v119 = v84;
    v120 = v85;
    v122 = v98;
    v121 = v97;
    v59 = *(_QWORD *)(a1 + 8);
    v60 = sub_1C636A8B4(v59, v72, *((uint64_t *)&v72 + 1), 1, 0);
    *(_QWORD *)a3 = sub_1C5D605F8(v59, v60, v61, v71, v30, (uint64_t)&v100, (uint64_t *)&v113, 6, v37, v58, v57);
    *(_DWORD *)(a3 + 8) = v62;
    *(_QWORD *)&v102 = v13;
    DWORD2(v102) = v12;
    v103 = v77;
    v104 = v78;
    v105 = v88;
    v106 = v89;
    v107 = v99;
    v108 = DWORD2(v99);
    v110 = v87;
    v109 = v86;
    v112 = v98;
    v111 = v97;
    v63 = *(_QWORD *)(a1 + 8);
    v64 = sub_1C636A8B4(v63, v75, *((uint64_t *)&v75 + 1), 1, 0);
    v53 = sub_1C5D605F8(v63, v64, v65, v74, v73, (uint64_t)&v100, (uint64_t *)&v102, 6, v37, v58, v57);
  }
  else
  {
    v17 = v39 == 371;
    v41 = 240;
    if (v17)
      v41 = 200;
    sub_1C5D636A4(*(_QWORD *)(a1 + 8), *(_QWORD *)(*(_QWORD *)(a2 + 32) + v41), *(_QWORD *)(*(_QWORD *)(a2 + 32) + v41 + 8), v92, *((uint64_t *)&v92 + 1), (const llvm::APInt *)&v100, (uint64_t **)&v113);
    v42 = v113;
    v43 = DWORD2(v113);
    v44 = v114;
    v45 = DWORD2(v114);
    *(_QWORD *)&v113 = v13;
    DWORD2(v113) = v12;
    *(_QWORD *)&v114 = v99;
    DWORD2(v114) = DWORD2(v99);
    v115 = v84;
    v116 = v85;
    v117 = v97;
    v118 = v98;
    v120 = v91;
    v119 = v90;
    v121 = v42;
    v122 = v43;
    v46 = *(_QWORD *)(a1 + 8);
    v47 = sub_1C636A8B4(v46, v72, *((uint64_t *)&v72 + 1), 1, 0);
    *(_QWORD *)a3 = sub_1C5D5F5B8(v46, v47, v48, (uint64_t)v71, v30, (uint64_t)&v100, (uint64_t *)&v113, 6, v37, (*(unsigned __int16 *)(a2 + 26) >> 7) & 7);
    *(_DWORD *)(a3 + 8) = v49;
    *(_QWORD *)&v102 = v13;
    DWORD2(v102) = v12;
    v103 = v99;
    v104 = DWORD2(v99);
    v105 = v86;
    v106 = v87;
    v107 = v97;
    v108 = v98;
    v110 = v89;
    v109 = v88;
    v111 = v44;
    v112 = v45;
    v50 = *(_QWORD *)(a1 + 8);
    v51 = sub_1C636A8B4(v50, v75, *((uint64_t *)&v75 + 1), 1, 0);
    v53 = sub_1C5D5F5B8(v50, v51, v52, (uint64_t)v74, v73, (uint64_t)&v100, (uint64_t *)&v102, 6, v37, (*(unsigned __int16 *)(a2 + 26) >> 7) & 7);
  }
  *(_QWORD *)a4 = v53;
  *(_DWORD *)(a4 + 8) = v54;
  v66 = *(_QWORD *)(a1 + 8);
  v67 = *(_QWORD *)(v66 + 832);
  if (v67)
    LOWORD(v67) = *(_WORD *)(v67 + 8);
  v68 = sub_1C5D56C70(v66, 2, (const llvm::APInt *)&v100, (llvm *)1, 0, *(_QWORD *)a3, 1uLL, v55, (uint64_t)v53, 1uLL, v67);
  sub_1C5CED824(a1, a2, 1, (uint64_t)v68, v12 & 0xFFFFFFFF00000000 | v69, v70);
  if (v100)
    llvm::MetadataTracking::untrack((uint64_t)&v100, v100);
}

uint64_t sub_1C5CF7628(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v10;
  uint64_t v11;
  unint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  unsigned __int8 *v15;
  int v16;
  unsigned __int8 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  _OWORD *v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  unsigned int v36;
  uint64_t v37;
  int v38;
  __int32 *v39;
  size_t v40;
  __int32 *v41;
  __int32 *v42;
  __int32 *v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  uint64_t v47;
  _BOOL4 v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unsigned int v60;
  uint64_t v61;
  unsigned int v62;
  int8x8_t *v63;
  uint64_t v64;
  int8x8_t v65;
  uint8x8_t v66;
  uint8x8_t v67;
  char v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  unint64_t v74;
  unsigned int v75;
  unsigned int *v76;
  uint64_t v77;
  int *v78;
  uint64_t v79;
  unsigned int v80;
  unsigned int v81;
  int **v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int *v88;
  uint64_t v89;
  uint64_t v90;
  unsigned int *v91;
  unsigned int *v92;
  uint64_t v93;
  uint64_t v94;
  llvm *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  int v102;
  uint64_t v103;
  unsigned int *v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  unsigned __int8 *v110;
  int v111;
  unsigned __int8 *v112;
  uint64_t v113;
  uint64_t v114;
  BOOL v115;
  int v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  uint64_t v132;
  int *v133;
  char v134;
  char v135;
  _DWORD *v136;
  uint64_t v137;
  _DWORD *v138;
  int v139;
  BOOL v140;
  _BOOL4 v141;
  uint64_t v142;
  uint64_t v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  uint64_t *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  int *v152;
  uint64_t v153;
  unsigned int v154;
  unsigned int v155;
  uint64_t v156;
  unsigned int v157;
  int v159;
  _BOOL4 v160;
  uint64_t v161;
  _QWORD v162[2];
  int v163;
  uint64_t *v164;
  uint64_t *v165;
  uint64_t v166;
  void *v167[2];
  _OWORD v168[2];
  uint64_t v169;

  v10 = 0;
  v11 = 0;
  v169 = *MEMORY[0x1E0C80C00];
  v12 = (unint64_t *)a1[2];
  v162[0] = 0;
  v162[1] = 0;
  v163 = 0;
  v165 = 0;
  v166 = 0;
  v164 = 0;
  do
  {
    v13 = *(_QWORD *)(*a1 + v11);
    if (v13)
    {
      if (*(_WORD *)(v13 + 24) == 153)
      {
        v14 = *(_QWORD *)(v13 + 32);
        v15 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v14 + 40) + 16 * *(unsigned int *)(v14 + 8));
        v16 = *v15;
        v17 = (unsigned __int8 *)(*(_QWORD *)(v13 + 40) + 16 * *(unsigned int *)(*a1 + v11 + 8));
        if (v16 == *v17)
        {
          v18 = *((_QWORD *)v17 + 1);
          v19 = *((_QWORD *)v15 + 1);
          if (v16 || v19 == v18)
          {
            *(_OWORD *)v167 = *(_OWORD *)v14;
            v168[0] = *(_OWORD *)(v14 + 40);
            v21 = sub_1C6358844((uint64_t)v162, v167);
            v22 = v21;
            v23 = *(unsigned int *)(v21 + 8);
            if (v23 >= *(unsigned int *)(v21 + 12))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod(v21, v21 + 16, v23 + 1, 4);
              v23 = *(unsigned int *)(v22 + 8);
            }
            *(_DWORD *)(*(_QWORD *)v22 + 4 * v23) = v10;
            ++*(_DWORD *)(v22 + 8);
            v24 = *(_OWORD **)(v13 + 32);
            *(_OWORD *)v167 = *(_OWORD *)((char *)v24 + 40);
            v168[0] = *v24;
            v25 = sub_1C6358844((uint64_t)v162, v167);
            v26 = v25;
            v27 = *(unsigned int *)(v25 + 8);
            if (v27 >= *(unsigned int *)(v25 + 12))
            {
              llvm::SmallVectorBase<unsigned int>::grow_pod(v25, v25 + 16, v27 + 1, 4);
              v27 = *(unsigned int *)(v26 + 8);
            }
            *(_DWORD *)(*(_QWORD *)v26 + 4 * v27) = v10;
            ++*(_DWORD *)(v26 + 8);
          }
        }
      }
    }
    v11 += 16;
    ++v10;
  }
  while (v11 != 64);
  v28 = v164;
  v29 = v165;
  if (v164 != v165)
  {
    while (*((_DWORD *)v28 + 10) < 2u)
    {
LABEL_20:
      v28 += 12;
      if (v28 == v29)
        goto LABEL_17;
    }
    v33 = *(unsigned int *)(a2 + 8);
    if (!(_DWORD)v33)
    {
LABEL_39:
      v50 = *a1 + 16 * *(unsigned int *)v28[4];
      v51 = *v28;
      *(_DWORD *)(v50 + 8) = *((_DWORD *)v28 + 2);
      *(_QWORD *)v50 = v51;
      v52 = *a1 + 16 * *(unsigned int *)(v28[4] + 4);
      v53 = v28[2];
      *(_DWORD *)(v52 + 8) = *((_DWORD *)v28 + 6);
      *(_QWORD *)v52 = v53;
      *((_DWORD *)v28 + 10) = 0;
      *(_OWORD *)v167 = *((_OWORD *)v28 + 1);
      v168[0] = *(_OWORD *)v28;
      *(_DWORD *)(sub_1C6358844((uint64_t)v162, v167) + 8) = 0;
      goto LABEL_20;
    }
    v34 = *(int **)a2;
    v35 = 4 * v33;
    while (1)
    {
      if (*v34 != -1)
      {
        v36 = *v34 / *((_DWORD *)a1 + 6);
        v37 = *(_QWORD *)(*a1 + 16 * v36);
        v38 = *(unsigned __int16 *)(v37 + 24);
        if (v38 == 51)
          goto LABEL_34;
        if (v38 != 153)
          goto LABEL_38;
        v39 = (__int32 *)v28[4];
        v40 = *((unsigned int *)v28 + 10);
        v41 = &v39[v40];
        v42 = wmemchr(v39, v36, v40);
        v43 = v42 ? v42 : v41;
        v44 = v28[4];
        if (v43 == (__int32 *)(v44 + 4 * *((unsigned int *)v28 + 10)))
          goto LABEL_38;
        v45 = *((_DWORD *)a1 + 6);
        v46 = *(_DWORD *)(*(_QWORD *)(v37 + 80) + 4 * (*v34 % v45));
        if (v46 == -1)
        {
LABEL_34:
          v49 = -1;
        }
        else
        {
          v47 = *(_QWORD *)(v37 + 32) + 40 * (v46 / v45);
          v48 = *(_QWORD *)v47 == *v28 && *(_DWORD *)(v47 + 8) == *((_DWORD *)v28 + 2);
          v49 = v46 % v45 + *(_DWORD *)(v44 + 4 * !v48) * v45;
        }
        *v34 = v49;
      }
LABEL_38:
      ++v34;
      v35 -= 4;
      if (!v35)
        goto LABEL_39;
    }
  }
LABEL_17:
  v30 = 0x2000000000000001;
  v161 = 0x2000000000000001;
  v31 = *(unsigned int *)(a2 + 8);
  if (!(_DWORD)v31)
  {
    v32 = 0x2000000000000001;
LABEL_59:
    v159 = 0;
    v67 = (uint8x8_t)vcnt_s8((int8x8_t)(v30 >> 1));
    v67.i16[0] = vaddlv_u8(v67);
    v62 = v67.i32[0];
    goto LABEL_60;
  }
  v54 = 4 * v31;
  v55 = *(int **)a2;
  v32 = 0x2000000000000001;
  do
  {
    if (*v55 != -1)
    {
      v56 = *v55 / *((_DWORD *)a1 + 6);
      v57 = *(_QWORD *)(*a1 + 16 * v56);
      if (*(_WORD *)(v57 + 24) == 51)
      {
        *v55 = -1;
      }
      else
      {
        v58 = *(_QWORD *)(v57 + 40) + 16 * *(unsigned int *)(*a1 + 16 * v56 + 8);
        llvm::TargetLoweringBase::getTypeConversion(*v12, *(llvm::EVT **)(v12[1] + 56), *(_QWORD *)v58, *(_QWORD *)(v58 + 8), (uint64_t)v167);
        v59 = *(_QWORD *)(*a1 + 16 * v56);
        if (*(_WORD *)(v59 + 24) == 149
          && *(_WORD *)(v59 + 56) == 2
          && *(_WORD *)(*(_QWORD *)(*(_QWORD *)(v59 + 32) + 40) + 24) != 51
          && (LOBYTE(v167[0]) == 7 || !LOBYTE(v167[0])))
        {
          v60 = *v55 % *((_DWORD *)a1 + 6) / (*((_DWORD *)a1 + 6) >> 1) + 2 * v56;
          if ((v32 & 1) != 0)
          {
            v32 = ((unsigned __int16)(2 << v60) | (unsigned __int16)v32) & 0x1FE | 0x2000000000000001;
            v161 = v32;
          }
          else
          {
            *(_QWORD *)(*(_QWORD *)v32 + 8 * (v60 >> 6)) |= 1 << v60;
          }
        }
      }
    }
    ++v55;
    v54 -= 4;
  }
  while (v54);
  if ((v32 & 1) != 0)
  {
    v30 = v32;
    goto LABEL_59;
  }
  v61 = *(unsigned int *)(v32 + 8);
  if ((_DWORD)v61)
  {
    v62 = 0;
    v63 = *(int8x8_t **)v32;
    v64 = 8 * v61;
    do
    {
      v65 = *v63++;
      v66 = (uint8x8_t)vcnt_s8(v65);
      v66.i16[0] = vaddlv_u8(v66);
      v62 += v66.i32[0];
      v64 -= 8;
    }
    while (v64);
    v159 = 1;
LABEL_60:
    if (v62 > 1)
    {
      v68 = 0;
      v69 = 0;
      v167[0] = v168;
      v167[1] = (void *)0x100000000;
      do
      {
        if ((v32 & 1) != 0)
        {
          v71 = (v32 >> 1) & (1 << v68) & 0x55;
          v72 = (v32 >> 1) & (1 << (v68 + 1)) & 0xAALL;
        }
        else
        {
          v70 = **(_QWORD **)v32;
          v71 = v70 & (1 << v68);
          v72 = v70 & (1 << (v68 + 1));
        }
        if ((v71 != 0) != (v72 != 0))
        {
          if (!LODWORD(v167[1]) || *((_DWORD *)v167[0] + 8 * LODWORD(v167[1]) - 6) == 2)
          {
            if (LODWORD(v167[1]) >= HIDWORD(v167[1]))
            {
              sub_1C6358E4C((uint64_t)v167);
            }
            else
            {
              v73 = (char *)v167[0] + 32 * LODWORD(v167[1]);
              *v73 = v73 + 2;
              v73[1] = 0x200000000;
              ++LODWORD(v167[1]);
            }
          }
          v74 = (v32 >> 1) & 0x55;
          if (v159)
            v74 = *(_QWORD *)(*(_QWORD *)v32 + 8 * (v69 >> 5));
          v160 = ((v74 >> v68) & 1) == 0;
          sub_1C61DFF7C((uint64_t)v167[0] + 32 * LODWORD(v167[1]) - 32, v69, (unsigned int *)&v160);
        }
        ++v69;
        v68 += 2;
      }
      while (v69 != 4);
      v75 = v167[1];
      v76 = (unsigned int *)v167[0];
      if (LODWORD(v167[1]))
      {
        if (*((_DWORD *)v167[0] + 2) < 2u)
          goto LABEL_100;
        v77 = *(unsigned int *)(a2 + 8);
        if (!(_DWORD)v77)
          goto LABEL_188;
        v78 = *(int **)a2;
        v79 = *(_QWORD *)a2 + 4 * v77;
        do
        {
          v80 = *v78;
          if (*v78 != -1 && LODWORD(v167[1]))
          {
            v81 = *((_DWORD *)a1 + 6);
            v82 = (int **)v76;
            v83 = v80 / v81;
            while (1)
            {
              v84 = **v82;
              if (v84 == v83)
              {
                v85 = v80 / v81;
                goto LABEL_89;
              }
              if ((*v82)[2 * *((unsigned int *)v82 + 2) - 2] == v83)
                break;
              v82 += 4;
              if (v82 == (int **)&v76[8 * LODWORD(v167[1])])
                goto LABEL_93;
            }
            v85 = **v82;
LABEL_89:
            v86 = v80 % v81 % (v81 >> 1);
            if (v84 == v83)
              v87 = 0;
            else
              v87 = v81 >> 1;
            *v78 = v87 + v85 * v81 + v86;
          }
LABEL_93:
          ++v78;
        }
        while (v78 != (int *)v79);
        v75 = v167[1];
        if (LODWORD(v167[1]))
        {
LABEL_188:
          v88 = &v76[8 * v75];
          do
          {
            v89 = v12[1];
            v90 = *(_QWORD *)(v89 + 832);
            if (v90)
              LOWORD(v90) = *(_WORD *)(v90 + 8);
            v91 = *(unsigned int **)v76;
            v92 = (unsigned int *)(*a1 + 16 * **(unsigned int **)v76);
            v93 = *(_QWORD *)(*(_QWORD *)v92 + 32);
            v94 = *(_QWORD *)(*(_QWORD *)v92 + 40) + 16 * v92[2];
            v95 = *(llvm **)v94;
            v96 = *(_QWORD *)(v94 + 8);
            v97 = v93 + 40 * *(unsigned int *)(*(_QWORD *)v76 + 4);
            v98 = *(_QWORD *)v76 + 8 * v76[2];
            v99 = *(_QWORD *)(*(_QWORD *)(*a1 + 16 * *(unsigned int *)(v98 - 8)) + 32)
                + 40 * *(unsigned int *)(v98 - 4);
            v100 = sub_1C5D56C70(v89, 149, (const llvm::APInt *)a1[4], v95, v96, *(_QWORD *)v97, *(_QWORD *)(v97 + 8), a8, *(_QWORD *)v99, *(_QWORD *)(v99 + 8), v90);
            v101 = *a1 + 16 * *v91;
            *(_QWORD *)v101 = v100;
            *(_DWORD *)(v101 + 8) = v102;
            v76 += 8;
          }
          while (v76 != v88);
          v76 = (unsigned int *)v167[0];
          v75 = v167[1];
          if (LODWORD(v167[1]))
          {
LABEL_100:
            v103 = 8 * v75;
            do
            {
              v104 = *(unsigned int **)&v76[v103 - 8];
              if (&v76[v103 - 4] != v104)
                free(v104);
              v103 -= 8;
            }
            while (v103 * 4);
            v76 = (unsigned int *)v167[0];
          }
        }
      }
      if (v76 != (unsigned int *)v168)
        free(v76);
    }
  }
  v105 = 0;
  v106 = 0;
  do
  {
    v107 = *a1;
    v108 = *(_QWORD *)(*a1 + 16 * v105);
    if (!v108
      || *(_WORD *)(v108 + 24) != 153
      || (v109 = *(_QWORD *)(v108 + 32),
          v110 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v109 + 40) + 16 * *(unsigned int *)(v109 + 8)),
          v111 = *v110,
          v112 = (unsigned __int8 *)a1[1],
          v111 != *v112)
      || ((v113 = *((_QWORD *)v112 + 1), v114 = *((_QWORD *)v110 + 1), !v111) ? (v115 = v114 == v113) : (v115 = 1), !v115))
    {
LABEL_157:
      v139 = v106;
      goto LABEL_158;
    }
    v116 = *(_DWORD *)(v107 + 16 * v105 + 8);
    v117 = *(_QWORD *)(v108 + 48);
    if (v117)
    {
      v118 = 1;
      v119 = *(_QWORD *)(v108 + 48);
      do
      {
        if (*(_DWORD *)(v119 + 8) == v116)
        {
          if (!v118)
            goto LABEL_123;
          --v118;
        }
        v119 = *(_QWORD *)(v119 + 32);
      }
      while (v119);
      if (!v118)
      {
LABEL_124:
        if (!v117)
          goto LABEL_134;
        goto LABEL_125;
      }
    }
LABEL_123:
    if (*(_WORD *)(*(_QWORD *)(v109 + 40) + 24) != 51)
      goto LABEL_124;
    if (!sub_1C636FD00(*(_QWORD *)(v108 + 80), **(const char ***)(v108 + 40), *(_QWORD *)(*(_QWORD *)(v108 + 40) + 8)))
    {
      v127 = 0;
      v121 = *(_QWORD *)(v108 + 32);
      v107 = *a1;
      goto LABEL_176;
    }
    v107 = *a1;
    v122 = *a1 + 16 * v105;
    v123 = *(_QWORD *)v122;
    v116 = *(_DWORD *)(v122 + 8);
    v117 = *(_QWORD *)(v123 + 48);
    if (!v117)
    {
LABEL_134:
      v121 = *(_QWORD *)(v108 + 32);
LABEL_135:
      if (*(_WORD *)(*(_QWORD *)(v121 + 40) + 24) != 51)
      {
        v124 = *(unsigned int *)(a2 + 8);
        if ((_DWORD)v124)
        {
          v125 = *(int **)a2;
          v126 = 4 * v124;
          v127 = -1;
          do
          {
            v128 = *v125;
            if (*v125 != -1)
            {
              v129 = *((_DWORD *)a1 + 6);
              if (v105 == v128 / v129)
              {
                v130 = *(_DWORD *)(*(_QWORD *)(v108 + 80) + 4 * (v128 % v129));
                if (v130 == -1)
                {
                  *v125 = -1;
                }
                else
                {
                  v131 = v130 / v129;
                  if (v127 == -1)
                  {
                    v127 = v131;
                  }
                  else if (v127 != v131)
                  {
                    goto LABEL_148;
                  }
                }
              }
            }
            ++v125;
            v126 -= 4;
          }
          while (v126);
          if ((v127 & 0x80000000) == 0)
            goto LABEL_176;
        }
      }
      goto LABEL_148;
    }
LABEL_125:
    v120 = 1;
    do
    {
      if (*(_DWORD *)(v117 + 8) == v116)
      {
        if (!v120)
          goto LABEL_134;
        --v120;
      }
      v117 = *(_QWORD *)(v117 + 32);
    }
    while (v117);
    v121 = *(_QWORD *)(v108 + 32);
    if (v120)
      goto LABEL_135;
LABEL_148:
    v132 = 0;
    v133 = *(int **)a2;
    v134 = 1;
    while (1)
    {
      v135 = v134;
      v136 = (_DWORD *)(v121 + 40 * v132);
      if (*(_WORD *)(*(_QWORD *)v136 + 24) != 51)
        break;
LABEL_156:
      v134 = 0;
      v132 = 1;
      if ((v135 & 1) == 0)
        goto LABEL_157;
    }
    v137 = 0;
    v138 = (_DWORD *)(v107 + 8);
    while (*((_QWORD *)v138 - 1) != *(_QWORD *)v136 || *v138 != v136[2])
    {
      ++v137;
      v138 += 4;
      if (v137 == 4)
        goto LABEL_156;
    }
    v142 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v142)
    {
      v143 = 4 * v142;
      while (1)
      {
        v144 = *v133;
        if (*v133 == -1)
          goto LABEL_174;
        v145 = *((_DWORD *)a1 + 6);
        if (v105 != v144 / v145)
          goto LABEL_174;
        v146 = *(_DWORD *)(*(_QWORD *)(v108 + 80) + 4 * (v144 % v145));
        if (v146 == -1)
          break;
        if (v132 == v146 / v145)
        {
          v147 = v146 % v145 + v145 * v137;
LABEL_173:
          *v133 = v147;
        }
LABEL_174:
        ++v133;
        v143 -= 4;
        if (!v143)
          goto LABEL_175;
      }
      v147 = -1;
      goto LABEL_173;
    }
LABEL_175:
    v127 = v132 ^ 1;
LABEL_176:
    v148 = (uint64_t *)(v121 + 40 * v127);
    v149 = v107 + 16 * v105;
    v150 = *v148;
    *(_DWORD *)(v149 + 8) = *((_DWORD *)v148 + 2);
    *(_QWORD *)v149 = v150;
    v151 = *(unsigned int *)(a2 + 8);
    if ((_DWORD)v151)
    {
      v152 = *(int **)a2;
      v153 = 4 * v151;
      do
      {
        v154 = *v152;
        if (*v152 != -1)
        {
          v155 = *((_DWORD *)a1 + 6);
          v156 = v154 / v155;
          if (v105 == v156)
          {
            v157 = *(_DWORD *)(*(_QWORD *)(v108 + 80) + 4 * (v154 % v155));
            if (v157 / v155 == v127)
              *v152 = v157 % v155 + v156 * v155;
          }
        }
        ++v152;
        v139 = 1;
        v153 -= 4;
      }
      while (v153);
    }
    else
    {
      v139 = 1;
    }
LABEL_158:
    v140 = v105 == 3;
    v141 = v105 != 3;
    if (v105 == 3)
      v105 = 0;
    else
      ++v105;
    v106 = v141 & v139;
  }
  while (!v140 || (v139 & 1) != 0);
  sub_1C4914448((void ***)&v161);
  return sub_1C6358F88((uint64_t)v162);
}

_QWORD *sub_1C5CF8154(char **a1, uint64_t a2, BOOL a3)
{
  uint64_t v5;
  char *v6;
  char *v7;
  _QWORD *v8;
  int v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  _QWORD v30[2];
  int v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD v35[2];
  int v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void *v40;
  unsigned int v41;

  v5 = 0;
  v35[0] = 0;
  v35[1] = 0;
  v36 = 0;
  v38 = 0;
  v39 = 0;
  v37 = 0;
  v30[0] = 0;
  v30[1] = 0;
  v31 = 0;
  v33 = 0;
  v34 = 0;
  v32 = 0;
  do
  {
    v6 = *a1;
    v41 = 1;
    v40 = 0;
    if (!*(_DWORD *)&v6[v5 + 8])
    {
      if ((sub_1C5D3CF08(*(_QWORD *)&v6[v5], &v40, a3) & 1) != 0)
        v9 = 1;
      else
        v9 = sub_1C6364BE0(*(_QWORD *)&v6[v5]);
      if (v41 >= 0x41 && v40)
      {
        MEMORY[0x1CAA32F9C](v40, 0x1000C8000313F17);
        if ((v9 & 1) != 0)
          goto LABEL_12;
      }
      else if (v9)
      {
LABEL_12:
        v7 = &(*a1)[v5];
        v8 = v30;
        goto LABEL_13;
      }
    }
    v7 = &(*a1)[v5];
    if (*(_WORD *)(*(_QWORD *)v7 + 24) == 51)
      goto LABEL_14;
    v8 = v35;
LABEL_13:
    sub_1C5D02AA4(v8, v7);
LABEL_14:
    v5 += 16;
  }
  while (v5 != 64);
  if (v38 - v37 == 64)
    goto LABEL_49;
  sub_1C63591D4((unsigned int *)v35);
  v10 = v37;
  v11 = v38;
  v37 = 0;
  v38 = 0;
  v39 = 0;
  sub_1C63591D4((unsigned int *)v30);
  v13 = v32;
  v12 = v33;
  v14 = v33 - v32;
  v32 = 0;
  v33 = 0;
  v34 = 0;
  v15 = *(unsigned int *)(a2 + 8);
  if ((_DWORD)v15)
  {
    v16 = *(int **)a2;
    v17 = *(_QWORD *)a2 + 4 * v15;
    do
    {
      v18 = *v16;
      if (*v16 != -1)
      {
        v19 = *((_DWORD *)a1 + 4);
        v20 = v18 / v19;
        v21 = *a1;
        v22 = *(_QWORD *)&(*a1)[16 * v20];
        if (*(_WORD *)(v22 + 24) == 51)
        {
          v23 = -1;
        }
        else
        {
          if (v13 == v12)
          {
            v24 = v13;
          }
          else
          {
            v24 = v13;
            v25 = v13;
            while (*(_QWORD *)v25 != v22 || *((_DWORD *)v25 + 2) != *(_DWORD *)&v21[16 * v20 + 8])
            {
              v25 += 16;
              v24 += 16;
              if (v25 == v12)
              {
                v24 = v12;
                break;
              }
            }
          }
          if (v24 == v12)
          {
            if (v10 == v11)
            {
              v28 = v10;
            }
            else
            {
              v27 = &v21[16 * v20 + 8];
              v28 = v10;
              while (*(_QWORD *)v28 != v22 || *((_DWORD *)v28 + 2) != *(_DWORD *)v27)
              {
                v28 += 16;
                if (v28 == v11)
                {
                  v28 = v11;
                  break;
                }
              }
            }
            v26 = (v14 >> 4) + ((unint64_t)(v28 - v10) >> 4);
          }
          else
          {
            v26 = (unint64_t)(v24 - v13) >> 4;
          }
          v23 = v18 - v20 * v19 + v19 * v26;
        }
        *v16 = v23;
      }
      ++v16;
    }
    while (v16 != (int *)v17);
  }
  if (v12 != v13)
    memmove(*a1, v13, v14 - 4);
  if (v11 == v10)
  {
    if (!v13)
      goto LABEL_47;
LABEL_51:
    operator delete(v13);
    if (!v10)
      goto LABEL_49;
LABEL_48:
    operator delete(v10);
    goto LABEL_49;
  }
  memmove(&(*a1)[v14 & 0xFFFFFFFF0], v10, v11 - v10 - 4);
  if (v13)
    goto LABEL_51;
LABEL_47:
  if (v10)
    goto LABEL_48;
LABEL_49:
  sub_1C6176BF8(v30);
  return sub_1C6176BF8(v35);
}

uint64_t *sub_1C5CF8438(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  llvm *v7;
  uint64_t v8;
  unint64_t v9;
  unsigned __int8 *v10;
  int v11;
  uint64_t *v12;
  unsigned __int8 *v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unsigned __int8 *v32;
  int v33;

  v5 = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v7 = *(llvm **)v4;
  v6 = *(_QWORD *)(v4 + 8);
  v8 = *(_QWORD *)(v5 + 40);
  v9 = *(_QWORD *)(v5 + 48);
  v10 = *(unsigned __int8 **)(a2 + 64);
  v32 = v10;
  if (v10)
    llvm::MetadataTracking::track((uint64_t)&v32, v10, 2);
  v33 = *(_DWORD *)(a2 + 60);
  v30 = 0;
  LODWORD(v31) = 0;
  v28 = 0;
  LODWORD(v29) = 0;
  if ((_BYTE)v7)
    v11 = v7 - 120 < 0x33;
  else
    v11 = *(unsigned __int8 *)(v6 + 8) == 19;
  v12 = *(uint64_t **)(a2 + 32);
  v13 = (unsigned __int8 *)(*(_QWORD *)(*v12 + 40) + 16 * *((unsigned int *)v12 + 2));
  if (*v13)
    v14 = *v13 - 120 < 0x33;
  else
    v14 = *(unsigned __int8 *)(*((_QWORD *)v13 + 1) + 8) == 19;
  if (v11 != v14)
    llvm::report_fatal_error((llvm *)"Extracting a fixed-length vector from an illegal scalable vector is not yet supported", (const char *)1);
  sub_1C6347ABC(a1, *v12, v12[1], (uint64_t)&v30, (uint64_t)&v28);
  v15 = v30;
  v27 = *(_OWORD *)(*(_QWORD *)(v30 + 40) + 16 * v31);
  v17 = sub_1C52B71D4((unsigned __int8 *)&v27);
  v18 = *(_QWORD *)(v8 + 80);
  v19 = (_QWORD *)(v18 + 24);
  if (*(_DWORD *)(v18 + 32) >= 0x41u)
    v19 = (_QWORD *)*v19;
  v20 = (_QWORD *)*v19;
  v21 = *(_QWORD *)(a1 + 8);
  if ((unint64_t)v20 >= v17)
  {
    v15 = v28;
    v22 = v29;
    v8 = sub_1C6366C9C(v21, (uint64_t)v20 - v17, (uint64_t)&v32, 0);
    v9 = v26;
  }
  else
  {
    v22 = v31;
  }
  v23 = *(_QWORD *)(v21 + 832);
  if (v23)
    LOWORD(v23) = *(_WORD *)(v23 + 8);
  v24 = sub_1C5D56C70(v21, 151, (const llvm::APInt *)&v32, v7, v6, v15, v22, v16, v8, v9, v23);
  if (v32)
    llvm::MetadataTracking::untrack((uint64_t)&v32, v32);
  return v24;
}

uint64_t *sub_1C5CF8600(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  llvm *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned __int8 *v41;
  int v42;

  v5 = *(uint64_t **)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 40);
  v7 = *(llvm **)v4;
  v6 = *(_QWORD *)(v4 + 8);
  v8 = *v5;
  v9 = v5[1];
  v10 = v5[5];
  v11 = v5[6];
  v12 = v5[10];
  v13 = v5[11];
  v14 = *(unsigned __int8 **)(a2 + 64);
  v41 = v14;
  if (v14)
    llvm::MetadataTracking::track((uint64_t)&v41, v14, 2);
  v42 = *(_DWORD *)(a2 + 60);
  v39 = 0;
  LODWORD(v40) = 0;
  v37 = 0;
  LODWORD(v38) = 0;
  sub_1C6347ABC(a1, v10, v11, (uint64_t)&v39, (uint64_t)&v37);
  v15 = *(_QWORD *)(v12 + 80);
  v16 = (_QWORD *)(v15 + 24);
  if (*(_DWORD *)(v15 + 32) >= 0x41u)
    v16 = (_QWORD *)*v16;
  v17 = (_QWORD *)*v16;
  v18 = v39;
  v36 = *(_OWORD *)(*(_QWORD *)(v39 + 40) + 16 * v40);
  v20 = sub_1C52B71D4((unsigned __int8 *)&v36);
  v21 = *(_QWORD *)(a1 + 8);
  v22 = *(_QWORD *)(v21 + 832);
  if (v22)
    LOWORD(v22) = *(_WORD *)(v22 + 8);
  v23 = sub_1C5D58E08(v21, (const char *)0x96, (const llvm::APInt *)&v41, v7, v6, v8, v9, v19, v18, v40, v12, v13, SHIDWORD(v13), v22);
  v25 = v24;
  v26 = *(_QWORD *)(a1 + 8);
  v27 = (uint64_t)v17 + v20;
  v28 = v37;
  v29 = v38;
  v30 = sub_1C6366C9C(v26, v27, (uint64_t)&v41, 0);
  v33 = *(_QWORD *)(v26 + 832);
  if (v33)
    LOWORD(v33) = *(_WORD *)(v33 + 8);
  v34 = sub_1C5D58E08(v26, (const char *)0x96, (const llvm::APInt *)&v41, v7, v6, (uint64_t)v23, v25, v32, v28, v29, v30, v31, SHIDWORD(v31), v33);
  if (v41)
    llvm::MetadataTracking::untrack((uint64_t)&v41, v41);
  return v34;
}

uint64_t *sub_1C5CF8798(uint64_t *a1, uint64_t a2)
{
  uint64_t **v4;
  unint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  llvm **v9;
  uint64_t v10;
  llvm *v11;
  int v12;
  BOOL v14;
  uint64_t *v15;
  uint64_t v17;
  unint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  unsigned int v21;
  unsigned __int8 *v22;
  unsigned __int8 *v23;
  unint64_t EVT;
  uint64_t v25;
  BOOL v26;
  uint64_t v27;
  unint64_t v28;
  unsigned __int8 v29;
  uint64_t v30;
  llvm::LLVMContext *v31;
  llvm::Type *v32;
  uint64_t v33;
  llvm *v34;
  __int16 v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  unsigned __int8 v39;
  uint64_t v40;
  unint64_t v41;
  int v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t *FixedStack;
  uint64_t v47;
  int v48;
  uint64_t v49;
  _QWORD *v50;
  int v51;
  int v52;
  uint64_t *v53;
  unsigned int v54;
  unint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  int v61;
  unint64_t v62;
  int v63;
  unint64_t ExtendedSizeInBits;
  int v65;
  uint64_t v66;
  int v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unsigned __int8 *v72;
  int v73;
  uint64_t v74;
  unsigned __int8 *v75;
  uint64_t v76;
  _QWORD *v77;
  int v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  int v89;
  char v90;
  __int128 v91;
  int v92;
  char v93;
  _QWORD v94[2];
  __int128 v95;
  __int128 v96;
  _QWORD v97[2];
  int v98;
  char v99;
  __int128 v100;
  unsigned __int8 *v101;
  uint64_t v102;
  llvm *v103;
  uint64_t v104;

  v4 = *(uint64_t ***)(a2 + 32);
  v6 = *v4;
  v5 = (unint64_t)v4[1];
  v8 = (uint64_t)v4[5];
  v7 = (uint64_t)v4[6];
  v9 = (llvm **)((*v4)[5] + 16 * v5);
  v11 = *v9;
  v10 = (uint64_t)v9[1];
  v103 = *v9;
  v104 = v10;
  v12 = *(unsigned __int16 *)(v8 + 24);
  if (v12 != 35 && v12 != 11)
  {
LABEL_5:
    if (sub_1C5CEE7DC(a1, a2, **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8), 1))
      return 0;
    v23 = *(unsigned __int8 **)(a2 + 64);
    v101 = v23;
    if (v23)
      llvm::MetadataTracking::track((uint64_t)&v101, v23, 2);
    LODWORD(v102) = *(_DWORD *)(a2 + 60);
    if ((_BYTE)v11)
    {
      v29 = sub_1C47F37A0((unsigned __int8 *)&v103);
      v28 = 0;
      v27 = 0;
    }
    else
    {
      EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v10 + 24), 0, v14);
      v27 = v25;
      v28 = EVT & 0xFFFFFFFFFFFFFF00;
      v29 = EVT;
    }
    v30 = v28 | v29;
    *(_QWORD *)&v100 = v30;
    *((_QWORD *)&v100 + 1) = v27;
    if ((unint64_t)sub_1C6131328((unsigned __int8 *)&v103, v25, v26) > 7)
    {
      v87 = v27;
    }
    else
    {
      LOBYTE(v100) = 3;
      *((_QWORD *)&v100 + 1) = 0;
      v31 = *(llvm::LLVMContext **)(a1[1] + 56);
      v30 = v100;
      v32 = (llvm::Type *)sub_1C52B71D4((unsigned __int8 *)&v103);
      v34 = (llvm *)sub_1C47AC578(v31, v30, 0, v32);
      v35 = 0;
      v103 = v34;
      v104 = v33;
      v36 = a1[1];
      v37 = *(_QWORD *)(v36 + 832);
      if (v37)
        v35 = *(_WORD *)(v37 + 8);
      v6 = sub_1C5D52060(v36, 200, (const llvm::APInt *)&v101, v34, v33, (uint64_t)v6, v5, v35);
      v87 = 0;
      LODWORD(v5) = v38;
      v29 = v30;
    }
    v39 = sub_1C5D44120(a1[1], (uint64_t)v103, v104);
    v40 = a1[1];
    v41 = sub_1C47C1C70((unsigned __int8 *)&v103);
    v86 = v39;
    v43 = sub_1C636847C(v40, v41, v42, v39);
    v45 = v44;
    FixedStack = llvm::PseudoSourceValueManager::getFixedStack(*(uint64_t ***)(*(_QWORD *)(a1[1] + 40) + 432), *(_DWORD *)(v43 + 76));
    v47 = (unint64_t)FixedStack | 4;
    if (FixedStack)
      v48 = *((_DWORD *)FixedStack + 3);
    else
      v48 = 0;
    v49 = a1[1];
    v97[0] = v47;
    v97[1] = 0;
    v98 = v48;
    v99 = 0;
    v95 = 0u;
    v96 = 0u;
    v50 = sub_1C636B75C(v49, v49 + 112, 0, (uint64_t)&v101, (uint64_t)v6, v5, v43, v45, (uint64_t)v97, v86, SHIDWORD(v86), 0, (uint64_t)&v95);
    v52 = v51;
    v53 = sub_1C5D9FE70(*a1, a1[1], v43, v45, v103, v104, v8, v7);
    v55 = v45 & 0xFFFFFFFF00000000 | v54;
    v56 = *(uint64_t **)(a2 + 40);
    v58 = *v56;
    v57 = v56[1];
    v94[0] = v58;
    v94[1] = v57;
    if (v29 == v58)
    {
      v59 = v87;
      if (v29 || v57 == v87)
        goto LABEL_49;
      *(_QWORD *)&v95 = v30;
      *((_QWORD *)&v95 + 1) = v87;
    }
    else
    {
      *(_QWORD *)&v95 = v30;
      *((_QWORD *)&v95 + 1) = v87;
      if ((_BYTE)v58)
      {
        v60 = sub_1C47A8C74((unsigned __int8 *)v94);
LABEL_35:
        v62 = v60;
        v63 = v61;
        if ((_BYTE)v30)
          ExtendedSizeInBits = sub_1C47A8C74((unsigned __int8 *)&v95);
        else
          ExtendedSizeInBits = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v95);
        if (v63 == 1 && v65 != 1)
        {
          v59 = v87;
        }
        else
        {
          v59 = v87;
          if (v62 < ExtendedSizeInBits)
          {
            v66 = a1[1];
            v67 = *(_DWORD *)(*(_QWORD *)(**(_QWORD **)(v66 + 40) + 40) + 276);
            v91 = 0uLL;
            v92 = v67;
            v93 = 0;
            v95 = 0u;
            v96 = 0u;
            v68 = sub_1C63681B0(v66, v30, v87, (uint64_t)&v101, (uint64_t)v50, v52, (uint64_t)v53, v55, &v91, 0, 0, 0, (uint64_t)&v95, 0);
            v70 = sub_1C6366544(a1[1], (uint64_t)v68, v69, (uint64_t)&v101, **(_QWORD **)(a2 + 40), *(_QWORD *)(*(_QWORD *)(a2 + 40) + 8));
LABEL_53:
            v15 = (uint64_t *)v70;
            if (v101)
              llvm::MetadataTracking::untrack((uint64_t)&v101, v101);
            return v15;
          }
        }
LABEL_49:
        v79 = a1[1];
        v80 = *(uint64_t **)(a2 + 40);
        v81 = *v80;
        v82 = v80[1];
        LODWORD(v80) = *(_DWORD *)(*(_QWORD *)(**(_QWORD **)(v79 + 40) + 40) + 276);
        v88 = 0uLL;
        v89 = (int)v80;
        v90 = 0;
        if (v29)
          v83 = sub_1C47A8C74((unsigned __int8 *)&v100);
        else
          v83 = (unint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)&v100);
        v95 = 0u;
        v96 = 0u;
        v85 = (63 - __clz(((1 << v86) | (v83 >> 3)) & -(uint64_t)((1 << v86) | (v83 >> 3)))) | 0x100;
        v70 = (uint64_t)sub_1C636B4C8(v79, 1, (uint64_t)&v101, v81, v82, (uint64_t)v50, v52, v84, (uint64_t)v53, v55, &v88, v30, v59, v85, SHIDWORD(v85), 0, (uint64_t)&v95);
        goto LABEL_53;
      }
    }
    v60 = (uint64_t)llvm::EVT::getExtendedSizeInBits((llvm::EVT *)v94);
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v8 + 80);
  v18 = (unint64_t *)(v17 + 24);
  if (*(_DWORD *)(v17 + 32) >= 0x41u)
    v18 = (unint64_t *)*v18;
  v19 = *v18;
  *(_QWORD *)&v95 = 0;
  DWORD2(v95) = 0;
  v101 = 0;
  LODWORD(v102) = 0;
  sub_1C6347ABC((uint64_t)a1, (uint64_t)v6, v5, (uint64_t)&v95, (uint64_t)&v101);
  v20 = v95;
  v100 = *(_OWORD *)(*(_QWORD *)(v95 + 40) + 16 * DWORD2(v95));
  v21 = sub_1C52B71D4((unsigned __int8 *)&v100);
  if (v19 < v21)
    return sub_1C636DCBC(a1[1], a2, v20, SDWORD2(v95), v8, v7);
  v22 = (unsigned __int8 *)(v6[5] + 16 * v5);
  if (*v22)
  {
    if (*v22 - 120 < 0x33)
      goto LABEL_5;
  }
  else if (*(_BYTE *)(*((_QWORD *)v22 + 1) + 8) == 19)
  {
    goto LABEL_5;
  }
  v71 = a1[1];
  v72 = v101;
  v73 = v102;
  v74 = v19 - v21;
  v75 = *(unsigned __int8 **)(a2 + 64);
  *(_QWORD *)&v100 = v75;
  if (v75)
    llvm::MetadataTracking::track((uint64_t)&v100, v75, 2);
  DWORD2(v100) = *(_DWORD *)(a2 + 60);
  v76 = *(_QWORD *)(v8 + 40) + 16 * v7;
  v77 = sub_1C6366AB4(v71, v74, (const llvm::APInt *)&v100, *(llvm **)v76, *(_QWORD *)(v76 + 8), 0, 0);
  v15 = sub_1C636DCBC(v71, a2, (uint64_t)v72, v73, (uint64_t)v77, v78);
  if ((_QWORD)v100)
    llvm::MetadataTracking::untrack((uint64_t)&v100, (unsigned __int8 *)v100);
  return v15;
}

uint64_t *sub_1C5CF8D4C(uint64_t a1, uint64_t a2, BOOL a3)
{
  unsigned __int8 *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t EVT;
  const char *v10;
  unint64_t v11;
  uint64_t v12;
  llvm *v13;
  unsigned int *v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  const char *v26;
  uint64_t v27;
  uint64_t **v28;
  uint64_t v29;
  uint64_t v30;
  llvm *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unsigned int *v37;
  __int128 v38;
  unsigned __int8 *v39;
  int v40;
  void *v41;
  uint64_t v42;
  _QWORD v43[66];

  v43[64] = *MEMORY[0x1E0C80C00];
  v5 = *(unsigned __int8 **)(a2 + 64);
  v39 = v5;
  if (v5)
    llvm::MetadataTracking::track((uint64_t)&v39, v5, 2);
  v40 = *(_DWORD *)(a2 + 60);
  v41 = v43;
  v42 = 0x2000000000;
  v6 = *(uint64_t **)(a2 + 40);
  v8 = *v6;
  v7 = v6[1];
  *(_QWORD *)&v38 = v8;
  *((_QWORD *)&v38 + 1) = v7;
  if ((_BYTE)v8)
  {
    LOBYTE(EVT) = sub_1C47F37A0((unsigned __int8 *)&v38);
    v11 = 0;
    v12 = 0;
  }
  else
  {
    EVT = llvm::EVT::getEVT(*(llvm::EVT **)(v7 + 24), 0, a3);
    v12 = (uint64_t)v10;
    v11 = EVT & 0xFFFFFFFFFFFFFF00;
  }
  if (*(_WORD *)(a2 + 56))
  {
    v13 = (llvm *)(v11 | EVT);
    v14 = *(unsigned int **)(a2 + 32);
    v37 = &v14[10 * *(unsigned __int16 *)(a2 + 56)];
    do
    {
      v38 = *(_OWORD *)(*(_QWORD *)(*(_QWORD *)v14 + 40) + 16 * v14[2]);
      v15 = sub_1C612FE00((llvm::EVT *)&v38, v10);
      if (v15)
      {
        v16 = 0;
        v17 = v15;
        do
        {
          v18 = *(_QWORD *)(a1 + 8);
          v19 = *(_QWORD *)v14;
          v20 = *((_QWORD *)v14 + 1);
          v21 = sub_1C6366C9C(v18, v16, (uint64_t)&v39, 0);
          v24 = *(_QWORD *)(v18 + 832);
          if (v24)
            LOWORD(v24) = *(_WORD *)(v24 + 8);
          v25 = sub_1C5D56C70(v18, 148, (const llvm::APInt *)&v39, v13, v12, v19, v20, v23, v21, v22, v24);
          v26 = v10;
          v27 = v42;
          if (v42 >= (unint64_t)HIDWORD(v42))
          {
            llvm::SmallVectorBase<unsigned int>::grow_pod((uint64_t)&v41, (uint64_t)v43, v42 + 1, 16);
            v27 = v42;
          }
          v28 = (uint64_t **)((char *)v41 + 16 * v27);
          *v28 = v25;
          v28[1] = (uint64_t *)v26;
          LODWORD(v42) = v42 + 1;
          ++v16;
        }
        while (v17 != v16);
      }
      v14 += 10;
    }
    while (v14 != v37);
  }
  v29 = *(_QWORD *)(a1 + 8);
  v30 = *(_QWORD *)(a2 + 40);
  v31 = *(llvm **)v30;
  v32 = *(_QWORD *)(v30 + 8);
  v33 = *(_QWORD *)(v29 + 832);
  if (v33)
    v34 = *(unsigned __int16 *)(v33 + 8);
  else
    v34 = 0;
  v35 = sub_1C636D0C8(v29, (const char *)0x92, (const llvm::APInt *)&v39, v31, v32, (uint64_t *)v41, v42, v34);
  if (v41 != v43)
    free(v41);
  if (v39)
    llvm::MetadataTracking::untrack((uint64_t)&v39, v39);
  return v35;
}

uint64_t *sub_1C5CF8FA0(unint64_t *a1, uint64_t a2)
{
  _BOOL4 v4;
  __int128 *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  unsigned int v12;
  _BOOL4 v13;
  _BOOL4 v14;
  unsigned int v15;
  uint64_t v16;
  BOOL v17;
  unsigned int v18;
  BOOL v19;
  unsigned __int8 *v20;
  unint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  llvm::LLVMContext *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  llvm *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  const char *v37;
  uint64_t v38;
  int v39;
  uint64_t *v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  const char *v44;
  uint64_t v45;
  int v46;
  uint64_t v47;
  uint64_t *v48;
  unsigned int v49;
  unsigned int v50;
  __int16 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  int v55;
  uint64_t v56;
  uint64_t v57;
  __int16 v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  __int16 v62;
  unsigned int v63;
  uint64_t v64;
  llvm *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  __int128 v73;
  uint64_t v74;
  __int16 v75;
  uint64_t v77;
  unsigned __int8 v78;
  uint64_t v79;
  __n128 v80;
  unsigned __int8 v81;
  _QWORD *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t ExtendedIntegerVT;
  uint64_t v87;
  int v88;
  _BOOL8 v89;
  _BOOL4 v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  unint64_t v94;
  __int128 v95;
  unsigned __int8 *v96;
  int v97;
  __int128 v98;
  __int128 v99;
  _BOOL8 v100;
  uint64_t v101;
  uint64_t *v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  __int128 v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;

  v109 = *MEMORY[0x1E0C80C00];
  v4 = sub_1C6141934(a2);
  v5 = *(__int128 **)(a2 + 40);
  v6 = (uint64_t *)(*(_QWORD *)(a2 + 32) + 40 * v4);
  v7 = *v6;
  v8 = v6[1];
  v99 = *(_OWORD *)*(_QWORD *)(*v6 + 40);
  v98 = *v5;
  v11 = sub_1C52B71D4((unsigned __int8 *)&v98);
  if ((_BYTE)v98)
  {
    v13 = (v98 + 104) < 0x13u;
    if ((v98 - 75) < 0x2Du)
      v13 = 1;
    v14 = v98 - 8 < 7 || v13;
  }
  else
  {
    if ((*(_DWORD *)(*((_QWORD *)&v98 + 1) + 8) & 0xFE) == 0x12)
      v12 = *(unsigned __int8 *)(**(_QWORD **)(*((_QWORD *)&v98 + 1) + 16) + 8);
    else
      v12 = *(_DWORD *)(*((_QWORD *)&v98 + 1) + 8);
    v14 = v12 < 7;
  }
  v15 = sub_1C6131328((unsigned __int8 *)&v99, v9, v10);
  v18 = sub_1C6131328((unsigned __int8 *)&v98, v16, v17);
  sub_1C636F9DC(a1[1], (_BOOL8 *)&v98, v19, (unint64_t *)&v100);
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v100, v101, (uint64_t)&v100);
  if (!v100 || 2 * v18 >= v15)
    return sub_1C635387C((uint64_t)a1, a2);
  v20 = *(unsigned __int8 **)(a2 + 64);
  v96 = v20;
  if (v20)
    llvm::MetadataTracking::track((uint64_t)&v96, v20, 2);
  v97 = *(_DWORD *)(a2 + 60);
  v95 = v99;
  v22 = *((_QWORD *)&v99 + 1);
  v21 = v99;
  while (1)
  {
    llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v21, v22, (uint64_t)&v100);
    if (v100 != 6)
      break;
    v21 = sub_1C52B7018((uint64_t)&v95, *(llvm::LLVMContext **)(a1[1] + 56), v23);
    v22 = v24;
    *(_QWORD *)&v95 = v21;
    *((_QWORD *)&v95 + 1) = v24;
  }
  llvm::TargetLoweringBase::getTypeConversion(*a1, *(llvm::EVT **)(a1[1] + 56), v95, *((uint64_t *)&v95 + 1), (uint64_t)&v100);
  if (v100 == 5)
  {
    v26 = sub_1C635387C((uint64_t)a1, a2);
LABEL_54:
    v25 = v26;
    goto LABEL_55;
  }
  v93 = 0;
  LODWORD(v94) = 0;
  v91 = 0;
  LODWORD(v92) = 0;
  sub_1C6347ABC((uint64_t)a1, v7, v8, (uint64_t)&v93, (uint64_t)&v91);
  v27 = (llvm::LLVMContext *)(v15 >> 1);
  v90 = v14;
  if (v14)
  {
    v28 = 0;
    HIDWORD(v29) = v15 >> 1;
    LODWORD(v29) = (_DWORD)v27 - 16;
    v30 = qword_1C866D0E0[(int)(v29 >> 4)];
    goto LABEL_35;
  }
  if (v15 >> 1 <= 0x1F)
  {
    switch((_DWORD)v27)
    {
      case 1:
        v31 = 0;
        v28 = 0;
        v32 = 2;
        goto LABEL_34;
      case 0x10:
        v31 = 0;
        v28 = 0;
        v32 = 4;
        goto LABEL_34;
      case 8:
        v31 = 0;
        v28 = 0;
        v32 = 3;
        goto LABEL_34;
    }
LABEL_64:
    ExtendedIntegerVT = llvm::EVT::getExtendedIntegerVT(*(llvm::EVT **)(a1[1] + 56), v27);
    v28 = v87;
    v31 = ExtendedIntegerVT & 0xFFFFFFFFFFFFFF00;
    v32 = ExtendedIntegerVT;
    goto LABEL_34;
  }
  if ((_DWORD)v27 != 32)
  {
    if ((_DWORD)v27 == 64)
    {
      v31 = 0;
      v28 = 0;
      v32 = 6;
      goto LABEL_34;
    }
    if ((_DWORD)v27 == 128)
    {
      v31 = 0;
      v28 = 0;
      v32 = 7;
      goto LABEL_34;
    }
    goto LABEL_64;
  }
  v31 = 0;
  v28 = 0;
  v32 = 5;
LABEL_34:
  v30 = v32 | v31;
LABEL_35:
  v33 = (llvm *)sub_1C47AC578(*(llvm::LLVMContext **)(a1[1] + 56), v30, v28, (llvm::Type *)((v11 >> 1) | ((unint64_t)(HIDWORD(v11) == 1) << 32)));
  v35 = v34;
  if (sub_1C6141934(a2))
  {
    v36 = a1[1];
    v37 = (const char *)*(unsigned __int16 *)(a2 + 24);
    v100 = (_BOOL8)v33;
    v101 = v35;
    LOBYTE(v102) = 1;
    v103 = 0;
    v38 = *(_QWORD *)(a2 + 32);
    v39 = *(_DWORD *)(v38 + 8);
    *(_QWORD *)&v106 = *(_QWORD *)v38;
    DWORD2(v106) = v39;
    v107 = v93;
    LODWORD(v108) = v94;
    v40 = sub_1C6366344(v36, v37, (const llvm::APInt *)&v96, (uint64_t *)&v100, 2, (uint64_t *)&v106, 2);
    v42 = v41;
    v43 = a1[1];
    v44 = (const char *)*(unsigned __int16 *)(a2 + 24);
    v100 = (_BOOL8)v33;
    v101 = v35;
    LOBYTE(v102) = 1;
    v103 = 0;
    v45 = *(_QWORD *)(a2 + 32);
    v46 = *(_DWORD *)(v45 + 8);
    *(_QWORD *)&v106 = *(_QWORD *)v45;
    DWORD2(v106) = v46;
    v107 = v91;
    LODWORD(v108) = v92;
    v48 = sub_1C6366344(v43, v44, (const llvm::APInt *)&v96, (uint64_t *)&v100, 2, (uint64_t *)&v106, 2);
    v50 = v49;
    v51 = 0;
    v52 = a1[1];
    v53 = *(_QWORD *)(v52 + 832);
    if (v53)
      v51 = *(_WORD *)(v53 + 8);
    v54 = sub_1C5D56C70(v52, 2, (const llvm::APInt *)&v96, (llvm *)1, 0, (uint64_t)v40, 1uLL, v47, (uint64_t)v48, 1uLL, v51);
    v88 = v55;
    v89 = (_BOOL8)v54;
  }
  else
  {
    v56 = a1[1];
    v57 = *(_QWORD *)(v56 + 832);
    if (v57)
      v58 = *(_WORD *)(v57 + 8);
    else
      v58 = 0;
    v40 = sub_1C5D52060(v56, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v96, v33, v35, v93, v94, v58);
    v42 = v59;
    v60 = a1[1];
    v61 = *(_QWORD *)(v60 + 832);
    if (v61)
      v62 = *(_WORD *)(v61 + 8);
    else
      v62 = 0;
    v48 = sub_1C5D52060(v60, *(unsigned __int16 *)(a2 + 24), (const llvm::APInt *)&v96, v33, v35, v91, v92, v62);
    v50 = v63;
    v88 = 0;
    v89 = 0;
  }
  v65 = (llvm *)sub_1C47AC578(*(llvm::LLVMContext **)(a1[1] + 56), v30, v28, (llvm::Type *)v11);
  v67 = a1[1];
  v68 = *(_QWORD *)(v67 + 832);
  if (v68)
    LOWORD(v68) = *(_WORD *)(v68 + 8);
  v69 = sub_1C5D56C70(v67, 149, (const llvm::APInt *)&v96, v65, v64, (uint64_t)v40, v42, v66, (uint64_t)v48, v50, v68);
  v71 = v70;
  if (!sub_1C6141934(a2))
  {
    v72 = a1[1];
    v73 = v98;
    if (v90)
    {
      v81 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(v72 + 40) + 40) + 272, 0);
      v82 = sub_1C6366AB4(v72, 0, (const llvm::APInt *)&v96, (llvm *)v81, 0, 1, 0);
      v85 = *(_QWORD *)(v72 + 832);
      if (v85)
        LOWORD(v85) = *(_WORD *)(v85 + 8);
      v26 = sub_1C5D56C70(v72, 212, (const llvm::APInt *)&v96, (llvm *)v73, *((uint64_t *)&v73 + 1), (uint64_t)v69, v71, v84, (uint64_t)v82, v83, v85);
    }
    else
    {
      v74 = *(_QWORD *)(v72 + 832);
      if (v74)
        v75 = *(_WORD *)(v74 + 8);
      else
        v75 = 0;
      v26 = sub_1C5D52060(a1[1], 201, (const llvm::APInt *)&v96, (llvm *)v98, *((uint64_t *)&v98 + 1), (uint64_t)v69, v71, v75);
    }
    goto LABEL_54;
  }
  v106 = v98;
  LOBYTE(v107) = 1;
  v108 = 0;
  v100 = v89;
  LODWORD(v101) = v88;
  v102 = v69;
  LODWORD(v103) = v71;
  v77 = a1[1];
  v78 = (*(uint64_t (**)(unint64_t, uint64_t, _QWORD))(*(_QWORD *)*a1 + 32))(*a1, *(_QWORD *)(**(_QWORD **)(v77 + 40) + 40) + 272, 0);
  v104 = sub_1C6366AB4(v77, 0, (const llvm::APInt *)&v96, (llvm *)v78, 0, 1, 0);
  v105 = v79;
  v25 = sub_1C6366344(v77, (const char *)0x88, (const llvm::APInt *)&v96, (uint64_t *)&v106, 2, (uint64_t *)&v100, 3);
  sub_1C5CED824((uint64_t)a1, a2, 1, (uint64_t)v25, 1uLL, v80);
LABEL_55:
  if (v96)
    llvm::MetadataTracking::untrack((uint64_t)&v96, v96);
  return v25;
}

uint64_t *sub_1C5CF9664(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v6;

  v6 = *(_OWORD *)*(_QWORD *)(a2 + 40);
  v4 = sub_1C612FE00((llvm::EVT *)&v6, (const char *)a2);
  return sub_1C5D625F4(a1, a2, v4);
}

_QWORD *sub_1C5CF96B0(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v6;
  __int128 v7;
  char v8;
  unsigned __int8 *v9;
  int v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t *v20;
  int v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  __int128 *v29;
  __int128 v30;
  uint64_t v31;
  unint64_t v32;
  __int128 v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  int v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  int v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  uint64_t v77;
  uint64_t v78;
  unsigned __int8 *v79;
  int v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  _QWORD *v84;
  int v85;
  uint64_t v86;
  int v87;
  uint64_t v88;
  int v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  int v93;
  uint64_t v94;
  int v95;
  uint64_t v96;
  int v97;
  __int128 v98;
  __int128 v99;
  uint64_t v100;
  int v101;
  uint64_t v102;
  int v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  int v107;
  uint64_t v108;
  int v109;
  uint64_t v110;

  v110 = *MEMORY[0x1E0C80C00];
  v83 = *(_OWORD *)*(_QWORD *)(a2 + 32);
  v7 = *(_OWORD *)sub_1C6131AB0(a2);
  v81 = *(_OWORD *)(a2 + 80);
  v82 = v7;
  v8 = *(_BYTE *)(*(_QWORD *)(a2 + 96) + 34);
  v9 = *(unsigned __int8 **)(a2 + 64);
  v79 = v9;
  if (v9)
    llvm::MetadataTracking::track((uint64_t)&v79, v9, 2);
  v80 = *(_DWORD *)(a2 + 60);
  v10 = *(unsigned __int16 *)(a2 + 24);
  if (v10 == 311)
  {
    v11 = *(_QWORD *)(a2 + 32);
    v71 = *(_QWORD *)(v11 + 80);
    LODWORD(v72) = *(_DWORD *)(v11 + 88);
    v73 = *(_QWORD *)(v11 + 160);
    LODWORD(v74) = *(_DWORD *)(v11 + 168);
    v75 = *(_QWORD *)(v11 + 200);
    v76 = *(_DWORD *)(v11 + 208);
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 32);
    v12 = v10 == 371;
    v13 = 200;
    if (v12)
      v13 = 160;
    v14 = v11 + v13;
    v15 = *(_DWORD *)(v14 + 8);
    v71 = *(_QWORD *)v14;
    LODWORD(v72) = v15;
    v16 = 120;
    v17 = 80;
    if (!v12)
      v17 = 120;
    v18 = v11 + v17;
    v19 = *(_DWORD *)(v18 + 8);
    v73 = *(_QWORD *)v18;
    LODWORD(v74) = v19;
    if (!v12)
      v16 = 160;
    v20 = (uint64_t *)(v11 + v16);
    v21 = *((_DWORD *)v20 + 2);
    v75 = *v20;
    v76 = v21;
  }
  v22 = *(_QWORD *)(v11 + 40);
  LODWORD(v78) = *(_DWORD *)(v11 + 48);
  v77 = v22;
  sub_1C636F9DC(*(_QWORD *)(a1 + 8), (_BOOL8 *)&v81, v6, (unint64_t *)&v98);
  v23 = v98;
  v24 = v99;
  v69 = 0;
  v70 = 0;
  v67 = 0;
  v68 = 0;
  v25 = *(_QWORD *)(v77 + 40) + 16 * v78;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v25, *(_QWORD *)(v25 + 8), (uint64_t)&v98);
  if (v98 == 6)
  {
    sub_1C6347ABC(a1, v77, v78, (uint64_t)&v69, (uint64_t)&v67);
  }
  else
  {
    sub_1C63493B4(*(_QWORD *)(a1 + 8), (unsigned int *)&v77, (const llvm::APInt *)&v79, (uint64_t)&v98);
    v69 = v98;
    v70 = DWORD2(v98);
    v67 = v99;
    v68 = DWORD2(v99);
  }
  v65 = 0;
  v66 = 0;
  v63 = 0;
  v64 = 0;
  if (a3 == 1)
  {
    v26 = v71;
    if (*(_WORD *)(v71 + 24) == 193)
    {
      sub_1C634F7C4(a1, v71, (uint64_t)&v65, (uint64_t)&v63);
      goto LABEL_20;
    }
  }
  else
  {
    v26 = v71;
  }
  sub_1C6351C28(&v98, a1, v26, v72, (const llvm::APInt *)&v79);
  v65 = v98;
  v66 = DWORD2(v98);
  v63 = v99;
  v64 = DWORD2(v99);
LABEL_20:
  v61 = 0;
  v62 = 0;
  v59 = 0;
  v60 = 0;
  v27 = *(_QWORD *)(v73 + 40) + 16 * v74;
  llvm::TargetLoweringBase::getTypeConversion(*(_QWORD *)a1, *(llvm::EVT **)(*(_QWORD *)(a1 + 8) + 56), *(_QWORD *)v27, *(_QWORD *)(v27 + 8), (uint64_t)&v98);
  if (v98 == 6)
  {
    sub_1C6347ABC(a1, v73, v74, (uint64_t)&v59, (uint64_t)&v61);
  }
  else
  {
    sub_1C63493B4(*(_QWORD *)(a1 + 8), (unsigned int *)&v73, (const llvm::APInt *)&v79, (uint64_t)&v98);
    v59 = v98;
    v60 = DWORD2(v98);
    v61 = v99;
    v62 = DWORD2(v99);
  }
  v28 = *(_QWORD *)(*(_QWORD *)(a1 + 8) + 40);
  v29 = *(__int128 **)(a2 + 96);
  v57 = *v29;
  v58 = *((_QWORD *)v29 + 2);
  v30 = *(__int128 *)((char *)v29 + 56);
  v98 = *(__int128 *)((char *)v29 + 40);
  v99 = v30;
  v31 = *((_QWORD *)v29 + 9);
  v32 = sub_1C484358C(v28 + 128, 80, 3);
  *(_OWORD *)v32 = v57;
  *(_QWORD *)(v32 + 16) = v58;
  *(_QWORD *)(v32 + 24) = 0;
  v33 = v99;
  *(_OWORD *)(v32 + 40) = v98;
  *(_WORD *)(v32 + 32) = 2;
  *(_BYTE *)(v32 + 34) = v8;
  *(_OWORD *)(v32 + 56) = v33;
  *(_QWORD *)(v32 + 72) = v31;
  *(_WORD *)(v32 + 36) = 1;
  v34 = *(unsigned __int16 *)(a2 + 24);
  if (v34 == 311)
  {
    *(_QWORD *)&v98 = v83;
    DWORD2(v98) = DWORD2(v83);
    *(_QWORD *)&v99 = v69;
    DWORD2(v99) = v70;
    v100 = v65;
    v101 = v66;
    v103 = DWORD2(v82);
    v102 = v82;
    v105 = v60;
    v104 = v59;
    v106 = v75;
    v107 = v76;
    v35 = *(_QWORD *)(a1 + 8);
    v36 = sub_1C636D7B0((llvm *)1, 0);
    v84 = sub_1C5D609EC(v35, v36, 1, (void *)v23, *((uint64_t *)&v23 + 1), (uint64_t)&v79, (uint64_t *)&v98, 6, v32, (*(unsigned __int16 *)(a2 + 26) >> 7) & 7, (*(_WORD *)(a2 + 26) & 0x400) != 0);
    v85 = v37;
    v86 = v67;
    v87 = v68;
    v88 = v63;
    v89 = v64;
    v90 = v82;
    v91 = DWORD2(v82);
    v93 = v62;
    v92 = v61;
    v94 = v75;
    v95 = v76;
    v38 = *(_QWORD *)(a1 + 8);
    v39 = sub_1C636D7B0((llvm *)1, 0);
    v40 = sub_1C5D609EC(v38, v39, 1, (void *)v24, *((uint64_t *)&v24 + 1), (uint64_t)&v79, (uint64_t *)&v84, 6, v32, (*(unsigned __int16 *)(a2 + 26) >> 7) & 7, (*(_WORD *)(a2 + 26) & 0x400) != 0);
  }
  else
  {
    v12 = v34 == 371;
    v41 = 240;
    if (v12)
      v41 = 200;
    v42 = (uint64_t *)(*(_QWORD *)(a2 + 32) + v41);
    v43 = *v42;
    v44 = v42[1];
    v45 = (uint64_t *)(*(_QWORD *)(v77 + 40) + 16 * v78);
    sub_1C5D636A4(*(_QWORD *)(a1 + 8), v43, v44, *v45, v45[1], (const llvm::APInt *)&v79, (uint64_t **)&v98);
    v46 = v98;
    v47 = DWORD2(v98);
    v48 = v99;
    v49 = DWORD2(v99);
    *(_QWORD *)&v98 = v83;
    DWORD2(v98) = DWORD2(v83);
    *(_QWORD *)&v99 = v69;
    DWORD2(v99) = v70;
    v100 = v82;
    v101 = DWORD2(v82);
    v103 = v60;
    v102 = v59;
    v105 = v76;
    v104 = v75;
    v107 = v66;
    v106 = v65;
    v108 = v46;
    v109 = v47;
    v50 = *(_QWORD *)(a1 + 8);
    v51 = sub_1C636D7B0((llvm *)1, 0);
    v84 = sub_1C5D5F96C(v50, v51, 1, v23, *((uint64_t *)&v23 + 1), (uint64_t)&v79, (uint64_t *)&v98, 7, v32, (*(unsigned __int16 *)(a2 + 26) >> 7) & 7);
    v85 = v52;
    v86 = v67;
    v87 = v68;
    v88 = v82;
    v89 = DWORD2(v82);
    v90 = v61;
    v91 = v62;
    v93 = v76;
    v92 = v75;
    v95 = v64;
    v94 = v63;
    v96 = v48;
    v97 = v49;
    v53 = *(_QWORD *)(a1 + 8);
    v54 = sub_1C636D7B0((llvm *)1, 0);
    v40 = sub_1C5D5F96C(v53, v54, 1, v24, *((uint64_t *)&v24 + 1), (uint64_t)&v79, (uint64_t *)&v84, 7, v32, (*(unsigned __int16 *)(a2 + 26) >> 7) & 7);
  }
  v55 = v40;
  if (v79)
    llvm::MetadataTracking::untrack((uint64_t)&v79, v79);
  return v55;
}

