void std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::__emplace_unique_key_args<unsigned int,unsigned int const&>(uint64_t a1, unsigned int a2, int a3)
{
  unint64_t v5;
  unint64_t v6;
  uint8x8_t v7;
  unint64_t v8;
  uint64_t **v9;
  uint64_t *i;
  unint64_t v11;
  _QWORD *v12;
  float v13;
  float v14;
  _BOOL8 v15;
  unint64_t v16;
  unint64_t v17;
  size_t v18;
  uint64_t v19;
  _QWORD *v20;
  unint64_t v21;

  v5 = a2;
  v6 = *(_QWORD *)(a1 + 8);
  if (v6)
  {
    v7 = (uint8x8_t)vcnt_s8((int8x8_t)v6);
    v7.i16[0] = vaddlv_u8(v7);
    if (v7.u32[0] > 1uLL)
    {
      v8 = a2;
      if (v6 <= a2)
        v8 = a2 % v6;
    }
    else
    {
      v8 = ((_DWORD)v6 - 1) & a2;
    }
    v9 = *(uint64_t ***)(*(_QWORD *)a1 + 8 * v8);
    if (v9)
    {
      for (i = *v9; i; i = (uint64_t *)*i)
      {
        v11 = i[1];
        if (v11 == a2)
        {
          if (*((_DWORD *)i + 4) == a2)
            return;
        }
        else
        {
          if (v7.u32[0] > 1uLL)
          {
            if (v11 >= v6)
              v11 %= v6;
          }
          else
          {
            v11 &= v6 - 1;
          }
          if (v11 != v8)
            break;
        }
      }
    }
  }
  else
  {
    v8 = 0xAAAAAAAAAAAAAAAALL;
  }
  v12 = operator new(0x18uLL);
  *v12 = 0;
  v12[1] = v5;
  *((_DWORD *)v12 + 4) = a3;
  v13 = (float)(unint64_t)(*(_QWORD *)(a1 + 24) + 1);
  v14 = *(float *)(a1 + 32);
  if (!v6 || (float)(v14 * (float)v6) < v13)
  {
    v15 = 1;
    if (v6 >= 3)
      v15 = (v6 & (v6 - 1)) != 0;
    v16 = v15 | (2 * v6);
    v17 = vcvtps_u32_f32(v13 / v14);
    if (v16 <= v17)
      v18 = v17;
    else
      v18 = v16;
    std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::__rehash<true>(a1, v18);
    v6 = *(_QWORD *)(a1 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v6 <= v5)
        v8 = v5 % v6;
      else
        v8 = v5;
    }
    else
    {
      v8 = ((_DWORD)v6 - 1) & v5;
    }
  }
  v19 = *(_QWORD *)a1;
  v20 = *(_QWORD **)(*(_QWORD *)a1 + 8 * v8);
  if (v20)
  {
    *v12 = *v20;
LABEL_38:
    *v20 = v12;
    goto LABEL_39;
  }
  *v12 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(v19 + 8 * v8) = a1 + 16;
  if (*v12)
  {
    v21 = *(_QWORD *)(*v12 + 8);
    if ((v6 & (v6 - 1)) != 0)
    {
      if (v21 >= v6)
        v21 %= v6;
    }
    else
    {
      v21 &= v6 - 1;
    }
    v20 = (_QWORD *)(*(_QWORD *)a1 + 8 * v21);
    goto LABEL_38;
  }
LABEL_39:
  ++*(_QWORD *)(a1 + 24);
}

void sub_20E127750(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::__rehash<true>(uint64_t a1, size_t __n)
{
  size_t prime;
  int8x8_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _QWORD *v8;
  size_t v9;
  uint8x8_t v10;
  unint64_t v11;
  uint8x8_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  void *v16;

  if (__n == 1)
  {
    prime = 2;
  }
  else
  {
    prime = __n;
    if ((__n & (__n - 1)) != 0)
      prime = std::__next_prime(__n);
  }
  v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(_QWORD *)&v4)
  {
    if (prime >= *(_QWORD *)&v4)
      return;
    v11 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(_QWORD *)&v4 < 3uLL || (v12 = (uint8x8_t)vcnt_s8(v4), v12.i16[0] = vaddlv_u8(v12), v12.u32[0] > 1uLL))
    {
      v11 = std::__next_prime(v11);
    }
    else
    {
      v13 = 1 << -(char)__clz(v11 - 1);
      if (v11 >= 2)
        v11 = v13;
    }
    if (prime <= v11)
      prime = v11;
    if (prime >= *(_QWORD *)&v4)
      return;
    if (!prime)
    {
      v16 = *(void **)a1;
      *(_QWORD *)a1 = 0;
      if (v16)
        operator delete(v16);
      *(_QWORD *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61)
    std::__throw_bad_array_new_length[abi:ne180100]();
  v5 = operator new(8 * prime);
  v6 = *(void **)a1;
  *(_QWORD *)a1 = v5;
  if (v6)
    operator delete(v6);
  v7 = 0;
  *(_QWORD *)(a1 + 8) = prime;
  do
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  v8 = *(_QWORD **)(a1 + 16);
  if (v8)
  {
    v9 = v8[1];
    v10 = (uint8x8_t)vcnt_s8((int8x8_t)prime);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      if (v9 >= prime)
        v9 %= prime;
    }
    else
    {
      v9 &= prime - 1;
    }
    *(_QWORD *)(*(_QWORD *)a1 + 8 * v9) = a1 + 16;
    v14 = (_QWORD *)*v8;
    if (*v8)
    {
      do
      {
        v15 = v14[1];
        if (v10.u32[0] > 1uLL)
        {
          if (v15 >= prime)
            v15 %= prime;
        }
        else
        {
          v15 &= prime - 1;
        }
        if (v15 != v9)
        {
          if (!*(_QWORD *)(*(_QWORD *)a1 + 8 * v15))
          {
            *(_QWORD *)(*(_QWORD *)a1 + 8 * v15) = v8;
            goto LABEL_31;
          }
          *v8 = *v14;
          *v14 = **(_QWORD **)(*(_QWORD *)a1 + 8 * v15);
          **(_QWORD **)(*(_QWORD *)a1 + 8 * v15) = v14;
          v14 = v8;
        }
        v15 = v9;
LABEL_31:
        v8 = v14;
        v14 = (_QWORD *)*v14;
        v9 = v15;
      }
      while (v14);
    }
  }
}

uint64_t std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::~__hash_table(uint64_t a1)
{
  _QWORD *v2;
  _QWORD *v3;
  void *v4;

  v2 = *(_QWORD **)(a1 + 16);
  if (v2)
  {
    do
    {
      v3 = (_QWORD *)*v2;
      operator delete(v2);
      v2 = v3;
    }
    while (v3);
  }
  v4 = *(void **)a1;
  *(_QWORD *)a1 = 0;
  if (v4)
    operator delete(v4);
  return a1;
}

AriSdk::MsgBase *AriSdk::ARI_AriBBLogInd_SDK::ARI_AriBBLogInd_SDK(AriSdk::ARI_AriBBLogInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4058000u, 0);
  *(_QWORD *)result = &off_24C8CDC70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4058000u, 0);
  *(_QWORD *)result = &off_24C8CDC70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriBBLogInd_SDK::ARI_AriBBLogInd_SDK(AriSdk::ARI_AriBBLogInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDC70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDC70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriBBLogInd_SDK::~ARI_AriBBLogInd_SDK(AriSdk::ARI_AriBBLogInd_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDC70;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C400BDB4DB4);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriBBLogInd_SDK::~ARI_AriBBLogInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriBBLogInd_SDK::pack(AriSdk::ARI_AriBBLogInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x108uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriBBLogInd_SDK::unpack(AriMsg **this)
{
  _OWORD *v2;
  uint64_t v3;
  void *v4;
  AriMsg *v5;
  BOOL v7;

  v7 = 0;
  v2 = (_OWORD *)operator new();
  *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[6] = 0u;
  v2[7] = 0u;
  v2[8] = 0u;
  v2[9] = 0u;
  v2[10] = 0u;
  v2[11] = 0u;
  v2[12] = 0u;
  v2[13] = 0u;
  v2[14] = 0u;
  v2[15] = 0u;
  *((_QWORD *)v2 + 32) = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 264, &v7, 0);
  if (!(_DWORD)v3 && v7)
  {
    v4 = (void *)operator new();
    memcpy(v4, v2, 0x108uLL);
    v5 = this[8];
    this[8] = (AriMsg *)v4;
    if (v5)
      MEMORY[0x212BB9B60](v5, 0x1000C400BDB4DB4);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C400BDB4DB4);
  return v3;
}

void sub_20E127C38(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C400BDB4DB4);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_AriBBLogInd_SDK::hasDeclaredGmid(AriSdk::ARI_AriBBLogInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 67469312;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpAttribReq_SDK::ARI_AriGrpAttribReq_SDK(AriSdk::ARI_AriGrpAttribReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4098000u, 0);
  *(_QWORD *)result = &off_24C8CDCA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4098000u, 0);
  *(_QWORD *)result = &off_24C8CDCA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpAttribReq_SDK::ARI_AriGrpAttribReq_SDK(AriSdk::ARI_AriGrpAttribReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDCA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDCA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriGrpAttribReq_SDK::~ARI_AriGrpAttribReq_SDK(AriSdk::ARI_AriGrpAttribReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDCA8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriGrpAttribReq_SDK::~ARI_AriGrpAttribReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriGrpAttribReq_SDK::pack(AriSdk::ARI_AriGrpAttribReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x14uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriGrpAttribReq_SDK::unpack(AriSdk::ARI_AriGrpAttribReq_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v2[1] = 0;
  *((_DWORD *)v2 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 20, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 8, (uint64_t)v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E127EBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_DWORD *)(v4 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  return a1;
}

BOOL AriSdk::ARI_AriGrpAttribReq_SDK::hasDeclaredGmid(AriSdk::ARI_AriGrpAttribReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 67731456;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpAttribResp_SDK::ARI_AriGrpAttribResp_SDK(AriSdk::ARI_AriGrpAttribResp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4118000u, 0);
  *(_QWORD *)result = &off_24C8CDCE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4118000u, 0);
  *(_QWORD *)result = &off_24C8CDCE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpAttribResp_SDK::ARI_AriGrpAttribResp_SDK(AriSdk::ARI_AriGrpAttribResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDCE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDCE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriGrpAttribResp_SDK::~ARI_AriGrpAttribResp_SDK(AriSdk::ARI_AriGrpAttribResp_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDCE0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriGrpAttribResp_SDK::~ARI_AriGrpAttribResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriGrpAttribResp_SDK::pack(AriSdk::ARI_AriGrpAttribResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x14uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriGrpAttribResp_SDK::unpack(AriSdk::ARI_AriGrpAttribResp_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v2[1] = 0;
  *((_DWORD *)v2 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 20, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 8, (uint64_t)v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E1281B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_AriGrpAttribResp_SDK::hasDeclaredGmid(AriSdk::ARI_AriGrpAttribResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 68255744;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpMsgsAttribReq_SDK::ARI_AriGrpMsgsAttribReq_SDK(AriSdk::ARI_AriGrpMsgsAttribReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4090000u, 0);
  *(_QWORD *)result = &off_24C8CDD18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4090000u, 0);
  *(_QWORD *)result = &off_24C8CDD18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpMsgsAttribReq_SDK::ARI_AriGrpMsgsAttribReq_SDK(AriSdk::ARI_AriGrpMsgsAttribReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDD18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDD18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriGrpMsgsAttribReq_SDK::~ARI_AriGrpMsgsAttribReq_SDK(AriSdk::ARI_AriGrpMsgsAttribReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDD18;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408E9EA8C0);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriGrpMsgsAttribReq_SDK::~ARI_AriGrpMsgsAttribReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriGrpMsgsAttribReq_SDK::pack(AriSdk::ARI_AriGrpMsgsAttribReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x7E0uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriGrpMsgsAttribReq_SDK::unpack(AriSdk::ARI_AriGrpMsgsAttribReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0x7E0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2016, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriGrpMsgsAttribParam>::operator=<AriGrpMsgsAttribParam&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C408E9EA8C0);
  return v3;
}

void sub_20E12842C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408E9EA8C0);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<AriGrpMsgsAttribParam>::operator=<AriGrpMsgsAttribParam&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x7E0uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C408E9EA8C0);
  return a1;
}

BOOL AriSdk::ARI_AriGrpMsgsAttribReq_SDK::hasDeclaredGmid(AriSdk::ARI_AriGrpMsgsAttribReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 67698688;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpMsgsAttribResp_SDK::ARI_AriGrpMsgsAttribResp_SDK(AriSdk::ARI_AriGrpMsgsAttribResp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4110000u, 0);
  *(_QWORD *)result = &off_24C8CDD50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4110000u, 0);
  *(_QWORD *)result = &off_24C8CDD50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriGrpMsgsAttribResp_SDK::ARI_AriGrpMsgsAttribResp_SDK(AriSdk::ARI_AriGrpMsgsAttribResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDD50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDD50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriGrpMsgsAttribResp_SDK::~ARI_AriGrpMsgsAttribResp_SDK(AriSdk::ARI_AriGrpMsgsAttribResp_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDD50;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408E9EA8C0);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriGrpMsgsAttribResp_SDK::~ARI_AriGrpMsgsAttribResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriGrpMsgsAttribResp_SDK::pack(AriSdk::ARI_AriGrpMsgsAttribResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x7E0uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriGrpMsgsAttribResp_SDK::unpack(AriSdk::ARI_AriGrpMsgsAttribResp_SDK *this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0x7E0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2016, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriGrpMsgsAttribParam>::operator=<AriGrpMsgsAttribParam&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C408E9EA8C0);
  return v3;
}

void sub_20E128718(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408E9EA8C0);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_AriGrpMsgsAttribResp_SDK::hasDeclaredGmid(AriSdk::ARI_AriGrpMsgsAttribResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 68222976;
}

AriSdk::MsgBase *AriSdk::ARI_AriMsgAttribReq_SDK::ARI_AriMsgAttribReq_SDK(AriSdk::ARI_AriMsgAttribReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4088000u, 0);
  *(_QWORD *)result = &off_24C8CDD88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4088000u, 0);
  *(_QWORD *)result = &off_24C8CDD88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriMsgAttribReq_SDK::ARI_AriMsgAttribReq_SDK(AriSdk::ARI_AriMsgAttribReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDD88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDD88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriMsgAttribReq_SDK::~ARI_AriMsgAttribReq_SDK(AriSdk::ARI_AriMsgAttribReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDD88;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriMsgAttribReq_SDK::~ARI_AriMsgAttribReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriMsgAttribReq_SDK::pack(AriSdk::ARI_AriMsgAttribReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x10uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriMsgAttribReq_SDK::unpack(AriSdk::ARI_AriMsgAttribReq_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v2[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 16, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  return v3;
}

void sub_20E128994(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40451B5BE8);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  uint64_t v5;

  v4 = (_OWORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40451B5BE8);
  return a1;
}

BOOL AriSdk::ARI_AriMsgAttribReq_SDK::hasDeclaredGmid(AriSdk::ARI_AriMsgAttribReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 67665920;
}

AriSdk::MsgBase *AriSdk::ARI_AriMsgAttribResp_SDK::ARI_AriMsgAttribResp_SDK(AriSdk::ARI_AriMsgAttribResp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4108000u, 0);
  *(_QWORD *)result = &off_24C8CDDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4108000u, 0);
  *(_QWORD *)result = &off_24C8CDDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriMsgAttribResp_SDK::ARI_AriMsgAttribResp_SDK(AriSdk::ARI_AriMsgAttribResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriMsgAttribResp_SDK::~ARI_AriMsgAttribResp_SDK(AriSdk::ARI_AriMsgAttribResp_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDDC0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriMsgAttribResp_SDK::~ARI_AriMsgAttribResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriMsgAttribResp_SDK::pack(AriSdk::ARI_AriMsgAttribResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x10uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriMsgAttribResp_SDK::unpack(AriSdk::ARI_AriMsgAttribResp_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v2[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 16, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  return v3;
}

void sub_20E128C7C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40451B5BE8);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_AriMsgAttribResp_SDK::hasDeclaredGmid(AriSdk::ARI_AriMsgAttribResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 68190208;
}

AriSdk::MsgBase *AriSdk::ARI_AriACK_SDK::ARI_AriACK_SDK(AriSdk::ARI_AriACK_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4050000u, 0);
  *(_QWORD *)result = &off_24C8CDDF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4050000u, 0);
  *(_QWORD *)result = &off_24C8CDDF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriACK_SDK::ARI_AriACK_SDK(AriSdk::ARI_AriACK_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDDF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDDF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriACK_SDK::~ARI_AriACK_SDK(AriSdk::ARI_AriACK_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDDF8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriACK_SDK::~ARI_AriACK_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriACK_SDK::pack(AriSdk::ARI_AriACK_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriACK_SDK::unpack(AriSdk::ARI_AriACK_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 8, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E128EF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return a1;
}

BOOL AriSdk::ARI_AriACK_SDK::hasDeclaredGmid(AriSdk::ARI_AriACK_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 67436544;
}

AriSdk::MsgBase *AriSdk::ARI_AriNACK_SDK::ARI_AriNACK_SDK(AriSdk::ARI_AriNACK_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4078000u, 0);
  *(_QWORD *)result = &off_24C8CDE30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4078000u, 0);
  *(_QWORD *)result = &off_24C8CDE30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriNACK_SDK::ARI_AriNACK_SDK(AriSdk::ARI_AriNACK_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDE30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDE30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriNACK_SDK::~ARI_AriNACK_SDK(AriSdk::ARI_AriNACK_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDE30;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriNACK_SDK::~ARI_AriNACK_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriNACK_SDK::pack(AriSdk::ARI_AriNACK_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriNACK_SDK::unpack(AriSdk::ARI_AriNACK_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 8, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E1291D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_AriNACK_SDK::hasDeclaredGmid(AriSdk::ARI_AriNACK_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 67600384;
}

double AriSdk::ARI_CsiBSPBBDumpInd_SDK::ARI_CsiBSPBBDumpInd_SDK(AriSdk::ARI_CsiBSPBBDumpInd_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x5880000u, 0);
  *(_QWORD *)v1 = &off_24C8CDE68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x5880000u, 0);
  *(_QWORD *)v1 = &off_24C8CDE68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiBSPBBDumpInd_SDK::ARI_CsiBSPBBDumpInd_SDK(AriSdk::ARI_CsiBSPBBDumpInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CDE68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CDE68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiBSPBBDumpInd_SDK::~ARI_CsiBSPBBDumpInd_SDK(AriSdk::ARI_CsiBSPBBDumpInd_SDK *this)
{
  uint64_t v2;
  void *v3;

  *(_QWORD *)this = &off_24C8CDE68;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 8);
  if (v3)
  {
    *((_QWORD *)this + 9) = v3;
    operator delete(v3);
  }
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBSPBBDumpInd_SDK::~ARI_CsiBSPBBDumpInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBSPBBDumpInd_SDK::pack(AriSdk::ARI_CsiBSPBBDumpInd_SDK *this, AriMsg **a2)
{
  _BYTE *v4;
  _BYTE *v5;
  BOOL v6;
  uint64_t result;
  const void *v8;

  *a2 = 0;
  v4 = (_BYTE *)*((_QWORD *)this + 8);
  v5 = (_BYTE *)*((_QWORD *)this + 9);
  if (v4)
    v6 = v4 == v5;
  else
    v6 = 1;
  if (v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, v5 - v4, 0), !(_DWORD)result))
  {
    v8 = (const void *)*((_QWORD *)this + 11);
    if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v8, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBSPBBDumpInd_SDK::unpack(AriSdk::ARI_CsiBSPBBDumpInd_SDK *this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v2 = (void *)operator new[]();
  bzero(v2, 0x400uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 1024, &v10, &__sz);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v2, (uint64_t)v2 + __sz, __sz);
    AriSdk::TlvArray<char,1024ul>::operator=((std::vector<int> *)((char *)this + 64), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E129564(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<char,1024ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x401)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 1024);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E129684(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *AriSdk::Tlv<int>::operator=<int &,void>(uint64_t *a1, _DWORD *a2)
{
  _DWORD *v4;
  uint64_t v5;

  v4 = (_DWORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return a1;
}

BOOL AriSdk::ARI_CsiBSPBBDumpInd_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBSPBBDumpInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 92798976;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK::ARI_CsiBmmProvideBootTimeInfoReq_SDK(AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D30000u, 0);
  *(_QWORD *)result = &off_24C8CDEA0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D30000u, 0);
  *(_QWORD *)result = &off_24C8CDEA0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK::ARI_CsiBmmProvideBootTimeInfoReq_SDK(AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDEA0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDEA0;
  return result;
}

void AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK::~ARI_CsiBmmProvideBootTimeInfoReq_SDK(AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK::unpack(AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBmmProvideBootTimeInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 80936960;
}

double AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK(AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x5530000u, 0);
  *(_QWORD *)v1 = &off_24C8CDED8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x5530000u, 0);
  *(_QWORD *)v1 = &off_24C8CDED8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK(AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CDED8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CDED8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK::~ARI_CsiBmmProvideBootTimeInfoRspCb_SDK(AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CDED8;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C409BFB5D93);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK::~ARI_CsiBmmProvideBootTimeInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK::pack(AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0xE1CuLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  void *v7;
  char *v8;
  AriMsg *v9;
  unint64_t v10;
  size_t v11;
  void **v12;
  unint64_t v13;
  const char *v14;
  void **v15;
  AriMsg *v16;
  unint64_t v18;
  BOOL v19;
  void *__p[2];
  char v21;

  LOBYTE(__p[0]) = 0;
  v2 = (void *)operator new();
  bzero(v2, 0xE1CuLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 3612, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C409BFB5D93);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0xE1CuLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C409BFB5D93);
    MEMORY[0x212BB9B60](v2, 0x1000C409BFB5D93);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x5A0uLL);
  v3 = AriMsg::unpack(this[6], 2, v7, 1440, &v19, &v18);
  if (!(_DWORD)v3 && v19)
  {
    if (v18 >= 0x18)
    {
      v10 = v18 / 0x18;
      v11 = 24 * (v18 / 0x18);
      v8 = (char *)operator new(v11);
      v9 = (AriMsg *)&v8[24 * v10];
      memcpy(v8, v7, v11);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
    v12 = (void **)(this + 9);
    v13 = 0xAAAAAAAAAAAAAAABLL * ((v9 - (AriMsg *)v8) >> 3);
    if (v13 < 0x3D)
    {
      v16 = (AriMsg *)*v12;
      if (*v12)
      {
        this[10] = v16;
        operator delete(v16);
        *v12 = 0;
        this[10] = 0;
        this[11] = 0;
      }
      this[9] = (AriMsg *)v8;
      this[10] = v9;
      this[11] = v9;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v21 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, v12, v13, 60);
      if (v21 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
  }
  MEMORY[0x212BB9B48](v7, 0x1000C80504FFAC1);
  return v3;
}

void sub_20E129D1C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80504FFAC1);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBmmProvideBootTimeInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 89325568;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspDebugJtagModeReq_SDK::ARI_CsiBspDebugJtagModeReq_SDK(AriSdk::ARI_CsiBspDebugJtagModeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D38000u, 0);
  *(_QWORD *)result = &off_24C8CDF10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D38000u, 0);
  *(_QWORD *)result = &off_24C8CDF10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspDebugJtagModeReq_SDK::ARI_CsiBspDebugJtagModeReq_SDK(AriSdk::ARI_CsiBspDebugJtagModeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDF10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDF10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiBspDebugJtagModeReq_SDK::~ARI_CsiBspDebugJtagModeReq_SDK(AriSdk::ARI_CsiBspDebugJtagModeReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDF10;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBspDebugJtagModeReq_SDK::~ARI_CsiBspDebugJtagModeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBspDebugJtagModeReq_SDK::pack(AriSdk::ARI_CsiBspDebugJtagModeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBspDebugJtagModeReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12A020(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiBspDebugJtagModeReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBspDebugJtagModeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 80969728;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK::ARI_CsiBspDebugJtagModeRspCb_SDK(AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5538000u, 0);
  *(_QWORD *)result = &off_24C8CDF48;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5538000u, 0);
  *(_QWORD *)result = &off_24C8CDF48;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK::ARI_CsiBspDebugJtagModeRspCb_SDK(AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDF48;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDF48;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK::~ARI_CsiBspDebugJtagModeRspCb_SDK(AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDF48;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK::~ARI_CsiBspDebugJtagModeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK::pack(AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK::unpack(AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12A2A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBspDebugJtagModeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 89358336;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateGetReq_SDK::ARI_CsiBspStateGetReq_SDK(AriSdk::ARI_CsiBspStateGetReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4850000u, 0);
  *(_QWORD *)result = &off_24C8CDF80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4850000u, 0);
  *(_QWORD *)result = &off_24C8CDF80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateGetReq_SDK::ARI_CsiBspStateGetReq_SDK(AriSdk::ARI_CsiBspStateGetReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDF80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDF80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiBspStateGetReq_SDK::~ARI_CsiBspStateGetReq_SDK(AriSdk::ARI_CsiBspStateGetReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CDF80;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBspStateGetReq_SDK::~ARI_CsiBspStateGetReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBspStateGetReq_SDK::pack(AriSdk::ARI_CsiBspStateGetReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBspStateGetReq_SDK::unpack(AriSdk::ARI_CsiBspStateGetReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12A518(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiBspStateGetReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBspStateGetReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75825152;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateGetRspCb_SDK::ARI_CsiBspStateGetRspCb_SDK(AriSdk::ARI_CsiBspStateGetRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5050000u, 0);
  *(_QWORD *)result = &off_24C8CDFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5050000u, 0);
  *(_QWORD *)result = &off_24C8CDFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateGetRspCb_SDK::ARI_CsiBspStateGetRspCb_SDK(AriSdk::ARI_CsiBspStateGetRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiBspStateGetRspCb_SDK::~ARI_CsiBspStateGetRspCb_SDK(AriSdk::ARI_CsiBspStateGetRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CDFB8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBspStateGetRspCb_SDK::~ARI_CsiBspStateGetRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBspStateGetRspCb_SDK::pack(AriSdk::ARI_CsiBspStateGetRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBspStateGetRspCb_SDK::unpack(AriSdk::ARI_CsiBspStateGetRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E12A860(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiBspStateGetRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBspStateGetRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84213760;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateSetReq_SDK::ARI_CsiBspStateSetReq_SDK(AriSdk::ARI_CsiBspStateSetReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4858000u, 0);
  *(_QWORD *)result = &off_24C8CDFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4858000u, 0);
  *(_QWORD *)result = &off_24C8CDFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateSetReq_SDK::ARI_CsiBspStateSetReq_SDK(AriSdk::ARI_CsiBspStateSetReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CDFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiBspStateSetReq_SDK::~ARI_CsiBspStateSetReq_SDK(AriSdk::ARI_CsiBspStateSetReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CDFF0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBspStateSetReq_SDK::~ARI_CsiBspStateSetReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBspStateSetReq_SDK::pack(AriSdk::ARI_CsiBspStateSetReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBspStateSetReq_SDK::unpack(AriSdk::ARI_CsiBspStateSetReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E12ABB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiBspStateSetReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBspStateSetReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75857920;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateSetRspCb_SDK::ARI_CsiBspStateSetRspCb_SDK(AriSdk::ARI_CsiBspStateSetRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5058000u, 0);
  *(_QWORD *)result = &off_24C8CE028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5058000u, 0);
  *(_QWORD *)result = &off_24C8CE028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiBspStateSetRspCb_SDK::ARI_CsiBspStateSetRspCb_SDK(AriSdk::ARI_CsiBspStateSetRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiBspStateSetRspCb_SDK::~ARI_CsiBspStateSetRspCb_SDK(AriSdk::ARI_CsiBspStateSetRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE028;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiBspStateSetRspCb_SDK::~ARI_CsiBspStateSetRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiBspStateSetRspCb_SDK::pack(AriSdk::ARI_CsiBspStateSetRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiBspStateSetRspCb_SDK::unpack(AriSdk::ARI_CsiBspStateSetRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12AE40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiBspStateSetRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiBspStateSetRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84246528;
}

AriSdk::MsgBase *AriSdk::ARI_CsiDelayedOutstandingReq_SDK::ARI_CsiDelayedOutstandingReq_SDK(AriSdk::ARI_CsiDelayedOutstandingReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4888000u, 0);
  *(_QWORD *)result = &off_24C8CE060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4888000u, 0);
  *(_QWORD *)result = &off_24C8CE060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiDelayedOutstandingReq_SDK::ARI_CsiDelayedOutstandingReq_SDK(AriSdk::ARI_CsiDelayedOutstandingReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiDelayedOutstandingReq_SDK::~ARI_CsiDelayedOutstandingReq_SDK(AriSdk::ARI_CsiDelayedOutstandingReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE060;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiDelayedOutstandingReq_SDK::~ARI_CsiDelayedOutstandingReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiDelayedOutstandingReq_SDK::pack(AriSdk::ARI_CsiDelayedOutstandingReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiDelayedOutstandingReq_SDK::unpack(AriSdk::ARI_CsiDelayedOutstandingReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12B0C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiDelayedOutstandingReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiDelayedOutstandingReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 76054528;
}

AriSdk::MsgBase *AriSdk::ARI_CsiDelayedOutstandingResp_SDK::ARI_CsiDelayedOutstandingResp_SDK(AriSdk::ARI_CsiDelayedOutstandingResp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5088000u, 0);
  *(_QWORD *)result = &off_24C8CE098;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5088000u, 0);
  *(_QWORD *)result = &off_24C8CE098;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiDelayedOutstandingResp_SDK::ARI_CsiDelayedOutstandingResp_SDK(AriSdk::ARI_CsiDelayedOutstandingResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE098;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE098;
  return result;
}

void AriSdk::ARI_CsiDelayedOutstandingResp_SDK::~ARI_CsiDelayedOutstandingResp_SDK(AriSdk::ARI_CsiDelayedOutstandingResp_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiDelayedOutstandingResp_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiDelayedOutstandingResp_SDK::unpack(AriSdk::ARI_CsiDelayedOutstandingResp_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiDelayedOutstandingResp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiDelayedOutstandingResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84443136;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetCurrentBootStateReq_SDK::ARI_CsiGetCurrentBootStateReq_SDK(AriSdk::ARI_CsiGetCurrentBootStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4868000u, 0);
  *(_QWORD *)result = &off_24C8CE0D0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4868000u, 0);
  *(_QWORD *)result = &off_24C8CE0D0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetCurrentBootStateReq_SDK::ARI_CsiGetCurrentBootStateReq_SDK(AriSdk::ARI_CsiGetCurrentBootStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE0D0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE0D0;
  return result;
}

void AriSdk::ARI_CsiGetCurrentBootStateReq_SDK::~ARI_CsiGetCurrentBootStateReq_SDK(AriSdk::ARI_CsiGetCurrentBootStateReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiGetCurrentBootStateReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiGetCurrentBootStateReq_SDK::unpack(AriSdk::ARI_CsiGetCurrentBootStateReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiGetCurrentBootStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiGetCurrentBootStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75923456;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK::ARI_CsiGetCurrentBootStateRspCb_SDK(AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5068000u, 0);
  *(_QWORD *)result = &off_24C8CE108;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5068000u, 0);
  *(_QWORD *)result = &off_24C8CE108;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK::ARI_CsiGetCurrentBootStateRspCb_SDK(AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE108;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE108;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK::~ARI_CsiGetCurrentBootStateRspCb_SDK(AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE108;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK::~ARI_CsiGetCurrentBootStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK::pack(AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12B6D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiGetCurrentBootStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84312064;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetSystemTimeReq_SDK::ARI_CsiGetSystemTimeReq_SDK(AriSdk::ARI_CsiGetSystemTimeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4870000u, 0);
  *(_QWORD *)result = &off_24C8CE140;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4870000u, 0);
  *(_QWORD *)result = &off_24C8CE140;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetSystemTimeReq_SDK::ARI_CsiGetSystemTimeReq_SDK(AriSdk::ARI_CsiGetSystemTimeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE140;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE140;
  return result;
}

void AriSdk::ARI_CsiGetSystemTimeReq_SDK::~ARI_CsiGetSystemTimeReq_SDK(AriSdk::ARI_CsiGetSystemTimeReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiGetSystemTimeReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiGetSystemTimeReq_SDK::unpack(AriSdk::ARI_CsiGetSystemTimeReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiGetSystemTimeReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiGetSystemTimeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75956224;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetSystemTimeResp_SDK::ARI_CsiGetSystemTimeResp_SDK(AriSdk::ARI_CsiGetSystemTimeResp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5070000u, 0);
  *(_QWORD *)result = &off_24C8CE178;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5070000u, 0);
  *(_QWORD *)result = &off_24C8CE178;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiGetSystemTimeResp_SDK::ARI_CsiGetSystemTimeResp_SDK(AriSdk::ARI_CsiGetSystemTimeResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE178;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE178;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiGetSystemTimeResp_SDK::~ARI_CsiGetSystemTimeResp_SDK(AriSdk::ARI_CsiGetSystemTimeResp_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE178;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiGetSystemTimeResp_SDK::~ARI_CsiGetSystemTimeResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiGetSystemTimeResp_SDK::pack(AriSdk::ARI_CsiGetSystemTimeResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiGetSystemTimeResp_SDK::unpack(AriSdk::ARI_CsiGetSystemTimeResp_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 8, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E12BAF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiGetSystemTimeResp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiGetSystemTimeResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84344832;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeGetReq_SDK::ARI_CsiModeGetReq_SDK(AriSdk::ARI_CsiModeGetReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4878000u, 0);
  *(_QWORD *)result = &off_24C8CE1B0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4878000u, 0);
  *(_QWORD *)result = &off_24C8CE1B0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeGetReq_SDK::ARI_CsiModeGetReq_SDK(AriSdk::ARI_CsiModeGetReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE1B0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE1B0;
  return result;
}

void AriSdk::ARI_CsiModeGetReq_SDK::~ARI_CsiModeGetReq_SDK(AriSdk::ARI_CsiModeGetReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiModeGetReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiModeGetReq_SDK::unpack(AriSdk::ARI_CsiModeGetReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiModeGetReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiModeGetReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75988992;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeGetRspCb_SDK::ARI_CsiModeGetRspCb_SDK(AriSdk::ARI_CsiModeGetRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5078000u, 0);
  *(_QWORD *)result = &off_24C8CE1E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5078000u, 0);
  *(_QWORD *)result = &off_24C8CE1E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeGetRspCb_SDK::ARI_CsiModeGetRspCb_SDK(AriSdk::ARI_CsiModeGetRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE1E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE1E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiModeGetRspCb_SDK::~ARI_CsiModeGetRspCb_SDK(AriSdk::ARI_CsiModeGetRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE1E8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40504FFAC1);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiModeGetRspCb_SDK::~ARI_CsiModeGetRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiModeGetRspCb_SDK::pack(AriSdk::ARI_CsiModeGetRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x18uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiModeGetRspCb_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 24, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = operator new();
    *(_OWORD *)v5 = *(_OWORD *)v2;
    *(_QWORD *)(v5 + 16) = v2[2];
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40504FFAC1);
  return v3;
}

void sub_20E12BF64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40504FFAC1);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiModeGetRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiModeGetRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84377600;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeSetReq_SDK::ARI_CsiModeSetReq_SDK(AriSdk::ARI_CsiModeSetReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4860000u, 0);
  *(_QWORD *)result = &off_24C8CE220;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4860000u, 0);
  *(_QWORD *)result = &off_24C8CE220;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeSetReq_SDK::ARI_CsiModeSetReq_SDK(AriSdk::ARI_CsiModeSetReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE220;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE220;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiModeSetReq_SDK::~ARI_CsiModeSetReq_SDK(AriSdk::ARI_CsiModeSetReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE220;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiModeSetReq_SDK::~ARI_CsiModeSetReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiModeSetReq_SDK::pack(AriSdk::ARI_CsiModeSetReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiModeSetReq_SDK::unpack(AriSdk::ARI_CsiModeSetReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12C1DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiModeSetReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiModeSetReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75890688;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeSetRespCb_SDK::ARI_CsiModeSetRespCb_SDK(AriSdk::ARI_CsiModeSetRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5060000u, 0);
  *(_QWORD *)result = &off_24C8CE258;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5060000u, 0);
  *(_QWORD *)result = &off_24C8CE258;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeSetRespCb_SDK::ARI_CsiModeSetRespCb_SDK(AriSdk::ARI_CsiModeSetRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE258;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE258;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiModeSetRespCb_SDK::~ARI_CsiModeSetRespCb_SDK(AriSdk::ARI_CsiModeSetRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE258;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiModeSetRespCb_SDK::~ARI_CsiModeSetRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiModeSetRespCb_SDK::pack(AriSdk::ARI_CsiModeSetRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiModeSetRespCb_SDK::unpack(AriSdk::ARI_CsiModeSetRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12C450(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiModeSetRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiModeSetRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84279296;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeSetIndCb_SDK::ARI_CsiModeSetIndCb_SDK(AriSdk::ARI_CsiModeSetIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5878000u, 0);
  *(_QWORD *)result = &off_24C8CE290;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5878000u, 0);
  *(_QWORD *)result = &off_24C8CE290;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiModeSetIndCb_SDK::ARI_CsiModeSetIndCb_SDK(AriSdk::ARI_CsiModeSetIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE290;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE290;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiModeSetIndCb_SDK::~ARI_CsiModeSetIndCb_SDK(AriSdk::ARI_CsiModeSetIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE290;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiModeSetIndCb_SDK::~ARI_CsiModeSetIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiModeSetIndCb_SDK::pack(AriSdk::ARI_CsiModeSetIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiModeSetIndCb_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 8, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_QWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E12C704(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiModeSetIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiModeSetIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 92766208;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK::ARI_CsiMsCpsGetCurrentBootStateReq_SDK(AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4810000u, 0);
  *(_QWORD *)result = &off_24C8CE2C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4810000u, 0);
  *(_QWORD *)result = &off_24C8CE2C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK::ARI_CsiMsCpsGetCurrentBootStateReq_SDK(AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE2C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE2C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK::~ARI_CsiMsCpsGetCurrentBootStateReq_SDK(AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE2C8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK::~ARI_CsiMsCpsGetCurrentBootStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK::pack(AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK::unpack(AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12C97C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsCpsGetCurrentBootStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75563008;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK(AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5010000u, 0);
  *(_QWORD *)result = &off_24C8CE300;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5010000u, 0);
  *(_QWORD *)result = &off_24C8CE300;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK(AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE300;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE300;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK::~ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK(AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CE300;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK::~ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK::pack(AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK::unpack(AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E12CCFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsCpsGetCurrentBootStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 83951616;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsReadMeidReq_SDK::ARI_CsiMsCpsReadMeidReq_SDK(AriSdk::ARI_CsiMsCpsReadMeidReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4890000u, 0);
  *(_QWORD *)result = &off_24C8CE338;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4890000u, 0);
  *(_QWORD *)result = &off_24C8CE338;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsReadMeidReq_SDK::ARI_CsiMsCpsReadMeidReq_SDK(AriSdk::ARI_CsiMsCpsReadMeidReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE338;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE338;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiMsCpsReadMeidReq_SDK::~ARI_CsiMsCpsReadMeidReq_SDK(AriSdk::ARI_CsiMsCpsReadMeidReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE338;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsCpsReadMeidReq_SDK::~ARI_CsiMsCpsReadMeidReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsCpsReadMeidReq_SDK::pack(AriSdk::ARI_CsiMsCpsReadMeidReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsCpsReadMeidReq_SDK::unpack(AriSdk::ARI_CsiMsCpsReadMeidReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12CF78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsCpsReadMeidReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsCpsReadMeidReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 76087296;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK::ARI_CsiMsCpsReadMeidRspCb_SDK(AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5090000u, 0);
  *(_QWORD *)result = &off_24C8CE370;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5090000u, 0);
  *(_QWORD *)result = &off_24C8CE370;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK::ARI_CsiMsCpsReadMeidRspCb_SDK(AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE370;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE370;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK::~ARI_CsiMsCpsReadMeidRspCb_SDK(AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CE370;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C402C707793);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK::~ARI_CsiMsCpsReadMeidRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK::pack(AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x18uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK::unpack(AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  v5[1] = 0;
  v5[2] = 0;
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 24, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_QWORD *)(v6 + 16) = v5[2];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C402C707793);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C402C707793);
  return v3;
}

void sub_20E12D304(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C402C707793);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsCpsReadMeidRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84475904;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsSimCardPresenceReq_SDK::ARI_CsiMsSimCardPresenceReq_SDK(AriSdk::ARI_CsiMsSimCardPresenceReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4848000u, 0);
  *(_QWORD *)result = &off_24C8CE3A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4848000u, 0);
  *(_QWORD *)result = &off_24C8CE3A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsSimCardPresenceReq_SDK::ARI_CsiMsSimCardPresenceReq_SDK(AriSdk::ARI_CsiMsSimCardPresenceReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE3A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE3A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiMsSimCardPresenceReq_SDK::~ARI_CsiMsSimCardPresenceReq_SDK(AriSdk::ARI_CsiMsSimCardPresenceReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE3A8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsSimCardPresenceReq_SDK::~ARI_CsiMsSimCardPresenceReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsSimCardPresenceReq_SDK::pack(AriSdk::ARI_CsiMsSimCardPresenceReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsSimCardPresenceReq_SDK::unpack(AriSdk::ARI_CsiMsSimCardPresenceReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12D598(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsSimCardPresenceReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsSimCardPresenceReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75792384;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK::ARI_CsiMsSimCardPresenceRspCb_SDK(AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5048000u, 0);
  *(_QWORD *)result = &off_24C8CE3E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5048000u, 0);
  *(_QWORD *)result = &off_24C8CE3E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK::ARI_CsiMsSimCardPresenceRspCb_SDK(AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE3E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE3E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK::~ARI_CsiMsSimCardPresenceRspCb_SDK(AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CE3E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK::~ARI_CsiMsSimCardPresenceRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK::pack(AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK::unpack(AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E12D924(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsSimCardPresenceRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84180992;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetFusingStateReq_SDK::ARI_CsiSecGetFusingStateReq_SDK(AriSdk::ARI_CsiSecGetFusingStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4818000u, 0);
  *(_QWORD *)result = &off_24C8CE418;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4818000u, 0);
  *(_QWORD *)result = &off_24C8CE418;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetFusingStateReq_SDK::ARI_CsiSecGetFusingStateReq_SDK(AriSdk::ARI_CsiSecGetFusingStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE418;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE418;
  return result;
}

void AriSdk::ARI_CsiSecGetFusingStateReq_SDK::~ARI_CsiSecGetFusingStateReq_SDK(AriSdk::ARI_CsiSecGetFusingStateReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetFusingStateReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecGetFusingStateReq_SDK::unpack(AriSdk::ARI_CsiSecGetFusingStateReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecGetFusingStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetFusingStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75595776;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK::ARI_CsiSecGetFusingStateRspCb_SDK(AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5018000u, 0);
  *(_QWORD *)result = &off_24C8CE450;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5018000u, 0);
  *(_QWORD *)result = &off_24C8CE450;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK::ARI_CsiSecGetFusingStateRspCb_SDK(AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE450;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE450;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK::~ARI_CsiSecGetFusingStateRspCb_SDK(AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CE450;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK::~ARI_CsiSecGetFusingStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK::pack(AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK::unpack(AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E12DE30(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetFusingStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 83984384;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRandomNumReq_SDK::ARI_CsiSecGetRandomNumReq_SDK(AriSdk::ARI_CsiSecGetRandomNumReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4830000u, 0);
  *(_QWORD *)result = &off_24C8CE488;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4830000u, 0);
  *(_QWORD *)result = &off_24C8CE488;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRandomNumReq_SDK::ARI_CsiSecGetRandomNumReq_SDK(AriSdk::ARI_CsiSecGetRandomNumReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE488;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE488;
  return result;
}

void AriSdk::ARI_CsiSecGetRandomNumReq_SDK::~ARI_CsiSecGetRandomNumReq_SDK(AriSdk::ARI_CsiSecGetRandomNumReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetRandomNumReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecGetRandomNumReq_SDK::unpack(AriSdk::ARI_CsiSecGetRandomNumReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecGetRandomNumReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetRandomNumReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75694080;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK::ARI_CsiSecGetRandomNumRspCb_SDK(AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5030000u, 0);
  *(_QWORD *)result = &off_24C8CE4C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5030000u, 0);
  *(_QWORD *)result = &off_24C8CE4C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK::ARI_CsiSecGetRandomNumRspCb_SDK(AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE4C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE4C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK::~ARI_CsiSecGetRandomNumRspCb_SDK(AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE4C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408AA14F5FLL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK::~ARI_CsiSecGetRandomNumRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK::pack(AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x24uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK::unpack(AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK *this)
{
  _OWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_OWORD *)operator new();
  *v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 36, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<CsiSecNonce>::operator=<CsiSecNonce&,void>((uint64_t *)this + 8, (uint64_t)v2);
  MEMORY[0x212BB9B60](v2, 0x1000C408AA14F5FLL);
  return v3;
}

void sub_20E12E25C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408AA14F5FLL);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<CsiSecNonce>::operator=<CsiSecNonce&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *a1;
  *a1 = v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C408AA14F5FLL);
  return a1;
}

BOOL AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetRandomNumRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84082688;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetSNUMReq_SDK::ARI_CsiSecGetSNUMReq_SDK(AriSdk::ARI_CsiSecGetSNUMReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4820000u, 0);
  *(_QWORD *)result = &off_24C8CE4F8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4820000u, 0);
  *(_QWORD *)result = &off_24C8CE4F8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetSNUMReq_SDK::ARI_CsiSecGetSNUMReq_SDK(AriSdk::ARI_CsiSecGetSNUMReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE4F8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE4F8;
  return result;
}

void AriSdk::ARI_CsiSecGetSNUMReq_SDK::~ARI_CsiSecGetSNUMReq_SDK(AriSdk::ARI_CsiSecGetSNUMReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetSNUMReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecGetSNUMReq_SDK::unpack(AriSdk::ARI_CsiSecGetSNUMReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecGetSNUMReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetSNUMReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75628544;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetSNUMRspCb_SDK::ARI_CsiSecGetSNUMRspCb_SDK(AriSdk::ARI_CsiSecGetSNUMRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5020000u, 0);
  *(_QWORD *)result = &off_24C8CE530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5020000u, 0);
  *(_QWORD *)result = &off_24C8CE530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetSNUMRspCb_SDK::ARI_CsiSecGetSNUMRspCb_SDK(AriSdk::ARI_CsiSecGetSNUMRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSecGetSNUMRspCb_SDK::~ARI_CsiSecGetSNUMRspCb_SDK(AriSdk::ARI_CsiSecGetSNUMRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE530;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4040E6D4D8);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecGetSNUMRspCb_SDK::~ARI_CsiSecGetSNUMRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetSNUMRspCb_SDK::pack(AriSdk::ARI_CsiSecGetSNUMRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x18uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecGetSNUMRspCb_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 24, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = operator new();
    *(_OWORD *)v5 = *(_OWORD *)v2;
    *(_QWORD *)(v5 + 16) = v2[2];
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4040E6D4D8);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4040E6D4D8);
  return v3;
}

void sub_20E12E728(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4040E6D4D8);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSecGetSNUMRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetSNUMRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84017152;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoReq_SDK::ARI_CsiSysGetInfoReq_SDK(AriSdk::ARI_CsiSysGetInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4828000u, 0);
  *(_QWORD *)result = &off_24C8CE568;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4828000u, 0);
  *(_QWORD *)result = &off_24C8CE568;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoReq_SDK::ARI_CsiSysGetInfoReq_SDK(AriSdk::ARI_CsiSysGetInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE568;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE568;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSysGetInfoReq_SDK::~ARI_CsiSysGetInfoReq_SDK(AriSdk::ARI_CsiSysGetInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE568;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSysGetInfoReq_SDK::~ARI_CsiSysGetInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSysGetInfoReq_SDK::pack(AriSdk::ARI_CsiSysGetInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSysGetInfoReq_SDK::unpack(AriSdk::ARI_CsiSysGetInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12E9A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSysGetInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSysGetInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75661312;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoRspCb_SDK::ARI_CsiSysGetInfoRspCb_SDK(AriSdk::ARI_CsiSysGetInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5028000u, 0);
  *(_QWORD *)result = &off_24C8CE5A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5028000u, 0);
  *(_QWORD *)result = &off_24C8CE5A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoRspCb_SDK::ARI_CsiSysGetInfoRspCb_SDK(AriSdk::ARI_CsiSysGetInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE5A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE5A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSysGetInfoRspCb_SDK::~ARI_CsiSysGetInfoRspCb_SDK(AriSdk::ARI_CsiSysGetInfoRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE5A0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40F139FF95);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSysGetInfoRspCb_SDK::~ARI_CsiSysGetInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSysGetInfoRspCb_SDK::pack(AriSdk::ARI_CsiSysGetInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x6CuLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSysGetInfoRspCb_SDK::unpack(AriMsg **this)
{
  _OWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  AriMsg *v9;
  BOOL v11;

  v11 = 0;
  v2 = (_OWORD *)operator new();
  *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  *(_OWORD *)((char *)v2 + 92) = 0u;
  v3 = AriMsg::unpack(this[6], 1, v2, 108, &v11, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v11;
  if (!v4)
  {
    v5 = (_OWORD *)operator new();
    v6 = v2[5];
    v5[4] = v2[4];
    v5[5] = v6;
    *(_OWORD *)((char *)v5 + 92) = *(_OWORD *)((char *)v2 + 92);
    v7 = v2[1];
    *v5 = *v2;
    v5[1] = v7;
    v8 = v2[3];
    v5[2] = v2[2];
    v5[3] = v8;
    v9 = this[8];
    this[8] = (AriMsg *)v5;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C40F139FF95);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40F139FF95);
  return v3;
}

void sub_20E12EC84(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40F139FF95);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSysGetInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSysGetInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84049920;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoReqV2_SDK::ARI_CsiSysGetInfoReqV2_SDK(AriSdk::ARI_CsiSysGetInfoReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4880000u, 0);
  *(_QWORD *)result = &off_24C8CE5D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4880000u, 0);
  *(_QWORD *)result = &off_24C8CE5D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoReqV2_SDK::ARI_CsiSysGetInfoReqV2_SDK(AriSdk::ARI_CsiSysGetInfoReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE5D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE5D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSysGetInfoReqV2_SDK::~ARI_CsiSysGetInfoReqV2_SDK(AriSdk::ARI_CsiSysGetInfoReqV2_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE5D8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSysGetInfoReqV2_SDK::~ARI_CsiSysGetInfoReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSysGetInfoReqV2_SDK::pack(AriSdk::ARI_CsiSysGetInfoReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSysGetInfoReqV2_SDK::unpack(AriSdk::ARI_CsiSysGetInfoReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12EEFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSysGetInfoReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSysGetInfoReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 76021760;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK::ARI_CsiSysGetInfoRspCbV2_SDK(AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5080000u, 0);
  *(_QWORD *)result = &off_24C8CE610;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5080000u, 0);
  *(_QWORD *)result = &off_24C8CE610;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK::ARI_CsiSysGetInfoRspCbV2_SDK(AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE610;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE610;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK::~ARI_CsiSysGetInfoRspCbV2_SDK(AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE610;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40EE8C0CC6);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK::~ARI_CsiSysGetInfoRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK::pack(AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x208uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0x208uLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 520, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0x208uLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40EE8C0CC6);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40EE8C0CC6);
  return v3;
}

void sub_20E12F1B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40EE8C0CC6);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSysGetInfoRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84410368;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsReadImeiReq_SDK::ARI_CsiMsCpsReadImeiReq_SDK(AriSdk::ARI_CsiMsCpsReadImeiReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4808000u, 0);
  *(_QWORD *)result = &off_24C8CE648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4808000u, 0);
  *(_QWORD *)result = &off_24C8CE648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiMsCpsReadImeiReq_SDK::ARI_CsiMsCpsReadImeiReq_SDK(AriSdk::ARI_CsiMsCpsReadImeiReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiMsCpsReadImeiReq_SDK::~ARI_CsiMsCpsReadImeiReq_SDK(AriSdk::ARI_CsiMsCpsReadImeiReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE648;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsCpsReadImeiReq_SDK::~ARI_CsiMsCpsReadImeiReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsCpsReadImeiReq_SDK::pack(AriSdk::ARI_CsiMsCpsReadImeiReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsCpsReadImeiReq_SDK::unpack(AriSdk::ARI_CsiMsCpsReadImeiReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E12F42C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsCpsReadImeiReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsCpsReadImeiReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75530240;
}

double AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK::ARI_CsiMsCpsReadImeiRspCb_SDK(AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x5008000u, 0);
  *(_QWORD *)v1 = &off_24C8CE680;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x5008000u, 0);
  *(_QWORD *)v1 = &off_24C8CE680;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK::ARI_CsiMsCpsReadImeiRspCb_SDK(AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CE680;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CE680;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK::~ARI_CsiMsCpsReadImeiRspCb_SDK(AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8CE680;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4075806E5BLL);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4075806E5BLL);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C402C707793);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK::~ARI_CsiMsCpsReadImeiRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK::pack(AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x18uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x11uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x11uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK::unpack(AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_QWORD *)operator new();
  v5[1] = 0;
  v5[2] = 0;
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 24, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C402C707793);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_QWORD *)(v6 + 16) = v5[2];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C402C707793);
    MEMORY[0x212BB9B60](v5, 0x1000C402C707793);
  }
  v16 = 0;
  v8 = (_BYTE *)operator new();
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[16] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 17, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4075806E5BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = operator new();
    *(_OWORD *)v9 = *(_OWORD *)v8;
    *(_BYTE *)(v9 + 16) = v8[16];
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4075806E5BLL);
    MEMORY[0x212BB9B60](v8, 0x1000C4075806E5BLL);
  }
  v15 = 0;
  v11 = (_BYTE *)operator new();
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v11, 17, &v15, 0);
  if (!(_DWORD)v3 && v15)
  {
    v12 = operator new();
    *(_OWORD *)v12 = *(_OWORD *)v11;
    *(_BYTE *)(v12 + 16) = v11[16];
    v13 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C4075806E5BLL);
  }
  MEMORY[0x212BB9B60](v11, 0x1000C4075806E5BLL);
  return v3;
}

void sub_20E12FA04(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4075806E5BLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiMsCpsReadImeiRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 83918848;
}

double AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK::ARI_IBIRfSetAntennaPortMappingReq_SDK(AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4898000u, 0);
  *(_QWORD *)v1 = &off_24C8CE6B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4898000u, 0);
  *(_QWORD *)v1 = &off_24C8CE6B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK::ARI_IBIRfSetAntennaPortMappingReq_SDK(AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CE6B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CE6B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK::~ARI_IBIRfSetAntennaPortMappingReq_SDK(AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CE6B8;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK::~ARI_IBIRfSetAntennaPortMappingReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK::pack(AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  _OWORD *v7;
  unint64_t v8;
  char *v9;
  AriMsg *v10;
  AriMsg *v11;
  size_t v12;
  void **v13;
  const char *v14;
  void **v15;
  AriMsg *v16;
  unint64_t v18;
  BOOL v19;
  void *__p[2];
  char v21;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 2, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v7[8] = 0u;
  v7[9] = 0u;
  v7[10] = 0u;
  v7[11] = 0u;
  v7[12] = 0u;
  v7[13] = 0u;
  v7[14] = 0u;
  v7[15] = 0u;
  v7[16] = 0u;
  v7[17] = 0u;
  v7[18] = 0u;
  v7[19] = 0u;
  v7[20] = 0u;
  v7[21] = 0u;
  v7[22] = 0u;
  v7[23] = 0u;
  v7[24] = 0u;
  v3 = AriMsg::unpack(this[6], 3, v7, 400, &v19, &v18);
  if (!(_DWORD)v3 && v19)
  {
    v8 = v18;
    if (v18 >= 8)
    {
      v12 = v18 & 0xFFFFFFFFFFFFFFF8;
      v9 = (char *)operator new(v18 & 0xFFFFFFFFFFFFFFF8);
      v11 = (AriMsg *)&v9[8 * (v8 >> 3)];
      memcpy(v9, v7, v12);
      v10 = (AriMsg *)&v9[v12];
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0;
    }
    v13 = (void **)(this + 9);
    if ((unint64_t)(v10 - (AriMsg *)v9) < 0x191)
    {
      v16 = (AriMsg *)*v13;
      if (*v13)
      {
        this[10] = v16;
        operator delete(v16);
        *v13 = 0;
        this[10] = 0;
        this[11] = 0;
      }
      this[9] = (AriMsg *)v9;
      this[10] = v10;
      this[11] = v11;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v21 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, v13, (v10 - (AriMsg *)v9) >> 3, 50);
      if (v21 < 0)
        operator delete(__p[0]);
      if (v9)
        operator delete(v9);
    }
  }
  MEMORY[0x212BB9B48](v7, 0x1000C804A09149ALL);
  return v3;
}

void sub_20E12FEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C804A09149ALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIRfSetAntennaPortMappingReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 76120064;
}

AriSdk::MsgBase *AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK::ARI_IBIRfSetAntennaPortMappingResp_SDK(AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5098000u, 0);
  *(_QWORD *)result = &off_24C8CE6F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5098000u, 0);
  *(_QWORD *)result = &off_24C8CE6F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK::ARI_IBIRfSetAntennaPortMappingResp_SDK(AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE6F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE6F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK::~ARI_IBIRfSetAntennaPortMappingResp_SDK(AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE6F0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK::~ARI_IBIRfSetAntennaPortMappingResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK::pack(AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E130200(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIRfSetAntennaPortMappingResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84508672;
}

AriSdk::MsgBase *AriSdk::ARI_IBISIMCardPresentReq_SDK::ARI_IBISIMCardPresentReq_SDK(AriSdk::ARI_IBISIMCardPresentReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4908000u, 0);
  *(_QWORD *)result = &off_24C8CE728;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4908000u, 0);
  *(_QWORD *)result = &off_24C8CE728;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISIMCardPresentReq_SDK::ARI_IBISIMCardPresentReq_SDK(AriSdk::ARI_IBISIMCardPresentReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE728;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE728;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISIMCardPresentReq_SDK::~ARI_IBISIMCardPresentReq_SDK(AriSdk::ARI_IBISIMCardPresentReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE728;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISIMCardPresentReq_SDK::~ARI_IBISIMCardPresentReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISIMCardPresentReq_SDK::pack(AriSdk::ARI_IBISIMCardPresentReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISIMCardPresentReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1304B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISIMCardPresentReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISIMCardPresentReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 76578816;
}

AriSdk::MsgBase *AriSdk::ARI_IBISIMCardPresentRspCb_SDK::ARI_IBISIMCardPresentRspCb_SDK(AriSdk::ARI_IBISIMCardPresentRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5108000u, 0);
  *(_QWORD *)result = &off_24C8CE760;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5108000u, 0);
  *(_QWORD *)result = &off_24C8CE760;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISIMCardPresentRspCb_SDK::ARI_IBISIMCardPresentRspCb_SDK(AriSdk::ARI_IBISIMCardPresentRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE760;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE760;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISIMCardPresentRspCb_SDK::~ARI_IBISIMCardPresentRspCb_SDK(AriSdk::ARI_IBISIMCardPresentRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE760;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISIMCardPresentRspCb_SDK::~ARI_IBISIMCardPresentRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISIMCardPresentRspCb_SDK::pack(AriSdk::ARI_IBISIMCardPresentRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISIMCardPresentRspCb_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E130770(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISIMCardPresentRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISIMCardPresentRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84967424;
}

AriSdk::MsgBase *AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK(AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5868000u, 0);
  *(_QWORD *)result = &off_24C8CE798;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5868000u, 0);
  *(_QWORD *)result = &off_24C8CE798;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK(AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE798;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE798;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK::~ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK(AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE798;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK::~ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK::pack(AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK::unpack(AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 8, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E1309F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_AriUtaModeInitialSwitchCompleteIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 92700672;
}

AriSdk::MsgBase *AriSdk::ARI_UtaMsCpsSetSvnReq_SDK::ARI_UtaMsCpsSetSvnReq_SDK(AriSdk::ARI_UtaMsCpsSetSvnReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4838000u, 0);
  *(_QWORD *)result = &off_24C8CE7D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4838000u, 0);
  *(_QWORD *)result = &off_24C8CE7D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaMsCpsSetSvnReq_SDK::ARI_UtaMsCpsSetSvnReq_SDK(AriSdk::ARI_UtaMsCpsSetSvnReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE7D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE7D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_UtaMsCpsSetSvnReq_SDK::~ARI_UtaMsCpsSetSvnReq_SDK(AriSdk::ARI_UtaMsCpsSetSvnReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE7D0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaMsCpsSetSvnReq_SDK::~ARI_UtaMsCpsSetSvnReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaMsCpsSetSvnReq_SDK::pack(AriSdk::ARI_UtaMsCpsSetSvnReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 1uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_UtaMsCpsSetSvnReq_SDK::unpack(AriMsg **this)
{
  _BYTE *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_BYTE *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 1, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_BYTE *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  return v3;
}

void sub_20E130CA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaMsCpsSetSvnReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaMsCpsSetSvnReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 75726848;
}

AriSdk::MsgBase *AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK::ARI_AriUtaMsCpsSetSvnRspCb_SDK(AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5038000u, 0);
  *(_QWORD *)result = &off_24C8CE808;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x5038000u, 0);
  *(_QWORD *)result = &off_24C8CE808;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK::ARI_AriUtaMsCpsSetSvnRspCb_SDK(AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE808;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CE808;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK::~ARI_AriUtaMsCpsSetSvnRspCb_SDK(AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CE808;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK::~ARI_AriUtaMsCpsSetSvnRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK::pack(AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E130F60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_AriUtaMsCpsSetSvnRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 84115456;
}

uint64_t ARI_AriMsgAttribResp_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 68190208)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0x10uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E131050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_AriMsgAttribReq_ENC(char *a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v7;
  uint64_t v8;
  int *EncodedBuf;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14[2];
  unint64_t v15;

  v15 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v7 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v13 = v7;
  *(_OWORD *)v14 = v7;
  v11 = v7;
  v12 = v7;
  AriMsg::AriMsg((AriMsg *)&v11, 0x4088000u);
  v8 = AriMsg::packParam((AriMsg *)&v11, 1, a1, 0x10uLL);
  if (!(_DWORD)v8)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v11, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v8 = 0;
      else
        v8 = 0xFFFFFFFFLL;
    }
    else
    {
      v8 = 0xFFFFFFFFLL;
    }
  }
  v14[0] = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v14[1]);
  return v8;
}

void sub_20E13111C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_AriMsgAttribReq_BLK(char *a1, int *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t Ctx;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4088000u);
  Ctx = AriMsg::packParam((AriMsg *)&v9, 1, a1, 0x10uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v9, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v9, a2);
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return Ctx;
}

void sub_20E1311F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_AriACK_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 67436544)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 8uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1312BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_AriNACK_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 67600384)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 8uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E13137C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBmmProvideBootTimeInfoRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4)
{
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, a1, a2);
  v7 = HIDWORD(v13);
  if (!HIDWORD(v13))
  {
    if (((DWORD1(v9) << 15) | ((_DWORD)v9 << 26)) == 89325568)
    {
      v7 = AriMsg::unparam((AriMsg *)&v9, 1, a3, 0xE1CuLL);
      if (!(_DWORD)v7)
        v7 = AriMsg::unparam((AriMsg *)&v9, 2, a4, 0x5A0uLL);
    }
    else
    {
      v7 = 4294967223;
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E131460(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBmmProvideBootTimeInfoReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4D30000u);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E131504(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBmmProvideBootTimeInfoReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0x4D30000u);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E1315B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspDebugJtagModeRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 89358336)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E131674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspDebugJtagModeReq_ENC(int a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  int v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0x4D38000u);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E131740(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspDebugJtagModeReq_BLK(int a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  int v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0x4D38000u);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E13181C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspStateGetRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4)
{
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, a1, a2);
  v7 = HIDWORD(v13);
  if (!HIDWORD(v13))
  {
    if (((DWORD1(v9) << 15) | ((_DWORD)v9 << 26)) == 84213760)
    {
      v7 = AriMsg::unparam((AriMsg *)&v9, 1, a3, 4uLL);
      if (!(_DWORD)v7)
        v7 = AriMsg::unparam((AriMsg *)&v9, 2, a4, 4uLL);
    }
    else
    {
      v7 = 4294967223;
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E131908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspStateGetReq_ENC(int a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  int v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0x4850000u);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E1319D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspStateGetReq_BLK(int a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  int v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0x4850000u);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E131AAC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspStateSetRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 84246528)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E131B74(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspStateSetReq_ENC(int a1, int a2, uint64_t a3, int **a4, unsigned int *a5)
{
  __int128 v7;
  uint64_t v8;
  int *EncodedBuf;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14[2];
  unint64_t v15;
  int v16;
  int v17;

  v16 = a2;
  v17 = a1;
  v15 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v7 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v13 = v7;
  *(_OWORD *)v14 = v7;
  v11 = v7;
  v12 = v7;
  AriMsg::AriMsg((AriMsg *)&v11, 0x4858000u);
  v8 = AriMsg::packParam((AriMsg *)&v11, 1, (char *)&v17, 4uLL);
  if (!(_DWORD)v8)
  {
    v8 = AriMsg::packParam((AriMsg *)&v11, 2, (char *)&v16, 4uLL);
    if (!(_DWORD)v8)
    {
      if (a4)
      {
        EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v11, a5);
        *a4 = EncodedBuf;
        if (EncodedBuf)
          v8 = 0;
        else
          v8 = 0xFFFFFFFFLL;
      }
      else
      {
        v8 = 0xFFFFFFFFLL;
      }
    }
  }
  v14[0] = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v14[1]);
  return v8;
}

void sub_20E131C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiBspStateSetReq_BLK(int a1, int a2, int *a3, uint64_t a4)
{
  __int128 v6;
  uint64_t Ctx;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;
  int v14;
  int v15;

  v14 = a2;
  v15 = a1;
  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4858000u);
  Ctx = AriMsg::packParam((AriMsg *)&v9, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriMsg::packParam((AriMsg *)&v9, 2, (char *)&v14, 4uLL);
    if (!(_DWORD)Ctx)
    {
      Ctx = AriHost::Send((AriMsg *)&v9, *a3, a4, 0, 20000);
      if (!(_DWORD)Ctx)
        Ctx = AriMsg::extractCtx((AriMsg *)&v9, a3);
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return Ctx;
}

void sub_20E131D58(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiGetCurrentBootStateRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 84312064)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E131E24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiGetCurrentBootStateReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4868000u);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E131EC8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiGetCurrentBootStateReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0x4868000u);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E131F78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsCpsGetCurrentBootStateRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4)
{
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, a1, a2);
  v7 = HIDWORD(v13);
  if (!HIDWORD(v13))
  {
    if (((DWORD1(v9) << 15) | ((_DWORD)v9 << 26)) == 83951616)
    {
      v7 = AriMsg::unparam((AriMsg *)&v9, 1, a3, 4uLL);
      if (!(_DWORD)v7)
        v7 = AriMsg::unparam((AriMsg *)&v9, 2, a4, 4uLL);
    }
    else
    {
      v7 = 4294967223;
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E132060(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsCpsReadMeidRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4)
{
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, a1, a2);
  v7 = HIDWORD(v13);
  if (!HIDWORD(v13))
  {
    if (((DWORD1(v9) << 15) | ((_DWORD)v9 << 26)) == 84475904)
    {
      v7 = AriMsg::unparam((AriMsg *)&v9, 1, a3, 4uLL);
      if (!(_DWORD)v7)
        v7 = AriMsg::unparam((AriMsg *)&v9, 2, a4, 0x18uLL);
    }
    else
    {
      v7 = 4294967223;
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E132148(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsCpsReadMeidReq_ENC(int a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  int v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0x4890000u);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E132214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsCpsReadMeidReq_BLK(int a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  int v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0x4890000u);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E1322EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsSimCardPresenceRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4)
{
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, a1, a2);
  v7 = HIDWORD(v13);
  if (!HIDWORD(v13))
  {
    if (((DWORD1(v9) << 15) | ((_DWORD)v9 << 26)) == 84180992)
    {
      v7 = AriMsg::unparam((AriMsg *)&v9, 1, a3, 4uLL);
      if (!(_DWORD)v7)
        v7 = AriMsg::unparam((AriMsg *)&v9, 2, a4, 4uLL);
    }
    else
    {
      v7 = 4294967223;
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E1323DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsSimCardPresenceReq_ENC(int a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  int v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0x4848000u);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E1324AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsSimCardPresenceReq_BLK(int a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  int v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0x4848000u);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E132588(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetFusingStateRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4)
{
  __int128 v6;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, a1, a2);
  v7 = HIDWORD(v13);
  if (!HIDWORD(v13))
  {
    if (((DWORD1(v9) << 15) | ((_DWORD)v9 << 26)) == 83984384)
    {
      v7 = AriMsg::unparam((AriMsg *)&v9, 1, a3, 4uLL);
      if (!(_DWORD)v7)
        v7 = AriMsg::unparam((AriMsg *)&v9, 2, a4, 4uLL);
    }
    else
    {
      v7 = 4294967223;
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E132678(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetFusingStateReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4818000u);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E132720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetFusingStateReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0x4818000u);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E1327D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetRandomNumRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 84082688)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0x24uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E132890(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetRandomNumReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4830000u);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E132930(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetRandomNumReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0x4830000u);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E1329DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetSNUMRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 84017152)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0x18uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E132A9C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetSNUMReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4820000u);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E132B3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetSNUMReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0x4820000u);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E132BE8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSysGetInfoRspCbV2_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 84410368)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0x208uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E132CA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSysGetInfoReqV2_ENC(int a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  int v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0x4880000u);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E132D70(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSysGetInfoReqV2_BLK(int a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  int v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0x4880000u);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E132E48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsCpsReadImeiRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4, char *a5, char *a6)
{
  __int128 v10;
  uint64_t v11;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  void *v16[2];
  unint64_t v17;

  v17 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v10 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v10 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v15 = v10;
  *(_OWORD *)v16 = v10;
  v13 = v10;
  v14 = v10;
  AriMsg::AriMsg((AriMsg *)&v13, a1, a2);
  v11 = HIDWORD(v17);
  if (!HIDWORD(v17))
  {
    if (((DWORD1(v13) << 15) | ((_DWORD)v13 << 26)) == 83918848)
    {
      v11 = AriMsg::unparam((AriMsg *)&v13, 1, a3, 4uLL);
      if (!(_DWORD)v11)
      {
        v11 = AriMsg::unparam((AriMsg *)&v13, 2, a4, 0x18uLL);
        if (!(_DWORD)v11)
        {
          v11 = AriMsg::unparam((AriMsg *)&v13, 3, a5, 0x11uLL);
          if (!(_DWORD)v11)
            v11 = AriMsg::unparam((AriMsg *)&v13, 4, a6, 0x11uLL);
        }
      }
    }
    else
    {
      v11 = 4294967223;
    }
  }
  v16[0] = 0;
  v14 = 0u;
  v15 = 0u;
  v13 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v16[1]);
  return v11;
}

void sub_20E132F80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsCpsReadImeiReq_ENC(int a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  int v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0x4808000u);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E133058(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiMsCpsReadImeiReq_BLK(int a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  int v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0x4808000u);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E133134(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_AriUtaMsCpsSetSvnRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == 84115456)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1331FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_UtaMsCpsSetSvnReq_ENC(char *a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v7;
  uint64_t v8;
  int *EncodedBuf;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14[2];
  unint64_t v15;

  v15 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v7 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v13 = v7;
  *(_OWORD *)v14 = v7;
  v11 = v7;
  v12 = v7;
  AriMsg::AriMsg((AriMsg *)&v11, 0x4838000u);
  v8 = AriMsg::packParam((AriMsg *)&v11, 1, a1, 1uLL);
  if (!(_DWORD)v8)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v11, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v8 = 0;
      else
        v8 = 0xFFFFFFFFLL;
    }
    else
    {
      v8 = 0xFFFFFFFFLL;
    }
  }
  v14[0] = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v14[1]);
  return v8;
}

void sub_20E1332C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_UtaMsCpsSetSvnReq_BLK(char *a1, int *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t Ctx;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, 0x4838000u);
  Ctx = AriMsg::packParam((AriMsg *)&v9, 1, a1, 1uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v9, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v9, a2);
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return Ctx;
}

void sub_20E1333A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = std::vector<char>::__vallocate[abi:ne180100](result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20E133420(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<char>::__vallocate[abi:ne180100](_QWORD *a1, size_t __sz)
{
  char *result;

  if ((__sz & 0x8000000000000000) != 0)
    std::vector<char>::__throw_length_error[abi:ne180100]();
  result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

void std::vector<char>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  std::logic_error *exception;

  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_24C8CD8F8, MEMORY[0x24BEDAAF0]);
}

void sub_20E1334CC(_Unwind_Exception *a1)
{
  void *v1;

  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  std::logic_error *result;

  result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x24BEDB8B8] + 16);
  return result;
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  std::bad_array_new_length *exception;
  std::bad_array_new_length *v1;

  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x24BEDB748], MEMORY[0x24BEDABB8]);
}

__n128 std::vector<char>::__move_assign(uint64_t a1, __n128 *a2)
{
  void *v4;
  __n128 result;

  v4 = *(void **)a1;
  if (v4)
  {
    *(_QWORD *)(a1 + 8) = v4;
    operator delete(v4);
    *(_QWORD *)a1 = 0;
    *(_QWORD *)(a1 + 8) = 0;
    *(_QWORD *)(a1 + 16) = 0;
  }
  result = *a2;
  *(__n128 *)a1 = *a2;
  *(_QWORD *)(a1 + 16) = a2[1].n128_u64[0];
  a2->n128_u64[0] = 0;
  a2->n128_u64[1] = 0;
  a2[1].n128_u64[0] = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK::ARI_IBINetDcIMSRegInformationUpdateReq_SDK(AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28848000u, 0);
  *(_QWORD *)result = &off_24C8CED50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28848000u, 0);
  *(_QWORD *)result = &off_24C8CED50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK::ARI_IBINetDcIMSRegInformationUpdateReq_SDK(AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CED50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CED50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK::~ARI_IBINetDcIMSRegInformationUpdateReq_SDK(AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CED50;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK::~ARI_IBINetDcIMSRegInformationUpdateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK::pack(AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK::unpack(AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E13396C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcIMSRegInformationUpdateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679772160;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK(AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29048000u, 0);
  *(_QWORD *)result = &off_24C8CED88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29048000u, 0);
  *(_QWORD *)result = &off_24C8CED88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK(AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CED88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CED88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK::~ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK(AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CED88;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK::~ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK::pack(AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK::unpack(AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E133CD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcIMSRegInformationUpdateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 688160768;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28810000u, 0);
  *(_QWORD *)result = &off_24C8CEDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28810000u, 0);
  *(_QWORD *)result = &off_24C8CEDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEDC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK::~ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CEDC0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK::~ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK::pack(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK::unpack(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E133F50(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679542784;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29010000u, 0);
  *(_QWORD *)result = &off_24C8CEDF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29010000u, 0);
  *(_QWORD *)result = &off_24C8CEDF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEDF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEDF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK::~ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CEDF8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK::~ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK::pack(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E13437C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsGetImsRegStatusInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 687931392;
}

double AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK(AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x28808000u, 0);
  *(_QWORD *)v1 = &off_24C8CEE30;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x28808000u, 0);
  *(_QWORD *)v1 = &off_24C8CEE30;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK(AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CEE30;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CEE30;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK::~ARI_IBINetDcImsProvideImsRegStatusInfo_SDK(AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8CEE30;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK::~ARI_IBINetDcImsProvideImsRegStatusInfo_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK::pack(AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK::unpack(AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v16 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (_DWORD *)operator new();
    *v11 = *v10;
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v15 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v13, 4, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E134ABC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsProvideImsRegStatusInfo_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679510016;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK(AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29008000u, 0);
  *(_QWORD *)result = &off_24C8CEE68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29008000u, 0);
  *(_QWORD *)result = &off_24C8CEE68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK(AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEE68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEE68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK::~ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK(AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CEE68;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK::~ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK::pack(AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK::unpack(AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E134D64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsProvideImsRegStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 687898624;
}

double AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x28830000u, 0);
  *(_QWORD *)v1 = &off_24C8CEEA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x28830000u, 0);
  *(_QWORD *)v1 = &off_24C8CEEA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CEEA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CEEA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK::~ARI_IBINetDcImsRegistrationStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8CEEA0;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK::~ARI_IBINetDcImsRegistrationStatusInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK::pack(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK::unpack(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v16 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (_DWORD *)operator new();
    *v11 = *v10;
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v15 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v13, 4, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E135490(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679673856;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29030000u, 0);
  *(_QWORD *)result = &off_24C8CEED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29030000u, 0);
  *(_QWORD *)result = &off_24C8CEED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK::~ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CEED8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK::~ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK::pack(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E135800(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsRegistrationStatusInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 688062464;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK::ARI_IBINetDcImsSignallingStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28838000u, 0);
  *(_QWORD *)result = &off_24C8CEF10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28838000u, 0);
  *(_QWORD *)result = &off_24C8CEF10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK::ARI_IBINetDcImsSignallingStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEF10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEF10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK::~ARI_IBINetDcImsSignallingStatusInfoReq_SDK(AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CEF10;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK::~ARI_IBINetDcImsSignallingStatusInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK::pack(AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK::unpack(AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E135CAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsSignallingStatusInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679706624;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK(AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29038000u, 0);
  *(_QWORD *)result = &off_24C8CEF48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29038000u, 0);
  *(_QWORD *)result = &off_24C8CEF48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK(AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEF48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEF48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK::~ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK(AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CEF48;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK::~ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK::pack(AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK::unpack(AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E136010(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcImsSignallingStatusInfoRspcb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 688095232;
}

double AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x28820000u, 0);
  *(_QWORD *)v1 = &off_24C8CEF80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x28820000u, 0);
  *(_QWORD *)v1 = &off_24C8CEF80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

double AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CEF80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CEF80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK::~ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)this = &off_24C8CEF80;
  v2 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK::~ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK::pack(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        result = 0;
                        *a2 = (AriMsg *)*((_QWORD *)this + 6);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK::unpack(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;

  v26 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v26, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v26;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v25 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v24 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v23 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v22 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v21 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v20 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v19 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v18 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v17 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v16 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v14, 4, &v16, 0);
  if (!(_DWORD)v3 && v16)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
  MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  return v3;
}

void sub_20E136B18(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679608320;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29020000u, 0);
  *(_QWORD *)result = &off_24C8CEFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29020000u, 0);
  *(_QWORD *)result = &off_24C8CEFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEFB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK::~ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CEFB8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK::~ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK::pack(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK::unpack(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E136EB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcSetVoiceDomainPreferenceConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 687996928;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK::ARI_IBINetDcSsacBarringInfoReq_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28818000u, 0);
  *(_QWORD *)result = &off_24C8CEFF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28818000u, 0);
  *(_QWORD *)result = &off_24C8CEFF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK::ARI_IBINetDcSsacBarringInfoReq_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEFF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CEFF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK::~ARI_IBINetDcSsacBarringInfoReq_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CEFF0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK::~ARI_IBINetDcSsacBarringInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK::pack(AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK::unpack(AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E137134(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcSsacBarringInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679575552;
}

double AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK::ARI_IBINetDcSsacBarringInfoRspCb_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x29018000u, 0);
  *(_QWORD *)v1 = &off_24C8CF028;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x29018000u, 0);
  *(_QWORD *)v1 = &off_24C8CF028;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK::ARI_IBINetDcSsacBarringInfoRspCb_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF028;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF028;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK::~ARI_IBINetDcSsacBarringInfoRspCb_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8CF028;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK::~ARI_IBINetDcSsacBarringInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK::pack(AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 8uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 8, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  }
  v11 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 8, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 11, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
  return v3;
}

void sub_20E137678(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcSsacBarringInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 687964160;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK::ARI_IBINetDcSsacBarringInfoIndCb_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29810000u, 0);
  *(_QWORD *)result = &off_24C8CF060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x29810000u, 0);
  *(_QWORD *)result = &off_24C8CF060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK::ARI_IBINetDcSsacBarringInfoIndCb_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK::~ARI_IBINetDcSsacBarringInfoIndCb_SDK(AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CF060;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK::~ARI_IBINetDcSsacBarringInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK::pack(AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 8uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK::unpack(AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v8 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 8, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  return v3;
}

void sub_20E137AD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcSsacBarringInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 696320000;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK::ARI_IBINetDcUacAccessCheckReq_SDK(AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28840000u, 0);
  *(_QWORD *)result = &off_24C8CF098;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x28840000u, 0);
  *(_QWORD *)result = &off_24C8CF098;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK::ARI_IBINetDcUacAccessCheckReq_SDK(AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF098;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF098;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK::~ARI_IBINetDcUacAccessCheckReq_SDK(AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF098;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK::~ARI_IBINetDcUacAccessCheckReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK::pack(AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK::unpack(AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E137E38(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcUacAccessCheckReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 679739392;
}

double AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK::ARI_IBINetDcUacAccessCheckRspCb_SDK(AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x29040000u, 0);
  *(_QWORD *)v1 = &off_24C8CF0D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x29040000u, 0);
  *(_QWORD *)v1 = &off_24C8CF0D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK::ARI_IBINetDcUacAccessCheckRspCb_SDK(AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF0D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF0D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK::~ARI_IBINetDcUacAccessCheckRspCb_SDK(AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8CF0D0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK::~ARI_IBINetDcUacAccessCheckRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK::pack(AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK::unpack(AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E138378(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcUacAccessCheckRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 688128000;
}

double AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK::ARI_IBINetDcUacBarringInfoIndCb_SDK(AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x29818000u, 0);
  *(_QWORD *)v1 = &off_24C8CF108;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x29818000u, 0);
  *(_QWORD *)v1 = &off_24C8CF108;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK::ARI_IBINetDcUacBarringInfoIndCb_SDK(AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF108;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF108;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK::~ARI_IBINetDcUacBarringInfoIndCb_SDK(AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8CF108;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK::~ARI_IBINetDcUacBarringInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK::pack(AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK::unpack(AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v16 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v15 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v14 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E138BF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDcUacBarringInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 696352768;
}

double AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK::ARI_IBICallPsActivateStatusIndCb_SDK(AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD808000u, 0);
  *(_QWORD *)v1 = &off_24C8CF2F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  *((_OWORD *)v1 + 23) = 0u;
  *((_OWORD *)v1 + 24) = 0u;
  *((_OWORD *)v1 + 25) = 0u;
  *((_OWORD *)v1 + 26) = 0u;
  *((_OWORD *)v1 + 27) = 0u;
  *((_OWORD *)v1 + 28) = 0u;
  *((_OWORD *)v1 + 29) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD808000u, 0);
  *(_QWORD *)v1 = &off_24C8CF2F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  *((_OWORD *)v1 + 23) = 0u;
  *((_OWORD *)v1 + 24) = 0u;
  *((_OWORD *)v1 + 25) = 0u;
  *((_OWORD *)v1 + 26) = 0u;
  *((_OWORD *)v1 + 27) = 0u;
  *((_OWORD *)v1 + 28) = 0u;
  *((_OWORD *)v1 + 29) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK::ARI_IBICallPsActivateStatusIndCb_SDK(AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF2F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_OWORD *)v3 + 25) = 0u;
  *((_OWORD *)v3 + 26) = 0u;
  *((_OWORD *)v3 + 27) = 0u;
  *((_OWORD *)v3 + 28) = 0u;
  *((_OWORD *)v3 + 29) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF2F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_OWORD *)v3 + 25) = 0u;
  *((_OWORD *)v3 + 26) = 0u;
  *((_OWORD *)v3 + 27) = 0u;
  *((_OWORD *)v3 + 28) = 0u;
  *((_OWORD *)v3 + 29) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK::~ARI_IBICallPsActivateStatusIndCb_SDK(AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  *(_QWORD *)this = &off_24C8CF2F0;
  v2 = *((_QWORD *)this + 59);
  *((_QWORD *)this + 59) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 58);
  *((_QWORD *)this + 58) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 55);
  if (v4)
  {
    *((_QWORD *)this + 56) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 54);
  *((_QWORD *)this + 54) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 53);
  *((_QWORD *)this + 53) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4045BD7913);
  v7 = *((_QWORD *)this + 52);
  *((_QWORD *)this + 52) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 51);
  *((_QWORD *)this + 51) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C40AC189338);
  v9 = *((_QWORD *)this + 50);
  *((_QWORD *)this + 50) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40AC189338);
  v10 = *((_QWORD *)this + 49);
  *((_QWORD *)this + 49) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40AC189338);
  v11 = *((_QWORD *)this + 48);
  *((_QWORD *)this + 48) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C40AC189338);
  v12 = *((_QWORD *)this + 47);
  *((_QWORD *)this + 47) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
  v13 = *((_QWORD *)this + 46);
  *((_QWORD *)this + 46) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 45);
  *((_QWORD *)this + 45) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4000313F17);
  v15 = *((_QWORD *)this + 44);
  *((_QWORD *)this + 44) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4080B1215BLL);
  v16 = *((_QWORD *)this + 43);
  *((_QWORD *)this + 43) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  v17 = *((_QWORD *)this + 42);
  *((_QWORD *)this + 42) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  v18 = (void *)*((_QWORD *)this + 39);
  if (v18)
  {
    *((_QWORD *)this + 40) = v18;
    operator delete(v18);
  }
  v19 = *((_QWORD *)this + 38);
  *((_QWORD *)this + 38) = 0;
  if (v19)
    MEMORY[0x212BB9B60](v19, 0x1000C4077774924);
  v20 = *((_QWORD *)this + 37);
  *((_QWORD *)this + 37) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
  v21 = *((_QWORD *)this + 36);
  *((_QWORD *)this + 36) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C4077774924);
  v22 = *((_QWORD *)this + 35);
  *((_QWORD *)this + 35) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C40B04AA6E5);
  v23 = *((_QWORD *)this + 34);
  *((_QWORD *)this + 34) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C40FF89C88ELL);
  v24 = *((_QWORD *)this + 33);
  *((_QWORD *)this + 33) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C40B8E3674DLL);
  v25 = *((_QWORD *)this + 32);
  *((_QWORD *)this + 32) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  v26 = (void *)*((_QWORD *)this + 29);
  if (v26)
  {
    *((_QWORD *)this + 30) = v26;
    operator delete(v26);
  }
  v27 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C4077774924);
  v28 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v28)
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  v29 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v29)
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  v30 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v30)
    MEMORY[0x212BB9B60](v30, 0x1000C4000313F17);
  v31 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v31)
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
  v32 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v32)
    MEMORY[0x212BB9B60](v32, 0x1000C4052888210);
  v33 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v33)
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
  v34 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v34)
    MEMORY[0x212BB9B60](v34, 0x1000C4052888210);
  v35 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v35)
    MEMORY[0x212BB9B60](v35, 0x1000C40B4868423);
  v36 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v36)
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
  v37 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v37)
    MEMORY[0x212BB9B60](v37, 0x1000C40FF89C88ELL);
  v38 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v38)
    MEMORY[0x212BB9B60](v38, 0x1000C4052888210);
  v39 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v39)
    MEMORY[0x212BB9B60](v39, 0x1000C40A86A77D5);
  v40 = (void *)*((_QWORD *)this + 13);
  if (v40)
  {
    *((_QWORD *)this + 14) = v40;
    operator delete(v40);
  }
  v41 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v41)
    MEMORY[0x212BB9B60](v41, 0x1000C40504FFAC1);
  v42 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v42)
    MEMORY[0x212BB9B60](v42, 0x1000C4052888210);
  v43 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v43)
    MEMORY[0x212BB9B60](v43, 0x1000C4052888210);
  v44 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v44)
    MEMORY[0x212BB9B60](v44, 0x1000C4052888210);
  v45 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v45)
    MEMORY[0x212BB9B60](v45, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK::~ARI_IBICallPsActivateStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK::pack(AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  _BYTE *v10;
  _BYTE *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  _BYTE *v25;
  _BYTE *v26;
  const void *v27;
  const void *v28;
  const void *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  _BYTE *v34;
  _BYTE *v35;
  const void *v36;
  const void *v37;
  const void *v38;
  const void *v39;
  const void *v40;
  const void *v41;
  const void *v42;
  const void *v43;
  const void *v44;
  const void *v45;
  const void *v46;
  const void *v47;
  const void *v48;
  _BYTE *v49;
  _BYTE *v50;
  const void *v51;
  const void *v52;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0x18uLL, 0), !(_DWORD)result))
          {
            v10 = (_BYTE *)*((_QWORD *)this + 13);
            if (!v10
              || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, v11 - v10, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 0x14uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, 4uLL, 0), !(_DWORD)result))
                {
                  v14 = (const void *)*((_QWORD *)this + 18);
                  if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v14, 0x48uLL, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, 4uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, 0x14uLL, 0), !(_DWORD)result))
                      {
                        v17 = (const void *)*((_QWORD *)this + 21);
                        if (!v17
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v17, 4uLL, 0), !(_DWORD)result))
                        {
                          v18 = (const void *)*((_QWORD *)this + 22);
                          if (!v18
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v18, 4uLL, 0), !(_DWORD)result))
                          {
                            v19 = (const void *)*((_QWORD *)this + 23);
                            if (!v19
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v19, 4uLL, 0), !(_DWORD)result))
                            {
                              v20 = (const void *)*((_QWORD *)this + 24);
                              if (!v20
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v20, 4uLL, 0), !(_DWORD)result))
                              {
                                v21 = (const void *)*((_QWORD *)this + 25);
                                if (!v21
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v21, 8uLL, 0), !(_DWORD)result))
                                {
                                  v22 = (const void *)*((_QWORD *)this + 26);
                                  if (!v22
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v22, 4uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v23 = (const void *)*((_QWORD *)this + 27);
                                    if (!v23
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v23, 4uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v24 = (const void *)*((_QWORD *)this + 28);
                                      if (!v24
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v24, 1uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v25 = (_BYTE *)*((_QWORD *)this + 29);
                                        if (!v25
                                          || (v26 = (_BYTE *)*((_QWORD *)this + 30), v25 == v26)
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v25, v26 - v25, 0),
                                              !(_DWORD)result))
                                        {
                                          v27 = (const void *)*((_QWORD *)this + 32);
                                          if (!v27
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v27, 4uLL, 0),
                                                !(_DWORD)result))
                                          {
                                            v28 = (const void *)*((_QWORD *)this + 33);
                                            if (!v28
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v28, 0x480uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v29 = (const void *)*((_QWORD *)this + 34);
                                              if (!v29
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v29, 0x48uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v30 = (const void *)*((_QWORD *)this + 35);
                                                if (!v30
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v30, 0x24uLL, 0), !(_DWORD)result))
                                                {
                                                  v31 = (const void *)*((_QWORD *)this + 36);
                                                  if (!v31
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 25, v31, 1uLL, 0), !(_DWORD)result))
                                                  {
                                                    v32 = (const void *)*((_QWORD *)this + 37);
                                                    if (!v32
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v32, 1uLL, 0), !(_DWORD)result))
                                                    {
                                                      v33 = (const void *)*((_QWORD *)this + 38);
                                                      if (!v33
                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v33, 1uLL, 0), !(_DWORD)result))
                                                      {
                                                        v34 = (_BYTE *)*((_QWORD *)this + 39);
                                                        if (!v34
                                                          || (v35 = (_BYTE *)*((_QWORD *)this + 40), v34 == v35)
                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 28, v34, v35 - v34, 0), !(_DWORD)result))
                                                        {
                                                          v36 = (const void *)*((_QWORD *)this + 42);
                                                          if (!v36
                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v36, 4uLL, 0), !(_DWORD)result))
                                                          {
                                                            v37 = (const void *)*((_QWORD *)this + 43);
                                                            if (!v37
                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v37, 4uLL, 0), !(_DWORD)result))
                                                            {
                                                              v38 = (const void *)*((_QWORD *)this + 44);
                                                              if (!v38
                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 31, v38, 0xAuLL, 0), !(_DWORD)result))
                                                              {
                                                                v39 = (const void *)*((_QWORD *)this + 45);
                                                                if (!v39
                                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 32, v39, 8uLL, 0), !(_DWORD)result))
                                                                {
                                                                  v40 = (const void *)*((_QWORD *)this + 46);
                                                                  if (!v40
                                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 33, v40, 4uLL, 0), !(_DWORD)result))
                                                                  {
                                                                    v41 = (const void *)*((_QWORD *)this + 47);
                                                                    if (!v41
                                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 34, v41, 2uLL, 0), !(_DWORD)result))
                                                                    {
                                                                      v42 = (const void *)*((_QWORD *)this + 48);
                                                                      if (!v42
                                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 35, v42, 0x102uLL, 0), !(_DWORD)result))
                                                                      {
                                                                        v43 = (const void *)*((_QWORD *)this + 49);
                                                                        if (!v43
                                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 36, v43, 0x102uLL, 0), !(_DWORD)result))
                                                                        {
                                                                          v44 = (const void *)*((_QWORD *)this + 50);
                                                                          if (!v44
                                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 37, v44, 0x102uLL, 0), !(_DWORD)result))
                                                                          {
                                                                            v45 = (const void *)*((_QWORD *)this + 51);
                                                                            if (!v45
                                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 38, v45, 0x102uLL, 0), !(_DWORD)result))
                                                                            {
                                                                              v46 = (const void *)*((_QWORD *)this + 52);
                                                                              if (!v46
                                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 39, v46, 4uLL, 0), !(_DWORD)result))
                                                                              {
                                                                                v47 = (const void *)*((_QWORD *)this + 53);
                                                                                if (!v47
                                                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 40, v47, 0x28uLL, 0), !(_DWORD)result))
                                                                                {
                                                                                  v48 = (const void *)*((_QWORD *)this + 54);
                                                                                  if (!v48
                                                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 41, v48, 1uLL, 0), !(_DWORD)result))
                                                                                  {
                                                                                    v49 = (_BYTE *)*((_QWORD *)this + 55);
                                                                                    if (!v49
                                                                                      || (v50 = (_BYTE *)*((_QWORD *)this + 56),
                                                                                          v49 == v50)
                                                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 42, v49, v50 - v49, 0), !(_DWORD)result))
                                                                                    {
                                                                                      v51 = (const void *)*((_QWORD *)this + 58);
                                                                                      if (!v51
                                                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 43, v51, 4uLL, 0),
                                                                                            !(_DWORD)result))
                                                                                      {
                                                                                        v52 = (const void *)*((_QWORD *)this + 59);
                                                                                        if (!v52
                                                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 44, v52, 4uLL, 0),
                                                                                              !(_DWORD)result))
                                                                                        {
                                                                                          result = 0;
                                                                                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK::unpack(AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  _QWORD *v12;
  _DWORD *v13;
  _OWORD *v14;
  _DWORD *v15;
  _QWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  _QWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  _BYTE *v24;
  void *v25;
  _DWORD *v26;
  void *v27;
  _OWORD *v28;
  _OWORD *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  void *v33;
  _DWORD *v34;
  _DWORD *v35;
  _WORD *v36;
  _QWORD *v37;
  _DWORD *v38;
  _WORD *v39;
  _OWORD *v40;
  _OWORD *v41;
  _OWORD *v42;
  _OWORD *v43;
  _DWORD *v44;
  _OWORD *v45;
  _BYTE *v46;
  void *v47;
  _DWORD *v48;
  _DWORD *v49;
  __n128 __p;
  uint64_t v52;
  size_t __sz;
  BOOL v54;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_QWORD *)operator new();
  v10[1] = 0;
  v10[2] = 0;
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 24, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 12, (uint64_t)v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40504FFAC1);
  }
  v54 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v11 = (char *)operator new[]();
  *(_OWORD *)v11 = 0u;
  *((_OWORD *)v11 + 1) = 0u;
  *((_OWORD *)v11 + 2) = 0u;
  *((_OWORD *)v11 + 3) = 0u;
  *((_OWORD *)v11 + 4) = 0u;
  *((_OWORD *)v11 + 5) = 0u;
  *(_QWORD *)(v11 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 101, &v54, &__sz);
  if ((_DWORD)v3 || !v54)
  {
    MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v52 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v11, (uint64_t)&v11[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)((char *)this + 104), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v12 = (_QWORD *)operator new();
  *v12 = 0;
  v12[1] = 0;
  *((_DWORD *)v12 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v12, 20, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 16, (uint64_t)v12);
    MEMORY[0x212BB9B60](v12, 0x1000C40A86A77D5);
  }
  __p.n128_u8[0] = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v13, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v14 = (_OWORD *)operator new();
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  *((_QWORD *)v14 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v14, 72, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C40FF89C88ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos3g>::operator=<IBICallPsQos3g&,void>((uint64_t *)this + 18, (uint64_t)v14);
    MEMORY[0x212BB9B60](v14, 0x1000C40FF89C88ELL);
  }
  __p.n128_u8[0] = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v15, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v16 = (_QWORD *)operator new();
  *v16 = 0;
  v16[1] = 0;
  *((_DWORD *)v16 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v16, 20, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v16, 0x1000C40B4868423);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEpsQos>::operator=<IBICallPsEpsQos&,void>((uint64_t *)this + 20, (uint64_t)v16);
    MEMORY[0x212BB9B60](v16, 0x1000C40B4868423);
  }
  __p.n128_u8[0] = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v17, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v18, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v19, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v20, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 24, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v21 = (_QWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v21, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 25, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4000313F17);
  }
  __p.n128_u8[0] = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v22, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 26, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v23 = (_DWORD *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v23, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 27, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v24 = (_BYTE *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v24, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 28, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
  }
  v54 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v25 = (void *)operator new[]();
  bzero(v25, 0xA40uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v25, 2624, &v54, &__sz);
  if ((_DWORD)v3 || !v54)
  {
    MEMORY[0x212BB9B48](v25, 0x1000C80EE63A519);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v52 = 0;
    __p = 0uLL;
    std::vector<IBICallPsPacketFilter>::__init_with_size[abi:ne180100]<IBICallPsPacketFilter*,IBICallPsPacketFilter*>(&__p, v25, (uint64_t)v25 + 164 * (__sz / 0xA4), __sz / 0xA4);
    AriSdk::TlvArray<IBICallPsPacketFilter,16ul>::operator=((uint64_t)this + 232, (uint64_t *)&__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v25, 0x1000C80EE63A519);
  }
  __p.n128_u8[0] = 0;
  v26 = (_DWORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v26, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 32, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v27 = (void *)operator new();
  bzero(v27, 0x480uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v27, 1152, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v27, 0x1000C40B8E3674DLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsNwPcoParams>::operator=<IBICallPsNwPcoParams&,void>((uint64_t *)this + 33, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C40B8E3674DLL);
  }
  __p.n128_u8[0] = 0;
  v28 = (_OWORD *)operator new();
  *v28 = 0u;
  v28[1] = 0u;
  v28[2] = 0u;
  v28[3] = 0u;
  *((_QWORD *)v28 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v28, 72, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v28, 0x1000C40FF89C88ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos3g>::operator=<IBICallPsQos3g&,void>((uint64_t *)this + 34, (uint64_t)v28);
    MEMORY[0x212BB9B60](v28, 0x1000C40FF89C88ELL);
  }
  __p.n128_u8[0] = 0;
  v29 = (_OWORD *)operator new();
  *v29 = 0u;
  v29[1] = 0u;
  *((_DWORD *)v29 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v29, 36, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v29, 0x1000C40B04AA6E5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEpsQos_V1>::operator=<IBICallPsEpsQos_V1&,void>((uint64_t *)this + 35, (uint64_t)v29);
    MEMORY[0x212BB9B60](v29, 0x1000C40B04AA6E5);
  }
  __p.n128_u8[0] = 0;
  v30 = (_BYTE *)operator new();
  *v30 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 25, v30, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v30, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 36, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v31 = (_BYTE *)operator new();
  *v31 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v31, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v31, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 37, v31);
    MEMORY[0x212BB9B60](v31, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v32 = (_BYTE *)operator new();
  *v32 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v32, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v32, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 38, v32);
    MEMORY[0x212BB9B60](v32, 0x1000C4077774924);
  }
  v54 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v33 = (void *)operator new[]();
  bzero(v33, 0x18E4uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 28, v33, 6372, &v54, &__sz);
  if ((_DWORD)v3 || !v54)
  {
    MEMORY[0x212BB9B48](v33, 0x1000C8091CD251ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v52 = 0;
    __p = 0uLL;
    std::vector<IBICallPsQosRule>::__init_with_size[abi:ne180100]<IBICallPsQosRule*,IBICallPsQosRule*>(&__p, v33, (uint64_t)v33 + 2124 * (__sz / 0x84C), __sz / 0x84C);
    AriSdk::TlvArray<IBICallPsQosRule,3ul>::operator=((uint64_t)this + 312, (uint64_t *)&__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v33, 0x1000C8091CD251ALL);
  }
  __p.n128_u8[0] = 0;
  v34 = (_DWORD *)operator new();
  *v34 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v34, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v34, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 42, v34);
    MEMORY[0x212BB9B60](v34, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v35 = (_DWORD *)operator new();
  *v35 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v35, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 43, v35);
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v36 = (_WORD *)operator new();
  *(_QWORD *)v36 = 0;
  v36[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 31, v36, 10, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v36, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 44, (uint64_t)v36);
    MEMORY[0x212BB9B60](v36, 0x1000C4080B1215BLL);
  }
  __p.n128_u8[0] = 0;
  v37 = (_QWORD *)operator new();
  *v37 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 32, v37, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v37, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 45, v37);
    MEMORY[0x212BB9B60](v37, 0x1000C4000313F17);
  }
  __p.n128_u8[0] = 0;
  v38 = (_DWORD *)operator new();
  *v38 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 33, v38, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v38, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 46, v38);
    MEMORY[0x212BB9B60](v38, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v39 = (_WORD *)operator new();
  *v39 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 34, v39, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v39, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 47, v39);
    MEMORY[0x212BB9B60](v39, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v40 = (_OWORD *)operator new();
  *v40 = 0u;
  v40[1] = 0u;
  v40[2] = 0u;
  v40[3] = 0u;
  v40[4] = 0u;
  v40[5] = 0u;
  v40[6] = 0u;
  v40[7] = 0u;
  v40[8] = 0u;
  v40[9] = 0u;
  v40[10] = 0u;
  v40[11] = 0u;
  v40[12] = 0u;
  v40[13] = 0u;
  v40[14] = 0u;
  v40[15] = 0u;
  *((_WORD *)v40 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 35, v40, 258, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v40, 0x1000C40AC189338);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsDnsAuthDN>::operator=<IBICallPsDnsAuthDN&,void>((uint64_t *)this + 48, v40);
    MEMORY[0x212BB9B60](v40, 0x1000C40AC189338);
  }
  __p.n128_u8[0] = 0;
  v41 = (_OWORD *)operator new();
  *v41 = 0u;
  v41[1] = 0u;
  v41[2] = 0u;
  v41[3] = 0u;
  v41[4] = 0u;
  v41[5] = 0u;
  v41[6] = 0u;
  v41[7] = 0u;
  v41[8] = 0u;
  v41[9] = 0u;
  v41[10] = 0u;
  v41[11] = 0u;
  v41[12] = 0u;
  v41[13] = 0u;
  v41[14] = 0u;
  v41[15] = 0u;
  *((_WORD *)v41 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 36, v41, 258, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v41, 0x1000C40AC189338);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsDnsAuthDN>::operator=<IBICallPsDnsAuthDN&,void>((uint64_t *)this + 49, v41);
    MEMORY[0x212BB9B60](v41, 0x1000C40AC189338);
  }
  __p.n128_u8[0] = 0;
  v42 = (_OWORD *)operator new();
  *v42 = 0u;
  v42[1] = 0u;
  v42[2] = 0u;
  v42[3] = 0u;
  v42[4] = 0u;
  v42[5] = 0u;
  v42[6] = 0u;
  v42[7] = 0u;
  v42[8] = 0u;
  v42[9] = 0u;
  v42[10] = 0u;
  v42[11] = 0u;
  v42[12] = 0u;
  v42[13] = 0u;
  v42[14] = 0u;
  v42[15] = 0u;
  *((_WORD *)v42 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 37, v42, 258, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v42, 0x1000C40AC189338);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsDnsAuthDN>::operator=<IBICallPsDnsAuthDN&,void>((uint64_t *)this + 50, v42);
    MEMORY[0x212BB9B60](v42, 0x1000C40AC189338);
  }
  __p.n128_u8[0] = 0;
  v43 = (_OWORD *)operator new();
  *v43 = 0u;
  v43[1] = 0u;
  v43[2] = 0u;
  v43[3] = 0u;
  v43[4] = 0u;
  v43[5] = 0u;
  v43[6] = 0u;
  v43[7] = 0u;
  v43[8] = 0u;
  v43[9] = 0u;
  v43[10] = 0u;
  v43[11] = 0u;
  v43[12] = 0u;
  v43[13] = 0u;
  v43[14] = 0u;
  v43[15] = 0u;
  *((_WORD *)v43 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 38, v43, 258, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v43, 0x1000C40AC189338);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsDnsAuthDN>::operator=<IBICallPsDnsAuthDN&,void>((uint64_t *)this + 51, v43);
    MEMORY[0x212BB9B60](v43, 0x1000C40AC189338);
  }
  __p.n128_u8[0] = 0;
  v44 = (_DWORD *)operator new();
  *v44 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 39, v44, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v44, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 52, v44);
    MEMORY[0x212BB9B60](v44, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v45 = (_OWORD *)operator new();
  *v45 = 0u;
  v45[1] = 0u;
  *((_QWORD *)v45 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 40, v45, 40, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v45, 0x1000C4045BD7913);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 53, (uint64_t)v45);
    MEMORY[0x212BB9B60](v45, 0x1000C4045BD7913);
  }
  __p.n128_u8[0] = 0;
  v46 = (_BYTE *)operator new();
  *v46 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 41, v46, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v46, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 54, v46);
    MEMORY[0x212BB9B60](v46, 0x1000C4077774924);
  }
  v54 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v47 = (void *)operator new[]();
  bzero(v47, 0x840uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 42, v47, 2112, &v54, &__sz);
  if ((_DWORD)v3 || !v54)
  {
    MEMORY[0x212BB9B48](v47, 0x1000C805A4CDF4ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v52 = 0;
    __p = 0uLL;
    std::vector<IBICallPsPacketFilter_V2>::__init_with_size[abi:ne180100]<IBICallPsPacketFilter_V2*,IBICallPsPacketFilter_V2*>(&__p, v47, (uint64_t)v47 + 132 * (__sz / 0x84), __sz / 0x84);
    AriSdk::TlvArray<IBICallPsPacketFilter_V2,16ul>::operator=((uint64_t)this + 440, (uint64_t *)&__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v47, 0x1000C805A4CDF4ALL);
  }
  __p.n128_u8[0] = 0;
  v48 = (_DWORD *)operator new();
  *v48 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 43, v48, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v48, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 58, v48);
    MEMORY[0x212BB9B60](v48, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v49 = (_DWORD *)operator new();
  *v49 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 44, v49, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 59, v49);
  MEMORY[0x212BB9B60](v49, 0x1000C4052888210);
  return v3;
}

void sub_20E13B544(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40504FFAC1);
  return a1;
}

std::vector<int> *AriSdk::TlvArray<char,101ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x66)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 101);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E13B950(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *AriSdk::Tlv<IBICallPsQos3g>::operator=<IBICallPsQos3g&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v5;
  *(_QWORD *)(v4 + 64) = *(_QWORD *)(a2 + 64);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v6;
  v7 = *a1;
  *a1 = v4;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40FF89C88ELL);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsEpsQos>::operator=<IBICallPsEpsQos&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_DWORD *)(v4 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40B4868423);
  return a1;
}

uint64_t *AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>(uint64_t *a1, _BYTE *a2)
{
  _BYTE *v4;
  uint64_t v5;

  v4 = (_BYTE *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return a1;
}

uint64_t AriSdk::TlvArray<IBICallPsPacketFilter,16ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if (0x8F9C18F9C18F9C19 * ((v4 - *a2) >> 2) < 0x11)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0x8F9C18F9C18F9C19 * ((a2[1] - *a2) >> 2), 16);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E13BBBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *AriSdk::Tlv<IBICallPsNwPcoParams>::operator=<IBICallPsNwPcoParams&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x480uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40B8E3674DLL);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsEpsQos_V1>::operator=<IBICallPsEpsQos_V1&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *a1;
  *a1 = v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40B04AA6E5);
  return a1;
}

uint64_t AriSdk::TlvArray<IBICallPsQosRule,3ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if (0xC15367A74ABA181BLL * ((v4 - *a2) >> 2) < 4)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0xC15367A74ABA181BLL * ((a2[1] - *a2) >> 2), 3);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E13BDBC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_QWORD *)v4 = *(_QWORD *)a2;
  *(_WORD *)(v4 + 8) = *(_WORD *)(a2 + 8);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4080B1215BLL);
  return a1;
}

uint64_t *AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>(uint64_t *a1, _WORD *a2)
{
  _WORD *v4;
  uint64_t v5;

  v4 = (_WORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsDnsAuthDN>::operator=<IBICallPsDnsAuthDN&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x102uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40AC189338);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *a1;
  *a1 = v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4045BD7913);
  return a1;
}

uint64_t AriSdk::TlvArray<IBICallPsPacketFilter_V2,16ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if ((unint64_t)(0xF83E0F83E0F83E1 * ((v4 - *a2) >> 2)) < 0x11)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0xF83E0F83E0F83E1 * ((a2[1] - *a2) >> 2), 16);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E13C094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsActivateStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226525184;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC850000u, 0);
  *(_QWORD *)result = &off_24C8CF328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC850000u, 0);
  *(_QWORD *)result = &off_24C8CF328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK::~ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF328;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK::~ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK::pack(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK::unpack(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E13C3D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210042880;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD050000u, 0);
  *(_QWORD *)result = &off_24C8CF360;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD050000u, 0);
  *(_QWORD *)result = &off_24C8CF360;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF360;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF360;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK::~ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CF360;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK::~ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK::pack(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK::unpack(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E13C808(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsAllowMultiplePDNToSameApnRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218431488;
}

double AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK::ARI_IBICallPsBandwidthEstimationInd_SDK(AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD908000u, 0);
  *(_QWORD *)v1 = &off_24C8CF398;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD908000u, 0);
  *(_QWORD *)v1 = &off_24C8CF398;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK::ARI_IBICallPsBandwidthEstimationInd_SDK(AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF398;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF398;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK::~ARI_IBICallPsBandwidthEstimationInd_SDK(AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8CF398;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4005A209FELL);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40616D9E62);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40789AEA99);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4087442A64);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C408AA14F5FLL);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK::~ARI_IBICallPsBandwidthEstimationInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK::pack(AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x24uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 0x24uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 0xCuLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK::unpack(AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_DWORD *)v5 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 36, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C408AA14F5FLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiSecNonce>::operator=<CsiSecNonce&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C408AA14F5FLL);
  }
  v18 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 8, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v17 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 8, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4087442A64);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsDownlinkBwEstimation>::operator=<IBICallPsDownlinkBwEstimation&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4087442A64);
  }
  v16 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 8, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40789AEA99);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsUplinkBwEstimation>::operator=<IBICallPsUplinkBwEstimation&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40789AEA99);
  }
  v15 = 0;
  v9 = (_OWORD *)operator new();
  *v9 = 0u;
  v9[1] = 0u;
  *((_DWORD *)v9 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 36, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40616D9E62);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsConnectedStateSummary>::operator=<IBICallPsConnectedStateSummary&,void>((uint64_t *)this + 13, (uint64_t)v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40616D9E62);
  }
  v14 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *(_QWORD *)v11 = 0;
  v11[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 12, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<IBICallPsNr5gNeighborCellInfo>::operator=<IBICallPsNr5gNeighborCellInfo&,void>((uint64_t *)this + 15, (uint64_t)v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4005A209FELL);
  return v3;
}

void sub_20E13D094(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4005A209FELL);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBICallPsDownlinkBwEstimation>::operator=<IBICallPsDownlinkBwEstimation&,void>(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4087442A64);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsUplinkBwEstimation>::operator=<IBICallPsUplinkBwEstimation&,void>(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40789AEA99);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsConnectedStateSummary>::operator=<IBICallPsConnectedStateSummary&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_DWORD *)(v4 + 32) = *(_DWORD *)(a2 + 32);
  v6 = *a1;
  *a1 = v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40616D9E62);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsNr5gNeighborCellInfo>::operator=<IBICallPsNr5gNeighborCellInfo&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_QWORD *)v4 = *(_QWORD *)a2;
  *(_DWORD *)(v4 + 8) = *(_DWORD *)(a2 + 8);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4005A209FELL);
  return a1;
}

BOOL AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsBandwidthEstimationInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227573760;
}

double AriSdk::ARI_IBICallPsSBipConfigReq_SDK::ARI_IBICallPsSBipConfigReq_SDK(AriSdk::ARI_IBICallPsSBipConfigReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9F0000u, 0);
  *(_QWORD *)v1 = &off_24C8CF3D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9F0000u, 0);
  *(_QWORD *)v1 = &off_24C8CF3D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsSBipConfigReq_SDK::ARI_IBICallPsSBipConfigReq_SDK(AriSdk::ARI_IBICallPsSBipConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF3D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF3D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSBipConfigReq_SDK::~ARI_IBICallPsSBipConfigReq_SDK(AriSdk::ARI_IBICallPsSBipConfigReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CF3D0;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSBipConfigReq_SDK::~ARI_IBICallPsSBipConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSBipConfigReq_SDK::pack(AriSdk::ARI_IBICallPsSBipConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSBipConfigReq_SDK::unpack(AriSdk::ARI_IBICallPsSBipConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  void *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  unint64_t v17;
  BOOL v18;
  void *__p[2];
  char v20;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x4D8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1240, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    if (v17 >= 0x7C)
    {
      v9 = v17 / 0x7C;
      v10 = 124 * (v17 / 0x7C);
      v7 = (char *)operator new(v10);
      v8 = &v7[124 * v9];
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0xEF7BDEF7BDEF7BDFLL * ((v8 - v7) >> 2);
    if (v12 < 0xB)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v20 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, v11, v12, 10);
      if (v20 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80E5247016);
  return v3;
}

void sub_20E13D838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80E5247016);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSBipConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSBipConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211746816;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsBipConfigRspCb_SDK::ARI_IBICallPsBipConfigRspCb_SDK(AriSdk::ARI_IBICallPsBipConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1F0000u, 0);
  *(_QWORD *)result = &off_24C8CF408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1F0000u, 0);
  *(_QWORD *)result = &off_24C8CF408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsBipConfigRspCb_SDK::ARI_IBICallPsBipConfigRspCb_SDK(AriSdk::ARI_IBICallPsBipConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsBipConfigRspCb_SDK::~ARI_IBICallPsBipConfigRspCb_SDK(AriSdk::ARI_IBICallPsBipConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF408;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsBipConfigRspCb_SDK::~ARI_IBICallPsBipConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsBipConfigRspCb_SDK::pack(AriSdk::ARI_IBICallPsBipConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsBipConfigRspCb_SDK::unpack(AriSdk::ARI_IBICallPsBipConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E13DBE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsBipConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsBipConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220135424;
}

double AriSdk::ARI_IBICallPsBipQueryIndCb_SDK::ARI_IBICallPsBipQueryIndCb_SDK(AriSdk::ARI_IBICallPsBipQueryIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8A8000u, 0);
  *(_QWORD *)v1 = &off_24C8CF440;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8A8000u, 0);
  *(_QWORD *)v1 = &off_24C8CF440;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsBipQueryIndCb_SDK::ARI_IBICallPsBipQueryIndCb_SDK(AriSdk::ARI_IBICallPsBipQueryIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF440;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF440;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsBipQueryIndCb_SDK::~ARI_IBICallPsBipQueryIndCb_SDK(AriSdk::ARI_IBICallPsBipQueryIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8CF440;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40504FFAC1);
  v5 = (void *)*((_QWORD *)this + 9);
  if (v5)
  {
    *((_QWORD *)this + 10) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsBipQueryIndCb_SDK::~ARI_IBICallPsBipQueryIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsBipQueryIndCb_SDK::pack(AriSdk::ARI_IBICallPsBipQueryIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    v8 = !v6 || v6 == v7;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      v9 = (const void *)*((_QWORD *)this + 12);
      if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v9, 0x18uLL, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 2uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsBipQueryIndCb_SDK::unpack(AriSdk::ARI_IBICallPsBipQueryIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  char *v5;
  _QWORD *v6;
  _WORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  __n128 __p;
  uint64_t v13;
  size_t __sz;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (char *)operator new[]();
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *((_OWORD *)v5 + 5) = 0u;
  *(_QWORD *)(v5 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 101, &v15, &__sz);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v5, (uint64_t)&v5[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_QWORD *)operator new();
  v6[1] = 0;
  v6[2] = 0;
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 24, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 12, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3)
  {
    if (__p.n128_u8[0])
    {
      v9 = (_DWORD *)operator new();
      *v9 = *v8;
      v10 = *((_QWORD *)this + 14);
      *((_QWORD *)this + 14) = v9;
      if (v10)
        MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    }
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E13E264(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsBipQueryIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsBipQueryIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227180544;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsBreadButterModeReq_SDK::ARI_IBICallPsBreadButterModeReq_SDK(AriSdk::ARI_IBICallPsBreadButterModeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9B0000u, 0);
  *(_QWORD *)result = &off_24C8CF478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9B0000u, 0);
  *(_QWORD *)result = &off_24C8CF478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsBreadButterModeReq_SDK::ARI_IBICallPsBreadButterModeReq_SDK(AriSdk::ARI_IBICallPsBreadButterModeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsBreadButterModeReq_SDK::~ARI_IBICallPsBreadButterModeReq_SDK(AriSdk::ARI_IBICallPsBreadButterModeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CF478;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsBreadButterModeReq_SDK::~ARI_IBICallPsBreadButterModeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsBreadButterModeReq_SDK::pack(AriSdk::ARI_IBICallPsBreadButterModeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsBreadButterModeReq_SDK::unpack(AriSdk::ARI_IBICallPsBreadButterModeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E13E778(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsBreadButterModeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsBreadButterModeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211484672;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK::ARI_IBICallPsBreadButterModeRspCb_SDK(AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1B0000u, 0);
  *(_QWORD *)result = &off_24C8CF4B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1B0000u, 0);
  *(_QWORD *)result = &off_24C8CF4B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK::ARI_IBICallPsBreadButterModeRspCb_SDK(AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF4B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF4B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK::~ARI_IBICallPsBreadButterModeRspCb_SDK(AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF4B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK::~ARI_IBICallPsBreadButterModeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK::pack(AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK::unpack(AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E13EAD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsBreadButterModeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219873280;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK::ARI_IBICallPsCriticalPsSessionReq_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9D0000u, 0);
  *(_QWORD *)result = &off_24C8CF4E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9D0000u, 0);
  *(_QWORD *)result = &off_24C8CF4E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK::ARI_IBICallPsCriticalPsSessionReq_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF4E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF4E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK::~ARI_IBICallPsCriticalPsSessionReq_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF4E8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK::~ARI_IBICallPsCriticalPsSessionReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK::pack(AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK::unpack(AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E13EE58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsCriticalPsSessionReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211615744;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK::ARI_IBICallPsCriticalPsSessionRspCb_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1D0000u, 0);
  *(_QWORD *)result = &off_24C8CF520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1D0000u, 0);
  *(_QWORD *)result = &off_24C8CF520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK::ARI_IBICallPsCriticalPsSessionRspCb_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK::~ARI_IBICallPsCriticalPsSessionRspCb_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF520;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK::~ARI_IBICallPsCriticalPsSessionRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK::pack(AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK::unpack(AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E13F1A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsCriticalPsSessionRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220004352;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK::ARI_IBICallPsCriticalPsSessionIndCb_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD898000u, 0);
  *(_QWORD *)result = &off_24C8CF558;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD898000u, 0);
  *(_QWORD *)result = &off_24C8CF558;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK::ARI_IBICallPsCriticalPsSessionIndCb_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF558;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF558;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK::~ARI_IBICallPsCriticalPsSessionIndCb_SDK(AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF558;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK::~ARI_IBICallPsCriticalPsSessionIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK::pack(AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK::unpack(AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E13F538(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsCriticalPsSessionIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227115008;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK::ARI_IBICallPsDataBearerInfoIndCb_SDK(AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD900000u, 0);
  *(_QWORD *)result = &off_24C8CF590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD900000u, 0);
  *(_QWORD *)result = &off_24C8CF590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK::ARI_IBICallPsDataBearerInfoIndCb_SDK(AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK::~ARI_IBICallPsDataBearerInfoIndCb_SDK(AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF590;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK::~ARI_IBICallPsDataBearerInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK::pack(AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK::unpack(AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E13F88C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataBearerInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227540992;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK::ARI_IBICallPsDataCallStoppedIndCb_SDK(AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD810000u, 0);
  *(_QWORD *)result = &off_24C8CF5C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD810000u, 0);
  *(_QWORD *)result = &off_24C8CF5C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK::ARI_IBICallPsDataCallStoppedIndCb_SDK(AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF5C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF5C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK::~ARI_IBICallPsDataCallStoppedIndCb_SDK(AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CF5C8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK::~ARI_IBICallPsDataCallStoppedIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK::pack(AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 8uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK::unpack(AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 8, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  return v3;
}

void sub_20E13FCC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataCallStoppedIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226557952;
}

double AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK::ARI_IBICallPsDataPathCleanupReq_SDK(AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8A8000u, 0);
  *(_QWORD *)v1 = &off_24C8CF600;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8A8000u, 0);
  *(_QWORD *)v1 = &off_24C8CF600;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK::ARI_IBICallPsDataPathCleanupReq_SDK(AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF600;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF600;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK::~ARI_IBICallPsDataPathCleanupReq_SDK(AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8CF600;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK::~ARI_IBICallPsDataPathCleanupReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK::pack(AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK::unpack(AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _QWORD *v8;
  __n128 __p;
  uint64_t v11;
  unint64_t v12;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_QWORD *)operator new[]();
  *v8 = 0;
  v8[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 16, &v13, &v12);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v8, (uint64_t)v8 + 2 * (v12 >> 1), v12 >> 1);
    AriSdk::TlvArray<unsigned short,8ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C80BDFB0063);
  return v3;
}

void sub_20E140310(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C80BDFB0063);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned short,8ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x11)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 1, 8);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E14045C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataPathCleanupReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210403328;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK::ARI_IBICallPsDataPathCleanupRspCb_SDK(AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD0A8000u, 0);
  *(_QWORD *)result = &off_24C8CF638;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD0A8000u, 0);
  *(_QWORD *)result = &off_24C8CF638;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK::ARI_IBICallPsDataPathCleanupRspCb_SDK(AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF638;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF638;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK::~ARI_IBICallPsDataPathCleanupRspCb_SDK(AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF638;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK::~ARI_IBICallPsDataPathCleanupRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK::pack(AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK::unpack(AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1407A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataPathCleanupRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218791936;
}

double AriSdk::ARI_IBICallPsDataPathSetupReq_SDK::ARI_IBICallPsDataPathSetupReq_SDK(AriSdk::ARI_IBICallPsDataPathSetupReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC840000u, 0);
  *(_QWORD *)v1 = &off_24C8CF670;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC840000u, 0);
  *(_QWORD *)v1 = &off_24C8CF670;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsDataPathSetupReq_SDK::ARI_IBICallPsDataPathSetupReq_SDK(AriSdk::ARI_IBICallPsDataPathSetupReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF670;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF670;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataPathSetupReq_SDK::~ARI_IBICallPsDataPathSetupReq_SDK(AriSdk::ARI_IBICallPsDataPathSetupReq_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8CF670;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 13);
  if (v3)
  {
    *((_QWORD *)this + 14) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataPathSetupReq_SDK::~ARI_IBICallPsDataPathSetupReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataPathSetupReq_SDK::pack(AriSdk::ARI_IBICallPsDataPathSetupReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  _BYTE *v10;
  _BYTE *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (_BYTE *)*((_QWORD *)this + 13);
            if (!v10
              || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, v11 - v10, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataPathSetupReq_SDK::unpack(AriSdk::ARI_IBICallPsDataPathSetupReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _WORD *v8;
  void *v9;
  char *v10;
  char *v11;
  unint64_t v12;
  size_t v13;
  void **v14;
  unint64_t v15;
  const char *v16;
  void **v17;
  void *v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  unint64_t v23;
  BOOL v24;
  void *__p[2];
  char v26;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  LOBYTE(__p[0]) = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v24 = 0;
  v23 = 0xAAAAAAAAAAAAAAAALL;
  v9 = (void *)operator new[]();
  bzero(v9, 0x2240uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 8768, &v24, &v23);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B48](v9, 0x1000C80077AE9C5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v23 >= 0x448)
    {
      v12 = v23 / 0x448;
      v13 = 1096 * (v23 / 0x448);
      v10 = (char *)operator new(v13);
      v11 = &v10[1096 * v12];
      memcpy(v10, v9, v13);
    }
    else
    {
      v10 = 0;
      v11 = 0;
    }
    v14 = (void **)((char *)this + 104);
    v15 = 0xE21A291C077975B9 * ((v11 - v10) >> 3);
    if (v15 < 9)
    {
      v18 = *v14;
      if (*v14)
      {
        *((_QWORD *)this + 14) = v18;
        operator delete(v18);
        *v14 = 0;
        *((_QWORD *)this + 14) = 0;
        *((_QWORD *)this + 15) = 0;
      }
      *((_QWORD *)this + 13) = v10;
      *((_QWORD *)this + 14) = v11;
      *((_QWORD *)this + 15) = v11;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v26 >= 0)
        v17 = __p;
      else
        v17 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v16, v17, 360, (char *)this + 104, v15, 8);
      if (v26 < 0)
        operator delete(__p[0]);
      if (v10)
        operator delete(v10);
    }
    MEMORY[0x212BB9B48](v9, 0x1000C80077AE9C5);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v19, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3)
  {
    if (LOBYTE(__p[0]))
    {
      v20 = (_DWORD *)operator new();
      *v20 = *v19;
      v21 = *((_QWORD *)this + 16);
      *((_QWORD *)this + 16) = v20;
      if (v21)
        MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
    }
  }
  MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  return v3;
}

void sub_20E14109C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80077AE9C5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataPathSetupReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataPathSetupReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209977344;
}

double AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK::ARI_IBICallPsDataPathSetupRspCb_SDK(AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD040000u, 0);
  *(_QWORD *)v1 = &off_24C8CF6A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD040000u, 0);
  *(_QWORD *)v1 = &off_24C8CF6A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK::ARI_IBICallPsDataPathSetupRspCb_SDK(AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF6A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF6A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK::~ARI_IBICallPsDataPathSetupRspCb_SDK(AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8CF6A8;
  v2 = (void *)*((_QWORD *)this + 11);
  if (v2)
  {
    *((_QWORD *)this + 12) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK::~ARI_IBICallPsDataPathSetupRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK::pack(AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK::unpack(AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _QWORD *v7;
  __n128 __p;
  uint64_t v10;
  unint64_t v11;
  BOOL v12;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v12 = 0;
  v11 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_QWORD *)operator new[]();
  *v7 = 0;
  v7[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 16, &v12, &v11);
  if (!(_DWORD)v3 && v12)
  {
    v10 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v7, (uint64_t)v7 + 2 * (v11 >> 1), v11 >> 1);
    AriSdk::TlvArray<unsigned short,8ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v7, 0x1000C80BDFB0063);
  return v3;
}

void sub_20E141668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C80BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataPathSetupRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218365952;
}

double AriSdk::ARI_IBICallPsDataStallInfoReq_SDK::ARI_IBICallPsDataStallInfoReq_SDK(AriSdk::ARI_IBICallPsDataStallInfoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9B8000u, 0);
  *(_QWORD *)v1 = &off_24C8CF6E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9B8000u, 0);
  *(_QWORD *)v1 = &off_24C8CF6E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsDataStallInfoReq_SDK::ARI_IBICallPsDataStallInfoReq_SDK(AriSdk::ARI_IBICallPsDataStallInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF6E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF6E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataStallInfoReq_SDK::~ARI_IBICallPsDataStallInfoReq_SDK(AriSdk::ARI_IBICallPsDataStallInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8CF6E0;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataStallInfoReq_SDK::~ARI_IBICallPsDataStallInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataStallInfoReq_SDK::pack(AriSdk::ARI_IBICallPsDataStallInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataStallInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsDataStallInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E141CB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataStallInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataStallInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211517440;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK::ARI_IBICallPsDataStallInfoRsbCb_SDK(AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1B8000u, 0);
  *(_QWORD *)result = &off_24C8CF718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1B8000u, 0);
  *(_QWORD *)result = &off_24C8CF718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK::ARI_IBICallPsDataStallInfoRsbCb_SDK(AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK::~ARI_IBICallPsDataStallInfoRsbCb_SDK(AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF718;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK::~ARI_IBICallPsDataStallInfoRsbCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK::pack(AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK::unpack(AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E142024(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataStallInfoRsbCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219906048;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallRegReq_SDK::ARI_IBICallPsDataStallRegReq_SDK(AriSdk::ARI_IBICallPsDataStallRegReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9C0000u, 0);
  *(_QWORD *)result = &off_24C8CF750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9C0000u, 0);
  *(_QWORD *)result = &off_24C8CF750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallRegReq_SDK::ARI_IBICallPsDataStallRegReq_SDK(AriSdk::ARI_IBICallPsDataStallRegReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataStallRegReq_SDK::~ARI_IBICallPsDataStallRegReq_SDK(AriSdk::ARI_IBICallPsDataStallRegReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF750;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataStallRegReq_SDK::~ARI_IBICallPsDataStallRegReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataStallRegReq_SDK::pack(AriSdk::ARI_IBICallPsDataStallRegReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataStallRegReq_SDK::unpack(AriSdk::ARI_IBICallPsDataStallRegReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E142378(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataStallRegReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataStallRegReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211550208;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK::ARI_IBICallPsDataStallRegRspCb_SDK(AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1C0000u, 0);
  *(_QWORD *)result = &off_24C8CF788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1C0000u, 0);
  *(_QWORD *)result = &off_24C8CF788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK::ARI_IBICallPsDataStallRegRspCb_SDK(AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK::~ARI_IBICallPsDataStallRegRspCb_SDK(AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF788;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK::~ARI_IBICallPsDataStallRegRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK::pack(AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK::unpack(AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1426C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataStallRegRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219938816;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK::ARI_IBICallPsDataStallRegIndCb_SDK(AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD888000u, 0);
  *(_QWORD *)result = &off_24C8CF7C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD888000u, 0);
  *(_QWORD *)result = &off_24C8CF7C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK::ARI_IBICallPsDataStallRegIndCb_SDK(AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF7C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF7C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK::~ARI_IBICallPsDataStallRegIndCb_SDK(AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF7C0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C404A09149ALL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK::~ARI_IBICallPsDataStallRegIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK::pack(AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK::unpack(AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C404A09149ALL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C404A09149ALL);
  return v3;
}

void sub_20E142A58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C404A09149ALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataStallRegIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227049472;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK::ARI_IBICallPsDataTransferTimeReq_SDK(AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC880000u, 0);
  *(_QWORD *)result = &off_24C8CF7F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC880000u, 0);
  *(_QWORD *)result = &off_24C8CF7F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK::ARI_IBICallPsDataTransferTimeReq_SDK(AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF7F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF7F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK::~ARI_IBICallPsDataTransferTimeReq_SDK(AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF7F8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK::~ARI_IBICallPsDataTransferTimeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK::pack(AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK::unpack(AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 12, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_QWORD *)v6 = *(_QWORD *)v5;
    *(_DWORD *)(v6 + 8) = v5[2];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E142E00(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataTransferTimeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210239488;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK::ARI_IBICallPsDataTransferTimeRspCb_SDK(AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD080000u, 0);
  *(_QWORD *)result = &off_24C8CF830;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD080000u, 0);
  *(_QWORD *)result = &off_24C8CF830;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK::ARI_IBICallPsDataTransferTimeRspCb_SDK(AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF830;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF830;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK::~ARI_IBICallPsDataTransferTimeRspCb_SDK(AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF830;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK::~ARI_IBICallPsDataTransferTimeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK::pack(AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK::unpack(AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 20, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_DWORD *)(v6 + 16) = v5[4];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40A86A77D5);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E1431A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDataTransferTimeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218628096;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDeRegisterFT_SDK::ARI_IBICallPsDeRegisterFT_SDK(AriSdk::ARI_IBICallPsDeRegisterFT_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC828000u, 1);
  *(_QWORD *)result = &off_24C8CF868;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC828000u, 1);
  *(_QWORD *)result = &off_24C8CF868;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsDeRegisterFT_SDK::ARI_IBICallPsDeRegisterFT_SDK(AriSdk::ARI_IBICallPsDeRegisterFT_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF868;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF868;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDeRegisterFT_SDK::~ARI_IBICallPsDeRegisterFT_SDK(AriSdk::ARI_IBICallPsDeRegisterFT_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CF868;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDeRegisterFT_SDK::~ARI_IBICallPsDeRegisterFT_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDeRegisterFT_SDK::pack(AriSdk::ARI_IBICallPsDeRegisterFT_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDeRegisterFT_SDK::unpack(AriSdk::ARI_IBICallPsDeRegisterFT_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E143438(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDeRegisterFT_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDeRegisterFT_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209879040;
}

double AriSdk::ARI_IBICallPsDropIPPackets_SDK::ARI_IBICallPsDropIPPackets_SDK(AriSdk::ARI_IBICallPsDropIPPackets_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC830000u, 1);
  *(_QWORD *)v1 = &off_24C8CF8A0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC830000u, 1);
  *(_QWORD *)v1 = &off_24C8CF8A0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsDropIPPackets_SDK::ARI_IBICallPsDropIPPackets_SDK(AriSdk::ARI_IBICallPsDropIPPackets_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF8A0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CF8A0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsDropIPPackets_SDK::~ARI_IBICallPsDropIPPackets_SDK(AriSdk::ARI_IBICallPsDropIPPackets_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CF8A0;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsDropIPPackets_SDK::~ARI_IBICallPsDropIPPackets_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsDropIPPackets_SDK::pack(AriSdk::ARI_IBICallPsDropIPPackets_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsDropIPPackets_SDK::unpack(AriSdk::ARI_IBICallPsDropIPPackets_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  size_t v11;
  void **v12;
  const char *v13;
  void **v14;
  void *v15;
  unint64_t v17;
  BOOL v18;
  void *__p[2];
  char v20;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 80, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    v7 = v17;
    if (v17 >= 0x10)
    {
      v11 = v17 & 0xFFFFFFFFFFFFFFF0;
      v8 = (char *)operator new(v17 & 0xFFFFFFFFFFFFFFF0);
      v10 = &v8[16 * (v7 >> 4)];
      memcpy(v8, v6, v11);
      v9 = &v8[v11];
    }
    else
    {
      v8 = 0;
      v9 = 0;
      v10 = 0;
    }
    v12 = (void **)((char *)this + 80);
    if ((unint64_t)(v9 - v8) < 0x51)
    {
      v15 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v12 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v8;
      *((_QWORD *)this + 11) = v9;
      *((_QWORD *)this + 12) = v10;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v20 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, v12, (v9 - v8) >> 4, 5);
      if (v20 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8003A0DE81);
  return v3;
}

void sub_20E143970(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C8003A0DE81);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsDropIPPackets_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsDropIPPackets_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209911808;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK::ARI_IBICallPsFDBackOffTimeInd_SDK(AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD860000u, 0);
  *(_QWORD *)result = &off_24C8CF8D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD860000u, 0);
  *(_QWORD *)result = &off_24C8CF8D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK::ARI_IBICallPsFDBackOffTimeInd_SDK(AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF8D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF8D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK::~ARI_IBICallPsFDBackOffTimeInd_SDK(AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF8D8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK::~ARI_IBICallPsFDBackOffTimeInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK::pack(AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK::unpack(AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E143D20(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsFDBackOffTimeInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226885632;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFlushDataReq_SDK::ARI_IBICallPsFlushDataReq_SDK(AriSdk::ARI_IBICallPsFlushDataReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC858000u, 0);
  *(_QWORD *)result = &off_24C8CF910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC858000u, 0);
  *(_QWORD *)result = &off_24C8CF910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFlushDataReq_SDK::ARI_IBICallPsFlushDataReq_SDK(AriSdk::ARI_IBICallPsFlushDataReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsFlushDataReq_SDK::~ARI_IBICallPsFlushDataReq_SDK(AriSdk::ARI_IBICallPsFlushDataReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF910;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsFlushDataReq_SDK::~ARI_IBICallPsFlushDataReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsFlushDataReq_SDK::pack(AriSdk::ARI_IBICallPsFlushDataReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsFlushDataReq_SDK::unpack(AriSdk::ARI_IBICallPsFlushDataReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E144078(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsFlushDataReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsFlushDataReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210075648;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFlushDataRspCb_SDK::ARI_IBICallPsFlushDataRspCb_SDK(AriSdk::ARI_IBICallPsFlushDataRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD058000u, 0);
  *(_QWORD *)result = &off_24C8CF948;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD058000u, 0);
  *(_QWORD *)result = &off_24C8CF948;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFlushDataRspCb_SDK::ARI_IBICallPsFlushDataRspCb_SDK(AriSdk::ARI_IBICallPsFlushDataRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF948;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF948;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsFlushDataRspCb_SDK::~ARI_IBICallPsFlushDataRspCb_SDK(AriSdk::ARI_IBICallPsFlushDataRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CF948;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsFlushDataRspCb_SDK::~ARI_IBICallPsFlushDataRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsFlushDataRspCb_SDK::pack(AriSdk::ARI_IBICallPsFlushDataRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsFlushDataRspCb_SDK::unpack(AriSdk::ARI_IBICallPsFlushDataRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1444B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsFlushDataRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsFlushDataRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218464256;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK::ARI_IBICallPsFreePDUSessionIDReq_SDK(AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA20000u, 0);
  *(_QWORD *)result = &off_24C8CF980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA20000u, 0);
  *(_QWORD *)result = &off_24C8CF980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK::ARI_IBICallPsFreePDUSessionIDReq_SDK(AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK::~ARI_IBICallPsFreePDUSessionIDReq_SDK(AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF980;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK::~ARI_IBICallPsFreePDUSessionIDReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK::pack(AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK::unpack(AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E144814(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsFreePDUSessionIDReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211943424;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK::ARI_IBICallPsFreePDUSessionIDRspCb_SDK(AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD220000u, 0);
  *(_QWORD *)result = &off_24C8CF9B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD220000u, 0);
  *(_QWORD *)result = &off_24C8CF9B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK::ARI_IBICallPsFreePDUSessionIDRspCb_SDK(AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF9B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF9B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK::~ARI_IBICallPsFreePDUSessionIDRspCb_SDK(AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CF9B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK::~ARI_IBICallPsFreePDUSessionIDRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK::pack(AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK::unpack(AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E144B74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsFreePDUSessionIDRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220332032;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA80000u, 0);
  *(_QWORD *)result = &off_24C8CF9F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA80000u, 0);
  *(_QWORD *)result = &off_24C8CF9F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF9F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CF9F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK::~ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CF9F0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK::~ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK::pack(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E144DF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212336640;
}

double AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD280000u, 0);
  *(_QWORD *)v1 = &off_24C8CFA28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD280000u, 0);
  *(_QWORD *)v1 = &off_24C8CFA28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFA28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFA28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK::~ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8CFA28;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4005A209FELL);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40616D9E62);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40789AEA99);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4087442A64);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C408AA14F5FLL);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK::~ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK::pack(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x24uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x24uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 0xCuLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK::unpack(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _OWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_DWORD *)v5 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 36, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C408AA14F5FLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiSecNonce>::operator=<CsiSecNonce&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C408AA14F5FLL);
  }
  v18 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v17 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 8, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4087442A64);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsDownlinkBwEstimation>::operator=<IBICallPsDownlinkBwEstimation&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4087442A64);
  }
  v16 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 8, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40789AEA99);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsUplinkBwEstimation>::operator=<IBICallPsUplinkBwEstimation&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40789AEA99);
  }
  v15 = 0;
  v9 = (_OWORD *)operator new();
  *v9 = 0u;
  v9[1] = 0u;
  *((_DWORD *)v9 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 36, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40616D9E62);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsConnectedStateSummary>::operator=<IBICallPsConnectedStateSummary&,void>((uint64_t *)this + 13, (uint64_t)v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40616D9E62);
  }
  v14 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *(_QWORD *)v11 = 0;
  v11[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 12, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<IBICallPsNr5gNeighborCellInfo>::operator=<IBICallPsNr5gNeighborCellInfo&,void>((uint64_t *)this + 15, (uint64_t)v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4005A209FELL);
  return v3;
}

void sub_20E145664(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4005A209FELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsGetBandwidthEstimationInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220725248;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK::ARI_IBICallPsGetDataBearerInfoReq_SDK(AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA00000u, 0);
  *(_QWORD *)result = &off_24C8CFA60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA00000u, 0);
  *(_QWORD *)result = &off_24C8CFA60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK::ARI_IBICallPsGetDataBearerInfoReq_SDK(AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFA60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFA60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK::~ARI_IBICallPsGetDataBearerInfoReq_SDK(AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8CFA60;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK::~ARI_IBICallPsGetDataBearerInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK::pack(AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E145970(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsGetDataBearerInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211812352;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK::ARI_IBICallPsGetDataBearerInfoRspCb_SDK(AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD200000u, 0);
  *(_QWORD *)result = &off_24C8CFA98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD200000u, 0);
  *(_QWORD *)result = &off_24C8CFA98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK::ARI_IBICallPsGetDataBearerInfoRspCb_SDK(AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFA98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFA98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK::~ARI_IBICallPsGetDataBearerInfoRspCb_SDK(AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFA98;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK::~ARI_IBICallPsGetDataBearerInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK::pack(AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK::unpack(AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E145CB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsGetDataBearerInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220200960;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC980000u, 0);
  *(_QWORD *)result = &off_24C8CFAD0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC980000u, 0);
  *(_QWORD *)result = &off_24C8CFAD0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFAD0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFAD0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK::~ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFAD0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK::~ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK::pack(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK::unpack(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E146008(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211288064;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD180000u, 0);
  *(_QWORD *)result = &off_24C8CFB08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD180000u, 0);
  *(_QWORD *)result = &off_24C8CFB08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFB08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFB08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK::~ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CFB08;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK::~ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK::pack(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK::unpack(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E14643C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsIPV6AddrFormationSuccessRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219676672;
}

double AriSdk::ARI_IBICallPsImsTestModeReq_SDK::ARI_IBICallPsImsTestModeReq_SDK(AriSdk::ARI_IBICallPsImsTestModeReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC888000u, 0);
  *(_QWORD *)v1 = &off_24C8CFB40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC888000u, 0);
  *(_QWORD *)v1 = &off_24C8CFB40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsImsTestModeReq_SDK::ARI_IBICallPsImsTestModeReq_SDK(AriSdk::ARI_IBICallPsImsTestModeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFB40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFB40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsImsTestModeReq_SDK::~ARI_IBICallPsImsTestModeReq_SDK(AriSdk::ARI_IBICallPsImsTestModeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8CFB40;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsImsTestModeReq_SDK::~ARI_IBICallPsImsTestModeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsImsTestModeReq_SDK::pack(AriSdk::ARI_IBICallPsImsTestModeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsImsTestModeReq_SDK::unpack(AriSdk::ARI_IBICallPsImsTestModeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  _DWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 1, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v11 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E14698C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsImsTestModeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsImsTestModeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210272256;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK::ARI_IBICallPsImsTestModeRspCb_SDK(AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD088000u, 0);
  *(_QWORD *)result = &off_24C8CFB78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD088000u, 0);
  *(_QWORD *)result = &off_24C8CFB78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK::ARI_IBICallPsImsTestModeRspCb_SDK(AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFB78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFB78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK::~ARI_IBICallPsImsTestModeRspCb_SDK(AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFB78;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK::~ARI_IBICallPsImsTestModeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK::pack(AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK::unpack(AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E146D08(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsImsTestModeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218660864;
}

double AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK::ARI_IBICallPsImsTestModeIndCb_SDK(AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD870000u, 0);
  *(_QWORD *)v1 = &off_24C8CFBB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD870000u, 0);
  *(_QWORD *)v1 = &off_24C8CFBB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK::ARI_IBICallPsImsTestModeIndCb_SDK(AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFBB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFBB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK::~ARI_IBICallPsImsTestModeIndCb_SDK(AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CFBB0;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK::~ARI_IBICallPsImsTestModeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK::pack(AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK::unpack(AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  void **v7;
  _BYTE *v8;
  void *v9;
  const char *v10;
  BOOL *v11;
  void *v12;
  void *__p;
  _BYTE *v15;
  uint64_t v16;
  size_t __sz;
  BOOL v18;
  BOOL v19[8];
  char v20;

  v19[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v19, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v19[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, v19, 0);
  if ((_DWORD)v3 || !v19[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x7D0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2000, &v18, &__sz);
  if (!(_DWORD)v3 && v18)
  {
    v15 = 0;
    v16 = 0;
    __p = 0;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    v7 = (void **)((char *)this + 80);
    v9 = __p;
    v8 = v15;
    if ((unint64_t)(v15 - (_BYTE *)__p) < 0x7D1)
    {
      v12 = *v7;
      if (*v7)
      {
        *((_QWORD *)this + 11) = v12;
        operator delete(v12);
        *v7 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
        v9 = __p;
        v8 = v15;
      }
      *((_QWORD *)this + 10) = v9;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v16;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v19);
      if (v20 >= 0)
        v11 = v19;
      else
        v11 = *(BOOL **)v19;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v10, v11, 360, (char *)this + 80, v15 - (_BYTE *)__p, 2000);
      if (v20 < 0)
        operator delete(*(void **)v19);
      if (__p)
      {
        v15 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E14721C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsImsTestModeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226951168;
}

AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK::ARI_IBICallPsLTEAttachApnConfigReq_SDK(AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *this)
{
  AriSdk::MsgBase *v2;

  v2 = AriSdk::MsgBase::MsgBase(this, 0xC808000u, 0);
  *(_QWORD *)v2 = &off_24C8CFBE8;
  bzero((char *)v2 + 64, 0x3A0uLL);
  return this;
}

{
  AriSdk::MsgBase *v2;

  v2 = AriSdk::MsgBase::MsgBase(this, 0xC808000u, 0);
  *(_QWORD *)v2 = &off_24C8CFBE8;
  bzero((char *)v2 + 64, 0x3A0uLL);
  return this;
}

AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK::ARI_IBICallPsLTEAttachApnConfigReq_SDK(AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v4;

  v4 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v4 = &off_24C8CFBE8;
  bzero((char *)v4 + 64, 0x3A0uLL);
  return this;
}

{
  AriSdk::MsgBase *v4;

  v4 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v4 = &off_24C8CFBE8;
  bzero((char *)v4 + 64, 0x3A0uLL);
  return this;
}

void AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK::~ARI_IBICallPsLTEAttachApnConfigReq_SDK(AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  void *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;

  *(_QWORD *)this = &off_24C8CFBE8;
  v2 = *((_QWORD *)this + 123);
  *((_QWORD *)this + 123) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 122);
  *((_QWORD *)this + 122) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 121);
  *((_QWORD *)this + 121) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 120);
  *((_QWORD *)this + 120) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 119);
  *((_QWORD *)this + 119) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 118);
  *((_QWORD *)this + 118) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 117);
  *((_QWORD *)this + 117) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = (void *)*((_QWORD *)this + 114);
  if (v9)
  {
    *((_QWORD *)this + 115) = v9;
    operator delete(v9);
  }
  v10 = (void *)*((_QWORD *)this + 111);
  if (v10)
  {
    *((_QWORD *)this + 112) = v10;
    operator delete(v10);
  }
  v11 = *((_QWORD *)this + 110);
  *((_QWORD *)this + 110) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = (void *)*((_QWORD *)this + 107);
  if (v12)
  {
    *((_QWORD *)this + 108) = v12;
    operator delete(v12);
  }
  v13 = (void *)*((_QWORD *)this + 104);
  if (v13)
  {
    *((_QWORD *)this + 105) = v13;
    operator delete(v13);
  }
  v14 = *((_QWORD *)this + 103);
  *((_QWORD *)this + 103) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = (void *)*((_QWORD *)this + 100);
  if (v15)
  {
    *((_QWORD *)this + 101) = v15;
    operator delete(v15);
  }
  v16 = (void *)*((_QWORD *)this + 97);
  if (v16)
  {
    *((_QWORD *)this + 98) = v16;
    operator delete(v16);
  }
  v17 = *((_QWORD *)this + 96);
  *((_QWORD *)this + 96) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  v18 = (void *)*((_QWORD *)this + 93);
  if (v18)
  {
    *((_QWORD *)this + 94) = v18;
    operator delete(v18);
  }
  v19 = (void *)*((_QWORD *)this + 90);
  if (v19)
  {
    *((_QWORD *)this + 91) = v19;
    operator delete(v19);
  }
  v20 = *((_QWORD *)this + 89);
  *((_QWORD *)this + 89) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  v21 = *((_QWORD *)this + 88);
  *((_QWORD *)this + 88) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  v22 = *((_QWORD *)this + 87);
  *((_QWORD *)this + 87) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  v23 = *((_QWORD *)this + 86);
  *((_QWORD *)this + 86) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  v24 = *((_QWORD *)this + 85);
  *((_QWORD *)this + 85) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  v25 = *((_QWORD *)this + 84);
  *((_QWORD *)this + 84) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  v26 = *((_QWORD *)this + 83);
  *((_QWORD *)this + 83) = 0;
  if (v26)
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  v27 = *((_QWORD *)this + 82);
  *((_QWORD *)this + 82) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  v28 = *((_QWORD *)this + 81);
  *((_QWORD *)this + 81) = 0;
  if (v28)
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  v29 = *((_QWORD *)this + 80);
  *((_QWORD *)this + 80) = 0;
  if (v29)
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  v30 = *((_QWORD *)this + 79);
  *((_QWORD *)this + 79) = 0;
  if (v30)
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  v31 = *((_QWORD *)this + 78);
  *((_QWORD *)this + 78) = 0;
  if (v31)
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
  v32 = *((_QWORD *)this + 77);
  *((_QWORD *)this + 77) = 0;
  if (v32)
    MEMORY[0x212BB9B60](v32, 0x1000C4052888210);
  v33 = *((_QWORD *)this + 76);
  *((_QWORD *)this + 76) = 0;
  if (v33)
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
  v34 = *((_QWORD *)this + 75);
  *((_QWORD *)this + 75) = 0;
  if (v34)
    MEMORY[0x212BB9B60](v34, 0x1000C4052888210);
  v35 = *((_QWORD *)this + 74);
  *((_QWORD *)this + 74) = 0;
  if (v35)
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
  v36 = *((_QWORD *)this + 73);
  *((_QWORD *)this + 73) = 0;
  if (v36)
    MEMORY[0x212BB9B60](v36, 0x1000C40504FFAC1);
  v37 = (void *)*((_QWORD *)this + 70);
  if (v37)
  {
    *((_QWORD *)this + 71) = v37;
    operator delete(v37);
  }
  v38 = *((_QWORD *)this + 69);
  *((_QWORD *)this + 69) = 0;
  if (v38)
    MEMORY[0x212BB9B60](v38, 0x1000C4052888210);
  v39 = *((_QWORD *)this + 68);
  *((_QWORD *)this + 68) = 0;
  if (v39)
    MEMORY[0x212BB9B60](v39, 0x1000C4052888210);
  v40 = *((_QWORD *)this + 67);
  *((_QWORD *)this + 67) = 0;
  if (v40)
    MEMORY[0x212BB9B60](v40, 0x1000C4052888210);
  v41 = *((_QWORD *)this + 66);
  *((_QWORD *)this + 66) = 0;
  if (v41)
    MEMORY[0x212BB9B60](v41, 0x1000C4052888210);
  v42 = *((_QWORD *)this + 65);
  *((_QWORD *)this + 65) = 0;
  if (v42)
    MEMORY[0x212BB9B60](v42, 0x1000C4052888210);
  v43 = *((_QWORD *)this + 64);
  *((_QWORD *)this + 64) = 0;
  if (v43)
    MEMORY[0x212BB9B60](v43, 0x1000C4052888210);
  v44 = *((_QWORD *)this + 63);
  *((_QWORD *)this + 63) = 0;
  if (v44)
    MEMORY[0x212BB9B60](v44, 0x1000C4052888210);
  v45 = *((_QWORD *)this + 62);
  *((_QWORD *)this + 62) = 0;
  if (v45)
    MEMORY[0x212BB9B60](v45, 0x1000C4052888210);
  v46 = *((_QWORD *)this + 61);
  *((_QWORD *)this + 61) = 0;
  if (v46)
    MEMORY[0x212BB9B60](v46, 0x1000C4052888210);
  v47 = *((_QWORD *)this + 60);
  *((_QWORD *)this + 60) = 0;
  if (v47)
    MEMORY[0x212BB9B60](v47, 0x1000C4052888210);
  v48 = *((_QWORD *)this + 59);
  *((_QWORD *)this + 59) = 0;
  if (v48)
    MEMORY[0x212BB9B60](v48, 0x1000C4052888210);
  v49 = *((_QWORD *)this + 58);
  *((_QWORD *)this + 58) = 0;
  if (v49)
    MEMORY[0x212BB9B60](v49, 0x1000C4052888210);
  v50 = *((_QWORD *)this + 57);
  *((_QWORD *)this + 57) = 0;
  if (v50)
    MEMORY[0x212BB9B60](v50, 0x1000C4052888210);
  v51 = *((_QWORD *)this + 56);
  *((_QWORD *)this + 56) = 0;
  if (v51)
    MEMORY[0x212BB9B60](v51, 0x1000C4052888210);
  v52 = *((_QWORD *)this + 55);
  *((_QWORD *)this + 55) = 0;
  if (v52)
    MEMORY[0x212BB9B60](v52, 0x1000C4052888210);
  v53 = *((_QWORD *)this + 54);
  *((_QWORD *)this + 54) = 0;
  if (v53)
    MEMORY[0x212BB9B60](v53, 0x1000C4052888210);
  v54 = *((_QWORD *)this + 53);
  *((_QWORD *)this + 53) = 0;
  if (v54)
    MEMORY[0x212BB9B60](v54, 0x1000C40504FFAC1);
  v55 = (void *)*((_QWORD *)this + 50);
  if (v55)
  {
    *((_QWORD *)this + 51) = v55;
    operator delete(v55);
  }
  v56 = *((_QWORD *)this + 49);
  *((_QWORD *)this + 49) = 0;
  if (v56)
    MEMORY[0x212BB9B60](v56, 0x1000C4052888210);
  v57 = *((_QWORD *)this + 48);
  *((_QWORD *)this + 48) = 0;
  if (v57)
    MEMORY[0x212BB9B60](v57, 0x1000C4052888210);
  v58 = *((_QWORD *)this + 47);
  *((_QWORD *)this + 47) = 0;
  if (v58)
    MEMORY[0x212BB9B60](v58, 0x1000C4052888210);
  v59 = *((_QWORD *)this + 46);
  *((_QWORD *)this + 46) = 0;
  if (v59)
    MEMORY[0x212BB9B60](v59, 0x1000C4052888210);
  v60 = *((_QWORD *)this + 45);
  *((_QWORD *)this + 45) = 0;
  if (v60)
    MEMORY[0x212BB9B60](v60, 0x1000C4052888210);
  v61 = *((_QWORD *)this + 44);
  *((_QWORD *)this + 44) = 0;
  if (v61)
    MEMORY[0x212BB9B60](v61, 0x1000C4052888210);
  v62 = *((_QWORD *)this + 43);
  *((_QWORD *)this + 43) = 0;
  if (v62)
    MEMORY[0x212BB9B60](v62, 0x1000C4052888210);
  v63 = *((_QWORD *)this + 42);
  *((_QWORD *)this + 42) = 0;
  if (v63)
    MEMORY[0x212BB9B60](v63, 0x1000C4052888210);
  v64 = *((_QWORD *)this + 41);
  *((_QWORD *)this + 41) = 0;
  if (v64)
    MEMORY[0x212BB9B60](v64, 0x1000C4052888210);
  v65 = *((_QWORD *)this + 40);
  *((_QWORD *)this + 40) = 0;
  if (v65)
    MEMORY[0x212BB9B60](v65, 0x1000C4052888210);
  v66 = *((_QWORD *)this + 39);
  *((_QWORD *)this + 39) = 0;
  if (v66)
    MEMORY[0x212BB9B60](v66, 0x1000C4052888210);
  v67 = *((_QWORD *)this + 38);
  *((_QWORD *)this + 38) = 0;
  if (v67)
    MEMORY[0x212BB9B60](v67, 0x1000C4052888210);
  v68 = *((_QWORD *)this + 37);
  *((_QWORD *)this + 37) = 0;
  if (v68)
    MEMORY[0x212BB9B60](v68, 0x1000C4052888210);
  v69 = *((_QWORD *)this + 36);
  *((_QWORD *)this + 36) = 0;
  if (v69)
    MEMORY[0x212BB9B60](v69, 0x1000C4052888210);
  v70 = *((_QWORD *)this + 35);
  *((_QWORD *)this + 35) = 0;
  if (v70)
    MEMORY[0x212BB9B60](v70, 0x1000C4052888210);
  v71 = *((_QWORD *)this + 34);
  *((_QWORD *)this + 34) = 0;
  if (v71)
    MEMORY[0x212BB9B60](v71, 0x1000C4052888210);
  v72 = *((_QWORD *)this + 33);
  *((_QWORD *)this + 33) = 0;
  if (v72)
    MEMORY[0x212BB9B60](v72, 0x1000C40504FFAC1);
  v73 = (void *)*((_QWORD *)this + 30);
  if (v73)
  {
    *((_QWORD *)this + 31) = v73;
    operator delete(v73);
  }
  v74 = *((_QWORD *)this + 29);
  *((_QWORD *)this + 29) = 0;
  if (v74)
    MEMORY[0x212BB9B60](v74, 0x1000C4052888210);
  v75 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v75)
    MEMORY[0x212BB9B60](v75, 0x1000C4052888210);
  v76 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v76)
    MEMORY[0x212BB9B60](v76, 0x1000C4052888210);
  v77 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v77)
    MEMORY[0x212BB9B60](v77, 0x1000C4052888210);
  v78 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v78)
    MEMORY[0x212BB9B60](v78, 0x1000C4052888210);
  v79 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v79)
    MEMORY[0x212BB9B60](v79, 0x1000C4052888210);
  v80 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v80)
    MEMORY[0x212BB9B60](v80, 0x1000C4052888210);
  v81 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v81)
    MEMORY[0x212BB9B60](v81, 0x1000C4052888210);
  v82 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v82)
    MEMORY[0x212BB9B60](v82, 0x1000C4052888210);
  v83 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v83)
    MEMORY[0x212BB9B60](v83, 0x1000C4052888210);
  v84 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v84)
    MEMORY[0x212BB9B60](v84, 0x1000C4052888210);
  v85 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v85)
    MEMORY[0x212BB9B60](v85, 0x1000C4052888210);
  v86 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v86)
    MEMORY[0x212BB9B60](v86, 0x1000C4052888210);
  v87 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v87)
    MEMORY[0x212BB9B60](v87, 0x1000C4052888210);
  v88 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v88)
    MEMORY[0x212BB9B60](v88, 0x1000C4052888210);
  v89 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v89)
    MEMORY[0x212BB9B60](v89, 0x1000C4052888210);
  v90 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v90)
    MEMORY[0x212BB9B60](v90, 0x1000C40504FFAC1);
  v91 = (void *)*((_QWORD *)this + 10);
  if (v91)
  {
    *((_QWORD *)this + 11) = v91;
    operator delete(v91);
  }
  v92 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v92)
    MEMORY[0x212BB9B60](v92, 0x1000C4077774924);
  v93 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v93)
    MEMORY[0x212BB9B60](v93, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK::~ARI_IBICallPsLTEAttachApnConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK::pack(AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  const void *v26;
  _BYTE *v27;
  _BYTE *v28;
  const void *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  const void *v34;
  const void *v35;
  const void *v36;
  const void *v37;
  const void *v38;
  const void *v39;
  const void *v40;
  const void *v41;
  const void *v42;
  const void *v43;
  const void *v44;
  const void *v45;
  _BYTE *v46;
  _BYTE *v47;
  const void *v48;
  const void *v49;
  const void *v50;
  const void *v51;
  const void *v52;
  const void *v53;
  const void *v54;
  const void *v55;
  const void *v56;
  const void *v57;
  const void *v58;
  const void *v59;
  const void *v60;
  const void *v61;
  const void *v62;
  const void *v63;
  const void *v64;
  _BYTE *v65;
  _BYTE *v66;
  const void *v67;
  const void *v68;
  const void *v69;
  const void *v70;
  const void *v71;
  const void *v72;
  const void *v73;
  const void *v74;
  const void *v75;
  const void *v76;
  const void *v77;
  const void *v78;
  const void *v79;
  const void *v80;
  const void *v81;
  const void *v82;
  const void *v83;
  _BYTE *v84;
  _BYTE *v85;
  _BYTE *v86;
  _BYTE *v87;
  const void *v88;
  _BYTE *v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  const void *v93;
  _BYTE *v94;
  _BYTE *v95;
  _BYTE *v96;
  _BYTE *v97;
  const void *v98;
  _BYTE *v99;
  _BYTE *v100;
  _BYTE *v101;
  _BYTE *v102;
  const void *v103;
  const void *v104;
  const void *v105;
  const void *v106;
  const void *v107;
  const void *v108;
  const void *v109;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 0x18uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v12, 4uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v13, 4uLL, 0), !(_DWORD)result))
              {
                v14 = (const void *)*((_QWORD *)this + 17);
                if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v14, 4uLL, 0), !(_DWORD)result))
                {
                  v15 = (const void *)*((_QWORD *)this + 18);
                  if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v15, 4uLL, 0), !(_DWORD)result))
                  {
                    v16 = (const void *)*((_QWORD *)this + 19);
                    if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v16, 4uLL, 0), !(_DWORD)result))
                    {
                      v17 = (const void *)*((_QWORD *)this + 20);
                      if (!v17 || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v17, 4uLL, 0), !(_DWORD)result))
                      {
                        v18 = (const void *)*((_QWORD *)this + 21);
                        if (!v18
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v18, 4uLL, 0), !(_DWORD)result))
                        {
                          v19 = (const void *)*((_QWORD *)this + 22);
                          if (!v19
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v19, 4uLL, 0), !(_DWORD)result))
                          {
                            v20 = (const void *)*((_QWORD *)this + 23);
                            if (!v20
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v20, 4uLL, 0), !(_DWORD)result))
                            {
                              v21 = (const void *)*((_QWORD *)this + 24);
                              if (!v21
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v21, 4uLL, 0), !(_DWORD)result))
                              {
                                v22 = (const void *)*((_QWORD *)this + 25);
                                if (!v22
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v22, 4uLL, 0), !(_DWORD)result))
                                {
                                  v23 = (const void *)*((_QWORD *)this + 26);
                                  if (!v23
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v23, 4uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v24 = (const void *)*((_QWORD *)this + 27);
                                    if (!v24
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v24, 4uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v25 = (const void *)*((_QWORD *)this + 28);
                                      if (!v25
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v25, 4uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v26 = (const void *)*((_QWORD *)this + 29);
                                        if (!v26
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v26, 4uLL, 0),
                                              !(_DWORD)result))
                                        {
                                          v27 = (_BYTE *)*((_QWORD *)this + 30);
                                          if (!v27
                                            || (v28 = (_BYTE *)*((_QWORD *)this + 31), v27 == v28)
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v27, v28 - v27, 0),
                                                !(_DWORD)result))
                                          {
                                            v29 = (const void *)*((_QWORD *)this + 33);
                                            if (!v29
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v29, 0x18uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v30 = (const void *)*((_QWORD *)this + 34);
                                              if (!v30
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 33, v30, 4uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v31 = (const void *)*((_QWORD *)this + 35);
                                                if (!v31
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 35, v31, 4uLL, 0),
                                                      !(_DWORD)result))
                                                {
                                                  v32 = (const void *)*((_QWORD *)this + 36);
                                                  if (!v32
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 36, v32, 4uLL, 0), !(_DWORD)result))
                                                  {
                                                    v33 = (const void *)*((_QWORD *)this + 37);
                                                    if (!v33
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 37, v33, 4uLL, 0), !(_DWORD)result))
                                                    {
                                                      v34 = (const void *)*((_QWORD *)this + 38);
                                                      if (!v34
                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 38, v34, 4uLL, 0), !(_DWORD)result))
                                                      {
                                                        v35 = (const void *)*((_QWORD *)this + 39);
                                                        if (!v35
                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 39, v35, 4uLL, 0), !(_DWORD)result))
                                                        {
                                                          v36 = (const void *)*((_QWORD *)this + 40);
                                                          if (!v36
                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 40, v36, 4uLL, 0), !(_DWORD)result))
                                                          {
                                                            v37 = (const void *)*((_QWORD *)this + 41);
                                                            if (!v37
                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 41, v37, 4uLL, 0), !(_DWORD)result))
                                                            {
                                                              v38 = (const void *)*((_QWORD *)this + 42);
                                                              if (!v38
                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 42, v38, 4uLL, 0), !(_DWORD)result))
                                                              {
                                                                v39 = (const void *)*((_QWORD *)this + 43);
                                                                if (!v39
                                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 43, v39, 4uLL, 0), !(_DWORD)result))
                                                                {
                                                                  v40 = (const void *)*((_QWORD *)this + 44);
                                                                  if (!v40
                                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 44, v40, 4uLL, 0), !(_DWORD)result))
                                                                  {
                                                                    v41 = (const void *)*((_QWORD *)this + 45);
                                                                    if (!v41
                                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 45, v41, 4uLL, 0), !(_DWORD)result))
                                                                    {
                                                                      v42 = (const void *)*((_QWORD *)this + 46);
                                                                      if (!v42
                                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 46, v42, 4uLL, 0), !(_DWORD)result))
                                                                      {
                                                                        v43 = (const void *)*((_QWORD *)this + 47);
                                                                        if (!v43
                                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 47, v43, 4uLL, 0), !(_DWORD)result))
                                                                        {
                                                                          v44 = (const void *)*((_QWORD *)this + 48);
                                                                          if (!v44
                                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 48, v44, 4uLL, 0), !(_DWORD)result))
                                                                          {
                                                                            v45 = (const void *)*((_QWORD *)this + 49);
                                                                            if (!v45
                                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 49, v45, 4uLL, 0), !(_DWORD)result))
                                                                            {
                                                                              v46 = (_BYTE *)*((_QWORD *)this + 50);
                                                                              if (!v46
                                                                                || (v47 = (_BYTE *)*((_QWORD *)this + 51),
                                                                                    v46 == v47)
                                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 54, v46, v47 - v46, 0), !(_DWORD)result))
                                                                              {
                                                                                v48 = (const void *)*((_QWORD *)this + 53);
                                                                                if (!v48
                                                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 55, v48, 0x18uLL, 0), !(_DWORD)result))
                                                                                {
                                                                                  v49 = (const void *)*((_QWORD *)this + 54);
                                                                                  if (!v49
                                                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 58, v49, 4uLL, 0), !(_DWORD)result))
                                                                                  {
                                                                                    v50 = (const void *)*((_QWORD *)this + 55);
                                                                                    if (!v50
                                                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 60, v50, 4uLL, 0), !(_DWORD)result))
                                                                                    {
                                                                                      v51 = (const void *)*((_QWORD *)this + 56);
                                                                                      if (!v51
                                                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 61, v51, 4uLL, 0),
                                                                                            !(_DWORD)result))
                                                                                      {
                                                                                        v52 = (const void *)*((_QWORD *)this + 57);
                                                                                        if (!v52
                                                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 62, v52, 4uLL, 0),
                                                                                              !(_DWORD)result))
                                                                                        {
                                                                                          v53 = (const void *)*((_QWORD *)this + 58);
                                                                                          if (!v53
                                                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 63, v53, 4uLL, 0),
                                                                                                !(_DWORD)result))
                                                                                          {
                                                                                            v54 = (const void *)*((_QWORD *)this + 59);
                                                                                            if (!v54
                                                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 64, v54, 4uLL, 0),
                                                                                                  !(_DWORD)result))
                                                                                            {
                                                                                              v55 = (const void *)*((_QWORD *)this + 60);
                                                                                              if (!v55
                                                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 65, v55, 4uLL, 0),
                                                                                                    !(_DWORD)result))
                                                                                              {
                                                                                                v56 = (const void *)*((_QWORD *)this + 61);
                                                                                                if (!v56 || (result = AriMsg::pack(*((AriMsg **)this + 6), 66, v56, 4uLL, 0), !(_DWORD)result))
                                                                                                {
                                                                                                  v57 = (const void *)*((_QWORD *)this + 62);
                                                                                                  if (!v57 || (result = AriMsg::pack(*((AriMsg **)this + 6), 67, v57, 4uLL, 0), !(_DWORD)result))
                                                                                                  {
                                                                                                    v58 = (const void *)*((_QWORD *)this + 63);
                                                                                                    if (!v58 || (result = AriMsg::pack(*((AriMsg **)this + 6), 68, v58, 4uLL, 0), !(_DWORD)result))
                                                                                                    {
                                                                                                      v59 = (const void *)*((_QWORD *)this + 64);
                                                                                                      if (!v59 || (result = AriMsg::pack(*((AriMsg **)this + 6), 69, v59, 4uLL, 0), !(_DWORD)result))
                                                                                                      {
                                                                                                        v60 = (const void *)*((_QWORD *)this + 65);
                                                                                                        if (!v60 || (result = AriMsg::pack(*((AriMsg **)this + 6), 70, v60, 4uLL, 0), !(_DWORD)result))
                                                                                                        {
                                                                                                          v61 = (const void *)*((_QWORD *)this + 66);
                                                                                                          if (!v61 || (result = AriMsg::pack(*((AriMsg **)this + 6), 71, v61, 4uLL, 0), !(_DWORD)result))
                                                                                                          {
                                                                                                            v62 = (const void *)*((_QWORD *)this + 67);
                                                                                                            if (!v62 || (result = AriMsg::pack(*((AriMsg **)this + 6), 72, v62, 4uLL, 0), !(_DWORD)result))
                                                                                                            {
                                                                                                              v63 = (const void *)*((_QWORD *)this + 68);
                                                                                                              if (!v63 || (result = AriMsg::pack(*((AriMsg **)this + 6), 73, v63, 4uLL, 0), !(_DWORD)result))
                                                                                                              {
                                                                                                                v64 = (const void *)*((_QWORD *)this + 69);
                                                                                                                if (!v64 || (result = AriMsg::pack(*((AriMsg **)this + 6), 74, v64, 4uLL, 0), !(_DWORD)result))
                                                                                                                {
                                                                                                                  v65 = (_BYTE *)*((_QWORD *)this + 70);
                                                                                                                  if (!v65 || (v66 = (_BYTE *)*((_QWORD *)this + 71), v65 == v66) || (result = AriMsg::pack(*((AriMsg **)this + 6), 79, v65, v66 - v65, 0), !(_DWORD)result))
                                                                                                                  {
                                                                                                                    v67 = (const void *)*((_QWORD *)this + 73);
                                                                                                                    if (!v67 || (result = AriMsg::pack(*((AriMsg **)this + 6), 80, v67, 0x18uLL, 0), !(_DWORD)result))
                                                                                                                    {
                                                                                                                      v68 = (const void *)*((_QWORD *)this + 74);
                                                                                                                      if (!v68 || (result = AriMsg::pack(*((AriMsg **)this + 6), 83, v68, 4uLL, 0), !(_DWORD)result))
                                                                                                                      {
                                                                                                                        v69 = (const void *)*((_QWORD *)this + 75);
                                                                                                                        if (!v69 || (result = AriMsg::pack(*((AriMsg **)this + 6), 85, v69, 4uLL, 0), !(_DWORD)result))
                                                                                                                        {
                                                                                                                          v70 = (const void *)*((_QWORD *)this + 76);
                                                                                                                          if (!v70 || (result = AriMsg::pack(*((AriMsg **)this + 6), 86, v70, 4uLL, 0), !(_DWORD)result))
                                                                                                                          {
                                                                                                                            v71 = (const void *)*((_QWORD *)this + 77);
                                                                                                                            if (!v71 || (result = AriMsg::pack(*((AriMsg **)this + 6), 87, v71, 4uLL, 0), !(_DWORD)result))
                                                                                                                            {
                                                                                                                              v72 = (const void *)*((_QWORD *)this + 78);
                                                                                                                              if (!v72 || (result = AriMsg::pack(*((AriMsg **)this + 6), 88, v72, 4uLL, 0), !(_DWORD)result))
                                                                                                                              {
                                                                                                                                v73 = (const void *)*((_QWORD *)this + 79);
                                                                                                                                if (!v73 || (result = AriMsg::pack(*((AriMsg **)this + 6), 89, v73, 4uLL, 0), !(_DWORD)result))
                                                                                                                                {
                                                                                                                                  v74 = (const void *)*((_QWORD *)this + 80);
                                                                                                                                  if (!v74 || (result = AriMsg::pack(*((AriMsg **)this + 6), 90, v74, 4uLL, 0), !(_DWORD)result))
                                                                                                                                  {
                                                                                                                                    v75 = (const void *)*((_QWORD *)this + 81);
                                                                                                                                    if (!v75 || (result = AriMsg::pack(*((AriMsg **)this + 6), 91, v75, 4uLL, 0), !(_DWORD)result))
                                                                                                                                    {
                                                                                                                                      v76 = (const void *)*((_QWORD *)this + 82);
                                                                                                                                      if (!v76 || (result = AriMsg::pack(*((AriMsg **)this + 6), 92, v76, 4uLL, 0), !(_DWORD)result))
                                                                                                                                      {
                                                                                                                                        v77 = (const void *)*((_QWORD *)this + 83);
                                                                                                                                        if (!v77 || (result = AriMsg::pack(*((AriMsg **)this + 6), 93, v77, 4uLL, 0), !(_DWORD)result))
                                                                                                                                        {
                                                                                                                                          v78 = (const void *)*((_QWORD *)this + 84);
                                                                                                                                          if (!v78 || (result = AriMsg::pack(*((AriMsg **)this + 6), 94, v78, 4uLL, 0), !(_DWORD)result))
                                                                                                                                          {
                                                                                                                                            v79 = (const void *)*((_QWORD *)this + 85);
                                                                                                                                            if (!v79 || (result = AriMsg::pack(*((AriMsg **)this + 6), 95, v79, 4uLL, 0), !(_DWORD)result))
                                                                                                                                            {
                                                                                                                                              v80 = (const void *)*((_QWORD *)this + 86);
                                                                                                                                              if (!v80 || (result = AriMsg::pack(*((AriMsg **)this + 6), 96, v80, 4uLL, 0), !(_DWORD)result))
                                                                                                                                              {
                                                                                                                                                v81 = (const void *)*((_QWORD *)this + 87);
                                                                                                                                                if (!v81 || (result = AriMsg::pack(*((AriMsg **)this + 6), 97, v81, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                {
                                                                                                                                                  v82 = (const void *)*((_QWORD *)this + 88);
                                                                                                                                                  if (!v82 || (result = AriMsg::pack(*((AriMsg **)this + 6), 98, v82, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                  {
                                                                                                                                                    v83 = (const void *)*((_QWORD *)this + 89);
                                                                                                                                                    if (!v83 || (result = AriMsg::pack(*((AriMsg **)this + 6), 99, v83, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                    {
                                                                                                                                                      v84 = (_BYTE *)*((_QWORD *)this + 90);
                                                                                                                                                      if (!v84 || (v85 = (_BYTE *)*((_QWORD *)this + 91), v84 == v85) || (result = AriMsg::pack(*((AriMsg **)this + 6), 112, v84, v85 - v84, 0), !(_DWORD)result))
                                                                                                                                                      {
                                                                                                                                                        v86 = (_BYTE *)*((_QWORD *)this + 93);
                                                                                                                                                        if (!v86 || (v87 = (_BYTE *)*((_QWORD *)this + 94), v86 == v87) || (result = AriMsg::pack(*((AriMsg **)this + 6), 113, v86, v87 - v86, 0), !(_DWORD)result))
                                                                                                                                                        {
                                                                                                                                                          v88 = (const void *)*((_QWORD *)this + 96);
                                                                                                                                                          if (!v88 || (result = AriMsg::pack(*((AriMsg **)this + 6), 114, v88, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                          {
                                                                                                                                                            v89 = (_BYTE *)*((_QWORD *)this + 97);
                                                                                                                                                            if (!v89 || (v90 = (_BYTE *)*((_QWORD *)this + 98), v89 == v90) || (result = AriMsg::pack(*((AriMsg **)this + 6), 116, v89, v90 - v89, 0), !(_DWORD)result))
                                                                                                                                                            {
                                                                                                                                                              v91 = (_BYTE *)*((_QWORD *)this + 100);
                                                                                                                                                              if (!v91 || (v92 = (_BYTE *)*((_QWORD *)this + 101), v91 == v92) || (result = AriMsg::pack(*((AriMsg **)this + 6), 117, v91, v92 - v91, 0), !(_DWORD)result))
                                                                                                                                                              {
                                                                                                                                                                v93 = (const void *)*((_QWORD *)this + 103);
                                                                                                                                                                if (!v93 || (result = AriMsg::pack(*((AriMsg **)this + 6), 118, v93, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                {
                                                                                                                                                                  v94 = (_BYTE *)*((_QWORD *)this + 104);
                                                                                                                                                                  if (!v94 || (v95 = (_BYTE *)*((_QWORD *)this + 105), v94 == v95) || (result = AriMsg::pack(*((AriMsg **)this + 6), 120, v94, v95 - v94, 0), !(_DWORD)result))
                                                                                                                                                                  {
                                                                                                                                                                    v96 = (_BYTE *)*((_QWORD *)this + 107);
                                                                                                                                                                    if (!v96 || (v97 = (_BYTE *)*((_QWORD *)this + 108), v96 == v97) || (result = AriMsg::pack(*((AriMsg **)this + 6), 121, v96, v97 - v96, 0), !(_DWORD)result))
                                                                                                                                                                    {
                                                                                                                                                                      v98 = (const void *)*((_QWORD *)this + 110);
                                                                                                                                                                      if (!v98 || (result = AriMsg::pack(*((AriMsg **)this + 6), 122, v98, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                      {
                                                                                                                                                                        v99 = (_BYTE *)*((_QWORD *)this + 111);
                                                                                                                                                                        if (!v99 || (v100 = (_BYTE *)*((_QWORD *)this + 112), v99 == v100) || (result = AriMsg::pack(*((AriMsg **)this + 6), 124, v99, v100 - v99, 0), !(_DWORD)result))
                                                                                                                                                                        {
                                                                                                                                                                          v101 = (_BYTE *)*((_QWORD *)this + 114);
                                                                                                                                                                          if (!v101 || (v102 = (_BYTE *)*((_QWORD *)this + 115), v101 == v102) || (result = AriMsg::pack(*((AriMsg **)this + 6), 125, v101, v102 - v101, 0), !(_DWORD)result))
                                                                                                                                                                          {
                                                                                                                                                                            v103 = (const void *)*((_QWORD *)this + 117);
                                                                                                                                                                            if (!v103 || (result = AriMsg::pack(*((AriMsg **)this + 6), 126, v103, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                            {
                                                                                                                                                                              v104 = (const void *)*((_QWORD *)this + 118);
                                                                                                                                                                              if (!v104 || (result = AriMsg::pack(*((AriMsg **)this + 6), 129, v104, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                              {
                                                                                                                                                                                v105 = (const void *)*((_QWORD *)this + 119);
                                                                                                                                                                                if (!v105 || (result = AriMsg::pack(*((AriMsg **)this + 6), 130, v105, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                                {
                                                                                                                                                                                  v106 = (const void *)*((_QWORD *)this + 120);
                                                                                                                                                                                  if (!v106 || (result = AriMsg::pack(*((AriMsg **)this + 6), 131, v106, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                                  {
                                                                                                                                                                                    v107 = (const void *)*((_QWORD *)this + 121);
                                                                                                                                                                                    if (!v107 || (result = AriMsg::pack(*((AriMsg **)this + 6), 132, v107, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                                    {
                                                                                                                                                                                      v108 = (const void *)*((_QWORD *)this + 122);
                                                                                                                                                                                      if (!v108 || (result = AriMsg::pack(*((AriMsg **)this + 6), 133, v108, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                                      {
                                                                                                                                                                                        v109 = (const void *)*((_QWORD *)this + 123);
                                                                                                                                                                                        if (!v109 || (result = AriMsg::pack(*((AriMsg **)this + 6), 134, v109, 4uLL, 0), !(_DWORD)result))
                                                                                                                                                                                        {
                                                                                                                                                                                          result = 0;
                                                                                                                                                                                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK::unpack(AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  char *v6;
  _QWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  char *v24;
  _QWORD *v25;
  _DWORD *v26;
  _DWORD *v27;
  _DWORD *v28;
  _DWORD *v29;
  _DWORD *v30;
  _DWORD *v31;
  _DWORD *v32;
  _DWORD *v33;
  _DWORD *v34;
  _DWORD *v35;
  _DWORD *v36;
  _DWORD *v37;
  _DWORD *v38;
  _DWORD *v39;
  _DWORD *v40;
  _DWORD *v41;
  char *v42;
  _QWORD *v43;
  _DWORD *v44;
  _DWORD *v45;
  _DWORD *v46;
  _DWORD *v47;
  _DWORD *v48;
  _DWORD *v49;
  _DWORD *v50;
  _DWORD *v51;
  _DWORD *v52;
  _DWORD *v53;
  _DWORD *v54;
  _DWORD *v55;
  _DWORD *v56;
  _DWORD *v57;
  _DWORD *v58;
  _DWORD *v59;
  char *v60;
  _QWORD *v61;
  _DWORD *v62;
  _DWORD *v63;
  _DWORD *v64;
  _DWORD *v65;
  _DWORD *v66;
  _DWORD *v67;
  _DWORD *v68;
  _DWORD *v69;
  _DWORD *v70;
  _DWORD *v71;
  _DWORD *v72;
  _DWORD *v73;
  _DWORD *v74;
  _DWORD *v75;
  _DWORD *v76;
  _DWORD *v77;
  _OWORD *v78;
  _OWORD *v79;
  _DWORD *v80;
  _OWORD *v81;
  _OWORD *v82;
  _DWORD *v83;
  _OWORD *v84;
  _OWORD *v85;
  _DWORD *v86;
  _OWORD *v87;
  _OWORD *v88;
  _DWORD *v89;
  _DWORD *v90;
  _DWORD *v91;
  _DWORD *v92;
  _DWORD *v93;
  _DWORD *v94;
  _DWORD *v95;
  __n128 __p;
  uint64_t v98;
  size_t __sz;
  BOOL v100;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (char *)operator new[]();
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *(_QWORD *)(v6 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 101, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)&v6[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_QWORD *)operator new();
  v7[1] = 0;
  v7[2] = 0;
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 24, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 13, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40504FFAC1);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v8, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v13, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v14, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v15, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v16, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v17, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v18, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 24, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v19, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 25, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v20, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 26, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v21 = (_DWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v21, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 27, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v22, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 28, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v23 = (_DWORD *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v23, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 29, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v24 = (char *)operator new[]();
  *(_OWORD *)v24 = 0u;
  *((_OWORD *)v24 + 1) = 0u;
  *((_OWORD *)v24 + 2) = 0u;
  *((_OWORD *)v24 + 3) = 0u;
  *((_OWORD *)v24 + 4) = 0u;
  *((_OWORD *)v24 + 5) = 0u;
  *(_QWORD *)(v24 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v24, 101, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v24, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v24, (uint64_t)&v24[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)this + 10, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v24, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v25 = (_QWORD *)operator new();
  v25[1] = 0;
  v25[2] = 0;
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v25, 24, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v25, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 33, (uint64_t)v25);
    MEMORY[0x212BB9B60](v25, 0x1000C40504FFAC1);
  }
  __p.n128_u8[0] = 0;
  v26 = (_DWORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 33, v26, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 34, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v27 = (_DWORD *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 35, v27, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 35, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v28 = (_DWORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 36, v28, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 36, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v29 = (_DWORD *)operator new();
  *v29 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 37, v29, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 37, v29);
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v30 = (_DWORD *)operator new();
  *v30 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 38, v30, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 38, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v31 = (_DWORD *)operator new();
  *v31 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 39, v31, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 39, v31);
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v32 = (_DWORD *)operator new();
  *v32 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 40, v32, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v32, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 40, v32);
    MEMORY[0x212BB9B60](v32, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v33 = (_DWORD *)operator new();
  *v33 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 41, v33, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 41, v33);
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v34 = (_DWORD *)operator new();
  *v34 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 42, v34, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v34, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 42, v34);
    MEMORY[0x212BB9B60](v34, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v35 = (_DWORD *)operator new();
  *v35 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 43, v35, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 43, v35);
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v36 = (_DWORD *)operator new();
  *v36 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 44, v36, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 44, v36);
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v37 = (_DWORD *)operator new();
  *v37 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 45, v37, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v37, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 45, v37);
    MEMORY[0x212BB9B60](v37, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v38 = (_DWORD *)operator new();
  *v38 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 46, v38, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v38, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 46, v38);
    MEMORY[0x212BB9B60](v38, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v39 = (_DWORD *)operator new();
  *v39 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 47, v39, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v39, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 47, v39);
    MEMORY[0x212BB9B60](v39, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v40 = (_DWORD *)operator new();
  *v40 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 48, v40, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v40, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 48, v40);
    MEMORY[0x212BB9B60](v40, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v41 = (_DWORD *)operator new();
  *v41 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 49, v41, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v41, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 49, v41);
    MEMORY[0x212BB9B60](v41, 0x1000C4052888210);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v42 = (char *)operator new[]();
  *(_OWORD *)v42 = 0u;
  *((_OWORD *)v42 + 1) = 0u;
  *((_OWORD *)v42 + 2) = 0u;
  *((_OWORD *)v42 + 3) = 0u;
  *((_OWORD *)v42 + 4) = 0u;
  *((_OWORD *)v42 + 5) = 0u;
  *(_QWORD *)(v42 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 54, v42, 101, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v42, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v42, (uint64_t)&v42[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)((char *)this + 400), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v42, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v43 = (_QWORD *)operator new();
  v43[1] = 0;
  v43[2] = 0;
  *v43 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 55, v43, 24, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v43, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 53, (uint64_t)v43);
    MEMORY[0x212BB9B60](v43, 0x1000C40504FFAC1);
  }
  __p.n128_u8[0] = 0;
  v44 = (_DWORD *)operator new();
  *v44 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 58, v44, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v44, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 54, v44);
    MEMORY[0x212BB9B60](v44, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v45 = (_DWORD *)operator new();
  *v45 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 60, v45, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v45, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 55, v45);
    MEMORY[0x212BB9B60](v45, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v46 = (_DWORD *)operator new();
  *v46 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 61, v46, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v46, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 56, v46);
    MEMORY[0x212BB9B60](v46, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v47 = (_DWORD *)operator new();
  *v47 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 62, v47, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v47, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 57, v47);
    MEMORY[0x212BB9B60](v47, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v48 = (_DWORD *)operator new();
  *v48 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 63, v48, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v48, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 58, v48);
    MEMORY[0x212BB9B60](v48, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v49 = (_DWORD *)operator new();
  *v49 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 64, v49, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v49, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 59, v49);
    MEMORY[0x212BB9B60](v49, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v50 = (_DWORD *)operator new();
  *v50 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 65, v50, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v50, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 60, v50);
    MEMORY[0x212BB9B60](v50, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v51 = (_DWORD *)operator new();
  *v51 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 66, v51, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v51, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 61, v51);
    MEMORY[0x212BB9B60](v51, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v52 = (_DWORD *)operator new();
  *v52 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 67, v52, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v52, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 62, v52);
    MEMORY[0x212BB9B60](v52, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v53 = (_DWORD *)operator new();
  *v53 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 68, v53, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v53, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 63, v53);
    MEMORY[0x212BB9B60](v53, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v54 = (_DWORD *)operator new();
  *v54 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 69, v54, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v54, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 64, v54);
    MEMORY[0x212BB9B60](v54, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v55 = (_DWORD *)operator new();
  *v55 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 70, v55, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v55, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 65, v55);
    MEMORY[0x212BB9B60](v55, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v56 = (_DWORD *)operator new();
  *v56 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 71, v56, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v56, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 66, v56);
    MEMORY[0x212BB9B60](v56, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v57 = (_DWORD *)operator new();
  *v57 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 72, v57, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v57, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 67, v57);
    MEMORY[0x212BB9B60](v57, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v58 = (_DWORD *)operator new();
  *v58 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 73, v58, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v58, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 68, v58);
    MEMORY[0x212BB9B60](v58, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v59 = (_DWORD *)operator new();
  *v59 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 74, v59, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v59, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 69, v59);
    MEMORY[0x212BB9B60](v59, 0x1000C4052888210);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v60 = (char *)operator new[]();
  *(_OWORD *)v60 = 0u;
  *((_OWORD *)v60 + 1) = 0u;
  *((_OWORD *)v60 + 2) = 0u;
  *((_OWORD *)v60 + 3) = 0u;
  *((_OWORD *)v60 + 4) = 0u;
  *((_OWORD *)v60 + 5) = 0u;
  *(_QWORD *)(v60 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 79, v60, 101, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v60, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v60, (uint64_t)&v60[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)((char *)this + 560), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v60, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v61 = (_QWORD *)operator new();
  v61[1] = 0;
  v61[2] = 0;
  *v61 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 80, v61, 24, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v61, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 73, (uint64_t)v61);
    MEMORY[0x212BB9B60](v61, 0x1000C40504FFAC1);
  }
  __p.n128_u8[0] = 0;
  v62 = (_DWORD *)operator new();
  *v62 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 83, v62, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v62, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 74, v62);
    MEMORY[0x212BB9B60](v62, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v63 = (_DWORD *)operator new();
  *v63 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 85, v63, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v63, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 75, v63);
    MEMORY[0x212BB9B60](v63, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v64 = (_DWORD *)operator new();
  *v64 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 86, v64, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v64, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 76, v64);
    MEMORY[0x212BB9B60](v64, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v65 = (_DWORD *)operator new();
  *v65 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 87, v65, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v65, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 77, v65);
    MEMORY[0x212BB9B60](v65, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v66 = (_DWORD *)operator new();
  *v66 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 88, v66, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v66, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 78, v66);
    MEMORY[0x212BB9B60](v66, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v67 = (_DWORD *)operator new();
  *v67 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 89, v67, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v67, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 79, v67);
    MEMORY[0x212BB9B60](v67, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v68 = (_DWORD *)operator new();
  *v68 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 90, v68, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v68, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 80, v68);
    MEMORY[0x212BB9B60](v68, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v69 = (_DWORD *)operator new();
  *v69 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 91, v69, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v69, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 81, v69);
    MEMORY[0x212BB9B60](v69, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v70 = (_DWORD *)operator new();
  *v70 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 92, v70, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v70, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 82, v70);
    MEMORY[0x212BB9B60](v70, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v71 = (_DWORD *)operator new();
  *v71 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 93, v71, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v71, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 83, v71);
    MEMORY[0x212BB9B60](v71, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v72 = (_DWORD *)operator new();
  *v72 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 94, v72, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v72, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 84, v72);
    MEMORY[0x212BB9B60](v72, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v73 = (_DWORD *)operator new();
  *v73 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 95, v73, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v73, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 85, v73);
    MEMORY[0x212BB9B60](v73, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v74 = (_DWORD *)operator new();
  *v74 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 96, v74, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v74, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 86, v74);
    MEMORY[0x212BB9B60](v74, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v75 = (_DWORD *)operator new();
  *v75 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 97, v75, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v75, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 87, v75);
    MEMORY[0x212BB9B60](v75, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v76 = (_DWORD *)operator new();
  *v76 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 98, v76, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v76, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 88, v76);
    MEMORY[0x212BB9B60](v76, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v77 = (_DWORD *)operator new();
  *v77 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 99, v77, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v77, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 89, v77);
    MEMORY[0x212BB9B60](v77, 0x1000C4052888210);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v78 = (_OWORD *)operator new[]();
  *v78 = 0u;
  v78[1] = 0u;
  v78[2] = 0u;
  v78[3] = 0u;
  *((_BYTE *)v78 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 112, v78, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v78, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v78, (uint64_t)v78 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)this + 30, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v78, 0x1000C8077774924);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v79 = (_OWORD *)operator new[]();
  *v79 = 0u;
  v79[1] = 0u;
  v79[2] = 0u;
  v79[3] = 0u;
  *((_BYTE *)v79 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 113, v79, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v79, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v79, (uint64_t)v79 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)this + 31, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v79, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v80 = (_DWORD *)operator new();
  *v80 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 114, v80, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v80, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 96, v80);
    MEMORY[0x212BB9B60](v80, 0x1000C4052888210);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v81 = (_OWORD *)operator new[]();
  *v81 = 0u;
  v81[1] = 0u;
  v81[2] = 0u;
  v81[3] = 0u;
  *((_BYTE *)v81 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 116, v81, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v81, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v81, (uint64_t)v81 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)((char *)this + 776), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v81, 0x1000C8077774924);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v82 = (_OWORD *)operator new[]();
  *v82 = 0u;
  v82[1] = 0u;
  v82[2] = 0u;
  v82[3] = 0u;
  *((_BYTE *)v82 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 117, v82, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v82, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v82, (uint64_t)v82 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)((char *)this + 800), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v82, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v83 = (_DWORD *)operator new();
  *v83 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 118, v83, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v83, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 103, v83);
    MEMORY[0x212BB9B60](v83, 0x1000C4052888210);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v84 = (_OWORD *)operator new[]();
  *v84 = 0u;
  v84[1] = 0u;
  v84[2] = 0u;
  v84[3] = 0u;
  *((_BYTE *)v84 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 120, v84, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v84, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v84, (uint64_t)v84 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)((char *)this + 832), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v84, 0x1000C8077774924);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v85 = (_OWORD *)operator new[]();
  *v85 = 0u;
  v85[1] = 0u;
  v85[2] = 0u;
  v85[3] = 0u;
  *((_BYTE *)v85 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 121, v85, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v85, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v85, (uint64_t)v85 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)((char *)this + 856), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v85, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v86 = (_DWORD *)operator new();
  *v86 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 122, v86, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v86, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 110, v86);
    MEMORY[0x212BB9B60](v86, 0x1000C4052888210);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v87 = (_OWORD *)operator new[]();
  *v87 = 0u;
  v87[1] = 0u;
  v87[2] = 0u;
  v87[3] = 0u;
  *((_BYTE *)v87 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 124, v87, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v87, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v87, (uint64_t)v87 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)this + 37, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v87, 0x1000C8077774924);
  }
  v100 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v88 = (_OWORD *)operator new[]();
  *v88 = 0u;
  v88[1] = 0u;
  v88[2] = 0u;
  v88[3] = 0u;
  *((_BYTE *)v88 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 125, v88, 65, &v100, &__sz);
  if ((_DWORD)v3 || !v100)
  {
    MEMORY[0x212BB9B48](v88, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v98 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v88, (uint64_t)v88 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)this + 38, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v88, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v89 = (_DWORD *)operator new();
  *v89 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 126, v89, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v89, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 117, v89);
    MEMORY[0x212BB9B60](v89, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v90 = (_DWORD *)operator new();
  *v90 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 129, v90, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v90, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 118, v90);
    MEMORY[0x212BB9B60](v90, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v91 = (_DWORD *)operator new();
  *v91 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 130, v91, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v91, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 119, v91);
    MEMORY[0x212BB9B60](v91, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v92 = (_DWORD *)operator new();
  *v92 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 131, v92, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v92, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 120, v92);
    MEMORY[0x212BB9B60](v92, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v93 = (_DWORD *)operator new();
  *v93 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 132, v93, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v93, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 121, v93);
    MEMORY[0x212BB9B60](v93, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v94 = (_DWORD *)operator new();
  *v94 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 133, v94, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v94, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 122, v94);
    MEMORY[0x212BB9B60](v94, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v95 = (_DWORD *)operator new();
  *v95 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 134, v95, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 123, v95);
  MEMORY[0x212BB9B60](v95, 0x1000C4052888210);
  return v3;
}

void sub_20E14C38C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<char,65ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x42)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 65);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E14C7C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLTEAttachApnConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209747968;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK::ARI_IBICallPsAttachApnConfigRspCb_SDK(AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD008000u, 0);
  *(_QWORD *)result = &off_24C8CFC20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD008000u, 0);
  *(_QWORD *)result = &off_24C8CFC20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK::ARI_IBICallPsAttachApnConfigRspCb_SDK(AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFC20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFC20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK::~ARI_IBICallPsAttachApnConfigRspCb_SDK(AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFC20;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK::~ARI_IBICallPsAttachApnConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK::pack(AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK::unpack(AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E14CB10(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsAttachApnConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218136576;
}

double AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C8000u, 0);
  *(_QWORD *)v1 = &off_24C8CFC58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C8000u, 0);
  *(_QWORD *)v1 = &off_24C8CFC58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFC58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFC58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK::~ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8CFC58;
  v2 = (void *)*((_QWORD *)this + 16);
  if (v2)
  {
    *((_QWORD *)this + 17) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 12);
  if (v4)
  {
    *((_QWORD *)this + 13) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK::~ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK::pack(AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 1uLL, 0), !(_DWORD)result))
            {
              v12 = (_BYTE *)*((_QWORD *)this + 16);
              if (!v12
                || (v13 = (_BYTE *)*((_QWORD *)this + 17), v12 == v13)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, v13 - v12, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK::unpack(AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  _OWORD *v10;
  char *v11;
  char *v12;
  unint64_t v13;
  size_t v14;
  void **v15;
  unint64_t v16;
  const char *v17;
  BOOL *v18;
  void *v19;
  _BYTE *v20;
  _OWORD *v21;
  void **v22;
  _BYTE *v23;
  void *v24;
  const char *v25;
  BOOL *v26;
  void *v27;
  void *__p;
  _BYTE *v30;
  uint64_t v31;
  BOOL v32[8];
  BOOL v33;
  BOOL v34[8];
  char v35;

  v34[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v34, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v34[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v34[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, v34, 0);
  if ((_DWORD)v3 || !v34[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v34[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 1, v34, 0);
  if ((_DWORD)v3 || !v34[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v34[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 1, v34, 0);
  if ((_DWORD)v3 || !v34[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v32[0] = 0;
  __p = (void *)0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 96, v32, (unint64_t *)&__p);
  if ((_DWORD)v3 || !v32[0])
  {
    MEMORY[0x212BB9B48](v10, 0x1000C807D9DAB85);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if ((unint64_t)__p >= 0xC)
    {
      v13 = (unint64_t)__p / 0xC;
      v14 = 12 * ((unint64_t)__p / 0xC);
      v11 = (char *)operator new(v14);
      v12 = &v11[12 * v13];
      memcpy(v11, v10, v14);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    v15 = (void **)((char *)this + 96);
    v16 = 0xAAAAAAAAAAAAAAABLL * ((v12 - v11) >> 2);
    if (v16 < 9)
    {
      v19 = *v15;
      if (*v15)
      {
        *((_QWORD *)this + 13) = v19;
        operator delete(v19);
        *v15 = 0;
        *((_QWORD *)this + 13) = 0;
        *((_QWORD *)this + 14) = 0;
      }
      *((_QWORD *)this + 12) = v11;
      *((_QWORD *)this + 13) = v12;
      *((_QWORD *)this + 14) = v12;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v34);
      if (v35 >= 0)
        v18 = v34;
      else
        v18 = *(BOOL **)v34;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v17, v18, 360, (char *)this + 96, v16, 8);
      if (v35 < 0)
        operator delete(*(void **)v34);
      if (v11)
        operator delete(v11);
    }
    MEMORY[0x212BB9B48](v10, 0x1000C807D9DAB85);
  }
  v34[0] = 0;
  v20 = (_BYTE *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v20, 1, v34, 0);
  if ((_DWORD)v3 || !v34[0])
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
  }
  v33 = 0;
  *(_QWORD *)v32 = 0xAAAAAAAAAAAAAAAALL;
  v21 = (_OWORD *)operator new[]();
  *v21 = 0u;
  v21[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v21, 32, &v33, (unint64_t *)v32);
  if (!(_DWORD)v3 && v33)
  {
    v30 = 0;
    v31 = 0;
    __p = 0;
    std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(&__p, v21, (uint64_t)v21 + 4 * (*(_QWORD *)v32 >> 2), *(_QWORD *)v32 >> 2);
    v22 = (void **)((char *)this + 128);
    v24 = __p;
    v23 = v30;
    if ((unint64_t)(v30 - (_BYTE *)__p) < 0x21)
    {
      v27 = *v22;
      if (*v22)
      {
        *((_QWORD *)this + 17) = v27;
        operator delete(v27);
        *v22 = 0;
        *((_QWORD *)this + 17) = 0;
        *((_QWORD *)this + 18) = 0;
        v24 = __p;
        v23 = v30;
      }
      *((_QWORD *)this + 16) = v24;
      *((_QWORD *)this + 17) = v23;
      *((_QWORD *)this + 18) = v31;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v34);
      if (v35 >= 0)
        v26 = v34;
      else
        v26 = *(BOOL **)v34;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v25, v26, 360, (char *)this + 128, (v30 - (_BYTE *)__p) >> 2, 8);
      if (v35 < 0)
        operator delete(*(void **)v34);
      if (__p)
      {
        v30 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v21, 0x1000C8052888210);
  return v3;
}

void sub_20E14D4E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 49) < 0)
    operator delete(*(void **)(v17 - 72));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLoopbackTestModeConfigIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227311616;
}

double AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA10000u, 1);
  *(_QWORD *)v1 = &off_24C8CFC90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA10000u, 1);
  *(_QWORD *)v1 = &off_24C8CFC90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFC90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFC90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK::~ARI_IBICallPsLoopbackTestModeConfigRsp_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8CFC90;
  v2 = (void *)*((_QWORD *)this + 11);
  if (v2)
  {
    *((_QWORD *)this + 12) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK::~ARI_IBICallPsLoopbackTestModeConfigRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK::pack(AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK::unpack(AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  void *v7;
  char *v8;
  char *v9;
  unint64_t v10;
  size_t v11;
  void **v12;
  unint64_t v13;
  const char *v14;
  void **v15;
  void *v16;
  unint64_t v18;
  BOOL v19;
  void *__p[2];
  char v21;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x2270uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 8816, &v19, &v18);
  if (!(_DWORD)v3 && v19)
  {
    if (v18 >= 0x89C)
    {
      v10 = v18 / 0x89C;
      v11 = 2204 * (v18 / 0x89C);
      v8 = (char *)operator new(v11);
      v9 = &v8[2204 * v10];
      memcpy(v8, v7, v11);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
    v12 = (void **)((char *)this + 88);
    v13 = 0x6E93BEF4627F4D97 * ((v9 - v8) >> 2);
    if (v13 < 5)
    {
      v16 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v12 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v9;
      *((_QWORD *)this + 13) = v9;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v21 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, v12, v13, 4);
      if (v21 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
  }
  MEMORY[0x212BB9B48](v7, 0x1000C80DF23D64DLL);
  return v3;
}

void sub_20E14DBE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80DF23D64DLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLoopbackTestModeConfigRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211877888;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8C0000u, 0);
  *(_QWORD *)result = &off_24C8CFCC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8C0000u, 0);
  *(_QWORD *)result = &off_24C8CFCC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFCC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFCC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK::~ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFCC8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK::~ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK::pack(AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK::unpack(AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E14DF98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLoopbackTestModeStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227278848;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA08000u, 1);
  *(_QWORD *)result = &off_24C8CFD00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA08000u, 1);
  *(_QWORD *)result = &off_24C8CFD00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFD00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFD00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK::~ARI_IBICallPsLoopbackTestModeStatusRsp_SDK(AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFD00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK::~ARI_IBICallPsLoopbackTestModeStatusRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK::pack(AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK::unpack(AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E14E2F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLoopbackTestModeStatusRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211845120;
}

double AriSdk::ARI_IBICallPsLqmDataIndCb_SDK::ARI_IBICallPsLqmDataIndCb_SDK(AriSdk::ARI_IBICallPsLqmDataIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD850000u, 0);
  *(_QWORD *)v1 = &off_24C8CFD38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD850000u, 0);
  *(_QWORD *)v1 = &off_24C8CFD38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsLqmDataIndCb_SDK::ARI_IBICallPsLqmDataIndCb_SDK(AriSdk::ARI_IBICallPsLqmDataIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFD38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFD38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsLqmDataIndCb_SDK::~ARI_IBICallPsLqmDataIndCb_SDK(AriSdk::ARI_IBICallPsLqmDataIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)this = &off_24C8CFD38;
  v2 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C405DF52C91);
  v6 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4033FC2DF1);
  v7 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  v8 = (void *)*((_QWORD *)this + 15);
  if (v8)
  {
    *((_QWORD *)this + 16) = v8;
    operator delete(v8);
  }
  v9 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C404A09149ALL);
  v11 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C403E1C8BA9);
  v12 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C400D840072);
  v13 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40957D8CC4);
  v14 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLqmDataIndCb_SDK::~ARI_IBICallPsLqmDataIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLqmDataIndCb_SDK::pack(AriSdk::ARI_IBICallPsLqmDataIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 5uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0xB8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0xCuLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 8uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (_BYTE *)*((_QWORD *)this + 15);
                if (!v12
                  || (v13 = (_BYTE *)*((_QWORD *)this + 16), v12 == v13)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, v13 - v12, 0), !(_DWORD)result))
                {
                  v14 = (const void *)*((_QWORD *)this + 18);
                  if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v14, 2uLL, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, 3uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, 0xE0uLL, 0), !(_DWORD)result))
                      {
                        v17 = (const void *)*((_QWORD *)this + 21);
                        if (!v17
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v17, 4uLL, 0), !(_DWORD)result))
                        {
                          v18 = (const void *)*((_QWORD *)this + 22);
                          if (!v18
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v18, 4uLL, 0), !(_DWORD)result))
                          {
                            v19 = (const void *)*((_QWORD *)this + 23);
                            if (!v19
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v19, 4uLL, 0), !(_DWORD)result))
                            {
                              result = 0;
                              *a2 = (AriMsg *)*((_QWORD *)this + 6);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLqmDataIndCb_SDK::unpack(AriSdk::ARI_IBICallPsLqmDataIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _DWORD *v25;
  _OWORD *v26;
  _WORD *v27;
  _BYTE *v28;
  _OWORD *v29;
  _DWORD *v30;
  _DWORD *v31;
  _DWORD *v32;
  __n128 __p;
  uint64_t v35;
  size_t __sz;
  BOOL v37;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *(_DWORD *)v8 = 0;
  v8[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 5, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40957D8CC4);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = operator new();
    *(_DWORD *)v9 = *(_DWORD *)v8;
    *(_BYTE *)(v9 + 4) = v8[4];
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C40957D8CC4);
    MEMORY[0x212BB9B60](v8, 0x1000C40957D8CC4);
  }
  __p.n128_u8[0] = 0;
  v11 = operator new();
  *(_OWORD *)v11 = 0u;
  *(_OWORD *)(v11 + 16) = 0u;
  *(_OWORD *)(v11 + 32) = 0u;
  *(_OWORD *)(v11 + 48) = 0u;
  *(_OWORD *)(v11 + 64) = 0u;
  *(_OWORD *)(v11 + 80) = 0u;
  *(_OWORD *)(v11 + 96) = 0u;
  *(_OWORD *)(v11 + 112) = 0u;
  *(_OWORD *)(v11 + 128) = 0u;
  *(_OWORD *)(v11 + 144) = 0u;
  *(_OWORD *)(v11 + 160) = 0u;
  *(_QWORD *)(v11 + 176) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, (void *)v11, 184, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C400D840072);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = operator new();
    v13 = *(_OWORD *)(v11 + 144);
    *(_OWORD *)(v12 + 128) = *(_OWORD *)(v11 + 128);
    *(_OWORD *)(v12 + 144) = v13;
    *(_OWORD *)(v12 + 160) = *(_OWORD *)(v11 + 160);
    *(_QWORD *)(v12 + 176) = *(_QWORD *)(v11 + 176);
    v14 = *(_OWORD *)(v11 + 80);
    *(_OWORD *)(v12 + 64) = *(_OWORD *)(v11 + 64);
    *(_OWORD *)(v12 + 80) = v14;
    v15 = *(_OWORD *)(v11 + 112);
    *(_OWORD *)(v12 + 96) = *(_OWORD *)(v11 + 96);
    *(_OWORD *)(v12 + 112) = v15;
    v16 = *(_OWORD *)(v11 + 16);
    *(_OWORD *)v12 = *(_OWORD *)v11;
    *(_OWORD *)(v12 + 16) = v16;
    v17 = *(_OWORD *)(v11 + 48);
    *(_OWORD *)(v12 + 32) = *(_OWORD *)(v11 + 32);
    *(_OWORD *)(v12 + 48) = v17;
    v18 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v12;
    if (v18)
      MEMORY[0x212BB9B60](v18, 0x1000C400D840072);
    MEMORY[0x212BB9B60](v11, 0x1000C400D840072);
  }
  __p.n128_u8[0] = 0;
  v19 = (_DWORD *)operator new();
  *(_QWORD *)v19 = 0;
  v19[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v19, 12, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v19, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v20 = operator new();
    *(_QWORD *)v20 = *(_QWORD *)v19;
    *(_DWORD *)(v20 + 8) = v19[2];
    v21 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v20;
    if (v21)
      MEMORY[0x212BB9B60](v21, 0x1000C403E1C8BA9);
    MEMORY[0x212BB9B60](v19, 0x1000C403E1C8BA9);
  }
  __p.n128_u8[0] = 0;
  v22 = (_QWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v22, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v22, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v23 = (_QWORD *)operator new();
    *v23 = *v22;
    v24 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v23;
    if (v24)
      MEMORY[0x212BB9B60](v24, 0x1000C404A09149ALL);
    MEMORY[0x212BB9B60](v22, 0x1000C404A09149ALL);
  }
  __p.n128_u8[0] = 0;
  v25 = (_DWORD *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v25, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  }
  v37 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v26 = (_OWORD *)operator new[]();
  *v26 = 0u;
  v26[1] = 0u;
  v26[2] = 0u;
  v26[3] = 0u;
  v26[4] = 0u;
  v26[5] = 0u;
  *((_DWORD *)v26 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v26, 100, &v37, &__sz);
  if ((_DWORD)v3 || !v37)
  {
    MEMORY[0x212BB9B48](v26, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v35 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v26, (uint64_t)v26 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,100ul>::operator=((std::vector<int> *)this + 5, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v26, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v27 = (_WORD *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v27, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v27, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 18, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v28 = (_BYTE *)operator new();
  *(_WORD *)v28 = 0;
  v28[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v28, 3, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4033FC2DF1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsPowerCost>::operator=<IBICallPsPowerCost&,void>((uint64_t *)this + 19, (uint64_t)v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4033FC2DF1);
  }
  __p.n128_u8[0] = 0;
  v29 = (_OWORD *)operator new();
  *v29 = 0u;
  v29[1] = 0u;
  v29[2] = 0u;
  v29[3] = 0u;
  v29[4] = 0u;
  v29[5] = 0u;
  v29[6] = 0u;
  v29[7] = 0u;
  v29[8] = 0u;
  v29[9] = 0u;
  v29[10] = 0u;
  v29[11] = 0u;
  v29[12] = 0u;
  v29[13] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v29, 224, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v29, 0x1000C405DF52C91);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsLqmFpV2>::operator=<IBICallPsLqmFpV2&,void>((uint64_t *)this + 20, v29);
    MEMORY[0x212BB9B60](v29, 0x1000C405DF52C91);
  }
  __p.n128_u8[0] = 0;
  v30 = (_DWORD *)operator new();
  *v30 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v30, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v31 = (_DWORD *)operator new();
  *v31 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v31, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v31);
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v32 = (_DWORD *)operator new();
  *v32 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v32, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v32);
  MEMORY[0x212BB9B60](v32, 0x1000C4052888210);
  return v3;
}

void sub_20E14F250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,100ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x65)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 100);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E14F440(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *AriSdk::Tlv<IBICallPsPowerCost>::operator=<IBICallPsPowerCost&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_WORD *)v4 = *(_WORD *)a2;
  *(_BYTE *)(v4 + 2) = *(_BYTE *)(a2 + 2);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4033FC2DF1);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICallPsLqmFpV2>::operator=<IBICallPsLqmFpV2&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v4 = (_OWORD *)operator new();
  v5 = a2[11];
  v4[10] = a2[10];
  v4[11] = v5;
  v6 = a2[13];
  v4[12] = a2[12];
  v4[13] = v6;
  v7 = a2[7];
  v4[6] = a2[6];
  v4[7] = v7;
  v8 = a2[9];
  v4[8] = a2[8];
  v4[9] = v8;
  v9 = a2[3];
  v4[2] = a2[2];
  v4[3] = v9;
  v10 = a2[5];
  v4[4] = a2[4];
  v4[5] = v10;
  v11 = a2[1];
  *v4 = *a2;
  v4[1] = v11;
  v12 = *a1;
  *a1 = (uint64_t)v4;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C405DF52C91);
  return a1;
}

BOOL AriSdk::ARI_IBICallPsLqmDataIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLqmDataIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226820096;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLqmQueryReq_SDK::ARI_IBICallPsLqmQueryReq_SDK(AriSdk::ARI_IBICallPsLqmQueryReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC870000u, 0);
  *(_QWORD *)result = &off_24C8CFD70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC870000u, 0);
  *(_QWORD *)result = &off_24C8CFD70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLqmQueryReq_SDK::ARI_IBICallPsLqmQueryReq_SDK(AriSdk::ARI_IBICallPsLqmQueryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFD70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFD70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsLqmQueryReq_SDK::~ARI_IBICallPsLqmQueryReq_SDK(AriSdk::ARI_IBICallPsLqmQueryReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFD70;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLqmQueryReq_SDK::~ARI_IBICallPsLqmQueryReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLqmQueryReq_SDK::pack(AriSdk::ARI_IBICallPsLqmQueryReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLqmQueryReq_SDK::unpack(AriSdk::ARI_IBICallPsLqmQueryReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E14F884(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLqmQueryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLqmQueryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210173952;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK::ARI_IBICallPsLqmQueryRsbCb_SDK(AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD070000u, 0);
  *(_QWORD *)result = &off_24C8CFDA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD070000u, 0);
  *(_QWORD *)result = &off_24C8CFDA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK::ARI_IBICallPsLqmQueryRsbCb_SDK(AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFDA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFDA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK::~ARI_IBICallPsLqmQueryRsbCb_SDK(AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFDA8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK::~ARI_IBICallPsLqmQueryRsbCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK::pack(AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK::unpack(AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 12, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_QWORD *)v6 = *(_QWORD *)v5;
    *(_DWORD *)(v6 + 8) = v5[2];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E14FC18(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLqmQueryRsbCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218562560;
}

double AriSdk::ARI_IBICallPsLqmRegisterReq_SDK::ARI_IBICallPsLqmRegisterReq_SDK(AriSdk::ARI_IBICallPsLqmRegisterReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC868000u, 0);
  *(_QWORD *)v1 = &off_24C8CFDE0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC868000u, 0);
  *(_QWORD *)v1 = &off_24C8CFDE0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsLqmRegisterReq_SDK::ARI_IBICallPsLqmRegisterReq_SDK(AriSdk::ARI_IBICallPsLqmRegisterReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFDE0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFDE0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsLqmRegisterReq_SDK::~ARI_IBICallPsLqmRegisterReq_SDK(AriSdk::ARI_IBICallPsLqmRegisterReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8CFDE0;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLqmRegisterReq_SDK::~ARI_IBICallPsLqmRegisterReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLqmRegisterReq_SDK::pack(AriSdk::ARI_IBICallPsLqmRegisterReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLqmRegisterReq_SDK::unpack(AriSdk::ARI_IBICallPsLqmRegisterReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v18 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v17 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v16 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v15 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v14 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 4, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  return v3;
}

void sub_20E15057C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLqmRegisterReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLqmRegisterReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210141184;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK::ARI_IBICallPsLqmRegisterRspCb_SDK(AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD068000u, 0);
  *(_QWORD *)result = &off_24C8CFE18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD068000u, 0);
  *(_QWORD *)result = &off_24C8CFE18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK::ARI_IBICallPsLqmRegisterRspCb_SDK(AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFE18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFE18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK::~ARI_IBICallPsLqmRegisterRspCb_SDK(AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFE18;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK::~ARI_IBICallPsLqmRegisterRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK::pack(AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK::unpack(AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E150910(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLqmRegisterRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218529792;
}

double AriSdk::ARI_IBICallPsLteAttachIndCb_SDK::ARI_IBICallPsLteAttachIndCb_SDK(AriSdk::ARI_IBICallPsLteAttachIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD878000u, 0);
  *(_QWORD *)v1 = &off_24C8CFE50;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD878000u, 0);
  *(_QWORD *)v1 = &off_24C8CFE50;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsLteAttachIndCb_SDK::ARI_IBICallPsLteAttachIndCb_SDK(AriSdk::ARI_IBICallPsLteAttachIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFE50;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFE50;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsLteAttachIndCb_SDK::~ARI_IBICallPsLteAttachIndCb_SDK(AriSdk::ARI_IBICallPsLteAttachIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8CFE50;
  v2 = (void *)*((_QWORD *)this + 11);
  if (v2)
  {
    *((_QWORD *)this + 12) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40504FFAC1);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsLteAttachIndCb_SDK::~ARI_IBICallPsLteAttachIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsLteAttachIndCb_SDK::pack(AriSdk::ARI_IBICallPsLteAttachIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x18uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsLteAttachIndCb_SDK::unpack(AriSdk::ARI_IBICallPsLteAttachIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  char *v7;
  __n128 __p;
  uint64_t v10;
  size_t __sz;
  BOOL v12;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_QWORD *)operator new();
  v6[1] = 0;
  v6[2] = 0;
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 24, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
  }
  v12 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (char *)operator new[]();
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_OWORD *)v7 + 3) = 0u;
  *((_OWORD *)v7 + 4) = 0u;
  *((_OWORD *)v7 + 5) = 0u;
  *(_QWORD *)(v7 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 101, &v12, &__sz);
  if (!(_DWORD)v3 && v12)
  {
    v10 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v7, (uint64_t)&v7[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  return v3;
}

void sub_20E150E78(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsLteAttachIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsLteAttachIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226983936;
}

double AriSdk::ARI_IBICallPsModifyIndCb_SDK::ARI_IBICallPsModifyIndCb_SDK(AriSdk::ARI_IBICallPsModifyIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD818000u, 0);
  *(_QWORD *)v1 = &off_24C8CFE88;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD818000u, 0);
  *(_QWORD *)v1 = &off_24C8CFE88;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsModifyIndCb_SDK::ARI_IBICallPsModifyIndCb_SDK(AriSdk::ARI_IBICallPsModifyIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFE88;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFE88;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsModifyIndCb_SDK::~ARI_IBICallPsModifyIndCb_SDK(AriSdk::ARI_IBICallPsModifyIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  *(_QWORD *)this = &off_24C8CFE88;
  v2 = *((_QWORD *)this + 45);
  *((_QWORD *)this + 45) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 44);
  *((_QWORD *)this + 44) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4045BD7913);
  v4 = *((_QWORD *)this + 43);
  *((_QWORD *)this + 43) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 40);
  if (v5)
  {
    *((_QWORD *)this + 41) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 39);
  *((_QWORD *)this + 39) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 38);
  *((_QWORD *)this + 38) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  v8 = *((_QWORD *)this + 37);
  *((_QWORD *)this + 37) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  v9 = *((_QWORD *)this + 36);
  *((_QWORD *)this + 36) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
  v10 = *((_QWORD *)this + 35);
  *((_QWORD *)this + 35) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40451B5BE8);
  v11 = *((_QWORD *)this + 34);
  *((_QWORD *)this + 34) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4080B1215BLL);
  v12 = *((_QWORD *)this + 33);
  *((_QWORD *)this + 33) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 32);
  *((_QWORD *)this + 32) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = (void *)*((_QWORD *)this + 29);
  if (v14)
  {
    *((_QWORD *)this + 30) = v14;
    operator delete(v14);
  }
  v15 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  v16 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
  v17 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  v18 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v18)
    MEMORY[0x212BB9B60](v18, 0x1000C40B04AA6E5);
  v19 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v19)
    MEMORY[0x212BB9B60](v19, 0x1000C40FF89C88ELL);
  v20 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C40B8E3674DLL);
  v21 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  v22 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C40274DC3F3);
  v23 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  v24 = (void *)*((_QWORD *)this + 17);
  if (v24)
  {
    *((_QWORD *)this + 18) = v24;
    operator delete(v24);
  }
  v25 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
  v26 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v26)
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  v27 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C40B4868423);
  v28 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v28)
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  v29 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v29)
    MEMORY[0x212BB9B60](v29, 0x1000C40FF89C88ELL);
  v30 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v30)
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  v31 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v31)
    MEMORY[0x212BB9B60](v31, 0x1000C40A86A77D5);
  v32 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v32)
    MEMORY[0x212BB9B60](v32, 0x1000C4052888210);
  v33 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v33)
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsModifyIndCb_SDK::~ARI_IBICallPsModifyIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsModifyIndCb_SDK::pack(AriSdk::ARI_IBICallPsModifyIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  _BYTE *v25;
  _BYTE *v26;
  const void *v27;
  const void *v28;
  const void *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  const void *v34;
  _BYTE *v35;
  _BYTE *v36;
  const void *v37;
  const void *v38;
  const void *v39;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x14uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0x48uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 0x14uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (_BYTE *)*((_QWORD *)this + 17);
                    if (!v14
                      || (v15 = (_BYTE *)*((_QWORD *)this + 18), v14 == v15)
                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, v15 - v14, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, 4uLL, 0), !(_DWORD)result))
                      {
                        v17 = (const void *)*((_QWORD *)this + 21);
                        if (!v17
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v17, 6uLL, 0), !(_DWORD)result))
                        {
                          v18 = (const void *)*((_QWORD *)this + 22);
                          if (!v18
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v18, 4uLL, 0), !(_DWORD)result))
                          {
                            v19 = (const void *)*((_QWORD *)this + 23);
                            if (!v19
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v19, 0x480uLL, 0), !(_DWORD)result))
                            {
                              v20 = (const void *)*((_QWORD *)this + 24);
                              if (!v20
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v20, 0x48uLL, 0), !(_DWORD)result))
                              {
                                v21 = (const void *)*((_QWORD *)this + 25);
                                if (!v21
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v21, 0x24uLL, 0),
                                      !(_DWORD)result))
                                {
                                  v22 = (const void *)*((_QWORD *)this + 26);
                                  if (!v22
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v22, 1uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v23 = (const void *)*((_QWORD *)this + 27);
                                    if (!v23
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v23, 1uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v24 = (const void *)*((_QWORD *)this + 28);
                                      if (!v24
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v24, 1uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v25 = (_BYTE *)*((_QWORD *)this + 29);
                                        if (!v25
                                          || (v26 = (_BYTE *)*((_QWORD *)this + 30), v25 == v26)
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v25, v26 - v25, 0),
                                              !(_DWORD)result))
                                        {
                                          v27 = (const void *)*((_QWORD *)this + 32);
                                          if (!v27
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v27, 4uLL, 0),
                                                !(_DWORD)result))
                                          {
                                            v28 = (const void *)*((_QWORD *)this + 33);
                                            if (!v28
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v28, 4uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v29 = (const void *)*((_QWORD *)this + 34);
                                              if (!v29
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v29, 0xAuLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v30 = (const void *)*((_QWORD *)this + 35);
                                                if (!v30
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v30, 0x10uLL, 0), !(_DWORD)result))
                                                {
                                                  v31 = (const void *)*((_QWORD *)this + 36);
                                                  if (!v31
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 25, v31, 8uLL, 0), !(_DWORD)result))
                                                  {
                                                    v32 = (const void *)*((_QWORD *)this + 37);
                                                    if (!v32
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v32, 8uLL, 0), !(_DWORD)result))
                                                    {
                                                      v33 = (const void *)*((_QWORD *)this + 38);
                                                      if (!v33
                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v33, 2uLL, 0), !(_DWORD)result))
                                                      {
                                                        v34 = (const void *)*((_QWORD *)this + 39);
                                                        if (!v34
                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 28, v34, 1uLL, 0), !(_DWORD)result))
                                                        {
                                                          v35 = (_BYTE *)*((_QWORD *)this + 40);
                                                          if (!v35
                                                            || (v36 = (_BYTE *)*((_QWORD *)this + 41), v35 == v36)
                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v35, v36 - v35, 0), !(_DWORD)result))
                                                          {
                                                            v37 = (const void *)*((_QWORD *)this + 43);
                                                            if (!v37
                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v37, 4uLL, 0), !(_DWORD)result))
                                                            {
                                                              v38 = (const void *)*((_QWORD *)this + 44);
                                                              if (!v38
                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 31, v38, 0x28uLL, 0), !(_DWORD)result))
                                                              {
                                                                v39 = (const void *)*((_QWORD *)this + 45);
                                                                if (!v39
                                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 32, v39, 4uLL, 0), !(_DWORD)result))
                                                                {
                                                                  result = 0;
                                                                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsModifyIndCb_SDK::unpack(AriSdk::ARI_IBICallPsModifyIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _DWORD *v7;
  _OWORD *v8;
  _DWORD *v9;
  _QWORD *v10;
  _DWORD *v11;
  _BYTE *v12;
  void *v13;
  _DWORD *v14;
  _WORD *v15;
  _DWORD *v16;
  void *v17;
  _OWORD *v18;
  _OWORD *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  void *v23;
  _DWORD *v24;
  _DWORD *v25;
  _WORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _WORD *v30;
  _BYTE *v31;
  void *v32;
  _DWORD *v33;
  _OWORD *v34;
  _DWORD *v35;
  void *__p;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  BOOL v41;

  LOBYTE(__p) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v6[1] = 0;
  *((_DWORD *)v6 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 20, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40A86A77D5);
  }
  LOBYTE(__p) = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  *((_QWORD *)v8 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 72, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40FF89C88ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos3g>::operator=<IBICallPsQos3g&,void>((uint64_t *)this + 12, (uint64_t)v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40FF89C88ELL);
  }
  LOBYTE(__p) = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v10 = (_QWORD *)operator new();
  *v10 = 0;
  v10[1] = 0;
  *((_DWORD *)v10 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 20, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40B4868423);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEpsQos>::operator=<IBICallPsEpsQos&,void>((uint64_t *)this + 14, (uint64_t)v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40B4868423);
  }
  LOBYTE(__p) = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  v41 = 0;
  v40 = 0xAAAAAAAAAAAAAAAALL;
  v13 = (void *)operator new[]();
  bzero(v13, 0xA40uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 2624, &v41, &v40);
  if ((_DWORD)v3 || !v41)
  {
    MEMORY[0x212BB9B48](v13, 0x1000C80EE63A519);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v38 = 0;
    v39 = 0;
    __p = 0;
    std::vector<IBICallPsPacketFilter>::__init_with_size[abi:ne180100]<IBICallPsPacketFilter*,IBICallPsPacketFilter*>(&__p, v13, (uint64_t)v13 + 164 * (v40 / 0xA4), v40 / 0xA4);
    AriSdk::TlvArray<IBICallPsPacketFilter,16ul>::operator=((uint64_t)this + 136, (uint64_t *)&__p);
    if (__p)
      operator delete(__p);
    MEMORY[0x212BB9B48](v13, 0x1000C80EE63A519);
  }
  LOBYTE(__p) = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v15 = (_WORD *)operator new();
  *(_DWORD *)v15 = 0;
  v15[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v15, 6, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C40274DC3F3);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEpsApnAmbr>::operator=<IBICallPsEpsApnAmbr&,void>((uint64_t *)this + 21, (uint64_t)v15);
    MEMORY[0x212BB9B60](v15, 0x1000C40274DC3F3);
  }
  LOBYTE(__p) = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v16, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v17 = (void *)operator new();
  bzero(v17, 0x480uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v17, 1152, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C40B8E3674DLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsNwPcoParams>::operator=<IBICallPsNwPcoParams&,void>((uint64_t *)this + 23, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C40B8E3674DLL);
  }
  LOBYTE(__p) = 0;
  v18 = (_OWORD *)operator new();
  *v18 = 0u;
  v18[1] = 0u;
  v18[2] = 0u;
  v18[3] = 0u;
  *((_QWORD *)v18 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v18, 72, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C40FF89C88ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos3g>::operator=<IBICallPsQos3g&,void>((uint64_t *)this + 24, (uint64_t)v18);
    MEMORY[0x212BB9B60](v18, 0x1000C40FF89C88ELL);
  }
  LOBYTE(__p) = 0;
  v19 = (_OWORD *)operator new();
  *v19 = 0u;
  v19[1] = 0u;
  *((_DWORD *)v19 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v19, 36, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C40B04AA6E5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEpsQos_V1>::operator=<IBICallPsEpsQos_V1&,void>((uint64_t *)this + 25, (uint64_t)v19);
    MEMORY[0x212BB9B60](v19, 0x1000C40B04AA6E5);
  }
  LOBYTE(__p) = 0;
  v20 = (_BYTE *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v20, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 26, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
  }
  LOBYTE(__p) = 0;
  v21 = (_BYTE *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v21, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 27, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4077774924);
  }
  LOBYTE(__p) = 0;
  v22 = (_BYTE *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v22, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 28, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4077774924);
  }
  v41 = 0;
  v40 = 0xAAAAAAAAAAAAAAAALL;
  v23 = (void *)operator new[]();
  bzero(v23, 0x18E4uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v23, 6372, &v41, &v40);
  if ((_DWORD)v3 || !v41)
  {
    MEMORY[0x212BB9B48](v23, 0x1000C8091CD251ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v38 = 0;
    v39 = 0;
    __p = 0;
    std::vector<IBICallPsQosRule>::__init_with_size[abi:ne180100]<IBICallPsQosRule*,IBICallPsQosRule*>(&__p, v23, (uint64_t)v23 + 2124 * (v40 / 0x84C), v40 / 0x84C);
    AriSdk::TlvArray<IBICallPsQosRule,3ul>::operator=((uint64_t)this + 232, (uint64_t *)&__p);
    if (__p)
      operator delete(__p);
    MEMORY[0x212BB9B48](v23, 0x1000C8091CD251ALL);
  }
  LOBYTE(__p) = 0;
  v24 = (_DWORD *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v24, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 32, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v25 = (_DWORD *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v25, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 33, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v26 = (_WORD *)operator new();
  *(_QWORD *)v26 = 0;
  v26[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v26, 10, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 34, (uint64_t)v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4080B1215BLL);
  }
  LOBYTE(__p) = 0;
  v27 = (_QWORD *)operator new();
  *v27 = 0;
  v27[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v27, 16, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v27, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>((uint64_t *)this + 35, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C40451B5BE8);
  }
  LOBYTE(__p) = 0;
  v28 = (_QWORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 25, v28, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 36, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4000313F17);
  }
  LOBYTE(__p) = 0;
  v29 = (_QWORD *)operator new();
  *v29 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v29, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v29, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 37, v29);
    MEMORY[0x212BB9B60](v29, 0x1000C4000313F17);
  }
  LOBYTE(__p) = 0;
  v30 = (_WORD *)operator new();
  *v30 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v30, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v30, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 38, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C40BDFB0063);
  }
  LOBYTE(__p) = 0;
  v31 = (_BYTE *)operator new();
  *v31 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 28, v31, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v31, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 39, v31);
    MEMORY[0x212BB9B60](v31, 0x1000C4077774924);
  }
  v41 = 0;
  v40 = 0xAAAAAAAAAAAAAAAALL;
  v32 = (void *)operator new[]();
  bzero(v32, 0x840uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v32, 2112, &v41, &v40);
  if ((_DWORD)v3 || !v41)
  {
    MEMORY[0x212BB9B48](v32, 0x1000C805A4CDF4ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v38 = 0;
    v39 = 0;
    __p = 0;
    std::vector<IBICallPsPacketFilter_V2>::__init_with_size[abi:ne180100]<IBICallPsPacketFilter_V2*,IBICallPsPacketFilter_V2*>(&__p, v32, (uint64_t)v32 + 132 * (v40 / 0x84), v40 / 0x84);
    AriSdk::TlvArray<IBICallPsPacketFilter_V2,16ul>::operator=((uint64_t)this + 320, (uint64_t *)&__p);
    if (__p)
      operator delete(__p);
    MEMORY[0x212BB9B48](v32, 0x1000C805A4CDF4ALL);
  }
  LOBYTE(__p) = 0;
  v33 = (_DWORD *)operator new();
  *v33 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v33, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 43, v33);
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v34 = (_OWORD *)operator new();
  *v34 = 0u;
  v34[1] = 0u;
  *((_QWORD *)v34 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 31, v34, 40, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v34, 0x1000C4045BD7913);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 44, (uint64_t)v34);
    MEMORY[0x212BB9B60](v34, 0x1000C4045BD7913);
  }
  LOBYTE(__p) = 0;
  v35 = (_DWORD *)operator new();
  *v35 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 32, v35, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && (_BYTE)__p)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 45, v35);
  MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
  return v3;
}

void sub_20E152CC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBICallPsEpsApnAmbr>::operator=<IBICallPsEpsApnAmbr&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_DWORD *)v4 = *(_DWORD *)a2;
  *(_WORD *)(v4 + 4) = *(_WORD *)(a2 + 4);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40274DC3F3);
  return a1;
}

BOOL AriSdk::ARI_IBICallPsModifyIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsModifyIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226590720;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsNotificationIndCb_SDK::ARI_IBICallPsNotificationIndCb_SDK(AriSdk::ARI_IBICallPsNotificationIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD868000u, 0);
  *(_QWORD *)result = &off_24C8CFEC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD868000u, 0);
  *(_QWORD *)result = &off_24C8CFEC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsNotificationIndCb_SDK::ARI_IBICallPsNotificationIndCb_SDK(AriSdk::ARI_IBICallPsNotificationIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFEC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFEC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsNotificationIndCb_SDK::~ARI_IBICallPsNotificationIndCb_SDK(AriSdk::ARI_IBICallPsNotificationIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFEC0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsNotificationIndCb_SDK::~ARI_IBICallPsNotificationIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsNotificationIndCb_SDK::pack(AriSdk::ARI_IBICallPsNotificationIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsNotificationIndCb_SDK::unpack(AriSdk::ARI_IBICallPsNotificationIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1532B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsNotificationIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsNotificationIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226918400;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA68000u, 0);
  *(_QWORD *)result = &off_24C8CFEF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA68000u, 0);
  *(_QWORD *)result = &off_24C8CFEF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFEF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFEF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK::~ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFEF8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK::~ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK::pack(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E153610(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212238336;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD268000u, 0);
  *(_QWORD *)result = &off_24C8CFF30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD268000u, 0);
  *(_QWORD *)result = &off_24C8CFF30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFF30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFF30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK::~ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFF30;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK::~ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK::pack(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK::unpack(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E15396C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsNwSlicingRegStatusInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220626944;
}

double AriSdk::ARI_IBICallPsPdnStats_SDK::ARI_IBICallPsPdnStats_SDK(AriSdk::ARI_IBICallPsPdnStats_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC838000u, 1);
  *(_QWORD *)v1 = &off_24C8CFF68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC838000u, 1);
  *(_QWORD *)v1 = &off_24C8CFF68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsPdnStats_SDK::ARI_IBICallPsPdnStats_SDK(AriSdk::ARI_IBICallPsPdnStats_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFF68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8CFF68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsPdnStats_SDK::~ARI_IBICallPsPdnStats_SDK(AriSdk::ARI_IBICallPsPdnStats_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8CFF68;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsPdnStats_SDK::~ARI_IBICallPsPdnStats_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsPdnStats_SDK::pack(AriSdk::ARI_IBICallPsPdnStats_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsPdnStats_SDK::unpack(AriSdk::ARI_IBICallPsPdnStats_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E153F64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsPdnStats_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsPdnStats_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209944576;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK::ARI_IBICallPsPduSessionAuthReq_SDK(AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9F8000u, 0);
  *(_QWORD *)result = &off_24C8CFFA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9F8000u, 0);
  *(_QWORD *)result = &off_24C8CFFA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK::ARI_IBICallPsPduSessionAuthReq_SDK(AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFFA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFFA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK::~ARI_IBICallPsPduSessionAuthReq_SDK(AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8CFFA0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4078488D2ALL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK::~ARI_IBICallPsPduSessionAuthReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK::pack(AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x5E0uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK::unpack(AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x5E0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1504, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBICallPsEAPMessage>::operator=<IBICallPsEAPMessage&,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4078488D2ALL);
  return v3;
}

void sub_20E1543C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4078488D2ALL);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBICallPsEAPMessage>::operator=<IBICallPsEAPMessage&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x5E0uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4078488D2ALL);
  return a1;
}

BOOL AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsPduSessionAuthReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211779584;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK::ARI_IBICallPsPduSessionAuthRspCb_SDK(AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1F8000u, 0);
  *(_QWORD *)result = &off_24C8CFFD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1F8000u, 0);
  *(_QWORD *)result = &off_24C8CFFD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK::ARI_IBICallPsPduSessionAuthRspCb_SDK(AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFFD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8CFFD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK::~ARI_IBICallPsPduSessionAuthRspCb_SDK(AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8CFFD8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK::~ARI_IBICallPsPduSessionAuthRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK::pack(AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK::unpack(AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1547A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsPduSessionAuthRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220168192;
}

double AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK::ARI_IBICallPsPduSessionAuthIndCb_SDK(AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8B8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0010;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8B8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0010;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK::ARI_IBICallPsPduSessionAuthIndCb_SDK(AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0010;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0010;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK::~ARI_IBICallPsPduSessionAuthIndCb_SDK(AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D0010;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4078488D2ALL);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK::~ARI_IBICallPsPduSessionAuthIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK::pack(AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x5E0uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK::unpack(AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x5E0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1504, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4078488D2ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEAPMessage>::operator=<IBICallPsEAPMessage&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4078488D2ALL);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E154CC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsPduSessionAuthIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227246080;
}

double AriSdk::ARI_IBICallPsQosRuleIndCb_SDK::ARI_IBICallPsQosRuleIndCb_SDK(AriSdk::ARI_IBICallPsQosRuleIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD910000u, 0);
  *(_QWORD *)v1 = &off_24C8D0048;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD910000u, 0);
  *(_QWORD *)v1 = &off_24C8D0048;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsQosRuleIndCb_SDK::ARI_IBICallPsQosRuleIndCb_SDK(AriSdk::ARI_IBICallPsQosRuleIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0048;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0048;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsQosRuleIndCb_SDK::~ARI_IBICallPsQosRuleIndCb_SDK(AriSdk::ARI_IBICallPsQosRuleIndCb_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8D0048;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 11);
  if (v3)
  {
    *((_QWORD *)this + 12) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsQosRuleIndCb_SDK::~ARI_IBICallPsQosRuleIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsQosRuleIndCb_SDK::pack(AriSdk::ARI_IBICallPsQosRuleIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsQosRuleIndCb_SDK::unpack(AriSdk::ARI_IBICallPsQosRuleIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  void *v7;
  _DWORD *v8;
  void *__p[3];
  unint64_t v11;
  BOOL v12;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v12 = 0;
  v11 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x18E4uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 6372, &v12, &v11);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8091CD251ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBICallPsQosRule>::__init_with_size[abi:ne180100]<IBICallPsQosRule*,IBICallPsQosRule*>(__p, v7, (uint64_t)v7 + 2124 * (v11 / 0x84C), v11 / 0x84C);
    AriSdk::TlvArray<IBICallPsQosRule,3ul>::operator=((uint64_t)this + 88, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v7, 0x1000C8091CD251ALL);
  }
  LOBYTE(__p[0]) = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E15532C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsQosRuleIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsQosRuleIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227606528;
}

double AriSdk::ARI_IBICallPsRegisterFT_SDK::ARI_IBICallPsRegisterFT_SDK(AriSdk::ARI_IBICallPsRegisterFT_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC820000u, 1);
  *(_QWORD *)v1 = &off_24C8D0080;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC820000u, 1);
  *(_QWORD *)v1 = &off_24C8D0080;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsRegisterFT_SDK::ARI_IBICallPsRegisterFT_SDK(AriSdk::ARI_IBICallPsRegisterFT_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0080;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0080;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsRegisterFT_SDK::~ARI_IBICallPsRegisterFT_SDK(AriSdk::ARI_IBICallPsRegisterFT_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8D0080;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40504FFAC1);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsRegisterFT_SDK::~ARI_IBICallPsRegisterFT_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsRegisterFT_SDK::pack(AriSdk::ARI_IBICallPsRegisterFT_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x18uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x18uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsRegisterFT_SDK::unpack(AriSdk::ARI_IBICallPsRegisterFT_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _WORD *v8;
  _WORD *v9;
  _DWORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_QWORD *)operator new();
  v6[1] = 0;
  v6[2] = 0;
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 24, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
  }
  v15 = 0;
  v7 = (_QWORD *)operator new();
  v7[1] = 0;
  v7[2] = 0;
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 24, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40504FFAC1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsIpAddr>::operator=<IBICallPsIpAddr&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40504FFAC1);
  }
  v14 = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v13 = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 2, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  v12 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E155B30(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsRegisterFT_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsRegisterFT_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209846272;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK::ARI_IBICallPsReservePDUSessionIDReq_SDK(AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA18000u, 0);
  *(_QWORD *)result = &off_24C8D00B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA18000u, 0);
  *(_QWORD *)result = &off_24C8D00B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK::ARI_IBICallPsReservePDUSessionIDReq_SDK(AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D00B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D00B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK::~ARI_IBICallPsReservePDUSessionIDReq_SDK(AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D00B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK::~ARI_IBICallPsReservePDUSessionIDReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK::pack(AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK::unpack(AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E155ED0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsReservePDUSessionIDReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211910656;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK::ARI_IBICallPsReservePDUSessionIDRspCb_SDK(AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD218000u, 0);
  *(_QWORD *)result = &off_24C8D00F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD218000u, 0);
  *(_QWORD *)result = &off_24C8D00F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK::ARI_IBICallPsReservePDUSessionIDRspCb_SDK(AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D00F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D00F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK::~ARI_IBICallPsReservePDUSessionIDRspCb_SDK(AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D00F0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK::~ARI_IBICallPsReservePDUSessionIDRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK::pack(AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK::unpack(AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  return v3;
}

void sub_20E156320(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsReservePDUSessionIDRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220299264;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsResumeIndCb_SDK::ARI_IBICallPsResumeIndCb_SDK(AriSdk::ARI_IBICallPsResumeIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD828000u, 0);
  *(_QWORD *)result = &off_24C8D0128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD828000u, 0);
  *(_QWORD *)result = &off_24C8D0128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsResumeIndCb_SDK::ARI_IBICallPsResumeIndCb_SDK(AriSdk::ARI_IBICallPsResumeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsResumeIndCb_SDK::~ARI_IBICallPsResumeIndCb_SDK(AriSdk::ARI_IBICallPsResumeIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D0128;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsResumeIndCb_SDK::~ARI_IBICallPsResumeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsResumeIndCb_SDK::pack(AriSdk::ARI_IBICallPsResumeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsResumeIndCb_SDK::unpack(AriSdk::ARI_IBICallPsResumeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1565C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsResumeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsResumeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226656256;
}

double AriSdk::ARI_IBICallPsRtpReq_SDK::ARI_IBICallPsRtpReq_SDK(AriSdk::ARI_IBICallPsRtpReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC898000u, 0);
  *(_QWORD *)v1 = &off_24C8D0160;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC898000u, 0);
  *(_QWORD *)v1 = &off_24C8D0160;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsRtpReq_SDK::ARI_IBICallPsRtpReq_SDK(AriSdk::ARI_IBICallPsRtpReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0160;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0160;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsRtpReq_SDK::~ARI_IBICallPsRtpReq_SDK(AriSdk::ARI_IBICallPsRtpReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)this = &off_24C8D0160;
  v2 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = (void *)*((_QWORD *)this + 17);
  if (v5)
  {
    *((_QWORD *)this + 18) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  v8 = (void *)*((_QWORD *)this + 12);
  if (v8)
  {
    *((_QWORD *)this + 13) = v8;
    operator delete(v8);
  }
  v9 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsRtpReq_SDK::~ARI_IBICallPsRtpReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsRtpReq_SDK::pack(AriSdk::ARI_IBICallPsRtpReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;
  const void *v15;
  const void *v16;
  const void *v17;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 2uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
              {
                v13 = (_BYTE *)*((_QWORD *)this + 17);
                if (!v13
                  || (v14 = (_BYTE *)*((_QWORD *)this + 18), v13 == v14)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, v14 - v13, 0), !(_DWORD)result))
                {
                  v15 = (const void *)*((_QWORD *)this + 20);
                  if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, 2uLL, 0), !(_DWORD)result))
                  {
                    v16 = (const void *)*((_QWORD *)this + 21);
                    if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, 1uLL, 0), !(_DWORD)result))
                    {
                      v17 = (const void *)*((_QWORD *)this + 22);
                      if (!v17 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v17, 4uLL, 0), !(_DWORD)result))
                      {
                        result = 0;
                        *a2 = (AriMsg *)*((_QWORD *)this + 6);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsRtpReq_SDK::unpack(AriSdk::ARI_IBICallPsRtpReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  _QWORD *v8;
  _WORD *v9;
  _BYTE *v10;
  _QWORD *v11;
  _WORD *v12;
  _BYTE *v13;
  _DWORD *v14;
  __n128 __p;
  uint64_t v17;
  size_t __sz;
  BOOL v19;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_QWORD *)operator new[]();
  *v8 = 0;
  v8[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 16, &v19, &__sz);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v11 = (_QWORD *)operator new[]();
  *v11 = 0;
  v11[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 16, &v19, &__sz);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v11, (uint64_t)v11 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 136), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v12 = (_WORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 20, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 21, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v14, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v14);
  MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  return v3;
}

void sub_20E157138(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,16ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x11)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 16);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1572C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICallPsRtpReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsRtpReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210337792;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsRtpRspCb_SDK::ARI_IBICallPsRtpRspCb_SDK(AriSdk::ARI_IBICallPsRtpRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD098000u, 0);
  *(_QWORD *)result = &off_24C8D0198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD098000u, 0);
  *(_QWORD *)result = &off_24C8D0198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsRtpRspCb_SDK::ARI_IBICallPsRtpRspCb_SDK(AriSdk::ARI_IBICallPsRtpRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsRtpRspCb_SDK::~ARI_IBICallPsRtpRspCb_SDK(AriSdk::ARI_IBICallPsRtpRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0198;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsRtpRspCb_SDK::~ARI_IBICallPsRtpRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsRtpRspCb_SDK::pack(AriSdk::ARI_IBICallPsRtpRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsRtpRspCb_SDK::unpack(AriSdk::ARI_IBICallPsRtpRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E15760C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsRtpRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsRtpRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218726400;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSecurityStatusReq_SDK::ARI_IBICallPsSecurityStatusReq_SDK(AriSdk::ARI_IBICallPsSecurityStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9C8000u, 0);
  *(_QWORD *)result = &off_24C8D01D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9C8000u, 0);
  *(_QWORD *)result = &off_24C8D01D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSecurityStatusReq_SDK::ARI_IBICallPsSecurityStatusReq_SDK(AriSdk::ARI_IBICallPsSecurityStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D01D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D01D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSecurityStatusReq_SDK::~ARI_IBICallPsSecurityStatusReq_SDK(AriSdk::ARI_IBICallPsSecurityStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D01D0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSecurityStatusReq_SDK::~ARI_IBICallPsSecurityStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSecurityStatusReq_SDK::pack(AriSdk::ARI_IBICallPsSecurityStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSecurityStatusReq_SDK::unpack(AriSdk::ARI_IBICallPsSecurityStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E157894(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSecurityStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSecurityStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211582976;
}

double AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK::ARI_IBICallPsSecurityStatusRspCb_SDK(AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD1C8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0208;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD1C8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0208;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK::ARI_IBICallPsSecurityStatusRspCb_SDK(AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0208;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0208;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK::~ARI_IBICallPsSecurityStatusRspCb_SDK(AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8D0208;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C404A09149ALL);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C404A09149ALL);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C404A09149ALL);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C404A09149ALL);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK::~ARI_IBICallPsSecurityStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK::pack(AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 8uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 8uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 1uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK::unpack(AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _BYTE *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 8, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C404A09149ALL);
  }
  v16 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 8, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C404A09149ALL);
  }
  v15 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 8, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C404A09149ALL);
  }
  v14 = 0;
  v10 = (_QWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 8, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C404A09149ALL);
  }
  v13 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 1, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  return v3;
}

void sub_20E158100(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C404A09149ALL);
  return a1;
}

BOOL AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSecurityStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219971584;
}

double AriSdk::ARI_IBICallPsSecurityStatusInd_SDK::ARI_IBICallPsSecurityStatusInd_SDK(AriSdk::ARI_IBICallPsSecurityStatusInd_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD890000u, 0);
  *(_QWORD *)v1 = &off_24C8D0240;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD890000u, 0);
  *(_QWORD *)v1 = &off_24C8D0240;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsSecurityStatusInd_SDK::ARI_IBICallPsSecurityStatusInd_SDK(AriSdk::ARI_IBICallPsSecurityStatusInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0240;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0240;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSecurityStatusInd_SDK::~ARI_IBICallPsSecurityStatusInd_SDK(AriSdk::ARI_IBICallPsSecurityStatusInd_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8D0240;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C404A09149ALL);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C404A09149ALL);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C404A09149ALL);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C404A09149ALL);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSecurityStatusInd_SDK::~ARI_IBICallPsSecurityStatusInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSecurityStatusInd_SDK::pack(AriSdk::ARI_IBICallPsSecurityStatusInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 8uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSecurityStatusInd_SDK::unpack(AriSdk::ARI_IBICallPsSecurityStatusInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _BYTE *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 8, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C404A09149ALL);
  }
  v15 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 8, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C404A09149ALL);
  }
  v14 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 8, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C404A09149ALL);
  }
  v13 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 8, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C404A09149ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEncryptionStatus>::operator=<IBICallPsEncryptionStatus&,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C404A09149ALL);
  }
  v12 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  return v3;
}

void sub_20E158960(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSecurityStatusInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSecurityStatusInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227082240;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK::ARI_IBICallPsServiceTypeUpdateReq_SDK(AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA78000u, 0);
  *(_QWORD *)result = &off_24C8D0278;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA78000u, 0);
  *(_QWORD *)result = &off_24C8D0278;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK::ARI_IBICallPsServiceTypeUpdateReq_SDK(AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0278;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0278;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK::~ARI_IBICallPsServiceTypeUpdateReq_SDK(AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0278;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK::~ARI_IBICallPsServiceTypeUpdateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK::pack(AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK::unpack(AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E158DE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsServiceTypeUpdateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212303872;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK::ARI_IBICallPsServiceTypeUpdateRspCb_SDK(AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD278000u, 0);
  *(_QWORD *)result = &off_24C8D02B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD278000u, 0);
  *(_QWORD *)result = &off_24C8D02B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK::ARI_IBICallPsServiceTypeUpdateRspCb_SDK(AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D02B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D02B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK::~ARI_IBICallPsServiceTypeUpdateRspCb_SDK(AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D02B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK::~ARI_IBICallPsServiceTypeUpdateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK::pack(AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK::unpack(AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E159148(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsServiceTypeUpdateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220692480;
}

double AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK::ARI_IBICallPsSetKeepaliveOffloadReq_SDK(AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC878000u, 0);
  *(_QWORD *)v1 = &off_24C8D02E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC878000u, 0);
  *(_QWORD *)v1 = &off_24C8D02E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK::ARI_IBICallPsSetKeepaliveOffloadReq_SDK(AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D02E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D02E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK::~ARI_IBICallPsSetKeepaliveOffloadReq_SDK(AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8D02E8;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK::~ARI_IBICallPsSetKeepaliveOffloadReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK::pack(AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK::unpack(AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _OWORD *v8;
  char *v9;
  char *v10;
  unint64_t v11;
  size_t v12;
  void **v13;
  unint64_t v14;
  const char *v15;
  void **v16;
  void *v17;
  unint64_t v19;
  BOOL v20;
  void *__p[2];
  char v22;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v20 = 0;
  v19 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_OWORD *)operator new[]();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v8[20] = 0u;
  v8[21] = 0u;
  v8[22] = 0u;
  v8[23] = 0u;
  *(_OWORD *)((char *)v8 + 380) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 396, &v20, &v19);
  if (!(_DWORD)v3 && v20)
  {
    if (v19 >= 0x84)
    {
      v11 = v19 / 0x84;
      v12 = 132 * (v19 / 0x84);
      v9 = (char *)operator new(v12);
      v10 = &v9[132 * v11];
      memcpy(v9, v8, v12);
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
    v13 = (void **)((char *)this + 96);
    v14 = 0xF83E0F83E0F83E1 * ((v10 - v9) >> 2);
    if (v14 < 4)
    {
      v17 = *v13;
      if (*v13)
      {
        *((_QWORD *)this + 13) = v17;
        operator delete(v17);
        *v13 = 0;
        *((_QWORD *)this + 13) = 0;
        *((_QWORD *)this + 14) = 0;
      }
      *((_QWORD *)this + 12) = v9;
      *((_QWORD *)this + 13) = v10;
      *((_QWORD *)this + 14) = v10;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v22 >= 0)
        v16 = __p;
      else
        v16 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v15, v16, 360, v13, v14, 3);
      if (v22 < 0)
        operator delete(__p[0]);
      if (v9)
        operator delete(v9);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C803E349CAELL);
  return v3;
}

void sub_20E159890(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C803E349CAELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSetKeepaliveOffloadReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210206720;
}

double AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK(AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD078000u, 0);
  *(_QWORD *)v1 = &off_24C8D0320;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD078000u, 0);
  *(_QWORD *)v1 = &off_24C8D0320;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK(AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0320;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0320;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK::~ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK(AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D0320;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK::~ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK::pack(AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK::unpack(AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E159E04(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSetKeepaliveOffloadRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218595328;
}

double AriSdk::ARI_IBICallPsSignificantLocationReq_SDK::ARI_IBICallPsSignificantLocationReq_SDK(AriSdk::ARI_IBICallPsSignificantLocationReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9A8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0358;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9A8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0358;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsSignificantLocationReq_SDK::ARI_IBICallPsSignificantLocationReq_SDK(AriSdk::ARI_IBICallPsSignificantLocationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0358;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0358;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsSignificantLocationReq_SDK::~ARI_IBICallPsSignificantLocationReq_SDK(AriSdk::ARI_IBICallPsSignificantLocationReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8D0358;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSignificantLocationReq_SDK::~ARI_IBICallPsSignificantLocationReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSignificantLocationReq_SDK::pack(AriSdk::ARI_IBICallPsSignificantLocationReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSignificantLocationReq_SDK::unpack(AriSdk::ARI_IBICallPsSignificantLocationReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v11 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E15A4E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSignificantLocationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSignificantLocationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211451904;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK::ARI_IBICallPsSignificantLocationRspCb_SDK(AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1A8000u, 0);
  *(_QWORD *)result = &off_24C8D0390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1A8000u, 0);
  *(_QWORD *)result = &off_24C8D0390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK::ARI_IBICallPsSignificantLocationRspCb_SDK(AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK::~ARI_IBICallPsSignificantLocationRspCb_SDK(AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0390;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK::~ARI_IBICallPsSignificantLocationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK::pack(AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK::unpack(AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E15A85C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSignificantLocationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219840512;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK::ARI_IBICallPsStartBandwidthEstimationReq_SDK(AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA28000u, 0);
  *(_QWORD *)result = &off_24C8D03C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA28000u, 0);
  *(_QWORD *)result = &off_24C8D03C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK::ARI_IBICallPsStartBandwidthEstimationReq_SDK(AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D03C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D03C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK::~ARI_IBICallPsStartBandwidthEstimationReq_SDK(AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D03C8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK::~ARI_IBICallPsStartBandwidthEstimationReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK::pack(AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK::unpack(AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E15ABB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStartBandwidthEstimationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211976192;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK(AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD228000u, 0);
  *(_QWORD *)result = &off_24C8D0400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD228000u, 0);
  *(_QWORD *)result = &off_24C8D0400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK(AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK::~ARI_IBICallPsStartBandwidthEstimationRspCb_SDK(AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D0400;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK::~ARI_IBICallPsStartBandwidthEstimationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK::pack(AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK::unpack(AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E15AE40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStartBandwidthEstimationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220364800;
}

double AriSdk::ARI_IBICallPsStartDataCallReq_SDK::ARI_IBICallPsStartDataCallReq_SDK(AriSdk::ARI_IBICallPsStartDataCallReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC810000u, 0);
  *(_QWORD *)v1 = &off_24C8D0438;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  *((_OWORD *)v1 + 23) = 0u;
  *((_OWORD *)v1 + 24) = 0u;
  *((_QWORD *)v1 + 50) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC810000u, 0);
  *(_QWORD *)v1 = &off_24C8D0438;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  *((_OWORD *)v1 + 23) = 0u;
  *((_OWORD *)v1 + 24) = 0u;
  *((_QWORD *)v1 + 50) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsStartDataCallReq_SDK::ARI_IBICallPsStartDataCallReq_SDK(AriSdk::ARI_IBICallPsStartDataCallReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0438;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_QWORD *)v3 + 50) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0438;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_QWORD *)v3 + 50) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsStartDataCallReq_SDK::~ARI_IBICallPsStartDataCallReq_SDK(AriSdk::ARI_IBICallPsStartDataCallReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  uint64_t v38;

  *(_QWORD *)this = &off_24C8D0438;
  v2 = *((_QWORD *)this + 50);
  *((_QWORD *)this + 50) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 49);
  *((_QWORD *)this + 49) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 48);
  *((_QWORD *)this + 48) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 47);
  *((_QWORD *)this + 47) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 46);
  *((_QWORD *)this + 46) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40ADF4F15FLL);
  v7 = *((_QWORD *)this + 45);
  *((_QWORD *)this + 45) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
  v8 = *((_QWORD *)this + 44);
  *((_QWORD *)this + 44) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 43);
  *((_QWORD *)this + 43) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 42);
  *((_QWORD *)this + 42) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4045BD7913);
  v11 = *((_QWORD *)this + 41);
  *((_QWORD *)this + 41) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C40B04AA6E5);
  v12 = *((_QWORD *)this + 40);
  *((_QWORD *)this + 40) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C40FF89C88ELL);
  v13 = *((_QWORD *)this + 39);
  *((_QWORD *)this + 39) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 38);
  *((_QWORD *)this + 38) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 37);
  *((_QWORD *)this + 37) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C40FF89C88ELL);
  v16 = *((_QWORD *)this + 36);
  *((_QWORD *)this + 36) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  v17 = *((_QWORD *)this + 35);
  *((_QWORD *)this + 35) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  v18 = (void *)*((_QWORD *)this + 32);
  if (v18)
  {
    *((_QWORD *)this + 33) = v18;
    operator delete(v18);
  }
  v19 = (void *)*((_QWORD *)this + 29);
  if (v19)
  {
    *((_QWORD *)this + 30) = v19;
    operator delete(v19);
  }
  v20 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  v21 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  v22 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  v23 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  v24 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  v25 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  v26 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v26)
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  v27 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  v28 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v28)
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  v29 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v29)
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  v30 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v30)
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  v31 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v31)
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
  v32 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v32)
    MEMORY[0x212BB9B60](v32, 0x1000C4052888210);
  v33 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v33)
    MEMORY[0x212BB9B60](v33, 0x1000C4052888210);
  v34 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v34)
    MEMORY[0x212BB9B60](v34, 0x1000C4052888210);
  v35 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v35)
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
  v36 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v36)
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
  v37 = (void *)*((_QWORD *)this + 9);
  if (v37)
  {
    *((_QWORD *)this + 10) = v37;
    operator delete(v37);
  }
  v38 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v38)
    MEMORY[0x212BB9B60](v38, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStartDataCallReq_SDK::~ARI_IBICallPsStartDataCallReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStartDataCallReq_SDK::pack(AriSdk::ARI_IBICallPsStartDataCallReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  const void *v34;
  const void *v35;
  const void *v36;
  const void *v37;
  const void *v38;
  const void *v39;
  const void *v40;
  const void *v41;
  const void *v42;
  const void *v43;
  const void *v44;
  const void *v45;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    v8 = !v6 || v6 == v7;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, v7 - v6, 0), !(_DWORD)result))
    {
      v9 = (const void *)*((_QWORD *)this + 12);
      if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v11, 4uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v12, 4uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v13, 4uLL, 0), !(_DWORD)result))
              {
                v14 = (const void *)*((_QWORD *)this + 17);
                if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v14, 4uLL, 0), !(_DWORD)result))
                {
                  v15 = (const void *)*((_QWORD *)this + 18);
                  if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v15, 4uLL, 0), !(_DWORD)result))
                  {
                    v16 = (const void *)*((_QWORD *)this + 19);
                    if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v16, 4uLL, 0), !(_DWORD)result))
                    {
                      v17 = (const void *)*((_QWORD *)this + 20);
                      if (!v17 || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v17, 4uLL, 0), !(_DWORD)result))
                      {
                        v18 = (const void *)*((_QWORD *)this + 21);
                        if (!v18
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v18, 4uLL, 0), !(_DWORD)result))
                        {
                          v19 = (const void *)*((_QWORD *)this + 22);
                          if (!v19
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v19, 4uLL, 0), !(_DWORD)result))
                          {
                            v20 = (const void *)*((_QWORD *)this + 23);
                            if (!v20
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v20, 4uLL, 0), !(_DWORD)result))
                            {
                              v21 = (const void *)*((_QWORD *)this + 24);
                              if (!v21
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v21, 4uLL, 0), !(_DWORD)result))
                              {
                                v22 = (const void *)*((_QWORD *)this + 25);
                                if (!v22
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v22, 4uLL, 0), !(_DWORD)result))
                                {
                                  v23 = (const void *)*((_QWORD *)this + 26);
                                  if (!v23
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v23, 4uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v24 = (const void *)*((_QWORD *)this + 27);
                                    if (!v24
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v24, 4uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v25 = (const void *)*((_QWORD *)this + 28);
                                      if (!v25
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v25, 4uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v26 = (_BYTE *)*((_QWORD *)this + 29);
                                        if (!v26
                                          || (v27 = (_BYTE *)*((_QWORD *)this + 30), v26 == v27)
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v26, v27 - v26, 0),
                                              !(_DWORD)result))
                                        {
                                          v28 = (_BYTE *)*((_QWORD *)this + 32);
                                          if (!v28
                                            || (v29 = (_BYTE *)*((_QWORD *)this + 33), v28 == v29)
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v28, v29 - v28, 0),
                                                !(_DWORD)result))
                                          {
                                            v30 = (const void *)*((_QWORD *)this + 35);
                                            if (!v30
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 31, v30, 4uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v31 = (const void *)*((_QWORD *)this + 36);
                                              if (!v31
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 34, v31, 4uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v32 = (const void *)*((_QWORD *)this + 37);
                                                if (!v32
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 35, v32, 0x48uLL, 0), !(_DWORD)result))
                                                {
                                                  v33 = (const void *)*((_QWORD *)this + 38);
                                                  if (!v33
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 36, v33, 4uLL, 0), !(_DWORD)result))
                                                  {
                                                    v34 = (const void *)*((_QWORD *)this + 39);
                                                    if (!v34
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 37, v34, 4uLL, 0), !(_DWORD)result))
                                                    {
                                                      v35 = (const void *)*((_QWORD *)this + 40);
                                                      if (!v35
                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 38, v35, 0x48uLL, 0), !(_DWORD)result))
                                                      {
                                                        v36 = (const void *)*((_QWORD *)this + 41);
                                                        if (!v36
                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 39, v36, 0x24uLL, 0), !(_DWORD)result))
                                                        {
                                                          v37 = (const void *)*((_QWORD *)this + 42);
                                                          if (!v37
                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 40, v37, 0x28uLL, 0), !(_DWORD)result))
                                                          {
                                                            v38 = (const void *)*((_QWORD *)this + 43);
                                                            if (!v38
                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 41, v38, 4uLL, 0), !(_DWORD)result))
                                                            {
                                                              v39 = (const void *)*((_QWORD *)this + 44);
                                                              if (!v39
                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 42, v39, 4uLL, 0), !(_DWORD)result))
                                                              {
                                                                v40 = (const void *)*((_QWORD *)this + 45);
                                                                if (!v40
                                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 43, v40, 0xAuLL, 0), !(_DWORD)result))
                                                                {
                                                                  v41 = (const void *)*((_QWORD *)this + 46);
                                                                  if (!v41
                                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 44, v41, 0x100uLL, 0), !(_DWORD)result))
                                                                  {
                                                                    v42 = (const void *)*((_QWORD *)this + 47);
                                                                    if (!v42
                                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 45, v42, 1uLL, 0), !(_DWORD)result))
                                                                    {
                                                                      v43 = (const void *)*((_QWORD *)this + 48);
                                                                      if (!v43
                                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 46, v43, 4uLL, 0), !(_DWORD)result))
                                                                      {
                                                                        v44 = (const void *)*((_QWORD *)this + 49);
                                                                        if (!v44
                                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 47, v44, 1uLL, 0), !(_DWORD)result))
                                                                        {
                                                                          v45 = (const void *)*((_QWORD *)this + 50);
                                                                          if (!v45
                                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 48, v45, 4uLL, 0), !(_DWORD)result))
                                                                          {
                                                                            result = 0;
                                                                            *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStartDataCallReq_SDK::unpack(AriSdk::ARI_IBICallPsStartDataCallReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  char *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  _DWORD *v24;
  _OWORD *v25;
  _OWORD *v26;
  _DWORD *v27;
  _DWORD *v28;
  _OWORD *v29;
  _DWORD *v30;
  _DWORD *v31;
  _OWORD *v32;
  _OWORD *v33;
  _OWORD *v34;
  _DWORD *v35;
  _DWORD *v36;
  _WORD *v37;
  _OWORD *v38;
  _BYTE *v39;
  _DWORD *v40;
  _BYTE *v41;
  _DWORD *v42;
  __n128 __p;
  uint64_t v45;
  size_t __sz;
  BOOL v47;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v47 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (char *)operator new[]();
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *((_OWORD *)v5 + 5) = 0u;
  *(_QWORD *)(v5 + 93) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 101, &v47, &__sz);
  if ((_DWORD)v3 || !v47)
  {
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v45 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v5, (uint64_t)&v5[__sz], __sz);
    AriSdk::TlvArray<char,101ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v13, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v14, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v15, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v16, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v17, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v18, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v19, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v20, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 24, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v21 = (_DWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v21, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 25, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v22, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 26, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v23 = (_DWORD *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v23, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 27, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v24 = (_DWORD *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v24, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 28, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  }
  v47 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v25 = (_OWORD *)operator new[]();
  *v25 = 0u;
  v25[1] = 0u;
  v25[2] = 0u;
  v25[3] = 0u;
  *((_BYTE *)v25 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v25, 65, &v47, &__sz);
  if ((_DWORD)v3 || !v47)
  {
    MEMORY[0x212BB9B48](v25, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v45 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v25, (uint64_t)v25 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)((char *)this + 232), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v25, 0x1000C8077774924);
  }
  v47 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v26 = (_OWORD *)operator new[]();
  *v26 = 0u;
  v26[1] = 0u;
  v26[2] = 0u;
  v26[3] = 0u;
  *((_BYTE *)v26 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v26, 65, &v47, &__sz);
  if ((_DWORD)v3 || !v47)
  {
    MEMORY[0x212BB9B48](v26, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v45 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v26, (uint64_t)v26 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)((char *)this + 256), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v26, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v27 = (_DWORD *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 31, v27, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 35, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v28 = (_DWORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 34, v28, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 36, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v29 = (_OWORD *)operator new();
  *v29 = 0u;
  v29[1] = 0u;
  v29[2] = 0u;
  v29[3] = 0u;
  *((_QWORD *)v29 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 35, v29, 72, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v29, 0x1000C40FF89C88ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos3g>::operator=<IBICallPsQos3g&,void>((uint64_t *)this + 37, (uint64_t)v29);
    MEMORY[0x212BB9B60](v29, 0x1000C40FF89C88ELL);
  }
  __p.n128_u8[0] = 0;
  v30 = (_DWORD *)operator new();
  *v30 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 36, v30, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 38, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v31 = (_DWORD *)operator new();
  *v31 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 37, v31, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 39, v31);
    MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v32 = (_OWORD *)operator new();
  *v32 = 0u;
  v32[1] = 0u;
  v32[2] = 0u;
  v32[3] = 0u;
  *((_QWORD *)v32 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 38, v32, 72, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v32, 0x1000C40FF89C88ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos3g>::operator=<IBICallPsQos3g&,void>((uint64_t *)this + 40, (uint64_t)v32);
    MEMORY[0x212BB9B60](v32, 0x1000C40FF89C88ELL);
  }
  __p.n128_u8[0] = 0;
  v33 = (_OWORD *)operator new();
  *v33 = 0u;
  v33[1] = 0u;
  *((_DWORD *)v33 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 39, v33, 36, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v33, 0x1000C40B04AA6E5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEpsQos_V1>::operator=<IBICallPsEpsQos_V1&,void>((uint64_t *)this + 41, (uint64_t)v33);
    MEMORY[0x212BB9B60](v33, 0x1000C40B04AA6E5);
  }
  __p.n128_u8[0] = 0;
  v34 = (_OWORD *)operator new();
  *v34 = 0u;
  v34[1] = 0u;
  *((_QWORD *)v34 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 40, v34, 40, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v34, 0x1000C4045BD7913);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 42, (uint64_t)v34);
    MEMORY[0x212BB9B60](v34, 0x1000C4045BD7913);
  }
  __p.n128_u8[0] = 0;
  v35 = (_DWORD *)operator new();
  *v35 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 41, v35, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 43, v35);
    MEMORY[0x212BB9B60](v35, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v36 = (_DWORD *)operator new();
  *v36 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 42, v36, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 44, v36);
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v37 = (_WORD *)operator new();
  *(_QWORD *)v37 = 0;
  v37[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 43, v37, 10, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v37, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 45, (uint64_t)v37);
    MEMORY[0x212BB9B60](v37, 0x1000C4080B1215BLL);
  }
  __p.n128_u8[0] = 0;
  v38 = (_OWORD *)operator new();
  *v38 = 0u;
  v38[1] = 0u;
  v38[2] = 0u;
  v38[3] = 0u;
  v38[4] = 0u;
  v38[5] = 0u;
  v38[6] = 0u;
  v38[7] = 0u;
  v38[8] = 0u;
  v38[9] = 0u;
  v38[10] = 0u;
  v38[11] = 0u;
  v38[12] = 0u;
  v38[13] = 0u;
  v38[14] = 0u;
  v38[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 44, v38, 256, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v38, 0x1000C40ADF4F15FLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsDnSpecificIdentity>::operator=<IBICallPsDnSpecificIdentity&,void>((uint64_t *)this + 46, v38);
    MEMORY[0x212BB9B60](v38, 0x1000C40ADF4F15FLL);
  }
  __p.n128_u8[0] = 0;
  v39 = (_BYTE *)operator new();
  *v39 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 45, v39, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v39, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 47, v39);
    MEMORY[0x212BB9B60](v39, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v40 = (_DWORD *)operator new();
  *v40 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 46, v40, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v40, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 48, v40);
    MEMORY[0x212BB9B60](v40, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v41 = (_BYTE *)operator new();
  *v41 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 47, v41, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v41, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 49, v41);
    MEMORY[0x212BB9B60](v41, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v42 = (_DWORD *)operator new();
  *v42 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 48, v42, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 50, v42);
  MEMORY[0x212BB9B60](v42, 0x1000C4052888210);
  return v3;
}

void sub_20E15D080(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBICallPsDnSpecificIdentity>::operator=<IBICallPsDnSpecificIdentity&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v4 = (_OWORD *)operator new();
  v5 = a2[13];
  v4[12] = a2[12];
  v4[13] = v5;
  v6 = a2[15];
  v4[14] = a2[14];
  v4[15] = v6;
  v7 = a2[9];
  v4[8] = a2[8];
  v4[9] = v7;
  v8 = a2[11];
  v4[10] = a2[10];
  v4[11] = v8;
  v9 = a2[5];
  v4[4] = a2[4];
  v4[5] = v9;
  v10 = a2[7];
  v4[6] = a2[6];
  v4[7] = v10;
  v11 = a2[1];
  *v4 = *a2;
  v4[1] = v11;
  v12 = a2[3];
  v4[2] = a2[2];
  v4[3] = v12;
  v13 = *a1;
  *a1 = (uint64_t)v4;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40ADF4F15FLL);
  return a1;
}

BOOL AriSdk::ARI_IBICallPsStartDataCallReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStartDataCallReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209780736;
}

double AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK::ARI_IBICallPsStartDataCallRspCb_SDK(AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD010000u, 0);
  *(_QWORD *)v1 = &off_24C8D0470;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD010000u, 0);
  *(_QWORD *)v1 = &off_24C8D0470;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK::ARI_IBICallPsStartDataCallRspCb_SDK(AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0470;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0470;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK::~ARI_IBICallPsStartDataCallRspCb_SDK(AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8D0470;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4000313F17);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK::~ARI_IBICallPsStartDataCallRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK::pack(AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK::unpack(AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E15D8C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStartDataCallRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218169344;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStatusInd_SDK::ARI_IBICallPsStatusInd_SDK(AriSdk::ARI_IBICallPsStatusInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8B0000u, 0);
  *(_QWORD *)result = &off_24C8D04A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8B0000u, 0);
  *(_QWORD *)result = &off_24C8D04A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStatusInd_SDK::ARI_IBICallPsStatusInd_SDK(AriSdk::ARI_IBICallPsStatusInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D04A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D04A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsStatusInd_SDK::~ARI_IBICallPsStatusInd_SDK(AriSdk::ARI_IBICallPsStatusInd_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D04A8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStatusInd_SDK::~ARI_IBICallPsStatusInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStatusInd_SDK::pack(AriSdk::ARI_IBICallPsStatusInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStatusInd_SDK::unpack(AriSdk::ARI_IBICallPsStatusInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E15DC70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStatusInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStatusInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227213312;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK::ARI_IBICallPsStopBandwidthEstimationReq_SDK(AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA30000u, 0);
  *(_QWORD *)result = &off_24C8D04E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA30000u, 0);
  *(_QWORD *)result = &off_24C8D04E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK::ARI_IBICallPsStopBandwidthEstimationReq_SDK(AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D04E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D04E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK::~ARI_IBICallPsStopBandwidthEstimationReq_SDK(AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D04E0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK::~ARI_IBICallPsStopBandwidthEstimationReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK::pack(AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK::unpack(AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E15DEEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStopBandwidthEstimationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212008960;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK(AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD230000u, 0);
  *(_QWORD *)result = &off_24C8D0518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD230000u, 0);
  *(_QWORD *)result = &off_24C8D0518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK(AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK::~ARI_IBICallPsStopBandwidthEstimationRspCb_SDK(AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D0518;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK::~ARI_IBICallPsStopBandwidthEstimationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK::pack(AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK::unpack(AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E15E160(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStopBandwidthEstimationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220397568;
}

double AriSdk::ARI_IBICallPsStopDataCallReq_SDK::ARI_IBICallPsStopDataCallReq_SDK(AriSdk::ARI_IBICallPsStopDataCallReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC818000u, 0);
  *(_QWORD *)v1 = &off_24C8D0550;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC818000u, 0);
  *(_QWORD *)v1 = &off_24C8D0550;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsStopDataCallReq_SDK::ARI_IBICallPsStopDataCallReq_SDK(AriSdk::ARI_IBICallPsStopDataCallReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0550;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0550;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsStopDataCallReq_SDK::~ARI_IBICallPsStopDataCallReq_SDK(AriSdk::ARI_IBICallPsStopDataCallReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D0550;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStopDataCallReq_SDK::~ARI_IBICallPsStopDataCallReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStopDataCallReq_SDK::pack(AriSdk::ARI_IBICallPsStopDataCallReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStopDataCallReq_SDK::unpack(AriSdk::ARI_IBICallPsStopDataCallReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E15E6A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStopDataCallReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStopDataCallReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 209813504;
}

double AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK::ARI_IBICallPsStopDataCallRspCb_SDK(AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD018000u, 0);
  *(_QWORD *)v1 = &off_24C8D0588;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD018000u, 0);
  *(_QWORD *)v1 = &off_24C8D0588;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK::ARI_IBICallPsStopDataCallRspCb_SDK(AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0588;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0588;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK::~ARI_IBICallPsStopDataCallRspCb_SDK(AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D0588;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK::~ARI_IBICallPsStopDataCallRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK::pack(AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK::unpack(AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E15EBC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsStopDataCallRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218202112;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSuspendIndCb_SDK::ARI_IBICallPsSuspendIndCb_SDK(AriSdk::ARI_IBICallPsSuspendIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD820000u, 0);
  *(_QWORD *)result = &off_24C8D05C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD820000u, 0);
  *(_QWORD *)result = &off_24C8D05C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSuspendIndCb_SDK::ARI_IBICallPsSuspendIndCb_SDK(AriSdk::ARI_IBICallPsSuspendIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D05C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D05C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSuspendIndCb_SDK::~ARI_IBICallPsSuspendIndCb_SDK(AriSdk::ARI_IBICallPsSuspendIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D05C0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSuspendIndCb_SDK::~ARI_IBICallPsSuspendIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSuspendIndCb_SDK::pack(AriSdk::ARI_IBICallPsSuspendIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSuspendIndCb_SDK::unpack(AriSdk::ARI_IBICallPsSuspendIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E15EF70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSuspendIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSuspendIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226623488;
}

double AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK::ARI_IBICallPsSymptomsInfoReq_SDK(AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA48000u, 0);
  *(_QWORD *)v1 = &off_24C8D05F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA48000u, 0);
  *(_QWORD *)v1 = &off_24C8D05F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK::ARI_IBICallPsSymptomsInfoReq_SDK(AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D05F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D05F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK::~ARI_IBICallPsSymptomsInfoReq_SDK(AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D05F8;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK::~ARI_IBICallPsSymptomsInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK::pack(AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  void *v6;
  void **v7;
  _BYTE *v8;
  void *v9;
  const char *v10;
  BOOL *v11;
  void *v12;
  void *__p;
  _BYTE *v15;
  uint64_t v16;
  size_t __sz;
  BOOL v18;
  BOOL v19[8];
  char v20;

  v19[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v19, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v19[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19[0] = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 8, v19, 0);
  if ((_DWORD)v3 || !v19[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v18 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x3E80uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 16000, &v18, &__sz);
  if (!(_DWORD)v3 && v18)
  {
    v15 = 0;
    v16 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    v7 = (void **)((char *)this + 80);
    v9 = __p;
    v8 = v15;
    if ((unint64_t)(v15 - (_BYTE *)__p) < 0x3E81)
    {
      v12 = *v7;
      if (*v7)
      {
        *((_QWORD *)this + 11) = v12;
        operator delete(v12);
        *v7 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
        v9 = __p;
        v8 = v15;
      }
      *((_QWORD *)this + 10) = v9;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v16;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v19);
      if (v20 >= 0)
        v11 = v19;
      else
        v11 = *(BOOL **)v19;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v10, v11, 360, (char *)this + 80, v15 - (_BYTE *)__p, 16000);
      if (v20 < 0)
        operator delete(*(void **)v19);
      if (__p)
      {
        v15 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E15F48C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSymptomsInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212107264;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK::ARI_IBICallPsSymptomsInfoRsp_SDK(AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD248000u, 0);
  *(_QWORD *)result = &off_24C8D0630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD248000u, 0);
  *(_QWORD *)result = &off_24C8D0630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK::ARI_IBICallPsSymptomsInfoRsp_SDK(AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK::~ARI_IBICallPsSymptomsInfoRsp_SDK(AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0630;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK::~ARI_IBICallPsSymptomsInfoRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK::pack(AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK::unpack(AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E15F84C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSymptomsInfoRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220495872;
}

double AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK::ARI_IBICallPsSymptomsInfoInd_SDK(AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xDA48000u, 0);
  *(_QWORD *)v1 = &off_24C8D0668;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xDA48000u, 0);
  *(_QWORD *)v1 = &off_24C8D0668;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK::ARI_IBICallPsSymptomsInfoInd_SDK(AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0668;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0668;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK::~ARI_IBICallPsSymptomsInfoInd_SDK(AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0668;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK::~ARI_IBICallPsSymptomsInfoInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK::pack(AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK::unpack(AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  __n128 __p;
  uint64_t v9;
  size_t __sz;
  BOOL v11;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v11 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_QWORD *)operator new[]();
  *v6 = 0;
  v6[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 16, &v11, &__sz);
  if (!(_DWORD)v3 && v11)
  {
    v9 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E15FCD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsSymptomsInfoInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 228884480;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTrafficClassInfo_SDK::ARI_IBICallPsTrafficClassInfo_SDK(AriSdk::ARI_IBICallPsTrafficClassInfo_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC860000u, 0);
  *(_QWORD *)result = &off_24C8D06A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC860000u, 0);
  *(_QWORD *)result = &off_24C8D06A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTrafficClassInfo_SDK::ARI_IBICallPsTrafficClassInfo_SDK(AriSdk::ARI_IBICallPsTrafficClassInfo_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D06A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D06A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsTrafficClassInfo_SDK::~ARI_IBICallPsTrafficClassInfo_SDK(AriSdk::ARI_IBICallPsTrafficClassInfo_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D06A0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4027586B93);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40451B5BE8);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsTrafficClassInfo_SDK::~ARI_IBICallPsTrafficClassInfo_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfo_SDK::pack(AriSdk::ARI_IBICallPsTrafficClassInfo_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x1CuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfo_SDK::unpack(AriSdk::ARI_IBICallPsTrafficClassInfo_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 16, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40451B5BE8);
    MEMORY[0x212BB9B60](v5, 0x1000C40451B5BE8);
  }
  v12 = 0;
  v8 = operator new();
  *(_QWORD *)(v8 + 8) = 0;
  *(_QWORD *)(v8 + 16) = 0;
  *(_QWORD *)v8 = 0;
  *(_DWORD *)(v8 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, (void *)v8, 28, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_OWORD *)operator new();
    *v9 = *(_OWORD *)v8;
    *(_OWORD *)((char *)v9 + 12) = *(_OWORD *)(v8 + 12);
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4027586B93);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4027586B93);
  return v3;
}

void sub_20E1601DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4027586B93);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsTrafficClassInfo_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsTrafficClassInfo_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210108416;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK::ARI_IBICallPsTrafficClassInfoRspCb_SDK(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD060000u, 0);
  *(_QWORD *)result = &off_24C8D06D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD060000u, 0);
  *(_QWORD *)result = &off_24C8D06D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK::ARI_IBICallPsTrafficClassInfoRspCb_SDK(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D06D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D06D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK::~ARI_IBICallPsTrafficClassInfoRspCb_SDK(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D06D8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK::~ARI_IBICallPsTrafficClassInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK::pack(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK::unpack(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E160554(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218497024;
}

double AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK::ARI_IBICallPsTrafficClassInfo_V2_SDK(AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8E0000u, 0);
  *(_QWORD *)v1 = &off_24C8D0710;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8E0000u, 0);
  *(_QWORD *)v1 = &off_24C8D0710;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK::ARI_IBICallPsTrafficClassInfo_V2_SDK(AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0710;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0710;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK::~ARI_IBICallPsTrafficClassInfo_V2_SDK(AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0710;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK::~ARI_IBICallPsTrafficClassInfo_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK::pack(AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK::unpack(AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x400uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1024, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,1024ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E1608E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,1024ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x401)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 1024);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E160A04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsTrafficClassInfo_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210632704;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD0E0000u, 0);
  *(_QWORD *)result = &off_24C8D0748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD0E0000u, 0);
  *(_QWORD *)result = &off_24C8D0748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK::~ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0748;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK::~ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK::pack(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK::unpack(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E160D40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsTrafficClassInfoRspCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219021312;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK::ARI_IBICallPsTransmitStateIndCb_SDK(AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD880000u, 0);
  *(_QWORD *)result = &off_24C8D0780;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD880000u, 0);
  *(_QWORD *)result = &off_24C8D0780;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK::ARI_IBICallPsTransmitStateIndCb_SDK(AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0780;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0780;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK::~ARI_IBICallPsTransmitStateIndCb_SDK(AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0780;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK::~ARI_IBICallPsTransmitStateIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK::pack(AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK::unpack(AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1611E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsTransmitStateIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227016704;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTransmitStateReq_SDK::ARI_IBICallPsTransmitStateReq_SDK(AriSdk::ARI_IBICallPsTransmitStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC988000u, 0);
  *(_QWORD *)result = &off_24C8D07B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC988000u, 0);
  *(_QWORD *)result = &off_24C8D07B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTransmitStateReq_SDK::ARI_IBICallPsTransmitStateReq_SDK(AriSdk::ARI_IBICallPsTransmitStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D07B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D07B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsTransmitStateReq_SDK::~ARI_IBICallPsTransmitStateReq_SDK(AriSdk::ARI_IBICallPsTransmitStateReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D07B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsTransmitStateReq_SDK::~ARI_IBICallPsTransmitStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsTransmitStateReq_SDK::pack(AriSdk::ARI_IBICallPsTransmitStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsTransmitStateReq_SDK::unpack(AriSdk::ARI_IBICallPsTransmitStateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E16157C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsTransmitStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsTransmitStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211320832;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK::ARI_IBICallPsTransmitStateRspCb_SDK(AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD188000u, 0);
  *(_QWORD *)result = &off_24C8D07F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD188000u, 0);
  *(_QWORD *)result = &off_24C8D07F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK::ARI_IBICallPsTransmitStateRspCb_SDK(AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D07F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D07F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK::~ARI_IBICallPsTransmitStateRspCb_SDK(AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D07F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK::~ARI_IBICallPsTransmitStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK::pack(AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK::unpack(AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1618D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsTransmitStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219709440;
}

double AriSdk::ARI_IBICallPsUpdateNaiReq_SDK::ARI_IBICallPsUpdateNaiReq_SDK(AriSdk::ARI_IBICallPsUpdateNaiReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8A0000u, 0);
  *(_QWORD *)v1 = &off_24C8D0828;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8A0000u, 0);
  *(_QWORD *)v1 = &off_24C8D0828;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsUpdateNaiReq_SDK::ARI_IBICallPsUpdateNaiReq_SDK(AriSdk::ARI_IBICallPsUpdateNaiReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0828;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0828;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsUpdateNaiReq_SDK::~ARI_IBICallPsUpdateNaiReq_SDK(AriSdk::ARI_IBICallPsUpdateNaiReq_SDK *this)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D0828;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 12);
  if (v3)
  {
    *((_QWORD *)this + 13) = v3;
    operator delete(v3);
  }
  v4 = (void *)*((_QWORD *)this + 9);
  if (v4)
  {
    *((_QWORD *)this + 10) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsUpdateNaiReq_SDK::~ARI_IBICallPsUpdateNaiReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsUpdateNaiReq_SDK::pack(AriSdk::ARI_IBICallPsUpdateNaiReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;
  _BYTE *v9;
  _BYTE *v10;
  BOOL v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    v8 = !v6 || v6 == v7;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      v9 = (_BYTE *)*((_QWORD *)this + 12);
      v10 = (_BYTE *)*((_QWORD *)this + 13);
      v11 = !v9 || v9 == v10;
      if (v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v9, v10 - v9, 0), !(_DWORD)result))
      {
        v12 = (const void *)*((_QWORD *)this + 15);
        if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v12, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsUpdateNaiReq_SDK::unpack(AriSdk::ARI_IBICallPsUpdateNaiReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  __n128 __p;
  uint64_t v10;
  size_t __sz;
  BOOL v12;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v12 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_OWORD *)operator new[]();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  *((_BYTE *)v5 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 65, &v12, &__sz);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  }
  v12 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  *((_BYTE *)v6 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 65, &v12, &__sz);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<char,65ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E161E64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsUpdateNaiReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsUpdateNaiReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210370560;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK::ARI_IBICallPsUpdateNaiRspCb_SDK(AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD0A0000u, 0);
  *(_QWORD *)result = &off_24C8D0860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD0A0000u, 0);
  *(_QWORD *)result = &off_24C8D0860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK::ARI_IBICallPsUpdateNaiRspCb_SDK(AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK::~ARI_IBICallPsUpdateNaiRspCb_SDK(AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0860;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK::~ARI_IBICallPsUpdateNaiRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK::pack(AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK::unpack(AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1621FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsUpdateNaiRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218759168;
}

double AriSdk::ARI_IBICallPsVoLTECodecReq_SDK::ARI_IBICallPsVoLTECodecReq_SDK(AriSdk::ARI_IBICallPsVoLTECodecReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9A0000u, 0);
  *(_QWORD *)v1 = &off_24C8D0898;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9A0000u, 0);
  *(_QWORD *)v1 = &off_24C8D0898;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsVoLTECodecReq_SDK::ARI_IBICallPsVoLTECodecReq_SDK(AriSdk::ARI_IBICallPsVoLTECodecReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0898;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0898;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsVoLTECodecReq_SDK::~ARI_IBICallPsVoLTECodecReq_SDK(AriSdk::ARI_IBICallPsVoLTECodecReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8D0898;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsVoLTECodecReq_SDK::~ARI_IBICallPsVoLTECodecReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsVoLTECodecReq_SDK::pack(AriSdk::ARI_IBICallPsVoLTECodecReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsVoLTECodecReq_SDK::unpack(AriSdk::ARI_IBICallPsVoLTECodecReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v18 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (_DWORD *)operator new();
    *v11 = *v10;
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v17 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v13, 4, &v17, 0);
  if (!(_DWORD)v3 && v17)
  {
    v14 = (_DWORD *)operator new();
    *v14 = *v13;
    v15 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v14;
    if (v15)
      MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E162964(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsVoLTECodecReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsVoLTECodecReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211419136;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK::ARI_IBICallPsVoLTECodecRspCb_SDK(AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1A0000u, 0);
  *(_QWORD *)result = &off_24C8D08D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1A0000u, 0);
  *(_QWORD *)result = &off_24C8D08D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK::ARI_IBICallPsVoLTECodecRspCb_SDK(AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D08D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D08D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK::~ARI_IBICallPsVoLTECodecRspCb_SDK(AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D08D0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK::~ARI_IBICallPsVoLTECodecRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK::pack(AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK::unpack(AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E162CD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsVoLTECodecRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219807744;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK::ARI_IBICallPsVoiceLQMLinkStateInd_SDK(AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD830000u, 0);
  *(_QWORD *)result = &off_24C8D0908;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD830000u, 0);
  *(_QWORD *)result = &off_24C8D0908;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK::ARI_IBICallPsVoiceLQMLinkStateInd_SDK(AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0908;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0908;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK::~ARI_IBICallPsVoiceLQMLinkStateInd_SDK(AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0908;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK::~ARI_IBICallPsVoiceLQMLinkStateInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK::pack(AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK::unpack(AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v8 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  return v3;
}

void sub_20E163108(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsVoiceLQMLinkStateInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226689024;
}

double AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK::ARI_IBICallPsVoiceLQMStateInd_SDK(AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD858000u, 0);
  *(_QWORD *)v1 = &off_24C8D0940;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD858000u, 0);
  *(_QWORD *)v1 = &off_24C8D0940;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK::ARI_IBICallPsVoiceLQMStateInd_SDK(AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0940;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0940;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK::~ARI_IBICallPsVoiceLQMStateInd_SDK(AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8D0940;
  v2 = (void *)*((_QWORD *)this + 13);
  if (v2)
  {
    *((_QWORD *)this + 14) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40A86A77D5);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK::~ARI_IBICallPsVoiceLQMStateInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK::pack(AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  _BYTE *v10;
  _BYTE *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0x14uLL, 0), !(_DWORD)result))
          {
            v10 = (_BYTE *)*((_QWORD *)this + 13);
            if (!v10
              || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, v11 - v10, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK::unpack(AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  __n128 __p;
  uint64_t v14;
  size_t __sz;
  BOOL v16;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v8[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 20, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = operator new();
    *(_OWORD *)v9 = *(_OWORD *)v8;
    *(_DWORD *)(v9 + 16) = v8[4];
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C40A86A77D5);
    MEMORY[0x212BB9B60](v8, 0x1000C40A86A77D5);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v11 = (_OWORD *)operator new[]();
  *v11 = 0u;
  v11[1] = 0u;
  v11[2] = 0u;
  v11[3] = 0u;
  v11[4] = 0u;
  v11[5] = 0u;
  *((_DWORD *)v11 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 100, &v16, &__sz);
  if (!(_DWORD)v3 && v16)
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v11, (uint64_t)v11 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,100ul>::operator=((std::vector<int> *)((char *)this + 104), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  return v3;
}

void sub_20E16386C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsVoiceLQMStateInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 226852864;
}

double AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK::ARI_IBICallPsVoipAppInfoReq_SDK(AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC890000u, 0);
  *(_QWORD *)v1 = &off_24C8D0978;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC890000u, 0);
  *(_QWORD *)v1 = &off_24C8D0978;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK::ARI_IBICallPsVoipAppInfoReq_SDK(AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0978;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0978;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK::~ARI_IBICallPsVoipAppInfoReq_SDK(AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8D0978;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK::~ARI_IBICallPsVoipAppInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK::pack(AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E163ED0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsVoipAppInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210305024;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK::ARI_IBICallPsVoipAppInfoRspCb_SDK(AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD090000u, 0);
  *(_QWORD *)result = &off_24C8D09B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD090000u, 0);
  *(_QWORD *)result = &off_24C8D09B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK::ARI_IBICallPsVoipAppInfoRspCb_SDK(AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D09B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D09B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK::~ARI_IBICallPsVoipAppInfoRspCb_SDK(AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D09B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK::~ARI_IBICallPsVoipAppInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK::pack(AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK::unpack(AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E164238(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsVoipAppInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218693632;
}

double AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK::ARI_IBICallPsWiFiAssociationStatusReq_SDK(AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC998000u, 0);
  *(_QWORD *)v1 = &off_24C8D09E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC998000u, 0);
  *(_QWORD *)v1 = &off_24C8D09E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK::ARI_IBICallPsWiFiAssociationStatusReq_SDK(AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D09E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D09E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK::~ARI_IBICallPsWiFiAssociationStatusReq_SDK(AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8D09E8;
  v2 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 14);
  if (v4)
  {
    *((_QWORD *)this + 15) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = (void *)*((_QWORD *)this + 10);
  if (v6)
  {
    *((_QWORD *)this + 11) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK::~ARI_IBICallPsWiFiAssociationStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK::pack(AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 1uLL, 0), !(_DWORD)result))
        {
          v11 = (_BYTE *)*((_QWORD *)this + 14);
          if (!v11
            || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, v12 - v11, 0), !(_DWORD)result))
          {
            v13 = (const void *)*((_QWORD *)this + 17);
            if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v13, 1uLL, 0), !(_DWORD)result))
            {
              v14 = (const void *)*((_QWORD *)this + 18);
              if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v14, 1uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK::unpack(AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  void **v7;
  _BYTE *v8;
  void *v9;
  const char *v10;
  BOOL *v11;
  void *v12;
  _BYTE *v13;
  _WORD *v14;
  void **v15;
  _BYTE *v16;
  void *v17;
  const char *v18;
  BOOL *v19;
  void *v20;
  _BYTE *v21;
  _BYTE *v22;
  void *__p;
  _BYTE *v25;
  uint64_t v26;
  size_t __sz;
  BOOL v28;
  BOOL v29[8];
  char v30;

  v29[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v29, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v29[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v29[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, v29, 0);
  if ((_DWORD)v3 || !v29[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v28 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 32, &v28, &__sz);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v25 = 0;
    v26 = 0;
    __p = 0;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    v7 = (void **)((char *)this + 80);
    v9 = __p;
    v8 = v25;
    if ((unint64_t)(v25 - (_BYTE *)__p) < 0x21)
    {
      v12 = *v7;
      if (*v7)
      {
        *((_QWORD *)this + 11) = v12;
        operator delete(v12);
        *v7 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
        v9 = __p;
        v8 = v25;
      }
      *((_QWORD *)this + 10) = v9;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v26;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v29);
      if (v30 >= 0)
        v11 = v29;
      else
        v11 = *(BOOL **)v29;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v10, v11, 360, (char *)this + 80, v25 - (_BYTE *)__p, 32);
      if (v30 < 0)
        operator delete(*(void **)v29);
      if (__p)
      {
        v25 = __p;
        operator delete(__p);
      }
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  v29[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v13, 1, v29, 0);
  if ((_DWORD)v3 || !v29[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v28 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v14 = (_WORD *)operator new[]();
  *(_DWORD *)v14 = 0;
  v14[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v14, 6, &v28, &__sz);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B48](v14, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v25 = 0;
    v26 = 0;
    __p = 0;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v14, (uint64_t)v14 + __sz, __sz);
    v15 = (void **)((char *)this + 112);
    v17 = __p;
    v16 = v25;
    if ((unint64_t)(v25 - (_BYTE *)__p) < 7)
    {
      v20 = *v15;
      if (*v15)
      {
        *((_QWORD *)this + 15) = v20;
        operator delete(v20);
        *v15 = 0;
        *((_QWORD *)this + 15) = 0;
        *((_QWORD *)this + 16) = 0;
        v17 = __p;
        v16 = v25;
      }
      *((_QWORD *)this + 14) = v17;
      *((_QWORD *)this + 15) = v16;
      *((_QWORD *)this + 16) = v26;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v29);
      if (v30 >= 0)
        v19 = v29;
      else
        v19 = *(BOOL **)v29;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v18, v19, 360, (char *)this + 112, v25 - (_BYTE *)__p, 6);
      if (v30 < 0)
        operator delete(*(void **)v29);
      if (__p)
      {
        v25 = __p;
        operator delete(__p);
      }
    }
    MEMORY[0x212BB9B48](v14, 0x1000C8077774924);
  }
  v29[0] = 0;
  v21 = (_BYTE *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v21, 1, v29, 0);
  if ((_DWORD)v3 || !v29[0])
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4077774924);
  }
  v29[0] = 0;
  v22 = (_BYTE *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v22, 1, v29, 0);
  if (!(_DWORD)v3 && v29[0])
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 18, v22);
  MEMORY[0x212BB9B60](v22, 0x1000C4077774924);
  return v3;
}

void sub_20E164B90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;

  MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWiFiAssociationStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211386368;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK(AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD198000u, 0);
  *(_QWORD *)result = &off_24C8D0A20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD198000u, 0);
  *(_QWORD *)result = &off_24C8D0A20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK(AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0A20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0A20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK::~ARI_IBICallPsWiFiAssociationStatusRspCb_SDK(AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0A20;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK::~ARI_IBICallPsWiFiAssociationStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK::pack(AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK::unpack(AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E164F78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWiFiAssociationStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 219774976;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK::ARI_IBICallPsWrmSAInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA40000u, 0);
  *(_QWORD *)result = &off_24C8D0A58;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA40000u, 0);
  *(_QWORD *)result = &off_24C8D0A58;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK::ARI_IBICallPsWrmSAInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0A58;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0A58;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK::~ARI_IBICallPsWrmSAInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0A58;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK::~ARI_IBICallPsWrmSAInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK::pack(AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1653E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSAInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212074496;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK::ARI_IBICallPsWrmSAInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD240000u, 0);
  *(_QWORD *)result = &off_24C8D0A90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD240000u, 0);
  *(_QWORD *)result = &off_24C8D0A90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK::ARI_IBICallPsWrmSAInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0A90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0A90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK::~ARI_IBICallPsWrmSAInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0A90;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK::~ARI_IBICallPsWrmSAInfoRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK::pack(AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK::unpack(AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E165740(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSAInfoRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220463104;
}

double AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK::ARI_IBICallPsWrmSdmInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA38000u, 0);
  *(_QWORD *)v1 = &off_24C8D0AC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA38000u, 0);
  *(_QWORD *)v1 = &off_24C8D0AC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK::ARI_IBICallPsWrmSdmInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0AC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0AC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK::~ARI_IBICallPsWrmSdmInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8D0AC8;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40789AEA99);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40451B5BE8);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK::~ARI_IBICallPsWrmSdmInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v10, 8uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _QWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 16, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40451B5BE8);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v8, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v11 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v9, 8, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<IBICallPsUplinkBwEstimation>::operator=<IBICallPsUplinkBwEstimation&,void>((uint64_t *)this + 13, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C40789AEA99);
  return v3;
}

void sub_20E165E18(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40789AEA99);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212041728;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK::ARI_IBICallPsWrmSdmInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD238000u, 0);
  *(_QWORD *)result = &off_24C8D0B00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD238000u, 0);
  *(_QWORD *)result = &off_24C8D0B00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK::ARI_IBICallPsWrmSdmInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0B00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0B00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK::~ARI_IBICallPsWrmSdmInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0B00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK::~ARI_IBICallPsWrmSdmInfoRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E1661B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220430336;
}

double AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK::ARI_IBICallPsWrmSdmInfoReq_V2_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA50000u, 0);
  *(_QWORD *)v1 = &off_24C8D0B38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA50000u, 0);
  *(_QWORD *)v1 = &off_24C8D0B38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK::ARI_IBICallPsWrmSdmInfoReq_V2_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0B38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0B38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK::~ARI_IBICallPsWrmSdmInfoReq_V2_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8D0B38;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40789AEA99);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40451B5BE8);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK::~ARI_IBICallPsWrmSdmInfoReq_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 0x10uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 8uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _QWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v2[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 16, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 8, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<IBICallPsUplinkBwEstimation>::operator=<IBICallPsUplinkBwEstimation&,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C40789AEA99);
  return v3;
}

void sub_20E1667B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40789AEA99);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmInfoReq_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212140032;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD250000u, 0);
  *(_QWORD *)result = &off_24C8D0B70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD250000u, 0);
  *(_QWORD *)result = &off_24C8D0B70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0B70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0B70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK::~ARI_IBICallPsWrmSdmInfoRsp_V2_SDK(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D0B70;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK::~ARI_IBICallPsWrmSdmInfoRsp_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 2uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 2, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E166A68(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmInfoRsp_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220528640;
}

double AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA58000u, 0);
  *(_QWORD *)v1 = &off_24C8D0BA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCA58000u, 0);
  *(_QWORD *)v1 = &off_24C8D0BA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0BA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0BA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8D0BA8;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40A86A77D5);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40A86A77D5);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x14uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x14uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 0x14uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 0x14uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v17 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 8, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  v16 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v8[1] = 0;
  *((_DWORD *)v8 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 20, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 12, (uint64_t)v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40A86A77D5);
  }
  v15 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v9[1] = 0;
  *((_DWORD *)v9 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 20, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 13, (uint64_t)v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40A86A77D5);
  }
  v14 = 0;
  v10 = (_QWORD *)operator new();
  *v10 = 0;
  v10[1] = 0;
  *((_DWORD *)v10 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 20, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 14, (uint64_t)v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40A86A77D5);
  }
  v13 = 0;
  v11 = (_QWORD *)operator new();
  *v11 = 0;
  v11[1] = 0;
  *((_DWORD *)v11 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 20, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 15, (uint64_t)v11);
  MEMORY[0x212BB9B60](v11, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E1672E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212172800;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD258000u, 0);
  *(_QWORD *)result = &off_24C8D0BE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD258000u, 0);
  *(_QWORD *)result = &off_24C8D0BE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0BE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0BE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0BE0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E16768C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220561408;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xDA58000u, 0);
  *(_QWORD *)result = &off_24C8D0C18;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xDA58000u, 0);
  *(_QWORD *)result = &off_24C8D0C18;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0C18;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0C18;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK::~ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0C18;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK::~ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 8uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v8 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 8, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  return v3;
}

void sub_20E167ACC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmLocationDBFetchInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 228950016;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA60000u, 0);
  *(_QWORD *)result = &off_24C8D0C50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xCA60000u, 0);
  *(_QWORD *)result = &off_24C8D0C50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0C50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0C50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D0C50;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E167D64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 212205568;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD260000u, 0);
  *(_QWORD *)result = &off_24C8D0C88;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD260000u, 0);
  *(_QWORD *)result = &off_24C8D0C88;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0C88;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0C88;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0C88;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E168190(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220594176;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xDA50000u, 0);
  *(_QWORD *)result = &off_24C8D0CC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xDA50000u, 0);
  *(_QWORD *)result = &off_24C8D0CC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0CC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0CC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0CC0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK::~ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK::pack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK::unpack(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1684E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallPsWrmSdmLocationDBInfoRegIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 228917248;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoELatencyReportReq_SDK::ARI_IBIQoELatencyReportReq_SDK(AriSdk::ARI_IBIQoELatencyReportReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9E0000u, 0);
  *(_QWORD *)result = &off_24C8D0CF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9E0000u, 0);
  *(_QWORD *)result = &off_24C8D0CF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoELatencyReportReq_SDK::ARI_IBIQoELatencyReportReq_SDK(AriSdk::ARI_IBIQoELatencyReportReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0CF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0CF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIQoELatencyReportReq_SDK::~ARI_IBIQoELatencyReportReq_SDK(AriSdk::ARI_IBIQoELatencyReportReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0CF8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIQoELatencyReportReq_SDK::~ARI_IBIQoELatencyReportReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIQoELatencyReportReq_SDK::pack(AriSdk::ARI_IBIQoELatencyReportReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIQoELatencyReportReq_SDK::unpack(AriSdk::ARI_IBIQoELatencyReportReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  return v3;
}

void sub_20E16891C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIQoELatencyReportReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIQoELatencyReportReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211681280;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK::ARI_IBIQoELatencyReportReqRspCb_SDK(AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1E0000u, 0);
  *(_QWORD *)result = &off_24C8D0D30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1E0000u, 0);
  *(_QWORD *)result = &off_24C8D0D30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK::ARI_IBIQoELatencyReportReqRspCb_SDK(AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0D30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0D30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK::~ARI_IBIQoELatencyReportReqRspCb_SDK(AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0D30;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK::~ARI_IBIQoELatencyReportReqRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK::pack(AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK::unpack(AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E168C84(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIQoELatencyReportReqRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220069888;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoEQueryReq_SDK::ARI_IBIQoEQueryReq_SDK(AriSdk::ARI_IBIQoEQueryReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9E8000u, 0);
  *(_QWORD *)result = &off_24C8D0D68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9E8000u, 0);
  *(_QWORD *)result = &off_24C8D0D68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoEQueryReq_SDK::ARI_IBIQoEQueryReq_SDK(AriSdk::ARI_IBIQoEQueryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0D68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0D68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIQoEQueryReq_SDK::~ARI_IBIQoEQueryReq_SDK(AriSdk::ARI_IBIQoEQueryReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0D68;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIQoEQueryReq_SDK::~ARI_IBIQoEQueryReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIQoEQueryReq_SDK::pack(AriSdk::ARI_IBIQoEQueryReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIQoEQueryReq_SDK::unpack(AriSdk::ARI_IBIQoEQueryReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1690C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIQoEQueryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIQoEQueryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211714048;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoEQueryRspCb_SDK::ARI_IBIQoEQueryRspCb_SDK(AriSdk::ARI_IBIQoEQueryRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1E8000u, 0);
  *(_QWORD *)result = &off_24C8D0DA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1E8000u, 0);
  *(_QWORD *)result = &off_24C8D0DA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoEQueryRspCb_SDK::ARI_IBIQoEQueryRspCb_SDK(AriSdk::ARI_IBIQoEQueryRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0DA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0DA0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIQoEQueryRspCb_SDK::~ARI_IBIQoEQueryRspCb_SDK(AriSdk::ARI_IBIQoEQueryRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0DA0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIQoEQueryRspCb_SDK::~ARI_IBIQoEQueryRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIQoEQueryRspCb_SDK::pack(AriSdk::ARI_IBIQoEQueryRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIQoEQueryRspCb_SDK::unpack(AriSdk::ARI_IBIQoEQueryRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E169508(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIQoEQueryRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIQoEQueryRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220102656;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoEQueryInd_SDK::ARI_IBIQoEQueryInd_SDK(AriSdk::ARI_IBIQoEQueryInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8A0000u, 0);
  *(_QWORD *)result = &off_24C8D0DD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8A0000u, 0);
  *(_QWORD *)result = &off_24C8D0DD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoEQueryInd_SDK::ARI_IBIQoEQueryInd_SDK(AriSdk::ARI_IBIQoEQueryInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0DD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0DD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIQoEQueryInd_SDK::~ARI_IBIQoEQueryInd_SDK(AriSdk::ARI_IBIQoEQueryInd_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0DD8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIQoEQueryInd_SDK::~ARI_IBIQoEQueryInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIQoEQueryInd_SDK::pack(AriSdk::ARI_IBIQoEQueryInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIQoEQueryInd_SDK::unpack(AriSdk::ARI_IBIQoEQueryInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E169864(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIQoEQueryInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBIQoEQueryInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 227147776;
}

double AriSdk::ARI_IBIQoERequestReq_SDK::ARI_IBIQoERequestReq_SDK(AriSdk::ARI_IBIQoERequestReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9D8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0E10;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9D8000u, 0);
  *(_QWORD *)v1 = &off_24C8D0E10;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBIQoERequestReq_SDK::ARI_IBIQoERequestReq_SDK(AriSdk::ARI_IBIQoERequestReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0E10;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0E10;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBIQoERequestReq_SDK::~ARI_IBIQoERequestReq_SDK(AriSdk::ARI_IBIQoERequestReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8D0E10;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIQoERequestReq_SDK::~ARI_IBIQoERequestReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIQoERequestReq_SDK::pack(AriSdk::ARI_IBIQoERequestReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 8uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIQoERequestReq_SDK::unpack(AriSdk::ARI_IBIQoERequestReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  _BYTE *v8;
  _QWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v13 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v12 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 1, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v11 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 8, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 13, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
  return v3;
}

void sub_20E169F2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIQoERequestReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIQoERequestReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 211648512;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoERequestRspCb_SDK::ARI_IBIQoERequestRspCb_SDK(AriSdk::ARI_IBIQoERequestRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1D8000u, 0);
  *(_QWORD *)result = &off_24C8D0E48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD1D8000u, 0);
  *(_QWORD *)result = &off_24C8D0E48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIQoERequestRspCb_SDK::ARI_IBIQoERequestRspCb_SDK(AriSdk::ARI_IBIQoERequestRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0E48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0E48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIQoERequestRspCb_SDK::~ARI_IBIQoERequestRspCb_SDK(AriSdk::ARI_IBIQoERequestRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D0E48;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIQoERequestRspCb_SDK::~ARI_IBIQoERequestRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIQoERequestRspCb_SDK::pack(AriSdk::ARI_IBIQoERequestRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIQoERequestRspCb_SDK::unpack(AriSdk::ARI_IBIQoERequestRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E16A2C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIQoERequestRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIQoERequestRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 220037120;
}

double AriSdk::ARI_IBISetFilterReq_SDK::ARI_IBISetFilterReq_SDK(AriSdk::ARI_IBISetFilterReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC848000u, 0);
  *(_QWORD *)v1 = &off_24C8D0E80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC848000u, 0);
  *(_QWORD *)v1 = &off_24C8D0E80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

double AriSdk::ARI_IBISetFilterReq_SDK::ARI_IBISetFilterReq_SDK(AriSdk::ARI_IBISetFilterReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0E80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D0E80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

void AriSdk::ARI_IBISetFilterReq_SDK::~ARI_IBISetFilterReq_SDK(AriSdk::ARI_IBISetFilterReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8D0E80;
  v2 = (void *)*((_QWORD *)this + 16);
  if (v2)
  {
    *((_QWORD *)this + 17) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 12);
  if (v4)
  {
    *((_QWORD *)this + 13) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISetFilterReq_SDK::~ARI_IBISetFilterReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISetFilterReq_SDK::pack(AriSdk::ARI_IBISetFilterReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
            {
              v12 = (_BYTE *)*((_QWORD *)this + 16);
              if (!v12
                || (v13 = (_BYTE *)*((_QWORD *)this + 17), v12 == v13)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, v13 - v12, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISetFilterReq_SDK::unpack(AriSdk::ARI_IBISetFilterReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  void *v10;
  char *v11;
  char *v12;
  unint64_t v13;
  size_t v14;
  void **v15;
  unint64_t v16;
  const char *v17;
  void **v18;
  void *v19;
  _BYTE *v20;
  _OWORD *v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  size_t v26;
  void **v27;
  const char *v28;
  void **v29;
  void *v30;
  unint64_t v32;
  BOOL v33;
  void *__p[2];
  char v35;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v33 = 0;
  v32 = 0xAAAAAAAAAAAAAAAALL;
  v10 = (void *)operator new[]();
  bzero(v10, 0x670uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 1648, &v33, &v32);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C80D6C1E47ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v32 >= 0x19C)
    {
      v13 = v32 / 0x19C;
      v14 = 412 * (v32 / 0x19C);
      v11 = (char *)operator new(v14);
      v12 = &v11[412 * v13];
      memcpy(v11, v10, v14);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    v15 = (void **)((char *)this + 96);
    v16 = 0xDAB7EC1DD3431B57 * ((v12 - v11) >> 2);
    if (v16 < 5)
    {
      v19 = *v15;
      if (*v15)
      {
        *((_QWORD *)this + 13) = v19;
        operator delete(v19);
        *v15 = 0;
        *((_QWORD *)this + 13) = 0;
        *((_QWORD *)this + 14) = 0;
      }
      *((_QWORD *)this + 12) = v11;
      *((_QWORD *)this + 13) = v12;
      *((_QWORD *)this + 14) = v12;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v35 >= 0)
        v18 = __p;
      else
        v18 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v17, v18, 360, (char *)this + 96, v16, 4);
      if (v35 < 0)
        operator delete(__p[0]);
      if (v11)
        operator delete(v11);
    }
    MEMORY[0x212BB9B48](v10, 0x1000C80D6C1E47ALL);
  }
  LOBYTE(__p[0]) = 0;
  v20 = (_BYTE *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v20, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
  }
  v33 = 0;
  v32 = 0xAAAAAAAAAAAAAAAALL;
  v21 = (_OWORD *)operator new[]();
  *v21 = 0u;
  v21[1] = 0u;
  *((_QWORD *)v21 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v21, 40, &v33, &v32);
  if (!(_DWORD)v3 && v33)
  {
    v22 = v32;
    if (v32 >= 4)
    {
      v26 = v32 & 0xFFFFFFFFFFFFFFFCLL;
      v23 = (char *)operator new(v32 & 0xFFFFFFFFFFFFFFFCLL);
      v25 = &v23[4 * (v22 >> 2)];
      memcpy(v23, v21, v26);
      v24 = &v23[v26];
    }
    else
    {
      v23 = 0;
      v24 = 0;
      v25 = 0;
    }
    v27 = (void **)((char *)this + 128);
    if ((unint64_t)(v24 - v23) < 0x29)
    {
      v30 = *v27;
      if (*v27)
      {
        *((_QWORD *)this + 17) = v30;
        operator delete(v30);
        *v27 = 0;
        *((_QWORD *)this + 17) = 0;
        *((_QWORD *)this + 18) = 0;
      }
      *((_QWORD *)this + 16) = v23;
      *((_QWORD *)this + 17) = v24;
      *((_QWORD *)this + 18) = v25;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v35 >= 0)
        v29 = __p;
      else
        v29 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v28, v29, 360, v27, (v24 - v23) >> 2, 10);
      if (v35 < 0)
        operator delete(__p[0]);
      if (v23)
        operator delete(v23);
    }
  }
  MEMORY[0x212BB9B48](v21, 0x1000C8052888210);
  return v3;
}

void sub_20E16ACC8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C8052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISetFilterReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISetFilterReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 210010112;
}

AriSdk::MsgBase *AriSdk::ARI_IBISetFilterRspCb_SDK::ARI_IBISetFilterRspCb_SDK(AriSdk::ARI_IBISetFilterRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD048000u, 0);
  *(_QWORD *)result = &off_24C8D0EB8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD048000u, 0);
  *(_QWORD *)result = &off_24C8D0EB8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISetFilterRspCb_SDK::ARI_IBISetFilterRspCb_SDK(AriSdk::ARI_IBISetFilterRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0EB8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D0EB8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISetFilterRspCb_SDK::~ARI_IBISetFilterRspCb_SDK(AriSdk::ARI_IBISetFilterRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D0EB8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISetFilterRspCb_SDK::~ARI_IBISetFilterRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISetFilterRspCb_SDK::pack(AriSdk::ARI_IBISetFilterRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISetFilterRspCb_SDK::unpack(AriSdk::ARI_IBISetFilterRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E16B1FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISetFilterRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISetFilterRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 218398720;
}

_QWORD *std::vector<IBICallPsPacketFilter>::__init_with_size[abi:ne180100]<IBICallPsPacketFilter*,IBICallPsPacketFilter*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(164 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 164 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E16B2D0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<IBICallPsQosRule>::__init_with_size[abi:ne180100]<IBICallPsQosRule*,IBICallPsQosRule*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(2124 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 2124 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E16B368(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<IBICallPsPacketFilter_V2>::__init_with_size[abi:ne180100]<IBICallPsPacketFilter_V2*,IBICallPsPacketFilter_V2*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(132 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 132 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E16B400(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<unsigned short>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20E16B478(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned short>::__vallocate[abi:ne180100](_QWORD *a1, uint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 < 0)
    std::vector<unsigned short>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned short>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[2 * v4];
  return result;
}

void std::vector<unsigned short>::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("vector");
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<unsigned short>>(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(2 * a2);
}

_QWORD *std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<int>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20E16B570(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<int>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    std::vector<unsigned short>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<int>>(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(4 * a2);
}

_QWORD *std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = std::vector<unsigned char>::__vallocate[abi:ne180100](result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20E16B65C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned char>::__vallocate[abi:ne180100](_QWORD *a1, size_t __sz)
{
  char *result;

  if ((__sz & 0x8000000000000000) != 0)
    std::vector<unsigned short>::__throw_length_error[abi:ne180100]();
  result = (char *)operator new(__sz);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[__sz];
  return result;
}

uint64_t ARI_IBIBool_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIBool_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICommonReturnCodes_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICommonReturnCodes_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsCellularPowerReportState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsCellularPowerReportState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivityLocationType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivityLocationType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivityStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivityStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivitySwimLocationType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivitySwimLocationType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivityType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsHealthActivityType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimConfigMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimConfigMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimConfigParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimConfigParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimRemapStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimRemapStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimSetCurrentDataSimCauseType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimSetCurrentDataSimCauseType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimSimStackMappingParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMSimSimStackMappingParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsimConfigStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsimConfigStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRat_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRat_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSlotId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSlotId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt16_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt16_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt32_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt32_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt8_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt8_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

double AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK::ARI_CsiIdcCellConfigEventIndCb_SDK(AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49808000u, 0);
  *(_QWORD *)v1 = &off_24C8D2EC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49808000u, 0);
  *(_QWORD *)v1 = &off_24C8D2EC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK::ARI_CsiIdcCellConfigEventIndCb_SDK(AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D2EC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D2EC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK::~ARI_CsiIdcCellConfigEventIndCb_SDK(AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8D2EC8;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40ABE2FFB4);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40DAFE8768);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4036509CDCLL);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK::~ARI_CsiIdcCellConfigEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK::pack(AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x2A0uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x20uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0x120uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK::unpack(AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  _OWORD *v7;
  _OWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x2A0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 672, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4036509CDCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<UtaIdcCellConfig>::operator=<UtaIdcCellConfig&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4036509CDCLL);
  }
  v11 = 0;
  v7 = (_OWORD *)operator new();
  *v7 = 0u;
  v7[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 32, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40DAFE8768);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<UtaIdcCellConfigExt>::operator=<UtaIdcCellConfigExt&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40DAFE8768);
  }
  v10 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 288, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<IBIIdcCellConfigExtCfg>::operator=<IBIIdcCellConfigExtCfg&,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C40ABE2FFB4);
  return v3;
}

void sub_20E16C07C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40ABE2FFB4);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<UtaIdcCellConfig>::operator=<UtaIdcCellConfig&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x2A0uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4036509CDCLL);
  return a1;
}

uint64_t *AriSdk::Tlv<UtaIdcCellConfigExt>::operator=<UtaIdcCellConfigExt&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;

  v4 = (_OWORD *)operator new();
  v5 = a2[1];
  *v4 = *a2;
  v4[1] = v5;
  v6 = *a1;
  *a1 = (uint64_t)v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40DAFE8768);
  return a1;
}

uint64_t *AriSdk::Tlv<IBIIdcCellConfigExtCfg>::operator=<IBIIdcCellConfigExtCfg&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x120uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40ABE2FFB4);
  return a1;
}

BOOL AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcCellConfigEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1233158144;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcControlEventReq_SDK::ARI_CsiIdcControlEventReq_SDK(AriSdk::ARI_CsiIdcControlEventReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48840000u, 0);
  *(_QWORD *)result = &off_24C8D2F00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48840000u, 0);
  *(_QWORD *)result = &off_24C8D2F00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcControlEventReq_SDK::ARI_CsiIdcControlEventReq_SDK(AriSdk::ARI_CsiIdcControlEventReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2F00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2F00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcControlEventReq_SDK::~ARI_CsiIdcControlEventReq_SDK(AriSdk::ARI_CsiIdcControlEventReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D2F00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcControlEventReq_SDK::~ARI_CsiIdcControlEventReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcControlEventReq_SDK::pack(AriSdk::ARI_CsiIdcControlEventReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcControlEventReq_SDK::unpack(AriSdk::ARI_CsiIdcControlEventReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E16C5A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcControlEventReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcControlEventReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216610304;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcControlEventRspCb_SDK::ARI_CsiIdcControlEventRspCb_SDK(AriSdk::ARI_CsiIdcControlEventRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49040000u, 0);
  *(_QWORD *)result = &off_24C8D2F38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49040000u, 0);
  *(_QWORD *)result = &off_24C8D2F38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcControlEventRspCb_SDK::ARI_CsiIdcControlEventRspCb_SDK(AriSdk::ARI_CsiIdcControlEventRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2F38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2F38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcControlEventRspCb_SDK::~ARI_CsiIdcControlEventRspCb_SDK(AriSdk::ARI_CsiIdcControlEventRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D2F38;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcControlEventRspCb_SDK::~ARI_CsiIdcControlEventRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcControlEventRspCb_SDK::pack(AriSdk::ARI_CsiIdcControlEventRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcControlEventRspCb_SDK::unpack(AriSdk::ARI_CsiIdcControlEventRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E16C8F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcControlEventRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcControlEventRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224998912;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcGetCellConfigReq_SDK::ARI_CsiIdcGetCellConfigReq_SDK(AriSdk::ARI_CsiIdcGetCellConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48808000u, 0);
  *(_QWORD *)result = &off_24C8D2F70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48808000u, 0);
  *(_QWORD *)result = &off_24C8D2F70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcGetCellConfigReq_SDK::ARI_CsiIdcGetCellConfigReq_SDK(AriSdk::ARI_CsiIdcGetCellConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2F70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2F70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcGetCellConfigReq_SDK::~ARI_CsiIdcGetCellConfigReq_SDK(AriSdk::ARI_CsiIdcGetCellConfigReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D2F70;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcGetCellConfigReq_SDK::~ARI_CsiIdcGetCellConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcGetCellConfigReq_SDK::pack(AriSdk::ARI_CsiIdcGetCellConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcGetCellConfigReq_SDK::unpack(AriSdk::ARI_CsiIdcGetCellConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E16CB74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcGetCellConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcGetCellConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216380928;
}

double AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK::ARI_CsiIdcGetCellConfigRspCb_SDK(AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49008000u, 0);
  *(_QWORD *)v1 = &off_24C8D2FA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49008000u, 0);
  *(_QWORD *)v1 = &off_24C8D2FA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK::ARI_CsiIdcGetCellConfigRspCb_SDK(AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D2FA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D2FA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK::~ARI_CsiIdcGetCellConfigRspCb_SDK(AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8D2FA8;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40ABE2FFB4);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40DAFE8768);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4036509CDCLL);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK::~ARI_CsiIdcGetCellConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK::pack(AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x2A0uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x20uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0x120uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK::unpack(AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  _OWORD *v7;
  _OWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x2A0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 672, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4036509CDCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<UtaIdcCellConfig>::operator=<UtaIdcCellConfig&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4036509CDCLL);
  }
  v11 = 0;
  v7 = (_OWORD *)operator new();
  *v7 = 0u;
  v7[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 32, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40DAFE8768);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<UtaIdcCellConfigExt>::operator=<UtaIdcCellConfigExt&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40DAFE8768);
  }
  v10 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 288, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<IBIIdcCellConfigExtCfg>::operator=<IBIIdcCellConfigExtCfg&,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C40ABE2FFB4);
  return v3;
}

void sub_20E16D190(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40ABE2FFB4);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcGetCellConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224769536;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK::ARI_CsiIdcGetUartType4StatsReq_SDK(AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48878000u, 0);
  *(_QWORD *)result = &off_24C8D2FE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48878000u, 0);
  *(_QWORD *)result = &off_24C8D2FE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK::ARI_CsiIdcGetUartType4StatsReq_SDK(AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2FE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D2FE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK::~ARI_CsiIdcGetUartType4StatsReq_SDK(AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D2FE0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK::~ARI_CsiIdcGetUartType4StatsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK::pack(AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK::unpack(AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E16D460(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcGetUartType4StatsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216839680;
}

double AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK::ARI_CsiIdcUartType4StatsRspCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49078000u, 0);
  *(_QWORD *)v1 = &off_24C8D3018;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49078000u, 0);
  *(_QWORD *)v1 = &off_24C8D3018;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK::ARI_CsiIdcUartType4StatsRspCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3018;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3018;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK::~ARI_CsiIdcUartType4StatsRspCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3018;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK::~ARI_CsiIdcUartType4StatsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK::pack(AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK::unpack(AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  __n128 __p;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v11 = 0;
  v10 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 32, &v11, &v10);
  if (!(_DWORD)v3 && v11)
  {
    v9 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v6, (uint64_t)v6 + 2 * (v10 >> 1), v10 >> 1);
    AriSdk::TlvArray<unsigned short,16ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80BDFB0063);
  return v3;
}

void sub_20E16D8DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C80BDFB0063);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned short,16ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x21)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 1, 16);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E16DA08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcUartType4StatsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225228288;
}

double AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK(AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49818000u, 0);
  *(_QWORD *)v1 = &off_24C8D3050;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49818000u, 0);
  *(_QWORD *)v1 = &off_24C8D3050;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK(AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3050;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3050;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK::~ARI_CsiIdcRTArbiterStatsEventIndCb_SDK(AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D3050;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C406A1FEB65);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK::~ARI_CsiIdcRTArbiterStatsEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK::pack(AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x28uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK::unpack(AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_OWORD *)operator new();
  *v6 = 0u;
  v6[1] = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 40, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C406A1FEB65);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<UtaIdcRTArbiterStats>::operator=<UtaIdcRTArbiterStats&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C406A1FEB65);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E16DF10(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<UtaIdcRTArbiterStats>::operator=<UtaIdcRTArbiterStats&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *a1;
  *a1 = v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C406A1FEB65);
  return a1;
}

BOOL AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTArbiterStatsEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1233223680;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK::ARI_CsiIdcRTControlWci2UartReq_SDK(AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48850000u, 0);
  *(_QWORD *)result = &off_24C8D3088;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48850000u, 0);
  *(_QWORD *)result = &off_24C8D3088;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK::ARI_CsiIdcRTControlWci2UartReq_SDK(AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3088;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3088;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK::~ARI_CsiIdcRTControlWci2UartReq_SDK(AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D3088;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK::~ARI_CsiIdcRTControlWci2UartReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK::pack(AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK::unpack(AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E16E220(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTControlWci2UartReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216675840;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK::ARI_CsiIdcRTControlWci2UartRsp_SDK(AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49050000u, 0);
  *(_QWORD *)result = &off_24C8D30C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49050000u, 0);
  *(_QWORD *)result = &off_24C8D30C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK::ARI_CsiIdcRTControlWci2UartRsp_SDK(AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D30C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D30C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK::~ARI_CsiIdcRTControlWci2UartRsp_SDK(AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D30C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK::~ARI_CsiIdcRTControlWci2UartRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK::pack(AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK::unpack(AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E16E494(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTControlWci2UartRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225064448;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK::ARI_CsiIdcRTGetArbiterStatsReq_SDK(AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48838000u, 0);
  *(_QWORD *)result = &off_24C8D30F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48838000u, 0);
  *(_QWORD *)result = &off_24C8D30F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK::ARI_CsiIdcRTGetArbiterStatsReq_SDK(AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D30F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D30F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK::~ARI_CsiIdcRTGetArbiterStatsReq_SDK(AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D30F8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK::~ARI_CsiIdcRTGetArbiterStatsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK::pack(AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK::unpack(AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E16E710(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTGetArbiterStatsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216577536;
}

double AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK::ARI_CsiIdcRTArbiterStatsRspCb_SDK(AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49038000u, 0);
  *(_QWORD *)v1 = &off_24C8D3130;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49038000u, 0);
  *(_QWORD *)v1 = &off_24C8D3130;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK::ARI_CsiIdcRTArbiterStatsRspCb_SDK(AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3130;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3130;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK::~ARI_CsiIdcRTArbiterStatsRspCb_SDK(AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D3130;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C406A1FEB65);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK::~ARI_CsiIdcRTArbiterStatsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK::pack(AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x28uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK::unpack(AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_OWORD *)operator new();
  *v6 = 0u;
  v6[1] = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 40, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C406A1FEB65);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<UtaIdcRTArbiterStats>::operator=<UtaIdcRTArbiterStats&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C406A1FEB65);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E16EC24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTArbiterStatsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224966144;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK::ARI_CsiIdcRTGetLinkQualityReportReq_SDK(AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48820000u, 0);
  *(_QWORD *)result = &off_24C8D3168;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48820000u, 0);
  *(_QWORD *)result = &off_24C8D3168;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK::ARI_CsiIdcRTGetLinkQualityReportReq_SDK(AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3168;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3168;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK::~ARI_CsiIdcRTGetLinkQualityReportReq_SDK(AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D3168;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK::~ARI_CsiIdcRTGetLinkQualityReportReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK::pack(AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK::unpack(AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E16EEC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTGetLinkQualityReportReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216479232;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK(AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49020000u, 0);
  *(_QWORD *)result = &off_24C8D31A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49020000u, 0);
  *(_QWORD *)result = &off_24C8D31A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK(AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D31A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D31A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK::~ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK(AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D31A0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403B807CB7);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK::~ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK::pack(AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0xBuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK::unpack(AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  char *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (char *)operator new();
  *(_QWORD *)v6 = 0;
  *(_DWORD *)(v6 + 7) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 11, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<UtaIdcRTLinkQReport>::operator=<UtaIdcRTLinkQReport&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403B807CB7);
  return v3;
}

void sub_20E16F2F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403B807CB7);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<UtaIdcRTLinkQReport>::operator=<UtaIdcRTLinkQReport&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_QWORD *)v4 = *(_QWORD *)a2;
  *(_DWORD *)(v4 + 7) = *(_DWORD *)(a2 + 7);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C403B807CB7);
  return a1;
}

BOOL AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTGetLinkQualityReportRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224867840;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK::ARI_CsiIdcRTGetUartActivityStatsReq_SDK(AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48860000u, 0);
  *(_QWORD *)result = &off_24C8D31D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48860000u, 0);
  *(_QWORD *)result = &off_24C8D31D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK::ARI_CsiIdcRTGetUartActivityStatsReq_SDK(AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D31D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D31D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK::~ARI_CsiIdcRTGetUartActivityStatsReq_SDK(AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D31D8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK::~ARI_CsiIdcRTGetUartActivityStatsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK::pack(AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK::unpack(AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E16F5F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTGetUartActivityStatsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216741376;
}

double AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK::ARI_CsiIdcRTUartActivityStatsRspCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49060000u, 0);
  *(_QWORD *)v1 = &off_24C8D3210;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49060000u, 0);
  *(_QWORD *)v1 = &off_24C8D3210;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK::ARI_CsiIdcRTUartActivityStatsRspCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3210;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3210;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK::~ARI_CsiIdcRTUartActivityStatsRspCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8D3210;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4000313F17);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK::~ARI_CsiIdcRTUartActivityStatsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK::pack(AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 8uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 8uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 8uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 8uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK::unpack(AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 8, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  v18 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 8, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  }
  v17 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 8, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
  }
  v16 = 0;
  v10 = (_QWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 8, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
  }
  v15 = 0;
  v11 = (_QWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 8, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4000313F17);
  }
  v14 = 0;
  v12 = (_QWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 8, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4000313F17);
  return v3;
}

void sub_20E16FF3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTUartActivityStatsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225129984;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK(AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49810000u, 0);
  *(_QWORD *)result = &off_24C8D3248;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49810000u, 0);
  *(_QWORD *)result = &off_24C8D3248;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK(AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3248;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3248;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK::~ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK(AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3248;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403B807CB7);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK::~ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK::pack(AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0xBuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK::unpack(AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  char *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (char *)operator new();
  *(_QWORD *)v6 = 0;
  *(_DWORD *)(v6 + 7) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 11, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<UtaIdcRTLinkQReport>::operator=<UtaIdcRTLinkQReport&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403B807CB7);
  return v3;
}

void sub_20E1703BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403B807CB7);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTLinkQualityReportEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1233190912;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48830000u, 0);
  *(_QWORD *)result = &off_24C8D3280;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48830000u, 0);
  *(_QWORD *)result = &off_24C8D3280;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3280;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3280;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK::~ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3280;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK::~ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK::pack(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK::unpack(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_WORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E17075C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216544768;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49030000u, 0);
  *(_QWORD *)result = &off_24C8D32B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49030000u, 0);
  *(_QWORD *)result = &off_24C8D32B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D32B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D32B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK::~ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D32B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK::~ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK::pack(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK::unpack(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E170ABC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTSetArbiterStatsConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224933376;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK(AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48818000u, 0);
  *(_QWORD *)result = &off_24C8D32F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48818000u, 0);
  *(_QWORD *)result = &off_24C8D32F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK(AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D32F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D32F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK::~ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK(AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D32F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4054111E92);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK::~ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK::pack(AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK::unpack(AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_QWORD *)v6 = *(_QWORD *)v5;
    *(_DWORD *)(v6 + 8) = v5[2];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4054111E92);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4054111E92);
  return v3;
}

void sub_20E170E58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4054111E92);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTSetLinkQualityReportConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216446464;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK(AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49018000u, 0);
  *(_QWORD *)result = &off_24C8D3328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49018000u, 0);
  *(_QWORD *)result = &off_24C8D3328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK(AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK::~ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK(AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3328;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK::~ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK::pack(AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK::unpack(AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1711C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTSetLinkQualityReportRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224835072;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK::ARI_CsiIdcRTSetScanFreqReq_SDK(AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48828000u, 0);
  *(_QWORD *)result = &off_24C8D3360;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48828000u, 0);
  *(_QWORD *)result = &off_24C8D3360;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK::ARI_CsiIdcRTSetScanFreqReq_SDK(AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3360;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3360;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK::~ARI_CsiIdcRTSetScanFreqReq_SDK(AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3360;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40CDCDE48DLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK::~ARI_CsiIdcRTSetScanFreqReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK::pack(AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x60uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK::unpack(AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;

  v13 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v13, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v13;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v12 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 96, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v6 = (_OWORD *)operator new();
    v7 = v5[3];
    v6[2] = v5[2];
    v6[3] = v7;
    v8 = v5[5];
    v6[4] = v5[4];
    v6[5] = v8;
    v9 = v5[1];
    *v6 = *v5;
    v6[1] = v9;
    v10 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C40CDCDE48DLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40CDCDE48DLL);
  return v3;
}

void sub_20E171574(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40CDCDE48DLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTSetScanFreqReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216512000;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK::ARI_CsiIdcRTSetScanFreqRspCb_SDK(AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49028000u, 0);
  *(_QWORD *)result = &off_24C8D3398;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49028000u, 0);
  *(_QWORD *)result = &off_24C8D3398;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK::ARI_CsiIdcRTSetScanFreqRspCb_SDK(AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3398;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3398;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK::~ARI_CsiIdcRTSetScanFreqRspCb_SDK(AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3398;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK::~ARI_CsiIdcRTSetScanFreqRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK::pack(AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK::unpack(AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1718E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTSetScanFreqRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224900608;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48858000u, 0);
  *(_QWORD *)result = &off_24C8D33D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48858000u, 0);
  *(_QWORD *)result = &off_24C8D33D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D33D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D33D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK::~ARI_CsiIdcRTUartActivityStatsConfigReq_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D33D0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK::~ARI_CsiIdcRTUartActivityStatsConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK::pack(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK::unpack(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E171C3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216708608;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49058000u, 0);
  *(_QWORD *)result = &off_24C8D3408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49058000u, 0);
  *(_QWORD *)result = &off_24C8D3408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3408;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK::~ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3408;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK::~ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK::pack(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK::unpack(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E171F98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTUartActivityStatsConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225097216;
}

double AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49820000u, 0);
  *(_QWORD *)v1 = &off_24C8D3440;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49820000u, 0);
  *(_QWORD *)v1 = &off_24C8D3440;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3440;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3440;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK::~ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK(AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8D3440;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4000313F17);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK::~ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK::pack(AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 8uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 8uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 8uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 8uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK::unpack(AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 8, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  v18 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 8, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  }
  v17 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 8, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
  }
  v16 = 0;
  v10 = (_QWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 8, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
  }
  v15 = 0;
  v11 = (_QWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 8, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4000313F17);
  }
  v14 = 0;
  v12 = (_QWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 8, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4000313F17);
  return v3;
}

void sub_20E1728E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcRTUartActivityStatsEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1233256448;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK::ARI_CsiIdcSetGnssStatusReq_SDK(AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48898000u, 0);
  *(_QWORD *)result = &off_24C8D3478;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48898000u, 0);
  *(_QWORD *)result = &off_24C8D3478;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK::ARI_CsiIdcSetGnssStatusReq_SDK(AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3478;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3478;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK::~ARI_CsiIdcSetGnssStatusReq_SDK(AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3478;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK::~ARI_CsiIdcSetGnssStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK::pack(AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK::unpack(AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E172CC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetGnssStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216970752;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK::ARI_CsiIdcSetGnssStatusRspCb_SDK(AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49098000u, 0);
  *(_QWORD *)result = &off_24C8D34B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49098000u, 0);
  *(_QWORD *)result = &off_24C8D34B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK::ARI_CsiIdcSetGnssStatusRspCb_SDK(AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D34B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D34B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK::~ARI_CsiIdcSetGnssStatusRspCb_SDK(AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D34B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK::~ARI_CsiIdcSetGnssStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK::pack(AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK::unpack(AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17301C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetGnssStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225359360;
}

double AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK::ARI_CsiIdcSetLaaConfigReq_SDK(AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x48888000u, 0);
  *(_QWORD *)v1 = &off_24C8D34E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x48888000u, 0);
  *(_QWORD *)v1 = &off_24C8D34E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK::ARI_CsiIdcSetLaaConfigReq_SDK(AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D34E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D34E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK::~ARI_CsiIdcSetLaaConfigReq_SDK(AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8D34E8;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK::~ARI_CsiIdcSetLaaConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK::pack(AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 2uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK::unpack(AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *v8;
  _WORD *v9;
  _WORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v15 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v14 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v13 = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 2, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  v12 = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 2, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E1737CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetLaaConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216905216;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK::ARI_CsiIdcSetLaaConfigRspCb_SDK(AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49088000u, 0);
  *(_QWORD *)result = &off_24C8D3520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49088000u, 0);
  *(_QWORD *)result = &off_24C8D3520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK::ARI_CsiIdcSetLaaConfigRspCb_SDK(AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3520;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK::~ARI_CsiIdcSetLaaConfigRspCb_SDK(AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3520;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK::~ARI_CsiIdcSetLaaConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK::pack(AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK::unpack(AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E173B70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetLaaConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225293824;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRTConfigReq_SDK::ARI_CsiIdcSetRTConfigReq_SDK(AriSdk::ARI_CsiIdcSetRTConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48810000u, 0);
  *(_QWORD *)result = &off_24C8D3558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48810000u, 0);
  *(_QWORD *)result = &off_24C8D3558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRTConfigReq_SDK::ARI_CsiIdcSetRTConfigReq_SDK(AriSdk::ARI_CsiIdcSetRTConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetRTConfigReq_SDK::~ARI_CsiIdcSetRTConfigReq_SDK(AriSdk::ARI_CsiIdcSetRTConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3558;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40249A30EDLL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40C36A4E17);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetRTConfigReq_SDK::~ARI_CsiIdcSetRTConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetRTConfigReq_SDK::pack(AriSdk::ARI_CsiIdcSetRTConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x188uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetRTConfigReq_SDK::unpack(AriSdk::ARI_CsiIdcSetRTConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  void *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 20, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40C36A4E17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_DWORD *)(v6 + 16) = v5[4];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40C36A4E17);
    MEMORY[0x212BB9B60](v5, 0x1000C40C36A4E17);
  }
  v12 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v8[20] = 0u;
  v8[21] = 0u;
  v8[22] = 0u;
  v8[23] = 0u;
  *((_QWORD *)v8 + 48) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 392, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (void *)operator new();
    memcpy(v9, v8, 0x188uLL);
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C40249A30EDLL);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C40249A30EDLL);
  return v3;
}

void sub_20E17405C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40249A30EDLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetRTConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetRTConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216413696;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK::ARI_CsiIdcSetRTConfigRspCb_SDK(AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49010000u, 0);
  *(_QWORD *)result = &off_24C8D3590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49010000u, 0);
  *(_QWORD *)result = &off_24C8D3590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK::ARI_CsiIdcSetRTConfigRspCb_SDK(AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3590;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK::~ARI_CsiIdcSetRTConfigRspCb_SDK(AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3590;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK::~ARI_CsiIdcSetRTConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK::pack(AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK::unpack(AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1743D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetRTConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1224802304;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRadio1Req_SDK::ARI_CsiIdcSetRadio1Req_SDK(AriSdk::ARI_CsiIdcSetRadio1Req_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48890000u, 0);
  *(_QWORD *)result = &off_24C8D35C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48890000u, 0);
  *(_QWORD *)result = &off_24C8D35C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRadio1Req_SDK::ARI_CsiIdcSetRadio1Req_SDK(AriSdk::ARI_CsiIdcSetRadio1Req_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D35C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D35C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetRadio1Req_SDK::~ARI_CsiIdcSetRadio1Req_SDK(AriSdk::ARI_CsiIdcSetRadio1Req_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D35C8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetRadio1Req_SDK::~ARI_CsiIdcSetRadio1Req_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetRadio1Req_SDK::pack(AriSdk::ARI_CsiIdcSetRadio1Req_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetRadio1Req_SDK::unpack(AriSdk::ARI_CsiIdcSetRadio1Req_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17475C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetRadio1Req_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetRadio1Req_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216937984;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK::ARI_CsiIdcSetRadio1RspCb_SDK(AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49090000u, 0);
  *(_QWORD *)result = &off_24C8D3600;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49090000u, 0);
  *(_QWORD *)result = &off_24C8D3600;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK::ARI_CsiIdcSetRadio1RspCb_SDK(AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3600;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3600;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK::~ARI_CsiIdcSetRadio1RspCb_SDK(AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3600;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK::~ARI_CsiIdcSetRadio1RspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK::pack(AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK::unpack(AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E174AAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetRadio1RspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225326592;
}

double AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK::ARI_CsiIdcSetTxPowerLimitReq_SDK(AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x48880000u, 0);
  *(_QWORD *)v1 = &off_24C8D3638;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x48880000u, 0);
  *(_QWORD *)v1 = &off_24C8D3638;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK::ARI_CsiIdcSetTxPowerLimitReq_SDK(AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3638;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D3638;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK::~ARI_CsiIdcSetTxPowerLimitReq_SDK(AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8D3638;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK::~ARI_CsiIdcSetTxPowerLimitReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK::pack(AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK::unpack(AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v18 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v17 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v16 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v15 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v14 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E175314(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetTxPowerLimitReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216872448;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK::ARI_CsiIdcSetTxPowerLimitRspCb_SDK(AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49080000u, 0);
  *(_QWORD *)result = &off_24C8D3670;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49080000u, 0);
  *(_QWORD *)result = &off_24C8D3670;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK::ARI_CsiIdcSetTxPowerLimitRspCb_SDK(AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3670;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3670;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK::~ARI_CsiIdcSetTxPowerLimitRspCb_SDK(AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3670;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK::~ARI_CsiIdcSetTxPowerLimitRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK::pack(AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK::unpack(AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1756A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetTxPowerLimitRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225261056;
}

double AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK::ARI_CsiIdcSetWifiStatusReq_SDK(AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x48868000u, 0);
  *(_QWORD *)v1 = &off_24C8D36A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x48868000u, 0);
  *(_QWORD *)v1 = &off_24C8D36A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK::ARI_CsiIdcSetWifiStatusReq_SDK(AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D36A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D36A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK::~ARI_CsiIdcSetWifiStatusReq_SDK(AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8D36A8;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK::~ARI_CsiIdcSetWifiStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK::pack(AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK::unpack(AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E175BEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetWifiStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216774144;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK::ARI_CsiIdcSetWifiStatusRspCb_SDK(AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49068000u, 0);
  *(_QWORD *)result = &off_24C8D36E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49068000u, 0);
  *(_QWORD *)result = &off_24C8D36E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK::ARI_CsiIdcSetWifiStatusRspCb_SDK(AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D36E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D36E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK::~ARI_CsiIdcSetWifiStatusRspCb_SDK(AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D36E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK::~ARI_CsiIdcSetWifiStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK::pack(AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK::unpack(AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E175F58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcSetWifiStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225162752;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcTestModeCmdReq_SDK::ARI_CsiIdcTestModeCmdReq_SDK(AriSdk::ARI_CsiIdcTestModeCmdReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48848000u, 0);
  *(_QWORD *)result = &off_24C8D3718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48848000u, 0);
  *(_QWORD *)result = &off_24C8D3718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcTestModeCmdReq_SDK::ARI_CsiIdcTestModeCmdReq_SDK(AriSdk::ARI_CsiIdcTestModeCmdReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3718;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcTestModeCmdReq_SDK::~ARI_CsiIdcTestModeCmdReq_SDK(AriSdk::ARI_CsiIdcTestModeCmdReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3718;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4027586B93);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcTestModeCmdReq_SDK::~ARI_CsiIdcTestModeCmdReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcTestModeCmdReq_SDK::pack(AriSdk::ARI_CsiIdcTestModeCmdReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x1CuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcTestModeCmdReq_SDK::unpack(AriSdk::ARI_CsiIdcTestModeCmdReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = operator new();
  *(_QWORD *)(v5 + 8) = 0;
  *(_QWORD *)(v5 + 16) = 0;
  *(_QWORD *)v5 = 0;
  *(_DWORD *)(v5 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, (void *)v5, 28, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    *(_OWORD *)((char *)v6 + 12) = *(_OWORD *)(v5 + 12);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4027586B93);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4027586B93);
  return v3;
}

void sub_20E1762FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4027586B93);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcTestModeCmdReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcTestModeCmdReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216643072;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK::ARI_CsiIdcTestModeCmdRsp_SDK(AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49048000u, 0);
  *(_QWORD *)result = &off_24C8D3750;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49048000u, 0);
  *(_QWORD *)result = &off_24C8D3750;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK::ARI_CsiIdcTestModeCmdRsp_SDK(AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3750;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3750;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK::~ARI_CsiIdcTestModeCmdRsp_SDK(AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3750;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK::~ARI_CsiIdcTestModeCmdRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK::pack(AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK::unpack(AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E176784(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcTestModeCmdRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225031680;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK::ARI_CsiIdcUartType4StatsConfigReq_SDK(AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48870000u, 0);
  *(_QWORD *)result = &off_24C8D3788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48870000u, 0);
  *(_QWORD *)result = &off_24C8D3788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK::ARI_CsiIdcUartType4StatsConfigReq_SDK(AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK::~ARI_CsiIdcUartType4StatsConfigReq_SDK(AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3788;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK::~ARI_CsiIdcUartType4StatsConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK::pack(AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK::unpack(AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E176AF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcUartType4StatsConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1216806912;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK::ARI_CsiIdcUartType4StatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49070000u, 0);
  *(_QWORD *)result = &off_24C8D37C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49070000u, 0);
  *(_QWORD *)result = &off_24C8D37C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK::ARI_CsiIdcUartType4StatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D37C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D37C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK::~ARI_CsiIdcUartType4StatsConfigRspCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D37C0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK::~ARI_CsiIdcUartType4StatsConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK::pack(AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK::unpack(AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E176E50(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcUartType4StatsConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225195520;
}

double AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK::ARI_CsiIdcUartType4StatsEventIndCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49828000u, 0);
  *(_QWORD *)v1 = &off_24C8D37F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x49828000u, 0);
  *(_QWORD *)v1 = &off_24C8D37F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK::ARI_CsiIdcUartType4StatsEventIndCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D37F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D37F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK::~ARI_CsiIdcUartType4StatsEventIndCb_SDK(AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D37F8;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK::~ARI_CsiIdcUartType4StatsEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK::pack(AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK::unpack(AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  __n128 __p;
  uint64_t v9;
  unint64_t v10;
  BOOL v11;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v11 = 0;
  v10 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 32, &v11, &v10);
  if (!(_DWORD)v3 && v11)
  {
    v9 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v6, (uint64_t)v6 + 2 * (v10 >> 1), v10 >> 1);
    AriSdk::TlvArray<unsigned short,16ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80BDFB0063);
  return v3;
}

void sub_20E1772D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C80BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIdcUartType4StatsEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1233289216;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK::ARI_UtaIdcCellConfigEventIndCb_SDK(AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49830000u, 0);
  *(_QWORD *)result = &off_24C8D3830;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49830000u, 0);
  *(_QWORD *)result = &off_24C8D3830;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK::ARI_UtaIdcCellConfigEventIndCb_SDK(AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3830;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3830;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK::~ARI_UtaIdcCellConfigEventIndCb_SDK(AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3830;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408F14E072);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK::~ARI_UtaIdcCellConfigEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK::pack(AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x2A0uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK::unpack(AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x2A0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 672, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<t_s_UtaIdcCellConfig>::operator=<t_s_UtaIdcCellConfig&,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C408F14E072);
  return v3;
}

void sub_20E177748(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408F14E072);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<t_s_UtaIdcCellConfig>::operator=<t_s_UtaIdcCellConfig&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x2A0uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C408F14E072);
  return a1;
}

BOOL AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcCellConfigEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1233321984;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigEventReq_SDK::ARI_UtaIdcConfigEventReq_SDK(AriSdk::ARI_UtaIdcConfigEventReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488A8000u, 0);
  *(_QWORD *)result = &off_24C8D3868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488A8000u, 0);
  *(_QWORD *)result = &off_24C8D3868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigEventReq_SDK::ARI_UtaIdcConfigEventReq_SDK(AriSdk::ARI_UtaIdcConfigEventReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigEventReq_SDK::~ARI_UtaIdcConfigEventReq_SDK(AriSdk::ARI_UtaIdcConfigEventReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3868;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigEventReq_SDK::~ARI_UtaIdcConfigEventReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigEventReq_SDK::pack(AriSdk::ARI_UtaIdcConfigEventReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigEventReq_SDK::unpack(AriSdk::ARI_UtaIdcConfigEventReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return v3;
}

void sub_20E177B64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigEventReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigEventReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217036288;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigEventRspCb_SDK::ARI_UtaIdcConfigEventRspCb_SDK(AriSdk::ARI_UtaIdcConfigEventRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490A8000u, 0);
  *(_QWORD *)result = &off_24C8D38A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490A8000u, 0);
  *(_QWORD *)result = &off_24C8D38A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigEventRspCb_SDK::ARI_UtaIdcConfigEventRspCb_SDK(AriSdk::ARI_UtaIdcConfigEventRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D38A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D38A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigEventRspCb_SDK::~ARI_UtaIdcConfigEventRspCb_SDK(AriSdk::ARI_UtaIdcConfigEventRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D38A0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigEventRspCb_SDK::~ARI_UtaIdcConfigEventRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigEventRspCb_SDK::pack(AriSdk::ARI_UtaIdcConfigEventRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigEventRspCb_SDK::unpack(AriSdk::ARI_UtaIdcConfigEventRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E177ED0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigEventRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigEventRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225424896;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK::ARI_UtaIdcConfigMiscParamReq_SDK(AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488F8000u, 0);
  *(_QWORD *)result = &off_24C8D38D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488F8000u, 0);
  *(_QWORD *)result = &off_24C8D38D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK::ARI_UtaIdcConfigMiscParamReq_SDK(AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D38D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D38D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK::~ARI_UtaIdcConfigMiscParamReq_SDK(AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D38D8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK::~ARI_UtaIdcConfigMiscParamReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK::pack(AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK::unpack(AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E178264(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigMiscParamReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217363968;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK::ARI_UtaIdcConfigMiscParamRspCb_SDK(AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490F8000u, 0);
  *(_QWORD *)result = &off_24C8D3910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490F8000u, 0);
  *(_QWORD *)result = &off_24C8D3910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK::ARI_UtaIdcConfigMiscParamRspCb_SDK(AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3910;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK::~ARI_UtaIdcConfigMiscParamRspCb_SDK(AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3910;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK::~ARI_UtaIdcConfigMiscParamRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK::pack(AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK::unpack(AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1785C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigMiscParamRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225752576;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK::ARI_UtaIdcConfigMiscParamReqV2_SDK(AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489A8000u, 0);
  *(_QWORD *)result = &off_24C8D3948;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489A8000u, 0);
  *(_QWORD *)result = &off_24C8D3948;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK::ARI_UtaIdcConfigMiscParamReqV2_SDK(AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3948;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3948;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK::~ARI_UtaIdcConfigMiscParamReqV2_SDK(AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3948;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK::~ARI_UtaIdcConfigMiscParamReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK::pack(AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK::unpack(AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return v3;
}

void sub_20E178954(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigMiscParamReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1218084864;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK::ARI_UtaIdcConfigMiscParamRspCbV2_SDK(AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491A8000u, 0);
  *(_QWORD *)result = &off_24C8D3980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491A8000u, 0);
  *(_QWORD *)result = &off_24C8D3980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK::ARI_UtaIdcConfigMiscParamRspCbV2_SDK(AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3980;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK::~ARI_UtaIdcConfigMiscParamRspCbV2_SDK(AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3980;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK::~ARI_UtaIdcConfigMiscParamRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E178CC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigMiscParamRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226473472;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK::ARI_UtaIdcConfigTxActParamReq_SDK(AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48900000u, 0);
  *(_QWORD *)result = &off_24C8D39B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48900000u, 0);
  *(_QWORD *)result = &off_24C8D39B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK::ARI_UtaIdcConfigTxActParamReq_SDK(AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D39B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D39B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK::~ARI_UtaIdcConfigTxActParamReq_SDK(AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D39B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40CBA68D63);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK::~ARI_UtaIdcConfigTxActParamReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK::pack(AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK::unpack(AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_QWORD *)v6 = *(_QWORD *)v5;
    *(_DWORD *)(v6 + 8) = v5[2];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40CBA68D63);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40CBA68D63);
  return v3;
}

void sub_20E179058(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40CBA68D63);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigTxActParamReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217396736;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK::ARI_UtaIdcConfigTxActParamRspCb_SDK(AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49100000u, 0);
  *(_QWORD *)result = &off_24C8D39F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49100000u, 0);
  *(_QWORD *)result = &off_24C8D39F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK::ARI_UtaIdcConfigTxActParamRspCb_SDK(AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D39F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D39F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK::~ARI_UtaIdcConfigTxActParamRspCb_SDK(AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D39F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK::~ARI_UtaIdcConfigTxActParamRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK::pack(AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK::unpack(AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1793B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcConfigTxActParamRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225785344;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetCellConfigReq_SDK::ARI_UtaIdcGetCellConfigReq_SDK(AriSdk::ARI_UtaIdcGetCellConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488A0000u, 0);
  *(_QWORD *)result = &off_24C8D3A28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488A0000u, 0);
  *(_QWORD *)result = &off_24C8D3A28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetCellConfigReq_SDK::ARI_UtaIdcGetCellConfigReq_SDK(AriSdk::ARI_UtaIdcGetCellConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3A28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3A28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcGetCellConfigReq_SDK::~ARI_UtaIdcGetCellConfigReq_SDK(AriSdk::ARI_UtaIdcGetCellConfigReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D3A28;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcGetCellConfigReq_SDK::~ARI_UtaIdcGetCellConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcGetCellConfigReq_SDK::pack(AriSdk::ARI_UtaIdcGetCellConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcGetCellConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcGetCellConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E179634(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcGetCellConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcGetCellConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217003520;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK::ARI_UtaIdcGetCellConfigRspCb_SDK(AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490A0000u, 0);
  *(_QWORD *)result = &off_24C8D3A60;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490A0000u, 0);
  *(_QWORD *)result = &off_24C8D3A60;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK::ARI_UtaIdcGetCellConfigRspCb_SDK(AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3A60;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3A60;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK::~ARI_UtaIdcGetCellConfigRspCb_SDK(AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3A60;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408F14E072);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK::~ARI_UtaIdcGetCellConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x2A0uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x2A0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 672, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<t_s_UtaIdcCellConfig>::operator=<t_s_UtaIdcCellConfig&,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C408F14E072);
  return v3;
}

void sub_20E179A64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408F14E072);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcGetCellConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225392128;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK::ARI_UtaIdcGetLaaMeasInfoReq_SDK(AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488B0000u, 0);
  *(_QWORD *)result = &off_24C8D3A98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488B0000u, 0);
  *(_QWORD *)result = &off_24C8D3A98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK::ARI_UtaIdcGetLaaMeasInfoReq_SDK(AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3A98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3A98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK::~ARI_UtaIdcGetLaaMeasInfoReq_SDK(AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D3A98;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK::~ARI_UtaIdcGetLaaMeasInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK::pack(AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK::unpack(AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E179CF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcGetLaaMeasInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217069056;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK(AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490B0000u, 0);
  *(_QWORD *)result = &off_24C8D3AD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490B0000u, 0);
  *(_QWORD *)result = &off_24C8D3AD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK(AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3AD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3AD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK::~ARI_UtaIdcGetLaaMeasInfoRspCb_SDK(AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3AD0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK::~ARI_UtaIdcGetLaaMeasInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK::pack(AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK::unpack(AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E17A124(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcGetLaaMeasInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225457664;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK(AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49838000u, 0);
  *(_QWORD *)result = &off_24C8D3B08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49838000u, 0);
  *(_QWORD *)result = &off_24C8D3B08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK(AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3B08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3B08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK::~ARI_UtaIdcLaaMeasInfoEventIndCb_SDK(AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D3B08;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK::~ARI_UtaIdcLaaMeasInfoEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK::pack(AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK::unpack(AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E17A568(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcLaaMeasInfoEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1233354752;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK::ARI_UtaIdcRTSetScanFreqReq_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488D8000u, 0);
  *(_QWORD *)result = &off_24C8D3B40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488D8000u, 0);
  *(_QWORD *)result = &off_24C8D3B40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK::ARI_UtaIdcRTSetScanFreqReq_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3B40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3B40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK::~ARI_UtaIdcRTSetScanFreqReq_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3B40;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E349CAELL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK::~ARI_UtaIdcRTSetScanFreqReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK::pack(AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x84uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK::unpack(AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_DWORD *)(v5 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, (void *)v5, 132, &v13, 0);
  if (!(_DWORD)v3 && v13)
  {
    v6 = operator new();
    v7 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(v6 + 96) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(v6 + 112) = v7;
    *(_DWORD *)(v6 + 128) = *(_DWORD *)(v5 + 128);
    v8 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v6 + 48) = v8;
    v9 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v6 + 64) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v6 + 80) = v9;
    v10 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_OWORD *)(v6 + 16) = v10;
    v11 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C403E349CAELL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C403E349CAELL);
  return v3;
}

void sub_20E17A938(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E349CAELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcRTSetScanFreqReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217232896;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK::ARI_UtaIdcRTSetScanFreqRspCb_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490D8000u, 0);
  *(_QWORD *)result = &off_24C8D3B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490D8000u, 0);
  *(_QWORD *)result = &off_24C8D3B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK::ARI_UtaIdcRTSetScanFreqRspCb_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK::~ARI_UtaIdcRTSetScanFreqRspCb_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3B78;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK::~ARI_UtaIdcRTSetScanFreqRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK::pack(AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK::unpack(AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17ACA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcRTSetScanFreqRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225621504;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK::ARI_UtaIdcRTSetScanFreqReqV2_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48958000u, 0);
  *(_QWORD *)result = &off_24C8D3BB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48958000u, 0);
  *(_QWORD *)result = &off_24C8D3BB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK::ARI_UtaIdcRTSetScanFreqReqV2_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3BB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3BB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK::~ARI_UtaIdcRTSetScanFreqReqV2_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3BB0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40B7ACFD96);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK::~ARI_UtaIdcRTSetScanFreqReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK::pack(AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xC4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK::unpack(AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_OWORD *)(v5 + 128) = 0u;
  *(_OWORD *)(v5 + 144) = 0u;
  *(_OWORD *)(v5 + 160) = 0u;
  *(_OWORD *)(v5 + 176) = 0u;
  *(_DWORD *)(v5 + 192) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, (void *)v5, 196, &v15, 0);
  if (!(_DWORD)v3 && v15)
  {
    v6 = operator new();
    v7 = *(_OWORD *)(v5 + 176);
    *(_OWORD *)(v6 + 160) = *(_OWORD *)(v5 + 160);
    *(_OWORD *)(v6 + 176) = v7;
    *(_DWORD *)(v6 + 192) = *(_DWORD *)(v5 + 192);
    v8 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(v6 + 96) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(v6 + 112) = v8;
    v9 = *(_OWORD *)(v5 + 144);
    *(_OWORD *)(v6 + 128) = *(_OWORD *)(v5 + 128);
    *(_OWORD *)(v6 + 144) = v9;
    v10 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v6 + 48) = v10;
    v11 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v6 + 64) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v6 + 80) = v11;
    v12 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_OWORD *)(v6 + 16) = v12;
    v13 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C40B7ACFD96);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40B7ACFD96);
  return v3;
}

void sub_20E17B084(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40B7ACFD96);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcRTSetScanFreqReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217757184;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49158000u, 0);
  *(_QWORD *)result = &off_24C8D3BE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49158000u, 0);
  *(_QWORD *)result = &off_24C8D3BE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3BE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3BE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK::~ARI_UtaIdcRTSetScanFreqRspCbV2_SDK(AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3BE8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK::~ARI_UtaIdcRTSetScanFreqRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17B3F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcRTSetScanFreqRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226145792;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48928000u, 0);
  *(_QWORD *)result = &off_24C8D3C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48928000u, 0);
  *(_QWORD *)result = &off_24C8D3C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3C20;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4021477895);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x410uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x410uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1040, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x410uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4021477895);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4021477895);
  return v3;
}

void sub_20E17B78C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4021477895);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217560576;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49128000u, 0);
  *(_QWORD *)result = &off_24C8D3C58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49128000u, 0);
  *(_QWORD *)result = &off_24C8D3C58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3C58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3C58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3C58;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17BAF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225949184;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48980000u, 0);
  *(_QWORD *)result = &off_24C8D3C90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48980000u, 0);
  *(_QWORD *)result = &off_24C8D3C90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3C90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3C90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3C90;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40FB7BADD8);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x820uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x820uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2080, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x820uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40FB7BADD8);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40FB7BADD8);
  return v3;
}

void sub_20E17BE8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40FB7BADD8);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217921024;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49180000u, 0);
  *(_QWORD *)result = &off_24C8D3CC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49180000u, 0);
  *(_QWORD *)result = &off_24C8D3CC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3CC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3CC8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3CC8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17C1EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226309632;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489B0000u, 0);
  *(_QWORD *)result = &off_24C8D3D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489B0000u, 0);
  *(_QWORD *)result = &off_24C8D3D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3D00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4057AD9B95);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK::pack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xA28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK::unpack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0xA28uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2600, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0xA28uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4057AD9B95);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4057AD9B95);
  return v3;
}

void sub_20E17C57C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4057AD9B95);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigReqV3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1218117632;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491B0000u, 0);
  *(_QWORD *)result = &off_24C8D3D38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491B0000u, 0);
  *(_QWORD *)result = &off_24C8D3D38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3D38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3D38;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3D38;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK::~ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK::pack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK::unpack(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17C8DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCamAntBlockPwrLmtConfigRspCbV3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226506240;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK::ARI_UtaIdcSetCameraStatusReq_SDK(AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48908000u, 0);
  *(_QWORD *)result = &off_24C8D3D70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48908000u, 0);
  *(_QWORD *)result = &off_24C8D3D70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK::ARI_UtaIdcSetCameraStatusReq_SDK(AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3D70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3D70;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK::~ARI_UtaIdcSetCameraStatusReq_SDK(AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3D70;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK::~ARI_UtaIdcSetCameraStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK::pack(AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK::unpack(AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return v3;
}

void sub_20E17CC6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCameraStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217429504;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK::ARI_UtaIdcSetCameraStatusRspCb_SDK(AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49108000u, 0);
  *(_QWORD *)result = &off_24C8D3DA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49108000u, 0);
  *(_QWORD *)result = &off_24C8D3DA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK::ARI_UtaIdcSetCameraStatusRspCb_SDK(AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3DA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3DA8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK::~ARI_UtaIdcSetCameraStatusRspCb_SDK(AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3DA8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK::~ARI_UtaIdcSetCameraStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17CFD8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCameraStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225818112;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK::ARI_UtaIdcSetCameraStatusReqV2_SDK(AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489B8000u, 0);
  *(_QWORD *)result = &off_24C8D3DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489B8000u, 0);
  *(_QWORD *)result = &off_24C8D3DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK::ARI_UtaIdcSetCameraStatusReqV2_SDK(AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK::~ARI_UtaIdcSetCameraStatusReqV2_SDK(AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3DE0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK::~ARI_UtaIdcSetCameraStatusReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return v3;
}

void sub_20E17D36C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCameraStatusReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1218150400;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK::ARI_UtaIdcSetCameraStatusRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491B8000u, 0);
  *(_QWORD *)result = &off_24C8D3E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491B8000u, 0);
  *(_QWORD *)result = &off_24C8D3E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK::ARI_UtaIdcSetCameraStatusRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK::~ARI_UtaIdcSetCameraStatusRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3E18;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK::~ARI_UtaIdcSetCameraStatusRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17D6D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCameraStatusRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226539008;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48988000u, 0);
  *(_QWORD *)result = &off_24C8D3E50;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48988000u, 0);
  *(_QWORD *)result = &off_24C8D3E50;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3E50;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3E50;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK::~ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3E50;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40742AE62DLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK::~ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xE10uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0xE10uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 3600, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0xE10uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40742AE62DLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40742AE62DLL);
  return v3;
}

void sub_20E17DA74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40742AE62DLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217953792;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49188000u, 0);
  *(_QWORD *)result = &off_24C8D3E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49188000u, 0);
  *(_QWORD *)result = &off_24C8D3E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK::~ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3E88;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK::~ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17DDE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCellImdGnssMitigationConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226342400;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48938000u, 0);
  *(_QWORD *)result = &off_24C8D3EC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48938000u, 0);
  *(_QWORD *)result = &off_24C8D3EC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3EC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3EC0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3EC0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40CFFF636DLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x490uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x490uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1168, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x490uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40CFFF636DLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40CFFF636DLL);
  return v3;
}

void sub_20E17E17C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40CFFF636DLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217626112;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49138000u, 0);
  *(_QWORD *)result = &off_24C8D3EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49138000u, 0);
  *(_QWORD *)result = &off_24C8D3EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3EF8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17E4E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCnvAntBlockPwrLmtConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226014720;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488E8000u, 0);
  *(_QWORD *)result = &off_24C8D3F30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488E8000u, 0);
  *(_QWORD *)result = &off_24C8D3F30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3F30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3F30;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK::~ARI_UtaIdcSetCriticalCarrierConfigReq_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3F30;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4021716A34);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK::~ARI_UtaIdcSetCriticalCarrierConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x38uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;

  v11 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v11, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v11;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_QWORD *)(v5 + 48) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, (void *)v5, 56, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v6 = operator new();
    v7 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_OWORD *)(v6 + 16) = v7;
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v5 + 32);
    *(_QWORD *)(v6 + 48) = *(_QWORD *)(v5 + 48);
    v8 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4021716A34);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4021716A34);
  return v3;
}

void sub_20E17E898(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4021716A34);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217298432;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490E8000u, 0);
  *(_QWORD *)result = &off_24C8D3F68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490E8000u, 0);
  *(_QWORD *)result = &off_24C8D3F68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3F68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3F68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK::~ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3F68;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK::~ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17EC04(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225687040;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48968000u, 0);
  *(_QWORD *)result = &off_24C8D3FA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48968000u, 0);
  *(_QWORD *)result = &off_24C8D3FA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3FA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3FA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK::~ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3FA0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40FA0F61DDLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK::~ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x40uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 64, &v11, 0);
  if (!(_DWORD)v3 && v11)
  {
    v6 = (_OWORD *)operator new();
    v7 = v5[1];
    *v6 = *v5;
    v6[1] = v7;
    v8 = v5[3];
    v6[2] = v5[2];
    v6[3] = v8;
    v9 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C40FA0F61DDLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40FA0F61DDLL);
  return v3;
}

void sub_20E17EFA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40FA0F61DDLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217822720;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49168000u, 0);
  *(_QWORD *)result = &off_24C8D3FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49168000u, 0);
  *(_QWORD *)result = &off_24C8D3FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D3FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK::~ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D3FD8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK::~ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17F314(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetCriticalCarrierConfigRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226211328;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK::ARI_UtaIdcSetLaaConfigReq_SDK(AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488E0000u, 0);
  *(_QWORD *)result = &off_24C8D4010;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488E0000u, 0);
  *(_QWORD *)result = &off_24C8D4010;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK::ARI_UtaIdcSetLaaConfigReq_SDK(AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4010;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4010;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK::~ARI_UtaIdcSetLaaConfigReq_SDK(AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4010;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4023422098);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK::~ARI_UtaIdcSetLaaConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 16, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4023422098);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4023422098);
  return v3;
}

void sub_20E17F6A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4023422098);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetLaaConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217265664;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK::ARI_UtaIdcSetLaaConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490E0000u, 0);
  *(_QWORD *)result = &off_24C8D4048;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490E0000u, 0);
  *(_QWORD *)result = &off_24C8D4048;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK::ARI_UtaIdcSetLaaConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4048;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4048;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK::~ARI_UtaIdcSetLaaConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4048;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK::~ARI_UtaIdcSetLaaConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E17FA00(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetLaaConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225654272;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK::ARI_UtaIdcSetLaaConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48960000u, 0);
  *(_QWORD *)result = &off_24C8D4080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48960000u, 0);
  *(_QWORD *)result = &off_24C8D4080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK::ARI_UtaIdcSetLaaConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK::~ARI_UtaIdcSetLaaConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4080;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK::~ARI_UtaIdcSetLaaConfigReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 20, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_DWORD *)(v6 + 16) = v5[4];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40A86A77D5);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E17FD94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetLaaConfigReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217789952;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK::ARI_UtaIdcSetLaaConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49160000u, 0);
  *(_QWORD *)result = &off_24C8D40B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49160000u, 0);
  *(_QWORD *)result = &off_24C8D40B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK::ARI_UtaIdcSetLaaConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D40B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D40B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK::~ARI_UtaIdcSetLaaConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D40B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK::~ARI_UtaIdcSetLaaConfigRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1800F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetLaaConfigRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226178560;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488C0000u, 0);
  *(_QWORD *)result = &off_24C8D40F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488C0000u, 0);
  *(_QWORD *)result = &off_24C8D40F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D40F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D40F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D40F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x104uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  *((_DWORD *)v5 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 260, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x104uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C408757D331);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408757D331);
  return v3;
}

void sub_20E1804A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217134592;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490C0000u, 0);
  *(_QWORD *)result = &off_24C8D4128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490C0000u, 0);
  *(_QWORD *)result = &off_24C8D4128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4128;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E180804(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225523200;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48950000u, 0);
  *(_QWORD *)result = &off_24C8D4160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48950000u, 0);
  *(_QWORD *)result = &off_24C8D4160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4160;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x104uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  *((_DWORD *)v5 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 260, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x104uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C408757D331);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408757D331);
  return v3;
}

void sub_20E180BB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217724416;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49150000u, 0);
  *(_QWORD *)result = &off_24C8D4198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49150000u, 0);
  *(_QWORD *)result = &off_24C8D4198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4198;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E180F14(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226113024;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489A0000u, 0);
  *(_QWORD *)result = &off_24C8D41D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489A0000u, 0);
  *(_QWORD *)result = &off_24C8D41D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D41D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D41D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D41D0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x104uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  *((_DWORD *)v5 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 260, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x104uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C408757D331);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408757D331);
  return v3;
}

void sub_20E1812C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxReqV3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1218052096;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491A0000u, 0);
  *(_QWORD *)result = &off_24C8D4208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491A0000u, 0);
  *(_QWORD *)result = &off_24C8D4208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4208;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E181624(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiRxRspCbV3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226440704;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488B8000u, 0);
  *(_QWORD *)result = &off_24C8D4240;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488B8000u, 0);
  *(_QWORD *)result = &off_24C8D4240;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4240;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4240;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4240;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x104uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  *((_DWORD *)v5 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 260, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x104uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C408757D331);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408757D331);
  return v3;
}

void sub_20E1819DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217101824;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490B8000u, 0);
  *(_QWORD *)result = &off_24C8D4278;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490B8000u, 0);
  *(_QWORD *)result = &off_24C8D4278;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4278;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4278;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4278;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E181D48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225490432;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48948000u, 0);
  *(_QWORD *)result = &off_24C8D42B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48948000u, 0);
  *(_QWORD *)result = &off_24C8D42B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D42B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D42B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D42B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x104uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  *((_DWORD *)v5 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 260, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x104uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C408757D331);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408757D331);
  return v3;
}

void sub_20E182104(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217691648;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49148000u, 0);
  *(_QWORD *)result = &off_24C8D42E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49148000u, 0);
  *(_QWORD *)result = &off_24C8D42E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D42E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D42E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D42E8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E182470(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226080256;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48998000u, 0);
  *(_QWORD *)result = &off_24C8D4320;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48998000u, 0);
  *(_QWORD *)result = &off_24C8D4320;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4320;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4320;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4320;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x104uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  *((_DWORD *)v5 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 260, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x104uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C408757D331);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408757D331);
  return v3;
}

void sub_20E18282C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxReqV3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1218019328;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49198000u, 0);
  *(_QWORD *)result = &off_24C8D4358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49198000u, 0);
  *(_QWORD *)result = &off_24C8D4358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4358;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK::~ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK::pack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK::unpack(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E182B98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetRTFeatureSpmiTxRspCbV3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226407936;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK::ARI_UtaIdcSetTimeSharingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488F0000u, 0);
  *(_QWORD *)result = &off_24C8D4390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488F0000u, 0);
  *(_QWORD *)result = &off_24C8D4390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK::ARI_UtaIdcSetTimeSharingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4390;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK::~ARI_UtaIdcSetTimeSharingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4390;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408149D517);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK::~ARI_UtaIdcSetTimeSharingConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x38uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;

  v11 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v11, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v11;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_QWORD *)(v5 + 48) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, (void *)v5, 56, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v6 = operator new();
    v7 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_OWORD *)(v6 + 16) = v7;
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v5 + 32);
    *(_QWORD *)(v6 + 48) = *(_QWORD *)(v5 + 48);
    v8 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C408149D517);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408149D517);
  return v3;
}

void sub_20E182F40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408149D517);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTimeSharingConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217331200;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490F0000u, 0);
  *(_QWORD *)result = &off_24C8D43C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490F0000u, 0);
  *(_QWORD *)result = &off_24C8D43C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D43C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D43C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK::~ARI_UtaIdcSetTimeSharingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D43C8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK::~ARI_UtaIdcSetTimeSharingConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1832A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTimeSharingConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225719808;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48990000u, 0);
  *(_QWORD *)result = &off_24C8D4400;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48990000u, 0);
  *(_QWORD *)result = &off_24C8D4400;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4400;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4400;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK::~ARI_UtaIdcSetTunerArbitrationConfigReq_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4400;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK::~ARI_UtaIdcSetTunerArbitrationConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return v3;
}

void sub_20E183628(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217986560;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49190000u, 0);
  *(_QWORD *)result = &off_24C8D4438;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49190000u, 0);
  *(_QWORD *)result = &off_24C8D4438;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4438;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4438;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK::~ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4438;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK::~ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E183988(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226375168;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489C8000u, 0);
  *(_QWORD *)result = &off_24C8D4470;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489C8000u, 0);
  *(_QWORD *)result = &off_24C8D4470;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4470;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4470;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK::~ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4470;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK::~ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E183D18(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1218215936;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491C8000u, 0);
  *(_QWORD *)result = &off_24C8D44A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491C8000u, 0);
  *(_QWORD *)result = &off_24C8D44A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D44A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D44A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK::~ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D44A8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK::~ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E184074(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTunerArbitrationConfigRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226604544;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK::ARI_UtaIdcSetTunerVoterConfigReq_SDK(AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48930000u, 0);
  *(_QWORD *)result = &off_24C8D44E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48930000u, 0);
  *(_QWORD *)result = &off_24C8D44E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK::ARI_UtaIdcSetTunerVoterConfigReq_SDK(AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D44E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D44E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK::~ARI_UtaIdcSetTunerVoterConfigReq_SDK(AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D44E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK::~ARI_UtaIdcSetTunerVoterConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 16, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40451B5BE8);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40451B5BE8);
  return v3;
}

void sub_20E184400(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40451B5BE8);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTunerVoterConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217593344;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49130000u, 0);
  *(_QWORD *)result = &off_24C8D4518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49130000u, 0);
  *(_QWORD *)result = &off_24C8D4518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK::~ARI_UtaIdcSetTunerVoterConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4518;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK::~ARI_UtaIdcSetTunerVoterConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E184760(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTunerVoterConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225981952;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK::ARI_UtaIdcSetTxAntMappingTableReq_SDK(AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48910000u, 0);
  *(_QWORD *)result = &off_24C8D4550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48910000u, 0);
  *(_QWORD *)result = &off_24C8D4550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK::ARI_UtaIdcSetTxAntMappingTableReq_SDK(AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK::~ARI_UtaIdcSetTxAntMappingTableReq_SDK(AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4550;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK::~ARI_UtaIdcSetTxAntMappingTableReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK::pack(AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK::unpack(AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 16, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40451B5BE8);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40451B5BE8);
  return v3;
}

void sub_20E184AE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40451B5BE8);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTxAntMappingTableReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217462272;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK(AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49110000u, 0);
  *(_QWORD *)result = &off_24C8D4588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49110000u, 0);
  *(_QWORD *)result = &off_24C8D4588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK(AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK::~ARI_UtaIdcSetTxAntMappingTableRspCb_SDK(AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4588;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK::~ARI_UtaIdcSetTxAntMappingTableRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E184E48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTxAntMappingTableRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225850880;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK::ARI_UtaIdcSetTxBlankingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488C8000u, 0);
  *(_QWORD *)result = &off_24C8D45C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488C8000u, 0);
  *(_QWORD *)result = &off_24C8D45C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK::ARI_UtaIdcSetTxBlankingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D45C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D45C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK::~ARI_UtaIdcSetTxBlankingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D45C0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C400CF9F734);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK::~ARI_UtaIdcSetTxBlankingConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 16, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C400CF9F734);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C400CF9F734);
  return v3;
}

void sub_20E1851D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C400CF9F734);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTxBlankingConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217167360;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490C8000u, 0);
  *(_QWORD *)result = &off_24C8D45F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490C8000u, 0);
  *(_QWORD *)result = &off_24C8D45F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D45F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D45F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK::~ARI_UtaIdcSetTxBlankingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D45F8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK::~ARI_UtaIdcSetTxBlankingConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E185544(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTxBlankingConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225555968;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488D0000u, 0);
  *(_QWORD *)result = &off_24C8D4630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x488D0000u, 0);
  *(_QWORD *)result = &off_24C8D4630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4630;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK::~ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4630;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK::~ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 20, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_DWORD *)(v6 + 16) = v5[4];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40A86A77D5);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E1858DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217200128;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490D0000u, 0);
  *(_QWORD *)result = &off_24C8D4668;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x490D0000u, 0);
  *(_QWORD *)result = &off_24C8D4668;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4668;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4668;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK::~ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4668;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK::~ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E185C3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetTxPowerLimitingConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225588736;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48978000u, 0);
  *(_QWORD *)result = &off_24C8D46A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48978000u, 0);
  *(_QWORD *)result = &off_24C8D46A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D46A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D46A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK::~ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D46A0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403767131ELL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK::~ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x40CuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x40CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1036, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x40CuLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C403767131ELL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C403767131ELL);
  return v3;
}

void sub_20E185FD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403767131ELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217888256;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49178000u, 0);
  *(_QWORD *)result = &off_24C8D46D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49178000u, 0);
  *(_QWORD *)result = &off_24C8D46D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D46D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D46D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK::~ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D46D8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK::~ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E186340(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUsbEnhAntBlockPwrLmtPolicyConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226276864;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48920000u, 0);
  *(_QWORD *)result = &off_24C8D4710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48920000u, 0);
  *(_QWORD *)result = &off_24C8D4710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4710;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C406F30C985);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x328uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x328uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 808, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x328uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C406F30C985);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C406F30C985);
  return v3;
}

void sub_20E1866D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C406F30C985);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217527808;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49120000u, 0);
  *(_QWORD *)result = &off_24C8D4748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49120000u, 0);
  *(_QWORD *)result = &off_24C8D4748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4748;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4748;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E186A34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225916416;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48940000u, 0);
  *(_QWORD *)result = &off_24C8D4780;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48940000u, 0);
  *(_QWORD *)result = &off_24C8D4780;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4780;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4780;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4780;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40D3559E10);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x5A8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x5A8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1448, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x5A8uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40D3559E10);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40D3559E10);
  return v3;
}

void sub_20E186DC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40D3559E10);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217658880;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49140000u, 0);
  *(_QWORD *)result = &off_24C8D47B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49140000u, 0);
  *(_QWORD *)result = &off_24C8D47B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D47B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D47B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D47B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK::~ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E187124(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbAntBlockPwrLmtConfigRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226047488;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48970000u, 0);
  *(_QWORD *)result = &off_24C8D47F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48970000u, 0);
  *(_QWORD *)result = &off_24C8D47F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D47F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D47F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D47F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40701D913FLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x304uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x304uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 772, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x304uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40701D913FLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40701D913FLL);
  return v3;
}

void sub_20E1874B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40701D913FLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217855488;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49170000u, 0);
  *(_QWORD *)result = &off_24C8D4828;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49170000u, 0);
  *(_QWORD *)result = &off_24C8D4828;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4828;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4828;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4828;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E187814(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226244096;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489C0000u, 0);
  *(_QWORD *)result = &off_24C8D4860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x489C0000u, 0);
  *(_QWORD *)result = &off_24C8D4860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4860;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4860;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40628BCEAALL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK::pack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x2C8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x2C8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 712, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x2C8uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40628BCEAALL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40628BCEAALL);
  return v3;
}

void sub_20E187BA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40628BCEAALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigReqV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1218183168;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491C0000u, 0);
  *(_QWORD *)result = &off_24C8D4898;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x491C0000u, 0);
  *(_QWORD *)result = &off_24C8D4898;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4898;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4898;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4898;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK::~ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK::pack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK::unpack(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E187F04(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetUwbRtActivityMitigationConfigRspCbV2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1226571776;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48918000u, 0);
  *(_QWORD *)result = &off_24C8D48D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x48918000u, 0);
  *(_QWORD *)result = &off_24C8D48D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D48D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D48D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D48D0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4050229AC9);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK::~ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK::pack(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x210uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK::unpack(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x210uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 528, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x210uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4050229AC9);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4050229AC9);
  return v3;
}

void sub_20E18829C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4050229AC9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1217495040;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49118000u, 0);
  *(_QWORD *)result = &off_24C8D4908;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x49118000u, 0);
  *(_QWORD *)result = &off_24C8D4908;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4908;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D4908;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D4908;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK::~ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK::pack(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK::unpack(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E188608(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_UtaIdcSetWiFiAntBlockPwrLmtConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1225883648;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccClockControlReq_SDK::ARI_IBIXccClockControlReq_SDK(AriSdk::ARI_IBIXccClockControlReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x58800000u, 0);
  *(_QWORD *)result = &off_24C8D5498;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x58800000u, 0);
  *(_QWORD *)result = &off_24C8D5498;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccClockControlReq_SDK::ARI_IBIXccClockControlReq_SDK(AriSdk::ARI_IBIXccClockControlReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5498;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5498;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIXccClockControlReq_SDK::~ARI_IBIXccClockControlReq_SDK(AriSdk::ARI_IBIXccClockControlReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D5498;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIXccClockControlReq_SDK::~ARI_IBIXccClockControlReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIXccClockControlReq_SDK::pack(AriSdk::ARI_IBIXccClockControlReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIXccClockControlReq_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 8, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_QWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E1888C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIXccClockControlReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIXccClockControlReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1484783616;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccClockControlRspCb_SDK::ARI_IBIXccClockControlRspCb_SDK(AriSdk::ARI_IBIXccClockControlRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x59000000u, 0);
  *(_QWORD *)result = &off_24C8D54D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x59000000u, 0);
  *(_QWORD *)result = &off_24C8D54D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccClockControlRspCb_SDK::ARI_IBIXccClockControlRspCb_SDK(AriSdk::ARI_IBIXccClockControlRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D54D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D54D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIXccClockControlRspCb_SDK::~ARI_IBIXccClockControlRspCb_SDK(AriSdk::ARI_IBIXccClockControlRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D54D0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40504FFAC1);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIXccClockControlRspCb_SDK::~ARI_IBIXccClockControlRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIXccClockControlRspCb_SDK::pack(AriSdk::ARI_IBIXccClockControlRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x18uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIXccClockControlRspCb_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 24, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = operator new();
    *(_OWORD *)v5 = *(_OWORD *)v2;
    *(_QWORD *)(v5 + 16) = v2[2];
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40504FFAC1);
  return v3;
}

void sub_20E188B78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40504FFAC1);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIXccClockControlRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIXccClockControlRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1493172224;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccClockIndCb_SDK::ARI_IBIXccClockIndCb_SDK(AriSdk::ARI_IBIXccClockIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x59800000u, 0);
  *(_QWORD *)result = &off_24C8D5508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x59800000u, 0);
  *(_QWORD *)result = &off_24C8D5508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccClockIndCb_SDK::ARI_IBIXccClockIndCb_SDK(AriSdk::ARI_IBIXccClockIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIXccClockIndCb_SDK::~ARI_IBIXccClockIndCb_SDK(AriSdk::ARI_IBIXccClockIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D5508;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40504FFAC1);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIXccClockIndCb_SDK::~ARI_IBIXccClockIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIXccClockIndCb_SDK::pack(AriSdk::ARI_IBIXccClockIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x18uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIXccClockIndCb_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  v2[1] = 0;
  v2[2] = 0;
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 24, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = operator new();
    *(_OWORD *)v5 = *(_OWORD *)v2;
    *(_QWORD *)(v5 + 16) = v2[2];
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40504FFAC1);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40504FFAC1);
  return v3;
}

void sub_20E188E30(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40504FFAC1);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIXccClockIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIXccClockIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1501560832;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccLtlReq_SDK::ARI_IBIXccLtlReq_SDK(AriSdk::ARI_IBIXccLtlReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x58808000u, 0);
  *(_QWORD *)result = &off_24C8D5540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x58808000u, 0);
  *(_QWORD *)result = &off_24C8D5540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccLtlReq_SDK::ARI_IBIXccLtlReq_SDK(AriSdk::ARI_IBIXccLtlReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIXccLtlReq_SDK::~ARI_IBIXccLtlReq_SDK(AriSdk::ARI_IBIXccLtlReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D5540;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIXccLtlReq_SDK::~ARI_IBIXccLtlReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIXccLtlReq_SDK::pack(AriSdk::ARI_IBIXccLtlReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIXccLtlReq_SDK::unpack(AriSdk::ARI_IBIXccLtlReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E189180(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIXccLtlReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIXccLtlReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1484816384;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccLtlRspCb_SDK::ARI_IBIXccLtlRspCb_SDK(AriSdk::ARI_IBIXccLtlRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x59008000u, 0);
  *(_QWORD *)result = &off_24C8D5578;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x59008000u, 0);
  *(_QWORD *)result = &off_24C8D5578;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIXccLtlRspCb_SDK::ARI_IBIXccLtlRspCb_SDK(AriSdk::ARI_IBIXccLtlRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5578;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D5578;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIXccLtlRspCb_SDK::~ARI_IBIXccLtlRspCb_SDK(AriSdk::ARI_IBIXccLtlRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D5578;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIXccLtlRspCb_SDK::~ARI_IBIXccLtlRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIXccLtlRspCb_SDK::pack(AriSdk::ARI_IBIXccLtlRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIXccLtlRspCb_SDK::unpack(AriSdk::ARI_IBIXccLtlRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E189408(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIXccLtlRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIXccLtlRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1493204992;
}

double AriSdk::ARI_IBIXccLtlIndCb_SDK::ARI_IBIXccLtlIndCb_SDK(AriSdk::ARI_IBIXccLtlIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x59808000u, 0);
  *(_QWORD *)v1 = &off_24C8D55B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x59808000u, 0);
  *(_QWORD *)v1 = &off_24C8D55B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  return result;
}

double AriSdk::ARI_IBIXccLtlIndCb_SDK::ARI_IBIXccLtlIndCb_SDK(AriSdk::ARI_IBIXccLtlIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D55B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D55B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  return result;
}

void AriSdk::ARI_IBIXccLtlIndCb_SDK::~ARI_IBIXccLtlIndCb_SDK(AriSdk::ARI_IBIXccLtlIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)this = &off_24C8D55B0;
  v2 = (void *)*((_QWORD *)this + 41);
  if (v2)
  {
    *((_QWORD *)this + 42) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 40);
  *((_QWORD *)this + 40) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 39);
  *((_QWORD *)this + 39) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 38);
  *((_QWORD *)this + 38) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 37);
  *((_QWORD *)this + 37) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 36);
  *((_QWORD *)this + 36) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  v8 = *((_QWORD *)this + 35);
  *((_QWORD *)this + 35) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 34);
  *((_QWORD *)this + 34) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  v10 = *((_QWORD *)this + 33);
  *((_QWORD *)this + 33) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 32);
  *((_QWORD *)this + 32) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  v12 = (void *)*((_QWORD *)this + 29);
  if (v12)
  {
    *((_QWORD *)this + 30) = v12;
    operator delete(v12);
  }
  v13 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40BDFB0063);
  v14 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = (void *)*((_QWORD *)this + 24);
  if (v15)
  {
    *((_QWORD *)this + 25) = v15;
    operator delete(v15);
  }
  v16 = (void *)*((_QWORD *)this + 21);
  if (v16)
  {
    *((_QWORD *)this + 22) = v16;
    operator delete(v16);
  }
  v17 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  v18 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v18)
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  v19 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v19)
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  v20 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  v21 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  v22 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  v23 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  v24 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  v25 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  v26 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v26)
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  v27 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  v28 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v28)
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  v29 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v29)
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIXccLtlIndCb_SDK::~ARI_IBIXccLtlIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIXccLtlIndCb_SDK::pack(AriSdk::ARI_IBIXccLtlIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  const void *v22;
  const void *v23;
  _BYTE *v24;
  _BYTE *v25;
  const void *v26;
  const void *v27;
  const void *v28;
  const void *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  const void *v34;
  _BYTE *v35;
  _BYTE *v36;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (_BYTE *)*((_QWORD *)this + 21);
                            if (!v18
                              || (v19 = (_BYTE *)*((_QWORD *)this + 22), v18 == v19)
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v18, v19 - v18, 0), !(_DWORD)result))
                            {
                              v20 = (_BYTE *)*((_QWORD *)this + 24);
                              if (!v20
                                || (v21 = (_BYTE *)*((_QWORD *)this + 25), v20 == v21)
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v20, v21 - v20, 0),
                                    !(_DWORD)result))
                              {
                                v22 = (const void *)*((_QWORD *)this + 27);
                                if (!v22
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v22, 4uLL, 0), !(_DWORD)result))
                                {
                                  v23 = (const void *)*((_QWORD *)this + 28);
                                  if (!v23
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v23, 2uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v24 = (_BYTE *)*((_QWORD *)this + 29);
                                    if (!v24
                                      || (v25 = (_BYTE *)*((_QWORD *)this + 30), v24 == v25)
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v24, v25 - v24, 0),
                                          !(_DWORD)result))
                                    {
                                      v26 = (const void *)*((_QWORD *)this + 32);
                                      if (!v26
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v26, 1uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v27 = (const void *)*((_QWORD *)this + 33);
                                        if (!v27
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v27, 1uLL, 0),
                                              !(_DWORD)result))
                                        {
                                          v28 = (const void *)*((_QWORD *)this + 34);
                                          if (!v28
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v28, 2uLL, 0),
                                                !(_DWORD)result))
                                          {
                                            v29 = (const void *)*((_QWORD *)this + 35);
                                            if (!v29
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v29, 1uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v30 = (const void *)*((_QWORD *)this + 36);
                                              if (!v30
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v30, 2uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v31 = (const void *)*((_QWORD *)this + 37);
                                                if (!v31
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v31, 2uLL, 0),
                                                      !(_DWORD)result))
                                                {
                                                  v32 = (const void *)*((_QWORD *)this + 38);
                                                  if (!v32
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 25, v32, 4uLL, 0), !(_DWORD)result))
                                                  {
                                                    v33 = (const void *)*((_QWORD *)this + 39);
                                                    if (!v33
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v33, 4uLL, 0), !(_DWORD)result))
                                                    {
                                                      v34 = (const void *)*((_QWORD *)this + 40);
                                                      if (!v34
                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v34, 4uLL, 0), !(_DWORD)result))
                                                      {
                                                        v35 = (_BYTE *)*((_QWORD *)this + 41);
                                                        if (!v35
                                                          || (v36 = (_BYTE *)*((_QWORD *)this + 42), v35 == v36)
                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 28, v35, v36 - v35, 0), !(_DWORD)result))
                                                        {
                                                          result = 0;
                                                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIXccLtlIndCb_SDK::unpack(AriSdk::ARI_IBIXccLtlIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  void *v17;
  _OWORD *v18;
  _DWORD *v19;
  _WORD *v20;
  _QWORD *v21;
  _BYTE *v22;
  _BYTE *v23;
  _WORD *v24;
  _BYTE *v25;
  _WORD *v26;
  _WORD *v27;
  _DWORD *v28;
  _DWORD *v29;
  _DWORD *v30;
  _OWORD *v31;
  __n128 __p;
  uint64_t v34;
  unint64_t v35;
  BOOL v36;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v15, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v16, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  v36 = 0;
  v35 = 0xAAAAAAAAAAAAAAAALL;
  v17 = (void *)operator new[]();
  bzero(v17, 0x21CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v17, 540, &v36, &v35);
  if ((_DWORD)v3 || !v36)
  {
    MEMORY[0x212BB9B48](v17, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v34 = 0;
    __p = 0uLL;
    std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(&__p, v17, (uint64_t)v17 + 4 * (v35 >> 2), v35 >> 2);
    AriSdk::TlvArray<int,135ul>::operator=((std::vector<int> *)this + 7, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v17, 0x1000C8052888210);
  }
  v36 = 0;
  v35 = 0xAAAAAAAAAAAAAAAALL;
  v18 = (_OWORD *)operator new[]();
  *v18 = 0u;
  v18[1] = 0u;
  v18[2] = 0u;
  v18[3] = 0u;
  v18[4] = 0u;
  v18[5] = 0u;
  v18[6] = 0u;
  v18[7] = 0u;
  v18[8] = 0u;
  v18[9] = 0u;
  v18[10] = 0u;
  v18[11] = 0u;
  v18[12] = 0u;
  v18[13] = 0u;
  v18[14] = 0u;
  v18[15] = 0u;
  *(_OWORD *)((char *)v18 + 254) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v18, 270, &v36, &v35);
  if ((_DWORD)v3 || !v36)
  {
    MEMORY[0x212BB9B48](v18, 0x1000C80BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v34 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v18, (uint64_t)v18 + 2 * (v35 >> 1), v35 >> 1);
    AriSdk::TlvArray<unsigned short,135ul>::operator=((std::vector<int> *)this + 8, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v18, 0x1000C80BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v19, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 27, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v20 = (_WORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v20, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v20, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 28, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C40BDFB0063);
  }
  v36 = 0;
  v35 = 0xAAAAAAAAAAAAAAAALL;
  v21 = (_QWORD *)operator new[]();
  *v21 = 0;
  v21[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v21, 16, &v36, &v35);
  if ((_DWORD)v3 || !v36)
  {
    MEMORY[0x212BB9B48](v21, 0x1000C80BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v34 = 0;
    __p = 0uLL;
    std::vector<short>::__init_with_size[abi:ne180100]<short *,short *>(&__p, v21, (uint64_t)v21 + 2 * (v35 >> 1), v35 >> 1);
    AriSdk::TlvArray<short,8ul>::operator=((uint64_t)this + 232, (uint64_t *)&__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v21, 0x1000C80BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v22 = (_BYTE *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v22, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 32, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v23 = (_BYTE *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v23, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 33, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v24 = (_WORD *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v24, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v24, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 34, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v25 = (_BYTE *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v25, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 35, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v26 = (_WORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v26, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v26, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 36, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v27 = (_WORD *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v27, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v27, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 37, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v28 = (_DWORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 25, v28, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 38, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v29 = (_DWORD *)operator new();
  *v29 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v29, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 39, v29);
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v30 = (_DWORD *)operator new();
  *v30 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v30, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 40, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  }
  v36 = 0;
  v35 = 0xAAAAAAAAAAAAAAAALL;
  v31 = (_OWORD *)operator new[]();
  *v31 = 0u;
  v31[1] = 0u;
  v31[2] = 0u;
  v31[3] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 28, v31, 64, &v36, &v35);
  if (!(_DWORD)v3 && v36)
  {
    v34 = 0;
    __p = 0uLL;
    std::vector<int>::__init_with_size[abi:ne180100]<int *,int *>(&__p, v31, (uint64_t)v31 + 4 * (v35 >> 2), v35 >> 2);
    AriSdk::TlvArray<int,16ul>::operator=((std::vector<int> *)((char *)this + 328), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v31, 0x1000C8052888210);
  return v3;
}

void sub_20E18AE70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<int,135ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x21D)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 2, 135);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E18B0C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<unsigned short,135ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x10F)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 1, 135);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E18B19C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AriSdk::TlvArray<short,8ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if ((unint64_t)(v4 - *a2) < 0x11)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, (a2[1] - *a2) >> 1, 8);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E18B29C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<int,16ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x41)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 2, 16);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E18B378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIXccLtlIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIXccLtlIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1501593600;
}

_QWORD *std::vector<short>::__init_with_size[abi:ne180100]<short *,short *>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(2 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 2 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E18B428(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ARI_IBISimApduCmdResultType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimApduCmdResultType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAuthResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAuthResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqChangeData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqChangeData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqDisableData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqDisableData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqEnableData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqEnableData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqUnblockData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqUnblockData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqVerifyData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinReqVerifyData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinResType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenPinResType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPinActivity_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPinActivity_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPinStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPinStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthAuts_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthAuts_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthCipheringKey_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthCipheringKey_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthIntegrityKey_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthIntegrityKey_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthKc_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthKc_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthKsExtNaf_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthKsExtNaf_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthRsp_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAuthRsp_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAutn_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecAutn_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecImpi_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecImpi_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecNafid_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecNafid_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecRand_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecRand_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecurityContext_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSecurityContext_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIConfiguredSimCardIdEnum_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIConfiguredSimCardIdEnum_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIConfiguredSimInfoStatusEnum_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIConfiguredSimInfoStatusEnum_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEnableVirtualSimStatusEnum_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEnableVirtualSimStatusEnum_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEosAssertionState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEosAssertionState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEosState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEosState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIInt16_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIInt16_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMapModemInstancetoSimStatusEnum_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMapModemInstancetoSimStatusEnum_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimInfoStruct_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimInfoStruct_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylSimConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylSimConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylTapeCmd_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIVinylTapeCmd_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudCallEventReq_SDK::ARI_CsiIceAudCallEventReq_SDK(AriSdk::ARI_CsiIceAudCallEventReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0860000, 0);
  *(_QWORD *)result = &off_24C8D8AB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0860000, 0);
  *(_QWORD *)result = &off_24C8D8AB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudCallEventReq_SDK::ARI_CsiIceAudCallEventReq_SDK(AriSdk::ARI_CsiIceAudCallEventReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8AB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8AB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudCallEventReq_SDK::~ARI_CsiIceAudCallEventReq_SDK(AriSdk::ARI_CsiIceAudCallEventReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D8AB0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudCallEventReq_SDK::~ARI_CsiIceAudCallEventReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudCallEventReq_SDK::pack(AriSdk::ARI_CsiIceAudCallEventReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudCallEventReq_SDK::unpack(AriSdk::ARI_CsiIceAudCallEventReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v9 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18BF64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudCallEventReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudCallEventReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259653632;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudCallEventRespCb_SDK::ARI_CsiIceAudCallEventRespCb_SDK(AriSdk::ARI_CsiIceAudCallEventRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1060000, 0);
  *(_QWORD *)result = &off_24C8D8AE8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1060000, 0);
  *(_QWORD *)result = &off_24C8D8AE8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudCallEventRespCb_SDK::ARI_CsiIceAudCallEventRespCb_SDK(AriSdk::ARI_CsiIceAudCallEventRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8AE8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8AE8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudCallEventRespCb_SDK::~ARI_CsiIceAudCallEventRespCb_SDK(AriSdk::ARI_CsiIceAudCallEventRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8AE8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudCallEventRespCb_SDK::~ARI_CsiIceAudCallEventRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudCallEventRespCb_SDK::pack(AriSdk::ARI_CsiIceAudCallEventRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudCallEventRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudCallEventRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18C1E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudCallEventRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudCallEventRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251265024;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK::ARI_CsiIceAudDeviceInfoReq_SDK(AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0848000, 0);
  *(_QWORD *)result = &off_24C8D8B20;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0848000, 0);
  *(_QWORD *)result = &off_24C8D8B20;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK::ARI_CsiIceAudDeviceInfoReq_SDK(AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8B20;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8B20;
  return result;
}

void AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK::~ARI_CsiIceAudDeviceInfoReq_SDK(AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK::unpack(AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDeviceInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259751936;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK::ARI_CsiIceAudDeviceInfoRespCb_SDK(AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1048000, 0);
  *(_QWORD *)result = &off_24C8D8B58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1048000, 0);
  *(_QWORD *)result = &off_24C8D8B58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK::ARI_CsiIceAudDeviceInfoRespCb_SDK(AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8B58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8B58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK::~ARI_CsiIceAudDeviceInfoRespCb_SDK(AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8B58;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK::~ARI_CsiIceAudDeviceInfoRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK::pack(AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18C614(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDeviceInfoRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251363328;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK::ARI_CsiIceAudDeviceInfoIndCb_SDK(AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1848000, 0);
  *(_QWORD *)result = &off_24C8D8B90;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1848000, 0);
  *(_QWORD *)result = &off_24C8D8B90;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK::ARI_CsiIceAudDeviceInfoIndCb_SDK(AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8B90;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8B90;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK::~ARI_CsiIceAudDeviceInfoIndCb_SDK(AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8B90;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK::~ARI_CsiIceAudDeviceInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK::pack(AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK::unpack(AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18C894(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDeviceInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -242974720;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableAudioReq_SDK::ARI_CsiIceAudDisableAudioReq_SDK(AriSdk::ARI_CsiIceAudDisableAudioReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0820000, 0);
  *(_QWORD *)result = &off_24C8D8BC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0820000, 0);
  *(_QWORD *)result = &off_24C8D8BC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableAudioReq_SDK::ARI_CsiIceAudDisableAudioReq_SDK(AriSdk::ARI_CsiIceAudDisableAudioReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8BC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8BC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudDisableAudioReq_SDK::~ARI_CsiIceAudDisableAudioReq_SDK(AriSdk::ARI_CsiIceAudDisableAudioReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8BC8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudDisableAudioReq_SDK::~ARI_CsiIceAudDisableAudioReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDisableAudioReq_SDK::pack(AriSdk::ARI_CsiIceAudDisableAudioReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudDisableAudioReq_SDK::unpack(AriSdk::ARI_CsiIceAudDisableAudioReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18CB0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudDisableAudioReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDisableAudioReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259915776;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK::ARI_CsiIceAudDisableAudioRespCb_SDK(AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1020000, 0);
  *(_QWORD *)result = &off_24C8D8C00;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1020000, 0);
  *(_QWORD *)result = &off_24C8D8C00;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK::ARI_CsiIceAudDisableAudioRespCb_SDK(AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8C00;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8C00;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK::~ARI_CsiIceAudDisableAudioRespCb_SDK(AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8C00;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK::~ARI_CsiIceAudDisableAudioRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK::pack(AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18CD80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDisableAudioRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251527168;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK::ARI_CsiIceAudDisableLoopbackHWReq_SDK(AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0838000, 0);
  *(_QWORD *)result = &off_24C8D8C38;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0838000, 0);
  *(_QWORD *)result = &off_24C8D8C38;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK::ARI_CsiIceAudDisableLoopbackHWReq_SDK(AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8C38;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8C38;
  return result;
}

void AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK::~ARI_CsiIceAudDisableLoopbackHWReq_SDK(AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK::unpack(AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDisableLoopbackHWReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259817472;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK(AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1038000, 0);
  *(_QWORD *)result = &off_24C8D8C70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1038000, 0);
  *(_QWORD *)result = &off_24C8D8C70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK(AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8C70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8C70;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK::~ARI_CsiIceAudDisableLoopbackHWRespCb_SDK(AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8C70;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK::~ARI_CsiIceAudDisableLoopbackHWRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK::pack(AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18D1AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDisableLoopbackHWRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251428864;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK::ARI_CsiIceAudDistortionInfoIndCb_SDK(AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1880000, 0);
  *(_QWORD *)result = &off_24C8D8CA8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1880000, 0);
  *(_QWORD *)result = &off_24C8D8CA8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK::ARI_CsiIceAudDistortionInfoIndCb_SDK(AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8CA8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8CA8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK::~ARI_CsiIceAudDistortionInfoIndCb_SDK(AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D8CA8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK::~ARI_CsiIceAudDistortionInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK::pack(AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK::unpack(AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E18D5DC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudDistortionInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -242745344;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableAudioReq_SDK::ARI_CsiIceAudEnableAudioReq_SDK(AriSdk::ARI_CsiIceAudEnableAudioReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0818000, 0);
  *(_QWORD *)result = &off_24C8D8CE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0818000, 0);
  *(_QWORD *)result = &off_24C8D8CE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableAudioReq_SDK::ARI_CsiIceAudEnableAudioReq_SDK(AriSdk::ARI_CsiIceAudEnableAudioReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8CE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8CE0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudEnableAudioReq_SDK::~ARI_CsiIceAudEnableAudioReq_SDK(AriSdk::ARI_CsiIceAudEnableAudioReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8CE0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudEnableAudioReq_SDK::~ARI_CsiIceAudEnableAudioReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudEnableAudioReq_SDK::pack(AriSdk::ARI_CsiIceAudEnableAudioReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudEnableAudioReq_SDK::unpack(AriSdk::ARI_CsiIceAudEnableAudioReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18D868(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudEnableAudioReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudEnableAudioReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259948544;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK::ARI_CsiIceAudEnableAudioRespCb_SDK(AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1018000, 0);
  *(_QWORD *)result = &off_24C8D8D18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1018000, 0);
  *(_QWORD *)result = &off_24C8D8D18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK::ARI_CsiIceAudEnableAudioRespCb_SDK(AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8D18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8D18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK::~ARI_CsiIceAudEnableAudioRespCb_SDK(AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8D18;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK::~ARI_CsiIceAudEnableAudioRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK::pack(AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18DAE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudEnableAudioRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251559936;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK::ARI_CsiIceAudEnableLoopbackHWReq_SDK(AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0830000, 0);
  *(_QWORD *)result = &off_24C8D8D50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0830000, 0);
  *(_QWORD *)result = &off_24C8D8D50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK::ARI_CsiIceAudEnableLoopbackHWReq_SDK(AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8D50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8D50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK::~ARI_CsiIceAudEnableLoopbackHWReq_SDK(AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8D50;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK::~ARI_CsiIceAudEnableLoopbackHWReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK::pack(AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK::unpack(AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18DD60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudEnableLoopbackHWReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259850240;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK(AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1030000, 0);
  *(_QWORD *)result = &off_24C8D8D88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1030000, 0);
  *(_QWORD *)result = &off_24C8D8D88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK(AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8D88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8D88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK::~ARI_CsiIceAudEnableLoopbackHWRespCb_SDK(AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8D88;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK::~ARI_CsiIceAudEnableLoopbackHWRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK::pack(AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18DFD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudEnableLoopbackHWRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251461632;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK::ARI_CsiIceAudInterfaceInfoIndCb_SDK(AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1870000, 0);
  *(_QWORD *)result = &off_24C8D8DC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1870000, 0);
  *(_QWORD *)result = &off_24C8D8DC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK::ARI_CsiIceAudInterfaceInfoIndCb_SDK(AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8DC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8DC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK::~ARI_CsiIceAudInterfaceInfoIndCb_SDK(AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D8DC0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK::~ARI_CsiIceAudInterfaceInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK::pack(AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK::unpack(AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E18E400(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudInterfaceInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -242810880;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudLoopbackReq_SDK::ARI_CsiIceAudLoopbackReq_SDK(AriSdk::ARI_CsiIceAudLoopbackReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0828000, 0);
  *(_QWORD *)result = &off_24C8D8DF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0828000, 0);
  *(_QWORD *)result = &off_24C8D8DF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudLoopbackReq_SDK::ARI_CsiIceAudLoopbackReq_SDK(AriSdk::ARI_CsiIceAudLoopbackReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8DF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8DF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudLoopbackReq_SDK::~ARI_CsiIceAudLoopbackReq_SDK(AriSdk::ARI_CsiIceAudLoopbackReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D8DF8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudLoopbackReq_SDK::~ARI_CsiIceAudLoopbackReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudLoopbackReq_SDK::pack(AriSdk::ARI_CsiIceAudLoopbackReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudLoopbackReq_SDK::unpack(AriSdk::ARI_CsiIceAudLoopbackReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v9 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18E844(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudLoopbackReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudLoopbackReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259883008;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK::ARI_CsiIceAudLoopbackRespCb_SDK(AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1028000, 0);
  *(_QWORD *)result = &off_24C8D8E30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1028000, 0);
  *(_QWORD *)result = &off_24C8D8E30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK::ARI_CsiIceAudLoopbackRespCb_SDK(AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8E30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8E30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK::~ARI_CsiIceAudLoopbackRespCb_SDK(AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8E30;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK::~ARI_CsiIceAudLoopbackRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK::pack(AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18EAD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudLoopbackRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251494400;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK::ARI_CsiIceAudSetAudioLoggingReq_SDK(AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0868000, 0);
  *(_QWORD *)result = &off_24C8D8E68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0868000, 0);
  *(_QWORD *)result = &off_24C8D8E68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK::ARI_CsiIceAudSetAudioLoggingReq_SDK(AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8E68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8E68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK::~ARI_CsiIceAudSetAudioLoggingReq_SDK(AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8E68;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK::~ARI_CsiIceAudSetAudioLoggingReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK::pack(AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK::unpack(AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18ED54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudSetAudioLoggingReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259620864;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK::ARI_CsiIceAudSetAudioLoggingRespCb_SDK(AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1068000, 0);
  *(_QWORD *)result = &off_24C8D8EA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1068000, 0);
  *(_QWORD *)result = &off_24C8D8EA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK::ARI_CsiIceAudSetAudioLoggingRespCb_SDK(AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8EA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8EA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK::~ARI_CsiIceAudSetAudioLoggingRespCb_SDK(AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8EA0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK::~ARI_CsiIceAudSetAudioLoggingRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK::pack(AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18EFD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudSetAudioLoggingRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251232256;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetDeviceReq_SDK::ARI_CsiIceAudSetDeviceReq_SDK(AriSdk::ARI_CsiIceAudSetDeviceReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0808000, 0);
  *(_QWORD *)result = &off_24C8D8ED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0808000, 0);
  *(_QWORD *)result = &off_24C8D8ED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetDeviceReq_SDK::ARI_CsiIceAudSetDeviceReq_SDK(AriSdk::ARI_CsiIceAudSetDeviceReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8ED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8ED8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudSetDeviceReq_SDK::~ARI_CsiIceAudSetDeviceReq_SDK(AriSdk::ARI_CsiIceAudSetDeviceReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D8ED8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudSetDeviceReq_SDK::~ARI_CsiIceAudSetDeviceReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudSetDeviceReq_SDK::pack(AriSdk::ARI_CsiIceAudSetDeviceReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudSetDeviceReq_SDK::unpack(AriSdk::ARI_CsiIceAudSetDeviceReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v7 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18F328(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudSetDeviceReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudSetDeviceReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -260014080;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK::ARI_CsiIceAudSetDeviceRespCb_SDK(AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1008000, 0);
  *(_QWORD *)result = &off_24C8D8F10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1008000, 0);
  *(_QWORD *)result = &off_24C8D8F10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK::ARI_CsiIceAudSetDeviceRespCb_SDK(AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8F10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8F10;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK::~ARI_CsiIceAudSetDeviceRespCb_SDK(AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8F10;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK::~ARI_CsiIceAudSetDeviceRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK::pack(AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18F5B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudSetDeviceRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251625472;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetI2SReq_SDK::ARI_CsiIceAudSetI2SReq_SDK(AriSdk::ARI_CsiIceAudSetI2SReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0810000, 0);
  *(_QWORD *)result = &off_24C8D8F48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0810000, 0);
  *(_QWORD *)result = &off_24C8D8F48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetI2SReq_SDK::ARI_CsiIceAudSetI2SReq_SDK(AriSdk::ARI_CsiIceAudSetI2SReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8F48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8F48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudSetI2SReq_SDK::~ARI_CsiIceAudSetI2SReq_SDK(AriSdk::ARI_CsiIceAudSetI2SReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D8F48;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudSetI2SReq_SDK::~ARI_CsiIceAudSetI2SReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudSetI2SReq_SDK::pack(AriSdk::ARI_CsiIceAudSetI2SReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudSetI2SReq_SDK::unpack(AriSdk::ARI_CsiIceAudSetI2SReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v9 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E18F9E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudSetI2SReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudSetI2SReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259981312;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK::ARI_CsiIceAudSetI2SRespCb_SDK(AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1010000, 0);
  *(_QWORD *)result = &off_24C8D8F80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1010000, 0);
  *(_QWORD *)result = &off_24C8D8F80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK::ARI_CsiIceAudSetI2SRespCb_SDK(AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8F80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8F80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK::~ARI_CsiIceAudSetI2SRespCb_SDK(AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D8F80;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK::~ARI_CsiIceAudSetI2SRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK::pack(AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E18FC64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudSetI2SRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251592704;
}

double AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK::ARI_CsiIceAudStatsInfoIndCb_SDK(AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF1878000, 0);
  *(_QWORD *)v1 = &off_24C8D8FB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF1878000, 0);
  *(_QWORD *)v1 = &off_24C8D8FB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK::ARI_CsiIceAudStatsInfoIndCb_SDK(AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D8FB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8D8FB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK::~ARI_CsiIceAudStatsInfoIndCb_SDK(AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C8D8FB8;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK::~ARI_CsiIceAudStatsInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK::pack(AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK::unpack(AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;

  v24 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v24, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v24;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v23 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v22 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v21 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v20 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v19 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v18 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v17 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v16 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v15 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 4, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E190684(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudStatsInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -242778112;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneEndIndCb_SDK::ARI_CsiIceAudToneEndIndCb_SDK(AriSdk::ARI_CsiIceAudToneEndIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1858000, 0);
  *(_QWORD *)result = &off_24C8D8FF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1858000, 0);
  *(_QWORD *)result = &off_24C8D8FF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneEndIndCb_SDK::ARI_CsiIceAudToneEndIndCb_SDK(AriSdk::ARI_CsiIceAudToneEndIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8FF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D8FF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudToneEndIndCb_SDK::~ARI_CsiIceAudToneEndIndCb_SDK(AriSdk::ARI_CsiIceAudToneEndIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8D8FF0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudToneEndIndCb_SDK::~ARI_CsiIceAudToneEndIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudToneEndIndCb_SDK::pack(AriSdk::ARI_CsiIceAudToneEndIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudToneEndIndCb_SDK::unpack(AriSdk::ARI_CsiIceAudToneEndIndCb_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v7 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E190A20(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudToneEndIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudToneEndIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -242909184;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStartReq_SDK::ARI_CsiIceAudToneStartReq_SDK(AriSdk::ARI_CsiIceAudToneStartReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0850000, 0);
  *(_QWORD *)result = &off_24C8D9028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0850000, 0);
  *(_QWORD *)result = &off_24C8D9028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStartReq_SDK::ARI_CsiIceAudToneStartReq_SDK(AriSdk::ARI_CsiIceAudToneStartReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9028;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudToneStartReq_SDK::~ARI_CsiIceAudToneStartReq_SDK(AriSdk::ARI_CsiIceAudToneStartReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D9028;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40274DC3F3);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudToneStartReq_SDK::~ARI_CsiIceAudToneStartReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudToneStartReq_SDK::pack(AriSdk::ARI_CsiIceAudToneStartReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 6uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudToneStartReq_SDK::unpack(AriMsg **this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_WORD *)operator new();
  *(_DWORD *)v2 = 0;
  v2[2] = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 6, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = operator new();
    *(_DWORD *)v5 = *(_DWORD *)v2;
    *(_WORD *)(v5 + 4) = v2[2];
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40274DC3F3);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40274DC3F3);
  return v3;
}

void sub_20E190CE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40274DC3F3);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudToneStartReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudToneStartReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259719168;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStartRespCb_SDK::ARI_CsiIceAudToneStartRespCb_SDK(AriSdk::ARI_CsiIceAudToneStartRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1050000, 0);
  *(_QWORD *)result = &off_24C8D9060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1050000, 0);
  *(_QWORD *)result = &off_24C8D9060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStartRespCb_SDK::ARI_CsiIceAudToneStartRespCb_SDK(AriSdk::ARI_CsiIceAudToneStartRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9060;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudToneStartRespCb_SDK::~ARI_CsiIceAudToneStartRespCb_SDK(AriSdk::ARI_CsiIceAudToneStartRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D9060;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudToneStartRespCb_SDK::~ARI_CsiIceAudToneStartRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudToneStartRespCb_SDK::pack(AriSdk::ARI_CsiIceAudToneStartRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudToneStartRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudToneStartRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E190F58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudToneStartRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudToneStartRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251330560;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStopReq_SDK::ARI_CsiIceAudToneStopReq_SDK(AriSdk::ARI_CsiIceAudToneStopReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0858000, 0);
  *(_QWORD *)result = &off_24C8D9098;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0858000, 0);
  *(_QWORD *)result = &off_24C8D9098;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStopReq_SDK::ARI_CsiIceAudToneStopReq_SDK(AriSdk::ARI_CsiIceAudToneStopReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9098;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9098;
  return result;
}

void AriSdk::ARI_CsiIceAudToneStopReq_SDK::~ARI_CsiIceAudToneStopReq_SDK(AriSdk::ARI_CsiIceAudToneStopReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudToneStopReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceAudToneStopReq_SDK::unpack(AriSdk::ARI_CsiIceAudToneStopReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceAudToneStopReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudToneStopReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259686400;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStopRespCb_SDK::ARI_CsiIceAudToneStopRespCb_SDK(AriSdk::ARI_CsiIceAudToneStopRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1058000, 0);
  *(_QWORD *)result = &off_24C8D90D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1058000, 0);
  *(_QWORD *)result = &off_24C8D90D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudToneStopRespCb_SDK::ARI_CsiIceAudToneStopRespCb_SDK(AriSdk::ARI_CsiIceAudToneStopRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D90D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D90D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudToneStopRespCb_SDK::~ARI_CsiIceAudToneStopRespCb_SDK(AriSdk::ARI_CsiIceAudToneStopRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8D90D0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudToneStopRespCb_SDK::~ARI_CsiIceAudToneStopRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudToneStopRespCb_SDK::pack(AriSdk::ARI_CsiIceAudToneStopRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudToneStopRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudToneStopRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E191384(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudToneStopRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudToneStopRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251297792;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK::ARI_CsiIceAudVocoderInfoReq_SDK(AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0840000, 0);
  *(_QWORD *)result = &off_24C8D9108;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF0840000, 0);
  *(_QWORD *)result = &off_24C8D9108;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK::ARI_CsiIceAudVocoderInfoReq_SDK(AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9108;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9108;
  return result;
}

void AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK::~ARI_CsiIceAudVocoderInfoReq_SDK(AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK::unpack(AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudVocoderInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -259784704;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK::ARI_CsiIceAudVocoderInfoRespCb_SDK(AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1040000, 0);
  *(_QWORD *)result = &off_24C8D9140;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1040000, 0);
  *(_QWORD *)result = &off_24C8D9140;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK::ARI_CsiIceAudVocoderInfoRespCb_SDK(AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9140;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9140;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK::~ARI_CsiIceAudVocoderInfoRespCb_SDK(AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D9140;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK::~ARI_CsiIceAudVocoderInfoRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK::pack(AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK::unpack(AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E191958(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudVocoderInfoRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -251396096;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK::ARI_CsiIceAudVocoderInfoIndCb_SDK(AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1840000, 0);
  *(_QWORD *)result = &off_24C8D9178;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF1840000, 0);
  *(_QWORD *)result = &off_24C8D9178;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK::ARI_CsiIceAudVocoderInfoIndCb_SDK(AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9178;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8D9178;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK::~ARI_CsiIceAudVocoderInfoIndCb_SDK(AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8D9178;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK::~ARI_CsiIceAudVocoderInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK::pack(AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK::unpack(AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E191D94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAudVocoderInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -243007488;
}

uint64_t ARI_CsiIceAudDisableLoopbackHWRespCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -251428864)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E191E90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceAudDisableLoopbackHWReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0xF0838000);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E191F34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceAudDisableLoopbackHWReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0xF0838000);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E191FE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceAudEnableLoopbackHWRespCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -251461632)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1920A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceAudEnableLoopbackHWReq_ENC(__int16 a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  __int16 v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0xF0830000);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 2uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E19216C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceAudEnableLoopbackHWReq_BLK(__int16 a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  __int16 v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0xF0830000);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 2uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E192244(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_AriGroupAttribParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriGroupAttribParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriGrpMsgsAttribParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriGrpMsgsAttribParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriLog2APParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriLog2APParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriMsgAttribParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriMsgAttribParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriStatusTlv_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_AriStatusTlv_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBmmBootTimeInfoReport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBmmBootTimeInfoReport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBmmBootTimeInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBmmBootTimeInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBootStateRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBootStateRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBspDebugJtagMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiBspDebugJtagMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiModeGetRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiModeGetRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiModeSetIndParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiModeSetIndParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiMsCpsBootStateRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiMsCpsBootStateRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiMsCpsReadImeiRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiMsCpsReadImeiRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiMsCpsReadMeidRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiMsCpsReadMeidRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecNonce_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecNonce_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecSnumInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecSnumInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSimCardStatusInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSimCardStatusInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiVerInfoStringV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiVerInfoStringV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiVerInfoString_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiVerInfoString_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsImei_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsImei_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsMeid_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsMeid_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRfPortMapStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRfPortMapStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRfPortMap_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRfPortMap_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRfRat_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRfRat_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISIMCardSelector_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISIMCardSelector_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISIMPresence_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISIMPresence_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaBool_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaBool_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaChar_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaChar_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaCpsSetSvnReqParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaCpsSetSvnReqParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaCpsSvnResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaCpsSvnResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaInt32_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaInt32_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaSysInfoType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaSysInfoType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt32_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt32_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt64_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt64_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t AriSdk::MsgBase::send(uint64_t a1, int a2, uint64_t a3)
{
  __int128 v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 *v13;
  uint64_t v14;
  _QWORD v16[4];
  _BYTE v17[24];
  _BYTE *v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v19 = v5;
  v20 = v5;
  std::__function::__value_func<int ()(unsigned char *,unsigned int)>::__value_func[abi:ne180100]((uint64_t)&v19, a3);
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1174405120;
  v16[2] = ___ZN6AriSdk7MsgBase4sendEiRKNSt3__18functionIFiPhjEEE_block_invoke;
  v16[3] = &__block_descriptor_tmp;
  v6 = v17;
  v7 = *((_QWORD *)&v20 + 1);
  if (!*((_QWORD *)&v20 + 1))
    goto LABEL_4;
  if (*((__int128 **)&v20 + 1) != &v19)
  {
    v7 = (*(uint64_t (**)(_QWORD))(**((_QWORD **)&v20 + 1) + 16))(*((_QWORD *)&v20 + 1));
LABEL_4:
    v18 = (_BYTE *)v7;
    goto LABEL_6;
  }
  v18 = v17;
  (*(void (**)(__int128 *, _BYTE *))(v19 + 24))(&v19, v17);
LABEL_6:
  v11 = AriSdk::MsgBase::send(a1, a2, (uint64_t)v16);
  if (v18 == v17)
  {
    v12 = 4;
  }
  else
  {
    if (!v18)
      goto LABEL_11;
    v12 = 5;
    v6 = v18;
  }
  (*(void (**)(_QWORD *))(*v6 + 8 * v12))(v6);
LABEL_11:
  v13 = (__int128 *)*((_QWORD *)&v20 + 1);
  if (*((__int128 **)&v20 + 1) == &v19)
  {
    v14 = 4;
    v13 = &v19;
    goto LABEL_15;
  }
  if (*((_QWORD *)&v20 + 1))
  {
    v14 = 5;
LABEL_15:
    (*(void (**)(__int128 *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)v13 + 8 * v14))(v13, v8, v9, v10);
  }
  return v11;
}

{
  uint64_t RawBytes;
  AriMsg *BufHeader;
  unint64_t v8;
  std::__shared_weak_count *v9;
  unint64_t *p_shared_owners;
  unint64_t v11;
  uint64_t v13;
  std::__shared_weak_count *v14;

  v13 = 0;
  v14 = 0;
  RawBytes = AriSdk::MsgBase::getRawBytes(a1, &v13);
  if (!(_DWORD)RawBytes)
  {
    RawBytes = AriHost::SendInternal(**(_QWORD **)(a1 + 8), *(_DWORD *)(*(_QWORD *)(a1 + 8) + 8) - **(_QWORD **)(a1 + 8), a2, a3, *(_BYTE *)(a1 + 32), *(_DWORD *)(a1 + 28), 1);
    if (!(_DWORD)RawBytes)
    {
      BufHeader = AriMsg::GetBufHeader(**(AriMsg ***)(a1 + 8), (const unsigned __int8 *)(*(_DWORD *)(*(_QWORD *)(a1 + 8) + 8)- **(_QWORD **)(a1 + 8)));
      if (BufHeader)
        v8 = (unint64_t)*((unsigned int *)BufHeader + 2) >> 17;
      else
        LODWORD(v8) = 0x8000;
      RawBytes = 0;
      *(_DWORD *)(a1 + 24) = v8;
    }
  }
  v9 = v14;
  if (v14)
  {
    p_shared_owners = (unint64_t *)&v14->__shared_owners_;
    do
      v11 = __ldaxr(p_shared_owners);
    while (__stlxr(v11 - 1, p_shared_owners));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  return RawBytes;
}

void sub_20E192B70(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char *a20)
{
  char *v21;
  uint64_t v22;

  v21 = a20;
  if (a20 == &a17)
  {
    v22 = 4;
    v21 = &a17;
  }
  else
  {
    if (!a20)
      goto LABEL_6;
    v22 = 5;
  }
  (*(void (**)(void))(*(_QWORD *)v21 + 8 * v22))();
LABEL_6:
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN6AriSdk7MsgBase4sendEiRKNSt3__18functionIFiPhjEEE_block_invoke(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v5;
  uint64_t v6;

  v3 = *(_QWORD *)(a1 + 56);
  v6 = a2;
  v5 = a3;
  if (!v3)
    std::__throw_bad_function_call[abi:ne180100]();
  return (*(uint64_t (**)(uint64_t, uint64_t *, int *))(*(_QWORD *)v3 + 48))(v3, &v6, &v5);
}

uint64_t __copy_helper_block_e8_32c29_ZTSNSt3__18functionIFiPhjEEE(uint64_t a1, uint64_t a2)
{
  return std::__function::__value_func<int ()(unsigned char *,unsigned int)>::__value_func[abi:ne180100](a1 + 32, a2 + 32);
}

_QWORD *__destroy_helper_block_e8_32c29_ZTSNSt3__18functionIFiPhjEEE(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *result;
  uint64_t v3;

  v1 = (_QWORD *)(a1 + 32);
  result = *(_QWORD **)(a1 + 56);
  if (result == v1)
  {
    v3 = 4;
    result = v1;
  }
  else
  {
    if (!result)
      return result;
    v3 = 5;
  }
  return (_QWORD *)(*(uint64_t (**)(void))(*result + 8 * v3))();
}

void sub_20E192D50(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)&a9);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::MsgBase::getRawBytes(uint64_t a1, _QWORD *a2)
{
  uint64_t *v3;
  uint64_t result;
  int *EncodedBuf;
  AriMsg *v6;
  unsigned __int8 *v7;
  std::__shared_weak_count *v8;
  unint64_t *v9;
  unint64_t v10;
  __int128 v11;
  unsigned int v12;
  AriMsg *v13;
  uint64_t v14;
  int *v15;

  v13 = 0;
  v3 = (uint64_t *)(a1 + 8);
  if (*(_QWORD *)(a1 + 8))
  {
LABEL_2:
    std::shared_ptr<std::vector<unsigned char> const>::operator=[abi:ne180100]<std::vector<unsigned char>,void>(a2, v3);
    return 0;
  }
  result = (**(uint64_t (***)(uint64_t, AriMsg **))a1)(a1, &v13);
  if (v13)
  {
    v12 = 0;
    EncodedBuf = AriMsg::getEncodedBuf(v13, &v12);
    if (!EncodedBuf)
      return 0xFFFFFFFFLL;
    v6 = (AriMsg *)EncodedBuf;
    *(_QWORD *)&v11 = 0xAAAAAAAAAAAAAAAALL;
    *((_QWORD *)&v11 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v14 = (uint64_t)EncodedBuf + v12;
    v15 = EncodedBuf;
    std::allocate_shared[abi:ne180100]<std::vector<unsigned char>,std::allocator<std::vector<unsigned char>>,unsigned char const*&,unsigned char const*,void>((const void **)&v15, &v14, &v11);
    std::shared_ptr<std::vector<unsigned char>>::operator=[abi:ne180100]((uint64_t)v3, &v11);
    v8 = (std::__shared_weak_count *)*((_QWORD *)&v11 + 1);
    if (*((_QWORD *)&v11 + 1))
    {
      v9 = (unint64_t *)(*((_QWORD *)&v11 + 1) + 8);
      do
        v10 = __ldaxr(v9);
      while (__stlxr(v10 - 1, v9));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
        std::__shared_weak_count::__release_weak(v8);
      }
    }
    AriMsg::ReleaseEncodedMessage(v6, v7);
    goto LABEL_2;
  }
  return result;
}

uint64_t std::shared_ptr<std::vector<unsigned char>>::operator=[abi:ne180100](uint64_t a1, __int128 *a2)
{
  __int128 v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  unint64_t v6;

  v3 = *a2;
  *(_QWORD *)a2 = 0;
  *((_QWORD *)a2 + 1) = 0;
  v4 = *(std::__shared_weak_count **)(a1 + 8);
  *(_OWORD *)a1 = v3;
  if (v4)
  {
    p_shared_owners = (unint64_t *)&v4->__shared_owners_;
    do
      v6 = __ldaxr(p_shared_owners);
    while (__stlxr(v6 - 1, p_shared_owners));
    if (!v6)
    {
      ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
      std::__shared_weak_count::__release_weak(v4);
    }
  }
  return a1;
}

_QWORD *std::shared_ptr<std::vector<unsigned char> const>::operator=[abi:ne180100]<std::vector<unsigned char>,void>(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  unint64_t v6;
  std::__shared_weak_count *v7;
  unint64_t *p_shared_owners;
  unint64_t v9;

  v4 = *a2;
  v3 = a2[1];
  if (v3)
  {
    v5 = (unint64_t *)(v3 + 8);
    do
      v6 = __ldxr(v5);
    while (__stxr(v6 + 1, v5));
  }
  v7 = (std::__shared_weak_count *)a1[1];
  *a1 = v4;
  a1[1] = v3;
  if (v7)
  {
    p_shared_owners = (unint64_t *)&v7->__shared_owners_;
    do
      v9 = __ldaxr(p_shared_owners);
    while (__stlxr(v9 - 1, p_shared_owners));
    if (!v9)
    {
      ((void (*)(std::__shared_weak_count *))v7->__on_zero_shared)(v7);
      std::__shared_weak_count::__release_weak(v7);
    }
  }
  return a1;
}

AriSdk::MsgBase *AriSdk::MsgBase::MsgBase(AriSdk::MsgBase *this, unsigned int a2, char a3)
{
  char *v4;
  std::__shared_weak_count *v5;
  unint64_t *v6;
  unint64_t v7;
  unsigned int v8;
  __int128 v10;
  unsigned int v11;

  v11 = a2;
  *(_QWORD *)this = &unk_24C8DB478;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0x4E2000008000;
  *((_BYTE *)this + 32) = a3;
  *((_BYTE *)this + 33) = a2 == 67600384;
  *((_BYTE *)this + 34) = 0;
  *((_QWORD *)this + 6) = 0;
  v4 = (char *)this + 48;
  *((_QWORD *)this + 7) = 0;
  std::allocate_shared[abi:ne180100]<AriMsg,std::allocator<AriMsg>,unsigned int const&,void>(&v11, &v10);
  std::shared_ptr<std::vector<unsigned char>>::operator=[abi:ne180100]((uint64_t)v4, &v10);
  v5 = (std::__shared_weak_count *)*((_QWORD *)&v10 + 1);
  if (*((_QWORD *)&v10 + 1))
  {
    v6 = (unint64_t *)(*((_QWORD *)&v10 + 1) + 8);
    do
      v7 = __ldaxr(v6);
    while (__stlxr(v7 - 1, v6));
    if (!v7)
    {
      ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
      std::__shared_weak_count::__release_weak(v5);
    }
  }
  v8 = v11 >> 26;
  *((_DWORD *)this + 9) = (v11 >> 15) & 0x3FF;
  *((_DWORD *)this + 10) = v8;
  return this;
}

void sub_20E193024(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v2);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

AriSdk::MsgBase *AriSdk::MsgBase::MsgBase(AriSdk::MsgBase *this, unsigned __int8 *a2, uint64_t a3)
{
  const unsigned __int8 ***v6;
  int *v7;
  AriMsg **v8;
  std::__shared_weak_count *v9;
  unint64_t *v10;
  unint64_t v11;
  const unsigned __int8 *v12;
  const unsigned __int8 *v13;
  _QWORD *v14;
  uint64_t v15;
  std::__shared_weak_count *v16;
  unint64_t *v17;
  unint64_t v18;
  AriMsg *BufHeader;
  int v20;
  unsigned int v21;
  __int128 v23;
  const unsigned __int8 *v24;
  const void *v25;

  *(_QWORD *)this = &unk_24C8DB478;
  *((_QWORD *)this + 1) = 0;
  v6 = (const unsigned __int8 ***)((char *)this + 8);
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 3) = 0xFFFFFFFF00008000;
  v7 = (int *)((char *)this + 24);
  *((_WORD *)this + 16) = 0;
  *((_BYTE *)this + 34) = 0;
  *((_QWORD *)this + 6) = 0;
  v8 = (AriMsg **)((char *)this + 48);
  *((_QWORD *)this + 7) = 0;
  *(_QWORD *)&v23 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v23 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v24 = &a2[a3];
  v25 = a2;
  std::allocate_shared[abi:ne180100]<std::vector<unsigned char>,std::allocator<std::vector<unsigned char>>,unsigned char const*&,unsigned char const*,void>(&v25, (uint64_t *)&v24, &v23);
  std::shared_ptr<std::vector<unsigned char>>::operator=[abi:ne180100]((uint64_t)v6, &v23);
  v9 = (std::__shared_weak_count *)*((_QWORD *)&v23 + 1);
  if (*((_QWORD *)&v23 + 1))
  {
    v10 = (unint64_t *)(*((_QWORD *)&v23 + 1) + 8);
    do
      v11 = __ldaxr(v10);
    while (__stlxr(v11 - 1, v10));
    if (!v11)
    {
      ((void (*)(std::__shared_weak_count *))v9->__on_zero_shared)(v9);
      std::__shared_weak_count::__release_weak(v9);
    }
  }
  v12 = **v6;
  v13 = (*v6)[1];
  v14 = operator new(0x60uLL);
  v14[1] = 0;
  v14[2] = 0;
  *v14 = &off_24C8DB4B0;
  AriMsg::AriMsg((AriMsg *)(v14 + 3), v12, ((_DWORD)v13 - (_DWORD)v12));
  *(_QWORD *)&v23 = v15;
  *((_QWORD *)&v23 + 1) = v14;
  std::shared_ptr<std::vector<unsigned char>>::operator=[abi:ne180100]((uint64_t)v8, &v23);
  v16 = (std::__shared_weak_count *)*((_QWORD *)&v23 + 1);
  if (*((_QWORD *)&v23 + 1))
  {
    v17 = (unint64_t *)(*((_QWORD *)&v23 + 1) + 8);
    do
      v18 = __ldaxr(v17);
    while (__stlxr(v18 - 1, v17));
    if (!v18)
    {
      ((void (*)(std::__shared_weak_count *))v16->__on_zero_shared)(v16);
      std::__shared_weak_count::__release_weak(v16);
    }
  }
  if (AriMsg::extractCtx(*v8, v7))
    *v7 = 0x8000;
  BufHeader = AriMsg::GetBufHeader((AriMsg *)a2, (const unsigned __int8 *)a3);
  if (BufHeader)
  {
    v20 = *(_DWORD *)((_BYTE *)BufHeader + 3) & 0x1F800 | ((unsigned __int16)*((_DWORD *)BufHeader + 2) >> 6);
    if (v20 == 2063)
    {
      *((_BYTE *)this + 33) = 1;
      *(_QWORD *)&v23 = 0xAAAAAAAAAAAAAAAALL;
      if (!ARI_AriNACK_Extract(a2, a3, (char *)&v23) && DWORD1(v23) == -84)
        *((_BYTE *)this + 34) = 1;
      v21 = 67600384;
    }
    else
    {
      v21 = v20 << 15;
    }
  }
  else
  {
    v21 = 0;
  }
  *((_DWORD *)this + 9) = (v21 >> 15) & 0x3FF;
  *((_DWORD *)this + 10) = v21 >> 26;
  return this;
}

void sub_20E193248(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;

  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v2);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

unint64_t AriSdk::MsgBase::getGMID(AriSdk::MsgBase *this)
{
  return *((unsigned int *)this + 10) | ((unint64_t)*((unsigned int *)this + 9) << 32);
}

uint64_t AriSdk::MsgBase::getMergedGMID(AriSdk::MsgBase *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26));
}

void AriSdk::MsgBase::~MsgBase(AriSdk::MsgBase *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

uint64_t std::__function::__value_func<int ()(unsigned char *,unsigned int)>::__value_func[abi:ne180100](uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 24);
  if (v3)
  {
    if (v3 == a2)
    {
      *(_QWORD *)(a1 + 24) = a1;
      (*(void (**)(_QWORD, uint64_t))(**(_QWORD **)(a2 + 24) + 24))(*(_QWORD *)(a2 + 24), a1);
    }
    else
    {
      *(_QWORD *)(a1 + 24) = (*(uint64_t (**)(uint64_t))(*(_QWORD *)v3 + 16))(v3);
    }
  }
  else
  {
    *(_QWORD *)(a1 + 24) = 0;
  }
  return a1;
}

void std::__throw_bad_function_call[abi:ne180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
}

void std::bad_function_call::~bad_function_call(std::bad_function_call *this)
{
  std::exception::~exception(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](uint64_t a1)
{
  std::__shared_weak_count *v2;
  unint64_t *p_shared_owners;
  unint64_t v4;

  v2 = *(std::__shared_weak_count **)(a1 + 8);
  if (v2)
  {
    p_shared_owners = (unint64_t *)&v2->__shared_owners_;
    do
      v4 = __ldaxr(p_shared_owners);
    while (__stlxr(v4 - 1, p_shared_owners));
    if (!v4)
    {
      ((void (*)(std::__shared_weak_count *))v2->__on_zero_shared)(v2);
      std::__shared_weak_count::__release_weak(v2);
    }
  }
  return a1;
}

_QWORD *std::allocate_shared[abi:ne180100]<AriMsg,std::allocator<AriMsg>,unsigned int const&,void>@<X0>(unsigned int *a1@<X1>, _QWORD *a2@<X8>)
{
  _QWORD *v4;
  _QWORD *result;

  v4 = operator new(0x60uLL);
  result = std::__shared_ptr_emplace<AriMsg>::__shared_ptr_emplace[abi:ne180100]<unsigned int const&,std::allocator<AriMsg>,0>(v4, a1);
  *a2 = v4 + 3;
  a2[1] = v4;
  return result;
}

void sub_20E193448(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__shared_ptr_emplace<AriMsg>::__shared_ptr_emplace[abi:ne180100]<unsigned int const&,std::allocator<AriMsg>,0>(_QWORD *a1, unsigned int *a2)
{
  a1[1] = 0;
  a1[2] = 0;
  *a1 = &off_24C8DB4B0;
  AriMsg::AriMsg((AriMsg *)(a1 + 3), *a2);
  return a1;
}

void sub_20E193494(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<AriMsg>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C8DB4B0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AriMsg>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C8DB4B0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

void std::__shared_ptr_emplace<AriMsg>::__on_zero_shared(uint64_t a1)
{
  AriMsg::~AriMsg((AriMsg *)(a1 + 24));
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateReq_SDK::ARI_CsiIceAccessoryStateReq_SDK(AriSdk::ARI_CsiIceAccessoryStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4818000, 0);
  *(_QWORD *)result = &off_24C8DB550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4818000, 0);
  *(_QWORD *)result = &off_24C8DB550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateReq_SDK::ARI_CsiIceAccessoryStateReq_SDK(AriSdk::ARI_CsiIceAccessoryStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAccessoryStateReq_SDK::~ARI_CsiIceAccessoryStateReq_SDK(AriSdk::ARI_CsiIceAccessoryStateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB550;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAccessoryStateReq_SDK::~ARI_CsiIceAccessoryStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateReq_SDK::pack(AriSdk::ARI_CsiIceAccessoryStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateReq_SDK::unpack(AriSdk::ARI_CsiIceAccessoryStateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19372C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAccessoryStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAccessoryStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192839680;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK::ARI_CsiIceAccessoryStateRspCb_SDK(AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5018000, 0);
  *(_QWORD *)result = &off_24C8DB588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5018000, 0);
  *(_QWORD *)result = &off_24C8DB588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK::ARI_CsiIceAccessoryStateRspCb_SDK(AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK::~ARI_CsiIceAccessoryStateRspCb_SDK(AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB588;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK::~ARI_CsiIceAccessoryStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK::pack(AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK::unpack(AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1939AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAccessoryStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184451072;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK::ARI_CsiIceAccessoryStateArtdReq_SDK(AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48D0000, 0);
  *(_QWORD *)result = &off_24C8DB5C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48D0000, 0);
  *(_QWORD *)result = &off_24C8DB5C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK::ARI_CsiIceAccessoryStateArtdReq_SDK(AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB5C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB5C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK::~ARI_CsiIceAccessoryStateArtdReq_SDK(AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB5C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK::~ARI_CsiIceAccessoryStateArtdReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK::pack(AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK::unpack(AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E193C24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAccessoryStateArtdReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192086016;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK::ARI_CsiIceAccessoryStateArtdRspCb_SDK(AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50D0000, 0);
  *(_QWORD *)result = &off_24C8DB5F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50D0000, 0);
  *(_QWORD *)result = &off_24C8DB5F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK::ARI_CsiIceAccessoryStateArtdRspCb_SDK(AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB5F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB5F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK::~ARI_CsiIceAccessoryStateArtdRspCb_SDK(AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB5F8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK::~ARI_CsiIceAccessoryStateArtdRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK::pack(AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK::unpack(AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E193E98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAccessoryStateArtdRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183697408;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAntennaPrefReq_SDK::ARI_CsiIceAntennaPrefReq_SDK(AriSdk::ARI_CsiIceAntennaPrefReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4810000, 0);
  *(_QWORD *)result = &off_24C8DB630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4810000, 0);
  *(_QWORD *)result = &off_24C8DB630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAntennaPrefReq_SDK::ARI_CsiIceAntennaPrefReq_SDK(AriSdk::ARI_CsiIceAntennaPrefReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAntennaPrefReq_SDK::~ARI_CsiIceAntennaPrefReq_SDK(AriSdk::ARI_CsiIceAntennaPrefReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB630;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAntennaPrefReq_SDK::~ARI_CsiIceAntennaPrefReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAntennaPrefReq_SDK::pack(AriSdk::ARI_CsiIceAntennaPrefReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAntennaPrefReq_SDK::unpack(AriSdk::ARI_CsiIceAntennaPrefReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19410C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAntennaPrefReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAntennaPrefReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192872448;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK::ARI_CsiIceAntennaPrefRspCb_SDK(AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5010000, 0);
  *(_QWORD *)result = &off_24C8DB668;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5010000, 0);
  *(_QWORD *)result = &off_24C8DB668;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK::ARI_CsiIceAntennaPrefRspCb_SDK(AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB668;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB668;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK::~ARI_CsiIceAntennaPrefRspCb_SDK(AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB668;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK::~ARI_CsiIceAntennaPrefRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK::pack(AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK::unpack(AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E194380(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceAntennaPrefRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184483840;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArfcnLockReq_SDK::ARI_CsiIceArfcnLockReq_SDK(AriSdk::ARI_CsiIceArfcnLockReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4878000, 0);
  *(_QWORD *)result = &off_24C8DB6A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4878000, 0);
  *(_QWORD *)result = &off_24C8DB6A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArfcnLockReq_SDK::ARI_CsiIceArfcnLockReq_SDK(AriSdk::ARI_CsiIceArfcnLockReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB6A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB6A0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceArfcnLockReq_SDK::~ARI_CsiIceArfcnLockReq_SDK(AriSdk::ARI_CsiIceArfcnLockReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DB6A0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceArfcnLockReq_SDK::~ARI_CsiIceArfcnLockReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceArfcnLockReq_SDK::pack(AriSdk::ARI_CsiIceArfcnLockReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceArfcnLockReq_SDK::unpack(AriSdk::ARI_CsiIceArfcnLockReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1946D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceArfcnLockReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceArfcnLockReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192446464;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArfcnLockRspCb_SDK::ARI_CsiIceArfcnLockRspCb_SDK(AriSdk::ARI_CsiIceArfcnLockRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5078000, 0);
  *(_QWORD *)result = &off_24C8DB6D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5078000, 0);
  *(_QWORD *)result = &off_24C8DB6D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArfcnLockRspCb_SDK::ARI_CsiIceArfcnLockRspCb_SDK(AriSdk::ARI_CsiIceArfcnLockRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB6D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB6D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceArfcnLockRspCb_SDK::~ARI_CsiIceArfcnLockRspCb_SDK(AriSdk::ARI_CsiIceArfcnLockRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB6D8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceArfcnLockRspCb_SDK::~ARI_CsiIceArfcnLockRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceArfcnLockRspCb_SDK::pack(AriSdk::ARI_CsiIceArfcnLockRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceArfcnLockRspCb_SDK::unpack(AriSdk::ARI_CsiIceArfcnLockRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E194958(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceArfcnLockRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceArfcnLockRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184057856;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArtdSettingReq_SDK::ARI_CsiIceArtdSettingReq_SDK(AriSdk::ARI_CsiIceArtdSettingReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4868000, 0);
  *(_QWORD *)result = &off_24C8DB710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4868000, 0);
  *(_QWORD *)result = &off_24C8DB710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArtdSettingReq_SDK::ARI_CsiIceArtdSettingReq_SDK(AriSdk::ARI_CsiIceArtdSettingReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB710;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceArtdSettingReq_SDK::~ARI_CsiIceArtdSettingReq_SDK(AriSdk::ARI_CsiIceArtdSettingReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DB710;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceArtdSettingReq_SDK::~ARI_CsiIceArtdSettingReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceArtdSettingReq_SDK::pack(AriSdk::ARI_CsiIceArtdSettingReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceArtdSettingReq_SDK::unpack(AriSdk::ARI_CsiIceArtdSettingReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E194CAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceArtdSettingReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceArtdSettingReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192512000;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArtdSettingRspCb_SDK::ARI_CsiIceArtdSettingRspCb_SDK(AriSdk::ARI_CsiIceArtdSettingRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5068000, 0);
  *(_QWORD *)result = &off_24C8DB748;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5068000, 0);
  *(_QWORD *)result = &off_24C8DB748;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceArtdSettingRspCb_SDK::ARI_CsiIceArtdSettingRspCb_SDK(AriSdk::ARI_CsiIceArtdSettingRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB748;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB748;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceArtdSettingRspCb_SDK::~ARI_CsiIceArtdSettingRspCb_SDK(AriSdk::ARI_CsiIceArtdSettingRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB748;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceArtdSettingRspCb_SDK::~ARI_CsiIceArtdSettingRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceArtdSettingRspCb_SDK::pack(AriSdk::ARI_CsiIceArtdSettingRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceArtdSettingRspCb_SDK::unpack(AriSdk::ARI_CsiIceArtdSettingRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E194F34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceArtdSettingRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceArtdSettingRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184123392;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBSleepEnableReq_SDK::ARI_CsiIceBBSleepEnableReq_SDK(AriSdk::ARI_CsiIceBBSleepEnableReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4888000, 0);
  *(_QWORD *)result = &off_24C8DB780;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4888000, 0);
  *(_QWORD *)result = &off_24C8DB780;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBSleepEnableReq_SDK::ARI_CsiIceBBSleepEnableReq_SDK(AriSdk::ARI_CsiIceBBSleepEnableReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB780;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB780;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceBBSleepEnableReq_SDK::~ARI_CsiIceBBSleepEnableReq_SDK(AriSdk::ARI_CsiIceBBSleepEnableReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB780;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceBBSleepEnableReq_SDK::~ARI_CsiIceBBSleepEnableReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceBBSleepEnableReq_SDK::pack(AriSdk::ARI_CsiIceBBSleepEnableReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceBBSleepEnableReq_SDK::unpack(AriSdk::ARI_CsiIceBBSleepEnableReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1951B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceBBSleepEnableReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceBBSleepEnableReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192380928;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK::ARI_CsiIceBBSleepEnableRspCb_SDK(AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5088000, 0);
  *(_QWORD *)result = &off_24C8DB7B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5088000, 0);
  *(_QWORD *)result = &off_24C8DB7B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK::ARI_CsiIceBBSleepEnableRspCb_SDK(AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB7B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB7B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK::~ARI_CsiIceBBSleepEnableRspCb_SDK(AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB7B8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK::~ARI_CsiIceBBSleepEnableRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK::pack(AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK::unpack(AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E195434(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceBBSleepEnableRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183992320;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBTxStateInd_SDK::ARI_CsiIceBBTxStateInd_SDK(AriSdk::ARI_CsiIceBBTxStateInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5858000, 0);
  *(_QWORD *)result = &off_24C8DB7F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5858000, 0);
  *(_QWORD *)result = &off_24C8DB7F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBTxStateInd_SDK::ARI_CsiIceBBTxStateInd_SDK(AriSdk::ARI_CsiIceBBTxStateInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB7F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB7F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceBBTxStateInd_SDK::~ARI_CsiIceBBTxStateInd_SDK(AriSdk::ARI_CsiIceBBTxStateInd_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB7F0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceBBTxStateInd_SDK::~ARI_CsiIceBBTxStateInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceBBTxStateInd_SDK::pack(AriSdk::ARI_CsiIceBBTxStateInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceBBTxStateInd_SDK::unpack(AriSdk::ARI_CsiIceBBTxStateInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1956B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceBBTxStateInd_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceBBTxStateInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -175800320;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK::ARI_CsiIceBBTxStateIndEnableReq_SDK(AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4860000, 0);
  *(_QWORD *)result = &off_24C8DB828;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4860000, 0);
  *(_QWORD *)result = &off_24C8DB828;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK::ARI_CsiIceBBTxStateIndEnableReq_SDK(AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB828;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB828;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK::~ARI_CsiIceBBTxStateIndEnableReq_SDK(AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB828;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK::~ARI_CsiIceBBTxStateIndEnableReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK::pack(AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK::unpack(AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19592C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceBBTxStateIndEnableReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192544768;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK::ARI_CsiIceBBTxStateIndEnableRspCb_SDK(AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5060000, 0);
  *(_QWORD *)result = &off_24C8DB860;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5060000, 0);
  *(_QWORD *)result = &off_24C8DB860;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK::ARI_CsiIceBBTxStateIndEnableRspCb_SDK(AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB860;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB860;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK::~ARI_CsiIceBBTxStateIndEnableRspCb_SDK(AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB860;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK::~ARI_CsiIceBBTxStateIndEnableRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK::pack(AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK::unpack(AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E195BA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceBBTxStateIndEnableRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184156160;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceCaEnableReq_SDK::ARI_CsiIceCaEnableReq_SDK(AriSdk::ARI_CsiIceCaEnableReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4898000, 0);
  *(_QWORD *)result = &off_24C8DB898;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4898000, 0);
  *(_QWORD *)result = &off_24C8DB898;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceCaEnableReq_SDK::ARI_CsiIceCaEnableReq_SDK(AriSdk::ARI_CsiIceCaEnableReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB898;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB898;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceCaEnableReq_SDK::~ARI_CsiIceCaEnableReq_SDK(AriSdk::ARI_CsiIceCaEnableReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB898;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceCaEnableReq_SDK::~ARI_CsiIceCaEnableReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceCaEnableReq_SDK::pack(AriSdk::ARI_CsiIceCaEnableReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceCaEnableReq_SDK::unpack(AriSdk::ARI_CsiIceCaEnableReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E195E1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceCaEnableReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceCaEnableReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192315392;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceCaEnableRspCb_SDK::ARI_CsiIceCaEnableRspCb_SDK(AriSdk::ARI_CsiIceCaEnableRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5098000, 0);
  *(_QWORD *)result = &off_24C8DB8D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5098000, 0);
  *(_QWORD *)result = &off_24C8DB8D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceCaEnableRspCb_SDK::ARI_CsiIceCaEnableRspCb_SDK(AriSdk::ARI_CsiIceCaEnableRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB8D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB8D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceCaEnableRspCb_SDK::~ARI_CsiIceCaEnableRspCb_SDK(AriSdk::ARI_CsiIceCaEnableRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB8D0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceCaEnableRspCb_SDK::~ARI_CsiIceCaEnableRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceCaEnableRspCb_SDK::pack(AriSdk::ARI_CsiIceCaEnableRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceCaEnableRspCb_SDK::unpack(AriSdk::ARI_CsiIceCaEnableRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19609C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceCaEnableRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceCaEnableRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183926784;
}

double AriSdk::ARI_CsiIceCltmReq_SDK::ARI_CsiIceCltmReq_SDK(AriSdk::ARI_CsiIceCltmReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF4820000, 0);
  *(_QWORD *)v1 = &off_24C8DB908;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF4820000, 0);
  *(_QWORD *)v1 = &off_24C8DB908;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceCltmReq_SDK::ARI_CsiIceCltmReq_SDK(AriSdk::ARI_CsiIceCltmReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8DB908;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8DB908;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceCltmReq_SDK::~ARI_CsiIceCltmReq_SDK(AriSdk::ARI_CsiIceCltmReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8DB908;
  v2 = (void *)*((_QWORD *)this + 11);
  if (v2)
  {
    *((_QWORD *)this + 12) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceCltmReq_SDK::~ARI_CsiIceCltmReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceCltmReq_SDK::pack(AriSdk::ARI_CsiIceCltmReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceCltmReq_SDK::unpack(AriSdk::ARI_CsiIceCltmReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _OWORD *v7;
  void *__p[3];
  unint64_t v10;
  BOOL v11;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v10 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  *((_QWORD *)v7 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 40, &v11, &v10);
  if (!(_DWORD)v3 && v11)
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBI_CPMS_POWER_BUDGET>::__init_with_size[abi:ne180100]<IBI_CPMS_POWER_BUDGET*,IBI_CPMS_POWER_BUDGET*>(__p, v7, (uint64_t)v7 + 8 * (v10 >> 3), v10 >> 3);
    AriSdk::TlvArray<IBI_CPMS_POWER_BUDGET,5ul>::operator=((uint64_t)this + 88, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
  }
  MEMORY[0x212BB9B48](v7, 0x1000C8000313F17);
  return v3;
}

void sub_20E1965E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C8000313F17);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::TlvArray<IBI_CPMS_POWER_BUDGET,5ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if ((unint64_t)(v4 - *a2) < 0x29)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, (a2[1] - *a2) >> 3, 5);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E19673C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_CsiIceCltmReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceCltmReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192806912;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceCltmRspCb_SDK::ARI_CsiIceCltmRspCb_SDK(AriSdk::ARI_CsiIceCltmRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5020000, 0);
  *(_QWORD *)result = &off_24C8DB940;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5020000, 0);
  *(_QWORD *)result = &off_24C8DB940;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceCltmRspCb_SDK::ARI_CsiIceCltmRspCb_SDK(AriSdk::ARI_CsiIceCltmRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB940;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB940;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceCltmRspCb_SDK::~ARI_CsiIceCltmRspCb_SDK(AriSdk::ARI_CsiIceCltmRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DB940;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceCltmRspCb_SDK::~ARI_CsiIceCltmRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceCltmRspCb_SDK::pack(AriSdk::ARI_CsiIceCltmRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceCltmRspCb_SDK::unpack(AriSdk::ARI_CsiIceCltmRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1969A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceCltmRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceCltmRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184418304;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetAntennaStateReq_SDK::ARI_CsiIceGetAntennaStateReq_SDK(AriSdk::ARI_CsiIceGetAntennaStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4870000, 0);
  *(_QWORD *)result = &off_24C8DB978;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4870000, 0);
  *(_QWORD *)result = &off_24C8DB978;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetAntennaStateReq_SDK::ARI_CsiIceGetAntennaStateReq_SDK(AriSdk::ARI_CsiIceGetAntennaStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB978;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB978;
  return result;
}

void AriSdk::ARI_CsiIceGetAntennaStateReq_SDK::~ARI_CsiIceGetAntennaStateReq_SDK(AriSdk::ARI_CsiIceGetAntennaStateReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetAntennaStateReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceGetAntennaStateReq_SDK::unpack(AriSdk::ARI_CsiIceGetAntennaStateReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceGetAntennaStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetAntennaStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192479232;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK::ARI_CsiIceGetAntennaStateRspCb_SDK(AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5070000, 0);
  *(_QWORD *)result = &off_24C8DB9B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5070000, 0);
  *(_QWORD *)result = &off_24C8DB9B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK::ARI_CsiIceGetAntennaStateRspCb_SDK(AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB9B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB9B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK::~ARI_CsiIceGetAntennaStateRspCb_SDK(AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DB9B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK::~ARI_CsiIceGetAntennaStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK::pack(AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK::unpack(AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E196E90(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetAntennaStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184090624;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArfcnLockReq_SDK::ARI_CsiIceGetArfcnLockReq_SDK(AriSdk::ARI_CsiIceGetArfcnLockReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48B0000, 0);
  *(_QWORD *)result = &off_24C8DB9E8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48B0000, 0);
  *(_QWORD *)result = &off_24C8DB9E8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArfcnLockReq_SDK::ARI_CsiIceGetArfcnLockReq_SDK(AriSdk::ARI_CsiIceGetArfcnLockReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB9E8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DB9E8;
  return result;
}

void AriSdk::ARI_CsiIceGetArfcnLockReq_SDK::~ARI_CsiIceGetArfcnLockReq_SDK(AriSdk::ARI_CsiIceGetArfcnLockReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetArfcnLockReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceGetArfcnLockReq_SDK::unpack(AriSdk::ARI_CsiIceGetArfcnLockReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceGetArfcnLockReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetArfcnLockReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192217088;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK::ARI_CsiIceGetArfcnLockRspCb_SDK(AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50B0000, 0);
  *(_QWORD *)result = &off_24C8DBA20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50B0000, 0);
  *(_QWORD *)result = &off_24C8DBA20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK::ARI_CsiIceGetArfcnLockRspCb_SDK(AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBA20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBA20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK::~ARI_CsiIceGetArfcnLockRspCb_SDK(AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8DBA20;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK::~ARI_CsiIceGetArfcnLockRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK::pack(AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK::unpack(AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1974A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetArfcnLockRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183828480;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArtdSettingReq_SDK::ARI_CsiIceGetArtdSettingReq_SDK(AriSdk::ARI_CsiIceGetArtdSettingReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48C8000, 0);
  *(_QWORD *)result = &off_24C8DBA58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48C8000, 0);
  *(_QWORD *)result = &off_24C8DBA58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArtdSettingReq_SDK::ARI_CsiIceGetArtdSettingReq_SDK(AriSdk::ARI_CsiIceGetArtdSettingReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBA58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBA58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetArtdSettingReq_SDK::~ARI_CsiIceGetArtdSettingReq_SDK(AriSdk::ARI_CsiIceGetArtdSettingReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBA58;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetArtdSettingReq_SDK::~ARI_CsiIceGetArtdSettingReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetArtdSettingReq_SDK::pack(AriSdk::ARI_CsiIceGetArtdSettingReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetArtdSettingReq_SDK::unpack(AriSdk::ARI_CsiIceGetArtdSettingReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19772C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetArtdSettingReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetArtdSettingReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192118784;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK::ARI_CsiIceGetArtdSettingRspCb_SDK(AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50C8000, 0);
  *(_QWORD *)result = &off_24C8DBA90;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50C8000, 0);
  *(_QWORD *)result = &off_24C8DBA90;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK::ARI_CsiIceGetArtdSettingRspCb_SDK(AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBA90;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBA90;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK::~ARI_CsiIceGetArtdSettingRspCb_SDK(AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8DBA90;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK::~ARI_CsiIceGetArtdSettingRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK::pack(AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK::unpack(AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E197B9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetArtdSettingRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183730176;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetCaEnableReq_SDK::ARI_CsiIceGetCaEnableReq_SDK(AriSdk::ARI_CsiIceGetCaEnableReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48A0000, 0);
  *(_QWORD *)result = &off_24C8DBAC8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48A0000, 0);
  *(_QWORD *)result = &off_24C8DBAC8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetCaEnableReq_SDK::ARI_CsiIceGetCaEnableReq_SDK(AriSdk::ARI_CsiIceGetCaEnableReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBAC8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBAC8;
  return result;
}

void AriSdk::ARI_CsiIceGetCaEnableReq_SDK::~ARI_CsiIceGetCaEnableReq_SDK(AriSdk::ARI_CsiIceGetCaEnableReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetCaEnableReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceGetCaEnableReq_SDK::unpack(AriSdk::ARI_CsiIceGetCaEnableReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceGetCaEnableReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetCaEnableReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192282624;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK::ARI_CsiIceGetCaEnableRspCb_SDK(AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50A0000, 0);
  *(_QWORD *)result = &off_24C8DBB00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50A0000, 0);
  *(_QWORD *)result = &off_24C8DBB00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK::ARI_CsiIceGetCaEnableRspCb_SDK(AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBB00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBB00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK::~ARI_CsiIceGetCaEnableRspCb_SDK(AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DBB00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK::~ARI_CsiIceGetCaEnableRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK::pack(AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK::unpack(AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1980D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetCaEnableRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183894016;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetRxDiversityReq_SDK::ARI_CsiIceGetRxDiversityReq_SDK(AriSdk::ARI_CsiIceGetRxDiversityReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48A8000, 0);
  *(_QWORD *)result = &off_24C8DBB38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48A8000, 0);
  *(_QWORD *)result = &off_24C8DBB38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetRxDiversityReq_SDK::ARI_CsiIceGetRxDiversityReq_SDK(AriSdk::ARI_CsiIceGetRxDiversityReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBB38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBB38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetRxDiversityReq_SDK::~ARI_CsiIceGetRxDiversityReq_SDK(AriSdk::ARI_CsiIceGetRxDiversityReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBB38;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetRxDiversityReq_SDK::~ARI_CsiIceGetRxDiversityReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetRxDiversityReq_SDK::pack(AriSdk::ARI_CsiIceGetRxDiversityReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetRxDiversityReq_SDK::unpack(AriSdk::ARI_CsiIceGetRxDiversityReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E198358(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetRxDiversityReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetRxDiversityReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192249856;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK::ARI_CsiIceGetRxDiversityRspCb_SDK(AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50A8000, 0);
  *(_QWORD *)result = &off_24C8DBB70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50A8000, 0);
  *(_QWORD *)result = &off_24C8DBB70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK::ARI_CsiIceGetRxDiversityRspCb_SDK(AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBB70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBB70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK::~ARI_CsiIceGetRxDiversityRspCb_SDK(AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8DBB70;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK::~ARI_CsiIceGetRxDiversityRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK::pack(AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK::unpack(AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1987C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetRxDiversityRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183861248;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetTxAntennaReq_SDK::ARI_CsiIceGetTxAntennaReq_SDK(AriSdk::ARI_CsiIceGetTxAntennaReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48C0000, 0);
  *(_QWORD *)result = &off_24C8DBBA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48C0000, 0);
  *(_QWORD *)result = &off_24C8DBBA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetTxAntennaReq_SDK::ARI_CsiIceGetTxAntennaReq_SDK(AriSdk::ARI_CsiIceGetTxAntennaReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBBA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBBA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetTxAntennaReq_SDK::~ARI_CsiIceGetTxAntennaReq_SDK(AriSdk::ARI_CsiIceGetTxAntennaReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBBA8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetTxAntennaReq_SDK::~ARI_CsiIceGetTxAntennaReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetTxAntennaReq_SDK::pack(AriSdk::ARI_CsiIceGetTxAntennaReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetTxAntennaReq_SDK::unpack(AriSdk::ARI_CsiIceGetTxAntennaReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E198A50(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetTxAntennaReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetTxAntennaReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192151552;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK::ARI_CsiIceGetTxAntennaRspCb_SDK(AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50C0000, 0);
  *(_QWORD *)result = &off_24C8DBBE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50C0000, 0);
  *(_QWORD *)result = &off_24C8DBBE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK::ARI_CsiIceGetTxAntennaRspCb_SDK(AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBBE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBBE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK::~ARI_CsiIceGetTxAntennaRspCb_SDK(AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DBBE0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK::~ARI_CsiIceGetTxAntennaRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK::pack(AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK::unpack(AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E198D98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetTxAntennaRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183762944;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGpsStateReq_SDK::ARI_CsiIceGpsStateReq_SDK(AriSdk::ARI_CsiIceGpsStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48F0000, 0);
  *(_QWORD *)result = &off_24C8DBC18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48F0000, 0);
  *(_QWORD *)result = &off_24C8DBC18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGpsStateReq_SDK::ARI_CsiIceGpsStateReq_SDK(AriSdk::ARI_CsiIceGpsStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBC18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBC18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGpsStateReq_SDK::~ARI_CsiIceGpsStateReq_SDK(AriSdk::ARI_CsiIceGpsStateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBC18;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGpsStateReq_SDK::~ARI_CsiIceGpsStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGpsStateReq_SDK::pack(AriSdk::ARI_CsiIceGpsStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGpsStateReq_SDK::unpack(AriSdk::ARI_CsiIceGpsStateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E199014(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGpsStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGpsStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191954944;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGpsStateRspCb_SDK::ARI_CsiIceGpsStateRspCb_SDK(AriSdk::ARI_CsiIceGpsStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50F0000, 0);
  *(_QWORD *)result = &off_24C8DBC50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50F0000, 0);
  *(_QWORD *)result = &off_24C8DBC50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGpsStateRspCb_SDK::ARI_CsiIceGpsStateRspCb_SDK(AriSdk::ARI_CsiIceGpsStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBC50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBC50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGpsStateRspCb_SDK::~ARI_CsiIceGpsStateRspCb_SDK(AriSdk::ARI_CsiIceGpsStateRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBC50;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGpsStateRspCb_SDK::~ARI_CsiIceGpsStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGpsStateRspCb_SDK::pack(AriSdk::ARI_CsiIceGpsStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGpsStateRspCb_SDK::unpack(AriSdk::ARI_CsiIceGpsStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E199288(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGpsStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGpsStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183566336;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGripStateReq_SDK::ARI_CsiIceGripStateReq_SDK(AriSdk::ARI_CsiIceGripStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48E8000, 0);
  *(_QWORD *)result = &off_24C8DBC88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48E8000, 0);
  *(_QWORD *)result = &off_24C8DBC88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGripStateReq_SDK::ARI_CsiIceGripStateReq_SDK(AriSdk::ARI_CsiIceGripStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBC88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBC88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGripStateReq_SDK::~ARI_CsiIceGripStateReq_SDK(AriSdk::ARI_CsiIceGripStateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBC88;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGripStateReq_SDK::~ARI_CsiIceGripStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGripStateReq_SDK::pack(AriSdk::ARI_CsiIceGripStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGripStateReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19953C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGripStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGripStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191987712;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGripStateRspCb_SDK::ARI_CsiIceGripStateRspCb_SDK(AriSdk::ARI_CsiIceGripStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50E8000, 0);
  *(_QWORD *)result = &off_24C8DBCC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50E8000, 0);
  *(_QWORD *)result = &off_24C8DBCC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGripStateRspCb_SDK::ARI_CsiIceGripStateRspCb_SDK(AriSdk::ARI_CsiIceGripStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBCC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBCC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGripStateRspCb_SDK::~ARI_CsiIceGripStateRspCb_SDK(AriSdk::ARI_CsiIceGripStateRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBCC0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGripStateRspCb_SDK::~ARI_CsiIceGripStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGripStateRspCb_SDK::pack(AriSdk::ARI_CsiIceGripStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGripStateRspCb_SDK::unpack(AriSdk::ARI_CsiIceGripStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1997BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGripStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGripStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183599104;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceHearingAidReq_SDK::ARI_CsiIceHearingAidReq_SDK(AriSdk::ARI_CsiIceHearingAidReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4808000, 0);
  *(_QWORD *)result = &off_24C8DBCF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4808000, 0);
  *(_QWORD *)result = &off_24C8DBCF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceHearingAidReq_SDK::ARI_CsiIceHearingAidReq_SDK(AriSdk::ARI_CsiIceHearingAidReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBCF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBCF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceHearingAidReq_SDK::~ARI_CsiIceHearingAidReq_SDK(AriSdk::ARI_CsiIceHearingAidReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBCF8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceHearingAidReq_SDK::~ARI_CsiIceHearingAidReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceHearingAidReq_SDK::pack(AriSdk::ARI_CsiIceHearingAidReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceHearingAidReq_SDK::unpack(AriSdk::ARI_CsiIceHearingAidReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E199A3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceHearingAidReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceHearingAidReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192905216;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceHearingAidRspCb_SDK::ARI_CsiIceHearingAidRspCb_SDK(AriSdk::ARI_CsiIceHearingAidRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5008000, 0);
  *(_QWORD *)result = &off_24C8DBD30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5008000, 0);
  *(_QWORD *)result = &off_24C8DBD30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceHearingAidRspCb_SDK::ARI_CsiIceHearingAidRspCb_SDK(AriSdk::ARI_CsiIceHearingAidRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBD30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBD30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceHearingAidRspCb_SDK::~ARI_CsiIceHearingAidRspCb_SDK(AriSdk::ARI_CsiIceHearingAidRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBD30;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceHearingAidRspCb_SDK::~ARI_CsiIceHearingAidRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceHearingAidRspCb_SDK::pack(AriSdk::ARI_CsiIceHearingAidRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceHearingAidRspCb_SDK::unpack(AriSdk::ARI_CsiIceHearingAidRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E199CBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceHearingAidRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceHearingAidRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184516608;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIcePowerSourceStateReq_SDK::ARI_CsiIcePowerSourceStateReq_SDK(AriSdk::ARI_CsiIcePowerSourceStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48F8000, 0);
  *(_QWORD *)result = &off_24C8DBD68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48F8000, 0);
  *(_QWORD *)result = &off_24C8DBD68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIcePowerSourceStateReq_SDK::ARI_CsiIcePowerSourceStateReq_SDK(AriSdk::ARI_CsiIcePowerSourceStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBD68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBD68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIcePowerSourceStateReq_SDK::~ARI_CsiIcePowerSourceStateReq_SDK(AriSdk::ARI_CsiIcePowerSourceStateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBD68;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIcePowerSourceStateReq_SDK::~ARI_CsiIcePowerSourceStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIcePowerSourceStateReq_SDK::pack(AriSdk::ARI_CsiIcePowerSourceStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIcePowerSourceStateReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E199F74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIcePowerSourceStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIcePowerSourceStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191922176;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK::ARI_CsiIcePowerSourceStateRspCb_SDK(AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50F8000, 0);
  *(_QWORD *)result = &off_24C8DBDA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50F8000, 0);
  *(_QWORD *)result = &off_24C8DBDA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK::ARI_CsiIcePowerSourceStateRspCb_SDK(AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBDA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBDA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK::~ARI_CsiIcePowerSourceStateRspCb_SDK(AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBDA0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK::~ARI_CsiIcePowerSourceStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK::pack(AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK::unpack(AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19A1F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIcePowerSourceStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183533568;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRFFilerWriteReq_SDK::ARI_CsiIceRFFilerWriteReq_SDK(AriSdk::ARI_CsiIceRFFilerWriteReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4950000, 0);
  *(_QWORD *)result = &off_24C8DBDD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4950000, 0);
  *(_QWORD *)result = &off_24C8DBDD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRFFilerWriteReq_SDK::ARI_CsiIceRFFilerWriteReq_SDK(AriSdk::ARI_CsiIceRFFilerWriteReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBDD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBDD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceRFFilerWriteReq_SDK::~ARI_CsiIceRFFilerWriteReq_SDK(AriSdk::ARI_CsiIceRFFilerWriteReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DBDD8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceRFFilerWriteReq_SDK::~ARI_CsiIceRFFilerWriteReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceRFFilerWriteReq_SDK::pack(AriSdk::ARI_CsiIceRFFilerWriteReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceRFFilerWriteReq_SDK::unpack(AriSdk::ARI_CsiIceRFFilerWriteReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E19A540(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceRFFilerWriteReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceRFFilerWriteReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191561728;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK::ARI_CsiIceRFFilerWriteRspCb_SDK(AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5150000, 0);
  *(_QWORD *)result = &off_24C8DBE10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5150000, 0);
  *(_QWORD *)result = &off_24C8DBE10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK::ARI_CsiIceRFFilerWriteRspCb_SDK(AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBE10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBE10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK::~ARI_CsiIceRFFilerWriteRspCb_SDK(AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DBE10;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK::~ARI_CsiIceRFFilerWriteRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK::pack(AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK::unpack(AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E19A890(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceRFFilerWriteRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183173120;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRxDiversityReq_SDK::ARI_CsiIceRxDiversityReq_SDK(AriSdk::ARI_CsiIceRxDiversityReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4880000, 0);
  *(_QWORD *)result = &off_24C8DBE48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4880000, 0);
  *(_QWORD *)result = &off_24C8DBE48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRxDiversityReq_SDK::ARI_CsiIceRxDiversityReq_SDK(AriSdk::ARI_CsiIceRxDiversityReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBE48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBE48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceRxDiversityReq_SDK::~ARI_CsiIceRxDiversityReq_SDK(AriSdk::ARI_CsiIceRxDiversityReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DBE48;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceRxDiversityReq_SDK::~ARI_CsiIceRxDiversityReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceRxDiversityReq_SDK::pack(AriSdk::ARI_CsiIceRxDiversityReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceRxDiversityReq_SDK::unpack(AriSdk::ARI_CsiIceRxDiversityReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E19ABE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceRxDiversityReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceRxDiversityReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192413696;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRxDiversityRspCb_SDK::ARI_CsiIceRxDiversityRspCb_SDK(AriSdk::ARI_CsiIceRxDiversityRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5080000, 0);
  *(_QWORD *)result = &off_24C8DBE80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5080000, 0);
  *(_QWORD *)result = &off_24C8DBE80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceRxDiversityRspCb_SDK::ARI_CsiIceRxDiversityRspCb_SDK(AriSdk::ARI_CsiIceRxDiversityRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBE80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBE80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceRxDiversityRspCb_SDK::~ARI_CsiIceRxDiversityRspCb_SDK(AriSdk::ARI_CsiIceRxDiversityRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBE80;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceRxDiversityRspCb_SDK::~ARI_CsiIceRxDiversityRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceRxDiversityRspCb_SDK::pack(AriSdk::ARI_CsiIceRxDiversityRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceRxDiversityRspCb_SDK::unpack(AriSdk::ARI_CsiIceRxDiversityRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19AE5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceRxDiversityRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceRxDiversityRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184025088;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarReq_SDK::ARI_CsiIceSarReq_SDK(AriSdk::ARI_CsiIceSarReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4828000, 0);
  *(_QWORD *)result = &off_24C8DBEB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4828000, 0);
  *(_QWORD *)result = &off_24C8DBEB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarReq_SDK::ARI_CsiIceSarReq_SDK(AriSdk::ARI_CsiIceSarReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBEB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBEB8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSarReq_SDK::~ARI_CsiIceSarReq_SDK(AriSdk::ARI_CsiIceSarReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DBEB8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSarReq_SDK::~ARI_CsiIceSarReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSarReq_SDK::pack(AriSdk::ARI_CsiIceSarReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSarReq_SDK::unpack(AriSdk::ARI_CsiIceSarReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E19B1AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSarReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSarReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192774144;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarRspCb_SDK::ARI_CsiIceSarRspCb_SDK(AriSdk::ARI_CsiIceSarRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5028000, 0);
  *(_QWORD *)result = &off_24C8DBEF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5028000, 0);
  *(_QWORD *)result = &off_24C8DBEF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarRspCb_SDK::ARI_CsiIceSarRspCb_SDK(AriSdk::ARI_CsiIceSarRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBEF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBEF0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSarRspCb_SDK::~ARI_CsiIceSarRspCb_SDK(AriSdk::ARI_CsiIceSarRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBEF0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSarRspCb_SDK::~ARI_CsiIceSarRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSarRspCb_SDK::pack(AriSdk::ARI_CsiIceSarRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSarRspCb_SDK::unpack(AriSdk::ARI_CsiIceSarRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19B434(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSarRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSarRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184385536;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarEnableReq_SDK::ARI_CsiIceSarEnableReq_SDK(AriSdk::ARI_CsiIceSarEnableReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4850000, 0);
  *(_QWORD *)result = &off_24C8DBF28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4850000, 0);
  *(_QWORD *)result = &off_24C8DBF28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarEnableReq_SDK::ARI_CsiIceSarEnableReq_SDK(AriSdk::ARI_CsiIceSarEnableReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBF28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBF28;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSarEnableReq_SDK::~ARI_CsiIceSarEnableReq_SDK(AriSdk::ARI_CsiIceSarEnableReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBF28;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSarEnableReq_SDK::~ARI_CsiIceSarEnableReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSarEnableReq_SDK::pack(AriSdk::ARI_CsiIceSarEnableReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSarEnableReq_SDK::unpack(AriSdk::ARI_CsiIceSarEnableReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19B6AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSarEnableReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSarEnableReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192610304;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarEnableRspCb_SDK::ARI_CsiIceSarEnableRspCb_SDK(AriSdk::ARI_CsiIceSarEnableRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5050000, 0);
  *(_QWORD *)result = &off_24C8DBF60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5050000, 0);
  *(_QWORD *)result = &off_24C8DBF60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarEnableRspCb_SDK::ARI_CsiIceSarEnableRspCb_SDK(AriSdk::ARI_CsiIceSarEnableRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBF60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBF60;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSarEnableRspCb_SDK::~ARI_CsiIceSarEnableRspCb_SDK(AriSdk::ARI_CsiIceSarEnableRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBF60;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSarEnableRspCb_SDK::~ARI_CsiIceSarEnableRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSarEnableRspCb_SDK::pack(AriSdk::ARI_CsiIceSarEnableRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSarEnableRspCb_SDK::unpack(AriSdk::ARI_CsiIceSarEnableRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19B920(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSarEnableRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSarEnableRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184221696;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarWaitTimeReq_SDK::ARI_CsiIceSarWaitTimeReq_SDK(AriSdk::ARI_CsiIceSarWaitTimeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4830000, 0);
  *(_QWORD *)result = &off_24C8DBF98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4830000, 0);
  *(_QWORD *)result = &off_24C8DBF98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarWaitTimeReq_SDK::ARI_CsiIceSarWaitTimeReq_SDK(AriSdk::ARI_CsiIceSarWaitTimeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBF98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBF98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSarWaitTimeReq_SDK::~ARI_CsiIceSarWaitTimeReq_SDK(AriSdk::ARI_CsiIceSarWaitTimeReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBF98;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSarWaitTimeReq_SDK::~ARI_CsiIceSarWaitTimeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSarWaitTimeReq_SDK::pack(AriSdk::ARI_CsiIceSarWaitTimeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSarWaitTimeReq_SDK::unpack(AriSdk::ARI_CsiIceSarWaitTimeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19BB94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSarWaitTimeReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSarWaitTimeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192741376;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK::ARI_CsiIceSarWaitTimeRspCb_SDK(AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5030000, 0);
  *(_QWORD *)result = &off_24C8DBFD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5030000, 0);
  *(_QWORD *)result = &off_24C8DBFD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK::ARI_CsiIceSarWaitTimeRspCb_SDK(AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBFD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DBFD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK::~ARI_CsiIceSarWaitTimeRspCb_SDK(AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DBFD0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK::~ARI_CsiIceSarWaitTimeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK::pack(AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK::unpack(AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19BE08(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSarWaitTimeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184352768;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSetTxAntennaReq_SDK::ARI_CsiIceSetTxAntennaReq_SDK(AriSdk::ARI_CsiIceSetTxAntennaReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48B8000, 0);
  *(_QWORD *)result = &off_24C8DC008;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48B8000, 0);
  *(_QWORD *)result = &off_24C8DC008;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSetTxAntennaReq_SDK::ARI_CsiIceSetTxAntennaReq_SDK(AriSdk::ARI_CsiIceSetTxAntennaReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC008;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC008;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSetTxAntennaReq_SDK::~ARI_CsiIceSetTxAntennaReq_SDK(AriSdk::ARI_CsiIceSetTxAntennaReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DC008;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSetTxAntennaReq_SDK::~ARI_CsiIceSetTxAntennaReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSetTxAntennaReq_SDK::pack(AriSdk::ARI_CsiIceSetTxAntennaReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSetTxAntennaReq_SDK::unpack(AriSdk::ARI_CsiIceSetTxAntennaReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E19C158(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSetTxAntennaReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSetTxAntennaReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192184320;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK::ARI_CsiIceSetTxAntennaRspCb_SDK(AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50B8000, 0);
  *(_QWORD *)result = &off_24C8DC040;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50B8000, 0);
  *(_QWORD *)result = &off_24C8DC040;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK::ARI_CsiIceSetTxAntennaRspCb_SDK(AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC040;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC040;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK::~ARI_CsiIceSetTxAntennaRspCb_SDK(AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC040;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK::~ARI_CsiIceSetTxAntennaRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK::pack(AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK::unpack(AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19C3E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSetTxAntennaRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183795712;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSpeakerStateReq_SDK::ARI_CsiIceSpeakerStateReq_SDK(AriSdk::ARI_CsiIceSpeakerStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48D8000, 0);
  *(_QWORD *)result = &off_24C8DC078;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48D8000, 0);
  *(_QWORD *)result = &off_24C8DC078;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSpeakerStateReq_SDK::ARI_CsiIceSpeakerStateReq_SDK(AriSdk::ARI_CsiIceSpeakerStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC078;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC078;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSpeakerStateReq_SDK::~ARI_CsiIceSpeakerStateReq_SDK(AriSdk::ARI_CsiIceSpeakerStateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC078;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSpeakerStateReq_SDK::~ARI_CsiIceSpeakerStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSpeakerStateReq_SDK::pack(AriSdk::ARI_CsiIceSpeakerStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSpeakerStateReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19C698(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSpeakerStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSpeakerStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192053248;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK::ARI_CsiIceSpeakerStateRspCb_SDK(AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50D8000, 0);
  *(_QWORD *)result = &off_24C8DC0B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50D8000, 0);
  *(_QWORD *)result = &off_24C8DC0B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK::ARI_CsiIceSpeakerStateRspCb_SDK(AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC0B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC0B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK::~ARI_CsiIceSpeakerStateRspCb_SDK(AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC0B0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK::~ARI_CsiIceSpeakerStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK::pack(AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK::unpack(AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19C918(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSpeakerStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183664640;
}

double AriSdk::ARI_CsiIceTemperatureReq_SDK::ARI_CsiIceTemperatureReq_SDK(AriSdk::ARI_CsiIceTemperatureReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF4838000, 0);
  *(_QWORD *)v1 = &off_24C8DC0E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF4838000, 0);
  *(_QWORD *)v1 = &off_24C8DC0E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceTemperatureReq_SDK::ARI_CsiIceTemperatureReq_SDK(AriSdk::ARI_CsiIceTemperatureReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8DC0E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8DC0E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceTemperatureReq_SDK::~ARI_CsiIceTemperatureReq_SDK(AriSdk::ARI_CsiIceTemperatureReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8DC0E8;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceTemperatureReq_SDK::~ARI_CsiIceTemperatureReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceTemperatureReq_SDK::pack(AriSdk::ARI_CsiIceTemperatureReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceTemperatureReq_SDK::unpack(AriSdk::ARI_CsiIceTemperatureReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E19CE24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceTemperatureReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceTemperatureReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192708608;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureRspCb_SDK::ARI_CsiIceTemperatureRspCb_SDK(AriSdk::ARI_CsiIceTemperatureRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5038000, 0);
  *(_QWORD *)result = &off_24C8DC120;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5038000, 0);
  *(_QWORD *)result = &off_24C8DC120;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureRspCb_SDK::ARI_CsiIceTemperatureRspCb_SDK(AriSdk::ARI_CsiIceTemperatureRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC120;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC120;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceTemperatureRspCb_SDK::~ARI_CsiIceTemperatureRspCb_SDK(AriSdk::ARI_CsiIceTemperatureRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8DC120;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceTemperatureRspCb_SDK::~ARI_CsiIceTemperatureRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceTemperatureRspCb_SDK::pack(AriSdk::ARI_CsiIceTemperatureRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceTemperatureRspCb_SDK::unpack(AriSdk::ARI_CsiIceTemperatureRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E19D274(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceTemperatureRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceTemperatureRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184320000;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureCloseReq_SDK::ARI_CsiIceTemperatureCloseReq_SDK(AriSdk::ARI_CsiIceTemperatureCloseReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4840000, 0);
  *(_QWORD *)result = &off_24C8DC158;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4840000, 0);
  *(_QWORD *)result = &off_24C8DC158;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureCloseReq_SDK::ARI_CsiIceTemperatureCloseReq_SDK(AriSdk::ARI_CsiIceTemperatureCloseReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC158;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC158;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceTemperatureCloseReq_SDK::~ARI_CsiIceTemperatureCloseReq_SDK(AriSdk::ARI_CsiIceTemperatureCloseReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DC158;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceTemperatureCloseReq_SDK::~ARI_CsiIceTemperatureCloseReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceTemperatureCloseReq_SDK::pack(AriSdk::ARI_CsiIceTemperatureCloseReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceTemperatureCloseReq_SDK::unpack(AriSdk::ARI_CsiIceTemperatureCloseReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E19D5D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceTemperatureCloseReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceTemperatureCloseReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192675840;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK::ARI_CsiIceTemperatureCloseRspCb_SDK(AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5040000, 0);
  *(_QWORD *)result = &off_24C8DC190;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5040000, 0);
  *(_QWORD *)result = &off_24C8DC190;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK::ARI_CsiIceTemperatureCloseRspCb_SDK(AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC190;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC190;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK::~ARI_CsiIceTemperatureCloseRspCb_SDK(AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC190;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK::~ARI_CsiIceTemperatureCloseRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK::pack(AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK::unpack(AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19D84C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceTemperatureCloseRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -184287232;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureIndCb_SDK::ARI_CsiIceTemperatureIndCb_SDK(AriSdk::ARI_CsiIceTemperatureIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5838000, 0);
  *(_QWORD *)result = &off_24C8DC1C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5838000, 0);
  *(_QWORD *)result = &off_24C8DC1C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceTemperatureIndCb_SDK::ARI_CsiIceTemperatureIndCb_SDK(AriSdk::ARI_CsiIceTemperatureIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC1C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC1C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceTemperatureIndCb_SDK::~ARI_CsiIceTemperatureIndCb_SDK(AriSdk::ARI_CsiIceTemperatureIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8DC1C8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceTemperatureIndCb_SDK::~ARI_CsiIceTemperatureIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceTemperatureIndCb_SDK::pack(AriSdk::ARI_CsiIceTemperatureIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceTemperatureIndCb_SDK::unpack(AriSdk::ARI_CsiIceTemperatureIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E19DC80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceTemperatureIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceTemperatureIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -175931392;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWakeupReasonReq_SDK::ARI_CsiIceWakeupReasonReq_SDK(AriSdk::ARI_CsiIceWakeupReasonReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4890000, 0);
  *(_QWORD *)result = &off_24C8DC200;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4890000, 0);
  *(_QWORD *)result = &off_24C8DC200;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWakeupReasonReq_SDK::ARI_CsiIceWakeupReasonReq_SDK(AriSdk::ARI_CsiIceWakeupReasonReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC200;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC200;
  return result;
}

void AriSdk::ARI_CsiIceWakeupReasonReq_SDK::~ARI_CsiIceWakeupReasonReq_SDK(AriSdk::ARI_CsiIceWakeupReasonReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceWakeupReasonReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceWakeupReasonReq_SDK::unpack(AriSdk::ARI_CsiIceWakeupReasonReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceWakeupReasonReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceWakeupReasonReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192348160;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK::ARI_CsiIceWakeupReasonRspCb_SDK(AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5090000, 0);
  *(_QWORD *)result = &off_24C8DC238;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5090000, 0);
  *(_QWORD *)result = &off_24C8DC238;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK::ARI_CsiIceWakeupReasonRspCb_SDK(AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC238;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC238;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK::~ARI_CsiIceWakeupReasonRspCb_SDK(AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DC238;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40AB7D74EDLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK::~ARI_CsiIceWakeupReasonRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK::pack(AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x8CuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK::unpack(AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  *(_OWORD *)((char *)v5 + 124) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 140, &v13, 0);
  if (!(_DWORD)v3 && v13)
  {
    v6 = (_OWORD *)operator new();
    v7 = v5[7];
    v6[6] = v5[6];
    v6[7] = v7;
    *(_OWORD *)((char *)v6 + 124) = *(_OWORD *)((char *)v5 + 124);
    v8 = v5[3];
    v6[2] = v5[2];
    v6[3] = v8;
    v9 = v5[5];
    v6[4] = v5[4];
    v6[5] = v9;
    v10 = v5[1];
    *v6 = *v5;
    v6[1] = v10;
    v11 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40AB7D74EDLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40AB7D74EDLL);
  return v3;
}

void sub_20E19E1EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40AB7D74EDLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceWakeupReasonRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183959552;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWristStateReq_SDK::ARI_CsiIceWristStateReq_SDK(AriSdk::ARI_CsiIceWristStateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4900000, 0);
  *(_QWORD *)result = &off_24C8DC270;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4900000, 0);
  *(_QWORD *)result = &off_24C8DC270;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWristStateReq_SDK::ARI_CsiIceWristStateReq_SDK(AriSdk::ARI_CsiIceWristStateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC270;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC270;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceWristStateReq_SDK::~ARI_CsiIceWristStateReq_SDK(AriSdk::ARI_CsiIceWristStateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC270;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceWristStateReq_SDK::~ARI_CsiIceWristStateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceWristStateReq_SDK::pack(AriSdk::ARI_CsiIceWristStateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceWristStateReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19E4B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceWristStateReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceWristStateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191889408;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWristStateRspCb_SDK::ARI_CsiIceWristStateRspCb_SDK(AriSdk::ARI_CsiIceWristStateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5100000, 0);
  *(_QWORD *)result = &off_24C8DC2A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5100000, 0);
  *(_QWORD *)result = &off_24C8DC2A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceWristStateRspCb_SDK::ARI_CsiIceWristStateRspCb_SDK(AriSdk::ARI_CsiIceWristStateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC2A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC2A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceWristStateRspCb_SDK::~ARI_CsiIceWristStateRspCb_SDK(AriSdk::ARI_CsiIceWristStateRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC2A8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceWristStateRspCb_SDK::~ARI_CsiIceWristStateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceWristStateRspCb_SDK::pack(AriSdk::ARI_CsiIceWristStateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceWristStateRspCb_SDK::unpack(AriSdk::ARI_CsiIceWristStateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19E724(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceWristStateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceWristStateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183500800;
}

AriSdk::MsgBase *AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK::ARI_CsiPowSleepSetSleepBlockerReq_SDK(AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48E0000, 0);
  *(_QWORD *)result = &off_24C8DC2E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF48E0000, 0);
  *(_QWORD *)result = &off_24C8DC2E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK::ARI_CsiPowSleepSetSleepBlockerReq_SDK(AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC2E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC2E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK::~ARI_CsiPowSleepSetSleepBlockerReq_SDK(AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC2E0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK::~ARI_CsiPowSleepSetSleepBlockerReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK::pack(AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19E9D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiPowSleepSetSleepBlockerReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -192020480;
}

AriSdk::MsgBase *AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK(AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50E0000, 0);
  *(_QWORD *)result = &off_24C8DC318;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF50E0000, 0);
  *(_QWORD *)result = &off_24C8DC318;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK(AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC318;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC318;
  return result;
}

void AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK::~ARI_CsiPowSleepSetSleepBlockerRspCb_SDK(AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK::unpack(AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiPowSleepSetSleepBlockerRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183631872;
}

AriSdk::MsgBase *AriSdk::ARI_IBICPMSPowerQueryReq_SDK::ARI_IBICPMSPowerQueryReq_SDK(AriSdk::ARI_IBICPMSPowerQueryReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4918000, 0);
  *(_QWORD *)result = &off_24C8DC350;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4918000, 0);
  *(_QWORD *)result = &off_24C8DC350;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICPMSPowerQueryReq_SDK::ARI_IBICPMSPowerQueryReq_SDK(AriSdk::ARI_IBICPMSPowerQueryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC350;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC350;
  return result;
}

void AriSdk::ARI_IBICPMSPowerQueryReq_SDK::~ARI_IBICPMSPowerQueryReq_SDK(AriSdk::ARI_IBICPMSPowerQueryReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICPMSPowerQueryReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_IBICPMSPowerQueryReq_SDK::unpack(AriSdk::ARI_IBICPMSPowerQueryReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBICPMSPowerQueryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICPMSPowerQueryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191791104;
}

AriSdk::MsgBase *AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK::ARI_IBICPMSPowerQueryRspCb_SDK(AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5118000, 0);
  *(_QWORD *)result = &off_24C8DC388;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5118000, 0);
  *(_QWORD *)result = &off_24C8DC388;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK::ARI_IBICPMSPowerQueryRspCb_SDK(AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC388;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC388;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK::~ARI_IBICPMSPowerQueryRspCb_SDK(AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK *this)
{
  void *v2;

  *(_QWORD *)this = &off_24C8DC388;
  v2 = (void *)*((_QWORD *)this + 8);
  if (v2)
  {
    *((_QWORD *)this + 9) = v2;
    operator delete(v2);
  }
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK::~ARI_IBICPMSPowerQueryRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK::pack(AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK *this, AriMsg **a2)
{
  _BYTE *v4;
  _BYTE *v5;
  BOOL v6;
  uint64_t result;

  *a2 = 0;
  v4 = (_BYTE *)*((_QWORD *)this + 8);
  v5 = (_BYTE *)*((_QWORD *)this + 9);
  if (v4)
    v6 = v4 == v5;
  else
    v6 = 1;
  if (v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, v5 - v4, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK::unpack(AriMsg **this)
{
  _OWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *__p[3];
  unint64_t v7;
  BOOL v8;

  v8 = 0;
  v7 = 0xAAAAAAAAAAAAAAAALL;
  v2 = (_OWORD *)operator new[]();
  *v2 = 0u;
  v2[1] = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 40, &v8, &v7);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBI_CPMS_POWER_BUDGET>::__init_with_size[abi:ne180100]<IBI_CPMS_POWER_BUDGET*,IBI_CPMS_POWER_BUDGET*>(__p, v2, (uint64_t)v2 + 8 * (v7 >> 3), v7 >> 3);
    AriSdk::TlvArray<IBI_CPMS_POWER_BUDGET,5ul>::operator=((uint64_t)(this + 8), (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
  }
  MEMORY[0x212BB9B48](v2, 0x1000C8000313F17);
  return v3;
}

void sub_20E19EFE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C8000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICPMSPowerQueryRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183402496;
}

AriSdk::MsgBase *AriSdk::ARI_IBICpmsPowermWInd_SDK::ARI_IBICpmsPowermWInd_SDK(AriSdk::ARI_IBICpmsPowermWInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5860000, 0);
  *(_QWORD *)result = &off_24C8DC3C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5860000, 0);
  *(_QWORD *)result = &off_24C8DC3C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICpmsPowermWInd_SDK::ARI_IBICpmsPowermWInd_SDK(AriSdk::ARI_IBICpmsPowermWInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC3C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC3C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICpmsPowermWInd_SDK::~ARI_IBICpmsPowermWInd_SDK(AriSdk::ARI_IBICpmsPowermWInd_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC3C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICpmsPowermWInd_SDK::~ARI_IBICpmsPowermWInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICpmsPowermWInd_SDK::pack(AriSdk::ARI_IBICpmsPowermWInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICpmsPowermWInd_SDK::unpack(AriSdk::ARI_IBICpmsPowermWInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19F270(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICpmsPowermWInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBICpmsPowermWInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -175767552;
}

AriSdk::MsgBase *AriSdk::ARI_IBIGetRFFEScanDataReq_SDK::ARI_IBIGetRFFEScanDataReq_SDK(AriSdk::ARI_IBIGetRFFEScanDataReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4920000, 0);
  *(_QWORD *)result = &off_24C8DC3F8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4920000, 0);
  *(_QWORD *)result = &off_24C8DC3F8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIGetRFFEScanDataReq_SDK::ARI_IBIGetRFFEScanDataReq_SDK(AriSdk::ARI_IBIGetRFFEScanDataReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC3F8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC3F8;
  return result;
}

void AriSdk::ARI_IBIGetRFFEScanDataReq_SDK::~ARI_IBIGetRFFEScanDataReq_SDK(AriSdk::ARI_IBIGetRFFEScanDataReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIGetRFFEScanDataReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_IBIGetRFFEScanDataReq_SDK::unpack(AriSdk::ARI_IBIGetRFFEScanDataReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIGetRFFEScanDataReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIGetRFFEScanDataReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191758336;
}

double AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK::ARI_IBIGetRFFEScanDataRspCb_SDK(AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF5120000, 0);
  *(_QWORD *)v1 = &off_24C8DC430;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xF5120000, 0);
  *(_QWORD *)v1 = &off_24C8DC430;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK::ARI_IBIGetRFFEScanDataRspCb_SDK(AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8DC430;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8DC430;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK::~ARI_IBIGetRFFEScanDataRspCb_SDK(AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8DC430;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK::~ARI_IBIGetRFFEScanDataRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK::pack(AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK::unpack(AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x400uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1024, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,1024ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E19F79C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIGetRFFEScanDataRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183369728;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMccSettingReq_SDK::ARI_IBIMccSettingReq_SDK(AriSdk::ARI_IBIMccSettingReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4910000, 0);
  *(_QWORD *)result = &off_24C8DC468;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF4910000, 0);
  *(_QWORD *)result = &off_24C8DC468;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMccSettingReq_SDK::ARI_IBIMccSettingReq_SDK(AriSdk::ARI_IBIMccSettingReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC468;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC468;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMccSettingReq_SDK::~ARI_IBIMccSettingReq_SDK(AriSdk::ARI_IBIMccSettingReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8DC468;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMccSettingReq_SDK::~ARI_IBIMccSettingReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMccSettingReq_SDK::pack(AriSdk::ARI_IBIMccSettingReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMccSettingReq_SDK::unpack(AriSdk::ARI_IBIMccSettingReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E19FC04(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMccSettingReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMccSettingReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -191823872;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMccSettingRspCb_SDK::ARI_IBIMccSettingRspCb_SDK(AriSdk::ARI_IBIMccSettingRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5110000, 0);
  *(_QWORD *)result = &off_24C8DC4A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xF5110000, 0);
  *(_QWORD *)result = &off_24C8DC4A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMccSettingRspCb_SDK::ARI_IBIMccSettingRspCb_SDK(AriSdk::ARI_IBIMccSettingRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC4A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8DC4A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMccSettingRspCb_SDK::~ARI_IBIMccSettingRspCb_SDK(AriSdk::ARI_IBIMccSettingRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8DC4A0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMccSettingRspCb_SDK::~ARI_IBIMccSettingRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMccSettingRspCb_SDK::pack(AriSdk::ARI_IBIMccSettingRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMccSettingRspCb_SDK::unpack(AriSdk::ARI_IBIMccSettingRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E19FE88(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMccSettingRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMccSettingRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -183435264;
}

uint64_t ARI_CsiIceGetRxDiversityRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3, char *a4, char *a5)
{
  __int128 v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14[2];
  unint64_t v15;

  v15 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v8 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v8 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v13 = v8;
  *(_OWORD *)v14 = v8;
  v11 = v8;
  v12 = v8;
  AriMsg::AriMsg((AriMsg *)&v11, a1, a2);
  v9 = HIDWORD(v15);
  if (!HIDWORD(v15))
  {
    if (((DWORD1(v11) << 15) | ((_DWORD)v11 << 26)) == -183861248)
    {
      v9 = AriMsg::unparam((AriMsg *)&v11, 1, a3, 4uLL);
      if (!(_DWORD)v9)
      {
        v9 = AriMsg::unparam((AriMsg *)&v11, 2, a4, 4uLL);
        if (!(_DWORD)v9)
          v9 = AriMsg::unparam((AriMsg *)&v11, 3, a5, 4uLL);
      }
    }
    else
    {
      v9 = 4294967223;
    }
  }
  v14[0] = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v14[1]);
  return v9;
}

void sub_20E19FFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetRxDiversityReq_ENC(int a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v6;
  uint64_t v7;
  int *EncodedBuf;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  void *v13[2];
  unint64_t v14;
  int v15;

  v15 = a1;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v12 = v6;
  *(_OWORD *)v13 = v6;
  v10 = v6;
  v11 = v6;
  AriMsg::AriMsg((AriMsg *)&v10, 0xF48A8000);
  v7 = AriMsg::packParam((AriMsg *)&v10, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)v7)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v10, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v7 = 0;
      else
        v7 = 0xFFFFFFFFLL;
    }
    else
    {
      v7 = 0xFFFFFFFFLL;
    }
  }
  v13[0] = 0;
  v11 = 0u;
  v12 = 0u;
  v10 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v13[1]);
  return v7;
}

void sub_20E1A0090(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetRxDiversityReq_BLK(int a1, int *a2, uint64_t a3)
{
  __int128 v5;
  uint64_t Ctx;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  void *v11[2];
  unint64_t v12;
  int v13;

  v13 = a1;
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10 = v5;
  *(_OWORD *)v11 = v5;
  v8 = v5;
  v9 = v5;
  AriMsg::AriMsg((AriMsg *)&v8, 0xF48A8000);
  Ctx = AriMsg::packParam((AriMsg *)&v8, 1, (char *)&v13, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v8, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v8, a2);
  }
  v11[0] = 0;
  v9 = 0u;
  v10 = 0u;
  v8 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v11[1]);
  return Ctx;
}

void sub_20E1A016C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceRxDiversityRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -184025088)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1A0230(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceRxDiversityReq_ENC(int a1, int a2, uint64_t a3, int **a4, unsigned int *a5)
{
  __int128 v7;
  uint64_t v8;
  int *EncodedBuf;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14[2];
  unint64_t v15;
  int v16;
  int v17;

  v16 = a2;
  v17 = a1;
  v15 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v7 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v13 = v7;
  *(_OWORD *)v14 = v7;
  v11 = v7;
  v12 = v7;
  AriMsg::AriMsg((AriMsg *)&v11, 0xF4880000);
  v8 = AriMsg::packParam((AriMsg *)&v11, 1, (char *)&v17, 4uLL);
  if (!(_DWORD)v8)
  {
    v8 = AriMsg::packParam((AriMsg *)&v11, 2, (char *)&v16, 4uLL);
    if (!(_DWORD)v8)
    {
      if (a4)
      {
        EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v11, a5);
        *a4 = EncodedBuf;
        if (EncodedBuf)
          v8 = 0;
        else
          v8 = 0xFFFFFFFFLL;
      }
      else
      {
        v8 = 0xFFFFFFFFLL;
      }
    }
  }
  v14[0] = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v14[1]);
  return v8;
}

void sub_20E1A0314(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceRxDiversityReq_BLK(int a1, int a2, int *a3, uint64_t a4)
{
  __int128 v6;
  uint64_t Ctx;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;
  int v14;
  int v15;

  v14 = a2;
  v15 = a1;
  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, 0xF4880000);
  Ctx = AriMsg::packParam((AriMsg *)&v9, 1, (char *)&v15, 4uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriMsg::packParam((AriMsg *)&v9, 2, (char *)&v14, 4uLL);
    if (!(_DWORD)Ctx)
    {
      Ctx = AriHost::Send((AriMsg *)&v9, *a3, a4, 0, 20000);
      if (!(_DWORD)Ctx)
        Ctx = AriMsg::extractCtx((AriMsg *)&v9, a3);
    }
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return Ctx;
}

void sub_20E1A040C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

_QWORD *std::vector<IBI_CPMS_POWER_BUDGET>::__init_with_size[abi:ne180100]<IBI_CPMS_POWER_BUDGET*,IBI_CPMS_POWER_BUDGET*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(8 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[a4];
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E1A04A4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

const char *asString(unsigned int a1)
{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DCB70[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DCB88[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DCBB0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCBE0[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DCC00[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCC30[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8DCC50[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DCC88[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCCA0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DCCC0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCCD8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCCF8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DCD30[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DCD48[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCD88[a1];
}

{
  if (a1 > 0x2D)
    return "???";
  else
    return off_24C8DCDA8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCF18[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8DCF38[a1];
}

{
  if (a1 > 9)
    return "???";
  else
    return off_24C8DCF70[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DCFC0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DCFD8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DCFF8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD020[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD048[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD0B0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD0C8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD0E0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD0F8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD110[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD138[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD158[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DD170[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD1A0[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD1C0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD1E8[a1];
}

{
  if (a1 > 0xB)
    return "???";
  else
    return off_24C8DD208[a1];
}

{
  if (a1 > 0xB)
    return "???";
  else
    return off_24C8DD268[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD2C8[a1];
}

{
  if (a1 > 0x1F)
    return "???";
  else
    return off_24C8DD2E0[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD3E0[a1];
}

{
  if (a1 > 0xA)
    return "???";
  else
    return off_24C8DD428[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD480[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD4A0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD4C8[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DD4E8[a1];
}

{
  if (a1 > 0xA)
    return "???";
  else
    return off_24C8DD528[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD580[a1];
}

{
  if (a1 > 8)
    return "???";
  else
    return off_24C8DD598[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD5E0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD600[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD618[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD630[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD650[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD6B8[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DD6D8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD708[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD730[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DD748[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD778[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DD790[a1];
}

{
  if (a1 > 0xD)
    return "???";
  else
    return off_24C8DD7D0[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DD840[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD868[a1];
}

{
  if (a1 > 0x29)
    return "???";
  else
    return off_24C8DD888[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DD9D8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DD9F8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DDA10[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DDA48[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DDA78[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DDA98[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DDAB8[a1];
}

{
  if (a1 > 9)
    return "???";
  else
    return off_24C8DDAD8[a1];
}

{
  if (a1 > 8)
    return "???";
  else
    return off_24C8DDB28[a1];
}

{
  if (a1 > 8)
    return "???";
  else
    return off_24C8DDB70[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DDBB8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DDBD0[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DDBF0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DDC18[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DDC30[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DDCA0[a1];
}

{
  if (a1 > 0x10)
    return "???";
  else
    return off_24C8DDD50[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DDE08[a1];
}

{
  if (a1 > 8)
    return "???";
  else
    return off_24C8DDE48[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DDE90[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DDEB0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DDEF0[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DDF08[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DDF48[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8DDF60[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DDF98[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DDFB8[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DDFE8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE018[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE040[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE058[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE070[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE098[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE0C0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE0E0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE0F8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE110[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE128[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DE150[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE190[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE1B0[a1];
}

{
  if (a1 > 8)
    return "???";
  else
    return off_24C8DE1C8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE210[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE230[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE248[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE260[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE280[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE298[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE2B0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE2C8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE2E0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE2F8[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DE310[a1];
}

{
  if (a1 > 0xC)
    return "???";
  else
    return off_24C8DE360[a1];
}

{
  if (a1 > 0x10)
    return "???";
  else
    return off_24C8DE3C8[a1];
}

{
  if (a1 > 8)
    return "???";
  else
    return off_24C8DE450[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE4C8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE4E0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE500[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE518[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE530[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE548[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE568[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE588[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE5A8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE5D0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE5F8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE618[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE630[a1];
}

{
  if (a1 > 0x2B)
    return "???";
  else
    return off_24C8DE648[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE7A8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE7C8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE7E0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE7F8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE818[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE830[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE848[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE860[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE878[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE890[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE8A8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE8C0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE8E8[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DE908[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE930[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE948[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DE960[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DE980[a1];
}

{
  if (a1 > 0x17)
    return "???";
  else
    return off_24C8DE998[a1];
}

{
  if (a1 > 0xA)
    return "???";
  else
    return off_24C8DEA58[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEAB0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEAC8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEAE0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DEAF8[a1];
}

{
  if (a1 > 0xD)
    return "???";
  else
    return off_24C8DEB18[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEB88[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DEBA0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEBC0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DEBD8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEBF8[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DEC10[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DEC40[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DEC80[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DECC0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DECD8[a1];
}

{
  if (a1 > 0xB)
    return "???";
  else
    return off_24C8DECF0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DED50[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DED68[a1];
}

{
  if (a1 > 0xF)
    return "???";
  else
    return off_24C8DED98[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DEE18[a1];
}

{
  if (a1 > 8)
    return "???";
  else
    return off_24C8DEE38[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEE80[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DEE98[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DEEC0[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DEEE0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEF10[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DEF28[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DEF58[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DEF70[a1];
}

{
  if (a1 > 0x30)
    return "???";
  else
    return off_24C8DEF90[a1];
}

{
  if (a1 > 0xA)
    return "???";
  else
    return off_24C8DF118[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8DF170[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DF1A8[a1];
}

{
  if (a1 > 0x30)
    return "???";
  else
    return off_24C8DF1E8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DF370[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF390[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF3A8[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DF3C0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DF3F0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF410[a1];
}

{
  if (a1 > 0x11)
    return "???";
  else
    return off_24C8DF428[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DF4B8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF4E8[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DF500[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DF530[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DF560[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DF5A0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DF5C0[a1];
}

{
  if (a1 > 0x25)
    return "???";
  else
    return off_24C8DF5E0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF710[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DF728[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DF768[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DF790[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8DF7D8[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8DF818[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8DF850[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF878[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF890[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DF8A8[a1];
}

{
  if (a1 > 0x14)
    return "???";
  else
    return off_24C8DF8C0[a1];
}

{
  if (a1 > 0x1D)
    return "???";
  else
    return off_24C8DF968[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DFA58[a1];
}

{
  if (a1 > 0x2D)
    return "???";
  else
    return off_24C8DFA70[a1];
}

{
  if (a1 > 0xE)
    return "???";
  else
    return off_24C8DFBE0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DFC98[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DFCB8[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8DFCD0[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DFD08[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DFD20[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DFD38[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DFD58[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8DFD88[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8DFDB8[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8DFDF0[a1];
}

{
  if (a1 > 0x14)
    return "???";
  else
    return off_24C8DFE08[a1];
}

{
  if (a1 > 0xB)
    return "???";
  else
    return off_24C8DFEB0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8DFF10[a1];
}

{
  if (a1 > 0x15)
    return "???";
  else
    return off_24C8DFF30[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E0020[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E0038[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E0058[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8E0070[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E00A0[a1];
}

{
  if (a1 > 5)
    return "???";
  else
    return off_24C8E00C0[a1];
}

{
  if (a1 > 6)
    return "???";
  else
    return off_24C8E00F0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E0128[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E0148[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E0160[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E0180[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E0198[a1];
}

{
  if (a1 > 4)
    return "???";
  else
    return off_24C8E01B0[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E01D8[a1];
}

{
  if (a1 > 7)
    return "???";
  else
    return off_24C8E01F8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E0238[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E0258[a1];
}

{
  if (a1 > 0x17)
    return "???";
  else
    return off_24C8E0270[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E0330[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E0348[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E0368[a1];
}

{
  if (a1 > 2)
    return "???";
  else
    return off_24C8E03A8[a1];
}

{
  if (a1 > 3)
    return "???";
  else
    return off_24C8E03E8[a1];
}

{
  if (a1 != 0 && a1 < 0xFFFFFF9C)
    return "???";
  else
    return off_24C931520[a1 + 100];
}

{
  if (a1 > 8)
    return "UNKNOWN";
  else
    return off_24C9318B8[a1];
}

const char *asString(int a1)
{
  const char *result;

  result = "IBI_CALL_CS_ALERTING_CATEGORY_1";
  switch(a1)
  {
    case 0:
      result = "IBI_CALL_CS_ALERTING_LEVEL_0";
      break;
    case 1:
      result = "IBI_CALL_CS_ALERTING_LEVEL_1";
      break;
    case 2:
      result = "IBI_CALL_CS_ALERTING_LEVEL_2";
      break;
    case 3:
      goto LABEL_5;
    case 4:
      return result;
    case 5:
      result = "IBI_CALL_CS_ALERTING_CATEGORY_2";
      break;
    case 6:
      result = "IBI_CALL_CS_ALERTING_CATEGORY_3";
      break;
    case 7:
      result = "IBI_CALL_CS_ALERTING_CATEGORY_4";
      break;
    case 8:
      result = "IBI_CALL_CS_ALERTING_CATEGORY_5";
      break;
    default:
      if (a1 == 255)
        result = "IBI_CALL_CS_NO_ALERTING_PATTERN";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CALL_CS_CMD_SET";
  if (a1 == 1)
    return "IBI_CALL_CS_CMD_GET";
  else
    return v1;
}

{
  if (a1)
    return "???";
  else
    return "IBI_CALL_CS_HOLD_ACTIVE_ACCEPT_WAITING";
}

{
  const char *result;
  int v2;

  if (a1 <= 1070)
  {
    switch(a1)
    {
      case 1:
        result = "IBI_CALL_CS_UNASSIGNED_NUMBER";
        break;
      case 2:
      case 4:
      case 5:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 14:
      case 15:
      case 20:
      case 23:
      case 25:
      case 32:
      case 33:
      case 35:
      case 36:
      case 37:
      case 39:
      case 40:
      case 45:
      case 46:
      case 48:
      case 51:
      case 52:
      case 53:
      case 54:
      case 56:
      case 59:
      case 60:
      case 61:
      case 62:
      case 64:
      case 66:
      case 67:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 80:
      case 82:
      case 83:
      case 84:
      case 85:
      case 86:
      case 89:
      case 90:
      case 92:
      case 93:
      case 94:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
      case 112:
      case 113:
      case 114:
      case 115:
      case 116:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 128:
      case 129:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 156:
      case 157:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 167:
      case 168:
      case 169:
      case 170:
      case 171:
      case 172:
      case 173:
      case 174:
      case 175:
      case 176:
      case 177:
      case 178:
      case 179:
      case 180:
      case 181:
      case 182:
      case 183:
      case 184:
      case 185:
      case 186:
      case 187:
      case 188:
      case 189:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 198:
      case 199:
      case 200:
      case 201:
      case 202:
      case 203:
      case 204:
      case 205:
      case 206:
      case 207:
      case 208:
      case 209:
      case 210:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 219:
      case 220:
      case 221:
      case 222:
      case 223:
      case 224:
      case 225:
      case 226:
      case 227:
      case 228:
      case 229:
      case 230:
      case 231:
      case 232:
      case 233:
      case 234:
      case 235:
      case 236:
      case 237:
      case 238:
      case 239:
      case 240:
      case 241:
      case 242:
      case 243:
      case 244:
      case 245:
      case 246:
      case 247:
      case 248:
      case 249:
      case 250:
      case 251:
      case 252:
      case 253:
      case 254:
      case 255:
      case 294:
      case 295:
      case 299:
      case 311:
      case 312:
      case 313:
      case 315:
      case 316:
      case 317:
      case 318:
      case 319:
      case 320:
      case 321:
      case 322:
      case 323:
      case 324:
      case 325:
      case 326:
      case 327:
      case 328:
      case 329:
      case 330:
      case 331:
      case 332:
      case 333:
      case 334:
      case 335:
      case 336:
      case 337:
      case 338:
      case 339:
      case 400:
      case 407:
      case 408:
      case 409:
      case 410:
      case 411:
        return "???";
      case 3:
        result = "IBI_CALL_CS_NO_ROUTE";
        break;
      case 6:
        result = "IBI_CALL_CS_CHANNEL_UNACCEPTABLE";
        break;
      case 8:
        result = "IBI_CALL_CS_OPERATOR_BARRING";
        break;
      case 13:
        result = "IBI_CALL_CS_COMPLETED_ELSEWHERE";
        break;
      case 16:
        result = "IBI_CALL_CS_NORMAL_CALL_CLEAR";
        break;
      case 17:
        result = "IBI_CALL_CS_USER_BUSY";
        break;
      case 18:
        result = "IBI_CALL_CS_NO_USER_RESPONDING";
        break;
      case 19:
        result = "IBI_CALL_CS_USER_ALERTING_NO_ANSWER";
        break;
      case 21:
        result = "IBI_CALL_CS_CALL_REJECTED";
        break;
      case 22:
        result = "IBI_CALL_CS_NUMBER_CHANGED";
        break;
      case 24:
        result = "IBI_CALL_CS_REJ_DUE_FEATURE_AT_DESTINATION";
        break;
      case 26:
        result = "IBI_CALL_CS_NON_SELECTED_USER_CLEARING";
        break;
      case 27:
        result = "IBI_CALL_CS_DESTION_OUT_OF_ORDER";
        break;
      case 28:
        result = "IBI_CALL_CS_INVALID_NUMBER_FORMAT";
        break;
      case 29:
        result = "IBI_CALL_CS_FACILITY_REJECTED";
        break;
      case 30:
        result = "IBI_CALL_CS_RESPONSE_TO_STATUS_ENQUIRY";
        break;
      case 31:
        result = "IBI_CALL_CS_NORMAL_UNSPECIFIED";
        break;
      case 34:
        result = "IBI_CALL_CS_NO_CIRCUIT_AVAILABLE";
        break;
      case 38:
        result = "IBI_CALL_CS_NETWORK_OUT_OF_ORDER";
        break;
      case 41:
        result = "IBI_CALL_CS_TEMPORARY_FAILURE";
        break;
      case 42:
        result = "IBI_CALL_CS_SWITCH_CONGESTION";
        break;
      case 43:
        result = "IBI_CALL_CS_ACCESS_INFORMATION_DISCARDED";
        break;
      case 44:
        result = "IBI_CALL_CS_REQEUSTED_CIRCUIT_NOT_AVAILABLE";
        break;
      case 47:
        result = "IBI_CALL_CS_RESSOURCES_UNAVAILABLE";
        break;
      case 49:
        result = "IBI_CALL_CS_QUALITY_UNAVAILABLE";
        break;
      case 50:
        result = "IBI_CALL_CS_FACILITY_NOT_SUBSCRIBED";
        break;
      case 55:
        result = "IBI_CALL_CS_INCOMING_CALLS_BARRED_IN_CUG";
        break;
      case 57:
        result = "IBI_CALL_CS_BEARER_CAPABILITY_NOT_ALLOWED";
        break;
      case 58:
        result = "IBI_CALL_CS_BEARER_CAPABILITY_NOT_AVAILABLE";
        break;
      case 63:
        result = "IBI_CALL_CS_SERVICE_NOT_AVAILABLE";
        break;
      case 65:
        result = "IBI_CALL_CS_BEARER_SERVICE_NOT_IMPLEMENTED";
        break;
      case 68:
        result = "IBI_CALL_CS_ACM_GREATER_OR_EQUAL_TO_ACMMAX";
        break;
      case 69:
        result = "IBI_CALL_CS_FACILITY_NOT_IMPLEMENTED";
        break;
      case 70:
        result = "IBI_CALL_CS_ONLY_RESTRICTED_DIGITAL";
        break;
      case 79:
        result = "IBI_CALL_CS_SERVICE_NOT_IMPLEMENTED";
        break;
      case 81:
        result = "IBI_CALL_CS_INVALID_TI";
        break;
      case 87:
        result = "IBI_CALL_CS_USER_NOT_IN_CUG";
        break;
      case 88:
        result = "IBI_CALL_CS_INCOMPATIBLE_DESTION";
        break;
      case 91:
        result = "IBI_CALL_CS_INVALID_TRANSIT_NETWORK";
        break;
      case 95:
        result = "IBI_CALL_CS_SEMANTICS_INCORRECT";
        break;
      case 96:
        result = "IBI_CALL_CS_INVALID_MANDATORY_INFORMATION";
        break;
      case 97:
        result = "IBI_CALL_CS_UNKNOW_MSG_TYPE1";
        break;
      case 98:
        result = "IBI_CALL_CS_UNEXPECTED_MSG_TYPE";
        break;
      case 99:
        result = "IBI_CALL_CS_UNEXPECTED_IE";
        break;
      case 100:
        result = "IBI_CALL_CS_CONDITIONAL_IE_ERROR";
        break;
      case 101:
        result = "IBI_CALL_CS_UNKNOWN_MSG_TYPE2";
        break;
      case 102:
        result = "IBI_CALL_CS_RECOVERY_ON_TIMER_EXPIRY";
        break;
      case 111:
        result = "IBI_CALL_CS_PROTOCOL_ERROR";
        break;
      case 127:
        result = "IBI_CALL_CS_INTERWORKING";
        break;
      case 256:
        result = "IBI_CALL_CS_VOID_CAUSE";
        break;
      case 257:
        result = "IBI_CALL_CS_OUTOF_MEMORY";
        break;
      case 258:
        result = "IBI_CALL_CS_INVALID_PARAM";
        break;
      case 259:
        result = "IBI_CALL_CS_DATA_CALL_ACTIVE";
        break;
      case 260:
        result = "IBI_CALL_CS_SPEECH_CALL_ACTIVE";
        break;
      case 261:
        result = "IBI_CALL_CS_DTMF_REJ_DURING_MOC_SETUP";
        break;
      case 262:
        result = "IBI_CALL_CS_MOC_SETUP_REJ_MISSING_ACM_INFO_IND_CB";
        break;
      case 263:
        result = "IBI_CALL_CS_TEMP_FORBIDDEN_CALL_ATTEMPT";
        break;
      case 264:
        result = "IBI_CALL_CS_CALLED_PARTY_BLACKLISTED";
        break;
      case 265:
        result = "IBI_CALL_CS_BLACKLIST_FULL_NO_AUTO_CALL_ATTEMPTS";
        break;
      case 266:
        result = "IBI_CALL_CS_TEMP_FORBIDDEN_CALL_ATTEMPT_NO_SERVICE";
        break;
      case 267:
        result = "IBI_CALL_CS_TEMP_FORBIDDEN_CALL_ATTEMPT_LIMITED_SERVE";
        break;
      case 268:
        result = "IBI_CALL_CS_CLIENT_TEMPORARY_BARRED";
        break;
      case 269:
        result = "IBI_CALL_CS_DUAL_SERVICE_CALL_ACTIVE";
        break;
      case 270:
        result = "IBI_CALL_CS_ATC_FCLASS_NOT_SPEECH";
        break;
      case 271:
        result = "IBI_CALL_CS_SI_UNKNOWN_ERROR";
        break;
      case 272:
        result = "IBI_CALL_CS_DTMF_REJ_CALL_HELD_OR_MPARTY";
        break;
      case 273:
        result = "IBI_CALL_CS_CLIENT_NOT_REGISTERED";
        break;
      case 274:
        result = "IBI_CALL_CS_ACTIVE_CLIENT_GONE";
        break;
      case 275:
        result = "IBI_CALL_CS_DTMF_REJ_DATA_TRANSMISSION";
        break;
      case 276:
        result = "IBI_CALL_CS_NO_APPROPRIATE_DTMF_ENTRY";
        break;
      case 277:
        result = "IBI_CALL_CS_SIM_STATUS_FAILURE";
        break;
      case 278:
        result = "IBI_CALL_CS_REJ_BY_CALL_CONTROL";
        break;
      case 279:
        result = "IBI_CALL_CS_FDN_FAILED";
        break;
      case 280:
        result = "IBI_CALL_CS_BDN_FAILED";
        break;
      case 281:
        result = "IBI_CALL_CS_ONLY_ERROR";
        break;
      case 282:
        result = "IBI_CALL_CS_NOT_IN_SPEECH_CALL";
        break;
      case 283:
        result = "IBI_CALL_CS_CCBS_POSSIBLE";
        break;
      case 284:
        result = "IBI_CALL_CS_INVALID_ALS_LINE";
        break;
      case 285:
        result = "IBI_CALL_CS_LND_OVERFLOW";
        break;
      case 286:
        result = "IBI_CALL_CS_DTMF_REJECTED_NO_TCH_AVAILABLE";
        break;
      case 287:
        result = "IBI_CALL_CS_NW_FAILURE_UNSPECIFIED";
        break;
      case 288:
        result = "IBI_CALL_CS_MS_NO_SERVICE";
        break;
      case 289:
        result = "IBI_CALL_CS_MS_ACCESS_CLASS_BARRED";
        break;
      case 290:
        result = "IBI_CALL_CS_MS_NO_RESOURCE";
        break;
      case 291:
        result = "IBI_CALL_CS_MS_SERVICE_BUSY";
        break;
      case 292:
        result = "IBI_CALL_CS_MS_FAILURE_UNSPECIFIED";
        break;
      case 293:
        result = "IBI_CALL_CS_DTMF_REJECTED_DUE_TO_SUP_TIMER_EXPIRY";
        break;
      case 296:
        result = "IBI_CALL_CS_DUAL_SIM_RADIO_CONFLICT";
        break;
      case 297:
        result = "IBI_CALL_CS_NO_SERVICE_DUAL_SIM_CONFLICT";
        break;
      case 298:
        result = "IBI_CALL_CS_SERV_NOT_ALLOWED";
        break;
      case 300:
        result = "IBI_CALL_CS_SIMTK_SETUP_MODE_NOT_SUPPORTED";
        break;
      case 301:
        result = "IBI_CALL_CS_MMI_NOT_REGISTERED";
        break;
      case 302:
        result = "IBI_CALL_CS_SIMTK_SETUP_REJ_MISSING_ACM_INFO_IND_CB";
        break;
      case 303:
        result = "IBI_CALL_CS_SIMTK_SETUP_REJ_BY_USER";
        break;
      case 304:
        result = "IBI_CALL_CS_SIMTK_SETUP_REJ_TIME_OUT";
        break;
      case 305:
        result = "IBI_CALL_CS_SIMTK_CALL_CONNECTED";
        break;
      case 306:
        result = "IBI_CALL_CS_DISCONNECT_DUE_TO_SIMTK_SETUP";
        break;
      case 307:
        result = "IBI_CALL_CS_SIMTK_SETUP_REJ_PENDING_SIMTK_SETUP";
        break;
      case 308:
        result = "IBI_CALL_CS_SIMTK_CALL_CONNECTED_NO_ICON_DISPLAY";
        break;
      case 309:
        result = "IBI_CALL_CS_PENDING_SIMTK_SETUP";
        break;
      case 310:
        result = "IBI_CALL_CS_SIMTK_SIM_RESET";
        break;
      case 314:
        result = "IBI_CALL_CS_PROACTIVE_SIM_APPL_TERMINATED_BY_USER";
        break;
      case 340:
        result = "IBI_CALL_CS_MS_SAPI3_RELEASE";
        break;
      case 341:
        result = "IBI_CALL_CS_MS_LOWER_LAYER_FAILURE";
        break;
      case 342:
        result = "IBI_CALL_CS_MS_AUTH_FAILURE";
        break;
      case 343:
        result = "IBI_CALL_CS_MS_PS_REJECT";
        break;
      case 344:
        result = "IBI_CALL_CS_MS_SERVICE_REJECTED";
        break;
      case 345:
        result = "IBI_CALL_CS_MS_ABORT_BY_NETWORK";
        break;
      case 346:
        result = "IBI_CALL_CS_MS_TIMEOUT";
        break;
      case 347:
        result = "IBI_CALL_CS_MS_DETACH";
        break;
      case 348:
        result = "IBI_CALL_CS_MS_RR_CONN_RELEASE";
        break;
      case 349:
        result = "IBI_CALL_CS_MS_NOT_REGISTERED";
        break;
      case 350:
        result = "IBI_CALL_CS_MS_REEST_FAILURE";
        break;
      case 351:
        result = "IBI_CALL_CS_MS_HANDOVER";
        break;
      case 352:
        result = "IBI_CALL_CS_MS_LINK_ESTAB_FAILURE";
        break;
      case 353:
        result = "IBI_CALL_CS_MS_RA_FAILURE";
        break;
      case 354:
        result = "IBI_CALL_CS_MS_LINK_ABORTION";
        break;
      case 355:
        result = "IBI_CALL_CS_MS_L1_FAILURE";
        break;
      case 356:
        result = "IBI_CALL_CS_MS_IMM_ASS_REJECT";
        break;
      case 357:
        result = "IBI_CALL_CS_MS_PAGING_PENDING";
        break;
      case 358:
        result = "IBI_CALL_CS_MS_ABNORMAL_RELEASE_UNSPECIFIED";
        break;
      case 359:
        result = "IBI_CALL_CS_MS_ABNORMAL_RELEASE_CHANNEL_UNACCEPTABLE";
        break;
      case 360:
        result = "IBI_CALL_CS_MS_ABNORMAL_RELEASE_TIMER_EXPIRED";
        break;
      case 361:
        result = "IBI_CALL_CS_MS_ABNORMAL_RELEASE_NO_ACT_ON_RADIO_PATH";
        break;
      case 362:
        result = "IBI_CALL_CS_MS_PREEMPTIVE_RELEASE";
        break;
      case 363:
        result = "IBI_CALL_CS_MS_UTRAN_CONFIGURATION_UNKNOWN";
        break;
      case 364:
        result = "IBI_CALL_CS_MS_HANDOVER_IMPOSSIBLE";
        break;
      case 365:
        result = "IBI_CALL_CS_MS_CHANNEL_MODE_UNACCEPTABLE";
        break;
      case 366:
        result = "IBI_CALL_CS_MS_FREQUENCY_NOT_IMPLEMENTED";
        break;
      case 367:
        result = "IBI_CALL_CS_MS_ORIGINATOR_TALKER_LEAVING_GROUP_CALL_AREA";
        break;
      case 368:
        result = "IBI_CALL_CS_MS_LOWER_LAYER_FAILURE_FROM_NW";
        break;
      case 369:
        result = "IBI_CALL_CS_MS_CALL_ALREADY_CLEARED";
        break;
      case 370:
        result = "IBI_CALL_CS_MS_SEMANTICALLY_INCORRECT_MSG";
        break;
      case 371:
        result = "IBI_CALL_CS_MS_INVALID_MANDATORY_INFO";
        break;
      case 372:
        result = "IBI_CALL_CS_MS_MSG_TYPE_NON_EXISTENT";
        break;
      case 373:
        result = "IBI_CALL_CS_MS_MSG_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE";
        break;
      case 374:
        result = "IBI_CALL_CS_MS_CONDITIONAL_IE_ERROR";
        break;
      case 375:
        result = "IBI_CALL_CS_MS_NO_CELL_ALLOCATION_AVAILABLE";
        break;
      case 376:
        result = "IBI_CALL_CS_MS_PROTOCOL_ERROR_UNSPECIFIED";
        break;
      case 377:
        result = "IBI_CALL_CS_MS_NORMAL_EVENT";
        break;
      case 378:
        result = "IBI_CALL_CS_MS_UNSPECIFIED";
        break;
      case 379:
        result = "IBI_CALL_CS_MS_PRE_EMPTIVE_RELEASE";
        break;
      case 380:
        result = "IBI_CALL_CS_MS_CONGESTION";
        break;
      case 381:
        result = "IBI_CALL_CS_MS_RE_ESTABLISHMENT_REJECT";
        break;
      case 382:
        result = "IBI_CALL_CS_MS_DIRECTED_SIGCONN_RE_ESTABLISHMENT";
        break;
      case 383:
        result = "IBI_CALL_CS_MS_USER_INACTIVITY";
        break;
      case 384:
        result = "IBI_CALL_CS_MS_CONN_REL_LOWER_LAYER_FAILURE_DL";
        break;
      case 385:
        result = "IBI_CALL_CS_MS_CONN_REL_LOWER_LAYER_FAILURE_UL";
        break;
      case 386:
        result = "IBI_CALL_CS_MS_CELL_BARRED";
        break;
      case 387:
        result = "IBI_CALL_CS_MS_SIGN_CONN_REL";
        break;
      case 388:
        result = "IBI_CALL_CS_MS_NAS_TRIGGERED_ABORT";
        break;
      case 389:
        result = "IBI_CALL_CS_MS_RRC_CONN_ESTABLISHMENT_FAILURE";
        break;
      case 390:
        result = "IBI_CALL_CS_MS_CONN_REJECT_REDIRECTION";
        break;
      case 391:
        result = "IBI_CALL_CS_MS_RESOURCE_CONFLICT";
        break;
      case 392:
        result = "IBI_CALL_CS_MS_L2_CAUSE_SEQUENCE_ERROR";
        break;
      case 393:
        result = "IBI_CALL_CS_MS_L2_CAUSE_T200_EXP_N200_PLUS_1_TIMES";
        break;
      case 394:
        result = "IBI_CALL_CS_MS_L2_CAUSE_UNSOLICITED_DM_RESP_MFES";
        break;
      case 395:
        result = "IBI_CALL_CS_MS_L2_CAUSE_CONTENTION_RESOLUTION";
        break;
      case 396:
        result = "IBI_CALL_CS_MS_L2_CAUSE_NORMAL_CAUSE";
        break;
      case 397:
        result = "IBI_CALL_CS_MS_BAND_CHANGED";
        break;
      case 398:
        result = "IBI_CALL_CS_MS_RELEASE_OOSA";
        break;
      case 399:
        result = "IBI_CALL_CS_MS_PLMN_NOT_MATCHING";
        break;
      case 401:
        result = "IBI_CALL_CS_MS_PHONE_IS_TURNED_OFF";
        break;
      case 402:
        result = "IBI_CALL_CS_MS_CANNOT_CONNECT_DUE_TO_CALLEE_CIRCUMSTANCE";
        break;
      case 403:
        result = "IBI_CALL_CS_MS_SERVICE_UNAVAILABLE_DUE_TO_ARREARS";
        break;
      case 404:
        result = "IBI_CALL_CS_MS_NUMBER_DIALLED_CANNOT_BE_REACHED";
        break;
      case 405:
        result = "IBI_CALL_CS_FALLBACK_TO_VOLTE";
        break;
      case 406:
        result = "IBI_CALL_CS_REDIAL_ON_IMS";
        break;
      case 412:
        result = "IBI_CALL_CS_ATTEMPT_ALT_DOMAIN";
        break;
      default:
        v2 = a1 - 995;
        result = "IBI_CALL_CS_ABSENT_SUBSCRIBER";
        switch(v2)
        {
          case 0:
            result = "IBI_CALL_CS_CLIENT_REJECTED";
            break;
          case 1:
            result = "IBI_CALL_CS_UNKNOWN_ERROR_CAUSE";
            break;
          case 2:
            result = "IBI_CALL_CS_CALL_CHANGED_TO_SS";
            break;
          case 3:
            result = "IBI_CALL_CS_CALL_CHANGED_TO_USSD";
            break;
          case 4:
            result = "IBI_CALL_CS_NO_CALL_ERROR";
            break;
          case 5:
            result = "IBI_CALL_CS_MS_INT_SS_ERROR";
            break;
          case 6:
            result = "IBI_CALL_CS_UNKNOWN_SUBSCRIBER";
            break;
          case 7:
          case 8:
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 19:
          case 20:
          case 27:
          case 28:
          case 29:
          case 30:
          case 31:
          case 33:
          case 36:
          case 37:
          case 38:
          case 44:
          case 45:
          case 46:
          case 47:
          case 49:
          case 50:
          case 51:
          case 52:
          case 53:
          case 54:
          case 55:
          case 56:
          case 57:
          case 58:
            return "???";
          case 14:
            result = "IBI_CALL_CS_ILLEGAL_SUBSCRIBER";
            break;
          case 15:
            result = "IBI_CALL_CS_BEARER_SERVICE_NOT_PROVISIONED";
            break;
          case 16:
            result = "IBI_CALL_CS_TELESERVICE_NOT_PROVISIONED";
            break;
          case 17:
            result = "IBI_CALL_CS_ILLEGAL_EQUIPMENT";
            break;
          case 18:
            result = "IBI_CALL_CS_CALL_BARRED";
            break;
          case 21:
            result = "IBI_CALL_CS_ILLEGAL_SS_OPERATION";
            break;
          case 22:
            result = "IBI_CALL_CS_SS_ERROR_STATUS";
            break;
          case 23:
            result = "IBI_CALL_CS_SS_NOT_AVAILABLE";
            break;
          case 24:
            result = "IBI_CALL_CS_SS_SUBSCRIPTION_VIOLATION";
            break;
          case 25:
            result = "IBI_CALL_CS_SS_INCOMPATIBILITY";
            break;
          case 26:
            result = "IBI_CALL_CS_FACILITY_NOT_SUPPORTED";
            break;
          case 32:
            return result;
          case 34:
            result = "IBI_CALL_CS_SHORT_TERM_DENIAL";
            break;
          case 35:
            result = "IBI_CALL_CS_LONG_TERM_DENIAL";
            break;
          case 39:
            result = "IBI_CALL_CS_SYSTEM_FAILURE";
            break;
          case 40:
            result = "IBI_CALL_CS_DATA_MISSING";
            break;
          case 41:
            result = "IBI_CALL_CS_UNEXPECTED_DATA_VALUE";
            break;
          case 42:
            result = "IBI_CALL_CS_PW_REGISTRATION_FAILURE";
            break;
          case 43:
            result = "IBI_CALL_CS_NEGATIVE_PW_CHECK";
            break;
          case 48:
            result = "IBI_CALL_CS_NUMBER_OF_PW_ATTEMPTS_VIOLATION";
            break;
          case 59:
            result = "IBI_CALL_CS_POS_METHOD_FAILURE";
            break;
          default:
            if ("IBI_CALL_CS_ABSENT_SUBSCRIBER" != 500)
              return "???";
            result = "IBI_CALL_CS_MULTIMEDIA_ERROR";
            break;
        }
        break;
    }
    return result;
  }
  if (a1 > 2299)
  {
    switch(a1)
    {
      case 4001:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_DISCONNECT";
        break;
      case 4002:
      case 4003:
      case 4004:
      case 4005:
      case 4006:
      case 4035:
      case 4036:
      case 4037:
      case 4038:
      case 4050:
      case 4051:
      case 4052:
      case 4053:
      case 4054:
      case 4055:
      case 4056:
        return "???";
      case 4007:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_FAIL";
        break;
      case 4008:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_NDSS_ORIG_CANCEL";
        break;
      case 4009:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_INTERCEPT";
        break;
      case 4010:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_REORDER";
        break;
      case 4011:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CC_RELEASE";
        break;
      case 4012:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CC_RELEASE_SO_REJ";
        break;
      case 4013:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_MAINTENANCE";
        break;
      case 4014:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_PERSISTENCE_DELAY_CALC_FAIL";
        break;
      case 4015:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_MS";
        break;
      case 4016:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_POWER_DOWN";
        break;
      case 4017:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_POWER_DOWN_BY_USER";
        break;
      case 4018:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_BS";
        break;
      case 4019:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_SO_REJECT";
        break;
      case 4020:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_TIMEOUT";
        break;
      case 4021:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_ACK_FAIL";
        break;
      case 4022:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_WEAK_SIGNAL";
        break;
      case 4023:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_LOCK";
        break;
      case 4024:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_TC_RELEASE_MT_CALL";
        break;
      case 4025:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_PAGE_FAIL";
        break;
      case 4026:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_REJECTED";
        break;
      case 4027:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_REJ_SO_NOT_SUPPORTED";
        break;
      case 4028:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_ACCT";
        break;
      case 4029:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_USER_CANCEL";
        break;
      case 4030:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_ACCESS_FAIL";
        break;
      case 4031:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_NO_SERVICE_FAIL";
        break;
      case 4032:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_RETRY_ORDER";
        break;
      case 4033:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_BLOCKED_BY_IRAT";
        break;
      case 4034:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CSFB_OOSA";
        break;
      case 4039:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_FNM_RELEASE";
        break;
      case 4040:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_BUSY_ORIG_FAIL";
        break;
      case 4041:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_LOCKED_ORIG_FAIL";
        break;
      case 4042:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_ORIG_FAIL_SO_REDIRECT";
        break;
      case 4043:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_PAGE_USER_REJECT";
        break;
      case 4044:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CALL_JOIN_NOT_READY";
        break;
      case 4045:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CALL_SWAP_NOT_READY";
        break;
      case 4046:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CALL_FLASH_FAIL";
        break;
      case 4047:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CALL_DTMF_REJ_ORDER_ERROR";
        break;
      case 4048:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CALL_DTMF_REJ_TC_TXQ_FULL";
        break;
      case 4049:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CALL_DTMF_REJ_FMT_OVERFLOW";
        break;
      case 4057:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_CALL_NOT_READY_PROTOCOL_ERROR";
        break;
      case 4058:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_BAD_PARAMETERS";
        break;
      case 4059:
        result = "IBI_CALL_CS_ERROR_CAUSE_CDMA_OTASP_CALL_NA_OUTSIDE_HOME_NW";
        break;
      default:
        switch(a1)
        {
          case 2300:
            result = "IBI_CALL_CS_UNRECOGNIZED_ERROR_INVOKE_ID";
            break;
          case 2301:
            result = "IBI_CALL_CS_RETURN_ERROR_UNEXPECTED";
            break;
          case 2302:
            result = "IBI_CALL_CS_UNRECOGNIZED_ERROR";
            break;
          case 2303:
            result = "IBI_CALL_CS_UNEXPECTED_ERROR";
            break;
          case 2304:
            result = "IBI_CALL_CS_MISTYPED_ERROR_PARAMETER";
            break;
          default:
            switch(a1)
            {
              case 3299:
                result = "IBI_CALL_CS_CAUSE_RSRVCC";
                break;
              case 3300:
                result = "IBI_CALL_CS_ERROR_CAUSE_CELL_BARRED_MO_DATA";
                break;
              case 3301:
                result = "IBI_CALL_CS_ERROR_CAUSE_IMS_SERVICE_NOT_AVAILABLE";
                break;
              case 3302:
                result = "IBI_CALL_CS_ERROR_CAUSE_EMERGENCY_CALL_SETUP";
                break;
              case 3303:
                result = "IBI_CALL_CS_ERROR_CAUSE_NON_UE_DETECTABLE_EMERGENCY_CALL";
                break;
              default:
                return "???";
            }
            break;
        }
        break;
    }
    return result;
  }
  if (a1 <= 2001)
  {
    if (a1 <= 1254)
    {
      switch(a1)
      {
        case 1121:
          result = "IBI_CALL_CS_REJECTED_BY_USER";
          break;
        case 1122:
          result = "IBI_CALL_CS_REJECTED_BY_NETWORK";
          break;
        case 1123:
          result = "IBI_CALL_CS_DEFLECTION_TO_SERVED_SUBSCRIBER";
          break;
        case 1124:
          result = "IBI_CALL_CS_SPECIAL_SERVICE_CODE";
          break;
        case 1125:
          result = "IBI_CALL_CS_INVALID_DEFLECTED_TO_NUMBER";
          break;
        case 1126:
          result = "IBI_CALL_CS_MAX_NUMBER_OF_MPTY_PARTICIPANTS_EXCEEDED";
          break;
        case 1127:
          result = "IBI_CALL_CS_RESOURCES_NOT_AVAILABLE";
          break;
        default:
          if (a1 == 1071)
          {
            result = "IBI_CALL_CS_UNKNOWN_ALPHABET";
          }
          else
          {
            if (a1 != 1072)
              return "???";
            result = "IBI_CALL_CS_USSD_BUSY";
          }
          break;
      }
      return result;
    }
    switch(a1)
    {
      case 1255:
        return "IBI_CALL_CS_MS_INT_SS_TIME_OUT";
      case 2000:
        return "IBI_CALL_CS_UNRECOGNIZED_COMPONENT";
      case 2001:
        return "IBI_CALL_CS_MISTYPED_COMPONENT";
    }
    return "???";
  }
  if (a1 > 2199)
  {
    switch(a1)
    {
      case 2200:
        return "IBI_CALL_CS_UNRECOGNIZED_INVOKE_ID";
      case 2201:
        return "IBI_CALL_CS_RETURN_RESULT_UNEXPECTED";
      case 2202:
        return "IBI_CALL_CS_MISTYPED_RES_PARAMETER";
    }
    return "???";
  }
  switch(a1)
  {
    case 2100:
      result = "IBI_CALL_CS_DUPLICATE_INVOKE_ID";
      break;
    case 2101:
      result = "IBI_CALL_CS_UNRECOGNIZED_OPERATION";
      break;
    case 2102:
      result = "IBI_CALL_CS_MISTYPED_PRO_PARAMETER";
      break;
    case 2103:
      result = "IBI_CALL_CS_RESOURCE_LIMITATION";
      break;
    case 2104:
      result = "IBI_CALL_CS_INITIATING_RELEASE";
      break;
    case 2105:
      result = "IBI_CALL_CS_UNRECOGNIZED_LINKED_ID";
      break;
    case 2106:
      result = "IBI_CALL_CS_LINKED_RESPONSE_UNEXPECTED";
      break;
    case 2107:
      result = "IBI_CALL_CS_UNEXPECTED_LINKED_OPERATION";
      break;
    default:
      if (a1 != 2002)
        return "???";
      result = "IBI_CALL_CS_STRUCTURED_COMPONENT";
      break;
  }
  return result;
}

{
  if ((a1 + 1) > 2)
    return "???";
  else
    return off_24C8DCD18[a1 + 1];
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_CALL_CS_LINE_2";
  if (a1)
    return v1;
  else
    return "IBI_CALL_CS_LINE_1";
}

{
  const char *v1;
  const char *v2;

  v1 = "IBI_CALL_CS_CALL_ERROR";
  v2 = "???";
  if (!a1)
    v2 = "IBI_CALL_CS_SUCCESS";
  if (a1 != 98)
    v1 = v2;
  if (a1 == 99)
    return "IBI_CALL_CS_UNKNOWN";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_CALL_CS_ANBR_DIRECTION_UL";
  if (a1)
    return v1;
  else
    return "IBI_CALL_CS_ANBR_DIRECTION_DL";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CALL_CS_AUX_STATE_IDLE";
  if (a1 == 2)
    return "IBI_CALL_CS_AUX_STATE_HELD";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_CALL_CS_MPTY_AUX_STATE_IN_MPTY";
  if (a1)
    return v1;
  else
    return "IBI_CALL_CS_MPTY_AUX_STATE_IDLE";
}

{
  if (a1 == 1)
    return "IBI_CALL_CS_CALL_WAITING_NEW_CALL";
  else
    return "???";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_CALL_PS_3GPP2_DATA_CALL_TYPE_TETHERED";
  if (a1 == 1)
    return "IBI_CALL_PS_3GPP2_DATA_CALL_TYPE_NORMAL";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_CALL_PS_ADD_MASK_IP_TYPE_V6";
  if (a1)
    return v1;
  else
    return "IBI_CALL_PS_ADD_MASK_IP_TYPE_V4";
}

{
  if ((a1 - 1) > 7)
    return "???";
  else
    return off_24C8DD070[a1 - 1];
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "CONN_STATE_IDLE";
  if (a1 == 1)
    return "CONN_STATE_CONNECTED";
  else
    return v1;
}

{
  const char *result;

  result = "IBI_CALL_PS_DATA_BEARER_INFO_5G_MMWAVE";
  switch(a1)
  {
    case 0:
      result = "IBI_CALL_PS_DATA_BEARER_INFO_NONE";
      break;
    case 1:
      result = "IBI_CALL_PS_DATA_BEARER_INFO_LTE";
      break;
    case 2:
      result = "IBI_CALL_PS_DATA_BEARER_INFO_5G_SUB6";
      break;
    case 3:
    case 5:
    case 6:
    case 7:
      goto LABEL_5;
    case 4:
      return result;
    case 8:
      result = "IBI_CALL_PS_DATA_BEARER_INFO_5G_NSA";
      break;
    default:
      if (a1 == 16)
        result = "IBI_CALL_PS_DATA_BEARER_INFO_5G_SA";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CALL_PS_DNS_PROT_TLS";
  if (a1 == 1)
    return "IBI_CALL_PS_DNS_PROT_DTLS";
  else
    return v1;
}

{
  const char *result;
  const char *v2;

  switch(a1)
  {
    case 0:
      result = "IBI_CALL_PS_IP_TYPE_INVALID";
      break;
    case 1:
      result = "IBI_CALL_PS_IP_TYPE_V4";
      break;
    case 2:
      result = "IBI_CALL_PS_IP_TYPE_V6";
      break;
    case 3:
      result = "IBI_CALL_PS_IP_TYPE_V4_V6";
      break;
    case 4:
      result = "IBI_CALL_PS_IP_TYPE_V4_PDN";
      break;
    case 5:
      result = "IBI_CALL_PS_IP_TYPE_V6_PDN";
      break;
    case 6:
      result = "IBI_CALL_PS_IP_TYPE_V4_V6_PDN";
      break;
    default:
      v2 = "???";
      if (a1 == 255)
        v2 = "IBI_CALL_PS_IP_TYPE_ANY";
      if (a1 == 0x1FFFFFFF)
        result = "IBI_CALL_PS_IP_MAXENUMSIZE";
      else
        result = v2;
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CALL_PS_LOOPBACK_RESULT_SUCCESS";
  if (a1 == 1)
    return "IBI_CALL_PS_LOOPBACK_RESULT_FAILURE";
  else
    return v1;
}

{
  const char *result;

  switch(a1)
  {
    case 0:
      result = "IBI_LQM_NONE";
      break;
    case 1:
      result = "IBI_LQM_LINK_STATE";
      break;
    case 2:
      result = "IBI_LQM_LINK_FP";
      break;
    case 3:
      result = "IBI_LQM_DL_THRPT";
      break;
    case 4:
      result = "IBI_LQM_TRAFFICCLASS_AP_ENABLE";
      break;
    case 5:
      result = "IBI_LQM_MAX";
      break;
    case 6:
      result = "IBI_LQM_TRANSFER_TIME_ENABLE";
      break;
    case 7:
      result = "IBI_LQM_POWER_COST";
      break;
    case 8:
      result = "IBI_LQM_DATA_STALL";
      break;
    case 9:
      result = "IBI_LQM_NR_SERVING_CELL_TYPE";
      break;
    case 10:
      result = "IBI_LQM_NR_FR2_RECOMMENDATION";
      break;
    default:
      if (a1 == 0xFFFF)
        result = "IBI_LQM_BITMASK";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 0x1FFFFFFF)
    v1 = "IBI_CALL_PS_MBIM_MAXENUMSIZE";
  if (a1 == 1)
    return "IBI_CALL_PS_MBIM_ICMP_ECHO_REQUEST";
  else
    return v1;
}

{
  const char *result;

  result = "IBI_CALL_PS_MODULATION_SCHEME_1024QAM";
  switch(a1)
  {
    case 0:
      result = "IBI_CALL_PS_MODULATION_SCHEME_BPSK";
      break;
    case 1:
      result = "IBI_CALL_PS_MODULATION_SCHEME_QPSK";
      break;
    case 2:
      result = "IBI_CALL_PS_MODULATION_SCHEME_16QAM";
      break;
    case 3:
      result = "IBI_CALL_PS_MODULATION_SCHEME_64QAM";
      break;
    case 4:
      result = "IBI_CALL_PS_MODULATION_SCHEME_256QAM";
      break;
    case 5:
      return result;
    default:
      if (a1 == 255)
        result = "IBI_CALL_PS_MODULATION_SCHEME_UNKNOWN";
      else
        result = "???";
      break;
  }
  return result;
}

{
  if (a1 == 1)
    return "IBI_CALL_PS_NOTIFICATION_INDICATOR_SRVCC_HANDOVER_CANCELLED";
  else
    return "???";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CALL_PS_ORIGIN_NETWORK";
  if (a1 == 1)
    return "IBI_CALL_PS_ORIGIN_MOBILESTATION";
  else
    return v1;
}

{
  if ((a1 - 1) > 3)
    return "???";
  else
    return off_24C8DD408[a1 - 1];
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_CALL_PS_PIPE_PARAMS_APPLICABLE_TO_SESSION";
  if (a1)
    return v1;
  else
    return "IBI_CALL_PS_PIPE_PARAMS_APPLICABLE_TO_CID";
}

{
  const char *result;
  int v2;

  if (a1 > 1025)
  {
    switch(a1)
    {
      case 1026:
        result = "IBI_CALL_PS_RESULT_CODE_IMSI_UNKNOWN_IN_HLR";
        break;
      case 1027:
        result = "IBI_CALL_PS_RESULT_CODE_ILLEGAL_MS";
        break;
      case 1028:
        result = "IBI_CALL_PS_RESULT_CODE_IMSI_UNKNOWN_IN_VLR";
        break;
      case 1029:
        result = "IBI_CALL_PS_RESULT_CODE_IMEI_NOT_ACCEPTED";
        break;
      case 1030:
        result = "IBI_CALL_PS_RESULT_CODE_ILLEGAL_ME";
        break;
      case 1031:
        result = "IBI_CALL_PS_RESULT_CODE_GPRS_SERVICES_NOT_ALLOWED";
        break;
      case 1032:
        result = "IBI_CALL_PS_RESULT_CODE_GPRS_SERVICES_AND_NON_GPRS_SERVICES_NOT_ALLOWED";
        break;
      case 1033:
        result = "IBI_CALL_PS_RESULT_CODE_MS_IDENTITY_CANNOT_BE_DERIVED_BY_THE_NETWORK";
        break;
      case 1034:
        result = "IBI_CALL_PS_RESULT_CODE_IMPLICITLY_DETACHED";
        break;
      case 1035:
        result = "IBI_CALL_PS_RESULT_CODE_PLMN_NOT_ALLOWED";
        break;
      case 1036:
        result = "IBI_CALL_PS_RESULT_CODE_LOCATION_AREA_NOT_ALLOWED";
        break;
      case 1037:
        result = "IBI_CALL_PS_RESULT_CODE_ROAMING_NOT_ALLOWED_IN_THIS_LOCATION_AREA";
        break;
      case 1038:
        result = "IBI_CALL_PS_RESULT_CODE_GPRS_SERVICES_NOT_ALLOWED_IN_THIS_PLMN";
        break;
      case 1039:
        result = "IBI_CALL_PS_RESULT_CODE_NO_SUITABLE_CELLS_IN_LOCATION_AREA";
        break;
      case 1040:
        result = "IBI_CALL_PS_RESULT_CODE_MSC_TEMPORARILY_NOT_REACHABLE";
        break;
      case 1041:
      case 1053:
      case 1054:
      case 1055:
      case 1056:
      case 1057:
      case 1058:
      case 1060:
      case 1061:
      case 1062:
      case 1065:
      case 1067:
      case 1068:
      case 1069:
      case 1070:
      case 1071:
      case 1073:
      case 1074:
      case 1075:
      case 1076:
      case 1077:
      case 1078:
      case 1079:
      case 1080:
      case 1081:
      case 1082:
      case 1083:
      case 1084:
      case 1085:
      case 1086:
      case 1088:
      case 1090:
      case 1092:
      case 1094:
      case 1099:
      case 1100:
      case 1101:
      case 1102:
      case 1103:
      case 1104:
      case 1105:
      case 1106:
      case 1107:
      case 1108:
      case 1109:
      case 1110:
      case 1111:
      case 1112:
      case 1113:
LABEL_154:
        result = "???";
        break;
      case 1042:
        result = "IBI_CALL_PS_RESULT_CODE_CS_DOMAIN_NOT_AVAILABLE";
        break;
      case 1043:
        result = "IBI_CALL_PS_RESULT_CODE_ESM_FAILURE";
        break;
      case 1044:
        result = "IBI_CALL_PS_RESULT_CODE_MAC_FAILURE";
        break;
      case 1045:
        result = "IBI_CALL_PS_RESULT_CODE_SYNCH_FAILURE";
        break;
      case 1046:
        result = "IBI_CALL_PS_RESULT_CODE_CONGESTION";
        break;
      case 1047:
        result = "IBI_CALL_PS_RESULT_CODE_GSM_AUTHENTICATION_UNACCEPTABLE";
        break;
      case 1048:
        result = "IBI_CALL_PS_RESULT_CODE_SECURITY_MODE_REJECTED";
        break;
      case 1049:
        result = "IBI_CALL_PS_RESULT_CODE_NOT_AUTHORIZED_FOR_THIS_CSG";
        break;
      case 1050:
        result = "IBI_CALL_PS_RESULT_CODE_NON_EPS_AUTHENTICATION_UNACCEPTABLE";
        break;
      case 1051:
        result = "IBI_CALL_PS_RESULT_CODE_N1_MODE_NOT_ALLOWED";
        break;
      case 1052:
        result = "IBI_CALL_PS_RESULT_CODE_SMS_SERVICE_PROVIDED_VIA_GPRS_IN_THIS_ROUTING_AREA";
        break;
      case 1059:
        result = "IBI_CALL_PS_RESULT_CODE_REQUEST_SERVICE_OPTION_NOT_AUTHORIZED_IN_THIS_PLMN";
        break;
      case 1063:
        result = "IBI_CALL_PS_RESULT_CODE_CS_DOMAIN_TEMPORARILY_NOT_AVAILABLE";
        break;
      case 1064:
        result = "IBI_CALL_PS_RESULT_CODE_NO_PDP_CONTEXT_ACTIVE";
        break;
      case 1066:
        result = "IBI_CALL_PS_RESULT_CODE_SEVERE_NETWORK_FAILURE";
        break;
      case 1072:
        result = "IBI_CALL_PS_RESULT_CODE_RETRY_ON_NEW_CELL_BEG";
        break;
      case 1087:
        result = "IBI_CALL_PS_RESULT_CODE_RETRY_ON_NEW_CELL_END";
        break;
      case 1089:
        result = "IBI_CALL_PS_RESULT_CODE_MAX_NUM_PDU_SESSION_REACHED";
        break;
      case 1091:
        result = "IBI_CALL_PS_RESULT_CODE_INSUFFICIENT_RESOURCES_FOR_SPECIFIC_SLICE_DNN";
        break;
      case 1093:
        result = "IBI_CALL_PS_RESULT_CODE_INSUFFICIENT_RESOURCES_FOR_SPECIFIC_SLICE";
        break;
      case 1095:
        result = "IBI_CALL_PS_RESULT_CODE_NGKSI_ALREADY_IN_USE";
        break;
      case 1096:
        result = "IBI_CALL_PS_RESULT_CODE_NON_3GPP_ACCESS_TO_5GCN_NOT_ALLOWED";
        break;
      case 1097:
        result = "IBI_CALL_PS_RESULT_CODE_SERVING_NW_NOT_AUTHORIZED";
        break;
      case 1098:
        result = "IBI_CALL_PS_RESULT_CODE_WIRELINE_ACCESS_AREA_NOT_ALLOWED";
        break;
      case 1114:
        result = "IBI_CALL_PS_RESULT_CODE_PAYLOAD_NOT_FORWARDED";
        break;
      case 1115:
        result = "IBI_CALL_PS_RESULT_CODE_DNN_NOT_SUPPORTED_OR_SUBSCRIBED_IN_SLICE";
        break;
      case 1116:
        result = "IBI_CALL_PS_RESULT_CODE_INSUFFICIENT_USER_PLANE_RESOURCES_FOR_PDU_SESSION";
        break;
      default:
        switch(a1)
        {
          case 2048:
            result = "IBI_CALL_PS_RESULT_CODE_NOT_REGISTERED";
            break;
          case 2049:
            result = "IBI_CALL_PS_RESULT_CODE_INVALID_SIM";
            break;
          case 2050:
            result = "IBI_CALL_PS_RESULT_CODE_N_REG_REQ";
            break;
          case 2051:
            result = "IBI_CALL_PS_RESULT_CODE_NO_CELL";
            break;
          case 2052:
            result = "IBI_CALL_PS_RESULT_CODE_NO_CARRIER";
            break;
          case 2053:
            result = "IBI_CALL_PS_RESULT_CODE_PLMN_SEARCH";
            break;
          case 2054:
            result = "IBI_CALL_PS_RESULT_CODE_PLMN_SEARCH_ENDED";
            break;
          case 2056:
            result = "IBI_CALL_PS_RESULT_CODE_POWER_DOWN";
            break;
          case 2057:
            result = "IBI_CALL_PS_RESULT_CODE_FORB_PLMN";
            break;
          case 2058:
            result = "IBI_CALL_PS_RESULT_CODE_FORB_LAI";
            break;
          case 2059:
            result = "IBI_CALL_PS_RESULT_CODE_DETACHED";
            break;
          case 2060:
            result = "IBI_CALL_PS_RESULT_CODE_DISABLED";
            break;
          case 2061:
            result = "IBI_CALL_PS_RESULT_CODE_INVALID_PARAMETER";
            break;
          case 2062:
            result = "IBI_CALL_PS_RESULT_CODE_REJ_BY_NETWORK";
            break;
          case 2063:
            result = "IBI_CALL_PS_RESULT_CODE_INTERNAL_FAILURE";
            break;
          case 2064:
            result = "IBI_CALL_PS_RESULT_CODE_ATTACH_TEMPORARILY_BARRED";
            break;
          case 2066:
            result = "IBI_CALL_PS_RESULT_CODE_ATTACH_TEMPORARILY_NOT_ALLOWED";
            break;
          case 2067:
            result = "IBI_CALL_PS_RESULT_CODE_REGISTRATION_IN_PROGRESS";
            break;
          case 2068:
            result = "IBI_CALL_PS_RESULT_CODE_USER_ABORT";
            break;
          case 2071:
            result = "IBI_CALL_PS_RESULT_CODE_CSG_UNAUTHORIZED";
            break;
          case 2072:
            result = "IBI_CALL_PS_RESULT_CODE_IRAT_ONGOING";
            break;
          case 2073:
            result = "IBI_CALL_PS_RESULT_CODE_EMERGENCY_ONLY_ALLOWED";
            break;
          case 2074:
            result = "IBI_CALL_PS_RESULT_CODE_SOR_ERROR";
            break;
          case 2075:
            result = "IBI_CALL_PS_RESULT_CODE_SERVICE_REQ_NOT_ALLOWED";
            break;
          case 2076:
            result = "IBI_CALL_PS_RESULT_CODE_CONGESTION_TIMER_RUNNING";
            break;
          case 2077:
            result = "IBI_CALL_PS_RESULT_CODE_ESFB_ONGOING";
            break;
          case 2078:
            result = "IBI_CALL_PS_RESULT_CODE_RESUME_REQ_PENDING";
            break;
          case 2079:
            result = "IBI_CALL_PS_RESULT_CODE_NO_RESPONSE_FROM_NW";
            break;
          case 2080:
            result = "IBI_CALL_PS_RESULT_CODE_RESUME_FAILED";
            break;
          case 2081:
            result = "IBI_CALL_PS_RESULT_CODE_NAS_SIG_NOT_ALLOWED";
            break;
          case 2082:
            result = "IBI_CALL_PS_RESULT_CODE_TAU_FAILED";
            break;
          case 2083:
            result = "IBI_CALL_PS_RESULT_CODE_INTERIM_CID_FAILED";
            break;
          case 2084:
            result = "IBI_CALL_PS_RESULT_CODE_DEFAULT_CONTEXT_INVALID";
            break;
          case 2085:
            result = "IBI_CALL_PS_RESULT_CODE_RESTRICTED_MODE";
            break;
          default:
            goto LABEL_154;
        }
        break;
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
        result = "IBI_CALL_PS_RESULT_CODE_NO_CAUSE";
        break;
      case 1:
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 57:
      case 58:
      case 61:
      case 62:
      case 63:
      case 64:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 78:
      case 79:
      case 80:
      case 83:
      case 84:
      case 85:
      case 86:
      case 87:
      case 88:
      case 89:
      case 90:
      case 91:
      case 92:
      case 93:
      case 94:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
      case 110:
        goto LABEL_154;
      case 8:
        result = "IBI_CALL_PS_RESULT_CODE_DETERMINED_BARRING";
        break;
      case 24:
        result = "IBI_CALL_PS_RESULT_CODE_MBMS_BEARER_CAPABILITIES_INSUFFICIENT_FOR_THE_SERVICE";
        break;
      case 25:
        result = "IBI_CALL_PS_RESULT_CODE_LLC_OR_SNDCP_FAILURE";
        break;
      case 26:
        result = "IBI_CALL_PS_RESULT_CODE_INSUFFICIENT_RESOURCES";
        break;
      case 27:
        result = "IBI_CALL_PS_RESULT_CODE_MISSING_OR_UNKNOWN_APN";
        break;
      case 28:
        result = "IBI_CALL_PS_RESULT_CODE_UNKNOWN_PDP_ADDRESS_OR_PDP_TYPE";
        break;
      case 29:
        result = "IBI_CALL_PS_RESULT_CODE_USER_AUTHENTICATION_FAILED";
        break;
      case 30:
        result = "IBI_CALL_PS_RESULT_CODE_ACTIVATION_REJECTED_BY_GGSN";
        break;
      case 31:
        result = "IBI_CALL_PS_RESULT_CODE_ACTIVATION_REJECTED_UNSPECIFIED";
        break;
      case 32:
        result = "IBI_CALL_PS_RESULT_CODE_SERVICE_OPTION_NOT_SUPPORTED";
        break;
      case 33:
        result = "IBI_CALL_PS_RESULT_CODE_REQUESTED_SERVICE_OPTION_NOT_SUBSCRIBED";
        break;
      case 34:
        result = "IBI_CALL_PS_RESULT_CODE_SERVICE_OPTION_TEMPORARILY_OUT_OF_ORDER";
        break;
      case 35:
        result = "IBI_CALL_PS_RESULT_CODE_NSAPI_ALREADY_USED";
        break;
      case 36:
        result = "IBI_CALL_PS_RESULT_CODE_REGULAR_DEACTIVATION";
        break;
      case 37:
        result = "IBI_CALL_PS_RESULT_CODE_QOS_NOT_ACCEPTED";
        break;
      case 38:
        result = "IBI_CALL_PS_RESULT_CODE_NETWORK_FAILURE";
        break;
      case 39:
        result = "IBI_CALL_PS_RESULT_CODE_REACTIVATION_REQUIRED";
        break;
      case 40:
        result = "IBI_CALL_PS_RESULT_CODE_FEATURE_NOT_SUPPORTED";
        break;
      case 41:
        result = "IBI_CALL_PS_RESULT_CODE_SEMANTIC_ERROR_IN_THE_TFT_OPERATION";
        break;
      case 42:
        result = "IBI_CALL_PS_RESULT_CODE_SYNTACTICAL_ERROR_IN_THE_TFT_OPERATION";
        break;
      case 43:
        result = "IBI_CALL_PS_RESULT_CODE_UNKNOWN_PDP_CONTEXT";
        break;
      case 44:
        result = "IBI_CALL_PS_RESULT_CODE_SEMANTIC_ERRORS_IN_PACKET_FILTER";
        break;
      case 45:
        result = "IBI_CALL_PS_RESULT_CODE_SYNTACTICAL_ERRORS_IN_PACKET_FILTER";
        break;
      case 46:
        result = "IBI_CALL_PS_RESULT_CODE_PDP_CONTEXT_WITHOUT_TFT_ALREADY_ACTIVATED";
        break;
      case 47:
        result = "IBI_CALL_PS_RESULT_CODE_PTI_MISMATCH";
        break;
      case 48:
        result = "IBI_CALL_PS_RESULT_CODE_ACTIVATION_REJECTED_BCM_VIOLATION";
        break;
      case 49:
        result = "IBI_CALL_PS_RESULT_CODE_LAST_PDN_DISCONNECTION_NOT_ALLOWED";
        break;
      case 50:
        result = "IBI_CALL_PS_RESULT_CODE_PDP_TYPE_IPV4_ONLY_ALLOWED";
        break;
      case 51:
        result = "IBI_CALL_PS_RESULT_CODE_PDP_TYPE_IPV6_ONLY_ALLOWED";
        break;
      case 52:
        result = "IBI_CALL_PS_RESULT_CODE_SINGLE_ADDRESS_BEARERS_ONLY_ALLOWED";
        break;
      case 53:
        result = "IBI_CALL_PS_RESULT_CODE_ESM_INFORMATION_NOT_RECEIVED";
        break;
      case 54:
        result = "IBI_CALL_PS_RESULT_CODE_PDN_CONNECTION_DOES_NOT_EXIST";
        break;
      case 55:
        result = "IBI_CALL_PS_RESULT_CODE_MULTIPLE_PDN_CONNECTIONS_FOR_A_GIVEN_APN_NOT_ALLOWED";
        break;
      case 56:
        result = "IBI_CALL_PS_RESULT_CODE_COLLISION_WITH_NETWORK_INITIATED_REQUEST";
        break;
      case 59:
        result = "IBI_CALL_PS_RESULT_CODE_UNSUPPORTED_QCI_VALUE";
        break;
      case 60:
        result = "IBI_CALL_PS_RESULT_CODE_BEARER_HANDLING_NOT_SUPPORTED";
        break;
      case 65:
        result = "IBI_CALL_PS_RESULT_CODE_MAXIMUM_NUMBER_OF_PDP_CONTEXTS_REACHED";
        break;
      case 66:
        result = "IBI_CALL_PS_RESULT_CODE_REQUESTED_APN_NOT_SUPPORTED_IN_CURRENT_RAT_PLMN_COMBINATION";
        break;
      case 67:
        result = "IBI_CALL_PS_RESULT_CODE_SM_INSUFFICIENT_RESOURCES_FOR_SLICE_DNN";
        break;
      case 68:
        result = "IBI_CALL_PS_RESULT_CODE_NOT_SUPPORTED_SSC_MODE";
        break;
      case 69:
        result = "IBI_CALL_PS_RESULT_CODE_SM_INSUFFICIENT_RESOURCES_FOR_SLICE";
        break;
      case 70:
        result = "IBI_CALL_PS_RESULT_CODE_MISSING_OR_UNKNOWN_DNN_IN_SLICE";
        break;
      case 81:
        result = "IBI_CALL_PS_RESULT_CODE_INVALID_TRANSACTION_IDENTIFIER_VALUE";
        break;
      case 82:
        result = "IBI_CALL_PS_RESULT_CODE_MAX_DATA_RATE_USER_PLANE_INTEGRITY_PROTECTION_TOO_LOW";
        break;
      case 95:
        result = "IBI_CALL_PS_RESULT_CODE_SEMANTICALLY_INCORRECT_MESSAGE";
        break;
      case 96:
        result = "IBI_CALL_PS_RESULT_CODE_INVALID_MANDATORY_INFORMATION";
        break;
      case 97:
        result = "IBI_CALL_PS_RESULT_CODE_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENTED";
        break;
      case 98:
        result = "IBI_CALL_PS_RESULT_CODE_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_THE_PROTOCOL_STATE";
        break;
      case 99:
        result = "IBI_CALL_PS_RESULT_CODE_INFORMATION_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED";
        break;
      case 100:
        result = "IBI_CALL_PS_RESULT_CODE_CONDITIONAL_IE_ERROR";
        break;
      case 101:
        result = "IBI_CALL_PS_RESULT_CODE_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE";
        break;
      case 111:
        result = "IBI_CALL_PS_RESULT_CODE_PROTOCOL_ERROR_UNSPECIFIED";
        break;
      case 112:
        result = "IBI_CALL_PS_RESULT_CODE_APN_RESTRICTION_VALUE_INCOMPATIBLE_WITH_ACTIVE_PDP_CONTEXT";
        break;
      default:
        v2 = a1 - 256;
        result = "IBI_CALL_PS_RESULT_CODE_ACL_REJECT";
        switch(v2)
        {
          case 0:
            result = "IBI_CALL_PS_RESULT_CODE_BARRED_CELL";
            break;
          case 1:
            result = "IBI_CALL_PS_RESULT_CODE_DUAL_SIM_CONFLICT";
            break;
          case 2:
            result = "IBI_CALL_PS_RESULT_CODE_NO_CARRIER_DUAL_SIM_CONFLICT";
            break;
          case 3:
            result = "IBI_CALL_PS_RESULT_CODE_FDN_CHECK_FAILED";
            break;
          case 4:
            result = "IBI_CALL_PS_RESULT_CODE_NO_RESPONSE_TIMEOUT";
            break;
          case 5:
            result = "IBI_CALL_PS_RESULT_CODE_MS_INTERNAL_FAILURE";
            break;
          case 6:
            return result;
          case 7:
            result = "IBI_CALL_PS_RESULT_CODE_ERR_CONGESTION";
            break;
          case 8:
            result = "IBI_CALL_PS_RESULT_CODE_ERR_DNN_NOT_SUPPORTED_OR_NOT_SUBSCRIBED_IN_SLICE";
            break;
          case 9:
            result = "IBI_CALL_PS_RESULT_CODE_ERR_PROCEDURE_ONGOING_FOR_PDU_SESSION";
            break;
          case 10:
            result = "IBI_CALL_PS_RESULT_CODE_SERVICE_AREA_RESTRICTED";
            break;
          case 11:
            result = "IBI_CALL_PS_RESULT_CODE_ERR_UNSPECIFIED";
            break;
          case 12:
            result = "IBI_CALL_PS_RESULT_CODE_ERR_INVALID_CID";
            break;
          case 13:
            result = "IBI_CALL_PS_RESULT_CODE_ERR_CONFIG_FAILURE";
            break;
          case 14:
            result = "IBI_CALL_PS_RESULT_CODE_CONTROL_BY_SIM_BUSY";
            break;
          case 15:
            result = "IBI_CALL_PS_RESULT_CODE_CONTROL_BY_SIM_REJECT";
            break;
          case 16:
            result = "IBI_CALL_PS_RESULT_CODE_DNN_NOT_IN_LADN_AREA";
            break;
          default:
            switch("IBI_CALL_PS_RESULT_CODE_ACL_REJECT")
            {
              case 0x200u:
                result = "IBI_CALL_PS_RESULT_CODE_PCO_SET_FAILURE";
                break;
              case 0x201u:
                result = "IBI_CALL_PS_RESULT_CODE_UNDEFINE_FAILURE";
                break;
              case 0x202u:
                result = "IBI_CALL_PS_RESULT_CODE_AUTH_FAILURE";
                break;
              case 0x203u:
                result = "IBI_CALL_PS_RESULT_CODE_UE_NOT_ATTACHED";
                break;
              case 0x204u:
                result = "IBI_CALL_PS_RESULT_CODE_ALREADY_IN_REQUESTED_STATE";
                break;
              case 0x205u:
                result = "IBI_CALL_PS_RESULT_CODE_INVALID_ATTACH_APN";
                break;
              case 0x206u:
                result = "IBI_CALL_PS_RESULT_CODE_APN_IS_ALREADY_UP";
                break;
              case 0x207u:
                result = "IBI_CALL_PS_RESULT_CODE_CANNOT_DEACTIVATE_ATTACH_APN";
                break;
              case 0x208u:
                result = "IBI_CALL_PS_RESULT_CODE_CID_IS_NOT_ACTIVATED";
                break;
              case 0x209u:
                result = "IBI_CALL_PS_RESULT_CODE_QOS_SET_FAILURE";
                break;
              case 0x20Au:
                result = "IBI_CALL_PS_RESULT_CODE_SET_DNS_FAILURE";
                break;
              case 0x20Bu:
                result = "IBI_CALL_PS_RESULT_CODE_CALL_THROTTLED";
                break;
              default:
                goto LABEL_154;
            }
            break;
        }
        break;
    }
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_CALL_PS_SCREEN_UNLOCKED";
  if (a1 == 1)
    return "IBI_CALL_PS_SCREEN_LOCKED";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SEC_PAGING_WITH_TEMP_ID";
  if (a1)
    return v1;
  else
    return "IBI_SEC_PAGING_WITH_PERM_ID";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SEC_TEMP_ID_UPDATED";
  if (a1)
    return v1;
  else
    return "IBI_SEC_TEMP_ID_NOT_UPDATED_FOR_LONG_TIME";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SEC_UE_CAPABILITY_WITH_ENCRYPTION";
  if (a1)
    return v1;
  else
    return "IBI_SEC_UE_CAPABILITY_WITHOUT_ENCRYPTION";
}

{
  const char *result;

  if (a1 > 15)
  {
    switch(a1)
    {
      case 16:
        return "IBI_CALL_PS_SERVICE_TYPE_VVM";
      case 32:
        return "IBI_CALL_PS_SERVICE_TYPE_DUN";
      case 64:
        return "IBI_CALL_PS_SERVICE_TYPE_HIGH_PRIO";
      default:
        return "???";
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
        result = "IBI_CALL_PS_SERVICE_TYPE_UNSPECIFIED";
        break;
      case 1:
        result = "IBI_CALL_PS_SERVICE_TYPE_INTERNET";
        break;
      case 2:
        result = "IBI_CALL_PS_SERVICE_TYPE_IMS";
        break;
      case 4:
        result = "IBI_CALL_PS_SERVICE_TYPE_MMS";
        break;
      case 8:
        result = "IBI_CALL_PS_SERVICE_TYPE_UT";
        break;
      default:
        return "???";
    }
  }
  return result;
}

{
  int v1;
  const char *result;

  v1 = a1 - 50;
  result = "IBI_CALL_PS_SM_CAUSE_ACCEPT_MAX";
  switch(v1)
  {
    case 0:
      result = "IBI_CALL_PS_SM_CAUSE_ACCEPT_TYPE_IPV4_ONLY_ALLOWED";
      break;
    case 1:
      result = "IBI_CALL_PS_SM_CAUSE_ACCEPT_TYPE_IPV6_ONLY_ALLOWED";
      break;
    case 2:
      result = "IBI_CALL_PS_SM_CAUSE_ACCEPT_SINGLE_ADDR_BEARERS_ONLY_ALLOWED";
      break;
    case 3:
      return result;
    default:
      if ("IBI_CALL_PS_SM_CAUSE_ACCEPT_MAX" == -1)
        result = "IBI_CALL_PS_SM_CAUSE_ACCEPT_NO_ADDITIONAL_INFO";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CALL_PS_STATUS_IRAT_SUSPENDED";
  if (a1 == 1)
    return "IBI_CALL_PS_STATUS_IRAT_RESUMED";
  else
    return v1;
}

{
  const char *result;

  switch(a1)
  {
    case 0:
      result = "IBI_CALL_PS_STOP_DATA_CALL_REASON_IPV6_ADDR_FORMATION_FAILURE";
      break;
    case 1:
      result = "IBI_CALL_PS_STOP_DATA_CALL_REASON_IPV6_ADDR_REFRESH_FAILURE";
      break;
    case 2:
      result = "IBI_CALL_PS_STOP_DATA_CALL_REASON_SWITCH_DATA_SIM_DUE_TO_VOICE_CALL";
      break;
    case 3:
      result = "IBI_CALL_PS_STOP_DATA_CALL_REASON_MANUAL_PLMN_SCAN";
      break;
    default:
      if (a1 == 255)
        result = "IBI_CALL_PS_STOP_DATA_CALL_REASON_INVALID";
      else
        result = "???";
      break;
  }
  return result;
}

{
  if ((a1 - 1) > 9)
    return "???";
  else
    return off_24C8DD668[a1 - 1];
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_CALL_PS_SYMPTOMS_INFO_MESSAGE_TYPE_FLOW_INFO";
  if (a1)
    return v1;
  else
    return "IBI_CALL_PS_SYMPTOMS_INFO_MESSAGE_TYPE_DEFAULT";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CALL_PS_UL_SDU_SCALING_SET";
  if (a1 == 1)
    return "IBI_CALL_PS_UL_SDU_NO_SCALING_SET";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_CALL_PS_VOIP_APP_3RD_PARTY";
  if (a1 == 1)
    return "IBI_CALL_PS_VOIP_APP_1ST_PARTY";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_CALL_PS_VOIP_CALL_ENDED";
  if (a1 == 1)
    return "IBI_CALL_PS_VOIP_CALL_ACTIVE";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_CALL_PS_VOIP_CALL_VIDEO";
  if (a1 == 1)
    return "IBI_CALL_PS_VOIP_CALL_AUDIO";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CDMA_PS_RAT_HRPD";
  if (a1 == 1)
    return "IBI_CDMA_PS_RAT_EHRPD";
  else
    return v1;
}

{
  const char *result;

  if (a1 > 63)
  {
    if (a1 <= 95)
    {
      switch(a1)
      {
        case '@':
          return "IBI_CDMA_SMS_ERR_CAUSE_RAD_RESOURCE_SHORTAGE";
        case 'A':
          return "IBI_CDMA_SMS_ERR_CAUSE_RAD_INTF_INCOMPTABILE";
        case 'B':
          return "IBI_CDMA_SMS_ERR_CAUSE_RAD_INTF_OTHER";
        default:
          return "???";
      }
    }
    else
    {
      switch(a1)
      {
          result = "IBI_CDMA_SMS_ERR_CAUSE_ENCODING";
          break;
        case 'a':
          result = "IBI_CDMA_SMS_ERR_CAUSE_ORIG_DENIED";
          break;
        case 'b':
          result = "IBI_CDMA_SMS_ERR_CAUSE_TERM_DENIED";
          break;
        case 'c':
          result = "IBI_CDMA_SMS_ERR_CAUSE_SS_NOT_SUPPORTED";
          break;
        case 'd':
          result = "IBI_CDMA_SMS_ERR_CAUSE_SMS_NOT_SUPPORTED";
          break;
        case 'f':
          result = "IBI_CDMA_SMS_ERR_CAUSE_MISSING_EXP_PARAM";
          break;
        case 'g':
          result = "IBI_CDMA_SMS_ERR_CAUSE_MISSING_MAND_PARAM";
          break;
        case 'h':
          result = "IBI_CDMA_SMS_ERR_CAUSE_UNRECOGN_PARAM_VAL";
          break;
        case 'i':
          result = "IBI_CDMA_SMS_ERR_CAUSE_UNEXP_PARAM_VAL";
          break;
        case 'j':
          result = "IBI_CDMA_SMS_ERR_CAUSE_USER_DATA_SIZE_ERR";
          break;
        case 'k':
          result = "IBI_CDMA_SMS_ERR_CAUSE_GENERAL_OTHER";
          break;
        default:
          return "???";
      }
    }
  }
  else
  {
    switch(a1)
    {
      case ' ':
        result = "IBI_CDMA_SMS_ERR_CAUSE_NO_PAGE_RESP";
        break;
      case '!':
        result = "IBI_CDMA_SMS_ERR_CAUSE_DEST_BUSY";
        break;
      case '"':
        result = "IBI_CDMA_SMS_ERR_CAUSE_NO_ACK";
        break;
      case '#':
        result = "IBI_CDMA_SMS_ERR_CAUSE_DEST_RESOURCE_SHORTAGE";
        break;
      case '$':
        result = "IBI_CDMA_SMS_ERR_CAUSE_DELIVERY_POSTPONED";
        break;
      case '%':
        result = "IBI_CDMA_SMS_ERR_CAUSE_DEST_OOS";
        break;
      case '&':
        result = "IBI_CDMA_SMS_ERR_CAUSE_DEST_NOT_AT_ADDR";
        break;
      case '\'':
        result = "IBI_CDMA_SMS_ERR_CAUSE_DEST_OTHER";
        break;
      default:
        result = "IBI_CDMA_SMS_ERR_CAUSE_ADDR_TRANSLATION_FAILURE";
        switch(a1)
        {
          case 0:
            result = "IBI_CDMA_SMS_ERR_CAUSE_ADDR_VACANT";
            break;
          case 1:
            return result;
          case 2:
            result = "IBI_CDMA_SMS_ERR_CAUSE_NW_RESOURCE_SHORTAGE";
            break;
          case 3:
            result = "IBI_CDMA_SMS_ERR_CAUSE_NW_FAILURE";
            break;
          case 4:
            result = "IBI_CDMA_SMS_ERR_CAUSE_INV_TELESERVICE_ID";
            break;
          case 5:
            result = "IBI_CDMA_SMS_ERR_CAUSE_NW_OTHER";
            break;
          default:
            return "???";
        }
        break;
    }
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CDMA_ERROR_CLASS_TEMPORARY";
  if (a1 == 1)
    return "IBI_CDMA_ERROR_CLASS_PERMANENT";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CELL_RESULT_SUCCESS";
  if (a1 == 1)
    return "IBI_CELL_RESULT_FAILURE";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_CLS_OPERATION_TYPE_SET";
  if (a1 == 1)
    return "IBI_CLS_OPERATION_TYPE_GET";
  else
    return v1;
}

{
  int v1;
  const char *result;

  v1 = a1 - 1;
  result = "IBI_CLS_POS_CAP_CP_LOCATION_REQUEST_SUPPORT";
  switch(v1)
  {
    case 0:
      result = "IBI_CLS_POS_CAP_LCS_NOTIFICATION_MECHANISM_SUPPORT";
      break;
    case 1:
      result = "IBI_CLS_POS_CAP_LPP_SUPPORT";
      break;
    case 2:
      result = "IBI_CLS_POS_CAP_GPS_FTA_MEAS_SUPPORT";
      break;
    case 3:
      result = "IBI_CLS_POS_CAP_CP_POSITIONING_SUPPORT";
      break;
    case 4:
      result = "IBI_CLS_POS_CAP_LTE_OTDOA_SUPPORT";
      break;
    case 5:
      result = "IBI_CLS_POS_CAP_LTE_OTDOA_MODE";
      break;
    case 6:
      result = "IBI_CLS_POS_CAP_LTE_ECID_SUPPORT";
      break;
    case 7:
      result = "IBI_CLS_POS_CAP_LTE_INTER_FREQ_OTDOA_SUPPORT";
      break;
    case 8:
      result = "IBI_CLS_POS_CAP_LTE_SON_LOCATION_AGE_LIMIT";
      break;
    case 9:
      result = "IBI_CLS_POS_CAP_LTE_SON_ACTIVE_POS_FLAG";
      break;
    case 10:
      result = "IBI_CLS_POS_CAP_LTE_MDT_LOCATION_AGE_LIMIT";
      break;
    case 11:
      result = "IBI_CLS_POS_CAP_LTE_MDT_LOCATION_RESPONSE_TIME";
      break;
    case 12:
      result = "IBI_CLS_POS_CAP_LTE_MDT_ACTIVE_POS_FLAG";
      break;
    case 13:
      result = "IBI_CLS_POS_CAP_LTE_MDT_UE_RX_TX_TIME_DIFF_MEAS_SUPPORT";
      break;
    case 14:
      result = "IBI_CLS_POS_CAP_GPS_STABILITY_LIMIT_SUPPORT";
      break;
    case 15:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_GSM_GPS_SUPPORT";
      break;
    case 16:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_GSM_GLONASS_SUPPORT";
      break;
    case 17:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_GSM_BDS_SUPPORT";
      break;
    case 18:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_UMTS_GPS_SUPPORT";
      break;
    case 19:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_UMTS_GLONASS_SUPPORT";
      break;
    case 20:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_UMTS_BDS_SUPPORT";
      break;
    case 21:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_LTE_GPS_SUPPORT";
      break;
    case 22:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_LTE_GLONASS_SUPPORT";
      break;
    case 23:
      result = "IBI_CLS_POS_CAP_GNSS_SYSTEM_LTE_BDS_SUPPORT";
      break;
    case 24:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_GSM_MS_ASSISTED_SUPPORT";
      break;
    case 25:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_GSM_MS_BASED_SUPPORT";
      break;
    case 26:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_GSM_MS_STANDALONE_SUPPORT";
      break;
    case 27:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_UMTS_MS_ASSISTED_SUPPORT";
      break;
    case 28:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_UMTS_MS_BASED_SUPPORT";
      break;
    case 29:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_UMTS_MS_STANDALONE_SUPPORT";
      break;
    case 30:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_LTE_MS_ASSISTED_SUPPORT";
      break;
    case 31:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_LTE_MS_BASED_SUPPORT";
      break;
    case 32:
      result = "IBI_CLS_POS_CAP_GNSS_MODE_LTE_MS_STANDALONE_SUPPORT";
      break;
    case 33:
      result = "IBI_CLS_POS_CAP_UMTS_UE_RX_TX_TIME_DIFF_TYPE_2_MEAS_SUPPORT";
      break;
    case 34:
      return result;
    case 35:
      result = "IBI_CLS_POS_CAP_CP_MTLR_TIMEOUT_DURATION";
      break;
    case 36:
      result = "IBI_CLS_POS_CAP_MDT_SON_LOCATION_SUPPORT";
      break;
    case 37:
      result = "IBI_CLS_POS_CAP_GNSS_AD_COMMON";
      break;
    case 38:
      result = "IBI_CLS_POS_CAP_GNSS_AD_GPS";
      break;
    case 39:
      result = "IBI_CLS_POS_CAP_GNSS_AD_GLONASS";
      break;
    case 40:
      result = "IBI_CLS_POS_CAP_GNSS_AD_BDS";
      break;
    case 41:
      result = "IBI_CLS_POS_CAP_GNSS_VEL_TYPES_SUPPORT";
      break;
    case 42:
      result = "IBI_CLS_POS_CAP_GNSS_LOC_TYPES_SUPPORT";
      break;
    case 43:
      result = "IBI_CLS_POS_CAP_LPP_WLAN_MEAS_SUPPORTED";
      break;
    case 44:
      result = "IBI_CLS_POS_CAP_LPP_WLAN_RSSI_MEAS_SUPPORTED";
      break;
    case 45:
      result = "IBI_CLS_POS_CAP_LPP_LOCATION_SOURCE_SUPPORTED";
      break;
    case 46:
    case 47:
      goto LABEL_5;
    case 48:
      result = "IBI_CLS_POS_CAP_NR_ECID_SUPPORT";
      break;
    case 49:
      result = "IBI_CLS_POS_CAP_LTE_ECID_FILTER_SUPPORT";
      break;
    case 50:
      result = "IBI_CLS_POS_CAP_NR_ECID_FILTER_SUPPORT";
      break;
    case 51:
      result = "IBI_CLS_POS_CAP_NR_ECID_SSB_SUPPORT";
      break;
    case 52:
      result = "IBI_CLS_POS_CAP_NR_ECID_CSI_RS_SUPPORT";
      break;
    default:
      if ("IBI_CLS_POS_CAP_CP_LOCATION_REQUEST_SUPPORT" == 0xFFFF)
        result = "IBI_CLS_POS_CAP_INVALID";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  if ((a1 - 1) > 2)
    return "???";
  else
    return off_24C8DDA30[a1 - 1];
}

{
  int v1;
  const char *result;
  const char *v3;

  v1 = a1 + 15;
  result = "IBI_ERROR_BAD_FORMAT";
  switch(v1)
  {
    case 0:
      result = "IBI_ERROR_STORAGE_ACCESS_FAILURE";
      break;
    case 1:
      result = "IBI_ERROR_OPERATION_PENDING";
      break;
    case 2:
      result = "IBI_ERROR_OUT_OF_HANDLES";
      break;
    case 3:
      result = "IBI_ERROR_IO_ERROR";
      break;
    case 4:
      result = "IBI_ERROR_INSUFFICIENT_PERMISSIONS";
      break;
    case 5:
      return result;
    case 6:
      result = "IBI_ERROR_WRONG_STATE";
      break;
    case 7:
      result = "IBI_ERROR_TIMEOUT";
      break;
    case 8:
      result = "IBI_ERROR_NOT_SUPPORTED";
      break;
    case 9:
      result = "IBI_ERROR_TOO_SMALL_BUF_PARAM";
      break;
    case 10:
      result = "IBI_ERROR_INVALID_PARAM";
      break;
    case 11:
      result = "IBI_ERROR_OUT_OF_RANGE_PARAM";
      break;
    case 12:
      result = "IBI_ERROR_INVALID_HANDLE";
      break;
    case 13:
      result = "IBI_ERROR_OUT_OF_MEMORY";
      break;
    case 14:
      result = "IBI_FAILURE";
      break;
    case 15:
      result = "IBI_SUCCESS";
      break;
    default:
      v3 = "???";
      if ("IBI_ERROR_BAD_FORMAT" == -69)
        v3 = "IBI_ERROR_CUSTOMER_SPECIFIC";
      if ("IBI_ERROR_BAD_FORMAT" == -100)
        result = "IBI_ERROR_SPECIFIC";
      else
        result = v3;
      break;
  }
  return result;
}

{
  const char *result;

  result = "SIM_CARD_1";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "SIM_CARD_2";
      break;
    case 2:
      result = "SIM_CARD_3";
      break;
    case 3:
      result = "SIM_CARD_4";
      break;
    case 4:
      result = "SIM_CARD_5";
      break;
    default:
      if (a1 == 255)
        result = "SIM_CARD_INVALID";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "SIM_ARB_SIM_INFO_SUCCESS";
  if (a1 == 1)
    return "SIM_ARB_SIM_INFO_FAILURE";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_CPS_CELLULAR_RADIO_STATE_ON_INST2";
  if (a1 == 1)
    return "IBI_CPS_CELLULAR_RADIO_STATE_ON_INST1";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_CPS_REJECTED_S_NSSAI_CURR_RA";
  if (a1)
    return v1;
  else
    return "IBI_CPS_REJECTED_S_NSSAI_CURR_PLMN";
}

{
  if ((a1 + 1) > 8)
    return "???";
  else
    return off_24C8DDC58[a1 + 1];
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_IMS_ME_AUDIOCHANNEL_MODE_STEREO";
  if (a1 == 1)
    return "IBI_IMS_ME_AUDIOCHANNEL_MODE_MONO";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_IMS_ME_AUDIO_CODEC_EVS_PRIMARY";
  if (a1 == 2)
    return "IBI_IMS_ME_AUDIO_CODEC_EVS_AMRWB_IO";
  else
    return v1;
}

{
  if ((a1 - 1) > 5)
    return "???";
  else
    return off_24C8DDCE0[a1 - 1];
}

{
  if ((a1 - 1) > 7)
    return "???";
  else
    return off_24C8DDD10[a1 - 1];
}

{
  if ((a1 - 1) > 2)
    return "???";
  else
    return off_24C8DDDD8[a1 - 1];
}

{
  const char *result;

  result = "IBI_IMS_ME_MEDIA_SESSION_ERR_DATA_PATH_ERROR";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "IBI_IMS_ME_MEDIA_SESSION_ERR_PLAYER_RESOURCE_BUSY";
      break;
    case 2:
      result = "IBI_IMS_ME_MEDIA_SESSION_ERR_RECORDER_RESOURCE_BUSY";
      break;
    case 3:
      result = "IBI_IMS_ME_MEDIA_SESSION_ERR_RTPRTCP_INACTIVITY_TIMEOUT";
      break;
    case 4:
      result = "IBI_IMS_ME_MEDIA_SESSION_ERR_RTP_INACTIVITY_TIMEOUT";
      break;
    case 5:
      result = "IBI_IMS_ME_MEDIA_SESSION_ERR_RTCP_INACTIVITY_TIMEOUT";
      break;
    default:
      if (a1 == 0xFFFF)
        result = "IBI_IMS_ME_MEDIA_SESSION_ERR_UNKNOWN_ERROR";
      else
        result = "???";
      break;
  }
  return result;
}

{
  if ((a1 - 1) > 2)
    return "???";
  else
    return off_24C8DDDF0[a1 - 1];
}

{
  if (a1 == 1)
    return "IBI_IMS_ME_RTT_CODEC_TYPE_T140";
  else
    return "???";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_IMS_ME_RTP_PROFILE_AVPF";
  if (a1 == 1)
    return "IBI_IMS_ME_RTP_PROFILE_AVP";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_IMS_ME_RTCP_SOURCE_REMOTE";
  if (a1 == 1)
    return "IBI_IMS_ME_RTCP_SOURCE_LOCAL";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_IMS_ENABLE_TEST_MODE_REQ";
  if (a1 == 1)
    return "IBI_IMS_AT_COMMAND_RESPONSE";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_LP_FIX_TYPE_3D";
  if (a1)
    return v1;
  else
    return "IBI_LP_FIX_TYPE_2D";
}

{
  const char *result;
  const char *v4;

  result = "IBI_LP_GANSS_DOPPLER_UNCER_EXT_D100";
  switch(a1)
  {
    case 0:
      result = "IBI_LP_GANSS_DOPPLER_UNCER_EXT_D60";
      break;
    case 1:
      result = "IBI_LP_GANSS_DOPPLER_UNCER_EXT_D80";
      break;
    case 2:
      return result;
    case 3:
      result = "IBI_LP_GANSS_DOPPLER_UNCER_EXT_D120";
      break;
    default:
      v4 = "IBI_LP_GANSS_DOPPLER_UNCER_EXT_NOT_PRESENT";
      if (a1 != 255)
        v4 = "???";
      if (a1 == 254)
        result = "IBI_LP_GANSS_DOPPLER_UNCER_EXT_NO_INFO";
      else
        result = v4;
      break;
  }
  return result;
}

{
  const char *result;

  result = "IBI_LP_GNSS_TIME_ID_BDS";
  switch(a1)
  {
    case 0:
      result = "IBI_LP_GNSS_TIME_ID_GPS";
      break;
    case 1:
      result = "IBI_LP_GNSS_TIME_ID_QZSS";
      break;
    case 2:
      result = "IBI_LP_GNSS_TIME_ID_GLONASS";
      break;
    case 3:
      result = "IBI_LP_GNSS_TIME_ID_GALILEO";
      break;
    case 4:
      return result;
    default:
      if (a1 == 255)
        result = "IBI_LP_GNSS_TIME_INVALID";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;
  const char *v4;

  result = "IBI_LP_GPS_DOPPLER_UNCER_EXT_D100";
  switch(a1)
  {
    case 0:
      result = "IBI_LP_GPS_DOPPLER_UNCER_EXT_D60";
      break;
    case 1:
      result = "IBI_LP_GPS_DOPPLER_UNCER_EXT_D80";
      break;
    case 2:
      return result;
    case 3:
      result = "IBI_LP_GPS_DOPPLER_UNCER_EXT_D120";
      break;
    default:
      v4 = "IBI_LP_GPS_DOPPLER_UNCER_EXT_NOT_PRESENT";
      if (a1 != 255)
        v4 = "???";
      if (a1 == 254)
        result = "IBI_LP_GPS_DOPPLER_UNCER_EXT_NO_INFO";
      else
        result = v4;
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_LP_IS801_LOCATION_IND_SUCCESS";
  if (a1 == 1)
    return "IBI_LP_IS801_LOCATION_IND_ERROR";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_LP_LOCATION_REQUEST_STATUS_START";
  if (a1 == 1)
    return "IBI_LP_LOCATION_REQUEST_STATUS_END";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_LP_SEND_AFLT_MEASUREMENT";
  if (a1)
    return v1;
  else
    return "IBI_LP_IGNORE_AFLT_MEASUREMENT";
}

{
  int v1;
  const char *result;

  v1 = a1 - 1;
  result = "IBI_LP_POSITION_METHOD_GNSS";
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      result = "IBI_LP_POSITION_METHOD_LTE_OTDOA";
      break;
    case 2:
    case 4:
    case 5:
    case 6:
      goto LABEL_5;
    case 3:
      result = "IBI_LP_POSITION_METHOD_LTE_ECID";
      break;
    case 7:
      result = "IBI_LP_POSITION_METHOD_UMTS_UE_RX_TX_TYPE2";
      break;
    default:
      if ("IBI_LP_POSITION_METHOD_GNSS" == 16)
        result = "IBI_LP_POSITION_METHOD_WLAN";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_LP_WLAN_ERROR_CAUSE_UNDEFINED";
  if (a1 == 2)
    return "IBI_LP_WLAN_ERROR_CAUSE_REQ_MEAS_NOT_AVAILABLE";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_MSIM_CONFIG_SSIM_MODE";
  if (a1 == 1)
    return "IBI_MSIM_CONFIG_MSIM_MODE";
  else
    return v1;
}

{
  int v1;
  const char *result;

  v1 = a1 - 1;
  result = "SIM_MAP_FAILURE_CALL_ONGOING";
  switch(v1)
  {
    case 0:
      result = "SIM_MAP_SUCCESS";
      break;
    case 1:
      return result;
    case 2:
      result = "SIM_MAP_FAILURE_CARD_RESET_UNSUCCESSFUL";
      break;
    case 3:
      result = "SIM_MAP_FAILURE_COMMUNICATION_ERROR";
      break;
    default:
      if ("SIM_MAP_FAILURE_CALL_ONGOING" == 255)
        result = "SIM_MAP_FAILURE_UNKNOWN";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_MESSAGE_MODE_3GPP2";
  if (a1)
    return v1;
  else
    return "IBI_MESSAGE_MODE_3GPP";
}

{
  const char *result;

  result = "IBI_NET_BAND_AUTOMATIC";
  switch(a1)
  {
    case 0:
      result = "IBI_NET_BAND_GSM900";
      break;
    case 1:
      result = "IBI_NET_BAND_GSM900_P";
      break;
    case 2:
      result = "IBI_NET_BAND_GSM900_E";
      break;
    case 3:
      result = "IBI_NET_BAND_GSM900_R";
      break;
    case 4:
      result = "IBI_NET_BAND_GSM1800";
      break;
    case 5:
      result = "IBI_NET_BAND_GSM1900";
      break;
    case 6:
      result = "IBI_NET_BAND_GSM850";
      break;
    case 7:
      result = "IBI_NET_BAND_GSM450";
      break;
    case 8:
      result = "IBI_NET_BAND_GSM480";
      break;
    case 9:
      result = "IBI_NET_BAND_GSM750";
      break;
    case 10:
      result = "IBI_NET_BAND_GSM_T_GSM380";
      break;
    case 11:
      result = "IBI_NET_BAND_GSM_T_GSM410";
      break;
    case 12:
      result = "IBI_NET_BAND_GSM_T_GSM900";
      break;
    case 13:
      result = "IBI_NET_BAND_GSM710";
      break;
    case 14:
      result = "IBI_NET_BAND_GSM_T_GSM810";
      break;
    case 15:
      result = "IBI_NET_BAND_MULTI";
      break;
    case 16:
      result = "IBI_NET_BAND_UMTS_FDD";
      break;
    case 17:
      result = "IBI_NET_BAND_UMTS_TDD";
      break;
    case 18:
      result = "IBI_NET_BAND_INVALID";
      break;
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 72:
    case 73:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 92:
    case 93:
    case 94:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
    case 100:
    case 132:
    case 148:
    case 155:
    case 156:
    case 157:
    case 158:
    case 159:
    case 160:
    case 161:
    case 162:
    case 163:
    case 164:
    case 165:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 187:
    case 190:
    case 191:
    case 192:
    case 193:
    case 194:
    case 195:
    case 196:
    case 197:
    case 198:
    case 199:
    case 222:
    case 223:
    case 224:
    case 225:
    case 226:
    case 227:
    case 228:
    case 229:
    case 230:
    case 231:
    case 232:
    case 233:
    case 234:
    case 235:
    case 236:
    case 237:
    case 238:
    case 239:
    case 240:
    case 241:
    case 242:
    case 243:
    case 244:
    case 245:
    case 246:
    case 247:
    case 248:
    case 249:
    case 250:
    case 251:
    case 252:
    case 253:
    case 254:
    case 256:
    case 257:
    case 258:
    case 259:
    case 260:
    case 261:
    case 262:
    case 263:
    case 264:
    case 265:
    case 266:
    case 267:
    case 268:
    case 269:
    case 270:
    case 271:
    case 272:
    case 273:
    case 274:
    case 275:
    case 276:
    case 277:
    case 278:
    case 279:
    case 280:
    case 281:
    case 282:
    case 283:
    case 284:
    case 316:
    case 331:
    case 338:
    case 339:
    case 340:
    case 341:
    case 342:
    case 343:
    case 344:
    case 345:
    case 346:
    case 347:
    case 348:
    case 371:
    case 372:
    case 381:
    case 382:
    case 383:
    case 384:
    case 385:
    case 386:
    case 387:
    case 388:
    case 389:
    case 390:
    case 391:
    case 392:
    case 393:
    case 394:
    case 395:
    case 396:
    case 397:
    case 398:
    case 399:
    case 400:
    case 401:
    case 402:
    case 403:
    case 404:
    case 405:
    case 406:
    case 407:
    case 408:
    case 409:
    case 410:
    case 411:
    case 412:
    case 413:
    case 414:
    case 415:
    case 416:
    case 417:
    case 418:
    case 419:
    case 420:
    case 421:
    case 422:
    case 423:
    case 424:
    case 425:
    case 426:
    case 427:
    case 428:
    case 429:
    case 430:
    case 431:
    case 432:
    case 433:
    case 434:
    case 435:
    case 436:
    case 437:
    case 438:
    case 439:
    case 440:
    case 441:
    case 442:
    case 443:
    case 444:
    case 445:
    case 446:
    case 447:
    case 448:
    case 449:
    case 450:
    case 451:
    case 452:
    case 453:
    case 454:
    case 455:
    case 456:
    case 457:
    case 458:
    case 459:
    case 460:
    case 461:
    case 462:
    case 463:
    case 464:
    case 465:
    case 466:
    case 467:
    case 468:
    case 469:
    case 470:
    case 471:
    case 472:
    case 473:
    case 474:
    case 475:
    case 476:
    case 477:
    case 478:
    case 479:
    case 480:
    case 481:
    case 482:
    case 483:
    case 484:
    case 485:
    case 486:
    case 487:
    case 488:
    case 489:
    case 490:
    case 491:
    case 492:
    case 493:
    case 494:
    case 495:
    case 496:
    case 497:
    case 498:
    case 499:
    case 500:
    case 501:
    case 502:
    case 503:
    case 504:
    case 505:
    case 506:
    case 507:
    case 508:
    case 509:
    case 510:
    case 511:
    case 512:
    case 513:
    case 514:
    case 515:
    case 516:
    case 517:
    case 518:
    case 519:
    case 520:
    case 521:
    case 522:
    case 523:
    case 524:
    case 525:
    case 526:
    case 527:
    case 528:
    case 529:
    case 530:
    case 531:
    case 532:
    case 533:
    case 534:
    case 535:
    case 536:
    case 537:
    case 538:
    case 539:
    case 540:
      goto LABEL_5;
    case 50:
      result = "IBI_NET_BAND_UMTS_I";
      break;
    case 51:
      result = "IBI_NET_BAND_UMTS_II";
      break;
    case 52:
      result = "IBI_NET_BAND_UMTS_III";
      break;
    case 53:
      result = "IBI_NET_BAND_UMTS_IV";
      break;
    case 54:
      result = "IBI_NET_BAND_UMTS_V";
      break;
    case 55:
      result = "IBI_NET_BAND_UMTS_VI";
      break;
    case 56:
      result = "IBI_NET_BAND_UMTS_VII";
      break;
    case 57:
      result = "IBI_NET_BAND_UMTS_VIII";
      break;
    case 58:
      result = "IBI_NET_BAND_UMTS_IX";
      break;
    case 59:
      result = "IBI_NET_BAND_UMTS_X";
      break;
    case 60:
      result = "IBI_NET_BAND_UMTS_XI";
      break;
    case 61:
      result = "IBI_NET_BAND_UMTS_XII";
      break;
    case 62:
      result = "IBI_NET_BAND_UMTS_XIII";
      break;
    case 63:
      result = "IBI_NET_BAND_UMTS_XIV";
      break;
    case 64:
      result = "IBI_NET_BAND_UMTS_XV";
      break;
    case 65:
      result = "IBI_NET_BAND_UMTS_XVI";
      break;
    case 66:
      result = "IBI_NET_BAND_UMTS_XVII";
      break;
    case 67:
      result = "IBI_NET_BAND_UMTS_XVIII";
      break;
    case 68:
      result = "IBI_NET_BAND_UMTS_XIX";
      break;
    case 69:
      result = "IBI_NET_BAND_UMTS_XX";
      break;
    case 70:
      result = "IBI_NET_BAND_UMTS_XXI";
      break;
    case 71:
      result = "IBI_NET_BAND_UMTS_XXII";
      break;
    case 74:
      result = "IBI_NET_BAND_UMTS_XXV";
      break;
    case 75:
      result = "IBI_NET_BAND_UMTS_INVALID";
      break;
    case 85:
      result = "IBI_NET_BAND_UMTS_TDD_A";
      break;
    case 86:
      result = "IBI_NET_BAND_UMTS_TDD_B";
      break;
    case 87:
      result = "IBI_NET_BAND_UMTS_TDD_C";
      break;
    case 88:
      result = "IBI_NET_BAND_UMTS_TDD_D";
      break;
    case 89:
      result = "IBI_NET_BAND_UMTS_TDD_E";
      break;
    case 90:
      result = "IBI_NET_BAND_UMTS_TDD_F";
      break;
    case 91:
      result = "IBI_NET_BAND_UMTS_TDD_INVALID";
      break;
    case 101:
      result = "IBI_NET_BAND_LTE_1";
      break;
    case 102:
      result = "IBI_NET_BAND_LTE_2";
      break;
    case 103:
      result = "IBI_NET_BAND_LTE_3";
      break;
    case 104:
      result = "IBI_NET_BAND_LTE_4";
      break;
    case 105:
      result = "IBI_NET_BAND_LTE_5";
      break;
    case 106:
      result = "IBI_NET_BAND_LTE_6";
      break;
    case 107:
      result = "IBI_NET_BAND_LTE_7";
      break;
    case 108:
      result = "IBI_NET_BAND_LTE_8";
      break;
    case 109:
      result = "IBI_NET_BAND_LTE_9";
      break;
    case 110:
      result = "IBI_NET_BAND_LTE_10";
      break;
    case 111:
      result = "IBI_NET_BAND_LTE_11";
      break;
    case 112:
      result = "IBI_NET_BAND_LTE_12";
      break;
    case 113:
      result = "IBI_NET_BAND_LTE_13";
      break;
    case 114:
      result = "IBI_NET_BAND_LTE_14";
      break;
    case 115:
      result = "IBI_NET_BAND_LTE_15";
      break;
    case 116:
      result = "IBI_NET_BAND_LTE_16";
      break;
    case 117:
      result = "IBI_NET_BAND_LTE_17";
      break;
    case 118:
      result = "IBI_NET_BAND_LTE_18";
      break;
    case 119:
      result = "IBI_NET_BAND_LTE_19";
      break;
    case 120:
      result = "IBI_NET_BAND_LTE_20";
      break;
    case 121:
      result = "IBI_NET_BAND_LTE_21";
      break;
    case 122:
      result = "IBI_NET_BAND_LTE_22";
      break;
    case 123:
      result = "IBI_NET_BAND_LTE_23";
      break;
    case 124:
      result = "IBI_NET_BAND_LTE_24";
      break;
    case 125:
      result = "IBI_NET_BAND_LTE_25";
      break;
    case 126:
      result = "IBI_NET_BAND_LTE_26";
      break;
    case 127:
      result = "IBI_NET_BAND_LTE_27";
      break;
    case 128:
      result = "IBI_NET_BAND_LTE_28";
      break;
    case 129:
      result = "IBI_NET_BAND_LTE_29";
      break;
    case 130:
      result = "IBI_NET_BAND_LTE_30";
      break;
    case 131:
      result = "IBI_NET_BAND_LTE_31";
      break;
    case 133:
      result = "IBI_NET_BAND_LTE_33";
      break;
    case 134:
      result = "IBI_NET_BAND_LTE_34";
      break;
    case 135:
      result = "IBI_NET_BAND_LTE_35";
      break;
    case 136:
      result = "IBI_NET_BAND_LTE_36";
      break;
    case 137:
      result = "IBI_NET_BAND_LTE_37";
      break;
    case 138:
      result = "IBI_NET_BAND_LTE_38";
      break;
    case 139:
      result = "IBI_NET_BAND_LTE_39";
      break;
    case 140:
      result = "IBI_NET_BAND_LTE_40";
      break;
    case 141:
      result = "IBI_NET_BAND_LTE_41";
      break;
    case 142:
      result = "IBI_NET_BAND_LTE_42";
      break;
    case 143:
      result = "IBI_NET_BAND_LTE_43";
      break;
    case 144:
      result = "IBI_NET_BAND_LTE_44";
      break;
    case 145:
      result = "IBI_NET_BAND_LTE_INVALID";
      break;
    case 146:
      result = "IBI_NET_BAND_LTE_45";
      break;
    case 147:
      result = "IBI_NET_BAND_LTE_46";
      break;
    case 149:
      result = "IBI_NET_BAND_LTE_48";
      break;
    case 150:
      result = "IBI_NET_BAND_LTE_49";
      break;
    case 151:
      result = "IBI_NET_BAND_LTE_50";
      break;
    case 152:
      result = "IBI_NET_BAND_LTE_51";
      break;
    case 153:
      result = "IBI_NET_BAND_LTE_52";
      break;
    case 154:
      result = "IBI_NET_BAND_LTE_53";
      break;
    case 166:
      result = "IBI_NET_BAND_LTE_65";
      break;
    case 167:
      result = "IBI_NET_BAND_LTE_66";
      break;
    case 168:
      result = "IBI_NET_BAND_LTE_67";
      break;
    case 169:
      result = "IBI_NET_BAND_LTE_68";
      break;
    case 170:
      result = "IBI_NET_BAND_LTE_69";
      break;
    case 171:
      result = "IBI_NET_BAND_LTE_70";
      break;
    case 172:
      result = "IBI_NET_BAND_LTE_71";
      break;
    case 173:
      result = "IBI_NET_BAND_LTE_72";
      break;
    case 174:
      result = "IBI_NET_BAND_LTE_73";
      break;
    case 175:
      result = "IBI_NET_BAND_LTE_74";
      break;
    case 176:
      result = "IBI_NET_BAND_LTE_75";
      break;
    case 177:
      result = "IBI_NET_BAND_LTE_76";
      break;
    case 186:
      result = "IBI_NET_BAND_LTE_85";
      break;
    case 188:
      result = "IBI_NET_BAND_LTE_87";
      break;
    case 189:
      result = "IBI_NET_BAND_LTE_88";
      break;
    case 200:
      result = "IBI_NET_BAND_CDMA_0";
      break;
    case 201:
      result = "IBI_NET_BAND_CDMA_1";
      break;
    case 202:
      result = "IBI_NET_BAND_CDMA_2";
      break;
    case 203:
      result = "IBI_NET_BAND_CDMA_3";
      break;
    case 204:
      result = "IBI_NET_BAND_CDMA_4";
      break;
    case 205:
      result = "IBI_NET_BAND_CDMA_5";
      break;
    case 206:
      result = "IBI_NET_BAND_CDMA_6";
      break;
    case 207:
      result = "IBI_NET_BAND_CDMA_7";
      break;
    case 208:
      result = "IBI_NET_BAND_CDMA_8";
      break;
    case 209:
      result = "IBI_NET_BAND_CDMA_9";
      break;
    case 210:
      result = "IBI_NET_BAND_CDMA_10";
      break;
    case 211:
      result = "IBI_NET_BAND_CDMA_11";
      break;
    case 212:
      result = "IBI_NET_BAND_CDMA_12";
      break;
    case 213:
      result = "IBI_NET_BAND_CDMA_13";
      break;
    case 214:
      result = "IBI_NET_BAND_CDMA_14";
      break;
    case 215:
      result = "IBI_NET_BAND_CDMA_15";
      break;
    case 216:
      result = "IBI_NET_BAND_CDMA_16";
      break;
    case 217:
      result = "IBI_NET_BAND_CDMA_17";
      break;
    case 218:
      result = "IBI_NET_BAND_CDMA_18";
      break;
    case 219:
      result = "IBI_NET_BAND_CDMA_19";
      break;
    case 220:
      result = "IBI_NET_BAND_CDMA_20";
      break;
    case 221:
      result = "IBI_NET_BAND_CDMA_21";
      break;
    case 255:
      return result;
    case 285:
      result = "IBI_NET_BAND_NR_1";
      break;
    case 286:
      result = "IBI_NET_BAND_NR_2";
      break;
    case 287:
      result = "IBI_NET_BAND_NR_3";
      break;
    case 288:
      result = "IBI_NET_BAND_NR_4";
      break;
    case 289:
      result = "IBI_NET_BAND_NR_5";
      break;
    case 290:
      result = "IBI_NET_BAND_NR_6";
      break;
    case 291:
      result = "IBI_NET_BAND_NR_7";
      break;
    case 292:
      result = "IBI_NET_BAND_NR_8";
      break;
    case 293:
      result = "IBI_NET_BAND_NR_9";
      break;
    case 294:
      result = "IBI_NET_BAND_NR_10";
      break;
    case 295:
      result = "IBI_NET_BAND_NR_11";
      break;
    case 296:
      result = "IBI_NET_BAND_NR_12";
      break;
    case 297:
      result = "IBI_NET_BAND_NR_13";
      break;
    case 298:
      result = "IBI_NET_BAND_NR_14";
      break;
    case 299:
      result = "IBI_NET_BAND_NR_15";
      break;
    case 300:
      result = "IBI_NET_BAND_NR_16";
      break;
    case 301:
      result = "IBI_NET_BAND_NR_17";
      break;
    case 302:
      result = "IBI_NET_BAND_NR_18";
      break;
    case 303:
      result = "IBI_NET_BAND_NR_19";
      break;
    case 304:
      result = "IBI_NET_BAND_NR_20";
      break;
    case 305:
      result = "IBI_NET_BAND_NR_21";
      break;
    case 306:
      result = "IBI_NET_BAND_NR_22";
      break;
    case 307:
      result = "IBI_NET_BAND_NR_23";
      break;
    case 308:
      result = "IBI_NET_BAND_NR_24";
      break;
    case 309:
      result = "IBI_NET_BAND_NR_25";
      break;
    case 310:
      result = "IBI_NET_BAND_NR_26";
      break;
    case 311:
      result = "IBI_NET_BAND_NR_27";
      break;
    case 312:
      result = "IBI_NET_BAND_NR_28";
      break;
    case 313:
      result = "IBI_NET_BAND_NR_29";
      break;
    case 314:
      result = "IBI_NET_BAND_NR_30";
      break;
    case 315:
      result = "IBI_NET_BAND_NR_31";
      break;
    case 317:
      result = "IBI_NET_BAND_NR_33";
      break;
    case 318:
      result = "IBI_NET_BAND_NR_34";
      break;
    case 319:
      result = "IBI_NET_BAND_NR_35";
      break;
    case 320:
      result = "IBI_NET_BAND_NR_36";
      break;
    case 321:
      result = "IBI_NET_BAND_NR_37";
      break;
    case 322:
      result = "IBI_NET_BAND_NR_38";
      break;
    case 323:
      result = "IBI_NET_BAND_NR_39";
      break;
    case 324:
      result = "IBI_NET_BAND_NR_40";
      break;
    case 325:
      result = "IBI_NET_BAND_NR_41";
      break;
    case 326:
      result = "IBI_NET_BAND_NR_42";
      break;
    case 327:
      result = "IBI_NET_BAND_NR_43";
      break;
    case 328:
      result = "IBI_NET_BAND_NR_44";
      break;
    case 329:
      result = "IBI_NET_BAND_NR_45";
      break;
    case 330:
      result = "IBI_NET_BAND_NR_46";
      break;
    case 332:
      result = "IBI_NET_BAND_NR_48";
      break;
    case 333:
      result = "IBI_NET_BAND_NR_49";
      break;
    case 334:
      result = "IBI_NET_BAND_NR_50";
      break;
    case 335:
      result = "IBI_NET_BAND_NR_51";
      break;
    case 336:
      result = "IBI_NET_BAND_NR_52";
      break;
    case 337:
      result = "IBI_NET_BAND_NR_53";
      break;
    case 349:
      result = "IBI_NET_BAND_NR_65";
      break;
    case 350:
      result = "IBI_NET_BAND_NR_66";
      break;
    case 351:
      result = "IBI_NET_BAND_NR_67";
      break;
    case 352:
      result = "IBI_NET_BAND_NR_68";
      break;
    case 353:
      result = "IBI_NET_BAND_NR_69";
      break;
    case 354:
      result = "IBI_NET_BAND_NR_70";
      break;
    case 355:
      result = "IBI_NET_BAND_NR_71";
      break;
    case 356:
      result = "IBI_NET_BAND_NR_72";
      break;
    case 357:
      result = "IBI_NET_BAND_NR_73";
      break;
    case 358:
      result = "IBI_NET_BAND_NR_74";
      break;
    case 359:
      result = "IBI_NET_BAND_NR_75";
      break;
    case 360:
      result = "IBI_NET_BAND_NR_76";
      break;
    case 361:
      result = "IBI_NET_BAND_NR_77";
      break;
    case 362:
      result = "IBI_NET_BAND_NR_78";
      break;
    case 363:
      result = "IBI_NET_BAND_NR_79";
      break;
    case 364:
      result = "IBI_NET_BAND_NR_80";
      break;
    case 365:
      result = "IBI_NET_BAND_NR_81";
      break;
    case 366:
      result = "IBI_NET_BAND_NR_82";
      break;
    case 367:
      result = "IBI_NET_BAND_NR_83";
      break;
    case 368:
      result = "IBI_NET_BAND_NR_84";
      break;
    case 369:
      result = "IBI_NET_BAND_NR_85";
      break;
    case 370:
      result = "IBI_NET_BAND_NR_86";
      break;
    case 373:
      result = "IBI_NET_BAND_NR_89";
      break;
    case 374:
      result = "IBI_NET_BAND_NR_90";
      break;
    case 375:
      result = "IBI_NET_BAND_NR_91";
      break;
    case 376:
      result = "IBI_NET_BAND_NR_92";
      break;
    case 377:
      result = "IBI_NET_BAND_NR_93";
      break;
    case 378:
      result = "IBI_NET_BAND_NR_94";
      break;
    case 379:
      result = "IBI_NET_BAND_NR_95";
      break;
    case 380:
      result = "IBI_NET_BAND_NR_96";
      break;
    case 541:
      result = "IBI_NET_BAND_NR_257";
      break;
    case 542:
      result = "IBI_NET_BAND_NR_258";
      break;
    case 543:
      result = "IBI_NET_BAND_NR_260";
      break;
    case 544:
      result = "IBI_NET_BAND_NR_261";
      break;
    default:
      if (a1 == 600)
        result = "IBI_NET_BAND_NR_INVALID";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_CELL_SIB2_BARRING_CONFIG";
  if (a1)
    return v1;
  else
    return "IBI_NET_CELL_CALL_EST_BARRED_INFO";
}

{
  if ((a1 - 1) > 3)
    return "???";
  else
    return off_24C8DE340[a1 - 1];
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_NET_SERVING_CELL";
  if (a1 == 1)
    return "IBI_NET_NEIGBOURING_CELL";
  else
    return v1;
}

{
  if ((a1 + 1) > 5)
    return "???";
  else
    return off_24C8DE498[a1 + 1];
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_DC_IMS_STATUS_REGISTERED";
  if (a1)
    return v1;
  else
    return "IBI_NET_DC_IMS_STATUS_NOT_REGISTERED";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_DC_IMS_RE_REGISTRATION";
  if (a1)
    return v1;
  else
    return "IBI_NET_DC_IMS_NEW_REGISTRATION";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_DC_IMS_SESSION_STOPPED";
  if (a1)
    return v1;
  else
    return "IBI_NET_DC_IMS_SESSION_STARTED";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_NET_DC_SSAC_BARRING_INFO_SUCCESS";
  if (a1 == 1)
    return "IBI_NET_DC_SSAC_BARRING_INFO_FAILURE_EUTRAN_NOT_ACTIVE";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_DC_VOICE_OVER_NR_CAP_SUPPORTED";
  if (a1)
    return v1;
  else
    return "IBI_NET_DC_VOICE_OVER_NR_CAP_NOT_SUPPORTED";
}

{
  const char *result;

  result = "IBI_NET_EM_CALL_TYPE_EM_SETUP_EM_CALL";
  switch(a1)
  {
    case 0:
      result = "IBI_NET_EM_CALL_TYPE_NONE";
      break;
    case 1:
      return result;
    case 2:
      result = "IBI_NET_EM_CALL_TYPE_NORMAL_SETUP_EM_CALL";
      break;
    case 3:
      result = "IBI_NET_EM_CALL_TYPE_T911";
      break;
    case 4:
      result = "IBI_NET_EM_CALL_TYPE_NOT_SELECTED_EM_CALL";
      break;
    default:
      if (a1 == 255)
        result = "IBI_NET_EM_CALL_TYPE_MAX";
      else
        result = "???";
      break;
  }
  return result;
}

{
  if (a1)
    return "???";
  else
    return "IBI_NET_EMERGENCY_CELL_SEARCH_FAIL_NO_CAUSE";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_ENCODING_SCHEME_UCS2";
  if (a1)
    return v1;
  else
    return "IBI_NET_ENCODING_SCHEME_ASCII";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_EONS_SUPPORT_TRUE";
  if (a1)
    return v1;
  else
    return "IBI_NET_EONS_SUPPORT_FALSE";
}

{
  int v1;
  const char *result;

  v1 = a1 - 2;
  result = "IBI_NET_ERROR_CALL_CANNOT_BE_IDENTIFIED";
  switch(v1)
  {
    case 0:
      result = "IBI_NET_ERROR_IMSI_UNKNOWN_IN_HLR";
      break;
    case 1:
      result = "IBI_NET_ERROR_ILLEGAL_MS";
      break;
    case 2:
      result = "IBI_NET_ERROR_IMSI_UNKNOWN_IN_VLR";
      break;
    case 3:
      result = "IBI_NET_ERROR_IMEI_NOT_ACCEPTED";
      break;
    case 4:
      result = "IBI_NET_ERROR_ILLEGAL_ME";
      break;
    case 5:
      result = "IBI_NET_ERROR_GPRS_SERVICES_NOT_ALLOWED";
      break;
    case 6:
      result = "IBI_NET_ERROR_GPRS_SERVICES_AND_NON_GPRS_SERVICES_NOT_ALLOWED";
      break;
    case 7:
      result = "IBI_NET_ERROR_MS_IDENTITY_CANNOT_BE_DERIVED_BY_THE_NETWORK";
      break;
    case 8:
      result = "IBI_NET_ERROR_IMPLICITLY_DETACHED";
      break;
    case 9:
      result = "IBI_NET_ERROR_PLMN_NOT_ALLOWED";
      break;
    case 10:
      result = "IBI_NET_ERROR_LOCATION_AREA_NOT_ALLOWED";
      break;
    case 11:
      result = "IBI_NET_ERROR_ROAMING_NOT_ALLOWED_IN_THIS_LOCATION_AREA";
      break;
    case 12:
      result = "IBI_NET_ERROR_GPRS_SERVICES_PLMN_NOT_ALLOWED_IN_THIS_PLMN";
      break;
    case 13:
      result = "IBI_NET_ERROR_NO_SUITABLE_CELLS_IN_LOCATION_AREA";
      break;
    case 14:
      result = "IBI_NET_ERROR_MSC_TEMPORARILY_NOT_REACHABLE";
      break;
    case 15:
      result = "IBI_NET_ERROR_NETWORK_FAILURE";
      break;
    case 16:
      result = "IBI_NET_ERROR_CS_DOMAIN_NOT_AVAILABLE";
      break;
    case 17:
      result = "IBI_NET_ERROR_ESM_FAILURE";
      break;
    case 18:
      result = "IBI_NET_ERROR_MAC_FAILURE";
      break;
    case 19:
      result = "IBI_NET_ERROR_SYNCH_FAILURE";
      break;
    case 20:
      result = "IBI_NET_ERROR_CONGESTION";
      break;
    case 21:
      result = "IBI_NET_ERROR_GSM_AUTHENTICATION_UNACCEPTABLE";
      break;
    case 22:
      result = "IBI_NET_ERROR_SECURITY_MODE_REJECTED";
      break;
    case 23:
      result = "IBI_NET_ERROR_NOT_AUTHORIZED_FOR_THIS_CSG";
      break;
    case 24:
      result = "IBI_NET_ERROR_NON_EPS_AUTHENTICATION_UNACCEPTABLE";
      break;
    case 25:
      result = "IBI_NET_ERROR_N1_MODE_NOT_ALLOWED";
      break;
    case 26:
      result = "IBI_NET_ERROR_SMS_SERVICE_PROVIDED_VIA_GPRS_IN_THIS_ROUTING_AREA";
      break;
    case 27:
    case 28:
    case 34:
    case 35:
    case 39:
    case 42:
    case 43:
    case 44:
    case 45:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 62:
    case 64:
    case 66:
    case 68:
    case 72:
    case 73:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 91:
    case 92:
    case 100:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
    case 107:
    case 108:
      goto LABEL_5;
    case 29:
      result = "IBI_NET_ERROR_REDIRECTION_TO_5GC_OR_EPC_REQUIRED";
      break;
    case 30:
      result = "IBI_NET_ERROR_SERVICE_OPTION_NOT_SUPPORTED";
      break;
    case 31:
      result = "IBI_NET_ERROR_REQUESTED_SERVICE_OPTION_NOT_SUBSCRIBED";
      break;
    case 32:
      result = "IBI_NET_ERROR_SERVICE_TEMPORARILY_OUT_OF_ORDER";
      break;
    case 33:
      result = "IBI_NET_ERROR_REQUEST_SERVICE_OPTION_NOT_AUTHORIZED_IN_THIS_PLMN";
      break;
    case 36:
      return result;
    case 37:
      result = "IBI_NET_ERROR_CS_DOMAIN_TEMPORARILY_NOT_AVAILABLE";
      break;
    case 38:
      result = "IBI_NET_ERROR_NO_PDP_CONTEXT_ACTIVE";
      break;
    case 40:
      result = "IBI_NET_ERROR_SEVERE_NETWORK_FAILURE";
      break;
    case 41:
      result = "IBI_NET_ERROR_LADN_NOT_AVAILABLE";
      break;
    case 46:
      result = "IBI_NET_ERROR_RETRY_ON_NEW_CELL_BEG";
      break;
    case 60:
      result = "IBI_NET_ERROR_NO_NETWORK_SLICES_AVAILABLE";
      break;
    case 61:
      result = "IBI_NET_ERROR_RETRY_ON_NEW_CELL_END";
      break;
    case 63:
      result = "IBI_NET_ERROR_MAX_NUM_PDU_SESSION_REACHED";
      break;
    case 65:
      result = "IBI_NET_ERROR_INSUFFICIENT_RESOURCES_FOR_SPECIFIC_SLICE_DNN";
      break;
    case 67:
      result = "IBI_NET_ERROR_INSUFFICIENT_RESOURCES_FOR_SPECIFIC_SLICE";
      break;
    case 69:
      result = "IBI_NET_ERROR_NGKSI_ALREADY_IN_USE";
      break;
    case 70:
      result = "IBI_NET_ERROR_NON_3GPP_ACCESS_TO_5GCN_NOT_ALLOWED";
      break;
    case 71:
      result = "IBI_NET_ERROR_SERVING_NW_NOT_AUTHORIZED";
      break;
    case 74:
      result = "IBI_NET_ERROR_NOT_AUTH_FOR_THIS_CAG_OR_AUTH_FOR_CAG_ONLY";
      break;
    case 75:
      result = "IBI_NET_ERROR_WIRELINE_ACCESS_AREA_NOT_ALLOWED";
      break;
    case 88:
      result = "IBI_NET_ERROR_PAYLOAD_NOT_FORWARDED";
      break;
    case 89:
      result = "IBI_NET_ERROR_DNN_NOT_SUPPORTED_OR_SUBSCRIBED_IN_SLICE";
      break;
    case 90:
      result = "IBI_NET_ERROR_INSUFFICIENT_USER_PLANE_RESOURCES_FOR_PDU_SESSION";
      break;
    case 93:
      result = "IBI_NET_ERROR_SEMANTICALLY_INCORRECT_MESSAGE";
      break;
    case 94:
      result = "IBI_NET_ERROR_INVALID_MANDATORY_INFORMATION";
      break;
    case 95:
      result = "IBI_NET_ERROR_MESSAGE_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENTED";
      break;
    case 96:
      result = "IBI_NET_ERROR_MESSAGE_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE";
      break;
    case 97:
      result = "IBI_NET_ERROR_INFORMATION_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED";
      break;
    case 98:
      result = "IBI_NET_ERROR_CONDITIONAL_IE_ERROR";
      break;
    case 99:
      result = "IBI_NET_ERROR_MESSAGE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE";
      break;
    case 109:
      result = "IBI_NET_ERROR_PROTOCOL_ERROR_UNSPECIFIED";
      break;
    default:
      if ("IBI_NET_ERROR_CALL_CANNOT_BE_IDENTIFIED" == 255)
        result = "IBI_NET_ERROR_NO_ERROR";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;

  result = "IBI_NET_GSM_SERVICE_CIRCUIT_SWITCHED";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "IBI_NET_GSM_SERVICE_PACKET_SWITCHED";
      break;
    case 2:
      result = "IBI_NET_GSM_SERVICE_CIRCUIT_SWITCHED_PREFERRED";
      break;
    case 3:
      result = "IBI_NET_GSM_SERVICE_PACKET_SWITCHED_PREFERRED";
      break;
    default:
      if (a1 == 99)
        result = "IBI_NET_GSM_SERVICE_UNDEFINED";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_NET_NSSAI_INFO_SUCCESS";
  if (a1 == 1)
    return "IBI_NET_NSSAI_INFO_ERROR";
  else
    return v1;
}

{
  const char *result;

  result = "IBI_NET_PWR_CLASS_1";
  switch(a1)
  {
    case 0:
      result = "IBI_NET_PWR_CLASS_INVALID";
      break;
    case 1:
      result = "IBI_NET_PWR_CLASS_DEFAULT";
      break;
    case 2:
      result = "IBI_NET_PWR_CLASS_NO_CHANGE";
      break;
    case 3:
      return result;
    case 4:
      result = "IBI_NET_PWR_CLASS_2";
      break;
    case 5:
      result = "IBI_NET_PWR_CLASS_3";
      break;
    case 6:
      result = "IBI_NET_PWR_CLASS_4";
      break;
    case 7:
      result = "IBI_NET_PWR_CLASS_5";
      break;
    default:
      switch(a1)
      {
        case '2':
          result = "IBI_NET_UMTS_PWR_CLASS_INVALID";
          break;
        case '3':
          result = "IBI_NET_UMTS_PWR_CLASS_1";
          break;
        case '4':
          result = "IBI_NET_UMTS_PWR_CLASS_2";
          break;
        case '5':
          result = "IBI_NET_UMTS_PWR_CLASS_3";
          break;
        case '6':
          result = "IBI_NET_UMTS_PWR_CLASS_4";
          break;
        default:
          result = "???";
          break;
      }
      break;
  }
  return result;
}

{
  const char *result;

  result = "IBI_NET_1XRTT_RADIO_SIGNAL_REPORT_CONFIG_PRESENT";
  switch(a1)
  {
    case 0:
      result = "IBI_NET_NO_RADIO_SIGNAL_REPORT_CONFIG_PRESENT";
      break;
    case 1:
      result = "IBI_NET_GSM_RADIO_SIGNAL_REPORT_CONFIG_PRESENT";
      break;
    case 2:
      result = "IBI_NET_UMTS_RADIO_SIGNAL_REPORT_CONFIG_PRESENT";
      break;
    case 3:
    case 5:
    case 6:
    case 7:
      goto LABEL_6;
    case 4:
      result = "IBI_NET_LTE_RADIO_SIGNAL_REPORT_CONFIG_PRESENT";
      break;
    case 8:
      return result;
    default:
      if (a1 == 32)
      {
        result = "IBI_NET_NR_RADIO_SIGNAL_REPORT_CONFIG_PRESENT";
      }
      else if (a1 == 16)
      {
        result = "IBI_NET_EVDO_RADIO_SIGNAL_REPORT_CONFIG_PRESENT";
      }
      else
      {
LABEL_6:
        result = "???";
      }
      break;
  }
  return result;
}

{
  const char *v1;
  const char *v2;

  v1 = "IBI_NET_RAT_REL_INVALID";
  v2 = "???";
  if (a1 == 1)
    v2 = "IBI_NET_RAT_REL_16";
  if (a1 != 255)
    v1 = v2;
  if (a1)
    return v1;
  else
    return "IBI_NET_RAT_REL_15";
}

{
  const char *v1;
  const char *v2;

  v1 = "IBI_NET_RAT_RRC_REL_VER_UPGRADE";
  v2 = "???";
  if (a1 == 255)
    v2 = "IBI_NET_RAT_RRC_REL_VER_INVALID";
  if (a1 != 1)
    v1 = v2;
  if (a1)
    return v1;
  else
    return "IBI_NET_RAT_RRC_REL_VER_DOWNGRADE";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_REGISTRATION_MODE_MANUAL";
  if (a1)
    return v1;
  else
    return "IBI_NET_REGISTRATION_MODE_AUTOMATIC";
}

{
  if (a1 > 59)
  {
    switch(a1)
    {
      case '\x7F':
        return "IBI_NET_SIGNAL_QUALITY_NR";
      case '>':
        return "IBI_NET_SIGNAL_QUALITY_1XRTT";
      case '<':
        return "IBI_NET_SIGNAL_QUALITY_EVDO";
    }
  }
  else
  {
    switch(a1)
    {
      case 7:
        return "IBI_NET_SIGNAL_QUALITY_GSM";
      case 34:
        return "IBI_NET_SIGNAL_QUALITY_LTE";
      case 49:
        return "IBI_NET_SIGNAL_QUALITY_UMTS";
    }
  }
  return "???";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_NET_FRESH_SERV_CACHED_NEIGH_CELL_MEAS";
  if (a1)
    return v1;
  else
    return "IBI_NET_CACHED_MEAS";
}

{
  if (a1 == 1)
    return "IBI_NET_TIMER_T3402";
  else
    return "???";
}

{
  if (a1 > 1)
  {
    if (a1 != 2)
    {
      if (a1 == 255)
        return "IBI_NET_TIMER_STATUS_NOT_DEFINED";
      return "???";
    }
    return "IBI_NET_TIMER_DEACTIVATED";
  }
  else
  {
    if (a1)
    {
      if (a1 == 1)
        return "IBI_NET_TIMER_STOPPED";
      return "???";
    }
    return "IBI_NET_TIMER_STARTED";
  }
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBINetManageUePolicyCommandReject";
  if (a1)
    return v1;
  else
    return "IBINetManageUePolicyCommandComplete";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_NET_UAC_BARRING_STATUS_NONE";
  if (a1 == 1)
    return "IBI_NET_UAC_BARRING_STATUS_BARRED";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_NET_VOIMS_CALL_RAT_SWITCH_SUCCESS";
  if (a1 == 1)
    return "IBI_NET_VOIMS_CALL_RAT_SWITCH_FAILURE";
  else
    return v1;
}

{
  int v1;
  const char *result;

  v1 = a1 - 1;
  result = "IBI_NVM_CALIBRATION";
  switch(v1)
  {
    case 0:
      result = "IBI_NVM_STATIC";
      break;
    case 1:
      result = "IBI_NVM_DYNAMIC";
      break;
    case 2:
    case 4:
    case 5:
    case 6:
      goto LABEL_5;
    case 3:
      return result;
    case 7:
      result = "IBI_NVM_FATP_CALIBRATION";
      break;
    default:
      if ("IBI_NVM_CALIBRATION" == 16)
        result = "IBI_NVM_PROVISIONING";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;

  result = "IBI_OGRS_FAILURE_CAUSE_AlreadyActive";
  switch(a1)
  {
    case 0:
      result = "IBI_OGRS_FAILURE_CAUSE_None";
      break;
    case 1:
      result = "IBI_OGRS_FAILURE_CAUSE_NotEnabled";
      break;
    case 2:
      result = "IBI_OGRS_FAILURE_CAUSE_NotSupported";
      break;
    case 3:
      result = "IBI_OGRS_FAILURE_CAUSE_RatConfigurationError";
      break;
    case 4:
      return result;
    case 5:
      result = "IBI_OGRS_FAILURE_CAUSE_AlreadyOngoing";
      break;
    case 6:
      result = "IBI_OGRS_FAILURE_CAUSE_NotActivated";
      break;
    case 7:
      result = "IBI_OGRS_FAILURE_CAUSE_UnknownInterfaceID";
      break;
    case 8:
      result = "IBI_OGRS_FAILURE_CAUSE_InterfaceIdNotStarted";
      break;
    case 9:
      result = "IBI_OGRS_FAILURE_CAUSE_NotDiscovered";
      break;
    case 10:
      result = "IBI_OGRS_FAILURE_CAUSE_ResourceLimitation";
      break;
    case 11:
      result = "IBI_OGRS_FAILURE_CAUSE_PdnNotSetup";
      break;
    case 12:
      result = "IBI_OGRS_FAILURE_CAUSE_AlreadyConnected";
      break;
    case 13:
      result = "IBI_OGRS_FAILURE_CAUSE_DatapathFailure";
      break;
    default:
      if (a1 == 255)
        result = "IBI_OGRS_FAILURE_CAUSE_UnspecifiedError";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_PRI_REFRESH_STATUS_SUCCESS";
  if (a1 == 1)
    return "IBI_PRI_REFRESH_STATUS_FAILURE";
  else
    return v1;
}

{
  const char *result;

  result = "IBI_CALL_PS_FILTER_RESP_FAILURE";
  switch(a1)
  {
    case 0:
      result = "IBI_CALL_PS_FILTER_RESP_SUCCESS";
      break;
    case 1:
      result = "IBI_CALL_PS_FILTER_RESP_NOT_SUPPORTED";
      break;
    case 2:
      result = "IBI_CALL_PS_FILTER_RESP_INVALID_PARAM";
      break;
    case 3:
      return result;
    default:
      if (a1 == 0x1FFFFFFF)
        result = "IBI_CALL_PS_RESP_MAXENUMSIZE";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;
  const char *v2;

  switch(a1)
  {
    case 0:
      result = "IBI_CALL_PS_IP_PROTO_INVALID";
      break;
    case 1:
      result = "IBI_CALL_PS_IP_PROTO_TCP";
      break;
    case 2:
      result = "IBI_CALL_PS_IP_PROTO_UDP";
      break;
    case 3:
      result = "IBI_CALL_PS_IP_PROTO_TCPUDP";
      break;
    default:
      v2 = "???";
      if (a1 == 0x1FFFFFFF)
        v2 = "IBI_CALL_PS_PROTO_MAXENUMSIZE";
      if (a1 == 255)
        result = "IBI_CALL_PS_IP_PROTO_ANY";
      else
        result = v2;
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_RAT_INFO_EXT_TDD";
  if (a1)
    return v1;
  else
    return "IBI_RAT_INFO_EXT_NO_INFORMATION";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 2)
    v1 = "IBI_RF_PORTB_FCM1";
  if (a1 == 1)
    return "IBI_RF_PORTA_BCM";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_RF_PORTMAP_OK";
  if (a1 == 1)
    return "IBI_RF_PORTMAP_INVALID_PARAM";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SIM_ACCESS_CARD_TYPE_INFO_RUIM_PRESENT";
  if (a1)
    return v1;
  else
    return "IBI_SIM_ACCESS_CARD_TYPE_INFO_NONE";
}

{
  const char *result;

  if (a1 <= 100)
  {
    result = "IBI_SIM_ACCESS_SIM_STATE_ACTIVATED";
    switch(a1)
    {
      case 0:
        result = "IBI_SIM_ACCESS_SIM_STATE_NOT_PRESENT";
        break;
      case 1:
        return result;
      case 2:
        result = "IBI_SIM_ACCESS_SIM_STATE_PIN_VERIFICATION_NEEDED";
        break;
      case 3:
        result = "IBI_SIM_ACCESS_SIM_STATE_LOCK_VERIFICATION_NEEDED";
        break;
      case 4:
        result = "IBI_SIM_ACCESS_SIM_STATE_INIT_ONGOING";
        break;
      case 5:
        result = "IBI_SIM_ACCESS_SIM_STATE_OPERATIONAL";
        break;
      case 6:
        result = "IBI_SIM_ACCESS_SIM_STATE_ERROR";
        break;
      default:
LABEL_25:
        result = "???";
        break;
    }
  }
  else if (a1 <= 127)
  {
    switch(a1)
    {
      case 'e':
        result = "IBI_SIM_ACCESS_SIM_STATE_CUST_1";
        break;
      case 'f':
        result = "IBI_SIM_ACCESS_SIM_STATE_CUST_2";
        break;
      case 'g':
        result = "IBI_SIM_ACCESS_SIM_STATE_CUST_3";
        break;
      case 'h':
        result = "IBI_SIM_ACCESS_SIM_STATE_CUST_4";
        break;
      case 'i':
        result = "IBI_SIM_ACCESS_SIM_STATE_CUST_5";
        break;
      default:
        goto LABEL_25;
    }
  }
  else
  {
    switch(a1)
    {
      case 128:
        result = "IBI_SIM_ACCESS_SIM_STATE_INSERTED_BLANK";
        break;
      case 129:
        result = "IBI_SIM_ACCESS_SIM_STATE_PSO_INCOMPLETE";
        break;
      case 130:
        result = "IBI_SIM_ACCESS_SIM_STATE_RESTORE_MODE";
        break;
      case 131:
        result = "IBI_SIM_ACCESS_SIM_STATE_NOT_AUTHORIZED";
        break;
      default:
        if (a1 == 254)
        {
          result = "IBI_SIM_ACCESS_SIM_STATE_NOT_DETECTED";
        }
        else
        {
          if (a1 != 255)
            goto LABEL_25;
          result = "IBI_SIM_ACCESS_SIM_STATE_LAST";
        }
        break;
    }
  }
  return result;
}

{
  if (a1 > 1)
  {
    if (a1 != 2)
    {
      if (a1 == 255)
        return "SIM_CARD_STATUS_INVALID";
      return "???";
    }
    return "SIM_CARD_STATUS_NOT_PERSOED";
  }
  else
  {
    if (a1)
    {
      if (a1 == 1)
        return "SIM_CARD_STATUS_PRESENT";
      return "???";
    }
    return "SIM_CARD_STATUS_ABSENT";
  }
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SIM_CARD_TYPE_3G";
  if (a1)
    return v1;
  else
    return "IBI_SIM_CARD_TYPE_2G";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_SIM_RES_TYPE_OK";
  if (a1 == 1)
    return "IBI_SIM_RES_TYPE_FAIL";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SIM_FCP_APP_PIN_ENABLED";
  if (a1)
    return v1;
  else
    return "IBI_SIM_FCP_APP_PIN_DISABLED";
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SIM_FCP_SEC_ATTR_REF_TYPE_SEID_RECS";
  if (a1)
    return v1;
  else
    return "IBI_SIM_FCP_SEC_ATTR_REF_TYPE_REC";
}

{
  const char *result;

  result = "IBI_SIM_MSG_TAG_TYPE_FREE";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "IBI_SIM_MSG_TAG_TYPE_MT_READ";
      break;
    case 2:
      result = "IBI_SIM_MSG_TAG_TYPE_MT_NOT_READ";
      break;
    case 3:
      result = "IBI_SIM_MSG_TAG_TYPE_MO_SENT";
      break;
    case 4:
      result = "IBI_SIM_MSG_TAG_TYPE_MO_NOT_SENT";
      break;
    default:
      if (a1 == 255)
        result = "IBI_SIM_SMS_TAG_TYPE_UNKNOWN";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_SIM_PB_SIM_PHONEBOOK_CACHE_STARTED";
  if (a1 == 1)
    return "IBI_SIM_PB_SIM_PHONEBOOK_CACHE_FINISHED";
  else
    return v1;
}

{
  int v1;
  const char *result;

  if (a1 > 63)
  {
    if (a1 > 511)
    {
      switch(a1)
      {
        case 512:
          return "IBI_SIM_PB_LOCATION_MBDN_PHONEBOOK";
        case 1024:
          return "IBI_SIM_PB_LOCATION_CPHS_MBOX_PHONEBOOK";
        case 2048:
          return "IBI_SIM_PB_LOCATION_CPHS_INFNUM_PHONEBOOK";
      }
    }
    else
    {
      switch(a1)
      {
        case 64:
          return "IBI_SIM_PB_LOCATION_GLOBAL_USIM_PHONEBOOK";
        case 128:
          return "IBI_SIM_PB_LOCATION_LOCAL_USIM_PHONEBOOK";
        case 256:
          return "IBI_SIM_PB_LOCATION_ECC_PHONEBOOK";
      }
    }
    return "???";
  }
  v1 = a1 - 1;
  result = "IBI_SIM_PB_LOCATION_ADN_PHONEBOOK";
  switch(v1)
  {
    case 0:
      return result;
    case 1:
      return "IBI_SIM_PB_LOCATION_FDN_PHONEBOOK";
    case 2:
    case 4:
    case 5:
    case 6:
      return "???";
    case 3:
      return "IBI_SIM_PB_LOCATION_LND_PHONEBOOK";
    case 7:
      return "IBI_SIM_PB_LOCATION_SDN_PHONEBOOK";
    default:
      if ("IBI_SIM_PB_LOCATION_ADN_PHONEBOOK" == 16)
      {
        result = "IBI_SIM_PB_LOCATION_MSISDN_PHONEBOOK";
      }
      else
      {
        if ("IBI_SIM_PB_LOCATION_ADN_PHONEBOOK" != 32)
          return "???";
        result = "IBI_SIM_PB_LOCATION_BDN_PHONEBOOK";
      }
      break;
  }
  return result;
}

{
  const char *result;

  if (a1 > 15)
  {
    switch(a1)
    {
      case 16:
        return "IBI_SIM_PB_VALID_FLAG_EMAIL";
      case 32:
        return "IBI_SIM_PB_VALID_FLAG_URI";
      case 255:
        return "IBI_SIM_PB_VALID_FLAG_ALL";
      default:
        return "???";
    }
  }
  else
  {
    switch(a1)
    {
      case 0:
        result = "IBI_SIM_PB_VALID_FLAG_NONE";
        break;
      case 1:
        result = "IBI_SIM_PB_VALID_FLAG_PBC";
        break;
      case 2:
        result = "IBI_SIM_PB_VALID_FLAG_GRP";
        break;
      case 4:
        result = "IBI_SIM_PB_VALID_FLAG_ANR";
        break;
      case 8:
        result = "IBI_SIM_PB_VALID_FLAG_SNE";
        break;
      default:
        return "???";
    }
  }
  return result;
}

{
  const char *result;
  int v2;

  switch(a1)
  {
    case 0:
      result = "IBI_SIM_PIN_NO_KEY";
      break;
    case 1:
      result = "IBI_SIM_PIN1_APP1_KEY";
      break;
    case 2:
      result = "IBI_SIM_PIN1_APP2_KEY";
      break;
    case 3:
      result = "IBI_SIM_PIN1_APP3_KEY";
      break;
    case 4:
      result = "IBI_SIM_PIN1_APP4_KEY";
      break;
    case 5:
      result = "IBI_SIM_PIN1_APP5_KEY";
      break;
    case 6:
      result = "IBI_SIM_PIN1_APP6_KEY";
      break;
    case 7:
      result = "IBI_SIM_PIN1_APP7_KEY";
      break;
    case 8:
      result = "IBI_SIM_PIN1_APP8_KEY";
      break;
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
LABEL_5:
      result = "???";
      break;
    case 17:
      result = "IBI_SIM_UNIVERSAL_PIN_KEY";
      break;
    default:
      v2 = a1 - 129;
      result = "IBI_SIM_ADM_PIN_KEY";
      switch(v2)
      {
        case 0:
          result = "IBI_SIM_PIN2_APP1_KEY";
          break;
        case 1:
          result = "IBI_SIM_PIN2_APP2_KEY";
          break;
        case 2:
          result = "IBI_SIM_PIN2_APP3_KEY";
          break;
        case 3:
          result = "IBI_SIM_PIN2_APP4_KEY";
          break;
        case 4:
          result = "IBI_SIM_PIN2_APP5_KEY";
          break;
        case 5:
          result = "IBI_SIM_PIN2_APP6_KEY";
          break;
        case 6:
          result = "IBI_SIM_PIN2_APP7_KEY";
          break;
        case 7:
          result = "IBI_SIM_PIN2_APP8_KEY";
          break;
        case 8:
          return result;
        default:
          goto LABEL_5;
      }
      break;
  }
  return result;
}

{
  if ((a1 - 2) > 2)
    return "???";
  else
    return off_24C8DF7C0[a1 - 2];
}

{
  if (a1 <= 1)
  {
    if (!a1)
      return "IBI_SIM_TK_CALL_CONTROL_RESULT_ALLOWED";
    if (a1 == 1)
      return "IBI_SIM_TK_CALL_CONTROL_RESULT_NOT_ALLOWED";
  }
  else
  {
    switch(a1)
    {
      case 255:
        return "IBI_SIM_TK_CALL_CONTROL_RESULT_SIM_ERROR";
      case 254:
        return "IBI_SIM_TK_CALL_CONTROL_RESULT_TOOLKIT_BUSY";
      case 2:
        return "IBI_SIM_TK_CALL_CONTROL_RESULT_ALLOWED_MODIFIED";
    }
  }
  return "???";
}

{
  const char *result;

  result = "IBI_SIM_TK_SETUP_CALL_DISCONNECT_ALL_OTHER_CALLS";
  switch(a1)
  {
    case 0:
      result = "IBI_SIM_TK_SETUP_CALL_IF_NOT_BUSY_ON_ANOTHER_CALL";
      break;
    case 1:
      result = "IBI_SIM_TK_SETUP_CALL_IF_NOT_BUSY_ON_ANOTHER_CALL_WITH_REDIAL";
      break;
    case 2:
      result = "IBI_SIM_TK_SETUP_CALL_PUT_ALL_OTHER_CALLS_ON_HOLD";
      break;
    case 3:
      result = "IBI_SIM_TK_SETUP_CALL_PUT_ALL_OTHER_CALLS_ON_HOLD_WITH_REDIAL";
      break;
    case 4:
      return result;
    case 5:
      result = "IBI_SIM_TK_SETUP_CALL_DISCONNECT_ALL_OTHER_CALLS_WITH_REDIAL";
      break;
    default:
      if (a1 == 255)
        result = "IBI_SIM_TK_SETUP_CALL_RESERVED";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;

  result = "IBI_SIM_TK_ENVELOPE_TYPE_CALL_CONTROL";
  switch(a1)
  {
    case 0:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_MENU_SELECTION";
      break;
    case 1:
      return result;
    case 2:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_MO_SMS_CONTROL";
      break;
    case 3:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_MT_CALL";
      break;
    case 4:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_CALL_CONNECTED";
      break;
    case 5:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_CALL_DISCONNECTED";
      break;
    case 6:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_LOCATION_STATUS";
      break;
    case 7:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_USER_ACTIVITY";
      break;
    case 8:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_IDLE_SCREEN_AVAILABLE";
      break;
    case 9:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_LANGUAGE_SELECTION";
      break;
    case 10:
      result = "IBI_SIM_TK_ENVELOPE_TYPE_EVENT_DOWNLOAD_IMS_REGISTRATION";
      break;
    default:
      if (a1 == 255)
        result = "IBI_SIM_TK_ENVELOPE_TYPE_INVALID";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;

  if (a1 <= 12542)
  {
    if (a1 < 0x2000)
    {
      if (a1 <= 1790)
      {
        if (a1 > 1022)
        {
          switch(a1)
          {
            case 1023:
              return "IBI_SIM_TK_PROACTIVE_CAUSE_REFRESH_PERFORMED_WITH_ADDITIONAL_EFS_READ";
            case 1279:
              return "IBI_SIM_TK_PROACTIVE_CAUSE_SUCCESSFUL_BUT_ICON_NOT_DISPLAYED";
            case 1535:
              return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_PERFORMED_BUT_MODIFIED_BY_CALL_CONTROL_BY_SIM";
          }
        }
        else
        {
          switch(a1)
          {
            case 255:
              return "IBI_SIM_TK_PROACTIVE_CAUSE_SUCCESSFUL";
            case 511:
              return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_PERFORMED_WITH_PARTIAL_COMPREHENSION";
            case 767:
              return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_PERFORMED_WITH_MISSING_INFORMATION";
          }
        }
      }
      else if (a1 <= 4606)
      {
        switch(a1)
        {
          case 1791:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_PERFORMED_SUCCESSFULLY_LIMITED_SERVICE";
          case 2047:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_PERFORMED_WITH_MODIFICATION";
          case 4351:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_TERMINATE_BY_USER";
        }
      }
      else if (a1 > 5118)
      {
        if (a1 == 5119)
          return "IBI_SIM_TK_PROACTIVE_CAUSE_HELP_INFO";
        if (a1 == 5375)
          return "IBI_SIM_TK_PROACTIVE_CAUSE_USSD_OR_SS_TRANSACTION_TERMINATED_BY_USER";
      }
      else
      {
        if (a1 == 4607)
          return "IBI_SIM_TK_PROACTIVE_CAUSE_BACKWARD_MOVE";
        if (a1 == 4863)
          return "IBI_SIM_TK_PROACTIVE_CAUSE_NO_RESPONSE";
      }
    }
    else
    {
      if (a1 <= 8958)
      {
        switch(a1)
        {
          case 8192:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_CURRENTLY_UNABLE";
            break;
          case 8193:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_SCREEN_BUSY";
            break;
          case 8194:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_BUSY_ON_CALL";
            break;
          case 8195:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_BUSY_ON_SS_TRANSACTION";
            break;
          case 8196:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_NO_SERVICE";
            break;
          case 8197:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_ACCESS_CONTROL_CLASS_BAR";
            break;
          case 8198:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_RADIO_RESOURCE_NOT_GRANTED";
            break;
          case 8199:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_NOT_IN_SPEECH_CALL";
            break;
          case 8200:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_BUSY_ON_USSD_TRANSACTION";
            break;
          case 8201:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_BUSY_ON_SEND_DTMF_COMMAND";
            break;
          case 8202:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_ME_CURRENTLY_UNABLE_NO_NAA_ACTIVE";
            break;
          default:
            if (a1 != 8448)
              return "???";
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_NETWORK_CURRENTLY_UNABLE_TO_PROCESS_COMMAND";
            break;
        }
        return result;
      }
      if (a1 > 9726)
      {
        switch(a1)
        {
          case 9727:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_INTERACTION_WITH_CALL_CONTROL_BY_SIM_TEMPORARY_PROBLEM";
            break;
          case 9728:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_LAUNCH_BROWSER_ERROR";
            break;
          case 9729:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_LAUNCH_BROWSER_BEARER_UNAVAILABLE";
            break;
          case 9730:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_LAUNCH_BROWSER_BROWSER_UNAVAILABLE";
            break;
          case 9731:
            result = "IBI_SIM_TK_PROACTIVE_CAUSE_LAUNCH_BROWSER_ME_UNABLE_TO_READ_PROVISIONING_DATA";
            break;
          default:
            return "???";
        }
        return result;
      }
      switch(a1)
      {
        case 8959:
          return "IBI_SIM_TK_PROACTIVE_CAUSE_USER_DID_NOT_ACCEPT_CALL_SETUP_REQUEST";
        case 9215:
          return "IBI_SIM_TK_PROACTIVE_CAUSE_USER_CLEARED_DOWN_CALL_BEFORE_CONNECTION_OR_NETWORK_RELEASE";
        case 9471:
          return "IBI_SIM_TK_PROACTIVE_CAUSE_ACTION_IN_CONTRADICTION_WITH_THE_CURRENT_TIMER_STATE";
      }
    }
    return "???";
  }
  if (a1 > 14591)
  {
    if (a1 <= 14847)
    {
      switch(a1)
      {
        case 14592:
          return "IBI_SIM_TK_PROACTIVE_CAUSE_CALL_CONTROL_MO_SMS_CONTROL_PERMANENT_PROBLEM";
        case 14593:
          return "IBI_SIM_TK_PROACTIVE_CAUSE_CALL_CONTROL_MO_SMS_CONTROL_PERMANENT_PROBLEM_ACTION_NOT_ALLOWED";
        case 14594:
          return "IBI_SIM_TK_PROACTIVE_CAUSE_CALL_CONTROL_MO_SMS_CONTROL_PERMANENT_PROBLEM_TYPE_OF_REQUEST_CHANGED";
      }
      return "???";
    }
    switch(a1)
    {
      case 14848:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR";
        break;
      case 14849:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_NO_CHANNEL_AVAILABLE";
        break;
      case 14850:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_CHANNEL_CLOSED";
        break;
      case 14851:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_CHANNEL_IDENTIFIER_NOT_VALID";
        break;
      case 14852:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_REQUESTED_BUFFER_SIZE_NOT_AVAILABLE";
        break;
      case 14853:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_SECURITY_ERROR";
        break;
      case 14854:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_TRANSPORT_LEVEL_NOT_AVAILABLE";
        break;
      case 14855:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_REMOTE_DEVICE_NOT_REACHABLE";
        break;
      case 14856:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_SERVICE_ERROR";
        break;
      case 14857:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_BEARER_INDEPENDENT_PROTOCOL_ERROR_SERVICE_IDENTIFIER_UNKNOWN";
        break;
      default:
        if (a1 == 15359)
        {
          result = "IBI_SIM_TK_PROACTIVE_CAUSE_ACCESS_TECHNOLOGY_CANNOT_PROCESS_COMMAND";
        }
        else
        {
          if (a1 != 0xFFFF)
            return "???";
          result = "IBI_SIM_TK_PROACTIVE_CAUSE_INVALID_PROACTIVE_CAUSE";
        }
        break;
    }
  }
  else
  {
    if (a1 <= 14078)
    {
      if (a1 > 13310)
      {
        switch(a1)
        {
          case 13311:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_NUMBER_NOT_KNOWN_BY_ME";
          case 13312:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_SS_RETURN_ERROR";
          case 13568:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_SMS_RP_ERROR";
        }
      }
      else
      {
        switch(a1)
        {
          case 12543:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_BEYOND_CAPABILITY";
          case 12799:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_TYPE_NOT_UNDERSTOOD_BY_ME";
          case 13055:
            return "IBI_SIM_TK_PROACTIVE_CAUSE_COMMAND_DATA_NOT_UNDERSTOOD_BY_ME";
        }
      }
      return "???";
    }
    switch(a1)
    {
      case 14336:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR";
        break;
      case 14337:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_CARD_READER_REMOVED_OR_NOT_PRESENT";
        break;
      case 14338:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_CARD_REMOVED_OR_NOT_PRESENT";
        break;
      case 14339:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_CARD_READER_BUSY";
        break;
      case 14340:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_CARD_POWERED_OFF";
        break;
      case 14341:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_C_APDU_FORMAT_ERROR";
        break;
      case 14342:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_MUTE_CARD";
        break;
      case 14343:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_TRANSMISSION_ERROR";
        break;
      case 14344:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_PROTOCOL_NOT_SUPPORTED";
        break;
      case 14345:
        result = "IBI_SIM_TK_PROACTIVE_CAUSE_MULTIPLE_CARD_COMMANDS_ERROR_SPECIFIED_READER_NOT_VALID";
        break;
      default:
        if (a1 == 14079)
        {
          result = "IBI_SIM_TK_PROACTIVE_CAUSE_REQUIRED_VALUES_ARE_MISSING";
        }
        else
        {
          if (a1 != 14080)
            return "???";
          result = "IBI_SIM_TK_PROACTIVE_CAUSE_USSD_RETURN_ERROR";
        }
        break;
    }
  }
  return result;
}

{
  const char *result;

  result = "IBI_SIM_TK_COMMAND_TYPE_CLOSE_CHANNEL";
  switch(a1)
  {
    case 0:
      result = "IBI_SIM_TK_COMMAND_TYPE_INVALID_COMMAND";
      break;
    case 1:
      result = "IBI_SIM_TK_COMMAND_TYPE_SETUP_EVENT_LIST";
      break;
    case 2:
      result = "IBI_SIM_TK_COMMAND_TYPE_SETUP_CALL";
      break;
    case 3:
      result = "IBI_SIM_TK_COMMAND_TYPE_SEND_SS";
      break;
    case 4:
      result = "IBI_SIM_TK_COMMAND_TYPE_SEND_USSD";
      break;
    case 5:
      result = "IBI_SIM_TK_COMMAND_TYPE_SEND_SMS";
      break;
    case 6:
      result = "IBI_SIM_TK_COMMAND_TYPE_SEND_DTMF";
      break;
    case 7:
      result = "IBI_SIM_TK_COMMAND_TYPE_PLAY_TONE";
      break;
    case 8:
      result = "IBI_SIM_TK_COMMAND_TYPE_DISPLAY_TEXT";
      break;
    case 9:
      result = "IBI_SIM_TK_COMMAND_TYPE_GET_INKEY";
      break;
    case 10:
      result = "IBI_SIM_TK_COMMAND_TYPE_GET_INPUT";
      break;
    case 11:
      result = "IBI_SIM_TK_COMMAND_TYPE_SELECT_ITEM";
      break;
    case 12:
      result = "IBI_SIM_TK_COMMAND_TYPE_SETUP_MENU";
      break;
    case 13:
      result = "IBI_SIM_TK_COMMAND_TYPE_SEND_PROVIDE_LOCAL_INFO";
      break;
    case 14:
      result = "IBI_SIM_TK_COMMAND_TYPE_SETUP_IDLE_MODE_TEXT";
      break;
    case 15:
      result = "IBI_SIM_TK_COMMAND_TYPE_LANGUAGE_NOTIFICATION";
      break;
    case 16:
      result = "IBI_SIM_TK_COMMAND_TYPE_RUN_AT_CMD";
      break;
    case 17:
      result = "IBI_SIM_TK_COMMAND_TYPE_OPEN_CHANNEL";
      break;
    case 18:
      return result;
    case 19:
      result = "IBI_SIM_TK_COMMAND_TYPE_RECEIVE_DATA";
      break;
    case 20:
      result = "IBI_SIM_TK_COMMAND_TYPE_SEND_DATA";
      break;
    default:
      if (a1 == 255)
        result = "IBI_SIM_TK_COMMAND_TYPE_UNKNOWN_CMD";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 3)
    v1 = "IBI_SIM_TK_PROVIDE_LOCAL_INFO_TIME_ZONE";
  if (a1 == 4)
    return "IBI_SIM_TK_PROVIDE_LOCAL_INFO_LANGUAGE_SETTING";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SIM_TRAY_PRESENT";
  if (a1)
    return v1;
  else
    return "IBI_SIM_TRAY_ABSENT";
}

{
  const char *result;

  result = "VINYL_CAP_HYDRA_CAPABLE";
  switch(a1)
  {
    case 0:
      result = "VINYL_CAP_NOT_CAPABLE";
      break;
    case 1:
      result = "VINYL_CAP_TAPE_CAPABLE";
      break;
    case 2:
      return result;
    case 3:
      result = "VINYL_CAP_VIRTUAL_HYDRA_CAPABLE";
      break;
    default:
      if (a1 == 255)
        result = "VINYL_CAP_INVALID";
      else
        result = "???";
      break;
  }
  return result;
}

{
  if ((a1 - 1) > 7)
    return "???";
  else
    return off_24C8DFC58[a1 - 1];
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_SMS_MSG_WAIT_VOICE_MAIL";
  if (a1 == 1)
    return "IBI_SMS_MSG_WAIT_MAX";
  else
    return v1;
}

{
  int v1;
  const char *result;

  if (a1 <= 126)
  {
    if (a1 > 40)
    {
      if (a1 > 94)
      {
        switch(a1)
        {
          case '_':
            result = "IBI_SMS_SEMANT_INCORRECT_MSG";
            break;
            result = "IBI_SMS_INVALID_MANDATORY_INFO";
            break;
          case 'a':
            result = "IBI_SMS_MSG_TYPE_NON_EXISTENT";
            break;
          case 'b':
            result = "IBI_SMS_MSG_NOT_COMPATIBLE";
            break;
          case 'c':
            result = "IBI_SMS_IE_NON_EXISTENT";
            break;
          default:
            if (a1 == 111)
              result = "IBI_SMS_PROTOCOLL_ERROR";
            else
LABEL_23:
              result = "???";
            break;
        }
      }
      else
      {
        switch(a1)
        {
          case ')':
            return "IBI_SMS_TEMPORARY_FAILURE";
          case '*':
            return "IBI_SMS_CONGESTION";
          case '+':
          case ',':
          case '-':
          case '.':
          case '0':
          case '1':
            goto LABEL_23;
          case '/':
            return "IBI_SMS_RESOURCES_UNAVAILABLE";
          case '2':
            return "IBI_SMS_FACILITY_NOT_SUBSCRIBED";
          default:
            if (a1 == 69)
            {
              result = "IBI_SMS_REQ_FACILITY_NON_IMPL";
            }
            else
            {
              if (a1 != 81)
                goto LABEL_23;
              result = "IBI_SMS_INVALID_REFERENCE_VALUE";
            }
            break;
        }
      }
    }
    else
    {
      switch(a1)
      {
        case 8:
          return "IBI_SMS_OP_DETERMINED_BARRING";
        case 9:
        case 11:
        case 12:
        case 13:
        case 14:
        case 15:
        case 18:
        case 19:
        case 20:
        case 23:
        case 24:
        case 25:
        case 26:
          goto LABEL_23;
        case 10:
          return "IBI_SMS_CALL_BARRED";
        case 16:
          return "IBI_SMS_NORMAL_CALL_CLEARING";
        case 17:
          return "IBI_SMS_CP_NETWORK_FAILURE";
        case 21:
          return "IBI_SMS_TRANSFER_REJECTED";
        case 22:
          return "IBI_SMS_MEMORY_CAPACITY_EXCEEDED";
        case 27:
          return "IBI_SMS_DEST_OUT_OF_SERVICE";
        case 28:
          return "IBI_SMS_UNIDENTIFIED_SUBSCRIBER";
        case 29:
          return "IBI_SMS_FACILITY_REJECTED";
        case 30:
          return "IBI_SMS_UNKNOWN_SUBSCRIBER";
        default:
          if (a1 == 1)
          {
            result = "IBI_SMS_UNASSIGNED_NUMBER";
          }
          else
          {
            if (a1 != 38)
              goto LABEL_23;
            result = "IBI_SMS_NETWORK_OUT_OF_ORDER";
          }
          break;
      }
    }
  }
  else
  {
    v1 = a1 - 287;
    result = "IBI_SMS_ABNORMAL_RELEASE_CHANNEL_UNACCEPTABLE";
    switch(v1)
    {
      case 0:
        return "IBI_SMS_NETWORK_FAILURE_UNSPECIFIED";
      case 1:
        return "IBI_SMS_NO_SERVICE";
      case 2:
        return "IBI_SMS_MS_ACCESS_CLASS_BARRED";
      case 3:
        return "IBI_SMS_NETWORK_NO_RESOURCE";
      case 4:
        return "IBI_SMS_SERVICE_BUSY";
      case 5:
        return "IBI_SMS_MS_FAILURE_UNSPECIFIED";
      case 6:
      case 7:
      case 8:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
      case 18:
      case 19:
      case 20:
      case 21:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 27:
      case 28:
      case 29:
      case 30:
      case 31:
      case 32:
      case 33:
      case 34:
      case 35:
      case 36:
      case 37:
      case 38:
      case 39:
      case 40:
      case 41:
      case 42:
      case 43:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 84:
      case 85:
      case 111:
      case 113:
      case 115:
      case 117:
      case 118:
      case 119:
      case 120:
      case 121:
      case 122:
      case 123:
      case 124:
      case 125:
      case 126:
      case 127:
      case 128:
      case 129:
      case 130:
      case 131:
      case 132:
      case 133:
      case 134:
      case 135:
      case 136:
      case 137:
      case 138:
      case 139:
      case 140:
      case 141:
      case 142:
      case 143:
      case 144:
      case 145:
      case 146:
      case 147:
      case 148:
      case 149:
      case 150:
      case 151:
      case 152:
      case 153:
      case 154:
      case 155:
      case 156:
      case 157:
      case 158:
      case 159:
      case 160:
      case 161:
      case 162:
      case 163:
      case 164:
      case 165:
      case 166:
      case 167:
      case 168:
      case 169:
      case 170:
      case 171:
      case 172:
      case 173:
      case 174:
      case 175:
      case 176:
      case 177:
      case 178:
      case 179:
      case 180:
      case 181:
      case 182:
      case 183:
      case 184:
      case 185:
      case 186:
      case 187:
      case 188:
      case 189:
      case 190:
      case 191:
      case 192:
      case 193:
      case 194:
      case 195:
      case 196:
      case 197:
      case 198:
      case 199:
      case 200:
      case 201:
      case 202:
      case 203:
      case 204:
      case 205:
      case 206:
      case 207:
      case 208:
      case 209:
      case 210:
      case 211:
      case 212:
      case 213:
      case 214:
      case 215:
      case 216:
      case 217:
      case 218:
      case 219:
      case 220:
      case 221:
      case 222:
      case 223:
      case 224:
        goto LABEL_23;
      case 9:
        return "IBI_SMS_DUAL_SIM_RADIO_CONFLICT";
      case 10:
        return "IBI_SMS_NO_CARRIER_DUAL_SIM_CONFLICT";
      case 11:
        return "IBI_SMS_SERV_NOT_ALLOWED_IN_UE_OP_MODE";
      case 12:
        return "IBI_SMS_FAILURE_CAUSE_RSRVCC";
      case 53:
        return "IBI_SMS_SAPI3_RELEASE";
      case 54:
        return "IBI_SMS_LOWER_LAYER_FAILURE";
      case 55:
        return "IBI_SMS_MS_AUTH_FAILURE";
      case 56:
        return "IBI_SMS_PS_REJECT";
      case 57:
        return "IBI_SMS_SERVICE_REJECTED";
      case 58:
        return "IBI_SMS_ABORT_BY_NETWORK";
      case 59:
        return "IBI_SMS_MS_TIMEOUT";
      case 60:
        return "IBI_SMS_MS_DETACH";
      case 61:
        return "IBI_SMS_RR_CONN_RELEASE";
      case 62:
        return "IBI_SMS_MS_NOT_REGISTERED";
      case 63:
        return "IBI_SMS_REEST_FAILURE";
      case 64:
        return "IBI_SMS_MS_HANDOVER";
      case 65:
        return "IBI_SMS_MS_LINK_ESTAB_FAILURE";
      case 66:
        return "IBI_SMS_MS_RA_FAILURE";
      case 67:
        return "IBI_SMS_MS_LINK_ABORTION";
      case 68:
        return "IBI_SMS_L1_FAILURE";
      case 69:
        return "IBI_SMS_IMM_ASS_REJECT";
      case 70:
        return "IBI_SMS_PAGING_PENDING";
      case 71:
        return "IBI_SMS_ABNORMAL_RELEASE_UNSPECIFIED";
      case 72:
        return result;
      case 73:
        return "IBI_SMS_ABNORMAL_RELEASE_TIMER_EXPIRED";
      case 74:
        return "IBI_SMS_ABNORMAL_RELEASE_NO_ACT_ON_RADIO_PATH";
      case 75:
        return "IBI_SMS_MS_PREEMPTIVE_RELEASE";
      case 76:
        return "IBI_SMS_UTRAN_CONFIGURATION_UNKNOWN";
      case 77:
        return "IBI_SMS_HANDOVER_IMPOSSIBLE";
      case 78:
        return "IBI_SMS_CHANNEL_MODE_UNACCEPTABLE";
      case 79:
        return "IBI_SMS_FREQUENCY_NOT_IMPLEMENTED";
      case 80:
        return "IBI_SMS_ORIGINATOR_TALKER_LEAVING_GROUP_CALL_AREA";
      case 81:
        return "IBI_SMS_LOWER_LAYER_FAILURE_FROM_NW";
      case 82:
        return "IBI_SMS_CALL_ALREADY_CLEARED";
      case 83:
        return "IBI_SMS_SEMANTICALLY_INCORRECT_MSG";
      case 86:
        return "IBI_SMS_MSG_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STATE";
      case 87:
        return "IBI_SMS_CONDITIONAL_IE_ERROR";
      case 88:
        return "IBI_SMS_NO_CELL_ALLOCATION_AVAILABLE";
      case 89:
        return "IBI_SMS_PROTOCOL_ERROR_UNSPECIFIED";
      case 90:
        return "IBI_SMS_MS_NORMAL_EVENT";
      case 91:
        return "IBI_SMS_MS_UNSPECIFIED";
      case 92:
        return "IBI_SMS_PRE_EMPTIVE_RELEASE";
      case 93:
        return "IBI_SMS_MS_CONGESTION";
      case 94:
        return "IBI_SMS_RE_ESTABLISHMENT_REJECT";
      case 95:
        return "IBI_SMS_DIRECTED_SIGCONN_RE_ESTABLISHMENT";
      case 96:
        return "IBI_SMS_USER_INACTIVITY";
      case 97:
        return "IBI_SMS_MS_CONN_REL_LOWER_LAYER_FAILURE_DL";
      case 98:
        return "IBI_SMS_MS_CONN_REL_LOWER_LAYER_FAILURE_UL";
      case 99:
        return "IBI_SMS_MS_CELL_BARRED";
      case 100:
        return "IBI_SMS_MS_SIGN_CONN_REL";
      case 101:
        return "IBI_SMS_NAS_TRIGGERED_ABORT";
      case 102:
        return "IBI_SMS_MS_RRC_CONN_ESTABLISHMENT_FAILURE";
      case 103:
        return "IBI_SMS_MS_CONN_REJECT_REDIRECTION";
      case 104:
        return "IBI_SMS_RESOURCE_CONFLICT";
      case 105:
        return "IBI_SMS_MS_L2_CAUSE_SEQUENCE_ERROR";
      case 106:
        return "IBI_SMS_MS_L2_CAUSE_T200_EXP_N200_PLUS_1_TIMES";
      case 107:
        return "IBI_SMS_MS_L2_CAUSE_UNSOLICITED_DM_RESP_MFES";
      case 108:
        return "IBI_SMS_MS_L2_CAUSE_CONTENTION_RESOLUTION";
      case 109:
        return "IBI_SMS_MS_L2_CAUSE_NORMAL_CAUSE";
      case 110:
        return "IBI_SMS_BAND_CHANGED";
      case 112:
        return "IBI_SMS_PLMN_NOT_MATCHING";
      case 114:
        return "IBI_SMS_HOFRMUTRAN_REVERT_BACK_SYNC_FAIL";
      case 116:
        return "IBI_SMS_RELEASE_OOSA";
      case 225:
        return "IBI_SMS_RP_ACK";
      case 226:
        return "IBI_SMS_TIMER_EXPIRED";
      case 227:
        return "IBI_SMS_FORW_AVAIL_FAILED";
      case 228:
        return "IBI_SMS_FORW_AVAIL_ABORTED";
      case 229:
        return "IBI_SMS_TP_INVALID_MTI";
      case 230:
        return "IBI_SMS_TP_SRF_NOT_IN_PHASE1";
      case 231:
        return "IBI_SMS_TP_RDF_NOT_IN_PHASE1";
      case 232:
        return "IBI_SMS_TP_RPF_NOT_IN_PHASE1";
      case 233:
        return "IBI_SMS_TP_UDHF_NOT_IN_PHASE1";
      case 234:
        return "IBI_SMS_TP_MISSING_VALIDITY_PERIOD";
      case 235:
        return "IBI_SMS_TP_INVALID_TIME_STAMP";
      case 236:
        return "IBI_SMS_TP_MISSING_DEST_ADDRESS";
      case 237:
        return "IBI_SMS_TP_INVALID_DEST_ADDRESS";
      case 238:
        return "IBI_SMS_TP_MISSING_SC_ADDRESS";
      case 239:
        return "IBI_SMS_TP_INVALID_SC_ADDRESS";
      case 240:
        return "IBI_SMS_TP_INVALID_ALPHABET";
      case 241:
        return "IBI_SMS_TP_INVALID_USER_DATA_LENGTH";
      case 242:
        return "IBI_SMS_TP_MISSING_USER_DATA";
      case 243:
        return "IBI_SMS_TP_USER_DATA_TOO_LARGE";
      case 244:
        return "IBI_SMS_TP_CMD_REQ_NOT_IN_PHASE1";
      case 245:
        return "IBI_SMS_TP_INVALID_DEST_ADDR_SPEC_CMDS";
      case 246:
        return "IBI_SMS_TP_INVALID_CMD_DATA_LENGTH";
      case 247:
        return "IBI_SMS_TP_MISSING_CMD_DATA";
      case 248:
        return "IBI_SMS_TP_INVALID_CMD_DATA_TYPE";
      case 249:
        return "IBI_SMS_TP_CREATION_OF_MNR_FAILED";
      case 250:
        return "IBI_SMS_TP_CREATION_OF_CMM_FAILED";
      case 251:
        return "IBI_SMS_TP_MT_CONNECTION_LOST";
      case 252:
        return "IBI_SMS_TP_PENDING_MO_SMS";
      case 253:
        return "IBI_SMS_REJ_BY_SMS_CONTROL";
      case 254:
        return "IBI_SMS_NO_ERROR";
      case 255:
        return "IBI_SMS_NO_ERROR_NO_ICON_DISPLAY";
      case 256:
        return "IBI_SMS_FDN_FAILED";
      case 257:
        return "IBI_SMS_FDN_SCA_FAILED";
      case 258:
        return "IBI_SMS_FDN_DA_FAILED";
      case 259:
        return "IBI_SMS_BDN_FAILED";
      case 260:
        return "IBI_SMS_PP_UNSPECIFIED";
      case 261:
        return "IBI_SMS_UNDEFINED_RESULT";
      default:
        if ("IBI_SMS_ABNORMAL_RELEASE_CHANNEL_UNACCEPTABLE" == 127)
        {
          result = "IBI_SMS_INTERWORKING";
        }
        else
        {
          if ("IBI_SMS_ABNORMAL_RELEASE_CHANNEL_UNACCEPTABLE" != 212)
            goto LABEL_23;
          result = "IBI_SMS_SEND_RESULT_SIM_TOOLKIT_BUSY";
        }
        break;
    }
  }
  return result;
}

{
  const char *result;

  result = "IBI_SMS_EMPTY";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "IBI_SMS_READ";
      break;
    case 2:
    case 4:
    case 6:
      goto LABEL_5;
    case 3:
      result = "IBI_SMS_UNREAD";
      break;
    case 5:
      result = "IBI_SMS_SENT";
      break;
    case 7:
      result = "IBI_SMS_UNSENT";
      break;
    default:
      if (a1 == 255)
        result = "IBI_SMS_UNDEFINED_TPDU_STATUS";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;
  int v2;

  if (a1 > 23)
  {
    v2 = a1 - 38;
    result = "IBI_SMS_BUSY";
    switch(v2)
    {
      case 0:
        return result;
      case 1:
        result = "IBI_SMS_SEND_RP_ACKNOWLEDGE";
        break;
      case 2:
        result = "IBI_SMS_SEND_RP_ERROR";
        break;
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
        return "???";
      case 9:
        result = "IBI_SMS_REJ_PROTOCOL_ERROR_UNSPECIFIED";
        break;
      default:
        if ("IBI_SMS_BUSY" != 24)
          return "???";
        result = "IBI_SMS_UNDEFINED_STORAGE_RESULT";
        break;
    }
  }
  else if (a1)
  {
    if (a1 == 16)
    {
      return "IBI_SMS_MEMORY_FULL";
    }
    else if (a1 == 18)
    {
      return "IBI_SMS_SIM_FULL";
    }
    else
    {
      return "???";
    }
  }
  else
  {
    return "IBI_SMS_STORAGE_SUCCESSFUL";
  }
  return result;
}

{
  const char *result;

  if (a1 <= 174)
  {
    if (a1 <= 143)
    {
      if (a1 > 129)
      {
        if (a1 == 130)
          return "IBI_SMS_TP_FCS_CANNOT_REPLACE_SM";
        if (a1 == 143)
          return "IBI_SMS_TP_FCS_UNSPEC_TP_PID_ERROR";
      }
      else
      {
        if (a1 == 128)
          return "IBI_SMS_TP_FCS_TELEMATIC_NOT_SUPPORTED";
        if (a1 == 129)
          return "IBI_SMS_TP_FCS_SM_TYPE_0_NOT_SUPPORTED";
      }
    }
    else if (a1 <= 158)
    {
      if (a1 == 144)
        return "IBI_SMS_TP_FCS_DCS_NOT_SUPPORTED";
      if (a1 == 145)
        return "IBI_SMS_TP_FCS_MSG_CLASS_NOT_SUPPORTED";
    }
    else
    {
      switch(a1)
      {
        case 159:
          return "IBI_SMS_TP_FCS_UNSPEC_TP_DCS_ERROR";
        case 160:
          return "IBI_SMS_TP_FCS_CMD_NOT_ACTIONED";
        case 161:
          return "IBI_SMS_TP_FCS_CMD_NOT_SUPPORTED";
      }
    }
    return "???";
  }
  switch(a1)
  {
    case 175:
      return "IBI_SMS_TP_FCS_UNSPEC_TP_CMD_ERROR";
    case 176:
      return "IBI_SMS_TP_FCS_TPDU_NOT_SUPPORTED";
    case 177:
    case 178:
    case 179:
    case 180:
    case 181:
    case 182:
    case 183:
    case 184:
    case 185:
    case 186:
    case 187:
    case 188:
    case 189:
    case 190:
    case 191:
    case 200:
    case 201:
    case 202:
    case 203:
    case 204:
    case 205:
    case 206:
    case 207:
      return "???";
    case 192:
      return "IBI_SMS_TP_FCS_SC_BUSY";
    case 193:
      return "IBI_SMS_TP_FCS_NO_SC_SUBSCRIPTION";
    case 194:
      return "IBI_SMS_TP_FCS_SC_SYSTEM_FAILURE";
    case 195:
      return "IBI_SMS_TP_FCS_INVALID_SME_ADDRESS";
    case 196:
      return "IBI_SMS_TP_FCS_DEST_SME_BARRED";
    case 197:
      return "IBI_SMS_TP_FCS_SM_REJ_DUPL_SM";
    case 198:
      return "IBI_SMS_TP_FCS_TP_VPF_NOT_SUPPORTED";
    case 199:
      return "IBI_SMS_TP_FCS_TP_VP_NOT_SUPPORTED";
    case 208:
      return "IBI_SMS_TP_FCS_SIM_SMS_STORE_FULL";
    case 209:
      return "IBI_SMS_TP_FCS_NO_SMS_ON_SIM";
    case 210:
      return "IBI_SMS_TP_FCS_ERROR_IN_MS";
    case 211:
      return "IBI_SMS_TP_FCS_MEM_CAP_EXCEEDED";
    case 212:
      return "IBI_SMS_TP_FCS_TOOLKIT_BUSY";
    case 213:
      return "IBI_SMS_TP_FCS_DATADOWNLOAD_ERROR";
    default:
      if (a1 == 255)
      {
        result = "IBI_SMS_TP_FCS_UNSPECIFIED";
      }
      else
      {
        if (a1 != 256)
          return "???";
        result = "IBI_SMS_TP_FCS_NO_ERROR";
      }
      break;
  }
  return result;
}

{
  if (a1)
    return "???";
  else
    return "IBI_SS_ADDRESS_TYPE_PHONE_NUMBER";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_SS_LCS_OPERATION_TYPE_SET";
  if (a1 == 1)
    return "IBI_SS_LCS_OPERATION_TYPE_GET";
  else
    return v1;
}

{
  int v1;
  const char *result;

  v1 = a1 - 1;
  result = "IBI_SS_LCS_POS_CAP_CP_LOCATION_REQUEST_SUPPORT";
  switch(v1)
  {
    case 0:
      result = "IBI_SS_LCS_POS_CAP_LCS_NOTIFICATION_MECHANISM_SUPPORT";
      break;
    case 1:
      result = "IBI_SS_LCS_POS_CAP_LPP_SUPPORT";
      break;
    case 2:
      result = "IBI_SS_LCS_POS_CAP_GPS_FTA_MEAS_SUPPORT";
      break;
    case 3:
      result = "IBI_SS_LCS_POS_CAP_CP_POSITIONING_SUPPORT";
      break;
    case 4:
      result = "IBI_SS_LCS_POS_CAP_LTE_OTDOA_SUPPORT";
      break;
    case 5:
      result = "IBI_SS_LCS_POS_CAP_LTE_OTDOA_MODE";
      break;
    case 6:
      result = "IBI_SS_LCS_POS_CAP_LTE_ECID_SUPPORT";
      break;
    case 7:
      result = "IBI_SS_LCS_POS_CAP_LTE_INTER_FREQ_OTDOA_SUPPORT";
      break;
    case 8:
      result = "IBI_SS_LCS_POS_CAP_LTE_SON_LOCATION_AGE_LIMIT";
      break;
    case 9:
      result = "IBI_SS_LCS_POS_CAP_LTE_SON_ACTIVE_POS_FLAG";
      break;
    case 10:
      result = "IBI_SS_LCS_POS_CAP_LTE_MDT_LOCATION_AGE_LIMIT";
      break;
    case 11:
      result = "IBI_SS_LCS_POS_CAP_LTE_MDT_LOCATION_RESPONSE_TIME";
      break;
    case 12:
      result = "IBI_SS_LCS_POS_CAP_LTE_MDT_ACTIVE_POS_FLAG";
      break;
    case 13:
      result = "IBI_SS_LCS_POS_CAP_LTE_MDT_UE_RX_TX_TIME_DIFF_MEAS_SUPPORT";
      break;
    case 14:
      result = "IBI_SS_LCS_POS_CAP_GPS_STABILITY_LIMIT_SUPPORT";
      break;
    case 15:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_GSM_GPS_SUPPORT";
      break;
    case 16:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_GSM_GLONASS_SUPPORT";
      break;
    case 17:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_GSM_BDS_SUPPORT";
      break;
    case 18:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_UMTS_GPS_SUPPORT";
      break;
    case 19:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_UMTS_GLONASS_SUPPORT";
      break;
    case 20:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_UMTS_BDS_SUPPORT";
      break;
    case 21:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_LTE_GPS_SUPPORT";
      break;
    case 22:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_LTE_GLONASS_SUPPORT";
      break;
    case 23:
      result = "IBI_SS_LCS_POS_CAP_GNSS_SYSTEM_LTE_BDS_SUPPORT";
      break;
    case 24:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_GSM_MS_ASSISTED_SUPPORT";
      break;
    case 25:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_GSM_MS_BASED_SUPPORT";
      break;
    case 26:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_GSM_MS_STANDALONE_SUPPORT";
      break;
    case 27:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_UMTS_MS_ASSISTED_SUPPORT";
      break;
    case 28:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_UMTS_MS_BASED_SUPPORT";
      break;
    case 29:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_UMTS_MS_STANDALONE_SUPPORT";
      break;
    case 30:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_LTE_MS_ASSISTED_SUPPORT";
      break;
    case 31:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_LTE_MS_BASED_SUPPORT";
      break;
    case 32:
      result = "IBI_SS_LCS_POS_CAP_GNSS_MODE_LTE_MS_STANDALONE_SUPPORT";
      break;
    case 33:
      result = "IBI_SS_LCS_POS_CAP_UMTS_UE_RX_TX_TIME_DIFF_TYPE_2_MEAS_SUPPORT";
      break;
    case 34:
      return result;
    case 35:
      result = "IBI_SS_LCS_POS_CAP_CP_MTLR_TIMEOUT_DURATION";
      break;
    case 36:
      result = "IBI_SS_LCS_POS_CAP_MDT_SON_LOCATION_SUPPORT";
      break;
    case 37:
      result = "IBI_SS_LCS_POS_CAP_GNSS_AD_COMMON";
      break;
    case 38:
      result = "IBI_SS_LCS_POS_CAP_GNSS_AD_GPS";
      break;
    case 39:
      result = "IBI_SS_LCS_POS_CAP_GNSS_AD_GLONASS";
      break;
    case 40:
      result = "IBI_SS_LCS_POS_CAP_GNSS_AD_BDS";
      break;
    case 41:
      result = "IBI_SS_LCS_POS_CAP_GNSS_VEL_TYPES_SUPPORT";
      break;
    case 42:
      result = "IBI_SS_LCS_POS_CAP_GNSS_LOC_TYPES_SUPPORT";
      break;
    case 43:
      result = "IBI_SS_LCS_POS_CAP_LPP_WLAN_MEAS_SUPPORTED";
      break;
    case 44:
      result = "IBI_SS_LCS_POS_CAP_LPP_WLAN_RSSI_MEAS_SUPPORTED";
      break;
    case 45:
      result = "IBI_SS_LCS_POS_CAP_LPP_LOCATION_SOURCE_SUPPORTED";
      break;
    case 46:
    case 47:
      goto LABEL_5;
    case 48:
      result = "IBI_SS_LCS_POS_CAP_NR_ECID_SUPPORT";
      break;
    default:
      if ("IBI_SS_LCS_POS_CAP_CP_LOCATION_REQUEST_SUPPORT" == 0xFFFF)
        result = "IBI_SS_LCS_POS_CAP_INVALID";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;

  result = "IBI_SS_LCS_SHAPE_TYPE_ELLIPSOID_ARC";
  switch(a1)
  {
    case 0:
      result = "IBI_SS_LCS_SHAPE_TYPE_ELLIPSOID_POINT";
      break;
    case 1:
      result = "IBI_SS_LCS_SHAPE_TYPE_POINT_UNCERTAIN_CIRCLE";
      break;
    case 2:
    case 4:
    case 6:
    case 7:
      goto LABEL_5;
    case 3:
      result = "IBI_SS_LCS_SHAPE_TYPE_POINT_UNCERTAIN_ELLIPSE";
      break;
    case 5:
      result = "IBI_SS_LCS_SHAPE_TYPE_POLYGON";
      break;
    case 8:
      result = "IBI_SS_LCS_SHAPE_TYPE_POINT_ALTITUDE";
      break;
    case 9:
      result = "IBI_SS_LCS_SHAPE_TYPE_POINT_ALTITUDE_UNCERTAIN_ELLIPSOID";
      break;
    case 10:
      return result;
    default:
      if (a1 == 255)
        result = "IBI_SS_LCS_SHAPE_TYPE_NO_LOCATION";
      else
LABEL_5:
        result = "???";
      break;
  }
  return result;
}

{
  const char *result;

  result = "IBI_SS_LCS_VELOCITY_TYPE_HORIZONTAL_VELOCITY";
  switch(a1)
  {
    case 0:
      return result;
    case 1:
      result = "IBI_SS_LCS_VELOCITY_TYPE_HORIZONTAL_WITH_VERTICAL_VELOCITY";
      break;
    case 2:
      result = "IBI_SS_LCS_VELOCITY_TYPE_HORIZONTAL_VELOCITY_WITH_UNCERTAINTY";
      break;
    case 3:
      result = "IBI_SS_LCS_VELOCITY_TYPE_HORIZONTAL_WITH_VERTICAL_VELOCITY_AND_UNCERTAINTY";
      break;
    default:
      if (a1 == 255)
        result = "IBI_SS_LCS_VELOCITY_TYPE_INVALID";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_SS_LCS_VERIFY_RSP_TYPE_GRANTED";
  if (a1)
    return v1;
  else
    return "IBI_SS_LCS_VERIFY_RSP_TYPE_DENIED";
}

{
  const char *result;

  result = "IBI_SS_MM_CALL_CANNOT_BE_IDENTIFIED";
  switch(a1)
  {
    case 0:
      result = "IBI_SS_MM_NO_CAUSE";
      break;
    case 1:
    case 18:
    case 19:
    case 24:
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 30:
    case 31:
    case 35:
    case 36:
    case 37:
    case 39:
    case 41:
    case 42:
    case 43:
    case 44:
    case 45:
    case 46:
    case 47:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
    case 60:
    case 61:
    case 62:
LABEL_37:
      result = "???";
      break;
    case 2:
      result = "IBI_SS_MM_IMSI_UNKNOWN_IN_HLR";
      break;
    case 3:
      result = "IBI_SS_MM_ILLEGAL_MS";
      break;
    case 4:
      result = "IBI_SS_MM_IMSI_UNKNOWN_IN_VLR";
      break;
    case 5:
      result = "IBI_SS_MM_IMEI_NOT_ACCEPTED";
      break;
    case 6:
      result = "IBI_SS_MM_ILLEGAL_ME";
      break;
    case 7:
      result = "IBI_SS_MM_GPRS_NOT_ALLOWED";
      break;
    case 8:
      result = "IBI_SS_MM_GPRS_GSM_NOT_ALLOWED";
      break;
    case 9:
      result = "IBI_SS_MM_MS_IDENT_UNKNOWN";
      break;
    case 10:
      result = "IBI_SS_MM_IMP_DETACHED";
      break;
    case 11:
      result = "IBI_SS_MM_PLMN_NOT_ALLOWED";
      break;
    case 12:
      result = "IBI_SS_MM_LOCATION_AREA_NOT_ALLOWED";
      break;
    case 13:
      result = "IBI_SS_MM_ROAMING_NOT_ALLOWED_IN_THIS_LOCATION_AREA";
      break;
    case 14:
      result = "IBI_SS_MM_GPRS_PLMN_NOT_ALLOWED";
      break;
    case 15:
      result = "IBI_SS_MM_NO_SUITABLE_CELLS_IN_LOCATION_AREA";
      break;
    case 16:
      result = "IBI_SS_MSC_NOT_REACHABLE";
      break;
    case 17:
      result = "IBI_SS_MM_NETWORK_FAILURE";
      break;
    case 20:
      result = "IBI_SS_MM_MAC_FAILURE";
      break;
    case 21:
      result = "IBI_SS_MM_SYNCH_FAILURE";
      break;
    case 22:
      result = "IBI_SS_MM_CONGESTION";
      break;
    case 23:
      result = "IBI_SS_MM_GSM_AUTHENTICATION_UNACCEPTABLE";
      break;
    case 32:
      result = "IBI_SS_MM_SERVICE_OPTION_NOT_SUPPORTED";
      break;
    case 33:
      result = "IBI_SS_MM_REQUESTED_SERVICE_OPTION_NOT_SUBSCRIBED";
      break;
    case 34:
      result = "IBI_SS_MM_SERVICE_OPTION_TEMPORARILY_OUT_OF_ORDER";
      break;
    case 38:
      return result;
    case 40:
      result = "IBI_SS_MM_NO_PDP_CONTEXT_AKTIV";
      break;
    case 48:
      result = "IBI_SS_MM_RETRY_ON_NEW_CELL_BEG";
      break;
    case 63:
      result = "IBI_SS_MM_RETRY_ON_NEW_CELL_END";
      break;
    default:
      switch(a1)
      {
        case '_':
          result = "IBI_SS_MM_SEMANTICALLY_INCORRECT_MESSAGE";
          break;
          result = "IBI_SS_MM_INVALID_MANDATORY_INFORMATION";
          break;
        case 'a':
          result = "IBI_SS_MM_MSG_TYPE_NON_EXISTENT_OR_NOT_IMPLEMENTED";
          break;
        case 'b':
          result = "IBI_SS_MM_MSG_TYPE_NOT_COMPATIBLE_WITH_PROTOCOL_STACK";
          break;
        case 'c':
          result = "IBI_SS_MM_INFO_ELEMENT_NON_EXISTENT_OR_NOT_IMPLEMENTED";
          break;
        case 'd':
          result = "IBI_SS_MM_CONDITIONAL_IE_ERROR";
          break;
        case 'e':
          result = "IBI_SS_MM_MESSAGE_NOT_COMPATIBLE_WITH_THE_PROTOCOL_STATE";
          break;
        case 'o':
          result = "IBI_SS_MM_PROTOCOL_ERROR_UNSPECIFIED";
          break;
        default:
          goto LABEL_37;
      }
      break;
  }
  return result;
}

{
  const char *result;

  if (a1 > 71)
  {
    switch(a1)
    {
      case 'y':
        result = "IBI_SS_NET_ERROR_REJECTED_BY_USER";
        break;
      case 'z':
        result = "IBI_SS_NET_ERROR_REJECTED_BY_NETWORK";
        break;
      case '{':
        result = "IBI_SS_NET_ERROR_DEFLECTION_TO_SERVED_SUBSCRIBER";
        break;
      case '|':
        result = "IBI_SS_NET_ERROR_SPECIAL_SERVICE_CODE";
        break;
      case '}':
        result = "IBI_SS_NET_ERROR_INVALID_DEFLECTED_TO_NUMBER";
        break;
      case '~':
        result = "IBI_SS_NET_ERROR_MAX_NUMBER_OF_MPTY_PARTICIPANTS_EXCEEDED";
        break;
      case '\x7F':
        result = "IBI_SS_NET_ERROR_RESOURCES_NOT_AVAILABLE";
        break;
      default:
        if (a1 == 72)
        {
          result = "IBI_SS_NET_ERROR_USSD_BUSY";
        }
        else if (a1 == 255)
        {
          result = "IBI_SS_NET_ERROR_INTERNAL_SS_TIME_OUT";
        }
        else
        {
LABEL_18:
          result = "???";
        }
        break;
    }
  }
  else
  {
    result = "IBI_SS_NET_ERROR_ABSENT_SUBSCRIBER";
    switch(a1)
    {
      case 0:
        result = "IBI_SS_NET_ERROR_INTERNAL_SS_ERROR";
        break;
      case 1:
        result = "IBI_SS_NET_ERROR_UNKNOWN_SUBSCRIBER";
        break;
      case 2:
      case 3:
      case 4:
      case 5:
      case 6:
      case 7:
      case 8:
      case 14:
      case 15:
      case 22:
      case 23:
      case 24:
      case 25:
      case 26:
      case 28:
      case 31:
      case 32:
      case 33:
      case 39:
      case 40:
      case 41:
      case 42:
      case 44:
      case 45:
      case 46:
      case 47:
      case 48:
      case 49:
      case 50:
      case 51:
      case 52:
      case 53:
        goto LABEL_18;
      case 9:
        result = "IBI_SS_NET_ERROR_ILLEGAL_SUBSCRIBER";
        break;
      case 10:
        result = "IBI_SS_NET_ERROR_BEARERSERVICE_NOT_PROVISIONED";
        break;
      case 11:
        result = "IBI_SS_NET_ERROR_TELESERVICE_NOT_PROVISIONED";
        break;
      case 12:
        result = "IBI_SS_NET_ERROR_ILLEGAL_EQUIPMENT";
        break;
      case 13:
        result = "IBI_SS_NET_ERROR_CALL_BARRED";
        break;
      case 16:
        result = "IBI_SS_NET_ERROR_ILLEGAL_SS_OPERATION";
        break;
      case 17:
        result = "IBI_SS_NET_ERROR_ERROR_STATUS";
        break;
      case 18:
        result = "IBI_SS_NET_ERROR_NOT_AVAILABLE";
        break;
      case 19:
        result = "IBI_SS_NET_ERROR_SUBSCRIPTION_VIOLATION";
        break;
      case 20:
        result = "IBI_SS_NET_ERROR_INCOMPATABILITY";
        break;
      case 21:
        result = "IBI_SS_NET_ERROR_FACILITY_NOT_SUPPORTED";
        break;
      case 27:
        return result;
      case 29:
        result = "IBI_SS_NET_ERROR_SHORT_TERM_DENIAL";
        break;
      case 30:
        result = "IBI_SS_NET_ERROR_LONG_TERM_DENIAL";
        break;
      case 34:
        result = "IBI_SS_NET_ERROR_SYSTEM_FAILURE";
        break;
      case 35:
        result = "IBI_SS_NET_ERROR_DATA_MISSING";
        break;
      case 36:
        result = "IBI_SS_NET_ERROR_UNEXPECTED_DATA_VALUE";
        break;
      case 37:
        result = "IBI_SS_NET_ERROR_PW_REGISTRATION_FAILURE";
        break;
      case 38:
        result = "IBI_SS_NET_ERROR_NEGATIVE_PW_CHECK";
        break;
      case 43:
        result = "IBI_SS_NET_ERROR_NUMBER_OF_PW_ATTEMPTS_VIOLATION";
        break;
      case 54:
        result = "IBI_SS_NET_ERROR_POS_METHOD_FAILURE";
        break;
      default:
        if (a1 != 71)
          goto LABEL_18;
        result = "IBI_SS_NET_ERROR_UNKNOWN_ALPHABET";
        break;
    }
  }
  return result;
}

{
  int v1;
  const char *result;

  if (a1 > 277)
  {
    if (a1 <= 343)
    {
      switch(a1)
      {
        case 278:
          result = "IBI_SS_GSM_ERROR_REJ_BY_CALL_CONTROL";
          break;
        case 279:
          result = "IBI_SS_GSM_ERROR_FDN_FAILED";
          break;
        case 280:
          result = "IBI_SS_GSM_ERROR_BDN_FAILED";
          break;
        case 281:
        case 282:
        case 283:
        case 284:
        case 285:
        case 286:
        case 290:
        case 291:
        case 292:
        case 293:
        case 294:
        case 295:
          return "???";
        case 287:
          result = "IBI_SS_GSM_ERROR_NW_FAILURE_UNSPECIFIED";
          break;
        case 288:
          result = "IBI_SS_GSM_ERROR_MS_NO_SERVICE";
          break;
        case 289:
          result = "IBI_SS_GSM_ERROR_MS_ACCESS_CLASS_BARRED";
          break;
        case 296:
          result = "IBI_SS_GSM_ERROR_DUAL_SIM_RADIO_CONFLICT";
          break;
        case 297:
          result = "IBI_SS_GSM_ERROR_DUAL_SIM_NO_SERVICE";
          break;
        default:
          if (a1 != 341)
            return "???";
          result = "IBI_SS_GSM_ERROR_MS_LOWER_LAYER_FAILURE";
          break;
      }
    }
    else if (a1 <= 1000)
    {
      switch(a1)
      {
        case 344:
          return "IBI_SS_GSM_ERROR_MS_SERVICE_REJECTED";
        case 346:
          return "IBI_SS_GSM_ERROR_MS_TIMEOUT";
        case 383:
          return "IBI_SS_GSM_ERROR_MS_USER_INACTIVITY";
        default:
          return "???";
      }
    }
    else
    {
      switch(a1)
      {
        case 1001:
          result = "IBI_SS_GSM_ERROR_SS_CHANGED_TO_USSD";
          break;
        case 1002:
          result = "IBI_SS_GSM_ERROR_USSD_CHANGED_TO_SS";
          break;
        case 1003:
          result = "IBI_SS_GSM_ERROR_USSD_CHANGED_TO_CALL";
          break;
        case 1004:
          result = "IBI_SS_GSM_ERROR_SS_CHANGED_TO_CALL";
          break;
        default:
          if (a1 != 0xFFFF)
            return "???";
          result = "IBI_SS_GSM_ERROR_UNKNOWN_ERROR";
          break;
      }
    }
  }
  else
  {
    v1 = a1 - 1;
    result = "IBI_SS_GSM_ERROR_ACCESS_INFORMATION_DISCARDED";
    switch(v1)
    {
      case 0:
        result = "IBI_SS_GSM_ERROR_UNASSIGNED_NUMBER";
        break;
      case 1:
      case 3:
      case 4:
      case 6:
      case 8:
      case 9:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 19:
      case 22:
      case 23:
      case 24:
      case 31:
      case 32:
      case 34:
      case 35:
      case 36:
      case 38:
      case 39:
      case 44:
      case 45:
      case 47:
      case 50:
      case 51:
      case 52:
      case 53:
      case 55:
      case 58:
      case 59:
      case 60:
      case 61:
      case 63:
      case 65:
      case 66:
      case 70:
      case 71:
      case 72:
      case 73:
      case 74:
      case 75:
      case 76:
      case 77:
      case 79:
      case 81:
      case 82:
      case 83:
      case 84:
      case 85:
      case 88:
      case 89:
      case 91:
      case 92:
      case 93:
      case 102:
      case 103:
      case 104:
      case 105:
      case 106:
      case 107:
      case 108:
      case 109:
        return "???";
      case 2:
        result = "IBI_SS_GSM_ERROR_NO_ROUTE";
        break;
      case 5:
        result = "IBI_SS_GSM_ERROR_CHANNEL_UNACCEPTABLE";
        break;
      case 7:
        result = "IBI_SS_GSM_ERROR_OPERATOR_BARRING";
        break;
      case 15:
        result = "IBI_SS_GSM_ERROR_NORMAL_CALL_CLEARING";
        break;
      case 16:
        result = "IBI_SS_GSM_ERROR_USER_BUSY";
        break;
      case 17:
        result = "IBI_SS_GSM_ERROR_NO_USER_RESPONDING";
        break;
      case 18:
        result = "IBI_SS_GSM_ERROR_USER_ALERTING_NO_ANSWER";
        break;
      case 20:
        result = "IBI_SS_GSM_ERROR_CALL_REJECTED";
        break;
      case 21:
        result = "IBI_SS_GSM_ERROR_NUMBER_CHANGED";
        break;
      case 25:
        result = "IBI_SS_GSM_ERROR_NON_SELECTED_USER_CLEARING";
        break;
      case 26:
        result = "IBI_SS_GSM_ERROR_DESTINATION_OUT_OF_ORDER";
        break;
      case 27:
        result = "IBI_SS_GSM_ERROR_INVALID_NUMBER_FORMAT";
        break;
      case 28:
        result = "IBI_SS_GSM_ERROR_FACILITY_REJECTED";
        break;
      case 29:
        result = "IBI_SS_GSM_ERROR_RESPONSE_TO_STATUS_ENQUIRY";
        break;
      case 30:
        result = "IBI_SS_GSM_ERROR_NORMAL_UNSPECIFIED";
        break;
      case 33:
        result = "IBI_SS_GSM_ERROR_NO_CIRCUIT_AVAILABLE";
        break;
      case 37:
        result = "IBI_SS_GSM_ERROR_NETWORK_OUT_OF_ORDER";
        break;
      case 40:
        result = "IBI_SS_GSM_ERROR_TEMPORARY_FAILURE";
        break;
      case 41:
        result = "IBI_SS_GSM_ERROR_SWITCH_CONGESTION";
        break;
      case 42:
        return result;
      case 43:
        result = "IBI_SS_GSM_ERROR_REQUESTED_CIRCUIT_NOT_AVAILABLE";
        break;
      case 46:
        result = "IBI_SS_GSM_ERROR_RESOURCES_UNAVAILABLE";
        break;
      case 48:
        result = "IBI_SS_GSM_ERROR_QUALITY_UNAVAILABLE";
        break;
      case 49:
        result = "IBI_SS_GSM_ERROR_FACILITY_NOT_SUBSCRIBED";
        break;
      case 54:
        result = "IBI_SS_GSM_ERROR_INCOMING_CALLS_BARRED_IN_CUG";
        break;
      case 56:
        result = "IBI_SS_GSM_ERROR_BEARER_CAPABILITY_NOT_ALLOWED";
        break;
      case 57:
        result = "IBI_SS_GSM_ERROR_BEARER_CAPABILITY_NOT_AVAILABLE";
        break;
      case 62:
        result = "IBI_SS_GSM_ERROR_SERVICE_NOT_AVAILABLE";
        break;
      case 64:
        result = "IBI_SS_GSM_ERROR_BEARER_SERVICE_NOT_IMPLEMENTED";
        break;
      case 67:
        result = "IBI_SS_GSM_ERROR_ACM_GREATER_OR_EQUAL_TO_ACM_MAX";
        break;
      case 68:
        result = "IBI_SS_GSM_ERROR_FACILITY_NOT_IMPLEMENTED";
        break;
      case 69:
        result = "IBI_SS_GSM_ERROR_ONLY_RESTRICTED_DIGITAL";
        break;
      case 78:
        result = "IBI_SS_GSM_ERROR_SERVICE_NOT_IMPLEMENTED";
        break;
      case 80:
        result = "IBI_SS_GSM_ERROR_INVALID_TI";
        break;
      case 86:
        result = "IBI_SS_GSM_ERROR_USER_NOT_IN_CUG";
        break;
      case 87:
        result = "IBI_SS_GSM_ERROR_INCOMPATIBLE_DESTINATION";
        break;
      case 90:
        result = "IBI_SS_GSM_ERROR_INVALID_TRANSIT_NETWORK";
        break;
      case 94:
        result = "IBI_SS_GSM_ERROR_SEMANTICS_INCORRECT";
        break;
      case 95:
        result = "IBI_SS_GSM_ERROR_INVALID_MANDATORY_INFORMATION";
        break;
      case 96:
        result = "IBI_SS_GSM_ERROR_UNKNOWN_MESSAGE_TYPE1";
        break;
      case 97:
        result = "IBI_SS_GSM_ERROR_UNEXPECTED_MESSAGE_TYPE";
        break;
      case 98:
        result = "IBI_SS_GSM_ERROR_UNEXPECTED_IE";
        break;
      case 99:
        result = "IBI_SS_GSM_ERROR_CONDITIONAL_IE_ERROR";
        break;
      case 100:
        result = "IBI_SS_GSM_ERROR_UNKNOWN_MESSAGE_TYPE2";
        break;
      case 101:
        result = "IBI_SS_GSM_ERROR_RECOVERY_ON_TIMER_EXPIRY";
        break;
      case 110:
        result = "IBI_SS_GSM_ERROR_PROTOCOL_ERROR";
        break;
      default:
        if ("IBI_SS_GSM_ERROR_ACCESS_INFORMATION_DISCARDED" != 127)
          return "???";
        result = "IBI_SS_GSM_ERROR_INTERWORKING";
        break;
    }
  }
  return result;
}

{
  if ((a1 - 1) > 7)
    return "???";
  else
    return off_24C8DFFE0[a1 - 1];
}

{
  const char *result;

  result = "IBI_STW_CAUSE_ACTIVATION_IN_PROGRESS";
  switch(a1)
  {
    case 0:
      result = "IBI_STW_CAUSE_NONE";
      break;
    case 1:
      result = "IBI_STW_CAUSE_INTERNAL";
      break;
    case 2:
      result = "IBI_STW_CAUSE_NO_MEMORY";
      break;
    case 3:
      return result;
    case 4:
      result = "IBI_STW_CAUSE_DEACTIVATION_IN_PROGRESS";
      break;
    case 5:
      result = "IBI_STW_CAUSE_SUSPEND_IN_PROGRESS";
      break;
    case 6:
      result = "IBI_STW_CAUSE_RESUME_IN_PROGRESS";
      break;
    case 7:
      result = "IBI_STW_CAUSE_SERVICE_ACTIVE";
      break;
    case 8:
      result = "IBI_STW_CAUSE_SERVICE_NOT_ACTIVE";
      break;
    case 9:
      result = "IBI_STW_CAUSE_S4_DATA_MISSING";
      break;
    case 10:
      result = "IBI_STW_CAUSE_UE_CONFIG_MISSING";
      break;
    case 11:
      result = "IBI_STW_CAUSE_UE_CONFIG_FILE_DECODE_FAILURE";
      break;
    case 12:
      result = "IBI_STW_CAUSE_INVALID_ARG";
      break;
    case 13:
      result = "IBI_STW_CAUSE_MISSING_ARG";
      break;
    case 14:
      result = "IBI_STW_CAUSE_CPS_MODE_NOT_READY";
      break;
    case 15:
      result = "IBI_STW_CAUSE_MALFORMED_MSG";
      break;
    case 16:
      result = "IBI_STW_CAUSE_UNSUPPORTED_IN_CURRENT_SERVICE_STATE";
      break;
    case 17:
      result = "IBI_STW_CAUSE_UNSUPPORTED_IN_CURRENT_CONNECTION_STATE";
      break;
    case 18:
      result = "IBI_STW_CAUSE_S4_CONFIG_FAILURE";
      break;
    default:
      if (a1 == 0xFFFF)
        result = "IBI_STW_CAUSE_MAX";
      else
        result = "???";
      break;
  }
  return result;
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_STW_PREAMBLE_FORMAT_SHORT";
  if (a1 == 1)
    return "IBI_STW_PREAMBLE_FORMAT_LONG";
  else
    return v1;
}

{
  const char *v1;

  v1 = "???";
  if (a1 == 1)
    v1 = "IBI_STW_REGISTRATION_STATUS_REGISTERED";
  if (a1)
    return v1;
  else
    return "IBI_STW_REGISTRATION_STATUS_NOT_REGISTERED";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_STW_STATE_SUSPEND";
  if (a1 == 1)
    return "IBI_STW_STATE_DEACTIVATE";
  else
    return v1;
}

{
  const char *v1;
  const char *v2;

  v1 = "IBI_STW_RESULT_FAILURE";
  v2 = "???";
  if (a1 == 0xFFFF)
    v2 = "IBI_STW_RESULT_MAX";
  if (a1 != 1)
    v1 = v2;
  if (a1)
    return v1;
  else
    return "IBI_STW_RESULT_SUCCESS";
}

{
  const char *v1;

  v1 = "???";
  if (!a1)
    v1 = "IBI_STW_SHARED_SECRET_USAGE_STATUS_USED";
  if (a1 == 1)
    return "IBI_STW_SHARED_SECRET_USAGE_STATUS_UNUSED";
  else
    return v1;
}

{
  const char *result;

  result = "IBI_STW_HEATMAP_VISIBILITY_LEVEL_HIGH";
  switch(a1)
  {
    case 0:
      result = "IBI_STW_HEATMAP_VISIBILITY_LEVEL_NO_SIGNAL";
      break;
    case 1:
      result = "IBI_STW_HEATMAP_VISIBILITY_LEVEL_LOW";
      break;
    case 2:
      result = "IBI_STW_HEATMAP_VISIBILITY_LEVEL_MEDIUM";
      break;
    case 3:
      return result;
    default:
      if (a1 == 255)
        result = "IBI_STW_HEATMAP_VISIBILITY_LEVEL_UNKNOWN";
      else
        result = "???";
      break;
  }
  return result;
}

{
  if ((a1 + 1) > 3)
    return "???";
  else
    return off_24C8E0388[a1 + 1];
}

{
  if (a1)
    return "???";
  else
    return "IBI_XCC_PERIPHERAL_GNSS";
}

{
  if ((a1 + 1) > 4)
    return "???";
  else
    return off_24C8E03C0[a1 + 1];
}

{
  if ((a1 - 2) > 7)
    return "UNKNOWN";
  else
    return off_24C931848[a1 - 2];
}

{
  const char *v1;

  v1 = "UNKNOWN";
  if (a1 == 2)
    v1 = "ARI_ATTR_GET";
  if (a1 == 1)
    return "ARI_ATTR_SET";
  else
    return v1;
}

{
  if ((a1 + 1) > 5)
    return "UNKNOWN";
  else
    return off_24C931888[a1 + 1];
}

{
  const char *v1;

  v1 = "UNKNOWN";
  if (!a1)
    v1 = "ARI_ATTR_OFF";
  if (a1 == 0x7FFFFFFF)
    return "ARI_ATTR_ON";
  else
    return v1;
}

