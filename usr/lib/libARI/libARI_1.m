uint64_t ARI_IBIPriFileStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPriFileStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPriGriWriteResp_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPriGriWriteResp_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPriRefreshStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPriRefreshStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

double AriSdk::ARI_IBISimExtendedAuthReq_SDK::ARI_IBISimExtendedAuthReq_SDK(AriSdk::ARI_IBISimExtendedAuthReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x30838000u, 0);
  *(_QWORD *)v1 = &off_24C8E0C58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x30838000u, 0);
  *(_QWORD *)v1 = &off_24C8E0C58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimExtendedAuthReq_SDK::ARI_IBISimExtendedAuthReq_SDK(AriSdk::ARI_IBISimExtendedAuthReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0C58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0C58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimExtendedAuthReq_SDK::~ARI_IBISimExtendedAuthReq_SDK(AriSdk::ARI_IBISimExtendedAuthReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E0C58;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40104B78CFLL);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40104B78CFLL);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4075806E5BLL);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4075806E5BLL);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimExtendedAuthReq_SDK::~ARI_IBISimExtendedAuthReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimExtendedAuthReq_SDK::pack(AriSdk::ARI_IBISimExtendedAuthReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x11uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x11uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x100uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x100uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimExtendedAuthReq_SDK::unpack(AriSdk::ARI_IBISimExtendedAuthReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  _OWORD *v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  BOOL v39;
  BOOL v40;

  v40 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v40, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v40;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v39 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v39, 0);
  if ((_DWORD)v3 || !v39)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v38 = 0;
  v6 = (_BYTE *)operator new();
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[16] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 17, &v38, 0);
  if ((_DWORD)v3 || !v38)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4075806E5BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = operator new();
    *(_OWORD *)v7 = *(_OWORD *)v6;
    *(_BYTE *)(v7 + 16) = v6[16];
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4075806E5BLL);
    MEMORY[0x212BB9B60](v6, 0x1000C4075806E5BLL);
  }
  v37 = 0;
  v9 = (_BYTE *)operator new();
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v9[16] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 17, &v37, 0);
  if ((_DWORD)v3 || !v37)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4075806E5BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = operator new();
    *(_OWORD *)v10 = *(_OWORD *)v9;
    *(_BYTE *)(v10 + 16) = v9[16];
    v11 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4075806E5BLL);
    MEMORY[0x212BB9B60](v9, 0x1000C4075806E5BLL);
  }
  v36 = 0;
  v12 = (_OWORD *)operator new();
  *v12 = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  v12[3] = 0u;
  v12[4] = 0u;
  v12[5] = 0u;
  v12[6] = 0u;
  v12[7] = 0u;
  v12[8] = 0u;
  v12[9] = 0u;
  v12[10] = 0u;
  v12[11] = 0u;
  v12[12] = 0u;
  v12[13] = 0u;
  v12[14] = 0u;
  v12[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v12, 256, &v36, 0);
  if ((_DWORD)v3 || !v36)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40104B78CFLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = (_OWORD *)operator new();
    v14 = v12[13];
    v13[12] = v12[12];
    v13[13] = v14;
    v15 = v12[15];
    v13[14] = v12[14];
    v13[15] = v15;
    v16 = v12[9];
    v13[8] = v12[8];
    v13[9] = v16;
    v17 = v12[11];
    v13[10] = v12[10];
    v13[11] = v17;
    v18 = v12[5];
    v13[4] = v12[4];
    v13[5] = v18;
    v19 = v12[7];
    v13[6] = v12[6];
    v13[7] = v19;
    v20 = v12[1];
    *v13 = *v12;
    v13[1] = v20;
    v21 = v12[3];
    v13[2] = v12[2];
    v13[3] = v21;
    v22 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v13;
    if (v22)
      MEMORY[0x212BB9B60](v22, 0x1000C40104B78CFLL);
    MEMORY[0x212BB9B60](v12, 0x1000C40104B78CFLL);
  }
  v35 = 0;
  v23 = (_OWORD *)operator new();
  *v23 = 0u;
  v23[1] = 0u;
  v23[2] = 0u;
  v23[3] = 0u;
  v23[4] = 0u;
  v23[5] = 0u;
  v23[6] = 0u;
  v23[7] = 0u;
  v23[8] = 0u;
  v23[9] = 0u;
  v23[10] = 0u;
  v23[11] = 0u;
  v23[12] = 0u;
  v23[13] = 0u;
  v23[14] = 0u;
  v23[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v23, 256, &v35, 0);
  if (!(_DWORD)v3 && v35)
  {
    v24 = (_OWORD *)operator new();
    v25 = v23[13];
    v24[12] = v23[12];
    v24[13] = v25;
    v26 = v23[15];
    v24[14] = v23[14];
    v24[15] = v26;
    v27 = v23[9];
    v24[8] = v23[8];
    v24[9] = v27;
    v28 = v23[11];
    v24[10] = v23[10];
    v24[11] = v28;
    v29 = v23[5];
    v24[4] = v23[4];
    v24[5] = v29;
    v30 = v23[7];
    v24[6] = v23[6];
    v24[7] = v30;
    v31 = v23[1];
    *v24 = *v23;
    v24[1] = v31;
    v32 = v23[3];
    v24[2] = v23[2];
    v24[3] = v32;
    v33 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v24;
    if (v33)
      MEMORY[0x212BB9B60](v33, 0x1000C40104B78CFLL);
  }
  MEMORY[0x212BB9B60](v23, 0x1000C40104B78CFLL);
  return v3;
}

void sub_20E1AA014(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40104B78CFLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimExtendedAuthReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimExtendedAuthReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 813924352;
}

double AriSdk::ARI_IBISimExtendedAuthRspCb_SDK::ARI_IBISimExtendedAuthRspCb_SDK(AriSdk::ARI_IBISimExtendedAuthRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x31038000u, 0);
  *(_QWORD *)v1 = &off_24C8E0C90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x31038000u, 0);
  *(_QWORD *)v1 = &off_24C8E0C90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

double AriSdk::ARI_IBISimExtendedAuthRspCb_SDK::ARI_IBISimExtendedAuthRspCb_SDK(AriSdk::ARI_IBISimExtendedAuthRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0C90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0C90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

void AriSdk::ARI_IBISimExtendedAuthRspCb_SDK::~ARI_IBISimExtendedAuthRspCb_SDK(AriSdk::ARI_IBISimExtendedAuthRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)this = &off_24C8E0C90;
  v2 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40104B78CFLL);
  v3 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40FC6FA475);
  v5 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C408EEE02DCLL);
  v7 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4075806E5BLL);
  v9 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4075806E5BLL);
  v11 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4075806E5BLL);
  v13 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  v16 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  v17 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimExtendedAuthRspCb_SDK::~ARI_IBISimExtendedAuthRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimExtendedAuthRspCb_SDK::pack(AriSdk::ARI_IBISimExtendedAuthRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v10, 0x11uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v12, 0x11uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v14, 0x11uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v16, 9uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v18, 0xFuLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v19, 4uLL, 0), !(_DWORD)result))
                              {
                                v20 = (const void *)*((_QWORD *)this + 23);
                                if (!v20
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v20, 0x100uLL, 0),
                                      !(_DWORD)result))
                                {
                                  result = 0;
                                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimExtendedAuthRspCb_SDK::unpack(AriSdk::ARI_IBISimExtendedAuthRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  _DWORD *v18;
  _QWORD *v19;
  _DWORD *v20;
  _BYTE *v21;
  _DWORD *v22;
  _QWORD *v23;
  _DWORD *v24;
  _OWORD *v25;
  BOOL v27;

  v27 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v27, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v27;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v27 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v27 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v27 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v27 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v27 = 0;
  v11 = (_BYTE *)operator new();
  *(_QWORD *)v11 = 0;
  *((_QWORD *)v11 + 1) = 0;
  v11[16] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 17, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4075806E5BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = operator new();
    *(_OWORD *)v12 = *(_OWORD *)v11;
    *(_BYTE *)(v12 + 16) = v11[16];
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C4075806E5BLL);
    MEMORY[0x212BB9B60](v11, 0x1000C4075806E5BLL);
  }
  v27 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v14, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v27 = 0;
  v15 = (_BYTE *)operator new();
  *(_QWORD *)v15 = 0;
  *((_QWORD *)v15 + 1) = 0;
  v15[16] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v15, 17, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4075806E5BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v16 = operator new();
    *(_OWORD *)v16 = *(_OWORD *)v15;
    *(_BYTE *)(v16 + 16) = v15[16];
    v17 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v16;
    if (v17)
      MEMORY[0x212BB9B60](v17, 0x1000C4075806E5BLL);
    MEMORY[0x212BB9B60](v15, 0x1000C4075806E5BLL);
  }
  v27 = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v18, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  v27 = 0;
  v19 = (_QWORD *)operator new();
  *v19 = 0;
  v19[1] = 0;
  *((_BYTE *)v19 + 16) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v19, 17, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4075806E5BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimSecAuthIntegrityKey>::operator=<IBISimSecAuthIntegrityKey&,void>((uint64_t *)this + 17, (uint64_t)v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4075806E5BLL);
  }
  v27 = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v20, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  v27 = 0;
  v21 = (_BYTE *)operator new();
  *(_QWORD *)v21 = 0;
  v21[8] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v21, 9, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v21, 0x1000C408EEE02DCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimSecAuthKc>::operator=<IBISimSecAuthKc&,void>((uint64_t *)this + 19, (uint64_t)v21);
    MEMORY[0x212BB9B60](v21, 0x1000C408EEE02DCLL);
  }
  v27 = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v22, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  }
  v27 = 0;
  v23 = (_QWORD *)operator new();
  *v23 = 0;
  *(_QWORD *)((char *)v23 + 7) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v23, 15, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v23, 0x1000C40FC6FA475);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimSecAuthAuts>::operator=<IBISimSecAuthAuts&,void>((uint64_t *)this + 21, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C40FC6FA475);
  }
  v27 = 0;
  v24 = (_DWORD *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v24, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  }
  v27 = 0;
  v25 = (_OWORD *)operator new();
  *v25 = 0u;
  v25[1] = 0u;
  v25[2] = 0u;
  v25[3] = 0u;
  v25[4] = 0u;
  v25[5] = 0u;
  v25[6] = 0u;
  v25[7] = 0u;
  v25[8] = 0u;
  v25[9] = 0u;
  v25[10] = 0u;
  v25[11] = 0u;
  v25[12] = 0u;
  v25[13] = 0u;
  v25[14] = 0u;
  v25[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v25, 256, &v27, 0);
  if (!(_DWORD)v3 && v27)
    AriSdk::Tlv<IBISimSecAuthKsExtNaf>::operator=<IBISimSecAuthKsExtNaf&,void>((uint64_t *)this + 23, v25);
  MEMORY[0x212BB9B60](v25, 0x1000C40104B78CFLL);
  return v3;
}

void sub_20E1AB074(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40104B78CFLL);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISimSecAuthIntegrityKey>::operator=<IBISimSecAuthIntegrityKey&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_BYTE *)(v4 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4075806E5BLL);
  return a1;
}

uint64_t *AriSdk::Tlv<IBISimSecAuthKc>::operator=<IBISimSecAuthKc&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_QWORD *)v4 = *(_QWORD *)a2;
  *(_BYTE *)(v4 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C408EEE02DCLL);
  return a1;
}

uint64_t *AriSdk::Tlv<IBISimSecAuthAuts>::operator=<IBISimSecAuthAuts&,void>(uint64_t *a1, _QWORD *a2)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)operator new();
  *v4 = *a2;
  *(_QWORD *)((char *)v4 + 7) = *(_QWORD *)((char *)a2 + 7);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40FC6FA475);
  return a1;
}

uint64_t *AriSdk::Tlv<IBISimSecAuthKsExtNaf>::operator=<IBISimSecAuthKsExtNaf&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;

  v4 = (_OWORD *)operator new();
  v5 = a2[13];
  v4[12] = a2[12];
  v4[13] = v5;
  v6 = a2[15];
  v4[14] = a2[14];
  v4[15] = v6;
  v7 = a2[9];
  v4[8] = a2[8];
  v4[9] = v7;
  v8 = a2[11];
  v4[10] = a2[10];
  v4[11] = v8;
  v9 = a2[5];
  v4[4] = a2[4];
  v4[5] = v9;
  v10 = a2[7];
  v4[6] = a2[6];
  v4[7] = v10;
  v11 = a2[1];
  *v4 = *a2;
  v4[1] = v11;
  v12 = a2[3];
  v4[2] = a2[2];
  v4[3] = v12;
  v13 = *a1;
  *a1 = (uint64_t)v4;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40104B78CFLL);
  return a1;
}

BOOL AriSdk::ARI_IBISimExtendedAuthRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimExtendedAuthRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 822312960;
}

double AriSdk::ARI_IBISimGenPinReq_SDK::ARI_IBISimGenPinReq_SDK(AriSdk::ARI_IBISimGenPinReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x30808000u, 0);
  *(_QWORD *)v1 = &off_24C8E0CC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x30808000u, 0);
  *(_QWORD *)v1 = &off_24C8E0CC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBISimGenPinReq_SDK::ARI_IBISimGenPinReq_SDK(AriSdk::ARI_IBISimGenPinReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0CC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0CC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBISimGenPinReq_SDK::~ARI_IBISimGenPinReq_SDK(AriSdk::ARI_IBISimGenPinReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E0CC8;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C403E1C8BA9);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C403E1C8BA9);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40A86A77D5);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGenPinReq_SDK::~ARI_IBISimGenPinReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGenPinReq_SDK::pack(AriSdk::ARI_IBISimGenPinReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x14uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x14uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v10, 0xCuLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v11, 0xCuLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v12, 0xCuLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGenPinReq_SDK::unpack(AriSdk::ARI_IBISimGenPinReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;

  v30 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v30, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v30;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v29 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v28 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v27 = 0;
  v7 = (_DWORD *)operator new();
  *(_QWORD *)v7 = 0;
  *((_QWORD *)v7 + 1) = 0;
  v7[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 20, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = operator new();
    *(_OWORD *)v8 = *(_OWORD *)v7;
    *(_DWORD *)(v8 + 16) = v7[4];
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C40A86A77D5);
    MEMORY[0x212BB9B60](v7, 0x1000C40A86A77D5);
  }
  v26 = 0;
  v10 = (_DWORD *)operator new();
  *(_QWORD *)v10 = 0;
  *((_QWORD *)v10 + 1) = 0;
  v10[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 20, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = operator new();
    *(_OWORD *)v11 = *(_OWORD *)v10;
    *(_DWORD *)(v11 + 16) = v10[4];
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C40A86A77D5);
    MEMORY[0x212BB9B60](v10, 0x1000C40A86A77D5);
  }
  v25 = 0;
  v13 = (_DWORD *)operator new();
  *(_QWORD *)v13 = 0;
  v13[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v13, 12, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = operator new();
    *(_QWORD *)v14 = *(_QWORD *)v13;
    *(_DWORD *)(v14 + 8) = v13[2];
    v15 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v14;
    if (v15)
      MEMORY[0x212BB9B60](v15, 0x1000C403E1C8BA9);
    MEMORY[0x212BB9B60](v13, 0x1000C403E1C8BA9);
  }
  v24 = 0;
  v16 = (_DWORD *)operator new();
  *(_QWORD *)v16 = 0;
  v16[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v16, 12, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = operator new();
    *(_QWORD *)v17 = *(_QWORD *)v16;
    *(_DWORD *)(v17 + 8) = v16[2];
    v18 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v17;
    if (v18)
      MEMORY[0x212BB9B60](v18, 0x1000C403E1C8BA9);
    MEMORY[0x212BB9B60](v16, 0x1000C403E1C8BA9);
  }
  v23 = 0;
  v19 = (_DWORD *)operator new();
  *(_QWORD *)v19 = 0;
  v19[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v19, 12, &v23, 0);
  if (!(_DWORD)v3 && v23)
  {
    v20 = operator new();
    *(_QWORD *)v20 = *(_QWORD *)v19;
    *(_DWORD *)(v20 + 8) = v19[2];
    v21 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v20;
    if (v21)
      MEMORY[0x212BB9B60](v21, 0x1000C403E1C8BA9);
  }
  MEMORY[0x212BB9B60](v19, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1ABCDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGenPinReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGenPinReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 813727744;
}

double AriSdk::ARI_IBISimGenPinRspCb_SDK::ARI_IBISimGenPinRspCb_SDK(AriSdk::ARI_IBISimGenPinRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x31008000u, 0);
  *(_QWORD *)v1 = &off_24C8E0D00;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x31008000u, 0);
  *(_QWORD *)v1 = &off_24C8E0D00;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBISimGenPinRspCb_SDK::ARI_IBISimGenPinRspCb_SDK(AriSdk::ARI_IBISimGenPinRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0D00;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0D00;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBISimGenPinRspCb_SDK::~ARI_IBISimGenPinRspCb_SDK(AriSdk::ARI_IBISimGenPinRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E0D00;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGenPinRspCb_SDK::~ARI_IBISimGenPinRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGenPinRspCb_SDK::pack(AriSdk::ARI_IBISimGenPinRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGenPinRspCb_SDK::unpack(AriSdk::ARI_IBISimGenPinRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v18 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v10, 1, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v17 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v11, 1, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v16 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v12, 4, &v16, 0);
  if (!(_DWORD)v3 && v16)
  {
    v13 = (_DWORD *)operator new();
    *v13 = *v12;
    v14 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v13;
    if (v14)
      MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  return v3;
}

void sub_20E1AC55C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGenPinRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGenPinRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 822116352;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetBandStatusReq_SDK::ARI_IBINetBandStatusReq_SDK(AriSdk::ARI_IBINetBandStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20820000u, 0);
  *(_QWORD *)result = &off_24C8E0D98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20820000u, 0);
  *(_QWORD *)result = &off_24C8E0D98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetBandStatusReq_SDK::ARI_IBINetBandStatusReq_SDK(AriSdk::ARI_IBINetBandStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0D98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0D98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetBandStatusReq_SDK::~ARI_IBINetBandStatusReq_SDK(AriSdk::ARI_IBINetBandStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E0D98;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetBandStatusReq_SDK::~ARI_IBINetBandStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetBandStatusReq_SDK::pack(AriSdk::ARI_IBINetBandStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetBandStatusReq_SDK::unpack(AriSdk::ARI_IBINetBandStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1AC814(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetBandStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetBandStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545390592;
}

double AriSdk::ARI_IBINetBandStatusRspCb_SDK::ARI_IBINetBandStatusRspCb_SDK(AriSdk::ARI_IBINetBandStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21020000u, 0);
  *(_QWORD *)v1 = &off_24C8E0DD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21020000u, 0);
  *(_QWORD *)v1 = &off_24C8E0DD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBINetBandStatusRspCb_SDK::ARI_IBINetBandStatusRspCb_SDK(AriSdk::ARI_IBINetBandStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0DD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0DD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBINetBandStatusRspCb_SDK::~ARI_IBINetBandStatusRspCb_SDK(AriSdk::ARI_IBINetBandStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C8E0DD0;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40104B78CFLL);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4057C224CCLL);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40FA0F61DDLL);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4057C224CCLL);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4057C224CCLL);
  v7 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4057C224CCLL);
  v8 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C40451B5BE8);
  v9 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4057C224CCLL);
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4057C224CCLL);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetBandStatusRspCb_SDK::~ARI_IBINetBandStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetBandStatusRspCb_SDK::pack(AriSdk::ARI_IBINetBandStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x158uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x158uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x10uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x158uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x158uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 0x158uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 0x40uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 0x158uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14
                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v14, 0x100uLL, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetBandStatusRspCb_SDK::unpack(AriSdk::ARI_IBINetBandStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  _OWORD *v8;
  void *v9;
  uint64_t v10;
  _QWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  _OWORD *v14;
  void *v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;

  v36 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v36, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v36;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v35 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  v5[16] = 0u;
  v5[17] = 0u;
  v5[18] = 0u;
  v5[19] = 0u;
  v5[20] = 0u;
  *((_QWORD *)v5 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 344, &v35, 0);
  if ((_DWORD)v3 || !v35)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x158uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4057C224CCLL);
    MEMORY[0x212BB9B60](v5, 0x1000C4057C224CCLL);
  }
  v34 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v8[20] = 0u;
  *((_QWORD *)v8 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 344, &v34, 0);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (void *)operator new();
    memcpy(v9, v8, 0x158uLL);
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4057C224CCLL);
    MEMORY[0x212BB9B60](v8, 0x1000C4057C224CCLL);
  }
  v33 = 0;
  v11 = (_QWORD *)operator new();
  *v11 = 0;
  v11[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v11, 16, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = (_OWORD *)operator new();
    *v12 = *(_OWORD *)v11;
    v13 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C40451B5BE8);
    MEMORY[0x212BB9B60](v11, 0x1000C40451B5BE8);
  }
  v32 = 0;
  v14 = (_OWORD *)operator new();
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[6] = 0u;
  v14[7] = 0u;
  v14[8] = 0u;
  v14[9] = 0u;
  v14[10] = 0u;
  v14[11] = 0u;
  v14[12] = 0u;
  v14[13] = 0u;
  v14[14] = 0u;
  v14[15] = 0u;
  v14[16] = 0u;
  v14[17] = 0u;
  v14[18] = 0u;
  v14[19] = 0u;
  v14[20] = 0u;
  *((_QWORD *)v14 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v14, 344, &v32, 0);
  if ((_DWORD)v3 || !v32)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v15 = (void *)operator new();
    memcpy(v15, v14, 0x158uLL);
    v16 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v15;
    if (v16)
      MEMORY[0x212BB9B60](v16, 0x1000C4057C224CCLL);
    MEMORY[0x212BB9B60](v14, 0x1000C4057C224CCLL);
  }
  v31 = 0;
  v17 = (_OWORD *)operator new();
  *v17 = 0u;
  v17[1] = 0u;
  v17[2] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[5] = 0u;
  v17[6] = 0u;
  v17[7] = 0u;
  v17[8] = 0u;
  v17[9] = 0u;
  v17[10] = 0u;
  v17[11] = 0u;
  v17[12] = 0u;
  v17[13] = 0u;
  v17[14] = 0u;
  v17[15] = 0u;
  v17[16] = 0u;
  v17[17] = 0u;
  v17[18] = 0u;
  v17[19] = 0u;
  v17[20] = 0u;
  *((_QWORD *)v17 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v17, 344, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetCdmaBandStatus>::operator=<IBINetCdmaBandStatus&,void>((uint64_t *)this + 13, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4057C224CCLL);
  }
  v30 = 0;
  v18 = (_OWORD *)operator new();
  *v18 = 0u;
  v18[1] = 0u;
  v18[2] = 0u;
  v18[3] = 0u;
  v18[4] = 0u;
  v18[5] = 0u;
  v18[6] = 0u;
  v18[7] = 0u;
  v18[8] = 0u;
  v18[9] = 0u;
  v18[10] = 0u;
  v18[11] = 0u;
  v18[12] = 0u;
  v18[13] = 0u;
  v18[14] = 0u;
  v18[15] = 0u;
  v18[16] = 0u;
  v18[17] = 0u;
  v18[18] = 0u;
  v18[19] = 0u;
  v18[20] = 0u;
  *((_QWORD *)v18 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v18, 344, &v30, 0);
  if ((_DWORD)v3 || !v30)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetCdmaBandStatus>::operator=<IBINetCdmaBandStatus&,void>((uint64_t *)this + 14, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4057C224CCLL);
  }
  v29 = 0;
  v19 = (_OWORD *)operator new();
  *v19 = 0u;
  v19[1] = 0u;
  v19[2] = 0u;
  v19[3] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v19, 64, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C40FA0F61DDLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v20 = (_OWORD *)operator new();
    v21 = v19[1];
    *v20 = *v19;
    v20[1] = v21;
    v22 = v19[3];
    v20[2] = v19[2];
    v20[3] = v22;
    v23 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v20;
    if (v23)
      MEMORY[0x212BB9B60](v23, 0x1000C40FA0F61DDLL);
    MEMORY[0x212BB9B60](v19, 0x1000C40FA0F61DDLL);
  }
  v28 = 0;
  v24 = (_OWORD *)operator new();
  *v24 = 0u;
  v24[1] = 0u;
  v24[2] = 0u;
  v24[3] = 0u;
  v24[4] = 0u;
  v24[5] = 0u;
  v24[6] = 0u;
  v24[7] = 0u;
  v24[8] = 0u;
  v24[9] = 0u;
  v24[10] = 0u;
  v24[11] = 0u;
  v24[12] = 0u;
  v24[13] = 0u;
  v24[14] = 0u;
  v24[15] = 0u;
  v24[16] = 0u;
  v24[17] = 0u;
  v24[18] = 0u;
  v24[19] = 0u;
  v24[20] = 0u;
  *((_QWORD *)v24 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v24, 344, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetCdmaBandStatus>::operator=<IBINetCdmaBandStatus&,void>((uint64_t *)this + 16, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4057C224CCLL);
  }
  v27 = 0;
  v25 = (_OWORD *)operator new();
  *v25 = 0u;
  v25[1] = 0u;
  v25[2] = 0u;
  v25[3] = 0u;
  v25[4] = 0u;
  v25[5] = 0u;
  v25[6] = 0u;
  v25[7] = 0u;
  v25[8] = 0u;
  v25[9] = 0u;
  v25[10] = 0u;
  v25[11] = 0u;
  v25[12] = 0u;
  v25[13] = 0u;
  v25[14] = 0u;
  v25[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v25, 256, &v27, 0);
  if (!(_DWORD)v3 && v27)
    AriSdk::Tlv<IBISimSecAuthKsExtNaf>::operator=<IBISimSecAuthKsExtNaf&,void>((uint64_t *)this + 17, v25);
  MEMORY[0x212BB9B60](v25, 0x1000C40104B78CFLL);
  return v3;
}

void sub_20E1AD4A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40104B78CFLL);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBINetCdmaBandStatus>::operator=<IBINetCdmaBandStatus&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x158uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4057C224CCLL);
  return a1;
}

BOOL AriSdk::ARI_IBINetBandStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetBandStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 553779200;
}

double AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK::ARI_IBINetConfigureNetworkModeReq_SDK(AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x20810000u, 0);
  *(_QWORD *)v1 = &off_24C8E0E08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x20810000u, 0);
  *(_QWORD *)v1 = &off_24C8E0E08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK::ARI_IBINetConfigureNetworkModeReq_SDK(AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0E08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0E08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK::~ARI_IBINetConfigureNetworkModeReq_SDK(AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)this = &off_24C8E0E08;
  v2 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C405EE0DD82);
  v3 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40A86A77D5);
  v4 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4027586B93);
  v5 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40401DF834);
  v6 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4079BB23A2);
  v7 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4057C224CCLL);
  v9 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C403E1C8BA9);
  v10 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
  v11 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C40E91F0153);
  v12 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C40451B5BE8);
  v13 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40A86A77D5);
  v14 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK::~ARI_IBINetConfigureNetworkModeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK::pack(AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x10uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x21CuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0xCuLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 0x158uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 0x234uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v14, 0xACuLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v15, 0x1CuLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v16, 0x14uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v17, 0x2B8uLL, 0), !(_DWORD)result))
                          {
                            result = 0;
                            *a2 = (AriMsg *)*((_QWORD *)this + 6);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK::unpack(AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  void *v9;
  _QWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _DWORD *v15;
  void *v16;
  _OWORD *v17;
  _QWORD *v18;
  _QWORD *v19;
  void *v20;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;

  v34 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v34, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v34;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v33 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  *((_DWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 20, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  }
  v32 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v6[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 16, &v32, 0);
  if ((_DWORD)v3 || !v32)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_OWORD *)operator new();
    *v7 = *(_OWORD *)v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C40451B5BE8);
    MEMORY[0x212BB9B60](v6, 0x1000C40451B5BE8);
  }
  v31 = 0;
  v9 = (void *)operator new();
  bzero(v9, 0x21CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 540, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40E91F0153);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetBandSettings>::operator=<IBINetBandSettings&,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40E91F0153);
  }
  v30 = 0;
  v10 = (_QWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 8, &v30, 0);
  if ((_DWORD)v3 || !v30)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
  }
  v29 = 0;
  v11 = (_DWORD *)operator new();
  *(_QWORD *)v11 = 0;
  v11[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v11, 12, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = operator new();
    *(_QWORD *)v12 = *(_QWORD *)v11;
    *(_DWORD *)(v12 + 8) = v11[2];
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C403E1C8BA9);
    MEMORY[0x212BB9B60](v11, 0x1000C403E1C8BA9);
  }
  v28 = 0;
  v14 = (_OWORD *)operator new();
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[6] = 0u;
  v14[7] = 0u;
  v14[8] = 0u;
  v14[9] = 0u;
  v14[10] = 0u;
  v14[11] = 0u;
  v14[12] = 0u;
  v14[13] = 0u;
  v14[14] = 0u;
  v14[15] = 0u;
  v14[16] = 0u;
  v14[17] = 0u;
  v14[18] = 0u;
  v14[19] = 0u;
  v14[20] = 0u;
  *((_QWORD *)v14 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v14, 344, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetCdmaBandStatus>::operator=<IBINetCdmaBandStatus&,void>((uint64_t *)this + 14, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4057C224CCLL);
  }
  v27 = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v15, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  v26 = 0;
  v16 = (void *)operator new();
  bzero(v16, 0x234uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v16, 564, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4079BB23A2);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetBandSettings3gppExt>::operator=<IBINetBandSettings3gppExt&,void>((uint64_t *)this + 16, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4079BB23A2);
  }
  v25 = 0;
  v17 = (_OWORD *)operator new();
  *v17 = 0u;
  v17[1] = 0u;
  v17[2] = 0u;
  v17[3] = 0u;
  v17[4] = 0u;
  v17[5] = 0u;
  v17[6] = 0u;
  v17[7] = 0u;
  v17[8] = 0u;
  v17[9] = 0u;
  *(_OWORD *)((char *)v17 + 156) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v17, 172, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C40401DF834);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetBandConfiguration>::operator=<IBINetBandConfiguration&,void>((uint64_t *)this + 17, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C40401DF834);
  }
  v24 = 0;
  v18 = (_QWORD *)operator new();
  v18[1] = 0;
  v18[2] = 0;
  *v18 = 0;
  *((_DWORD *)v18 + 6) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v18, 28, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4027586B93);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetRatModeSetting_V1>::operator=<IBINetRatModeSetting_V1&,void>((uint64_t *)this + 18, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4027586B93);
  }
  v23 = 0;
  v19 = (_QWORD *)operator new();
  *v19 = 0;
  v19[1] = 0;
  *((_DWORD *)v19 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v19, 20, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 19, (uint64_t)v19);
    MEMORY[0x212BB9B60](v19, 0x1000C40A86A77D5);
  }
  v22 = 0;
  v20 = (void *)operator new();
  bzero(v20, 0x2B8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v20, 696, &v22, 0);
  if (!(_DWORD)v3 && v22)
    AriSdk::Tlv<IBINetBandSettings_V1>::operator=<IBINetBandSettings_V1&,void>((uint64_t *)this + 20, v20);
  MEMORY[0x212BB9B60](v20, 0x1000C405EE0DD82);
  return v3;
}

void sub_20E1AE320(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C405EE0DD82);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBINetBandSettings>::operator=<IBINetBandSettings&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x21CuLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40E91F0153);
  return a1;
}

uint64_t *AriSdk::Tlv<IBINetBandSettings3gppExt>::operator=<IBINetBandSettings3gppExt&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x234uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4079BB23A2);
  return a1;
}

uint64_t *AriSdk::Tlv<IBINetBandConfiguration>::operator=<IBINetBandConfiguration&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v4 = (_OWORD *)operator new();
  v5 = a2[9];
  v4[8] = a2[8];
  v4[9] = v5;
  *(_OWORD *)((char *)v4 + 156) = *(_OWORD *)((char *)a2 + 156);
  v6 = a2[5];
  v4[4] = a2[4];
  v4[5] = v6;
  v7 = a2[7];
  v4[6] = a2[6];
  v4[7] = v7;
  v8 = a2[1];
  *v4 = *a2;
  v4[1] = v8;
  v9 = a2[3];
  v4[2] = a2[2];
  v4[3] = v9;
  v10 = *a1;
  *a1 = (uint64_t)v4;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40401DF834);
  return a1;
}

uint64_t *AriSdk::Tlv<IBINetRatModeSetting_V1>::operator=<IBINetRatModeSetting_V1&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  uint64_t v5;

  v4 = (_OWORD *)operator new();
  *v4 = *a2;
  *(_OWORD *)((char *)v4 + 12) = *(_OWORD *)((char *)a2 + 12);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4027586B93);
  return a1;
}

uint64_t *AriSdk::Tlv<IBINetBandSettings_V1>::operator=<IBINetBandSettings_V1&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x2B8uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C405EE0DD82);
  return a1;
}

BOOL AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetConfigureNetworkModeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545325056;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK::ARI_IBINetConfigureNetworkModeRspCb_SDK(AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21010000u, 0);
  *(_QWORD *)result = &off_24C8E0E40;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21010000u, 0);
  *(_QWORD *)result = &off_24C8E0E40;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK::ARI_IBINetConfigureNetworkModeRspCb_SDK(AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0E40;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0E40;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK::~ARI_IBINetConfigureNetworkModeRspCb_SDK(AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E0E40;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK::~ARI_IBINetConfigureNetworkModeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK::pack(AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK::unpack(AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1AEAE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetConfigureNetworkModeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 553713664;
}

double AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK::ARI_IBINetNetworkModeChangeIndCb_SDK(AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21808000u, 0);
  *(_QWORD *)v1 = &off_24C8E0E78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21808000u, 0);
  *(_QWORD *)v1 = &off_24C8E0E78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK::ARI_IBINetNetworkModeChangeIndCb_SDK(AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0E78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0E78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK::~ARI_IBINetNetworkModeChangeIndCb_SDK(AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C8E0E78;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C405EE0DD82);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40A86A77D5);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4027586B93);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40401DF834);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4079BB23A2);
  v7 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4057C224CCLL);
  v8 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  v9 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40E91F0153);
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40A86A77D5);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK::~ARI_IBINetNetworkModeChangeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK::pack(AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x21CuLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 8uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x158uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x234uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 0xACuLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 0x1CuLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 0x14uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14
                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v14, 0x2B8uLL, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK::unpack(AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  void *v6;
  _QWORD *v7;
  _OWORD *v8;
  void *v9;
  _OWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  void *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;

  v24 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v24, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v24;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v23 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  *((_DWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 20, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  }
  v22 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x21CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 540, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40E91F0153);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetBandSettings>::operator=<IBINetBandSettings&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40E91F0153);
  }
  v21 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 8, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  v20 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v8[20] = 0u;
  *((_QWORD *)v8 + 42) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 344, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4057C224CCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetCdmaBandStatus>::operator=<IBINetCdmaBandStatus&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4057C224CCLL);
  }
  v19 = 0;
  v9 = (void *)operator new();
  bzero(v9, 0x234uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 564, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4079BB23A2);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetBandSettings3gppExt>::operator=<IBINetBandSettings3gppExt&,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4079BB23A2);
  }
  v18 = 0;
  v10 = (_OWORD *)operator new();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  v10[7] = 0u;
  v10[8] = 0u;
  v10[9] = 0u;
  *(_OWORD *)((char *)v10 + 156) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 172, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40401DF834);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetBandConfiguration>::operator=<IBINetBandConfiguration&,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40401DF834);
  }
  v17 = 0;
  v11 = (_QWORD *)operator new();
  v11[1] = 0;
  v11[2] = 0;
  *v11 = 0;
  *((_DWORD *)v11 + 6) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 28, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4027586B93);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetRatModeSetting_V1>::operator=<IBINetRatModeSetting_V1&,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4027586B93);
  }
  v16 = 0;
  v12 = (_QWORD *)operator new();
  *v12 = 0;
  v12[1] = 0;
  *((_DWORD *)v12 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 20, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 16, (uint64_t)v12);
    MEMORY[0x212BB9B60](v12, 0x1000C40A86A77D5);
  }
  v15 = 0;
  v13 = (void *)operator new();
  bzero(v13, 0x2B8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 696, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<IBINetBandSettings_V1>::operator=<IBINetBandSettings_V1&,void>((uint64_t *)this + 17, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C405EE0DD82);
  return v3;
}

void sub_20E1AF574(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C405EE0DD82);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNetworkModeChangeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 562069504;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK::ARI_IBINetRRCReleaseChangeReq_SDK(AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20848000u, 0);
  *(_QWORD *)result = &off_24C8E0EB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20848000u, 0);
  *(_QWORD *)result = &off_24C8E0EB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK::ARI_IBINetRRCReleaseChangeReq_SDK(AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0EB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0EB0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK::~ARI_IBINetRRCReleaseChangeReq_SDK(AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E0EB0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK::~ARI_IBINetRRCReleaseChangeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK::pack(AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK::unpack(AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1AF990(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRRCReleaseChangeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545554432;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK::ARI_IBINetRRCReleaseChangeRspCb_SDK(AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21048000u, 0);
  *(_QWORD *)result = &off_24C8E0EE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21048000u, 0);
  *(_QWORD *)result = &off_24C8E0EE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK::ARI_IBINetRRCReleaseChangeRspCb_SDK(AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0EE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0EE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK::~ARI_IBINetRRCReleaseChangeRspCb_SDK(AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E0EE8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK::~ARI_IBINetRRCReleaseChangeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK::pack(AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK::unpack(AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1AFCEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRRCReleaseChangeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 553943040;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK::ARI_IBINetRRCReleaseChangeInfoInd_SDK(AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21828000u, 0);
  *(_QWORD *)result = &off_24C8E0F20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21828000u, 0);
  *(_QWORD *)result = &off_24C8E0F20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK::ARI_IBINetRRCReleaseChangeInfoInd_SDK(AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0F20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0F20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK::~ARI_IBINetRRCReleaseChangeInfoInd_SDK(AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E0F20;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK::~ARI_IBINetRRCReleaseChangeInfoInd_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK::pack(AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK::unpack(AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1B019C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRRCReleaseChangeInfoInd_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 562200576;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK::ARI_IBINetRatGetServiceExtendedInfoReq_SDK(AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20838000u, 0);
  *(_QWORD *)result = &off_24C8E0F58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20838000u, 0);
  *(_QWORD *)result = &off_24C8E0F58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK::ARI_IBINetRatGetServiceExtendedInfoReq_SDK(AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0F58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0F58;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK::~ARI_IBINetRatGetServiceExtendedInfoReq_SDK(AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E0F58;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK::~ARI_IBINetRatGetServiceExtendedInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK::pack(AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK::unpack(AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1B042C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatGetServiceExtendedInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545488896;
}

double AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK(AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21038000u, 0);
  *(_QWORD *)v1 = &off_24C8E0F90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21038000u, 0);
  *(_QWORD *)v1 = &off_24C8E0F90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK(AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0F90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E0F90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK::~ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK(AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E0F90;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK::~ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK::pack(AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1B0938(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatGetServiceExtendedInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 553877504;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRatModeStatusReq_SDK::ARI_IBINetRatModeStatusReq_SDK(AriSdk::ARI_IBINetRatModeStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20818000u, 0);
  *(_QWORD *)result = &off_24C8E0FC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20818000u, 0);
  *(_QWORD *)result = &off_24C8E0FC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRatModeStatusReq_SDK::ARI_IBINetRatModeStatusReq_SDK(AriSdk::ARI_IBINetRatModeStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0FC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E0FC8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetRatModeStatusReq_SDK::~ARI_IBINetRatModeStatusReq_SDK(AriSdk::ARI_IBINetRatModeStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E0FC8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatModeStatusReq_SDK::~ARI_IBINetRatModeStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatModeStatusReq_SDK::pack(AriSdk::ARI_IBINetRatModeStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatModeStatusReq_SDK::unpack(AriSdk::ARI_IBINetRatModeStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1B0BD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatModeStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatModeStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545357824;
}

double AriSdk::ARI_IBINetRatModeStatusRspCb_SDK::ARI_IBINetRatModeStatusRspCb_SDK(AriSdk::ARI_IBINetRatModeStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21018000u, 0);
  *(_QWORD *)v1 = &off_24C8E1000;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21018000u, 0);
  *(_QWORD *)v1 = &off_24C8E1000;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  return result;
}

double AriSdk::ARI_IBINetRatModeStatusRspCb_SDK::ARI_IBINetRatModeStatusRspCb_SDK(AriSdk::ARI_IBINetRatModeStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1000;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1000;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  return result;
}

void AriSdk::ARI_IBINetRatModeStatusRspCb_SDK::~ARI_IBINetRatModeStatusRspCb_SDK(AriSdk::ARI_IBINetRatModeStatusRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E1000;
  v2 = (void *)*((_QWORD *)this + 19);
  if (v2)
  {
    *((_QWORD *)this + 20) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40451B5BE8);
  v4 = (void *)*((_QWORD *)this + 15);
  if (v4)
  {
    *((_QWORD *)this + 16) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = (void *)*((_QWORD *)this + 10);
  if (v7)
  {
    *((_QWORD *)this + 11) = v7;
    operator delete(v7);
  }
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C403E1C8BA9);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatModeStatusRspCb_SDK::~ARI_IBINetRatModeStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatModeStatusRspCb_SDK::pack(AriSdk::ARI_IBINetRatModeStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;
  const void *v14;
  _BYTE *v15;
  _BYTE *v16;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 8uLL, 0), !(_DWORD)result))
          {
            v12 = (_BYTE *)*((_QWORD *)this + 15);
            if (!v12
              || (v13 = (_BYTE *)*((_QWORD *)this + 16), v12 == v13)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, v13 - v12, 0), !(_DWORD)result))
            {
              v14 = (const void *)*((_QWORD *)this + 18);
              if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v14, 0x10uLL, 0), !(_DWORD)result))
              {
                v15 = (_BYTE *)*((_QWORD *)this + 19);
                if (!v15
                  || (v16 = (_BYTE *)*((_QWORD *)this + 20), v15 == v16)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v15, v16 - v15, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatModeStatusRspCb_SDK::unpack(AriSdk::ARI_IBINetRatModeStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  __n128 __p;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 12, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_DWORD *)operator new[]();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v18, &v17);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v16 = 0;
    __p = 0uLL;
    std::vector<IBIRat>::__init_with_size[abi:ne180100]<IBIRat*,IBIRat*>(&__p, v6, (uint64_t)&v6[v17 >> 2], v17 >> 2);
    AriSdk::TlvArray<IBIRat,3ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v6, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_QWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v11 = (_QWORD *)operator new[]();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v11, 8, &v18, &v17);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v16 = 0;
    __p = 0uLL;
    std::vector<IBIRat>::__init_with_size[abi:ne180100]<IBIRat*,IBIRat*>(&__p, v11, (uint64_t)v11 + 4 * (v17 >> 2), v17 >> 2);
    AriSdk::TlvArray<IBIRat,2ul>::operator=((std::vector<int> *)this + 5, &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_QWORD *)operator new();
  *v12 = 0;
  v12[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v12, 16, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>((uint64_t *)this + 18, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C40451B5BE8);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v13 = (_QWORD *)operator new[]();
  *v13 = 0;
  v13[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v13, 16, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    v16 = 0;
    __p = 0uLL;
    std::vector<IBIRat>::__init_with_size[abi:ne180100]<IBIRat*,IBIRat*>(&__p, v13, (uint64_t)v13 + 4 * (v17 >> 2), v17 >> 2);
    AriSdk::TlvArray<IBIRat,4ul>::operator=((std::vector<int> *)((char *)this + 152), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
  }
  MEMORY[0x212BB9B48](v13, 0x1000C8052888210);
  return v3;
}

void sub_20E1B1528(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C8052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_QWORD *)v4 = *(_QWORD *)a2;
  *(_DWORD *)(v4 + 8) = *(_DWORD *)(a2 + 8);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  return a1;
}

std::vector<int> *AriSdk::TlvArray<IBIRat,3ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xD)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 2, 3);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1B1720(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<IBIRat,2ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 9)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 2, 2);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1B17FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<IBIRat,4ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x11)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 2, 4);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1B18D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBINetRatModeStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatModeStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 553746432;
}

double AriSdk::ARI_IBINetRatModeStatusIndCb_SDK::ARI_IBINetRatModeStatusIndCb_SDK(AriSdk::ARI_IBINetRatModeStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21810000u, 0);
  *(_QWORD *)v1 = &off_24C8E1038;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_QWORD *)v1 + 24) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21810000u, 0);
  *(_QWORD *)v1 = &off_24C8E1038;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_QWORD *)v1 + 24) = 0;
  return result;
}

double AriSdk::ARI_IBINetRatModeStatusIndCb_SDK::ARI_IBINetRatModeStatusIndCb_SDK(AriSdk::ARI_IBINetRatModeStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1038;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_QWORD *)v3 + 24) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1038;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_QWORD *)v3 + 24) = 0;
  return result;
}

void AriSdk::ARI_IBINetRatModeStatusIndCb_SDK::~ARI_IBINetRatModeStatusIndCb_SDK(AriSdk::ARI_IBINetRatModeStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)this = &off_24C8E1038;
  v2 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = (void *)*((_QWORD *)this + 18);
  if (v6)
  {
    *((_QWORD *)this + 19) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40451B5BE8);
  v8 = (void *)*((_QWORD *)this + 14);
  if (v8)
  {
    *((_QWORD *)this + 15) = v8;
    operator delete(v8);
  }
  v9 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
  v10 = (void *)*((_QWORD *)this + 10);
  if (v10)
  {
    *((_QWORD *)this + 11) = v10;
    operator delete(v10);
  }
  v11 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C403E1C8BA9);
  v12 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatModeStatusIndCb_SDK::~ARI_IBINetRatModeStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatModeStatusIndCb_SDK::pack(AriSdk::ARI_IBINetRatModeStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 8uLL, 0), !(_DWORD)result))
        {
          v11 = (_BYTE *)*((_QWORD *)this + 14);
          if (!v11
            || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, v12 - v11, 0), !(_DWORD)result))
          {
            v13 = (const void *)*((_QWORD *)this + 17);
            if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v13, 0x10uLL, 0), !(_DWORD)result))
            {
              v14 = (_BYTE *)*((_QWORD *)this + 18);
              if (!v14
                || (v15 = (_BYTE *)*((_QWORD *)this + 19), v14 == v15)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v14, v15 - v14, 0), !(_DWORD)result))
              {
                v16 = (const void *)*((_QWORD *)this + 21);
                if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v16, 4uLL, 0), !(_DWORD)result))
                {
                  v17 = (const void *)*((_QWORD *)this + 22);
                  if (!v17 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v17, 4uLL, 0), !(_DWORD)result))
                  {
                    v18 = (const void *)*((_QWORD *)this + 23);
                    if (!v18 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v18, 4uLL, 0), !(_DWORD)result))
                    {
                      v19 = (const void *)*((_QWORD *)this + 24);
                      if (!v19 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v19, 4uLL, 0), !(_DWORD)result))
                      {
                        result = 0;
                        *a2 = (AriMsg *)*((_QWORD *)this + 6);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatModeStatusIndCb_SDK::unpack(AriSdk::ARI_IBINetRatModeStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  _QWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  __n128 __p;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_DWORD *)operator new[]();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 12, &v19, &v18);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<IBIRat>::__init_with_size[abi:ne180100]<IBIRat*,IBIRat*>(&__p, v6, (uint64_t)&v6[v18 >> 2], v18 >> 2);
    AriSdk::TlvArray<IBIRat,3ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v6, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 8, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_QWORD *)operator new[]();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 8, &v19, &v18);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<IBIRat>::__init_with_size[abi:ne180100]<IBIRat*,IBIRat*>(&__p, v8, (uint64_t)v8 + 4 * (v18 >> 2), v18 >> 2);
    AriSdk::TlvArray<IBIRat,2ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v8, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v9[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 16, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40451B5BE8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriMsgAttribParam>::operator=<AriMsgAttribParam&,void>((uint64_t *)this + 17, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40451B5BE8);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_QWORD *)operator new[]();
  *v10 = 0;
  v10[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 16, &v19, &v18);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<IBIRat>::__init_with_size[abi:ne180100]<IBIRat*,IBIRat*>(&__p, v10, (uint64_t)v10 + 4 * (v18 >> 2), v18 >> 2);
    AriSdk::TlvArray<IBIRat,4ul>::operator=((std::vector<int> *)this + 6, &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v10, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 24, v14);
  MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  return v3;
}

void sub_20E1B2470(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatModeStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatModeStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 562102272;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRatNRStatusReq_SDK::ARI_IBINetRatNRStatusReq_SDK(AriSdk::ARI_IBINetRatNRStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20840000u, 0);
  *(_QWORD *)result = &off_24C8E1070;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20840000u, 0);
  *(_QWORD *)result = &off_24C8E1070;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetRatNRStatusReq_SDK::ARI_IBINetRatNRStatusReq_SDK(AriSdk::ARI_IBINetRatNRStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1070;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1070;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetRatNRStatusReq_SDK::~ARI_IBINetRatNRStatusReq_SDK(AriSdk::ARI_IBINetRatNRStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E1070;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatNRStatusReq_SDK::~ARI_IBINetRatNRStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatNRStatusReq_SDK::pack(AriSdk::ARI_IBINetRatNRStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatNRStatusReq_SDK::unpack(AriSdk::ARI_IBINetRatNRStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1B279C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatNRStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatNRStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545521664;
}

double AriSdk::ARI_IBINetRatNRStatusRspCb_SDK::ARI_IBINetRatNRStatusRspCb_SDK(AriSdk::ARI_IBINetRatNRStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21040000u, 0);
  *(_QWORD *)v1 = &off_24C8E10A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21040000u, 0);
  *(_QWORD *)v1 = &off_24C8E10A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBINetRatNRStatusRspCb_SDK::ARI_IBINetRatNRStatusRspCb_SDK(AriSdk::ARI_IBINetRatNRStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E10A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E10A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBINetRatNRStatusRspCb_SDK::~ARI_IBINetRatNRStatusRspCb_SDK(AriSdk::ARI_IBINetRatNRStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E10A8;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatNRStatusRspCb_SDK::~ARI_IBINetRatNRStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatNRStatusRspCb_SDK::pack(AriSdk::ARI_IBINetRatNRStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatNRStatusRspCb_SDK::unpack(AriSdk::ARI_IBINetRatNRStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v11 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E1B2E54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatNRStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatNRStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 553910272;
}

double AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK::ARI_IBINetRatServiceExtendedIndCb_SDK(AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21820000u, 0);
  *(_QWORD *)v1 = &off_24C8E10E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x21820000u, 0);
  *(_QWORD *)v1 = &off_24C8E10E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK::ARI_IBINetRatServiceExtendedIndCb_SDK(AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E10E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E10E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK::~ARI_IBINetRatServiceExtendedIndCb_SDK(AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E10E0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK::~ARI_IBINetRatServiceExtendedIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK::pack(AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK::unpack(AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1B337C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatServiceExtendedIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 562167808;
}

double AriSdk::ARI_IBINetRatSwitchStatusReport_SDK::ARI_IBINetRatSwitchStatusReport_SDK(AriSdk::ARI_IBINetRatSwitchStatusReport_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x20828000u, 1);
  *(_QWORD *)v1 = &off_24C8E1118;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x20828000u, 1);
  *(_QWORD *)v1 = &off_24C8E1118;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetRatSwitchStatusReport_SDK::ARI_IBINetRatSwitchStatusReport_SDK(AriSdk::ARI_IBINetRatSwitchStatusReport_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1118;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1118;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetRatSwitchStatusReport_SDK::~ARI_IBINetRatSwitchStatusReport_SDK(AriSdk::ARI_IBINetRatSwitchStatusReport_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E1118;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRatSwitchStatusReport_SDK::~ARI_IBINetRatSwitchStatusReport_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRatSwitchStatusReport_SDK::pack(AriSdk::ARI_IBINetRatSwitchStatusReport_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRatSwitchStatusReport_SDK::unpack(AriSdk::ARI_IBINetRatSwitchStatusReport_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
  {
    v10 = (_DWORD *)operator new();
    *v10 = *v9;
    v11 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E1B390C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRatSwitchStatusReport_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRatSwitchStatusReport_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545423360;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK::ARI_IBINetVoimsCallRatSwitchReq_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20830000u, 0);
  *(_QWORD *)result = &off_24C8E1150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x20830000u, 0);
  *(_QWORD *)result = &off_24C8E1150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK::ARI_IBINetVoimsCallRatSwitchReq_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK::~ARI_IBINetVoimsCallRatSwitchReq_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1150;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK::~ARI_IBINetVoimsCallRatSwitchReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK::pack(AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK::unpack(AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B3CA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetVoimsCallRatSwitchReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 545456128;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK::ARI_IBINetVoimsCallRatSwitchRspCb_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21030000u, 0);
  *(_QWORD *)result = &off_24C8E1188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21030000u, 0);
  *(_QWORD *)result = &off_24C8E1188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK::ARI_IBINetVoimsCallRatSwitchRspCb_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK::~ARI_IBINetVoimsCallRatSwitchRspCb_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1188;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK::~ARI_IBINetVoimsCallRatSwitchRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK::pack(AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK::unpack(AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B3FF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetVoimsCallRatSwitchRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 553844736;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK::ARI_IBINetVoimsCallRatSwitchIndCb_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21818000u, 0);
  *(_QWORD *)result = &off_24C8E11C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x21818000u, 0);
  *(_QWORD *)result = &off_24C8E11C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK::ARI_IBINetVoimsCallRatSwitchIndCb_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E11C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E11C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK::~ARI_IBINetVoimsCallRatSwitchIndCb_SDK(AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E11C0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK::~ARI_IBINetVoimsCallRatSwitchIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK::pack(AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK::unpack(AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B4388(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetVoimsCallRatSwitchIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 562135040;
}

_QWORD *std::vector<IBIRat>::__init_with_size[abi:ne180100]<IBIRat*,IBIRat*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(4 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 4 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E1B444C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void $_0::~$_0($_0 *this)
{
  void *v2;

  v2 = *(void **)this;
  if (v2)
  {
    *((_QWORD *)this + 1) = v2;
    operator delete(v2);
  }
}

BOOL SdkGmidIsAllowedDuringStall(unsigned int a1)
{
  unsigned int v2;

  v2 = a1;
  return std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(ARIHOST_GMID_DISALLOWED_DURING_STALL, &v2) == 0;
}

BOOL SdkGmidIsAwdRequest(unsigned int a1)
{
  return a1 >> 26 == 51 && *(_BYTE *)(Ari::MsgDefById((Ari *)0x33, (a1 >> 15) & 0x3FF) + 8) == 0;
}

BOOL SdkGmidIsLowPriority(unsigned int a1)
{
  return a1 >> 26 == 51 && *(_BYTE *)(Ari::MsgDefById((Ari *)0x33, (a1 >> 15) & 0x3FF) + 8) == 0;
}

void SdkGmidListSensitiveLogging(uint64_t a1@<X8>)
{
  uint64_t i;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = dword_253D0AFB0;
  std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::__rehash<true>(a1, qword_253D0AF98);
  for (i = qword_253D0AFA0; i; i = *(_QWORD *)i)
    std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::__emplace_unique_key_args<unsigned int,unsigned int const&>(a1, *(_DWORD *)(i + 16), *(_DWORD *)(i + 16));
}

void sub_20E1B45AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

BOOL SdkGmidIsAllowedForPublicLogging(unsigned int a1)
{
  unsigned int v2;

  v2 = a1;
  return std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(ARI_GMID_APPROVED_FOR_PUBLIC_LOGGING, &v2) != 0;
}

BOOL SdkGmidIsSensitiveLogging(unsigned int a1)
{
  unsigned int v2;

  v2 = a1;
  return std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(&ARI_GMID_SENSITIVE_LOGGING, &v2) != 0;
}

uint64_t SdkMsgIsFilerInitiator(AriMsg *a1, uint64_t a2, unsigned int *a3)
{
  AriMsg *BufHeader;
  int v7;
  __int128 v8;
  uint64_t v9;
  const char *v10;
  const char *v11;
  void **v12;
  __int128 v13;
  uint64_t v14;
  const char *v15;
  const char *v16;
  void **v17;
  __int128 v18;
  uint64_t v19;
  const char *v20;
  const char *v21;
  void **v22;
  __int128 v23;
  uint64_t v24;
  const char *v25;
  const char *v26;
  void **v27;
  __int128 v28;
  uint64_t v29;
  const char *v30;
  const char *v31;
  void **v32;
  __int128 v33;
  uint64_t v34;
  const char *v35;
  const char *v36;
  void **v37;
  __int128 v38;
  uint64_t v39;
  const char *v40;
  const char *v41;
  void **v42;
  __int128 v43;
  uint64_t v44;
  const char *v45;
  const char *v46;
  void **v47;
  uint64_t v48;
  const char *v49;
  const char *v50;
  void **v51;
  uint64_t v52;
  unint64_t v54;
  uint64_t v55;
  unsigned int v56;
  unsigned int v57;
  const char *v59;
  const char *v60;
  void **v61;
  void *__p[2];
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  void *v68[2];
  char v69;
  unsigned int v70;

  *a3 = 0;
  BufHeader = AriMsg::GetBufHeader(a1, (const unsigned __int8 *)a2);
  if (BufHeader)
    v7 = (*(_DWORD *)((_BYTE *)BufHeader + 3) & 0x1F800 | ((unsigned __int16)*((_DWORD *)BufHeader + 2) >> 6)) << 15;
  else
    v7 = 0;
  v70 = v7;
  if (!std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(qword_253D0B058, &v70))return 0;
  if ((int)v70 > -116916225)
  {
    if ((int)v70 > -116850689)
    {
      if (v70 == -116850688)
      {
        *(_QWORD *)&v66 = 0xAAAAAAAAAAAAAAAALL;
        *(_QWORD *)&v43 = 0xAAAAAAAAAAAAAAAALL;
        *((_QWORD *)&v43 + 1) = 0xAAAAAAAAAAAAAAAALL;
        v64 = v43;
        v65 = v43;
        *(_OWORD *)__p = v43;
        v63 = v43;
        AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
        __p[0] = &off_24C91B3A8;
        *(_QWORD *)&v66 = 0;
        if (AriSdk::ARI_CsiSahGetCrashReportRspCb_SDK::unpack((AriSdk::ARI_CsiSahGetCrashReportRspCb_SDK *)__p)
          || *(_DWORD *)v66)
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
          v44 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
          v46 = "Unknown";
          if (v44 && *(_QWORD *)(v44 + 48))
            v46 = *(const char **)(v44 + 48);
          v47 = (void **)v68[0];
          if (v69 >= 0)
            v47 = v68;
          Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v45, v47, 257, v46);
          if (v69 < 0)
            operator delete(v68[0]);
          AriSdk::ARI_CsiSahGetCrashReportRspCb_SDK::~ARI_CsiSahGetCrashReportRspCb_SDK((AriSdk::ARI_CsiSahGetCrashReportRspCb_SDK *)__p);
          return 0;
        }
        *a3 = *(_DWORD *)(v66 + 4);
        AriSdk::ARI_CsiSahGetCrashReportRspCb_SDK::~ARI_CsiSahGetCrashReportRspCb_SDK((AriSdk::ARI_CsiSahGetCrashReportRspCb_SDK *)__p);
      }
      else
      {
        if (v70 != -116555776)
          goto LABEL_95;
        *(_QWORD *)&v23 = 0xAAAAAAAAAAAAAAAALL;
        *((_QWORD *)&v23 + 1) = 0xAAAAAAAAAAAAAAAALL;
        v65 = v23;
        v66 = v23;
        v63 = v23;
        v64 = v23;
        *(_OWORD *)__p = v23;
        AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
        v66 = 0uLL;
        __p[0] = &off_24C91A960;
        if (AriSdk::ARI_CsiBspNvmReadGroupBlockRespCb_SDK::unpack((AriSdk::ARI_CsiBspNvmReadGroupBlockRespCb_SDK *)__p)
          || !*(_DWORD *)v66)
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
          v24 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
          v26 = "Unknown";
          if (v24 && *(_QWORD *)(v24 + 48))
            v26 = *(const char **)(v24 + 48);
          v27 = (void **)v68[0];
          if (v69 >= 0)
            v27 = v68;
          Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v25, v27, 245, v26);
          if (v69 < 0)
            operator delete(v68[0]);
          AriSdk::ARI_CsiBspNvmReadGroupBlockRespCb_SDK::~ARI_CsiBspNvmReadGroupBlockRespCb_SDK((AriSdk::ARI_CsiBspNvmReadGroupBlockRespCb_SDK *)__p);
          return 0;
        }
        *a3 = **((_DWORD **)&v66 + 1);
        AriSdk::ARI_CsiBspNvmReadGroupBlockRespCb_SDK::~ARI_CsiBspNvmReadGroupBlockRespCb_SDK((AriSdk::ARI_CsiBspNvmReadGroupBlockRespCb_SDK *)__p);
      }
    }
    else if (v70 == -116916224)
    {
      *(_QWORD *)&v66 = 0xAAAAAAAAAAAAAAAALL;
      *(_QWORD *)&v33 = 0xAAAAAAAAAAAAAAAALL;
      *((_QWORD *)&v33 + 1) = 0xAAAAAAAAAAAAAAAALL;
      v64 = v33;
      v65 = v33;
      *(_OWORD *)__p = v33;
      v63 = v33;
      AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
      __p[0] = &off_24C91ABC8;
      *(_QWORD *)&v66 = 0;
      if (AriSdk::ARI_CsiCddGetDebugLogRspCb_SDK::unpack((AriSdk::ARI_CsiCddGetDebugLogRspCb_SDK *)__p)
        || *(_DWORD *)v66)
      {
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
        v34 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
        v36 = "Unknown";
        if (v34 && *(_QWORD *)(v34 + 48))
          v36 = *(const char **)(v34 + 48);
        v37 = (void **)v68[0];
        if (v69 >= 0)
          v37 = v68;
        Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v35, v37, 281, v36);
        if (v69 < 0)
          operator delete(v68[0]);
        AriSdk::ARI_CsiCddGetDebugLogRspCb_SDK::~ARI_CsiCddGetDebugLogRspCb_SDK((AriSdk::ARI_CsiCddGetDebugLogRspCb_SDK *)__p);
        return 0;
      }
      *a3 = *(_DWORD *)(v66 + 4);
      AriSdk::ARI_CsiCddGetDebugLogRspCb_SDK::~ARI_CsiCddGetDebugLogRspCb_SDK((AriSdk::ARI_CsiCddGetDebugLogRspCb_SDK *)__p);
    }
    else
    {
      if (v70 != -116883456)
        goto LABEL_95;
      *(_QWORD *)&v66 = 0xAAAAAAAAAAAAAAAALL;
      *(_QWORD *)&v13 = 0xAAAAAAAAAAAAAAAALL;
      *((_QWORD *)&v13 + 1) = 0xAAAAAAAAAAAAAAAALL;
      v64 = v13;
      v65 = v13;
      *(_OWORD *)__p = v13;
      v63 = v13;
      AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
      __p[0] = &off_24C91AC38;
      *(_QWORD *)&v66 = 0;
      if (AriSdk::ARI_CsiCddGetParamDumpRspCb_SDK::unpack((AriSdk::ARI_CsiCddGetParamDumpRspCb_SDK *)__p)
        || *(_DWORD *)v66)
      {
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
        v14 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
        v16 = "Unknown";
        if (v14 && *(_QWORD *)(v14 + 48))
          v16 = *(const char **)(v14 + 48);
        v17 = (void **)v68[0];
        if (v69 >= 0)
          v17 = v68;
        Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v15, v17, 269, v16);
        if (v69 < 0)
          operator delete(v68[0]);
        AriSdk::ARI_CsiCddGetParamDumpRspCb_SDK::~ARI_CsiCddGetParamDumpRspCb_SDK((AriSdk::ARI_CsiCddGetParamDumpRspCb_SDK *)__p);
        return 0;
      }
      *a3 = *(_DWORD *)(v66 + 4);
      AriSdk::ARI_CsiCddGetParamDumpRspCb_SDK::~ARI_CsiCddGetParamDumpRspCb_SDK((AriSdk::ARI_CsiCddGetParamDumpRspCb_SDK *)__p);
    }
    return 1;
  }
  if ((int)v70 <= -1996423169)
  {
    if (v70 != -2063532032)
    {
      if (v70 == -1996455936)
      {
        *(_QWORD *)&v8 = 0xAAAAAAAAAAAAAAAALL;
        *((_QWORD *)&v8 + 1) = 0xAAAAAAAAAAAAAAAALL;
        v66 = v8;
        v67 = v8;
        v64 = v8;
        v65 = v8;
        *(_OWORD *)__p = v8;
        v63 = v8;
        AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
        __p[0] = &off_24C911738;
        v66 = 0u;
        v67 = 0u;
        if (AriSdk::ARI_CsiIpcGetLogBufferListRsp_SDK::unpack((AriSdk::ARI_CsiIpcGetLogBufferListRsp_SDK *)__p)
          || *(_DWORD *)v66)
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
          v9 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
          v11 = "Unknown";
          if (v9 && *(_QWORD *)(v9 + 48))
            v11 = *(const char **)(v9 + 48);
          v12 = (void **)v68[0];
          if (v69 >= 0)
            v12 = v68;
          Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v10, v12, 318, v11);
          if (v69 < 0)
            operator delete(v68[0]);
        }
        else
        {
          AriSdk::TlvArray<CsiIceIpcLogBufferList,5ul>::assign<std::__wrap_iter<CsiIceIpcLogBufferList*>>(*((char **)&v66 + 1), (_BYTE *)v67);
          dword_253D0B050 = 0;
        }
        AriSdk::ARI_CsiIpcGetLogBufferListRsp_SDK::~ARI_CsiIpcGetLogBufferListRsp_SDK((AriSdk::ARI_CsiIpcGetLogBufferListRsp_SDK *)__p);
        return 0;
      }
LABEL_95:
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)__p);
      v48 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
      v50 = "Unknown";
      if (v48 && *(_QWORD *)(v48 + 48))
        v50 = *(const char **)(v48 + 48);
      v51 = (void **)__p[0];
      if ((SBYTE7(v63) & 0x80u) == 0)
        v51 = __p;
      Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it is not handled", v49, v51, 325, v50);
      if (SBYTE7(v63) < 0)
        operator delete(__p[0]);
      return 0;
    }
    *(_QWORD *)&v28 = 0xAAAAAAAAAAAAAAAALL;
    *((_QWORD *)&v28 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v65 = v28;
    v66 = v28;
    v63 = v28;
    v64 = v28;
    *(_OWORD *)__p = v28;
    AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
    v66 = 0uLL;
    __p[0] = &off_24C8E1528;
    if (AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::unpack((AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *)__p)
      || **((_DWORD **)&v66 + 1))
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
      v29 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
      v31 = "Unknown";
      if (v29 && *(_QWORD *)(v29 + 48))
        v31 = *(const char **)(v29 + 48);
      v32 = (void **)v68[0];
      if (v69 >= 0)
        v32 = v68;
      Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v30, v32, 232, v31);
      if (v69 < 0)
        operator delete(v68[0]);
      AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::~ARI_IBIPriWriteRspCb_V2_SDK((AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *)__p);
      return 0;
    }
    *a3 = 0;
    AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::~ARI_IBIPriWriteRspCb_V2_SDK((AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *)__p);
    return 1;
  }
  if (v70 != -1996423168)
  {
    if (v70 != -117145600)
      goto LABEL_95;
    *(_QWORD *)&v67 = 0xAAAAAAAAAAAAAAAALL;
    *(_QWORD *)&v18 = 0xAAAAAAAAAAAAAAAALL;
    *((_QWORD *)&v18 + 1) = 0xAAAAAAAAAAAAAAAALL;
    v65 = v18;
    v66 = v18;
    v63 = v18;
    v64 = v18;
    *(_OWORD *)__p = v18;
    AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
    __p[0] = &off_24C91AF80;
    v66 = 0uLL;
    *(_QWORD *)&v67 = 0;
    if (AriSdk::ARI_CsiFpUpdateHeaderData_SDK::unpack((AriSdk::ARI_CsiFpUpdateHeaderData_SDK *)__p)
      || *(_DWORD *)v66
      || *(_DWORD *)v67 < 0x48u)
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
      v19 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
      v21 = "Unknown";
      if (v19 && *(_QWORD *)(v19 + 48))
        v21 = *(const char **)(v19 + 48);
      v22 = (void **)v68[0];
      if (v69 >= 0)
        v22 = v68;
      Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v20, v22, 219, v21);
      if (v69 < 0)
        operator delete(v68[0]);
      AriSdk::ARI_CsiFpUpdateHeaderData_SDK::~ARI_CsiFpUpdateHeaderData_SDK((AriSdk::ARI_CsiFpUpdateHeaderData_SDK *)__p);
      return 0;
    }
    *a3 = *(_DWORD *)(*((_QWORD *)&v66 + 1) + 68);
    AriSdk::ARI_CsiFpUpdateHeaderData_SDK::~ARI_CsiFpUpdateHeaderData_SDK((AriSdk::ARI_CsiFpUpdateHeaderData_SDK *)__p);
    return 1;
  }
  *(_QWORD *)&v66 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v38 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v38 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v64 = v38;
  v65 = v38;
  *(_OWORD *)__p = v38;
  v63 = v38;
  AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)__p, (unsigned __int8 *)a1, a2);
  __p[0] = &off_24C9116C8;
  *(_QWORD *)&v66 = 0;
  if (AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK::unpack((AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK *)__p)
    || *(_DWORD *)v66)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
    v39 = Ari::MsgDefById((Ari *)(v70 >> 26), (v70 >> 15) & 0x3FF);
    v41 = "Unknown";
    if (v39 && *(_QWORD *)(v39 + 48))
      v41 = *(const char **)(v39 + 48);
    v42 = (void **)v68[0];
    if (v69 >= 0)
      v42 = v68;
    Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but it indicates a failure.  Skipping.", v40, v42, 300, v41);
    if (v69 < 0)
      operator delete(v68[0]);
    AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK::~ARI_CsiIpcGetLogBufferRsp_SDK((AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK *)__p);
    return 0;
  }
  v54 = 0xAAAAAAAAAAAAAAABLL * ((qword_253D0B040 - _MergedGlobals) >> 3);
  v55 = dword_253D0B050;
  if (v54 <= dword_253D0B050)
  {
LABEL_116:
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/sdk/ari_host_sdk_prop.cpp", "SdkMsgIsFilerInitiator", (uint64_t)v68);
    v59 = Ari::MsgNameById((Ari *)v70);
    v61 = (void **)v68[0];
    if (v69 >= 0)
      v61 = v68;
    Ari::Log((Ari *)8, "(%s:%d) Received filer initiator %s, but corresponding size info is not found.  Skipping.", v60, v61, 297, v59);
    if (v69 < 0)
      operator delete(v68[0]);
    v52 = 0;
  }
  else
  {
    v56 = dword_253D0B050 + 1;
    while (1)
    {
      v57 = *(_DWORD *)(_MergedGlobals + 24 * v55 + 8);
      if (v57)
      {
        if (*(_DWORD *)(_MergedGlobals + 24 * v55 + 20))
          break;
      }
      dword_253D0B050 = v56;
      v55 = v56;
      if (v54 <= v56++)
        goto LABEL_116;
    }
    dword_253D0B050 = v56;
    *a3 = v57;
    v52 = 1;
  }
  AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK::~ARI_CsiIpcGetLogBufferRsp_SDK((AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK *)__p);
  return v52;
}

void sub_20E1B502C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  uint64_t v18;

  if (*(char *)(v18 - 41) < 0)
    operator delete(*(void **)(v18 - 64));
  AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK::~ARI_CsiIpcGetLogBufferRsp_SDK((AriSdk::ARI_CsiIpcGetLogBufferRsp_SDK *)&__p);
  _Unwind_Resume(a1);
}

void AriSdk::TlvArray<CsiIceIpcLogBufferList,5ul>::assign<std::__wrap_iter<CsiIceIpcLogBufferList*>>(char *__src, _BYTE *a2)
{
  size_t v2;
  unint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  const char *v11;
  void **v12;
  char *v13;
  void *v14;
  char *v15;
  void *__p[2];
  char v17;

  v2 = a2 - __src;
  v3 = 0xAAAAAAAAAAAAAAABLL * ((a2 - __src) >> 3);
  if (v3 < 6)
  {
    v6 = qword_253D0B048;
    v7 = _MergedGlobals;
    if (0xAAAAAAAAAAAAAAABLL * ((qword_253D0B048 - _MergedGlobals) >> 3) >= v3)
    {
      if (0xAAAAAAAAAAAAAAABLL * ((qword_253D0B040 - _MergedGlobals) >> 3) < v3)
      {
        v13 = &__src[8 * ((qword_253D0B040 - _MergedGlobals) >> 3)];
        if (qword_253D0B040 != _MergedGlobals)
        {
          memmove((void *)_MergedGlobals, __src, 8 * ((qword_253D0B040 - _MergedGlobals) >> 3));
          v7 = qword_253D0B040;
        }
        v2 = a2 - v13;
        if (a2 == v13)
          goto LABEL_24;
        v14 = (void *)v7;
        v15 = v13;
        goto LABEL_23;
      }
    }
    else
    {
      if (_MergedGlobals)
      {
        qword_253D0B040 = _MergedGlobals;
        operator delete((void *)_MergedGlobals);
        v6 = 0;
        _MergedGlobals = 0;
        qword_253D0B040 = 0;
        qword_253D0B048 = 0;
      }
      v8 = 0xAAAAAAAAAAAAAAABLL * (v6 >> 3);
      v9 = 2 * v8;
      if (2 * v8 <= v3)
        v9 = v3;
      if (v8 >= 0x555555555555555)
        v10 = 0xAAAAAAAAAAAAAAALL;
      else
        v10 = v9;
      std::vector<CsiIceIpcLogBufferList>::__vallocate[abi:ne180100](&_MergedGlobals, v10);
      v7 = qword_253D0B040;
    }
    if (a2 == __src)
    {
LABEL_24:
      qword_253D0B040 = v7 + v2;
      return;
    }
    v14 = (void *)v7;
    v15 = __src;
LABEL_23:
    memmove(v14, v15, v2);
    goto LABEL_24;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "assign", (uint64_t)__p);
  if (v17 >= 0)
    v12 = __p;
  else
    v12 = (void **)__p[0];
  Ari::Log((Ari *)8, "(%s:%d) Range assignment too large(%p), got(%ld) max(%ld)", v11, v12, 385, &_MergedGlobals, v3, 5);
  if (v17 < 0)
    operator delete(__p[0]);
}

void sub_20E1B5378(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t SdkMsgIsFilerReadStream(AriMsg *a1, uint64_t a2, unsigned int *a3)
{
  AriMsg *BufHeader;
  __int128 v7;
  uint64_t v8;
  _OWORD v10[4];
  __int128 v11;
  unint64_t v12;

  *a3 = 0;
  BufHeader = AriMsg::GetBufHeader(a1, (const unsigned __int8 *)a2);
  if (!BufHeader
    || (*(_DWORD *)((_BYTE *)BufHeader + 3) & 0x1F800 | ((unsigned __int16)*((_DWORD *)BufHeader + 2) >> 6)) != 0x1F204)
  {
    return 0;
  }
  v12 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v7 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v10[3] = v7;
  v11 = v7;
  v10[1] = v7;
  v10[2] = v7;
  v10[0] = v7;
  AriSdk::MsgBase::MsgBase((AriSdk::MsgBase *)v10, (unsigned __int8 *)a1, a2);
  *(_QWORD *)&v10[0] = &off_24C91B1E8;
  v11 = 0uLL;
  v12 = 0;
  if (AriSdk::ARI_CsiIceFilerReadRspCb_SDK::unpack((AriSdk::ARI_CsiIceFilerReadRspCb_SDK *)v10)
    || *(_DWORD *)v11)
  {
    v8 = 0;
  }
  else
  {
    *a3 = **((_DWORD **)&v11 + 1);
    v8 = 1;
  }
  AriSdk::ARI_CsiIceFilerReadRspCb_SDK::~ARI_CsiIceFilerReadRspCb_SDK((AriSdk::ARI_CsiIceFilerReadRspCb_SDK *)v10);
  return v8;
}

void sub_20E1B5478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriSdk::ARI_CsiIceFilerReadRspCb_SDK::~ARI_CsiIceFilerReadRspCb_SDK((AriSdk::ARI_CsiIceFilerReadRspCb_SDK *)&a9);
  _Unwind_Resume(a1);
}

BOOL SdkGmidIsFileWriteTerminator(unsigned int a1)
{
  unsigned int v2;

  v2 = a1;
  return std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(ARI_FILER_WRITE_TERMINATOR_RESPONSES, &v2) != 0;
}

uint64_t std::unordered_set<unsigned int>::unordered_set(uint64_t a1, unsigned int *a2, uint64_t a3)
{
  uint64_t v5;

  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = 1065353216;
  if (a3)
  {
    v5 = 4 * a3;
    do
    {
      std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::__emplace_unique_key_args<unsigned int,unsigned int const&>(a1, *a2, *a2);
      ++a2;
      v5 -= 4;
    }
    while (v5);
  }
  return a1;
}

void sub_20E1B5520(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

uint64_t *std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(_QWORD *a1, unsigned int *a2)
{
  int8x8_t v2;
  unint64_t v3;
  uint8x8_t v4;
  unint64_t v5;
  uint64_t **v6;
  uint64_t *result;
  unint64_t v8;

  v2 = (int8x8_t)a1[1];
  if (!*(_QWORD *)&v2)
    return 0;
  v3 = *a2;
  v4 = (uint8x8_t)vcnt_s8(v2);
  v4.i16[0] = vaddlv_u8(v4);
  if (v4.u32[0] > 1uLL)
  {
    v5 = *a2;
    if (*(_QWORD *)&v2 <= v3)
      v5 = v3 % *(_QWORD *)&v2;
  }
  else
  {
    v5 = (v2.i32[0] - 1) & v3;
  }
  v6 = *(uint64_t ***)(*a1 + 8 * v5);
  if (!v6)
    return 0;
  for (result = *v6; result; result = (uint64_t *)*result)
  {
    v8 = result[1];
    if (v8 == v3)
    {
      if (*((_DWORD *)result + 4) == (_DWORD)v3)
        return result;
    }
    else
    {
      if (v4.u32[0] > 1uLL)
      {
        if (v8 >= *(_QWORD *)&v2)
          v8 %= *(_QWORD *)&v2;
      }
      else
      {
        v8 &= *(_QWORD *)&v2 - 1;
      }
      if (v8 != v5)
        return 0;
    }
  }
  return result;
}

char *std::vector<CsiIceIpcLogBufferList>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::vector<char>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<CsiIceIpcLogBufferList>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[24 * v4];
  return result;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<CsiIceIpcLogBufferList>>(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0xAAAAAAAAAAAAAABLL)
    std::__throw_bad_array_new_length[abi:ne180100]();
  return operator new(24 * a2);
}

uint64_t _GLOBAL__sub_I_ari_host_sdk_prop_cpp()
{
  __int128 v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  int v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v1 = xmmword_20E30EDA0;
  v2 = unk_20E30EDB0;
  v3 = xmmword_20E30EDC0;
  LODWORD(v4) = -124878848;
  std::unordered_set<unsigned int>::unordered_set((uint64_t)ARIHOST_GMID_DISALLOWED_DURING_STALL, (unsigned int *)&v1, 13);
  __cxa_atexit((void (*)(void *))std::unordered_set<unsigned int>::~unordered_set[abi:ne180100], ARIHOST_GMID_DISALLOWED_DURING_STALL, &dword_20E126000);
  v1 = xmmword_20E30EDD4;
  v2 = unk_20E30EDE4;
  v3 = xmmword_20E30EDF4;
  v4 = unk_20E30EE04;
  v5 = -242745344;
  std::unordered_set<unsigned int>::unordered_set((uint64_t)ARI_GMID_APPROVED_FOR_PUBLIC_LOGGING, (unsigned int *)&v1, 17);
  __cxa_atexit((void (*)(void *))std::unordered_set<unsigned int>::~unordered_set[abi:ne180100], ARI_GMID_APPROVED_FOR_PUBLIC_LOGGING, &dword_20E126000);
  v1 = xmmword_20E30EE18;
  LODWORD(v2) = 1149632512;
  std::unordered_set<unsigned int>::unordered_set((uint64_t)&ARI_GMID_SENSITIVE_LOGGING, (unsigned int *)&v1, 5);
  __cxa_atexit((void (*)(void *))std::unordered_set<unsigned int>::~unordered_set[abi:ne180100], &ARI_GMID_SENSITIVE_LOGGING, &dword_20E126000);
  v1 = xmmword_20E30EE2C;
  v2 = unk_20E30EE3C;
  std::unordered_set<unsigned int>::unordered_set((uint64_t)&unk_253D0B058, (unsigned int *)&v1, 8);
  __cxa_atexit((void (*)(void *))std::unordered_set<unsigned int>::~unordered_set[abi:ne180100], &unk_253D0B058, &dword_20E126000);
  LODWORD(v1) = -117276672;
  std::unordered_set<unsigned int>::unordered_set((uint64_t)ARI_FILER_WRITE_TERMINATOR_RESPONSES, (unsigned int *)&v1, 1);
  __cxa_atexit((void (*)(void *))std::unordered_set<unsigned int>::~unordered_set[abi:ne180100], ARI_FILER_WRITE_TERMINATOR_RESPONSES, &dword_20E126000);
  qword_253D0B040 = 0;
  qword_253D0B048 = 0;
  _MergedGlobals = 0;
  return __cxa_atexit((void (*)(void *))$_0::~$_0, &_MergedGlobals, &dword_20E126000);
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriWriteStatusIndCb_SDK::ARI_IBIPriWriteStatusIndCb_SDK(AriSdk::ARI_IBIPriWriteStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85808000, 0);
  *(_QWORD *)result = &off_24C8E13D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85808000, 0);
  *(_QWORD *)result = &off_24C8E13D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriWriteStatusIndCb_SDK::ARI_IBIPriWriteStatusIndCb_SDK(AriSdk::ARI_IBIPriWriteStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E13D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E13D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIPriWriteStatusIndCb_SDK::~ARI_IBIPriWriteStatusIndCb_SDK(AriSdk::ARI_IBIPriWriteStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E13D8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriWriteStatusIndCb_SDK::~ARI_IBIPriWriteStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriWriteStatusIndCb_SDK::pack(AriSdk::ARI_IBIPriWriteStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriWriteStatusIndCb_SDK::unpack(AriSdk::ARI_IBIPriWriteStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B5B64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriWriteStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriWriteStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2055176192;
}

double AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK::ARI_IBIPriWriteStatusIndCb_V2_SDK(AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x85818000, 0);
  *(_QWORD *)v1 = &off_24C8E1410;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x85818000, 0);
  *(_QWORD *)v1 = &off_24C8E1410;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK::ARI_IBIPriWriteStatusIndCb_V2_SDK(AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1410;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1410;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK::~ARI_IBIPriWriteStatusIndCb_V2_SDK(AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E1410;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK::~ARI_IBIPriWriteStatusIndCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK::pack(AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK::unpack(AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  unint64_t v17;
  BOOL v18;
  void *__p[2];
  char v20;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x410uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1040, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    if (v17 >= 0x68)
    {
      v9 = v17 / 0x68;
      v10 = 104 * (v17 / 0x68);
      v7 = (char *)operator new(v10);
      v8 = &v7[104 * v9];
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0x4EC4EC4EC4EC4EC5 * ((v8 - v7) >> 3);
    if (v12 < 0xB)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v20 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, v11, v12, 10);
      if (v20 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80ED882C02);
  return v3;
}

void sub_20E1B60BC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80ED882C02);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriWriteStatusIndCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2055110656;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK::ARI_IBIPriRefreshStatusIndCb_SDK(AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85810000, 0);
  *(_QWORD *)result = &off_24C8E1448;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85810000, 0);
  *(_QWORD *)result = &off_24C8E1448;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK::ARI_IBIPriRefreshStatusIndCb_SDK(AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1448;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1448;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK::~ARI_IBIPriRefreshStatusIndCb_SDK(AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1448;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK::~ARI_IBIPriRefreshStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK::pack(AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK::unpack(AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B6498(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriRefreshStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2055143424;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriRefreshReq_SDK::ARI_IBIPriRefreshReq_SDK(AriSdk::ARI_IBIPriRefreshReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x84818000, 0);
  *(_QWORD *)result = &off_24C8E1480;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x84818000, 0);
  *(_QWORD *)result = &off_24C8E1480;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriRefreshReq_SDK::ARI_IBIPriRefreshReq_SDK(AriSdk::ARI_IBIPriRefreshReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1480;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1480;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPriRefreshReq_SDK::~ARI_IBIPriRefreshReq_SDK(AriSdk::ARI_IBIPriRefreshReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E1480;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriRefreshReq_SDK::~ARI_IBIPriRefreshReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriRefreshReq_SDK::pack(AriSdk::ARI_IBIPriRefreshReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriRefreshReq_SDK::unpack(AriSdk::ARI_IBIPriRefreshReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1B671C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriRefreshReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriRefreshReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2071887872;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriRefreshRspCb_SDK::ARI_IBIPriRefreshRspCb_SDK(AriSdk::ARI_IBIPriRefreshRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85018000, 0);
  *(_QWORD *)result = &off_24C8E14B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85018000, 0);
  *(_QWORD *)result = &off_24C8E14B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriRefreshRspCb_SDK::ARI_IBIPriRefreshRspCb_SDK(AriSdk::ARI_IBIPriRefreshRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E14B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E14B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIPriRefreshRspCb_SDK::~ARI_IBIPriRefreshRspCb_SDK(AriSdk::ARI_IBIPriRefreshRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E14B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriRefreshRspCb_SDK::~ARI_IBIPriRefreshRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriRefreshRspCb_SDK::pack(AriSdk::ARI_IBIPriRefreshRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriRefreshRspCb_SDK::unpack(AriSdk::ARI_IBIPriRefreshRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B6A70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriRefreshRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriRefreshRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2063499264;
}

double AriSdk::ARI_IBIPriWriteReq_V2_SDK::ARI_IBIPriWriteReq_V2_SDK(AriSdk::ARI_IBIPriWriteReq_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x84810000, 0);
  *(_QWORD *)v1 = &off_24C8E14F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x84810000, 0);
  *(_QWORD *)v1 = &off_24C8E14F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIPriWriteReq_V2_SDK::ARI_IBIPriWriteReq_V2_SDK(AriSdk::ARI_IBIPriWriteReq_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E14F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E14F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIPriWriteReq_V2_SDK::~ARI_IBIPriWriteReq_V2_SDK(AriSdk::ARI_IBIPriWriteReq_V2_SDK *this)
{
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E14F0;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 14);
  if (v3)
  {
    *((_QWORD *)this + 15) = v3;
    operator delete(v3);
  }
  v4 = (void *)*((_QWORD *)this + 11);
  if (v4)
  {
    *((_QWORD *)this + 12) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriWriteReq_V2_SDK::~ARI_IBIPriWriteReq_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriWriteReq_V2_SDK::pack(AriSdk::ARI_IBIPriWriteReq_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (_BYTE *)*((_QWORD *)this + 14);
          if (!v10
            || (v11 = (_BYTE *)*((_QWORD *)this + 15), v10 == v11)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, v11 - v10, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 17);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriWriteReq_V2_SDK::unpack(AriSdk::ARI_IBIPriWriteReq_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  void *v7;
  _OWORD *v8;
  _DWORD *v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x400uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1024, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v7, (uint64_t)v7 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,1024ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_OWORD *)operator new[]();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  *((_DWORD *)v8 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 100, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,100ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E1B71B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriWriteReq_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriWriteReq_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2071920640;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::ARI_IBIPriWriteRspCb_V2_SDK(AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85010000, 0);
  *(_QWORD *)result = &off_24C8E1528;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85010000, 0);
  *(_QWORD *)result = &off_24C8E1528;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::ARI_IBIPriWriteRspCb_V2_SDK(AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1528;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1528;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::~ARI_IBIPriWriteRspCb_V2_SDK(AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1528;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::~ARI_IBIPriWriteRspCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::pack(AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::unpack(AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B7570(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriWriteRspCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriWriteRspCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2063532032;
}

double AriSdk::ARI_IBIPriWriteReq_V3_SDK::ARI_IBIPriWriteReq_V3_SDK(AriSdk::ARI_IBIPriWriteReq_V3_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x84820000, 0);
  *(_QWORD *)v1 = &off_24C8E1560;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x84820000, 0);
  *(_QWORD *)v1 = &off_24C8E1560;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIPriWriteReq_V3_SDK::ARI_IBIPriWriteReq_V3_SDK(AriSdk::ARI_IBIPriWriteReq_V3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1560;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1560;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIPriWriteReq_V3_SDK::~ARI_IBIPriWriteReq_V3_SDK(AriSdk::ARI_IBIPriWriteReq_V3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E1560;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 13);
  if (v4)
  {
    *((_QWORD *)this + 14) = v4;
    operator delete(v4);
  }
  v5 = (void *)*((_QWORD *)this + 10);
  if (v5)
  {
    *((_QWORD *)this + 11) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriWriteReq_V3_SDK::~ARI_IBIPriWriteReq_V3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriWriteReq_V3_SDK::pack(AriSdk::ARI_IBIPriWriteReq_V3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  _BYTE *v10;
  _BYTE *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (_BYTE *)*((_QWORD *)this + 13);
        if (!v10
          || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, v11 - v10, 0), !(_DWORD)result))
        {
          v12 = (const void *)*((_QWORD *)this + 16);
          if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 4uLL, 0), !(_DWORD)result))
          {
            v13 = (const void *)*((_QWORD *)this + 17);
            if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v13, 1uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriWriteReq_V3_SDK::unpack(AriSdk::ARI_IBIPriWriteReq_V3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  void *v6;
  _OWORD *v7;
  _DWORD *v8;
  _BYTE *v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x400uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1024, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,1024ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  *((_DWORD *)v7 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 100, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v7, (uint64_t)v7 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,100ul>::operator=((std::vector<int> *)((char *)this + 104), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  return v3;
}

void sub_20E1B7CB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriWriteReq_V3_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriWriteReq_V3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2071855104;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriWriteRspCb_V3_SDK::ARI_IBIPriWriteRspCb_V3_SDK(AriSdk::ARI_IBIPriWriteRspCb_V3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85020000, 0);
  *(_QWORD *)result = &off_24C8E1598;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x85020000, 0);
  *(_QWORD *)result = &off_24C8E1598;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPriWriteRspCb_V3_SDK::ARI_IBIPriWriteRspCb_V3_SDK(AriSdk::ARI_IBIPriWriteRspCb_V3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1598;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1598;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIPriWriteRspCb_V3_SDK::~ARI_IBIPriWriteRspCb_V3_SDK(AriSdk::ARI_IBIPriWriteRspCb_V3_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1598;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPriWriteRspCb_V3_SDK::~ARI_IBIPriWriteRspCb_V3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPriWriteRspCb_V3_SDK::pack(AriSdk::ARI_IBIPriWriteRspCb_V3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPriWriteRspCb_V3_SDK::unpack(AriSdk::ARI_IBIPriWriteRspCb_V3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B8078(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPriWriteRspCb_V3_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPriWriteRspCb_V3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -2063466496;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsCellTimeStampReq_SDK::ARI_IBIMsCellTimeStampReq_SDK(AriSdk::ARI_IBIMsCellTimeStampReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4C828000u, 0);
  *(_QWORD *)result = &off_24C8E16A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4C828000u, 0);
  *(_QWORD *)result = &off_24C8E16A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsCellTimeStampReq_SDK::ARI_IBIMsCellTimeStampReq_SDK(AriSdk::ARI_IBIMsCellTimeStampReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E16A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E16A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsCellTimeStampReq_SDK::~ARI_IBIMsCellTimeStampReq_SDK(AriSdk::ARI_IBIMsCellTimeStampReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E16A8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsCellTimeStampReq_SDK::~ARI_IBIMsCellTimeStampReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsCellTimeStampReq_SDK::pack(AriSdk::ARI_IBIMsCellTimeStampReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsCellTimeStampReq_SDK::unpack(AriSdk::ARI_IBIMsCellTimeStampReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B83D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsCellTimeStampReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsCellTimeStampReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283620864;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK::ARI_IBIMsCellTimeStampReqAckCb_SDK(AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D028000u, 0);
  *(_QWORD *)result = &off_24C8E16E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D028000u, 0);
  *(_QWORD *)result = &off_24C8E16E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK::ARI_IBIMsCellTimeStampReqAckCb_SDK(AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E16E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E16E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK::~ARI_IBIMsCellTimeStampReqAckCb_SDK(AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E16E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK::~ARI_IBIMsCellTimeStampReqAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK::pack(AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK::unpack(AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1B872C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsCellTimeStampReqAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1292009472;
}

double AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK::ARI_IBIMsCellTimeStampIndCb_SDK(AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8E0000u, 0);
  *(_QWORD *)v1 = &off_24C8E1718;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8E0000u, 0);
  *(_QWORD *)v1 = &off_24C8E1718;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK::ARI_IBIMsCellTimeStampIndCb_SDK(AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1718;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1718;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK::~ARI_IBIMsCellTimeStampIndCb_SDK(AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E1718;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4055933E4BLL);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK::~ARI_IBIMsCellTimeStampIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK::pack(AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x1CuLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK::unpack(AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = operator new();
  *(_QWORD *)(v7 + 8) = 0;
  *(_QWORD *)(v7 + 16) = 0;
  *(_QWORD *)v7 = 0;
  *(_DWORD *)(v7 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, (void *)v7, 28, &v11, 0);
  if (!(_DWORD)v3 && v11)
  {
    v8 = (_OWORD *)operator new();
    *v8 = *(_OWORD *)v7;
    *(_OWORD *)((char *)v8 + 12) = *(_OWORD *)(v7 + 12);
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4055933E4BLL);
  }
  MEMORY[0x212BB9B60](v7, 0x1000C4055933E4BLL);
  return v3;
}

void sub_20E1B8C80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4055933E4BLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsCellTimeStampIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1301151744;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK::ARI_IBIMsClsPositioningCapabilityReq_SDK(AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4C840000u, 0);
  *(_QWORD *)result = &off_24C8E1750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4C840000u, 0);
  *(_QWORD *)result = &off_24C8E1750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK::ARI_IBIMsClsPositioningCapabilityReq_SDK(AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK::~ARI_IBIMsClsPositioningCapabilityReq_SDK(AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1750;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C407D226C2BLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK::~ARI_IBIMsClsPositioningCapabilityReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK::pack(AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK::unpack(AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 16, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C407D226C2BLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C407D226C2BLL);
  return v3;
}

void sub_20E1B9028(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C407D226C2BLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsClsPositioningCapabilityReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283719168;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK::ARI_IBIMsClsPositioningCapabilityRspCb_SDK(AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D040000u, 0);
  *(_QWORD *)result = &off_24C8E1788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D040000u, 0);
  *(_QWORD *)result = &off_24C8E1788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK::ARI_IBIMsClsPositioningCapabilityRspCb_SDK(AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK::~ARI_IBIMsClsPositioningCapabilityRspCb_SDK(AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1788;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40B68A9B53);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK::~ARI_IBIMsClsPositioningCapabilityRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK::pack(AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK::unpack(AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 20, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_DWORD *)(v6 + 16) = v5[4];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40B68A9B53);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40B68A9B53);
  return v3;
}

void sub_20E1B93CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40B68A9B53);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsClsPositioningCapabilityRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1292107776;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK(AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D8A0000u, 0);
  *(_QWORD *)result = &off_24C8E17C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D8A0000u, 0);
  *(_QWORD *)result = &off_24C8E17C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK(AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E17C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E17C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK::~ARI_IBIMsLpAssistanceDataErrorIndCb_SDK(AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E17C0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C403E1C8BA9);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK::~ARI_IBIMsLpAssistanceDataErrorIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK::pack(AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1B984C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpAssistanceDataErrorIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300889600;
}

double AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK(AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8D0000u, 0);
  *(_QWORD *)v1 = &off_24C8E17F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8D0000u, 0);
  *(_QWORD *)v1 = &off_24C8E17F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK(AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E17F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E17F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK::~ARI_IBIMsLpDiscardedPosSessionIndCb_SDK(AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E17F8;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK::~ARI_IBIMsLpDiscardedPosSessionIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK::pack(AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v16 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v15 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, &v15, 0);
  if (!(_DWORD)v3 && v15)
  {
    v12 = (_DWORD *)operator new();
    *v12 = *v11;
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E1B9F98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpDiscardedPosSessionIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1301086208;
}

double AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D850000u, 0);
  *(_QWORD *)v1 = &off_24C8E1830;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D850000u, 0);
  *(_QWORD *)v1 = &off_24C8E1830;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1830;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1830;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK::~ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E1830;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4006B66553);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK::~ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x508uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x508uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1288, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4006B66553);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (void *)operator new();
    memcpy(v7, v6, 0x508uLL);
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4006B66553);
    MEMORY[0x212BB9B60](v6, 0x1000C4006B66553);
  }
  v15 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v14 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E1BA6C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssAcquisitionAssistanceIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300561920;
}

double AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D870000u, 0);
  *(_QWORD *)v1 = &off_24C8E1868;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D870000u, 0);
  *(_QWORD *)v1 = &off_24C8E1868;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1868;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1868;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK::~ARI_IBIMsLpGanssAddUtcModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E1868;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40832ED3FDLL);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK::~ARI_IBIMsLpGanssAddUtcModelIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x10uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v6[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 16, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40832ED3FDLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_OWORD *)operator new();
    *v7 = *(_OWORD *)v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C40832ED3FDLL);
    MEMORY[0x212BB9B60](v6, 0x1000C40832ED3FDLL);
  }
  v15 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v14 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E1BADF0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssAddUtcModelIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300692992;
}

double AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D888000u, 0);
  *(_QWORD *)v1 = &off_24C8E18A0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D888000u, 0);
  *(_QWORD *)v1 = &off_24C8E18A0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E18A0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E18A0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK::~ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)this = &off_24C8E18A0;
  v2 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  v12 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  v13 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  v14 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK::~ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 1uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            result = 0;
                            *a2 = (AriMsg *)*((_QWORD *)this + 6);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;

  v30 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v30, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v30;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v29 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v28 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v27 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v26 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v25 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 1, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v24 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v23 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 1, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v22 = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 1, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  v21 = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 1, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v20 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v19 = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v15, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  v18 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v16, 4, &v18, 0);
  if (!(_DWORD)v3 && v18)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v16);
  MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  return v3;
}

void sub_20E1BBAD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssAdditionalIonosphericModelIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300791296;
}

double AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D868000u, 0);
  *(_QWORD *)v1 = &off_24C8E18D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D868000u, 0);
  *(_QWORD *)v1 = &off_24C8E18D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E18D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E18D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK::~ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK(AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E18D8;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4050E77D38);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK::~ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0xC1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;

  v24 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v24, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v24;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v23 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v22 = 0;
  v6 = operator new();
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_BYTE *)(v6 + 192) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, (void *)v6, 193, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4050E77D38);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = operator new();
    v8 = *(_OWORD *)(v6 + 176);
    *(_OWORD *)(v7 + 160) = *(_OWORD *)(v6 + 160);
    *(_OWORD *)(v7 + 176) = v8;
    *(_BYTE *)(v7 + 192) = *(_BYTE *)(v6 + 192);
    v9 = *(_OWORD *)(v6 + 112);
    *(_OWORD *)(v7 + 96) = *(_OWORD *)(v6 + 96);
    *(_OWORD *)(v7 + 112) = v9;
    v10 = *(_OWORD *)(v6 + 144);
    *(_OWORD *)(v7 + 128) = *(_OWORD *)(v6 + 128);
    *(_OWORD *)(v7 + 144) = v10;
    v11 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(v7 + 32) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(v7 + 48) = v11;
    v12 = *(_OWORD *)(v6 + 80);
    *(_OWORD *)(v7 + 64) = *(_OWORD *)(v6 + 64);
    *(_OWORD *)(v7 + 80) = v12;
    v13 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)v7 = *(_OWORD *)v6;
    *(_OWORD *)(v7 + 16) = v13;
    v14 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v14)
      MEMORY[0x212BB9B60](v14, 0x1000C4050E77D38);
    MEMORY[0x212BB9B60](v6, 0x1000C4050E77D38);
  }
  v21 = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v15, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  v20 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v16, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  v19 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v17, 4, &v19, 0);
  if (!(_DWORD)v3 && v19)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v17);
  MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  return v3;
}

void sub_20E1BC28C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssAuxiliaryInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300660224;
}

double AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK(AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D858000u, 0);
  *(_QWORD *)v1 = &off_24C8E1910;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D858000u, 0);
  *(_QWORD *)v1 = &off_24C8E1910;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK(AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1910;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1910;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK::~ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK(AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E1910;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 11);
  if (v5)
  {
    *((_QWORD *)this + 12) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK::~ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _OWORD *v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  size_t v12;
  void **v13;
  const char *v14;
  void **v15;
  void *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  unint64_t v21;
  BOOL v22;
  void *__p[2];
  char v24;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v22 = 0;
  v21 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 128, &v22, &v21);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C80BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = v21;
    if (v21 >= 2)
    {
      v12 = v21 & 0xFFFFFFFFFFFFFFFELL;
      v9 = (char *)operator new(v21 & 0xFFFFFFFFFFFFFFFELL);
      v11 = &v9[2 * (v8 >> 1)];
      memcpy(v9, v7, v12);
      v10 = &v9[v12];
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0;
    }
    v13 = (void **)((char *)this + 88);
    if ((unint64_t)(v10 - v9) < 0x81)
    {
      v16 = *v13;
      if (*v13)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v13 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v9;
      *((_QWORD *)this + 12) = v10;
      *((_QWORD *)this + 13) = v11;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v24 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 88, (v10 - v9) >> 1, 64);
      if (v24 < 0)
        operator delete(__p[0]);
      if (v9)
        operator delete(v9);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C80BDFB0063);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v19, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v19);
  MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  return v3;
}

void sub_20E1BCB6C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssRealTimeIntegrityIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300594688;
}

double AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK(AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D878000u, 0);
  *(_QWORD *)v1 = &off_24C8E1948;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D878000u, 0);
  *(_QWORD *)v1 = &off_24C8E1948;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK(AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1948;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1948;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK::~ARI_IBIMsLpGanssReferenceLocationIndCb_SDK(AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)this = &off_24C8E1948;
  v2 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40BDFB0063);
  v14 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  v15 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  v16 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK::~ARI_IBIMsLpGanssReferenceLocationIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 1uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 1uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 1uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v18, 4uLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v19, 4uLL, 0), !(_DWORD)result))
                              {
                                result = 0;
                                *a2 = (AriMsg *)*((_QWORD *)this + 6);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _WORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;

  v34 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v34, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v34;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v33 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v32 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v32, 0);
  if ((_DWORD)v3 || !v32)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v31 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v30 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v30, 0);
  if ((_DWORD)v3 || !v30)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v29 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v28 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v27 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 1, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v26 = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 1, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  v25 = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 1, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v24 = 0;
  v14 = (_BYTE *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 1, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  }
  v23 = 0;
  v15 = (_BYTE *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v15, 1, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  }
  v22 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v16, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  v21 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v17, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  v20 = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v18, 4, &v20, 0);
  if (!(_DWORD)v3 && v20)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v18);
  MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  return v3;
}

void sub_20E1BDA5C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssReferenceLocationIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300725760;
}

double AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK(AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D880000u, 0);
  *(_QWORD *)v1 = &off_24C8E1980;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D880000u, 0);
  *(_QWORD *)v1 = &off_24C8E1980;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK(AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1980;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1980;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK::~ARI_IBIMsLpGanssReferenceTimeIndCb_SDK(AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)this = &off_24C8E1980;
  v2 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4035F102B6);
  v7 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  v13 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40BDFB0063);
  v14 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C40BDFB0063);
  v16 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK::~ARI_IBIMsLpGanssReferenceTimeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 0x2ECuLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 1uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v18, 4uLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v19, 4uLL, 0), !(_DWORD)result))
                              {
                                result = 0;
                                *a2 = (AriMsg *)*((_QWORD *)this + 6);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _DWORD *v15;
  void *v16;
  _BYTE *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;

  v36 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v36, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v36;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v35 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v35, 0);
  if ((_DWORD)v3 || !v35)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v34 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v34, 0);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v33 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v32 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, &v32, 0);
  if ((_DWORD)v3 || !v32)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v31 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (_DWORD *)operator new();
    *v10 = *v9;
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v30 = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v12, 1, &v30, 0);
  if ((_DWORD)v3 || !v30)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  v29 = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v13, 1, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v28 = 0;
  v14 = (_BYTE *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v14, 1, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  }
  v27 = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v15, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  v26 = 0;
  v16 = (void *)operator new();
  bzero(v16, 0x2ECuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v16, 748, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4035F102B6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBILpCellTimeAssistance>::operator=<IBILpCellTimeAssistance&,void>((uint64_t *)this + 18, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4035F102B6);
  }
  v25 = 0;
  v17 = (_BYTE *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v17, 1, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 19, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  }
  v24 = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v18, 4, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  v23 = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v19, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  v22 = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v20, 4, &v22, 0);
  if (!(_DWORD)v3 && v22)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v20);
  MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  return v3;
}

void sub_20E1BE988(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBILpCellTimeAssistance>::operator=<IBILpCellTimeAssistance&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x2ECuLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4035F102B6);
  return a1;
}

BOOL AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssReferenceTimeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300758528;
}

double AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK::ARI_IBIMsLpGanssTimeModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D860000u, 0);
  *(_QWORD *)v1 = &off_24C8E19B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D860000u, 0);
  *(_QWORD *)v1 = &off_24C8E19B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK::ARI_IBIMsLpGanssTimeModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E19B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E19B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK::~ARI_IBIMsLpGanssTimeModelIndCb_SDK(AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E19B8;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 11);
  if (v5)
  {
    *((_QWORD *)this + 12) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK::~ARI_IBIMsLpGanssTimeModelIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _OWORD *v7;
  char *v8;
  char *v9;
  unint64_t v10;
  size_t v11;
  void **v12;
  unint64_t v13;
  const char *v14;
  void **v15;
  void *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  unint64_t v21;
  BOOL v22;
  void *__p[2];
  char v24;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v22 = 0;
  v21 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v7[8] = 0u;
  v7[9] = 0u;
  v7[10] = 0u;
  v7[11] = 0u;
  v7[12] = 0u;
  v7[13] = 0u;
  v7[14] = 0u;
  v7[15] = 0u;
  v7[16] = 0u;
  v7[17] = 0u;
  v7[18] = 0u;
  v7[19] = 0u;
  v7[20] = 0u;
  v7[21] = 0u;
  *((_QWORD *)v7 + 44) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 360, &v22, &v21);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C80FD32E55BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v21 >= 0x18)
    {
      v10 = v21 / 0x18;
      v11 = 24 * (v21 / 0x18);
      v8 = (char *)operator new(v11);
      v9 = &v8[24 * v10];
      memcpy(v8, v7, v11);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
    v12 = (void **)((char *)this + 88);
    v13 = 0xAAAAAAAAAAAAAAABLL * ((v9 - v8) >> 3);
    if (v13 < 0x10)
    {
      v16 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v12 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v9;
      *((_QWORD *)this + 13) = v9;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v24 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 88, v13, 15);
      if (v24 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C80FD32E55BLL);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v19, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v19);
  MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  return v3;
}

void sub_20E1BF360(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGanssTimeModelIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300627456;
}

double AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK::ARI_IBIMsLpGlonassAlmanacIndCb_SDK(AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D890000u, 0);
  *(_QWORD *)v1 = &off_24C8E19F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D890000u, 0);
  *(_QWORD *)v1 = &off_24C8E19F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK::ARI_IBIMsLpGlonassAlmanacIndCb_SDK(AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E19F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E19F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK::~ARI_IBIMsLpGlonassAlmanacIndCb_SDK(AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E19F0;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 11);
  if (v5)
  {
    *((_QWORD *)this + 12) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4005A209FELL);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK::~ARI_IBIMsLpGlonassAlmanacIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  void *v9;
  unint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  size_t v14;
  void **v15;
  const char *v16;
  void **v17;
  void *v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  unint64_t v23;
  BOOL v24;
  void *__p[2];
  char v26;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4005A209FELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = operator new();
    *(_QWORD *)v6 = *(_QWORD *)v5;
    *(_DWORD *)(v6 + 8) = v5[2];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4005A209FELL);
    MEMORY[0x212BB9B60](v5, 0x1000C4005A209FELL);
  }
  LOBYTE(__p[0]) = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v24 = 0;
  v23 = 0xAAAAAAAAAAAAAAAALL;
  v9 = (void *)operator new[]();
  bzero(v9, 0x800uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 2048, &v24, &v23);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B48](v9, 0x1000C80B2132B81);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = v23;
    if (v23 >= 0x20)
    {
      v14 = v23 & 0xFFFFFFFFFFFFFFE0;
      v11 = (char *)operator new(v23 & 0xFFFFFFFFFFFFFFE0);
      v13 = &v11[32 * (v10 >> 5)];
      memcpy(v11, v9, v14);
      v12 = &v11[v14];
    }
    else
    {
      v11 = 0;
      v12 = 0;
      v13 = 0;
    }
    v15 = (void **)((char *)this + 88);
    if ((unint64_t)(v12 - v11) < 0x801)
    {
      v18 = *v15;
      if (*v15)
      {
        *((_QWORD *)this + 12) = v18;
        operator delete(v18);
        *v15 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v11;
      *((_QWORD *)this + 12) = v12;
      *((_QWORD *)this + 13) = v13;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v26 >= 0)
        v17 = __p;
      else
        v17 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v16, v17, 360, (char *)this + 88, (v12 - v11) >> 5, 64);
      if (v26 < 0)
        operator delete(__p[0]);
      if (v11)
        operator delete(v11);
    }
    MEMORY[0x212BB9B48](v9, 0x1000C80B2132B81);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v19, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v20, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v21 = (_DWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v21, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v21);
  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  return v3;
}

void sub_20E1BFCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGlonassAlmanacIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300824064;
}

double AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK(AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D898000u, 0);
  *(_QWORD *)v1 = &off_24C8E1A28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D898000u, 0);
  *(_QWORD *)v1 = &off_24C8E1A28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK(AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1A28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1A28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK::~ARI_IBIMsLpGlonassNavigationModelIndCb_SDK(AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E1A28;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 11);
  if (v5)
  {
    *((_QWORD *)this + 12) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK::~ARI_IBIMsLpGlonassNavigationModelIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  void *v7;
  char *v8;
  char *v9;
  unint64_t v10;
  size_t v11;
  void **v12;
  unint64_t v13;
  const char *v14;
  void **v15;
  void *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  unint64_t v21;
  BOOL v22;
  void *__p[2];
  char v24;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v22 = 0;
  v21 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 3584, &v22, &v21);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C80F9FDA978);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v21 >= 0x38)
    {
      v10 = v21 / 0x38;
      v11 = 56 * (v21 / 0x38);
      v8 = (char *)operator new(v11);
      v9 = &v8[56 * v10];
      memcpy(v8, v7, v11);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
    v12 = (void **)((char *)this + 88);
    v13 = 0x6DB6DB6DB6DB6DB7 * ((v9 - v8) >> 3);
    if (v13 < 0x41)
    {
      v16 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v12 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v9;
      *((_QWORD *)this + 13) = v9;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v24 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 88, v13, 64);
      if (v24 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C80F9FDA978);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v19, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v19);
  MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  return v3;
}

void sub_20E1C060C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGlonassNavigationModelIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300856832;
}

double AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK::ARI_IBIMsLpGnssAbortCnf_SDK(AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C820000u, 0);
  *(_QWORD *)v1 = &off_24C8E1A60;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C820000u, 0);
  *(_QWORD *)v1 = &off_24C8E1A60;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK::ARI_IBIMsLpGnssAbortCnf_SDK(AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1A60;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1A60;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK::~ARI_IBIMsLpGnssAbortCnf_SDK(AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E1A60;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK::~ARI_IBIMsLpGnssAbortCnf_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK::pack(AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK::unpack(AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1C0B98(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGnssAbortCnf_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283588096;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK::ARI_IBIMsLpGnssAbortCnfAckCb_SDK(AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D020000u, 0);
  *(_QWORD *)result = &off_24C8E1A98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D020000u, 0);
  *(_QWORD *)result = &off_24C8E1A98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK::ARI_IBIMsLpGnssAbortCnfAckCb_SDK(AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1A98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1A98;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK::~ARI_IBIMsLpGnssAbortCnfAckCb_SDK(AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E1A98;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK::~ARI_IBIMsLpGnssAbortCnfAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK::pack(AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK::unpack(AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 12, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1C0EFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGnssAbortCnfAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1291976704;
}

double AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK::ARI_IBIMsLpGnssAbortReqCb_SDK(AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8B0000u, 0);
  *(_QWORD *)v1 = &off_24C8E1AD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8B0000u, 0);
  *(_QWORD *)v1 = &off_24C8E1AD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK::ARI_IBIMsLpGnssAbortReqCb_SDK(AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1AD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1AD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK::~ARI_IBIMsLpGnssAbortReqCb_SDK(AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E1AD0;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK::~ARI_IBIMsLpGnssAbortReqCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK::pack(AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK::unpack(AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v16 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v15 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v14 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v12, 4, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  return v3;
}

void sub_20E1C16E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGnssAbortReqCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300955136;
}

double AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK::ARI_IBIMsLpGnssSuspendIndCb_SDK(AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8B8000u, 0);
  *(_QWORD *)v1 = &off_24C8E1B08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8B8000u, 0);
  *(_QWORD *)v1 = &off_24C8E1B08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK::ARI_IBIMsLpGnssSuspendIndCb_SDK(AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1B08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1B08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK::~ARI_IBIMsLpGnssSuspendIndCb_SDK(AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E1B08;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK::~ARI_IBIMsLpGnssSuspendIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1C1C20(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGnssSuspendIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300987904;
}

double AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK(AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D840000u, 0);
  *(_QWORD *)v1 = &off_24C8E1B40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D840000u, 0);
  *(_QWORD *)v1 = &off_24C8E1B40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK(AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1B40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1B40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK::~ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK(AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8E1B40;
  v2 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = (void *)*((_QWORD *)this + 12);
  if (v6)
  {
    *((_QWORD *)this + 13) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4035F102B6);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK::~ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x2ECuLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 1uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, 4uLL, 0), !(_DWORD)result))
                {
                  v14 = (const void *)*((_QWORD *)this + 18);
                  if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v14, 4uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  void *v7;
  _OWORD *v8;
  char *v9;
  char *v10;
  unint64_t v11;
  size_t v12;
  void **v13;
  unint64_t v14;
  const char *v15;
  void **v16;
  void *v17;
  _BYTE *v18;
  _DWORD *v19;
  _DWORD *v20;
  _DWORD *v21;
  unint64_t v23;
  BOOL v24;
  void *__p[2];
  char v26;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (void *)operator new();
  bzero(v7, 0x2ECuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 748, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4035F102B6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBILpCellTimeAssistance>::operator=<IBILpCellTimeAssistance&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4035F102B6);
  }
  v24 = 0;
  v23 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_OWORD *)operator new[]();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 320, &v24, &v23);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8019D9D20ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v23 >= 0x14)
    {
      v11 = v23 / 0x14;
      v12 = 20 * (v23 / 0x14);
      v9 = (char *)operator new(v12);
      v10 = &v9[20 * v11];
      memcpy(v9, v8, v12);
    }
    else
    {
      v9 = 0;
      v10 = 0;
    }
    v13 = (void **)((char *)this + 96);
    v14 = 0xCCCCCCCCCCCCCCCDLL * ((v10 - v9) >> 2);
    if (v14 < 0x11)
    {
      v17 = *v13;
      if (*v13)
      {
        *((_QWORD *)this + 13) = v17;
        operator delete(v17);
        *v13 = 0;
        *((_QWORD *)this + 13) = 0;
        *((_QWORD *)this + 14) = 0;
      }
      *((_QWORD *)this + 12) = v9;
      *((_QWORD *)this + 13) = v10;
      *((_QWORD *)this + 14) = v10;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v26 >= 0)
        v16 = __p;
      else
        v16 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v15, v16, 360, (char *)this + 96, v14, 16);
      if (v26 < 0)
        operator delete(__p[0]);
      if (v9)
        operator delete(v9);
    }
    MEMORY[0x212BB9B48](v8, 0x1000C8019D9D20ELL);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_BYTE *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v19, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v20, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v21 = (_DWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v21, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v21);
  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  return v3;
}

void sub_20E1C26B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsAcquisitionAssistanceIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300496384;
}

double AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK::ARI_IBIMsLpGpsAlmanacIndCb_SDK(AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D838000u, 0);
  *(_QWORD *)v1 = &off_24C8E1B78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D838000u, 0);
  *(_QWORD *)v1 = &off_24C8E1B78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK::ARI_IBIMsLpGpsAlmanacIndCb_SDK(AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1B78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1B78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK::~ARI_IBIMsLpGpsAlmanacIndCb_SDK(AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E1B78;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = (void *)*((_QWORD *)this + 11);
  if (v6)
  {
    *((_QWORD *)this + 12) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK::~ARI_IBIMsLpGpsAlmanacIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  void *v7;
  char *v8;
  char *v9;
  unint64_t v10;
  size_t v11;
  void **v12;
  unint64_t v13;
  const char *v14;
  void **v15;
  void *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  unint64_t v22;
  BOOL v23;
  void *__p[2];
  char v25;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v23 = 0;
  v22 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x600uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1536, &v23, &v22);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C80336CA99DLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v22 >= 0x18)
    {
      v10 = v22 / 0x18;
      v11 = 24 * (v22 / 0x18);
      v8 = (char *)operator new(v11);
      v9 = &v8[24 * v10];
      memcpy(v8, v7, v11);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
    v12 = (void **)((char *)this + 88);
    v13 = 0xAAAAAAAAAAAAAAABLL * ((v9 - v8) >> 3);
    if (v13 < 0x41)
    {
      v16 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v12 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v9;
      *((_QWORD *)this + 13) = v9;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v25 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 88, v13, 64);
      if (v25 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C80336CA99DLL);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v19, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v20, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v20);
  MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  return v3;
}

void sub_20E1C30D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsAlmanacIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300463616;
}

double AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK(AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D818000u, 0);
  *(_QWORD *)v1 = &off_24C8E1BB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D818000u, 0);
  *(_QWORD *)v1 = &off_24C8E1BB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK(AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1BB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1BB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK::~ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK(AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E1BB0;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 12);
  if (v5)
  {
    *((_QWORD *)this + 13) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK::~ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  _OWORD *v10;
  char *v11;
  char *v12;
  unint64_t v13;
  size_t v14;
  void **v15;
  unint64_t v16;
  const char *v17;
  void **v18;
  void *v19;
  _DWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  unint64_t v24;
  BOOL v25;
  void *__p[2];
  char v27;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v25 = 0;
  v24 = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 96, &v25, &v24);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C80274DC3F3);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v24 >= 6)
    {
      v13 = v24 / 6;
      v14 = 6 * (v24 / 6);
      v11 = (char *)operator new(v14);
      v12 = &v11[6 * v13];
      memcpy(v11, v10, v14);
    }
    else
    {
      v11 = 0;
      v12 = 0;
    }
    v15 = (void **)((char *)this + 96);
    v16 = 0xAAAAAAAAAAAAAAABLL * ((v12 - v11) >> 1);
    if (v16 < 0x11)
    {
      v19 = *v15;
      if (*v15)
      {
        *((_QWORD *)this + 13) = v19;
        operator delete(v19);
        *v15 = 0;
        *((_QWORD *)this + 13) = 0;
        *((_QWORD *)this + 14) = 0;
      }
      *((_QWORD *)this + 12) = v11;
      *((_QWORD *)this + 13) = v12;
      *((_QWORD *)this + 14) = v12;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v27 >= 0)
        v18 = __p;
      else
        v18 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v17, v18, 360, (char *)this + 96, v16, 16);
      if (v27 < 0)
        operator delete(__p[0]);
      if (v11)
        operator delete(v11);
    }
    MEMORY[0x212BB9B48](v10, 0x1000C80274DC3F3);
  }
  LOBYTE(__p[0]) = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v20, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v21 = (_DWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v21, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v22, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v22);
  MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  return v3;
}

void sub_20E1C3B18(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsDgpsCorrectionsIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300332544;
}

double AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D828000u, 0);
  *(_QWORD *)v1 = &off_24C8E1BE8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D828000u, 0);
  *(_QWORD *)v1 = &off_24C8E1BE8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1BE8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1BE8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK::~ARI_IBIMsLpGpsIonosphericModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)this = &off_24C8E1BE8;
  v2 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  v12 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  v13 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK::~ARI_IBIMsLpGpsIonosphericModelIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          result = 0;
                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;

  v28 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v28, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v28;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v27 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v26 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v25 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v24 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v23 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 1, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v22 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v21 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 1, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v20 = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  v19 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v18 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v17 = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v15, 4, &v17, 0);
  if (!(_DWORD)v3 && v17)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
  MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  return v3;
}

void sub_20E1C4774(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsIonosphericModelIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300398080;
}

double AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK::ARI_IBIMsLpGpsNavigationModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D820000u, 0);
  *(_QWORD *)v1 = &off_24C8E1C20;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D820000u, 0);
  *(_QWORD *)v1 = &off_24C8E1C20;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK::ARI_IBIMsLpGpsNavigationModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1C20;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1C20;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK::~ARI_IBIMsLpGpsNavigationModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E1C20;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 10);
  if (v5)
  {
    *((_QWORD *)this + 11) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK::~ARI_IBIMsLpGpsNavigationModelIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 4uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  void *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  unint64_t v20;
  BOOL v21;
  void *__p[2];
  char v23;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v21 = 0;
  v20 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x600uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1536, &v21, &v20);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C80675090DCLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v20 >= 0x60)
    {
      v9 = v20 / 0x60;
      v10 = 96 * (v20 / 0x60);
      v7 = (char *)operator new(v10);
      v8 = &v7[96 * v9];
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0xAAAAAAAAAAAAAAABLL * ((v8 - v7) >> 5);
    if (v12 < 0x11)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v23 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, (char *)this + 80, v12, 16);
      if (v23 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C80675090DCLL);
  }
  LOBYTE(__p[0]) = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v16, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v18);
  MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  return v3;
}

void sub_20E1C4F90(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsNavigationModelIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300365312;
}

double AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK(AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D848000u, 0);
  *(_QWORD *)v1 = &off_24C8E1C58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D848000u, 0);
  *(_QWORD *)v1 = &off_24C8E1C58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK(AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1C58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1C58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK::~ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK(AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E1C58;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = (void *)*((_QWORD *)this + 9);
  if (v6)
  {
    *((_QWORD *)this + 10) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK::~ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    v8 = !v6 || v6 == v7;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      v9 = (const void *)*((_QWORD *)this + 12);
      if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v9, 1uLL, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 4uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_QWORD *)operator new[]();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 16, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E1C56FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsRealTimeIntegrityIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300529152;
}

double AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK(AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D810000u, 0);
  *(_QWORD *)v1 = &off_24C8E1C90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D810000u, 0);
  *(_QWORD *)v1 = &off_24C8E1C90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK(AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1C90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1C90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK::~ARI_IBIMsLpGpsReferenceLocationIndCb_SDK(AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)this = &off_24C8E1C90;
  v2 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40BDFB0063);
  v14 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  v15 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  v16 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK::~ARI_IBIMsLpGpsReferenceLocationIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 1uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 1uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 1uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v18, 4uLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v19, 4uLL, 0), !(_DWORD)result))
                              {
                                result = 0;
                                *a2 = (AriMsg *)*((_QWORD *)this + 6);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _WORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;

  v34 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v34, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v34;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v33 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v32 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v32, 0);
  if ((_DWORD)v3 || !v32)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v31 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v30 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v30, 0);
  if ((_DWORD)v3 || !v30)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v29 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v28 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v27 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 1, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v26 = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 1, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  v25 = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 1, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v24 = 0;
  v14 = (_BYTE *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 1, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  }
  v23 = 0;
  v15 = (_BYTE *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v15, 1, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  }
  v22 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v16, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  v21 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v17, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  v20 = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v18, 4, &v20, 0);
  if (!(_DWORD)v3 && v20)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v18);
  MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  return v3;
}

void sub_20E1C65C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsReferenceLocationIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300299776;
}

double AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK(AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D808000u, 0);
  *(_QWORD *)v1 = &off_24C8E1CC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D808000u, 0);
  *(_QWORD *)v1 = &off_24C8E1CC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_QWORD *)v1 + 22) = 0;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK(AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1CC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1CC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_QWORD *)v3 + 22) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK::~ARI_IBIMsLpGpsReferenceTimeIndCb_SDK(AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)this = &off_24C8E1CC8;
  v2 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = (void *)*((_QWORD *)this + 16);
  if (v6)
  {
    *((_QWORD *)this + 17) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4035F102B6);
  v9 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  v12 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
  v13 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK::~ARI_IBIMsLpGpsReferenceTimeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 0x2ECuLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (_BYTE *)*((_QWORD *)this + 16);
                  if (!v13
                    || (v14 = (_BYTE *)*((_QWORD *)this + 17), v13 == v14)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, v14 - v13, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, 1uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, 4uLL, 0), !(_DWORD)result))
                      {
                        v17 = (const void *)*((_QWORD *)this + 21);
                        if (!v17
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v17, 4uLL, 0), !(_DWORD)result))
                        {
                          v18 = (const void *)*((_QWORD *)this + 22);
                          if (!v18
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v18, 4uLL, 0), !(_DWORD)result))
                          {
                            result = 0;
                            *a2 = (AriMsg *)*((_QWORD *)this + 6);
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _BYTE *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  void *v12;
  _BYTE *v13;
  _OWORD *v14;
  unint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  size_t v19;
  void **v20;
  const char *v21;
  void **v22;
  void *v23;
  _BYTE *v24;
  _DWORD *v25;
  _DWORD *v26;
  _DWORD *v27;
  unint64_t v29;
  BOOL v30;
  void *__p[2];
  char v32;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (_DWORD *)operator new();
    *v10 = *v9;
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v12 = (void *)operator new();
  bzero(v12, 0x2ECuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v12, 748, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4035F102B6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBILpCellTimeAssistance>::operator=<IBILpCellTimeAssistance&,void>((uint64_t *)this + 14, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4035F102B6);
  }
  LOBYTE(__p[0]) = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v13, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v30 = 0;
  v29 = 0xAAAAAAAAAAAAAAAALL;
  v14 = (_OWORD *)operator new[]();
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[6] = 0u;
  v14[7] = 0u;
  v14[8] = 0u;
  v14[9] = 0u;
  v14[10] = 0u;
  v14[11] = 0u;
  v14[12] = 0u;
  v14[13] = 0u;
  v14[14] = 0u;
  v14[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v14, 256, &v30, &v29);
  if ((_DWORD)v3 || !v30)
  {
    MEMORY[0x212BB9B48](v14, 0x1000C80A7BAB410);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v15 = v29;
    if (v29 >= 0x10)
    {
      v19 = v29 & 0xFFFFFFFFFFFFFFF0;
      v16 = (char *)operator new(v29 & 0xFFFFFFFFFFFFFFF0);
      v18 = &v16[16 * (v15 >> 4)];
      memcpy(v16, v14, v19);
      v17 = &v16[v19];
    }
    else
    {
      v16 = 0;
      v17 = 0;
      v18 = 0;
    }
    v20 = (void **)((char *)this + 128);
    if ((unint64_t)(v17 - v16) < 0x101)
    {
      v23 = *v20;
      if (*v20)
      {
        *((_QWORD *)this + 17) = v23;
        operator delete(v23);
        *v20 = 0;
        *((_QWORD *)this + 17) = 0;
        *((_QWORD *)this + 18) = 0;
      }
      *((_QWORD *)this + 16) = v16;
      *((_QWORD *)this + 17) = v17;
      *((_QWORD *)this + 18) = v18;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v32 >= 0)
        v22 = __p;
      else
        v22 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v21, v22, 360, (char *)this + 128, (v17 - v16) >> 4, 16);
      if (v32 < 0)
        operator delete(__p[0]);
      if (v16)
        operator delete(v16);
    }
    MEMORY[0x212BB9B48](v14, 0x1000C80A7BAB410);
  }
  LOBYTE(__p[0]) = 0;
  v24 = (_BYTE *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v24, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 19, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v25 = (_DWORD *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v25, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v26 = (_DWORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v26, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v27 = (_DWORD *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v27, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v27);
  MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  return v3;
}

void sub_20E1C7460(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsReferenceTimeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300267008;
}

double AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK::ARI_IBIMsLpGpsUtcModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D830000u, 0);
  *(_QWORD *)v1 = &off_24C8E1D00;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D830000u, 0);
  *(_QWORD *)v1 = &off_24C8E1D00;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK::ARI_IBIMsLpGpsUtcModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1D00;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1D00;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK::~ARI_IBIMsLpGpsUtcModelIndCb_SDK(AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)this = &off_24C8E1D00;
  v2 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK::~ARI_IBIMsLpGpsUtcModelIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK::pack(AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          result = 0;
                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;

  v28 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v28, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v28;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v27 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v26 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v25 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v24 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v23 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 1, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v22 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v21 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 1, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v20 = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  v19 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v18 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v17 = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v15, 4, &v17, 0);
  if (!(_DWORD)v3 && v17)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
  MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  return v3;
}

void sub_20E1C80FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpGpsUtcModelIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300430848;
}

double AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C818000u, 0);
  *(_QWORD *)v1 = &off_24C8E1D38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C818000u, 0);
  *(_QWORD *)v1 = &off_24C8E1D38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1D38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1D38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK::~ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E1D38;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408AE239F3);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40A066A46ELL);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C403E1C8BA9);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK::~ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0xCuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x26uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x72CuLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;

  v21 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v21, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v21;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v20 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v19 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v18 = 0;
  v7 = (_DWORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 12, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
  }
  v17 = 0;
  v8 = operator new();
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_QWORD *)(v8 + 30) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, (void *)v8, 38, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40A066A46ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = operator new();
    v10 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v8;
    *(_OWORD *)(v9 + 16) = v10;
    *(_QWORD *)(v9 + 30) = *(_QWORD *)(v8 + 30);
    v11 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40A066A46ELL);
    MEMORY[0x212BB9B60](v8, 0x1000C40A066A46ELL);
  }
  v16 = 0;
  v12 = (void *)operator new();
  bzero(v12, 0x72CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v12, 1836, &v16, 0);
  if (!(_DWORD)v3 && v16)
  {
    v13 = (void *)operator new();
    memcpy(v13, v12, 0x72CuLL);
    v14 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v13;
    if (v14)
      MEMORY[0x212BB9B60](v14, 0x1000C408AE239F3);
  }
  MEMORY[0x212BB9B60](v12, 0x1000C408AE239F3);
  return v3;
}

void sub_20E1C88B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408AE239F3);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283555328;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D018000u, 0);
  *(_QWORD *)result = &off_24C8E1D70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D018000u, 0);
  *(_QWORD *)result = &off_24C8E1D70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1D70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1D70;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E1D70;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1C8D54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionAssistanceRequestRspAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1291943936;
}

double AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C810000u, 0);
  *(_QWORD *)v1 = &off_24C8E1DA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C810000u, 0);
  *(_QWORD *)v1 = &off_24C8E1DA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1DA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1DA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK::~ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E1DA8;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C405950932ALL);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BE0CE13BLL);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C404D4A888DLL);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40490D5A1BLL);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK::~ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0xCuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x48uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x7CuLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 0xD0uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 0x1CuLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  _OWORD *v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  uint64_t v30;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;
  BOOL v37;
  BOOL v38;
  BOOL v39;

  v39 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v39, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v39;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v38 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v38, 0);
  if ((_DWORD)v3 || !v38)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v37 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v37, 0);
  if ((_DWORD)v3 || !v37)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v36 = 0;
  v7 = (_DWORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 12, &v36, 0);
  if ((_DWORD)v3 || !v36)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
  }
  v35 = 0;
  v8 = operator new();
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_QWORD *)(v8 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, (void *)v8, 72, &v35, 0);
  if ((_DWORD)v3 || !v35)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40490D5A1BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = operator new();
    v10 = *(_OWORD *)(v8 + 48);
    *(_OWORD *)(v9 + 32) = *(_OWORD *)(v8 + 32);
    *(_OWORD *)(v9 + 48) = v10;
    *(_QWORD *)(v9 + 64) = *(_QWORD *)(v8 + 64);
    v11 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v8;
    *(_OWORD *)(v9 + 16) = v11;
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C40490D5A1BLL);
    MEMORY[0x212BB9B60](v8, 0x1000C40490D5A1BLL);
  }
  v34 = 0;
  v13 = (_OWORD *)operator new();
  *v13 = 0u;
  v13[1] = 0u;
  v13[2] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[5] = 0u;
  v13[6] = 0u;
  *(_OWORD *)((char *)v13 + 108) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v13, 124, &v34, 0);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C404D4A888DLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = (_OWORD *)operator new();
    v15 = v13[5];
    v14[4] = v13[4];
    v14[5] = v15;
    v14[6] = v13[6];
    *(_OWORD *)((char *)v14 + 108) = *(_OWORD *)((char *)v13 + 108);
    v16 = v13[1];
    *v14 = *v13;
    v14[1] = v16;
    v17 = v13[3];
    v14[2] = v13[2];
    v14[3] = v17;
    v18 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v14;
    if (v18)
      MEMORY[0x212BB9B60](v18, 0x1000C404D4A888DLL);
    MEMORY[0x212BB9B60](v13, 0x1000C404D4A888DLL);
  }
  v33 = 0;
  v19 = (_OWORD *)operator new();
  *v19 = 0u;
  v19[1] = 0u;
  v19[2] = 0u;
  v19[3] = 0u;
  v19[4] = 0u;
  v19[5] = 0u;
  v19[6] = 0u;
  v19[7] = 0u;
  v19[8] = 0u;
  v19[9] = 0u;
  v19[10] = 0u;
  v19[11] = 0u;
  v19[12] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v19, 208, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C40BE0CE13BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v20 = (_OWORD *)operator new();
    v21 = v19[11];
    v20[10] = v19[10];
    v20[11] = v21;
    v20[12] = v19[12];
    v22 = v19[7];
    v20[6] = v19[6];
    v20[7] = v22;
    v23 = v19[9];
    v20[8] = v19[8];
    v20[9] = v23;
    v24 = v19[3];
    v20[2] = v19[2];
    v20[3] = v24;
    v25 = v19[5];
    v20[4] = v19[4];
    v20[5] = v25;
    v26 = v19[1];
    *v20 = *v19;
    v20[1] = v26;
    v27 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v20;
    if (v27)
      MEMORY[0x212BB9B60](v27, 0x1000C40BE0CE13BLL);
    MEMORY[0x212BB9B60](v19, 0x1000C40BE0CE13BLL);
  }
  v32 = 0;
  v28 = operator new();
  *(_QWORD *)(v28 + 8) = 0;
  *(_QWORD *)(v28 + 16) = 0;
  *(_QWORD *)v28 = 0;
  *(_DWORD *)(v28 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, (void *)v28, 28, &v32, 0);
  if (!(_DWORD)v3 && v32)
  {
    v29 = (_OWORD *)operator new();
    *v29 = *(_OWORD *)v28;
    *(_OWORD *)((char *)v29 + 12) = *(_OWORD *)(v28 + 12);
    v30 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v29;
    if (v30)
      MEMORY[0x212BB9B60](v30, 0x1000C405950932ALL);
  }
  MEMORY[0x212BB9B60](v28, 0x1000C405950932ALL);
  return v3;
}

void sub_20E1C9768(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C405950932ALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283522560;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D010000u, 0);
  *(_QWORD *)result = &off_24C8E1DE0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D010000u, 0);
  *(_QWORD *)result = &off_24C8E1DE0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1DE0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1DE0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E1DE0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1C9C30(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionLocationInfoRspAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1291911168;
}

double AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C800000u, 0);
  *(_QWORD *)v1 = &off_24C8E1E18;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C800000u, 0);
  *(_QWORD *)v1 = &off_24C8E1E18;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1E18;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1E18;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E1E18;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4034AA302DLL);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40764655BELL);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0xCuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x1C8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x67CuLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  _OWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 12, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
  }
  v18 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v8[20] = 0u;
  v8[21] = 0u;
  v8[22] = 0u;
  v8[23] = 0u;
  v8[24] = 0u;
  v8[25] = 0u;
  v8[26] = 0u;
  v8[27] = 0u;
  *((_QWORD *)v8 + 56) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 456, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40764655BELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBILpGpsMeasurements>::operator=<IBILpGpsMeasurements&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40764655BELL);
  }
  v17 = 0;
  v9 = (void *)operator new();
  bzero(v9, 0x67CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1660, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4034AA302DLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (void *)operator new();
    memcpy(v10, v9, 0x67CuLL);
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4034AA302DLL);
    MEMORY[0x212BB9B60](v9, 0x1000C4034AA302DLL);
  }
  v16 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v12, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v15 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v13, 4, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E1CA530(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBILpGpsMeasurements>::operator=<IBILpGpsMeasurements&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x1C8uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40764655BELL);
  return a1;
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283457024;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D000000u, 0);
  *(_QWORD *)result = &off_24C8E1E50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D000000u, 0);
  *(_QWORD *)result = &off_24C8E1E50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1E50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1E50;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E1E50;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1CAA4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsRspAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1291845632;
}

double AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C838000u, 0);
  *(_QWORD *)v1 = &off_24C8E1E88;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C838000u, 0);
  *(_QWORD *)v1 = &off_24C8E1E88;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1E88;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1E88;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E1E88;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40E36397FFLL);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40764655BELL);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0xCuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x1C8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x30uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  _OWORD *v8;
  _OWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 12, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
  }
  v18 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v8[20] = 0u;
  v8[21] = 0u;
  v8[22] = 0u;
  v8[23] = 0u;
  v8[24] = 0u;
  v8[25] = 0u;
  v8[26] = 0u;
  v8[27] = 0u;
  *((_QWORD *)v8 + 56) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 456, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40764655BELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBILpGpsMeasurements>::operator=<IBILpGpsMeasurements&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40764655BELL);
  }
  v17 = 0;
  v9 = (_OWORD *)operator new();
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 48, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40E36397FFLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBILpIs801LocationInd>::operator=<IBILpIs801LocationInd&,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40E36397FFLL);
  }
  v16 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (_DWORD *)operator new();
    *v11 = *v10;
    v12 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v15 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v13, 4, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E1CB354(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBILpIs801LocationInd>::operator=<IBILpIs801LocationInd&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  __int128 v5;
  uint64_t v6;

  v4 = (_OWORD *)operator new();
  v5 = a2[1];
  *v4 = *a2;
  v4[1] = v5;
  v4[2] = a2[2];
  v6 = *a1;
  *a1 = (uint64_t)v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40E36397FFLL);
  return a1;
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283686400;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D038000u, 0);
  *(_QWORD *)result = &off_24C8E1EC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D038000u, 0);
  *(_QWORD *)result = &off_24C8E1EC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1EC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1EC0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E1EC0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1CB878(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsAndEstimateRspAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1292075008;
}

double AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C808000u, 0);
  *(_QWORD *)v1 = &off_24C8E1EF8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C808000u, 0);
  *(_QWORD *)v1 = &off_24C8E1EF8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1EF8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1EF8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E1EF8;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40A0C2120FLL);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40764655BELL);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0xCuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x1C8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0xC98uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  _OWORD *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 12, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C403E1C8BA9);
  }
  v18 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  v8[18] = 0u;
  v8[19] = 0u;
  v8[20] = 0u;
  v8[21] = 0u;
  v8[22] = 0u;
  v8[23] = 0u;
  v8[24] = 0u;
  v8[25] = 0u;
  v8[26] = 0u;
  v8[27] = 0u;
  *((_QWORD *)v8 + 56) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 456, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40764655BELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBILpGpsMeasurements>::operator=<IBILpGpsMeasurements&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40764655BELL);
  }
  v17 = 0;
  v9 = (void *)operator new();
  bzero(v9, 0xC98uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 3224, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40A0C2120FLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (void *)operator new();
    memcpy(v10, v9, 0xC98uLL);
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40A0C2120FLL);
    MEMORY[0x212BB9B60](v9, 0x1000C40A0C2120FLL);
  }
  v16 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v12, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v15 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v13, 4, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E1CC184(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283489792;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D008000u, 0);
  *(_QWORD *)result = &off_24C8E1F30;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D008000u, 0);
  *(_QWORD *)result = &off_24C8E1F30;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1F30;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E1F30;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E1F30;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK::~ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1CC638(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionMeasurementsShortRspAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1291878400;
}

double AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK::ARI_IBIMsLpMeasurePositionReqCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D800000u, 0);
  *(_QWORD *)v1 = &off_24C8E1F68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D800000u, 0);
  *(_QWORD *)v1 = &off_24C8E1F68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK::ARI_IBIMsLpMeasurePositionReqCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1F68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1F68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK::~ARI_IBIMsLpMeasurePositionReqCb_SDK(AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)this = &off_24C8E1F68;
  v2 = *((_QWORD *)this + 31);
  *((_QWORD *)this + 31) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 30);
  *((_QWORD *)this + 30) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 29);
  *((_QWORD *)this + 29) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  v12 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  v16 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
  v17 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  v18 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v18)
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  v19 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v19)
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  v20 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  v21 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C4077774924);
  v22 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C40BDFB0063);
  v23 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  v24 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C40BDFB0063);
  v25 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK::~ARI_IBIMsLpMeasurePositionReqCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK::pack(AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  const void *v26;
  const void *v27;
  const void *v28;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 1uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 1uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v18, 4uLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v19, 2uLL, 0), !(_DWORD)result))
                              {
                                v20 = (const void *)*((_QWORD *)this + 23);
                                if (!v20
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v20, 4uLL, 0), !(_DWORD)result))
                                {
                                  v21 = (const void *)*((_QWORD *)this + 24);
                                  if (!v21
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v21, 4uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v22 = (const void *)*((_QWORD *)this + 25);
                                    if (!v22
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v22, 4uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v23 = (const void *)*((_QWORD *)this + 26);
                                      if (!v23
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v23, 4uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v24 = (const void *)*((_QWORD *)this + 27);
                                        if (!v24
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v24, 1uLL, 0),
                                              !(_DWORD)result))
                                        {
                                          v25 = (const void *)*((_QWORD *)this + 28);
                                          if (!v25
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v25, 1uLL, 0),
                                                !(_DWORD)result))
                                          {
                                            v26 = (const void *)*((_QWORD *)this + 29);
                                            if (!v26
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v26, 1uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v27 = (const void *)*((_QWORD *)this + 30);
                                              if (!v27
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v27, 4uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v28 = (const void *)*((_QWORD *)this + 31);
                                                if (!v28
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v28, 4uLL, 0),
                                                      !(_DWORD)result))
                                                {
                                                  result = 0;
                                                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK::unpack(AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _WORD *v9;
  _BYTE *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _WORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  _DWORD *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _DWORD *v28;
  _DWORD *v29;
  BOOL v31;

  v31 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v31, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v31;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v31 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v31 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v31 = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 2, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  v31 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v31 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v31 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v12, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v31 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v13, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v31 = 0;
  v14 = (_BYTE *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v14, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  }
  v31 = 0;
  v15 = (_BYTE *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v15, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  }
  v31 = 0;
  v16 = (_BYTE *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v16, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 18, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
  }
  v31 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v17, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  v31 = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v18, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  v31 = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v19, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  v31 = 0;
  v20 = (_WORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v20, 2, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v20, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 22, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C40BDFB0063);
  }
  v31 = 0;
  v21 = (_DWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v21, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  }
  v31 = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v22, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 24, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  }
  v31 = 0;
  v23 = (_DWORD *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v23, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 25, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  }
  v31 = 0;
  v24 = (_DWORD *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v24, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 26, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  }
  v31 = 0;
  v25 = (_BYTE *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v25, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 27, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
  }
  v31 = 0;
  v26 = (_BYTE *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v26, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 28, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4077774924);
  }
  v31 = 0;
  v27 = (_BYTE *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v27, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v27, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 29, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C4077774924);
  }
  v31 = 0;
  v28 = (_DWORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v28, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 30, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  }
  v31 = 0;
  v29 = (_DWORD *)operator new();
  *v29 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v29, 4, &v31, 0);
  if (!(_DWORD)v3 && v31)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 31, v29);
  MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  return v3;
}

void sub_20E1CDC74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpMeasurePositionReqCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300234240;
}

double AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK(AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8E8000u, 0);
  *(_QWORD *)v1 = &off_24C8E1FA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8E8000u, 0);
  *(_QWORD *)v1 = &off_24C8E1FA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK(AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1FA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1FA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK::~ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK(AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E1FA0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40E36397FFLL);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C403E1C8BA9);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK::~ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK::pack(AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x30uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v9 = (_OWORD *)operator new();
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 48, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<IBILpIs801LocationInd>::operator=<IBILpIs801LocationInd&,void>((uint64_t *)this + 11, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C40E36397FFLL);
  return v3;
}

void sub_20E1CE298(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40E36397FFLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpPosIs801GpsLocationIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1301184512;
}

double AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK(AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8D8000u, 0);
  *(_QWORD *)v1 = &off_24C8E1FD8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8D8000u, 0);
  *(_QWORD *)v1 = &off_24C8E1FD8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK(AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1FD8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E1FD8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK::~ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK(AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E1FD8;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C403E1C8BA9);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK::~ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK::pack(AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK::unpack(AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1CE818(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpPosLocationRequestStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1301118976;
}

double AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK(AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8A8000u, 0);
  *(_QWORD *)v1 = &off_24C8E2010;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8A8000u, 0);
  *(_QWORD *)v1 = &off_24C8E2010;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK(AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2010;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2010;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK::~ARI_IBIMsLpResetGnssAssistanceDataCb_SDK(AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E2010;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK::~ARI_IBIMsLpResetGnssAssistanceDataCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK::pack(AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK::unpack(AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1CED4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpResetGnssAssistanceDataCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1300922368;
}

double AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK::ARI_IBIMsLpWlanMeasurementRsp_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C830000u, 0);
  *(_QWORD *)v1 = &off_24C8E2048;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4C830000u, 0);
  *(_QWORD *)v1 = &off_24C8E2048;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK::ARI_IBIMsLpWlanMeasurementRsp_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2048;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2048;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK::~ARI_IBIMsLpWlanMeasurementRsp_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E2048;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A5CF7B87);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C403E1C8BA9);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK::~ARI_IBIMsLpWlanMeasurementRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK::pack(AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x418uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK::unpack(AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  }
  v11 = 0;
  v7 = (void *)operator new();
  bzero(v7, 0x418uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1048, &v11, 0);
  if (!(_DWORD)v3 && v11)
  {
    v8 = (void *)operator new();
    memcpy(v8, v7, 0x418uLL);
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C40A5CF7B87);
  }
  MEMORY[0x212BB9B60](v7, 0x1000C40A5CF7B87);
  return v3;
}

void sub_20E1CF2AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A5CF7B87);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpWlanMeasurementRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1283653632;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D030000u, 0);
  *(_QWORD *)result = &off_24C8E2080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x4D030000u, 0);
  *(_QWORD *)result = &off_24C8E2080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK::~ARI_IBIMsLpWlanMeasurementRspAckCb_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E2080;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK::~ARI_IBIMsLpWlanMeasurementRspAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK::pack(AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK::unpack(AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1CF714(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpWlanMeasurementRspAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1292042240;
}

double AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK::ARI_IBIMsLpWlanMeasurementReqCb_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8F0000u, 0);
  *(_QWORD *)v1 = &off_24C8E20B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x4D8F0000u, 0);
  *(_QWORD *)v1 = &off_24C8E20B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK::ARI_IBIMsLpWlanMeasurementReqCb_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E20B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E20B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK::~ARI_IBIMsLpWlanMeasurementReqCb_SDK(AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E20B8;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C403E1C8BA9);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK::~ARI_IBIMsLpWlanMeasurementReqCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK::pack(AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK::unpack(AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  }
  v12 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v11 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v11, 0);
  if (!(_DWORD)v3 && v11)
  {
    v8 = (_BYTE *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  return v3;
}

void sub_20E1CFC70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsLpWlanMeasurementReqCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1301217280;
}

AriSdk::MsgBase *AriSdk::ARI_IBIApacsDataStatusReq_SDK::ARI_IBIApacsDataStatusReq_SDK(AriSdk::ARI_IBIApacsDataStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C890000u, 0);
  *(_QWORD *)result = &off_24C8E2558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C890000u, 0);
  *(_QWORD *)result = &off_24C8E2558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIApacsDataStatusReq_SDK::ARI_IBIApacsDataStatusReq_SDK(AriSdk::ARI_IBIApacsDataStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2558;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIApacsDataStatusReq_SDK::~ARI_IBIApacsDataStatusReq_SDK(AriSdk::ARI_IBIApacsDataStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E2558;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIApacsDataStatusReq_SDK::~ARI_IBIApacsDataStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIApacsDataStatusReq_SDK::pack(AriSdk::ARI_IBIApacsDataStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 8uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIApacsDataStatusReq_SDK::unpack(AriSdk::ARI_IBIApacsDataStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 8, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  return v3;
}

void sub_20E1D011C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIApacsDataStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIApacsDataStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478740480;
}

AriSdk::MsgBase *AriSdk::ARI_IBIApacsDataStatusRspCb_SDK::ARI_IBIApacsDataStatusRspCb_SDK(AriSdk::ARI_IBIApacsDataStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D090000u, 0);
  *(_QWORD *)result = &off_24C8E2590;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D090000u, 0);
  *(_QWORD *)result = &off_24C8E2590;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIApacsDataStatusRspCb_SDK::ARI_IBIApacsDataStatusRspCb_SDK(AriSdk::ARI_IBIApacsDataStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2590;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2590;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIApacsDataStatusRspCb_SDK::~ARI_IBIApacsDataStatusRspCb_SDK(AriSdk::ARI_IBIApacsDataStatusRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2590;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIApacsDataStatusRspCb_SDK::~ARI_IBIApacsDataStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIApacsDataStatusRspCb_SDK::pack(AriSdk::ARI_IBIApacsDataStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIApacsDataStatusRspCb_SDK::unpack(AriSdk::ARI_IBIApacsDataStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1D03B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIApacsDataStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIApacsDataStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487129088;
}

AriSdk::MsgBase *AriSdk::ARI_IBILapsFetchIndCb_SDK::ARI_IBILapsFetchIndCb_SDK(AriSdk::ARI_IBILapsFetchIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D828000u, 0);
  *(_QWORD *)result = &off_24C8E25C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D828000u, 0);
  *(_QWORD *)result = &off_24C8E25C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBILapsFetchIndCb_SDK::ARI_IBILapsFetchIndCb_SDK(AriSdk::ARI_IBILapsFetchIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E25C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E25C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBILapsFetchIndCb_SDK::~ARI_IBILapsFetchIndCb_SDK(AriSdk::ARI_IBILapsFetchIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E25C8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40440B6928);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBILapsFetchIndCb_SDK::~ARI_IBILapsFetchIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBILapsFetchIndCb_SDK::pack(AriSdk::ARI_IBILapsFetchIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x7CuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBILapsFetchIndCb_SDK::unpack(AriSdk::ARI_IBILapsFetchIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  _OWORD *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;

  v15 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v15, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v15;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v14 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v13 = 0;
  v6 = (_OWORD *)operator new();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  *(_OWORD *)((char *)v6 + 108) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 124, &v13, 0);
  if (!(_DWORD)v3 && v13)
  {
    v7 = (_OWORD *)operator new();
    v8 = v6[5];
    v7[4] = v6[4];
    v7[5] = v8;
    v7[6] = v6[6];
    *(_OWORD *)((char *)v7 + 108) = *(_OWORD *)((char *)v6 + 108);
    v9 = v6[1];
    *v7 = *v6;
    v7[1] = v9;
    v10 = v6[3];
    v7[2] = v6[2];
    v7[3] = v10;
    v11 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40440B6928);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C40440B6928);
  return v3;
}

void sub_20E1D0850(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40440B6928);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBILapsFetchIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBILapsFetchIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495091712;
}

AriSdk::MsgBase *AriSdk::ARI_IBILapsFetchIndCb_V2_SDK::ARI_IBILapsFetchIndCb_V2_SDK(AriSdk::ARI_IBILapsFetchIndCb_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D888000u, 0);
  *(_QWORD *)result = &off_24C8E2600;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D888000u, 0);
  *(_QWORD *)result = &off_24C8E2600;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBILapsFetchIndCb_V2_SDK::ARI_IBILapsFetchIndCb_V2_SDK(AriSdk::ARI_IBILapsFetchIndCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2600;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2600;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBILapsFetchIndCb_V2_SDK::~ARI_IBILapsFetchIndCb_V2_SDK(AriSdk::ARI_IBILapsFetchIndCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E2600;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C407B2DA037);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBILapsFetchIndCb_V2_SDK::~ARI_IBILapsFetchIndCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBILapsFetchIndCb_V2_SDK::pack(AriSdk::ARI_IBILapsFetchIndCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x88uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBILapsFetchIndCb_V2_SDK::unpack(AriSdk::ARI_IBILapsFetchIndCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v6 = operator new();
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_QWORD *)(v6 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, (void *)v6, 136, &v14, 0);
  if (!(_DWORD)v3 && v14)
  {
    v7 = operator new();
    v8 = *(_OWORD *)(v6 + 112);
    *(_OWORD *)(v7 + 96) = *(_OWORD *)(v6 + 96);
    *(_OWORD *)(v7 + 112) = v8;
    *(_QWORD *)(v7 + 128) = *(_QWORD *)(v6 + 128);
    v9 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(v7 + 32) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(v7 + 48) = v9;
    v10 = *(_OWORD *)(v6 + 80);
    *(_OWORD *)(v7 + 64) = *(_OWORD *)(v6 + 64);
    *(_OWORD *)(v7 + 80) = v10;
    v11 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)v7 = *(_OWORD *)v6;
    *(_OWORD *)(v7 + 16) = v11;
    v12 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C407B2DA037);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C407B2DA037);
  return v3;
}

void sub_20E1D0D24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C407B2DA037);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBILapsFetchIndCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBILapsFetchIndCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495484928;
}

double AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK::ARI_IBIMsNetIceCsgAsfSearchReq_SDK(AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C880000u, 0);
  *(_QWORD *)v1 = &off_24C8E2638;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C880000u, 0);
  *(_QWORD *)v1 = &off_24C8E2638;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK::ARI_IBIMsNetIceCsgAsfSearchReq_SDK(AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2638;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2638;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK::~ARI_IBIMsNetIceCsgAsfSearchReq_SDK(AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E2638;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK::~ARI_IBIMsNetIceCsgAsfSearchReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK::pack(AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK::unpack(AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v10 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1D1258(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsNetIceCsgAsfSearchReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478674944;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK(AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D080000u, 0);
  *(_QWORD *)result = &off_24C8E2670;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D080000u, 0);
  *(_QWORD *)result = &off_24C8E2670;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK(AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2670;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2670;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK::~ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK(AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E2670;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK::~ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK::pack(AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK::unpack(AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_QWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  return v3;
}

void sub_20E1D16E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsNetIceCsgAsfSearchCnfCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487063552;
}

double AriSdk::ARI_IBINetAttachReq_V1_SDK::ARI_IBINetAttachReq_V1_SDK(AriSdk::ARI_IBINetAttachReq_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8C0000u, 0);
  *(_QWORD *)v1 = &off_24C8E26A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8C0000u, 0);
  *(_QWORD *)v1 = &off_24C8E26A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBINetAttachReq_V1_SDK::ARI_IBINetAttachReq_V1_SDK(AriSdk::ARI_IBINetAttachReq_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E26A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E26A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBINetAttachReq_V1_SDK::~ARI_IBINetAttachReq_V1_SDK(AriSdk::ARI_IBINetAttachReq_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8E26A8;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C403E1C8BA9);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetAttachReq_V1_SDK::~ARI_IBINetAttachReq_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetAttachReq_V1_SDK::pack(AriSdk::ARI_IBINetAttachReq_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xCuLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetAttachReq_V1_SDK::unpack(AriSdk::ARI_IBINetAttachReq_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 12, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C403E1C8BA9);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1D1CFC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetAttachReq_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetAttachReq_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478937088;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetAttachRspCb_V1_SDK::ARI_IBINetAttachRspCb_V1_SDK(AriSdk::ARI_IBINetAttachRspCb_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0C0000u, 0);
  *(_QWORD *)result = &off_24C8E26E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0C0000u, 0);
  *(_QWORD *)result = &off_24C8E26E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetAttachRspCb_V1_SDK::ARI_IBINetAttachRspCb_V1_SDK(AriSdk::ARI_IBINetAttachRspCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E26E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E26E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetAttachRspCb_V1_SDK::~ARI_IBINetAttachRspCb_V1_SDK(AriSdk::ARI_IBINetAttachRspCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E26E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetAttachRspCb_V1_SDK::~ARI_IBINetAttachRspCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetAttachRspCb_V1_SDK::pack(AriSdk::ARI_IBINetAttachRspCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetAttachRspCb_V1_SDK::unpack(AriSdk::ARI_IBINetAttachRspCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1D2074(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetAttachRspCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetAttachRspCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487325696;
}

double AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK::ARI_IBINetCellularSwitchStatusReq_SDK(AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C920000u, 0);
  *(_QWORD *)v1 = &off_24C8E2718;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C920000u, 0);
  *(_QWORD *)v1 = &off_24C8E2718;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK::ARI_IBINetCellularSwitchStatusReq_SDK(AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2718;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2718;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK::~ARI_IBINetCellularSwitchStatusReq_SDK(AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E2718;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK::~ARI_IBINetCellularSwitchStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK::pack(AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0xCuLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK::unpack(AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v16 = 0;
  v8 = (_QWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 8, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (_QWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
    MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  }
  v15 = 0;
  v11 = (_DWORD *)operator new();
  *(_QWORD *)v11 = 0;
  v11[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v11, 12, &v15, 0);
  if (!(_DWORD)v3 && v15)
  {
    v12 = operator new();
    *(_QWORD *)v12 = *(_QWORD *)v11;
    *(_DWORD *)(v12 + 8) = v11[2];
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C403E1C8BA9);
  }
  MEMORY[0x212BB9B60](v11, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1D27B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetCellularSwitchStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479330304;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK::ARI_IBINetCellularSwitchStatusRspCb_SDK(AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D120000u, 0);
  *(_QWORD *)result = &off_24C8E2750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D120000u, 0);
  *(_QWORD *)result = &off_24C8E2750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK::ARI_IBINetCellularSwitchStatusRspCb_SDK(AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2750;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK::~ARI_IBINetCellularSwitchStatusRspCb_SDK(AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2750;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK::~ARI_IBINetCellularSwitchStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK::pack(AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK::unpack(AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1D2B40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetCellularSwitchStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487718912;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDetachReq_SDK::ARI_IBINetDetachReq_SDK(AriSdk::ARI_IBINetDetachReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C810000u, 0);
  *(_QWORD *)result = &off_24C8E2788;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C810000u, 0);
  *(_QWORD *)result = &off_24C8E2788;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDetachReq_SDK::ARI_IBINetDetachReq_SDK(AriSdk::ARI_IBINetDetachReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2788;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2788;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDetachReq_SDK::~ARI_IBINetDetachReq_SDK(AriSdk::ARI_IBINetDetachReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2788;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDetachReq_SDK::~ARI_IBINetDetachReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDetachReq_SDK::pack(AriSdk::ARI_IBINetDetachReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDetachReq_SDK::unpack(AriSdk::ARI_IBINetDetachReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1D2DBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDetachReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDetachReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478216192;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDetachRspCb_SDK::ARI_IBINetDetachRspCb_SDK(AriSdk::ARI_IBINetDetachRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D010000u, 0);
  *(_QWORD *)result = &off_24C8E27C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D010000u, 0);
  *(_QWORD *)result = &off_24C8E27C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetDetachRspCb_SDK::ARI_IBINetDetachRspCb_SDK(AriSdk::ARI_IBINetDetachRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E27C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E27C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetDetachRspCb_SDK::~ARI_IBINetDetachRspCb_SDK(AriSdk::ARI_IBINetDetachRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E27C0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetDetachRspCb_SDK::~ARI_IBINetDetachRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetDetachRspCb_SDK::pack(AriSdk::ARI_IBINetDetachRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetDetachRspCb_SDK::unpack(AriSdk::ARI_IBINetDetachRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1D31E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetDetachRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetDetachRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 486604800;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGeoMCCIndCb_SDK::ARI_IBINetGeoMCCIndCb_SDK(AriSdk::ARI_IBINetGeoMCCIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D890000u, 0);
  *(_QWORD *)result = &off_24C8E27F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D890000u, 0);
  *(_QWORD *)result = &off_24C8E27F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGeoMCCIndCb_SDK::ARI_IBINetGeoMCCIndCb_SDK(AriSdk::ARI_IBINetGeoMCCIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E27F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E27F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetGeoMCCIndCb_SDK::~ARI_IBINetGeoMCCIndCb_SDK(AriSdk::ARI_IBINetGeoMCCIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E27F8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGeoMCCIndCb_SDK::~ARI_IBINetGeoMCCIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGeoMCCIndCb_SDK::pack(AriSdk::ARI_IBINetGeoMCCIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGeoMCCIndCb_SDK::unpack(AriSdk::ARI_IBINetGeoMCCIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return v3;
}

void sub_20E1D3540(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGeoMCCIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGeoMCCIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495517696;
}

double AriSdk::ARI_IBINetGeoMCCReq_SDK::ARI_IBINetGeoMCCReq_SDK(AriSdk::ARI_IBINetGeoMCCReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C940000u, 0);
  *(_QWORD *)v1 = &off_24C8E2830;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C940000u, 0);
  *(_QWORD *)v1 = &off_24C8E2830;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetGeoMCCReq_SDK::ARI_IBINetGeoMCCReq_SDK(AriSdk::ARI_IBINetGeoMCCReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2830;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2830;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetGeoMCCReq_SDK::~ARI_IBINetGeoMCCReq_SDK(AriSdk::ARI_IBINetGeoMCCReq_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2830;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGeoMCCReq_SDK::~ARI_IBINetGeoMCCReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGeoMCCReq_SDK::pack(AriSdk::ARI_IBINetGeoMCCReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGeoMCCReq_SDK::unpack(AriSdk::ARI_IBINetGeoMCCReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  __n128 __p;
  uint64_t v8;
  unint64_t v9;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  v9 = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_QWORD *)operator new[]();
  *v5 = 0;
  v5[1] = 0;
  *((_DWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 20, &v10, &v9);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v5, (uint64_t)v5 + 2 * (v9 >> 1), v9 >> 1);
    AriSdk::TlvArray<unsigned short,10ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C80BDFB0063);
  return v3;
}

void sub_20E1D38E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C80BDFB0063);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned short,10ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x15)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 1, 10);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1D3A08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBINetGeoMCCReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGeoMCCReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479461376;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGeoMCCRspCb_SDK::ARI_IBINetGeoMCCRspCb_SDK(AriSdk::ARI_IBINetGeoMCCRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D140000u, 0);
  *(_QWORD *)result = &off_24C8E2868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D140000u, 0);
  *(_QWORD *)result = &off_24C8E2868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGeoMCCRspCb_SDK::ARI_IBINetGeoMCCRspCb_SDK(AriSdk::ARI_IBINetGeoMCCRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2868;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetGeoMCCRspCb_SDK::~ARI_IBINetGeoMCCRspCb_SDK(AriSdk::ARI_IBINetGeoMCCRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2868;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGeoMCCRspCb_SDK::~ARI_IBINetGeoMCCRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGeoMCCRspCb_SDK::pack(AriSdk::ARI_IBINetGeoMCCRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGeoMCCRspCb_SDK::unpack(AriSdk::ARI_IBINetGeoMCCRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1D3D44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGeoMCCRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGeoMCCRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487849984;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGetNitzInfoReq_SDK::ARI_IBINetGetNitzInfoReq_SDK(AriSdk::ARI_IBINetGetNitzInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C950000u, 0);
  *(_QWORD *)result = &off_24C8E28A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C950000u, 0);
  *(_QWORD *)result = &off_24C8E28A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGetNitzInfoReq_SDK::ARI_IBINetGetNitzInfoReq_SDK(AriSdk::ARI_IBINetGetNitzInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E28A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E28A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetGetNitzInfoReq_SDK::~ARI_IBINetGetNitzInfoReq_SDK(AriSdk::ARI_IBINetGetNitzInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E28A0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGetNitzInfoReq_SDK::~ARI_IBINetGetNitzInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGetNitzInfoReq_SDK::pack(AriSdk::ARI_IBINetGetNitzInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGetNitzInfoReq_SDK::unpack(AriSdk::ARI_IBINetGetNitzInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1D3FC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGetNitzInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGetNitzInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479526912;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK::ARI_IBINetGetNitzInfoRspCb_SDK(AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D150000u, 0);
  *(_QWORD *)result = &off_24C8E28D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D150000u, 0);
  *(_QWORD *)result = &off_24C8E28D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK::ARI_IBINetGetNitzInfoRspCb_SDK(AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E28D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E28D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK::~ARI_IBINetGetNitzInfoRspCb_SDK(AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E28D8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK::~ARI_IBINetGetNitzInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK::pack(AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1D4308(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGetNitzInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487915520;
}

double AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK::ARI_IBINetGetPlmnNameInfoIndCb_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D858000u, 0);
  *(_QWORD *)v1 = &off_24C8E2910;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D858000u, 0);
  *(_QWORD *)v1 = &off_24C8E2910;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK::ARI_IBINetGetPlmnNameInfoIndCb_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2910;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2910;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK::~ARI_IBINetGetPlmnNameInfoIndCb_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E2910;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40117FECB1);
  v3 = (void *)*((_QWORD *)this + 10);
  if (v3)
  {
    *((_QWORD *)this + 11) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK::~ARI_IBINetGetPlmnNameInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK::pack(AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 0x64uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK::unpack(AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  void *v6;
  _OWORD *v7;
  void *__p[3];
  unint64_t v10;
  BOOL v11;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v11 = 0;
  v10 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x870uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2160, &v11, &v10);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C80CB775AA8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBINetPlmn_V1>::__init_with_size[abi:ne180100]<IBINetPlmn_V1*,IBINetPlmn_V1*>(__p, v6, (uint64_t)v6 + 108 * (v10 / 0x6C), v10 / 0x6C);
    AriSdk::TlvArray<IBINetPlmn_V1,20ul>::operator=((uint64_t)this + 80, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v6, 0x1000C80CB775AA8);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_OWORD *)operator new();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  *((_DWORD *)v7 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 100, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<IBINetPlmnNameInfo_V1>::operator=<IBINetPlmnNameInfo_V1&,void>((uint64_t *)this + 13, (uint64_t)v7);
  MEMORY[0x212BB9B60](v7, 0x1000C40117FECB1);
  return v3;
}

void sub_20E1D4880(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C40117FECB1);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::TlvArray<IBINetPlmn_V1,20ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if (0x84BDA12F684BDA13 * ((v4 - *a2) >> 2) < 0x15)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0x84BDA12F684BDA13 * ((a2[1] - *a2) >> 2), 20);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E1D4A10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *AriSdk::Tlv<IBINetPlmnNameInfo_V1>::operator=<IBINetPlmnNameInfo_V1&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  uint64_t v8;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v5;
  *(_DWORD *)(v4 + 96) = *(_DWORD *)(a2 + 96);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v7;
  v8 = *a1;
  *a1 = v4;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C40117FECB1);
  return a1;
}

BOOL AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGetPlmnNameInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495288320;
}

double AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK::ARI_IBINetGetPlmnNameInfoReq_V1_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8C8000u, 0);
  *(_QWORD *)v1 = &off_24C8E2948;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8C8000u, 0);
  *(_QWORD *)v1 = &off_24C8E2948;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK::ARI_IBINetGetPlmnNameInfoReq_V1_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2948;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2948;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK::~ARI_IBINetGetPlmnNameInfoReq_V1_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E2948;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK::~ARI_IBINetGetPlmnNameInfoReq_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK::pack(AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK::unpack(AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  size_t v11;
  void **v12;
  const char *v13;
  void **v14;
  void *v15;
  unint64_t v17;
  BOOL v18;
  void *__p[2];
  char v20;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 160, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    v7 = v17;
    if (v17 >= 8)
    {
      v11 = v17 & 0xFFFFFFFFFFFFFFF8;
      v8 = (char *)operator new(v17 & 0xFFFFFFFFFFFFFFF8);
      v10 = &v8[8 * (v7 >> 3)];
      memcpy(v8, v6, v11);
      v9 = &v8[v11];
    }
    else
    {
      v8 = 0;
      v9 = 0;
      v10 = 0;
    }
    v12 = (void **)((char *)this + 80);
    if ((unint64_t)(v9 - v8) < 0xA1)
    {
      v15 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v12 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v8;
      *((_QWORD *)this + 11) = v9;
      *((_QWORD *)this + 12) = v10;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v20 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, v12, (v9 - v8) >> 3, 20);
      if (v20 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8000313F17);
  return v3;
}

void sub_20E1D4FCC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C8000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGetPlmnNameInfoReq_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478969856;
}

double AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D0C8000u, 0);
  *(_QWORD *)v1 = &off_24C8E2980;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D0C8000u, 0);
  *(_QWORD *)v1 = &off_24C8E2980;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2980;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2980;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK::~ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK(AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8E2980;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40117FECB1);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 10);
  if (v4)
  {
    *((_QWORD *)this + 11) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK::~ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK::pack(AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 0x64uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK::unpack(AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  void *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _OWORD *v10;
  void *__p[3];
  unint64_t v13;
  BOOL v14;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v13 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x870uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2160, &v14, &v13);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C80CB775AA8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBINetPlmn_V1>::__init_with_size[abi:ne180100]<IBINetPlmn_V1*,IBINetPlmn_V1*>(__p, v6, (uint64_t)v6 + 108 * (v13 / 0x6C), v13 / 0x6C);
    AriSdk::TlvArray<IBINetPlmn_V1,20ul>::operator=((uint64_t)this + 80, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v6, 0x1000C80CB775AA8);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v10 = (_OWORD *)operator new();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  *((_DWORD *)v10 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 100, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<IBINetPlmnNameInfo_V1>::operator=<IBINetPlmnNameInfo_V1&,void>((uint64_t *)this + 14, (uint64_t)v10);
  MEMORY[0x212BB9B60](v10, 0x1000C40117FECB1);
  return v3;
}

void sub_20E1D56C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C40117FECB1);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGetPlmnNameInfoRspCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487358464;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK::ARI_IBINetGetRegistrationInfoReq_SDK(AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8D8000u, 0);
  *(_QWORD *)result = &off_24C8E29B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8D8000u, 0);
  *(_QWORD *)result = &off_24C8E29B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK::ARI_IBINetGetRegistrationInfoReq_SDK(AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E29B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E29B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK::~ARI_IBINetGetRegistrationInfoReq_SDK(AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E29B8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK::~ARI_IBINetGetRegistrationInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK::pack(AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK::unpack(AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1D59B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGetRegistrationInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479035392;
}

double AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK::ARI_IBINetGetRegistrationInfoRspCb_SDK(AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D0D8000u, 0);
  *(_QWORD *)v1 = &off_24C8E29F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D0D8000u, 0);
  *(_QWORD *)v1 = &off_24C8E29F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

double AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK::ARI_IBINetGetRegistrationInfoRspCb_SDK(AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E29F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E29F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

void AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK::~ARI_IBINetGetRegistrationInfoRspCb_SDK(AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)this = &off_24C8E29F0;
  v2 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C403E1C8BA9);
  v12 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  v16 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  v17 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK::~ARI_IBINetGetRegistrationInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK::pack(AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v11, 0xCuLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 32, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 33, v16, 1uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 34, v17, 1uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 35, v18, 4uLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 36, v19, 4uLL, 0), !(_DWORD)result))
                              {
                                v20 = (const void *)*((_QWORD *)this + 23);
                                if (!v20
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 37, v20, 4uLL, 0), !(_DWORD)result))
                                {
                                  result = 0;
                                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _BYTE *v15;
  _BYTE *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  BOOL v21;

  v21 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v21, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v21;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v21 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v21 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v21 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v8, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v21 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v9, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v21 = 0;
  v10 = (_DWORD *)operator new();
  *(_QWORD *)v10 = 0;
  v10[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v10, 12, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 14, (uint64_t)v10);
    MEMORY[0x212BB9B60](v10, 0x1000C403E1C8BA9);
  }
  v21 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v11, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v21 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v12, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v21 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v13, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v21 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 32, v14, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v21 = 0;
  v15 = (_BYTE *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 33, v15, 1, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  }
  v21 = 0;
  v16 = (_BYTE *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 34, v16, 1, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 20, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
  }
  v21 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 35, v17, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  v21 = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 36, v18, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  v21 = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 37, v19, 4, &v21, 0);
  if (!(_DWORD)v3 && v21)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v19);
  MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  return v3;
}

void sub_20E1D68E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetGetRegistrationInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487424000;
}

double AriSdk::ARI_IBINetIceApStatusReq_SDK::ARI_IBINetIceApStatusReq_SDK(AriSdk::ARI_IBINetIceApStatusReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8B0000u, 0);
  *(_QWORD *)v1 = &off_24C8E2A28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8B0000u, 0);
  *(_QWORD *)v1 = &off_24C8E2A28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBINetIceApStatusReq_SDK::ARI_IBINetIceApStatusReq_SDK(AriSdk::ARI_IBINetIceApStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2A28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2A28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBINetIceApStatusReq_SDK::~ARI_IBINetIceApStatusReq_SDK(AriSdk::ARI_IBINetIceApStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8E2A28;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceApStatusReq_SDK::~ARI_IBINetIceApStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceApStatusReq_SDK::pack(AriSdk::ARI_IBINetIceApStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceApStatusReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  _DWORD *v7;
  AriMsg *v8;
  AriMsg *v9;
  _DWORD *v10;
  AriMsg *v11;
  AriMsg *v12;
  _DWORD *v13;
  AriMsg *v14;
  AriMsg *v15;
  _DWORD *v16;
  AriMsg *v17;
  AriMsg *v18;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;

  v24 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 2, v2, 4, &v24, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v24;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v23 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(this[6], 3, v7, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (AriMsg *)operator new();
    *(_DWORD *)v8 = *v7;
    v9 = this[9];
    this[9] = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v22 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(this[6], 4, v10, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (AriMsg *)operator new();
    *(_DWORD *)v11 = *v10;
    v12 = this[10];
    this[10] = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v21 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(this[6], 5, v13, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = (AriMsg *)operator new();
    *(_DWORD *)v14 = *v13;
    v15 = this[11];
    this[11] = v14;
    if (v15)
      MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v20 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(this[6], 6, v16, 4, &v20, 0);
  if (!(_DWORD)v3 && v20)
  {
    v17 = (AriMsg *)operator new();
    *(_DWORD *)v17 = *v16;
    v18 = this[12];
    this[12] = v17;
    if (v18)
      MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  return v3;
}

void sub_20E1D707C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceApStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceApStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478871552;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceApStatusRspCb_SDK::ARI_IBINetIceApStatusRspCb_SDK(AriSdk::ARI_IBINetIceApStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0B0000u, 0);
  *(_QWORD *)result = &off_24C8E2A60;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0B0000u, 0);
  *(_QWORD *)result = &off_24C8E2A60;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceApStatusRspCb_SDK::ARI_IBINetIceApStatusRspCb_SDK(AriSdk::ARI_IBINetIceApStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2A60;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2A60;
  return result;
}

void AriSdk::ARI_IBINetIceApStatusRspCb_SDK::~ARI_IBINetIceApStatusRspCb_SDK(AriSdk::ARI_IBINetIceApStatusRspCb_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceApStatusRspCb_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_IBINetIceApStatusRspCb_SDK::unpack(AriSdk::ARI_IBINetIceApStatusRspCb_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBINetIceApStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceApStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487260160;
}

double AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK::ARI_IBINetIceCellularSwitchStatusReq_SDK(AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C898000u, 0);
  *(_QWORD *)v1 = &off_24C8E2A98;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C898000u, 0);
  *(_QWORD *)v1 = &off_24C8E2A98;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK::ARI_IBINetIceCellularSwitchStatusReq_SDK(AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2A98;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2A98;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK::~ARI_IBINetIceCellularSwitchStatusReq_SDK(AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E2A98;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK::~ARI_IBINetIceCellularSwitchStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK::pack(AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK::unpack(AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E1D7748(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceCellularSwitchStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478773248;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK::ARI_IBINetIceCellularSwitchStatusRspCb_SDK(AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D098000u, 0);
  *(_QWORD *)result = &off_24C8E2AD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D098000u, 0);
  *(_QWORD *)result = &off_24C8E2AD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK::ARI_IBINetIceCellularSwitchStatusRspCb_SDK(AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2AD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2AD0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK::~ARI_IBINetIceCellularSwitchStatusRspCb_SDK(AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2AD0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK::~ARI_IBINetIceCellularSwitchStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK::pack(AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK::unpack(AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1D79E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceCellularSwitchStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487161856;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceFdReportIndCb_SDK::ARI_IBINetIceFdReportIndCb_SDK(AriSdk::ARI_IBINetIceFdReportIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D820000u, 0);
  *(_QWORD *)result = &off_24C8E2B08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D820000u, 0);
  *(_QWORD *)result = &off_24C8E2B08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceFdReportIndCb_SDK::ARI_IBINetIceFdReportIndCb_SDK(AriSdk::ARI_IBINetIceFdReportIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2B08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2B08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetIceFdReportIndCb_SDK::~ARI_IBINetIceFdReportIndCb_SDK(AriSdk::ARI_IBINetIceFdReportIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2B08;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceFdReportIndCb_SDK::~ARI_IBINetIceFdReportIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceFdReportIndCb_SDK::pack(AriSdk::ARI_IBINetIceFdReportIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceFdReportIndCb_SDK::unpack(AriSdk::ARI_IBINetIceFdReportIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1D7D2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceFdReportIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceFdReportIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495058944;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceFdStatusReq_SDK::ARI_IBINetIceFdStatusReq_SDK(AriSdk::ARI_IBINetIceFdStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C840000u, 0);
  *(_QWORD *)result = &off_24C8E2B40;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C840000u, 0);
  *(_QWORD *)result = &off_24C8E2B40;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceFdStatusReq_SDK::ARI_IBINetIceFdStatusReq_SDK(AriSdk::ARI_IBINetIceFdStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2B40;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2B40;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetIceFdStatusReq_SDK::~ARI_IBINetIceFdStatusReq_SDK(AriSdk::ARI_IBINetIceFdStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2B40;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceFdStatusReq_SDK::~ARI_IBINetIceFdStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceFdStatusReq_SDK::pack(AriSdk::ARI_IBINetIceFdStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceFdStatusReq_SDK::unpack(AriSdk::ARI_IBINetIceFdStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1D7FA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceFdStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceFdStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478412800;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK::ARI_IBINetIceFdStatusCnfCb_SDK(AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D040000u, 0);
  *(_QWORD *)result = &off_24C8E2B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D040000u, 0);
  *(_QWORD *)result = &off_24C8E2B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK::ARI_IBINetIceFdStatusCnfCb_SDK(AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2B78;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK::~ARI_IBINetIceFdStatusCnfCb_SDK(AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2B78;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK::~ARI_IBINetIceFdStatusCnfCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK::pack(AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK::unpack(AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1D82F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceFdStatusCnfCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 486801408;
}

double AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK::ARI_IBINetIceManualPlmnModeIndCb_SDK(AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D830000u, 0);
  *(_QWORD *)v1 = &off_24C8E2BB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D830000u, 0);
  *(_QWORD *)v1 = &off_24C8E2BB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK::ARI_IBINetIceManualPlmnModeIndCb_SDK(AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2BB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2BB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK::~ARI_IBINetIceManualPlmnModeIndCb_SDK(AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E2BB0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4000313F17);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK::~ARI_IBINetIceManualPlmnModeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK::pack(AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK::unpack(AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  _WORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v10 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 8, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v9 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E1D87F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceManualPlmnModeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495124480;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIncrementalScanReq_SDK::ARI_IBINetIncrementalScanReq_SDK(AriSdk::ARI_IBINetIncrementalScanReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8E0000u, 0);
  *(_QWORD *)result = &off_24C8E2BE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8E0000u, 0);
  *(_QWORD *)result = &off_24C8E2BE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIncrementalScanReq_SDK::ARI_IBINetIncrementalScanReq_SDK(AriSdk::ARI_IBINetIncrementalScanReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2BE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2BE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetIncrementalScanReq_SDK::~ARI_IBINetIncrementalScanReq_SDK(AriSdk::ARI_IBINetIncrementalScanReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E2BE8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIncrementalScanReq_SDK::~ARI_IBINetIncrementalScanReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIncrementalScanReq_SDK::pack(AriSdk::ARI_IBINetIncrementalScanReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIncrementalScanReq_SDK::unpack(AriSdk::ARI_IBINetIncrementalScanReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1D8C94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIncrementalScanReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIncrementalScanReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479068160;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIncrementalScanRspCb_SDK::ARI_IBINetIncrementalScanRspCb_SDK(AriSdk::ARI_IBINetIncrementalScanRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0E0000u, 0);
  *(_QWORD *)result = &off_24C8E2C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0E0000u, 0);
  *(_QWORD *)result = &off_24C8E2C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIncrementalScanRspCb_SDK::ARI_IBINetIncrementalScanRspCb_SDK(AriSdk::ARI_IBINetIncrementalScanRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2C20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetIncrementalScanRspCb_SDK::~ARI_IBINetIncrementalScanRspCb_SDK(AriSdk::ARI_IBINetIncrementalScanRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2C20;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIncrementalScanRspCb_SDK::~ARI_IBINetIncrementalScanRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIncrementalScanRspCb_SDK::pack(AriSdk::ARI_IBINetIncrementalScanRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIncrementalScanRspCb_SDK::unpack(AriSdk::ARI_IBINetIncrementalScanRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1D8FEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIncrementalScanRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIncrementalScanRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487456768;
}

double AriSdk::ARI_IBINetIncrementalScanIndCb_SDK::ARI_IBINetIncrementalScanIndCb_SDK(AriSdk::ARI_IBINetIncrementalScanIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D868000u, 0);
  *(_QWORD *)v1 = &off_24C8E2C58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D868000u, 0);
  *(_QWORD *)v1 = &off_24C8E2C58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBINetIncrementalScanIndCb_SDK::ARI_IBINetIncrementalScanIndCb_SDK(AriSdk::ARI_IBINetIncrementalScanIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2C58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2C58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBINetIncrementalScanIndCb_SDK::~ARI_IBINetIncrementalScanIndCb_SDK(AriSdk::ARI_IBINetIncrementalScanIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8E2C58;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4004CCECB6);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIncrementalScanIndCb_SDK::~ARI_IBINetIncrementalScanIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIncrementalScanIndCb_SDK::pack(AriSdk::ARI_IBINetIncrementalScanIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xF7CuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIncrementalScanIndCb_SDK::unpack(AriSdk::ARI_IBINetIncrementalScanIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0xF7CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 3964, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4004CCECB6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0xF7CuLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4004CCECB6);
    MEMORY[0x212BB9B60](v5, 0x1000C4004CCECB6);
  }
  v14 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v13 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v12 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E1D9620(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIncrementalScanIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIncrementalScanIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495353856;
}

double AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK::ARI_IBINetManageUEPolicyCommandIndCb_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D870000u, 0);
  *(_QWORD *)v1 = &off_24C8E2C90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D870000u, 0);
  *(_QWORD *)v1 = &off_24C8E2C90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

double AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK::ARI_IBINetManageUEPolicyCommandIndCb_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2C90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2C90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

void AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK::~ARI_IBINetManageUEPolicyCommandIndCb_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E2C90;
  v2 = (void *)*((_QWORD *)this + 17);
  if (v2)
  {
    *((_QWORD *)this + 18) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 13);
  if (v4)
  {
    *((_QWORD *)this + 14) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK::~ARI_IBINetManageUEPolicyCommandIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK::pack(AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  _BYTE *v10;
  _BYTE *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (_BYTE *)*((_QWORD *)this + 13);
            if (!v10
              || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, v11 - v10, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 1uLL, 0), !(_DWORD)result))
              {
                v13 = (_BYTE *)*((_QWORD *)this + 17);
                if (!v13
                  || (v14 = (_BYTE *)*((_QWORD *)this + 18), v13 == v14)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, v14 - v13, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK::unpack(AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _BYTE *v7;
  _WORD *v8;
  void *v9;
  _BYTE *v10;
  _OWORD *v11;
  __n128 __p;
  uint64_t v14;
  size_t __sz;
  BOOL v16;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v9 = (void *)operator new[]();
  bzero(v9, 0x1F40uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 8000, &v16, &__sz);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B48](v9, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v9, (uint64_t)v9 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,8000ul>::operator=((std::vector<int> *)((char *)this + 104), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v9, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v11 = (_OWORD *)operator new[]();
  *v11 = 0u;
  v11[1] = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 40, &v16, &__sz);
  if (!(_DWORD)v3 && v16)
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(&__p, v11, (uint64_t)v11 + 4 * (__sz >> 2), __sz >> 2);
    AriSdk::TlvArray<unsigned int,10ul>::operator=((std::vector<int> *)((char *)this + 136), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
  return v3;
}

void sub_20E1D9F34(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,8000ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x1F41)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 8000);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1DA0D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<unsigned int,10ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x29)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 2, 10);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1DA1AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetManageUEPolicyCommandIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495386624;
}

double AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK::ARI_IBINetManageUEPolicyCommandResultReq_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C910000u, 0);
  *(_QWORD *)v1 = &off_24C8E2CC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C910000u, 0);
  *(_QWORD *)v1 = &off_24C8E2CC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK::ARI_IBINetManageUEPolicyCommandResultReq_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2CC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2CC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK::~ARI_IBINetManageUEPolicyCommandResultReq_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8E2CC8;
  v2 = (void *)*((_QWORD *)this + 18);
  if (v2)
  {
    *((_QWORD *)this + 19) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 14);
  if (v4)
  {
    *((_QWORD *)this + 15) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK::~ARI_IBINetManageUEPolicyCommandResultReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK::pack(AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (_BYTE *)*((_QWORD *)this + 14);
              if (!v11
                || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, v12 - v11, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
                {
                  v14 = (_BYTE *)*((_QWORD *)this + 18);
                  if (!v14
                    || (v15 = (_BYTE *)*((_QWORD *)this + 19), v14 == v15)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, v15 - v14, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK::unpack(AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _WORD *v11;
  void *v12;
  _BYTE *v13;
  _OWORD *v14;
  __n128 __p;
  uint64_t v17;
  size_t __sz;
  BOOL v19;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v11 = (_WORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v11, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v12 = (void *)operator new[]();
  bzero(v12, 0x1F40uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v12, 8000, &v19, &__sz);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v12, (uint64_t)v12 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,8000ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v13, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v14 = (_OWORD *)operator new[]();
  *v14 = 0u;
  v14[1] = 0u;
  *((_QWORD *)v14 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v14, 40, &v19, &__sz);
  if (!(_DWORD)v3 && v19)
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(&__p, v14, (uint64_t)v14 + 4 * (__sz >> 2), __sz >> 2);
    AriSdk::TlvArray<unsigned int,10ul>::operator=((std::vector<int> *)this + 6, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v14, 0x1000C8052888210);
  return v3;
}

void sub_20E1DAB9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetManageUEPolicyCommandResultReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479264768;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D110000u, 0);
  *(_QWORD *)result = &off_24C8E2D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D110000u, 0);
  *(_QWORD *)result = &off_24C8E2D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2D00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK::~ARI_IBINetManageUEPolicyCommandResultRspCb_SDK(AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2D00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK::~ARI_IBINetManageUEPolicyCommandResultRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK::pack(AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK::unpack(AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1DAFA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetManageUEPolicyCommandResultRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487653376;
}

double AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D810000u, 0);
  *(_QWORD *)v1 = &off_24C8E2D38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D810000u, 0);
  *(_QWORD *)v1 = &off_24C8E2D38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2D38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2D38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK::~ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E2D38;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK::~ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK::pack(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK::unpack(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v16 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v15 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v14 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 4, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  return v3;
}

void sub_20E1DB77C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 494993408;
}

double AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D880000u, 0);
  *(_QWORD *)v1 = &off_24C8E2D70;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D880000u, 0);
  *(_QWORD *)v1 = &off_24C8E2D70;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  return result;
}

double AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2D70;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2D70;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  return result;
}

void AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK::~ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)this = &off_24C8E2D70;
  v2 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  v16 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  v17 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  v18 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v18)
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  v19 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v19)
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK::~ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK::pack(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v18, 4uLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v19, 4uLL, 0), !(_DWORD)result))
                              {
                                v20 = (const void *)*((_QWORD *)this + 23);
                                if (!v20
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v20, 4uLL, 0), !(_DWORD)result))
                                {
                                  v21 = (const void *)*((_QWORD *)this + 24);
                                  if (!v21
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v21, 4uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v22 = (const void *)*((_QWORD *)this + 25);
                                    if (!v22
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v22, 4uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      result = 0;
                                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK::unpack(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  _DWORD *v23;
  _DWORD *v24;
  _DWORD *v25;
  _DWORD *v26;
  _DWORD *v27;
  _DWORD *v28;
  _DWORD *v29;
  _DWORD *v30;
  _DWORD *v31;
  BOOL v33;

  v33 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v33, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v33;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v33 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v33 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v33 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v33 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v33 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = (_DWORD *)operator new();
    *v12 = *v11;
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v33 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v14, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v15 = (_DWORD *)operator new();
    *v15 = *v14;
    v16 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v15;
    if (v16)
      MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v33 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v17, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v18 = (_DWORD *)operator new();
    *v18 = *v17;
    v19 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v18;
    if (v19)
      MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  v33 = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v20, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v21 = (_DWORD *)operator new();
    *v21 = *v20;
    v22 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = v21;
    if (v22)
      MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  v33 = 0;
  v23 = (_DWORD *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v23, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  }
  v33 = 0;
  v24 = (_DWORD *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v24, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  }
  v33 = 0;
  v25 = (_DWORD *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v25, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  }
  v33 = 0;
  v26 = (_DWORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v26, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  }
  v33 = 0;
  v27 = (_DWORD *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v27, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  }
  v33 = 0;
  v28 = (_DWORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v28, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  }
  v33 = 0;
  v29 = (_DWORD *)operator new();
  *v29 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v29, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v29);
    MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  }
  v33 = 0;
  v30 = (_DWORD *)operator new();
  *v30 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v30, 4, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 24, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C4052888210);
  }
  v33 = 0;
  v31 = (_DWORD *)operator new();
  *v31 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v31, 4, &v33, 0);
  if (!(_DWORD)v3 && v33)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 25, v31);
  MEMORY[0x212BB9B60](v31, 0x1000C4052888210);
  return v3;
}

void sub_20E1DC99C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNetworkFeatureSupportInfoIndCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495452160;
}

double AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK::ARI_IBINetNitzInfoIndCb_V1_SDK(AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D850000u, 0);
  *(_QWORD *)v1 = &off_24C8E2DA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D850000u, 0);
  *(_QWORD *)v1 = &off_24C8E2DA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK::ARI_IBINetNitzInfoIndCb_V1_SDK(AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2DA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2DA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK::~ARI_IBINetNitzInfoIndCb_V1_SDK(AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E2DA8;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4001E4F5AELL);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK::~ARI_IBINetNitzInfoIndCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK::pack(AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v11, 0xAuLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v12, 0xCuLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK::unpack(AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  _WORD *v10;
  uint64_t v11;
  uint64_t v12;
  _DWORD *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v18 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v8, 1, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v17 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v9, 1, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v16 = 0;
  v10 = (_WORD *)operator new();
  *(_QWORD *)v10 = 0;
  v10[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v10, 10, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4001E4F5AELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = operator new();
    *(_QWORD *)v11 = *(_QWORD *)v10;
    *(_WORD *)(v11 + 8) = v10[4];
    v12 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4001E4F5AELL);
    MEMORY[0x212BB9B60](v10, 0x1000C4001E4F5AELL);
  }
  v15 = 0;
  v13 = (_DWORD *)operator new();
  *(_QWORD *)v13 = 0;
  v13[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v13, 12, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 15, (uint64_t)v13);
  MEMORY[0x212BB9B60](v13, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E1DD2CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNitzInfoIndCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495255552;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoIndCb_SDK::ARI_IBINetNssaiInfoIndCb_SDK(AriSdk::ARI_IBINetNssaiInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D878000u, 0);
  *(_QWORD *)result = &off_24C8E2DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D878000u, 0);
  *(_QWORD *)result = &off_24C8E2DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoIndCb_SDK::ARI_IBINetNssaiInfoIndCb_SDK(AriSdk::ARI_IBINetNssaiInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2DE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetNssaiInfoIndCb_SDK::~ARI_IBINetNssaiInfoIndCb_SDK(AriSdk::ARI_IBINetNssaiInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2DE0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C406B768C9FLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNssaiInfoIndCb_SDK::~ARI_IBINetNssaiInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNssaiInfoIndCb_SDK::pack(AriSdk::ARI_IBINetNssaiInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x258uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNssaiInfoIndCb_SDK::unpack(AriSdk::ARI_IBINetNssaiInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x258uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 600, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x258uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C406B768C9FLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C406B768C9FLL);
  return v3;
}

void sub_20E1DD6C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C406B768C9FLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNssaiInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNssaiInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495419392;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK::ARI_IBINetNssaiInfoIndCb_V2_SDK(AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D898000u, 0);
  *(_QWORD *)result = &off_24C8E2E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D898000u, 0);
  *(_QWORD *)result = &off_24C8E2E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK::ARI_IBINetNssaiInfoIndCb_V2_SDK(AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2E18;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK::~ARI_IBINetNssaiInfoIndCb_V2_SDK(AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2E18;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40805B3259);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK::~ARI_IBINetNssaiInfoIndCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK::pack(AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x298uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK::unpack(AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x298uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 664, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x298uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40805B3259);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40805B3259);
  return v3;
}

void sub_20E1DDA70(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40805B3259);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNssaiInfoIndCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495550464;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoReq_SDK::ARI_IBINetNssaiInfoReq_SDK(AriSdk::ARI_IBINetNssaiInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C928000u, 0);
  *(_QWORD *)result = &off_24C8E2E50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C928000u, 0);
  *(_QWORD *)result = &off_24C8E2E50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoReq_SDK::ARI_IBINetNssaiInfoReq_SDK(AriSdk::ARI_IBINetNssaiInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2E50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2E50;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetNssaiInfoReq_SDK::~ARI_IBINetNssaiInfoReq_SDK(AriSdk::ARI_IBINetNssaiInfoReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2E50;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNssaiInfoReq_SDK::~ARI_IBINetNssaiInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNssaiInfoReq_SDK::pack(AriSdk::ARI_IBINetNssaiInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNssaiInfoReq_SDK::unpack(AriSdk::ARI_IBINetNssaiInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1DDD08(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNssaiInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNssaiInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479363072;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoRspCb_SDK::ARI_IBINetNssaiInfoRspCb_SDK(AriSdk::ARI_IBINetNssaiInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D128000u, 0);
  *(_QWORD *)result = &off_24C8E2E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D128000u, 0);
  *(_QWORD *)result = &off_24C8E2E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoRspCb_SDK::ARI_IBINetNssaiInfoRspCb_SDK(AriSdk::ARI_IBINetNssaiInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2E88;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetNssaiInfoRspCb_SDK::~ARI_IBINetNssaiInfoRspCb_SDK(AriSdk::ARI_IBINetNssaiInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2E88;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4035B30F66);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNssaiInfoRspCb_SDK::~ARI_IBINetNssaiInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNssaiInfoRspCb_SDK::pack(AriSdk::ARI_IBINetNssaiInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x25CuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNssaiInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetNssaiInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x25CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 604, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x25CuLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4035B30F66);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4035B30F66);
  return v3;
}

void sub_20E1DE09C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4035B30F66);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNssaiInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNssaiInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487751680;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK::ARI_IBINetNssaiInfoReq_V2_SDK(AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C948000u, 0);
  *(_QWORD *)result = &off_24C8E2EC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C948000u, 0);
  *(_QWORD *)result = &off_24C8E2EC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK::ARI_IBINetNssaiInfoReq_V2_SDK(AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2EC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2EC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK::~ARI_IBINetNssaiInfoReq_V2_SDK(AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2EC0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK::~ARI_IBINetNssaiInfoReq_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK::pack(AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK::unpack(AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1DE334(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNssaiInfoReq_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479494144;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK::ARI_IBINetNssaiInfoRspCb_V2_SDK(AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D148000u, 0);
  *(_QWORD *)result = &off_24C8E2EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D148000u, 0);
  *(_QWORD *)result = &off_24C8E2EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK::ARI_IBINetNssaiInfoRspCb_V2_SDK(AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2EF8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK::~ARI_IBINetNssaiInfoRspCb_V2_SDK(AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2EF8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4093E08644);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK::~ARI_IBINetNssaiInfoRspCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK::pack(AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x29CuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK::unpack(AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x29CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 668, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x29CuLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4093E08644);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4093E08644);
  return v3;
}

void sub_20E1DE6C8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4093E08644);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetNssaiInfoRspCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487882752;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetPowerDownReq_SDK::ARI_IBINetPowerDownReq_SDK(AriSdk::ARI_IBINetPowerDownReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C830000u, 0);
  *(_QWORD *)result = &off_24C8E2F30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C830000u, 0);
  *(_QWORD *)result = &off_24C8E2F30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetPowerDownReq_SDK::ARI_IBINetPowerDownReq_SDK(AriSdk::ARI_IBINetPowerDownReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2F30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2F30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetPowerDownReq_SDK::~ARI_IBINetPowerDownReq_SDK(AriSdk::ARI_IBINetPowerDownReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2F30;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetPowerDownReq_SDK::~ARI_IBINetPowerDownReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetPowerDownReq_SDK::pack(AriSdk::ARI_IBINetPowerDownReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetPowerDownReq_SDK::unpack(AriSdk::ARI_IBINetPowerDownReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1DE958(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetPowerDownReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetPowerDownReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478347264;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetPowerDownCnfCb_SDK::ARI_IBINetPowerDownCnfCb_SDK(AriSdk::ARI_IBINetPowerDownCnfCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D030000u, 0);
  *(_QWORD *)result = &off_24C8E2F68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D030000u, 0);
  *(_QWORD *)result = &off_24C8E2F68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetPowerDownCnfCb_SDK::ARI_IBINetPowerDownCnfCb_SDK(AriSdk::ARI_IBINetPowerDownCnfCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2F68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2F68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetPowerDownCnfCb_SDK::~ARI_IBINetPowerDownCnfCb_SDK(AriSdk::ARI_IBINetPowerDownCnfCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E2F68;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetPowerDownCnfCb_SDK::~ARI_IBINetPowerDownCnfCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetPowerDownCnfCb_SDK::pack(AriSdk::ARI_IBINetPowerDownCnfCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetPowerDownCnfCb_SDK::unpack(AriSdk::ARI_IBINetPowerDownCnfCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1DEBCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetPowerDownCnfCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetPowerDownCnfCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 486735872;
}

double AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK::ARI_IBINetPreferredNssaiInfoReq_SDK(AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C938000u, 0);
  *(_QWORD *)v1 = &off_24C8E2FA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C938000u, 0);
  *(_QWORD *)v1 = &off_24C8E2FA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK::ARI_IBINetPreferredNssaiInfoReq_SDK(AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2FA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E2FA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK::~ARI_IBINetPreferredNssaiInfoReq_SDK(AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2FA0;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK::~ARI_IBINetPreferredNssaiInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK::pack(AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK::unpack(AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  char *v6;
  char *v7;
  unint64_t v8;
  size_t v9;
  void **v10;
  unint64_t v11;
  const char *v12;
  void **v13;
  void *v14;
  unint64_t v16;
  BOOL v17;
  void *__p[2];
  char v19;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v16 = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x560uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1376, &v17, &v16);
  if (!(_DWORD)v3 && v17)
  {
    if (v16 >= 0xAC)
    {
      v8 = v16 / 0xAC;
      v9 = 172 * (v16 / 0xAC);
      v6 = (char *)operator new(v9);
      v7 = &v6[172 * v8];
      memcpy(v6, v5, v9);
    }
    else
    {
      v6 = 0;
      v7 = 0;
    }
    v10 = (void **)((char *)this + 72);
    v11 = 0x82FA0BE82FA0BE83 * ((v7 - v6) >> 2);
    if (v11 < 9)
    {
      v14 = *v10;
      if (*v10)
      {
        *((_QWORD *)this + 10) = v14;
        operator delete(v14);
        *v10 = 0;
        *((_QWORD *)this + 10) = 0;
        *((_QWORD *)this + 11) = 0;
      }
      *((_QWORD *)this + 9) = v6;
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v7;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v19 >= 0)
        v13 = __p;
      else
        v13 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v12, v13, 360, v10, v11, 8);
      if (v19 < 0)
        operator delete(__p[0]);
      if (v6)
        operator delete(v6);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C80244C9791);
  return v3;
}

void sub_20E1DF044(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80244C9791);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetPreferredNssaiInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479428608;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK::ARI_IBINetPreferredNssaiInfoRspCb_SDK(AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D138000u, 0);
  *(_QWORD *)result = &off_24C8E2FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D138000u, 0);
  *(_QWORD *)result = &off_24C8E2FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK::ARI_IBINetPreferredNssaiInfoRspCb_SDK(AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E2FD8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK::~ARI_IBINetPreferredNssaiInfoRspCb_SDK(AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E2FD8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK::~ARI_IBINetPreferredNssaiInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK::pack(AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK::unpack(AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1DF3E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetPreferredNssaiInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487817216;
}

double AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK(AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D860000u, 0);
  *(_QWORD *)v1 = &off_24C8E3010;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D860000u, 0);
  *(_QWORD *)v1 = &off_24C8E3010;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK(AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3010;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3010;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK::~ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK(AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E3010;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40117FECB1);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40117FECB1);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4000313F17);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK::~ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK::pack(AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x64uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x64uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK::unpack(AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  _OWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v10 = 0;
  v6 = (_OWORD *)operator new();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  *((_DWORD *)v6 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 100, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40117FECB1);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetPlmnNameInfo_V1>::operator=<IBINetPlmnNameInfo_V1&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40117FECB1);
  }
  v9 = 0;
  v7 = (_OWORD *)operator new();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  *((_DWORD *)v7 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 100, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<IBINetPlmnNameInfo_V1>::operator=<IBINetPlmnNameInfo_V1&,void>((uint64_t *)this + 11, (uint64_t)v7);
  MEMORY[0x212BB9B60](v7, 0x1000C40117FECB1);
  return v3;
}

void sub_20E1DF914(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40117FECB1);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRegisteredPlmnNameIndCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495321088;
}

double AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK::ARI_IBINetRegistrationInfoIndCb_SDK(AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D808000u, 0);
  *(_QWORD *)v1 = &off_24C8E3048;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D808000u, 0);
  *(_QWORD *)v1 = &off_24C8E3048;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  return result;
}

double AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK::ARI_IBINetRegistrationInfoIndCb_SDK(AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3048;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3048;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  return result;
}

void AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK::~ARI_IBINetRegistrationInfoIndCb_SDK(AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)this = &off_24C8E3048;
  v2 = *((_QWORD *)this + 33);
  *((_QWORD *)this + 33) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 32);
  *((_QWORD *)this + 32) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 31);
  *((_QWORD *)this + 31) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C403E1C8BA9);
  v5 = *((_QWORD *)this + 30);
  *((_QWORD *)this + 30) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 29);
  *((_QWORD *)this + 29) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4000313F17);
  v12 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  v16 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  v17 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  v18 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v18)
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  v19 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v19)
    MEMORY[0x212BB9B60](v19, 0x1000C403E1C8BA9);
  v20 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  v21 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  v22 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  v23 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  v24 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C4052888210);
  v25 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4052888210);
  v26 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v26)
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  v27 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK::~ARI_IBINetRegistrationInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK::pack(AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  const void *v26;
  const void *v27;
  const void *v28;
  const void *v29;
  const void *v30;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 0xCuLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v15, 4uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v17, 4uLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v18, 4uLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v19, 4uLL, 0), !(_DWORD)result))
                              {
                                v20 = (const void *)*((_QWORD *)this + 23);
                                if (!v20
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v20, 4uLL, 0), !(_DWORD)result))
                                {
                                  v21 = (const void *)*((_QWORD *)this + 24);
                                  if (!v21
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v21, 8uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v22 = (const void *)*((_QWORD *)this + 25);
                                    if (!v22
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v22, 4uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v23 = (const void *)*((_QWORD *)this + 26);
                                      if (!v23
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 25, v23, 4uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v24 = (const void *)*((_QWORD *)this + 27);
                                        if (!v24
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v24, 4uLL, 0),
                                              !(_DWORD)result))
                                        {
                                          v25 = (const void *)*((_QWORD *)this + 28);
                                          if (!v25
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v25, 1uLL, 0),
                                                !(_DWORD)result))
                                          {
                                            v26 = (const void *)*((_QWORD *)this + 29);
                                            if (!v26
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 28, v26, 1uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v27 = (const void *)*((_QWORD *)this + 30);
                                              if (!v27
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v27, 4uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v28 = (const void *)*((_QWORD *)this + 31);
                                                if (!v28
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v28, 0xCuLL, 0), !(_DWORD)result))
                                                {
                                                  v29 = (const void *)*((_QWORD *)this + 32);
                                                  if (!v29
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 31, v29, 4uLL, 0), !(_DWORD)result))
                                                  {
                                                    v30 = (const void *)*((_QWORD *)this + 33);
                                                    if (!v30
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 32, v30, 4uLL, 0), !(_DWORD)result))
                                                    {
                                                      result = 0;
                                                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK::unpack(AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  _DWORD *v16;
  _DWORD *v17;
  _DWORD *v18;
  _DWORD *v19;
  _QWORD *v20;
  _DWORD *v21;
  _DWORD *v22;
  _DWORD *v23;
  _BYTE *v24;
  _BYTE *v25;
  _DWORD *v26;
  _DWORD *v27;
  _DWORD *v28;
  _DWORD *v29;
  BOOL v31;

  v31 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v31, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v31;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v31 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v31 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v31 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v31 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v31 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v31 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v31 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v31 = 0;
  v12 = (_DWORD *)operator new();
  *(_QWORD *)v12 = 0;
  v12[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 12, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 16, (uint64_t)v12);
    MEMORY[0x212BB9B60](v12, 0x1000C403E1C8BA9);
  }
  v31 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v31 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v14, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v31 = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v15, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  v31 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v16, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  v31 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v17, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  v31 = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v18, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 22, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  v31 = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v19, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 23, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  v31 = 0;
  v20 = (_QWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v20, 8, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 24, v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4000313F17);
  }
  v31 = 0;
  v21 = (_DWORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v21, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 25, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  }
  v31 = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 25, v22, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 26, v22);
    MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  }
  v31 = 0;
  v23 = (_DWORD *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v23, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 27, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  }
  v31 = 0;
  v24 = (_BYTE *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v24, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 28, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
  }
  v31 = 0;
  v25 = (_BYTE *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 28, v25, 1, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 29, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
  }
  v31 = 0;
  v26 = (_DWORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v26, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 30, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  }
  v31 = 0;
  v27 = (_DWORD *)operator new();
  *(_QWORD *)v27 = 0;
  v27[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v27, 12, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v27, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 31, (uint64_t)v27);
    MEMORY[0x212BB9B60](v27, 0x1000C403E1C8BA9);
  }
  v31 = 0;
  v28 = (_DWORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 31, v28, 4, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 32, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C4052888210);
  }
  v31 = 0;
  v29 = (_DWORD *)operator new();
  *v29 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 32, v29, 4, &v31, 0);
  if (!(_DWORD)v3 && v31)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 33, v29);
  MEMORY[0x212BB9B60](v29, 0x1000C4052888210);
  return v3;
}

void sub_20E1E10F4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetRegistrationInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 494960640;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetECBMReq_SDK::ARI_IBINetSetECBMReq_SDK(AriSdk::ARI_IBINetSetECBMReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C908000u, 0);
  *(_QWORD *)result = &off_24C8E3080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C908000u, 0);
  *(_QWORD *)result = &off_24C8E3080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetECBMReq_SDK::ARI_IBINetSetECBMReq_SDK(AriSdk::ARI_IBINetSetECBMReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3080;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetSetECBMReq_SDK::~ARI_IBINetSetECBMReq_SDK(AriSdk::ARI_IBINetSetECBMReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E3080;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSetECBMReq_SDK::~ARI_IBINetSetECBMReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSetECBMReq_SDK::pack(AriSdk::ARI_IBINetSetECBMReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSetECBMReq_SDK::unpack(AriSdk::ARI_IBINetSetECBMReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E1540(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSetECBMReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSetECBMReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479232000;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetECBMRspCb_SDK::ARI_IBINetSetECBMRspCb_SDK(AriSdk::ARI_IBINetSetECBMRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D108000u, 0);
  *(_QWORD *)result = &off_24C8E30B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D108000u, 0);
  *(_QWORD *)result = &off_24C8E30B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetECBMRspCb_SDK::ARI_IBINetSetECBMRspCb_SDK(AriSdk::ARI_IBINetSetECBMRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E30B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E30B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetSetECBMRspCb_SDK::~ARI_IBINetSetECBMRspCb_SDK(AriSdk::ARI_IBINetSetECBMRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E30B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSetECBMRspCb_SDK::~ARI_IBINetSetECBMRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSetECBMRspCb_SDK::pack(AriSdk::ARI_IBINetSetECBMRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSetECBMRspCb_SDK::unpack(AriSdk::ARI_IBINetSetECBMRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E189C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSetECBMRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSetECBMRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487620608;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetECBMIndCb_SDK::ARI_IBINetSetECBMIndCb_SDK(AriSdk::ARI_IBINetSetECBMIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D908000u, 0);
  *(_QWORD *)result = &off_24C8E30F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D908000u, 0);
  *(_QWORD *)result = &off_24C8E30F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetECBMIndCb_SDK::ARI_IBINetSetECBMIndCb_SDK(AriSdk::ARI_IBINetSetECBMIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E30F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E30F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetSetECBMIndCb_SDK::~ARI_IBINetSetECBMIndCb_SDK(AriSdk::ARI_IBINetSetECBMIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E30F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSetECBMIndCb_SDK::~ARI_IBINetSetECBMIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSetECBMIndCb_SDK::pack(AriSdk::ARI_IBINetSetECBMIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSetECBMIndCb_SDK::unpack(AriSdk::ARI_IBINetSetECBMIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E1BF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSetECBMIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSetECBMIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 496009216;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK::ARI_IBINetSetSatelliteSystemConfigReq_SDK(AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C958000u, 0);
  *(_QWORD *)result = &off_24C8E3128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C958000u, 0);
  *(_QWORD *)result = &off_24C8E3128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK::ARI_IBINetSetSatelliteSystemConfigReq_SDK(AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3128;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK::~ARI_IBINetSetSatelliteSystemConfigReq_SDK(AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E3128;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK::~ARI_IBINetSetSatelliteSystemConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK::pack(AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK::unpack(AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E1F54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSetSatelliteSystemConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479559680;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK(AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D158000u, 0);
  *(_QWORD *)result = &off_24C8E3160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D158000u, 0);
  *(_QWORD *)result = &off_24C8E3160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK(AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3160;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK::~ARI_IBINetSetSatelliteSystemConfigRspCb_SDK(AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E3160;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK::~ARI_IBINetSetSatelliteSystemConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK::pack(AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK::unpack(AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E22B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSetSatelliteSystemConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487948288;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK::ARI_IBINetSetSystemSelectionPreferenceReq_SDK(AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C900000u, 0);
  *(_QWORD *)result = &off_24C8E3198;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C900000u, 0);
  *(_QWORD *)result = &off_24C8E3198;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK::ARI_IBINetSetSystemSelectionPreferenceReq_SDK(AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3198;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3198;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK::~ARI_IBINetSetSystemSelectionPreferenceReq_SDK(AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E3198;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK::~ARI_IBINetSetSystemSelectionPreferenceReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK::pack(AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK::unpack(AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1E26E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSetSystemSelectionPreferenceReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479199232;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK(AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D100000u, 0);
  *(_QWORD *)result = &off_24C8E31D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D100000u, 0);
  *(_QWORD *)result = &off_24C8E31D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK(AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E31D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E31D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK::~ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK(AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E31D0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK::~ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK::pack(AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK::unpack(AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E2A40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSetSystemSelectionPreferenceRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487587840;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceSingleShotFdReq_SDK::ARI_IBINetIceSingleShotFdReq_SDK(AriSdk::ARI_IBINetIceSingleShotFdReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C850000u, 0);
  *(_QWORD *)result = &off_24C8E3208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C850000u, 0);
  *(_QWORD *)result = &off_24C8E3208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetIceSingleShotFdReq_SDK::ARI_IBINetIceSingleShotFdReq_SDK(AriSdk::ARI_IBINetIceSingleShotFdReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetIceSingleShotFdReq_SDK::~ARI_IBINetIceSingleShotFdReq_SDK(AriSdk::ARI_IBINetIceSingleShotFdReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E3208;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetIceSingleShotFdReq_SDK::~ARI_IBINetIceSingleShotFdReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetIceSingleShotFdReq_SDK::pack(AriSdk::ARI_IBINetIceSingleShotFdReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetIceSingleShotFdReq_SDK::unpack(AriSdk::ARI_IBINetIceSingleShotFdReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E2D90(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetIceSingleShotFdReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetIceSingleShotFdReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478478336;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSingleShotFdRspCb_SDK::ARI_IBINetSingleShotFdRspCb_SDK(AriSdk::ARI_IBINetSingleShotFdRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D050000u, 0);
  *(_QWORD *)result = &off_24C8E3240;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D050000u, 0);
  *(_QWORD *)result = &off_24C8E3240;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetSingleShotFdRspCb_SDK::ARI_IBINetSingleShotFdRspCb_SDK(AriSdk::ARI_IBINetSingleShotFdRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3240;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3240;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBINetSingleShotFdRspCb_SDK::~ARI_IBINetSingleShotFdRspCb_SDK(AriSdk::ARI_IBINetSingleShotFdRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E3240;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetSingleShotFdRspCb_SDK::~ARI_IBINetSingleShotFdRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetSingleShotFdRspCb_SDK::pack(AriSdk::ARI_IBINetSingleShotFdRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetSingleShotFdRspCb_SDK::unpack(AriSdk::ARI_IBINetSingleShotFdRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1E31FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetSingleShotFdRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetSingleShotFdRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 486866944;
}

double AriSdk::ARI_IBINetUeStateIndicationReq_SDK::ARI_IBINetUeStateIndicationReq_SDK(AriSdk::ARI_IBINetUeStateIndicationReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C918000u, 0);
  *(_QWORD *)v1 = &off_24C8E3278;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_QWORD *)v1 + 26) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C918000u, 0);
  *(_QWORD *)v1 = &off_24C8E3278;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_QWORD *)v1 + 26) = 0;
  return result;
}

double AriSdk::ARI_IBINetUeStateIndicationReq_SDK::ARI_IBINetUeStateIndicationReq_SDK(AriSdk::ARI_IBINetUeStateIndicationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3278;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_QWORD *)v3 + 26) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3278;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_QWORD *)v3 + 26) = 0;
  return result;
}

void AriSdk::ARI_IBINetUeStateIndicationReq_SDK::~ARI_IBINetUeStateIndicationReq_SDK(AriSdk::ARI_IBINetUeStateIndicationReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)this = &off_24C8E3278;
  v2 = (void *)*((_QWORD *)this + 24);
  if (v2)
  {
    *((_QWORD *)this + 25) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 20);
  if (v4)
  {
    *((_QWORD *)this + 21) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = (void *)*((_QWORD *)this + 16);
  if (v6)
  {
    *((_QWORD *)this + 17) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = (void *)*((_QWORD *)this + 12);
  if (v8)
  {
    *((_QWORD *)this + 13) = v8;
    operator delete(v8);
  }
  v9 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  v10 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  v12 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetUeStateIndicationReq_SDK::~ARI_IBINetUeStateIndicationReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetUeStateIndicationReq_SDK::pack(AriSdk::ARI_IBINetUeStateIndicationReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;
  const void *v14;
  _BYTE *v15;
  _BYTE *v16;
  const void *v17;
  _BYTE *v18;
  _BYTE *v19;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
            {
              v12 = (_BYTE *)*((_QWORD *)this + 16);
              if (!v12
                || (v13 = (_BYTE *)*((_QWORD *)this + 17), v12 == v13)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, v13 - v12, 0), !(_DWORD)result))
              {
                v14 = (const void *)*((_QWORD *)this + 19);
                if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v14, 1uLL, 0), !(_DWORD)result))
                {
                  v15 = (_BYTE *)*((_QWORD *)this + 20);
                  if (!v15
                    || (v16 = (_BYTE *)*((_QWORD *)this + 21), v15 == v16)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, v16 - v15, 0), !(_DWORD)result))
                  {
                    v17 = (const void *)*((_QWORD *)this + 23);
                    if (!v17 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v17, 1uLL, 0), !(_DWORD)result))
                    {
                      v18 = (_BYTE *)*((_QWORD *)this + 24);
                      if (!v18
                        || (v19 = (_BYTE *)*((_QWORD *)this + 25), v18 == v19)
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v18, v19 - v18, 0), !(_DWORD)result))
                      {
                        result = 0;
                        *a2 = (AriMsg *)*((_QWORD *)this + 6);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetUeStateIndicationReq_SDK::unpack(AriSdk::ARI_IBINetUeStateIndicationReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _WORD *v7;
  void *v8;
  _BYTE *v9;
  _OWORD *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _OWORD *v14;
  __n128 __p;
  uint64_t v17;
  size_t __sz;
  BOOL v19;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0x1F40uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 8000, &v19, &__sz);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,8000ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  *((_QWORD *)v10 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 40, &v19, &__sz);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(&__p, v10, (uint64_t)v10 + 4 * (__sz >> 2), __sz >> 2);
    AriSdk::TlvArray<unsigned int,10ul>::operator=((std::vector<int> *)((char *)this + 128), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v10, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 19, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v12 = (_BYTE *)operator new[]();
  *(_WORD *)v12 = 0;
  v12[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 3, &v19, &__sz);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v12, (uint64_t)&v12[__sz], __sz);
    AriSdk::TlvArray<unsigned char,3ul>::operator=((std::vector<int> *)((char *)this + 160), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 23, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v14 = (_OWORD *)operator new[]();
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  v14[5] = 0u;
  v14[6] = 0u;
  v14[7] = 0u;
  v14[8] = 0u;
  v14[9] = 0u;
  v14[10] = 0u;
  v14[11] = 0u;
  v14[12] = 0u;
  v14[13] = 0u;
  v14[14] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v14, 240, &v19, &__sz);
  if (!(_DWORD)v3 && v19)
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v14, (uint64_t)v14 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,240ul>::operator=((std::vector<int> *)this + 8, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v14, 0x1000C8077774924);
  return v3;
}

void sub_20E1E3E24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,3ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 4)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 3);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1E3FDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,240ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xF1)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 240);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1E40B4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBINetUeStateIndicationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetUeStateIndicationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479297536;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK::ARI_IBINetUeStateIndicationRspCb_SDK(AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D118000u, 0);
  *(_QWORD *)result = &off_24C8E32B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D118000u, 0);
  *(_QWORD *)result = &off_24C8E32B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK::ARI_IBINetUeStateIndicationRspCb_SDK(AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E32B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E32B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK::~ARI_IBINetUeStateIndicationRspCb_SDK(AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E32B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK::~ARI_IBINetUeStateIndicationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK::pack(AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK::unpack(AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E43FC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBINetUeStateIndicationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487686144;
}

double AriSdk::ARI_IBIP2PMessageIndCb_SDK::ARI_IBIP2PMessageIndCb_SDK(AriSdk::ARI_IBIP2PMessageIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D840000u, 0);
  *(_QWORD *)v1 = &off_24C8E32E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D840000u, 0);
  *(_QWORD *)v1 = &off_24C8E32E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIP2PMessageIndCb_SDK::ARI_IBIP2PMessageIndCb_SDK(AriSdk::ARI_IBIP2PMessageIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E32E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E32E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIP2PMessageIndCb_SDK::~ARI_IBIP2PMessageIndCb_SDK(AriSdk::ARI_IBIP2PMessageIndCb_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8E32E8;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 11);
  if (v3)
  {
    *((_QWORD *)this + 12) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIP2PMessageIndCb_SDK::~ARI_IBIP2PMessageIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIP2PMessageIndCb_SDK::pack(AriSdk::ARI_IBIP2PMessageIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIP2PMessageIndCb_SDK::unpack(AriSdk::ARI_IBIP2PMessageIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  void *v7;
  _DWORD *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0xBB8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 3000, &v13, &__sz);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v7, (uint64_t)v7 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3000ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1E4A30(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,3000ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xBB9)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 3000);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1E4B78(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIP2PMessageIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIP2PMessageIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 495190016;
}

double AriSdk::ARI_IBIP2PMsgPushReq_SDK::ARI_IBIP2PMsgPushReq_SDK(AriSdk::ARI_IBIP2PMsgPushReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8F8000u, 0);
  *(_QWORD *)v1 = &off_24C8E3320;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8F8000u, 0);
  *(_QWORD *)v1 = &off_24C8E3320;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIP2PMsgPushReq_SDK::ARI_IBIP2PMsgPushReq_SDK(AriSdk::ARI_IBIP2PMsgPushReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3320;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3320;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIP2PMsgPushReq_SDK::~ARI_IBIP2PMsgPushReq_SDK(AriSdk::ARI_IBIP2PMsgPushReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E3320;
  v2 = (void *)*((_QWORD *)this + 13);
  if (v2)
  {
    *((_QWORD *)this + 14) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIP2PMsgPushReq_SDK::~ARI_IBIP2PMsgPushReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIP2PMsgPushReq_SDK::pack(AriSdk::ARI_IBIP2PMsgPushReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  _BYTE *v10;
  _BYTE *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (_BYTE *)*((_QWORD *)this + 13);
            if (!v10
              || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, v11 - v10, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIP2PMsgPushReq_SDK::unpack(AriSdk::ARI_IBIP2PMsgPushReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _DWORD *v7;
  _WORD *v8;
  void *v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v9 = (void *)operator new[]();
  bzero(v9, 0xBB8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 3000, &v14, &__sz);
  if (!(_DWORD)v3 && v14)
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v9, (uint64_t)v9 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3000ul>::operator=((std::vector<int> *)((char *)this + 104), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v9, 0x1000C8077774924);
  return v3;
}

void sub_20E1E5260(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIP2PMsgPushReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIP2PMsgPushReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479166464;
}

double AriSdk::ARI_IBIP2PMsgPushRspCb_SDK::ARI_IBIP2PMsgPushRspCb_SDK(AriSdk::ARI_IBIP2PMsgPushRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D0F8000u, 0);
  *(_QWORD *)v1 = &off_24C8E3358;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1D0F8000u, 0);
  *(_QWORD *)v1 = &off_24C8E3358;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIP2PMsgPushRspCb_SDK::ARI_IBIP2PMsgPushRspCb_SDK(AriSdk::ARI_IBIP2PMsgPushRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3358;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3358;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIP2PMsgPushRspCb_SDK::~ARI_IBIP2PMsgPushRspCb_SDK(AriSdk::ARI_IBIP2PMsgPushRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8E3358;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIP2PMsgPushRspCb_SDK::~ARI_IBIP2PMsgPushRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIP2PMsgPushRspCb_SDK::pack(AriSdk::ARI_IBIP2PMsgPushRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIP2PMsgPushRspCb_SDK::unpack(AriSdk::ARI_IBIP2PMsgPushRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  void **v7;
  _BYTE *v8;
  void *v9;
  const char *v10;
  BOOL *v11;
  void *v12;
  void *__p;
  _BYTE *v15;
  uint64_t v16;
  size_t __sz;
  BOOL v18;
  BOOL v19[8];
  char v20;

  v19[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v19, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v19[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, v19, 0);
  if ((_DWORD)v3 || !v19[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 40, &v18, &__sz);
  if (!(_DWORD)v3 && v18)
  {
    v15 = 0;
    v16 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    v7 = (void **)((char *)this + 80);
    v9 = __p;
    v8 = v15;
    if ((unint64_t)(v15 - (_BYTE *)__p) < 0x29)
    {
      v12 = *v7;
      if (*v7)
      {
        *((_QWORD *)this + 11) = v12;
        operator delete(v12);
        *v7 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
        v9 = __p;
        v8 = v15;
      }
      *((_QWORD *)this + 10) = v9;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v16;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v19);
      if (v20 >= 0)
        v11 = v19;
      else
        v11 = *(BOOL **)v19;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v10, v11, 360, (char *)this + 80, v15 - (_BYTE *)__p, 40);
      if (v20 < 0)
        operator delete(*(void **)v19);
      if (__p)
      {
        v15 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E1E57E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIP2PMsgPushRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIP2PMsgPushRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487555072;
}

double AriSdk::ARI_IBIP2PProximityStatusReq_SDK::ARI_IBIP2PProximityStatusReq_SDK(AriSdk::ARI_IBIP2PProximityStatusReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8A0000u, 0);
  *(_QWORD *)v1 = &off_24C8E3390;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8A0000u, 0);
  *(_QWORD *)v1 = &off_24C8E3390;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIP2PProximityStatusReq_SDK::ARI_IBIP2PProximityStatusReq_SDK(AriSdk::ARI_IBIP2PProximityStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3390;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3390;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIP2PProximityStatusReq_SDK::~ARI_IBIP2PProximityStatusReq_SDK(AriSdk::ARI_IBIP2PProximityStatusReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8E3390;
  v2 = (void *)*((_QWORD *)this + 14);
  if (v2)
  {
    *((_QWORD *)this + 15) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 10);
  if (v4)
  {
    *((_QWORD *)this + 11) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIP2PProximityStatusReq_SDK::~ARI_IBIP2PProximityStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIP2PProximityStatusReq_SDK::pack(AriSdk::ARI_IBIP2PProximityStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (_BYTE *)*((_QWORD *)this + 14);
          if (!v11
            || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, v12 - v11, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIP2PProximityStatusReq_SDK::unpack(AriSdk::ARI_IBIP2PProximityStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  _OWORD *v8;
  void **v9;
  _BYTE *v10;
  void *v11;
  const char *v12;
  void *p_c;
  void *v14;
  void *__p;
  _BYTE *v17;
  uint64_t v18;
  size_t __sz;
  BOOL v20;
  std::vector<int> __c;

  LOBYTE(__c.__begin_) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__c.__begin_) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__c.__begin_) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__sz) = 0;
  __p = (void *)0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  *((_DWORD *)v6 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 100, (BOOL *)&__sz, (unint64_t *)&__p);
  if ((_DWORD)v3 || !(_BYTE)__sz)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(&__c, 0, sizeof(__c));
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__c, v6, (uint64_t)__p + (_QWORD)v6, (size_t)__p);
    AriSdk::TlvArray<unsigned char,100ul>::operator=((std::vector<int> *)((char *)this + 80), (__n128 *)&__c);
    if (__c.__begin_)
    {
      __c.__end_ = __c.__begin_;
      operator delete(__c.__begin_);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  LOBYTE(__c.__begin_) = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v20 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_OWORD *)operator new[]();
  *v8 = 0u;
  v8[1] = 0u;
  *(_OWORD *)((char *)v8 + 26) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 42, &v20, &__sz);
  if (!(_DWORD)v3 && v20)
  {
    v17 = 0;
    v18 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    v9 = (void **)((char *)this + 112);
    v11 = __p;
    v10 = v17;
    if ((unint64_t)(v17 - (_BYTE *)__p) < 0x2B)
    {
      v14 = *v9;
      if (*v9)
      {
        *((_QWORD *)this + 15) = v14;
        operator delete(v14);
        *v9 = 0;
        *((_QWORD *)this + 15) = 0;
        *((_QWORD *)this + 16) = 0;
        v11 = __p;
        v10 = v17;
      }
      *((_QWORD *)this + 14) = v11;
      *((_QWORD *)this + 15) = v10;
      *((_QWORD *)this + 16) = v18;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)&__c);
      if (SHIBYTE(__c.__end_cap_.__value_) >= 0)
        p_c = &__c;
      else
        p_c = __c.__begin_;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v12, p_c, 360, (char *)this + 112, v17 - (_BYTE *)__p, 42);
      if (SHIBYTE(__c.__end_cap_.__value_) < 0)
        operator delete(__c.__begin_);
      if (__p)
      {
        v17 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E1E5F48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIP2PProximityStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIP2PProximityStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478806016;
}

AriSdk::MsgBase *AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK::ARI_IBIP2PProximityStatusRspCb_SDK(AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0A0000u, 0);
  *(_QWORD *)result = &off_24C8E33C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0A0000u, 0);
  *(_QWORD *)result = &off_24C8E33C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK::ARI_IBIP2PProximityStatusRspCb_SDK(AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E33C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E33C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK::~ARI_IBIP2PProximityStatusRspCb_SDK(AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E33C8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK::~ARI_IBIP2PProximityStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK::pack(AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK::unpack(AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E6310(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIP2PProximityStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487194624;
}

double AriSdk::ARI_IBISendApacsDataReq_SDK::ARI_IBISendApacsDataReq_SDK(AriSdk::ARI_IBISendApacsDataReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C888000u, 0);
  *(_QWORD *)v1 = &off_24C8E3400;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C888000u, 0);
  *(_QWORD *)v1 = &off_24C8E3400;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  return result;
}

double AriSdk::ARI_IBISendApacsDataReq_SDK::ARI_IBISendApacsDataReq_SDK(AriSdk::ARI_IBISendApacsDataReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3400;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3400;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  return result;
}

void AriSdk::ARI_IBISendApacsDataReq_SDK::~ARI_IBISendApacsDataReq_SDK(AriSdk::ARI_IBISendApacsDataReq_SDK *this)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C8E3400;
  v2 = (void *)*((_QWORD *)this + 23);
  if (v2)
  {
    *((_QWORD *)this + 24) = v2;
    operator delete(v2);
  }
  v3 = (void *)*((_QWORD *)this + 20);
  if (v3)
  {
    *((_QWORD *)this + 21) = v3;
    operator delete(v3);
  }
  v4 = (void *)*((_QWORD *)this + 17);
  if (v4)
  {
    *((_QWORD *)this + 18) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = (void *)*((_QWORD *)this + 10);
  if (v9)
  {
    *((_QWORD *)this + 11) = v9;
    operator delete(v9);
  }
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendApacsDataReq_SDK::~ARI_IBISendApacsDataReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendApacsDataReq_SDK::pack(AriSdk::ARI_IBISendApacsDataReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 1uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, 4uLL, 0), !(_DWORD)result))
              {
                v14 = (_BYTE *)*((_QWORD *)this + 17);
                if (!v14
                  || (v15 = (_BYTE *)*((_QWORD *)this + 18), v14 == v15)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v14, v15 - v14, 0), !(_DWORD)result))
                {
                  v16 = (_BYTE *)*((_QWORD *)this + 20);
                  if (!v16
                    || (v17 = (_BYTE *)*((_QWORD *)this + 21), v16 == v17)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v16, v17 - v16, 0), !(_DWORD)result))
                  {
                    v18 = (_BYTE *)*((_QWORD *)this + 23);
                    if (!v18
                      || (v19 = (_BYTE *)*((_QWORD *)this + 24), v18 == v19)
                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v18, v19 - v18, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendApacsDataReq_SDK::unpack(AriSdk::ARI_IBISendApacsDataReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  _DWORD *v16;
  _BYTE *v17;
  _BYTE *v18;
  _DWORD *v19;
  void *v20;
  char *v21;
  char *v22;
  unint64_t v23;
  size_t v24;
  void **v25;
  unint64_t v26;
  const char *v27;
  void **v28;
  void *v29;
  _OWORD *v30;
  unint64_t v31;
  char *v32;
  char *v33;
  char *v34;
  size_t v35;
  void **v36;
  const char *v37;
  void **v38;
  void *v39;
  _OWORD *v40;
  unint64_t v42;
  BOOL v43;
  void *__p[2];
  uint64_t v45;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v43 = 0;
  v42 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x1590uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 5520, &v43, &v42);
  if ((_DWORD)v3 || !v43)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8021D48A7CLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v42 >= 0x1CC)
    {
      v9 = v42 / 0x1CC;
      v10 = 460 * (v42 / 0x1CC);
      v7 = (char *)operator new(v10);
      v8 = &v7[460 * v9];
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0x2A4BAFDC61F2A4BBLL * ((v8 - v7) >> 2);
    if (v12 < 0xD)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v45 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, (char *)this + 80, v12, 12);
      if (SHIBYTE(v45) < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8021D48A7CLL);
  }
  LOBYTE(__p[0]) = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v16, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_BYTE *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_BYTE *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v19, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  v43 = 0;
  v42 = 0xAAAAAAAAAAAAAAAALL;
  v20 = (void *)operator new[]();
  bzero(v20, 0xD20uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v20, 3360, &v43, &v42);
  if ((_DWORD)v3 || !v43)
  {
    MEMORY[0x212BB9B48](v20, 0x1000C807A21453ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v42 >= 0x118)
    {
      v23 = v42 / 0x118;
      v24 = 280 * (v42 / 0x118);
      v21 = (char *)operator new(v24);
      v22 = &v21[280 * v23];
      memcpy(v21, v20, v24);
    }
    else
    {
      v21 = 0;
      v22 = 0;
    }
    v25 = (void **)((char *)this + 136);
    v26 = 0xAF8AF8AF8AF8AF8BLL * ((v22 - v21) >> 3);
    if (v26 < 0xD)
    {
      v29 = *v25;
      if (*v25)
      {
        *((_QWORD *)this + 18) = v29;
        operator delete(v29);
        *v25 = 0;
        *((_QWORD *)this + 18) = 0;
        *((_QWORD *)this + 19) = 0;
      }
      *((_QWORD *)this + 17) = v21;
      *((_QWORD *)this + 18) = v22;
      *((_QWORD *)this + 19) = v22;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v45 >= 0)
        v28 = __p;
      else
        v28 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v27, v28, 360, (char *)this + 136, v26, 12);
      if (SHIBYTE(v45) < 0)
        operator delete(__p[0]);
      if (v21)
        operator delete(v21);
    }
    MEMORY[0x212BB9B48](v20, 0x1000C807A21453ELL);
  }
  v43 = 0;
  v42 = 0xAAAAAAAAAAAAAAAALL;
  v30 = (_OWORD *)operator new[]();
  *v30 = 0u;
  v30[1] = 0u;
  v30[2] = 0u;
  v30[3] = 0u;
  v30[4] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v30, 80, &v43, &v42);
  if ((_DWORD)v3 || !v43)
  {
    MEMORY[0x212BB9B48](v30, 0x1000C805D3D83E9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v31 = v42;
    if (v42 >= 8)
    {
      v35 = v42 & 0xFFFFFFFFFFFFFFF8;
      v32 = (char *)operator new(v42 & 0xFFFFFFFFFFFFFFF8);
      v34 = &v32[8 * (v31 >> 3)];
      memcpy(v32, v30, v35);
      v33 = &v32[v35];
    }
    else
    {
      v32 = 0;
      v33 = 0;
      v34 = 0;
    }
    v36 = (void **)((char *)this + 160);
    if ((unint64_t)(v33 - v32) < 0x51)
    {
      v39 = *v36;
      if (*v36)
      {
        *((_QWORD *)this + 21) = v39;
        operator delete(v39);
        *v36 = 0;
        *((_QWORD *)this + 21) = 0;
        *((_QWORD *)this + 22) = 0;
      }
      *((_QWORD *)this + 20) = v32;
      *((_QWORD *)this + 21) = v33;
      *((_QWORD *)this + 22) = v34;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v45 >= 0)
        v38 = __p;
      else
        v38 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v37, v38, 360, (char *)this + 160, (v33 - v32) >> 3, 10);
      if (SHIBYTE(v45) < 0)
        operator delete(__p[0]);
      if (v32)
        operator delete(v32);
    }
    MEMORY[0x212BB9B48](v30, 0x1000C805D3D83E9);
  }
  v43 = 0;
  v42 = 0xAAAAAAAAAAAAAAAALL;
  v40 = (_OWORD *)operator new[]();
  *v40 = 0u;
  v40[1] = 0u;
  v40[2] = 0u;
  v40[3] = 0u;
  v40[4] = 0u;
  v40[5] = 0u;
  v40[6] = 0u;
  v40[7] = 0u;
  v40[8] = 0u;
  v40[9] = 0u;
  v40[10] = 0u;
  v40[11] = 0u;
  *((_QWORD *)v40 + 24) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v40, 200, &v43, &v42);
  if (!(_DWORD)v3 && v43)
  {
    __p[1] = 0;
    v45 = 0;
    __p[0] = 0;
    std::vector<IBINetPssiCdmaEvdoInfo>::__init_with_size[abi:ne180100]<IBINetPssiCdmaEvdoInfo*,IBINetPssiCdmaEvdoInfo*>(__p, v40, (uint64_t)v40 + 20 * (v42 / 0x14), v42 / 0x14);
    AriSdk::TlvArray<IBINetPssiCdmaEvdoInfo,10ul>::operator=((uint64_t)this + 184, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
  }
  MEMORY[0x212BB9B48](v40, 0x1000C800881FABELL);
  return v3;
}

void sub_20E1E70C8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;
  uint64_t v22;

  if (a21 < 0)
    operator delete(__p);
  if (v21)
    operator delete(v21);
  MEMORY[0x212BB9B48](v22, 0x1000C805D3D83E9);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::TlvArray<IBINetPssiCdmaEvdoInfo,10ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if (0xCCCCCCCCCCCCCCCDLL * ((v4 - *a2) >> 2) < 0xB)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0xCCCCCCCCCCCCCCCDLL * ((a2[1] - *a2) >> 2), 10);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E1E7324(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBISendApacsDataReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendApacsDataReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478707712;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendApacsDataRspCb_SDK::ARI_IBISendApacsDataRspCb_SDK(AriSdk::ARI_IBISendApacsDataRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D088000u, 0);
  *(_QWORD *)result = &off_24C8E3438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D088000u, 0);
  *(_QWORD *)result = &off_24C8E3438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendApacsDataRspCb_SDK::ARI_IBISendApacsDataRspCb_SDK(AriSdk::ARI_IBISendApacsDataRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISendApacsDataRspCb_SDK::~ARI_IBISendApacsDataRspCb_SDK(AriSdk::ARI_IBISendApacsDataRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E3438;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendApacsDataRspCb_SDK::~ARI_IBISendApacsDataRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendApacsDataRspCb_SDK::pack(AriSdk::ARI_IBISendApacsDataRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendApacsDataRspCb_SDK::unpack(AriSdk::ARI_IBISendApacsDataRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1E7598(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISendApacsDataRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendApacsDataRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487096320;
}

double AriSdk::ARI_IBISendApacsDataReq_V2_SDK::ARI_IBISendApacsDataReq_V2_SDK(AriSdk::ARI_IBISendApacsDataReq_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C930000u, 0);
  *(_QWORD *)v1 = &off_24C8E3470;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C930000u, 0);
  *(_QWORD *)v1 = &off_24C8E3470;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBISendApacsDataReq_V2_SDK::ARI_IBISendApacsDataReq_V2_SDK(AriSdk::ARI_IBISendApacsDataReq_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3470;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E3470;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBISendApacsDataReq_V2_SDK::~ARI_IBISendApacsDataReq_V2_SDK(AriSdk::ARI_IBISendApacsDataReq_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8E3470;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = (void *)*((_QWORD *)this + 10);
  if (v6)
  {
    *((_QWORD *)this + 11) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendApacsDataReq_V2_SDK::~ARI_IBISendApacsDataReq_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendApacsDataReq_V2_SDK::pack(AriSdk::ARI_IBISendApacsDataReq_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 1uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendApacsDataReq_V2_SDK::unpack(AriSdk::ARI_IBISendApacsDataReq_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  _DWORD *v16;
  _BYTE *v17;
  _BYTE *v18;
  _DWORD *v19;
  unint64_t v21;
  BOOL v22;
  void *__p[2];
  char v24;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v22 = 0;
  v21 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x3660uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 13920, &v22, &v21);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C80C71592C9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v21 >= 0x570)
    {
      v9 = v21 / 0x570;
      v10 = 1392 * (v21 / 0x570);
      v7 = (char *)operator new(v10);
      v8 = &v7[1392 * v9];
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0x66FD0EB66FD0EB67 * ((v8 - v7) >> 4);
    if (v12 < 0xB)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v24 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, (char *)this + 80, v12, 10);
      if (v24 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C80C71592C9);
  }
  LOBYTE(__p[0]) = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v16, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_BYTE *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_BYTE *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v19, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v19);
  MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  return v3;
}

void sub_20E1E7E48(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISendApacsDataReq_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendApacsDataReq_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479395840;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK::ARI_IBISendApacsDataRspCb_V2_SDK(AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D130000u, 0);
  *(_QWORD *)result = &off_24C8E34A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D130000u, 0);
  *(_QWORD *)result = &off_24C8E34A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK::ARI_IBISendApacsDataRspCb_V2_SDK(AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E34A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E34A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK::~ARI_IBISendApacsDataRspCb_V2_SDK(AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E34A8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK::~ARI_IBISendApacsDataRspCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK::pack(AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK::unpack(AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E8218(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendApacsDataRspCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487784448;
}

double AriSdk::ARI_IBISendPreferredListReq_SDK::ARI_IBISendPreferredListReq_SDK(AriSdk::ARI_IBISendPreferredListReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8E8000u, 0);
  *(_QWORD *)v1 = &off_24C8E34E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x1C8E8000u, 0);
  *(_QWORD *)v1 = &off_24C8E34E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISendPreferredListReq_SDK::ARI_IBISendPreferredListReq_SDK(AriSdk::ARI_IBISendPreferredListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E34E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E34E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISendPreferredListReq_SDK::~ARI_IBISendPreferredListReq_SDK(AriSdk::ARI_IBISendPreferredListReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E34E0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4055DB4192);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendPreferredListReq_SDK::~ARI_IBISendPreferredListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendPreferredListReq_SDK::pack(AriSdk::ARI_IBISendPreferredListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0xC0CuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendPreferredListReq_SDK::unpack(AriSdk::ARI_IBISendPreferredListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void *v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0xC0CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 3084, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4055DB4192);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0xC0CuLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4055DB4192);
    MEMORY[0x212BB9B60](v5, 0x1000C4055DB4192);
  }
  v12 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 1, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v11 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 1, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  return v3;
}

void sub_20E1E8768(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISendPreferredListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendPreferredListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479100928;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendPreferredListRspCb_SDK::ARI_IBISendPreferredListRspCb_SDK(AriSdk::ARI_IBISendPreferredListRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0E8000u, 0);
  *(_QWORD *)result = &off_24C8E3518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0E8000u, 0);
  *(_QWORD *)result = &off_24C8E3518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendPreferredListRspCb_SDK::ARI_IBISendPreferredListRspCb_SDK(AriSdk::ARI_IBISendPreferredListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3518;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISendPreferredListRspCb_SDK::~ARI_IBISendPreferredListRspCb_SDK(AriSdk::ARI_IBISendPreferredListRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E3518;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendPreferredListRspCb_SDK::~ARI_IBISendPreferredListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendPreferredListRspCb_SDK::pack(AriSdk::ARI_IBISendPreferredListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendPreferredListRspCb_SDK::unpack(AriSdk::ARI_IBISendPreferredListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E8AF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISendPreferredListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendPreferredListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487489536;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK::ARI_IBISendPreferredPlmnVersionReq_SDK(AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8F0000u, 0);
  *(_QWORD *)result = &off_24C8E3550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8F0000u, 0);
  *(_QWORD *)result = &off_24C8E3550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK::ARI_IBISendPreferredPlmnVersionReq_SDK(AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3550;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK::~ARI_IBISendPreferredPlmnVersionReq_SDK(AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E3550;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK::~ARI_IBISendPreferredPlmnVersionReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK::pack(AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK::unpack(AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E8E48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendPreferredPlmnVersionReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 479133696;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK::ARI_IBISendPreferredPlmnVersionRspCb_SDK(AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0F0000u, 0);
  *(_QWORD *)result = &off_24C8E3588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0F0000u, 0);
  *(_QWORD *)result = &off_24C8E3588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK::ARI_IBISendPreferredPlmnVersionRspCb_SDK(AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E3588;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK::~ARI_IBISendPreferredPlmnVersionRspCb_SDK(AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E3588;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK::~ARI_IBISendPreferredPlmnVersionRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK::pack(AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK::unpack(AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1E9198(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISendPreferredPlmnVersionRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487522304;
}

AriSdk::MsgBase *AriSdk::ARI_IBISetRtcEpochTimeReq_SDK::ARI_IBISetRtcEpochTimeReq_SDK(AriSdk::ARI_IBISetRtcEpochTimeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8B8000u, 0);
  *(_QWORD *)result = &off_24C8E35C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1C8B8000u, 0);
  *(_QWORD *)result = &off_24C8E35C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISetRtcEpochTimeReq_SDK::ARI_IBISetRtcEpochTimeReq_SDK(AriSdk::ARI_IBISetRtcEpochTimeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E35C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E35C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISetRtcEpochTimeReq_SDK::~ARI_IBISetRtcEpochTimeReq_SDK(AriSdk::ARI_IBISetRtcEpochTimeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E35C0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISetRtcEpochTimeReq_SDK::~ARI_IBISetRtcEpochTimeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISetRtcEpochTimeReq_SDK::pack(AriSdk::ARI_IBISetRtcEpochTimeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISetRtcEpochTimeReq_SDK::unpack(AriSdk::ARI_IBISetRtcEpochTimeReq_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 8, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  }
  v7 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 8, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  return v3;
}

void sub_20E1E94F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISetRtcEpochTimeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISetRtcEpochTimeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 478904320;
}

AriSdk::MsgBase *AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK::ARI_IBISetRtcEpochTimeRspCb_SDK(AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0B8000u, 0);
  *(_QWORD *)result = &off_24C8E35F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x1D0B8000u, 0);
  *(_QWORD *)result = &off_24C8E35F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK::ARI_IBISetRtcEpochTimeRspCb_SDK(AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E35F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E35F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK::~ARI_IBISetRtcEpochTimeRspCb_SDK(AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E35F8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK::~ARI_IBISetRtcEpochTimeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK::pack(AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK::unpack(AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1E9778(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISetRtcEpochTimeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 487292928;
}

_QWORD *std::vector<IBINetPlmn_V1>::__init_with_size[abi:ne180100]<IBINetPlmn_V1*,IBINetPlmn_V1*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(108 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 108 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E1E983C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(_QWORD *result, const void *a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (a4)
  {
    v6 = result;
    result = std::vector<unsigned int>::__vallocate[abi:ne180100](result, a4);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20E1E98B4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

char *std::vector<unsigned int>::__vallocate[abi:ne180100](_QWORD *a1, unint64_t a2)
{
  char *result;
  uint64_t v4;

  if (a2 >> 62)
    std::vector<char>::__throw_length_error[abi:ne180100]();
  result = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<int>>((uint64_t)(a1 + 2), a2);
  *a1 = result;
  a1[1] = result;
  a1[2] = &result[4 * v4];
  return result;
}

_QWORD *std::vector<IBINetPssiCdmaEvdoInfo>::__init_with_size[abi:ne180100]<IBINetPssiCdmaEvdoInfo*,IBINetPssiCdmaEvdoInfo*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(20 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 20 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E1E998C(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t Ari::AriClient::create@<X0>(void ***a1@<X8>)
{
  const char *v3;
  const char *v4;
  const char *v5;
  const char *v6;
  void **v7;
  std::__shared_weak_count *v8;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t v12;
  unint64_t *p_shared_weak_owners;
  unint64_t v14;
  unint64_t v15;
  unint64_t *v16;
  unint64_t v17;
  unint64_t v18;
  const char *v20;
  void **v21;
  void *v22;
  void *__p[2];
  char v24;

  v3 = getprogname();
  if (strncmp(v3, "CommCenter", 0x10uLL))
  {
    v4 = getprogname();
    if (strncmp(v4, "CommCenter-asan", 0x10uLL))
    {
      v5 = getprogname();
      if (strncmp(v5, "basebandd", 0x10uLL))
      {
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "create", (uint64_t)__p);
        if (v24 >= 0)
          v7 = __p;
        else
          v7 = (void **)__p[0];
        Ari::Log((Ari *)0x20, "(%s:%d) Creating XPC client", v6, v7, 38);
        if (v24 < 0)
          operator delete(__p[0]);
        *a1 = (void **)0xAAAAAAAAAAAAAAAALL;
        a1[1] = (void **)0xAAAAAAAAAAAAAAAALL;
        v8 = (std::__shared_weak_count *)operator new(0x40uLL);
        v8->__shared_owners_ = 0;
        p_shared_owners = (unint64_t *)&v8->__shared_owners_;
        v8->__shared_weak_owners_ = 0;
        v8->__vftable = (std::__shared_weak_count_vtbl *)&off_24C8E3FF8;
        v10 = v8 + 1;
        Ari::AriClientXpc::AriClientXpc((Ari::AriClientXpc *)&v8[1]);
        v11 = (std::__shared_weak_count *)v8[2].__vftable;
        if (v11)
        {
          if (v11->__shared_owners_ != -1)
          {
LABEL_22:
            *a1 = (void **)&v10->__vftable;
            a1[1] = (void **)&v8->__vftable;
            return ((uint64_t (*)(std::__shared_weak_count *))v8[1].~__shared_weak_count)(v10);
          }
          do
            v12 = __ldxr(p_shared_owners);
          while (__stxr(v12 + 1, p_shared_owners));
          p_shared_weak_owners = (unint64_t *)&v8->__shared_weak_owners_;
          do
            v14 = __ldxr(p_shared_weak_owners);
          while (__stxr(v14 + 1, p_shared_weak_owners));
          v8[1].__shared_weak_owners_ = (uint64_t)v10;
          v8[2].__vftable = (std::__shared_weak_count_vtbl *)v8;
          std::__shared_weak_count::__release_weak(v11);
        }
        else
        {
          do
            v15 = __ldxr(p_shared_owners);
          while (__stxr(v15 + 1, p_shared_owners));
          v16 = (unint64_t *)&v8->__shared_weak_owners_;
          do
            v17 = __ldxr(v16);
          while (__stxr(v17 + 1, v16));
          v8[1].__shared_weak_owners_ = (uint64_t)v10;
          v8[2].__vftable = (std::__shared_weak_count_vtbl *)v8;
        }
        do
          v18 = __ldaxr(p_shared_owners);
        while (__stlxr(v18 - 1, p_shared_owners));
        if (!v18)
        {
          ((void (*)(std::__shared_weak_count *))v8->__on_zero_shared)(v8);
          std::__shared_weak_count::__release_weak(v8);
        }
        goto LABEL_22;
      }
    }
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "create", (uint64_t)__p);
  if (v24 >= 0)
    v21 = __p;
  else
    v21 = (void **)__p[0];
  Ari::Log((Ari *)0x20, "(%s:%d) Creating GCD client", v20, v21, 31);
  if (v24 < 0)
    operator delete(__p[0]);
  *a1 = (void **)0xAAAAAAAAAAAAAAAALL;
  a1[1] = (void **)0xAAAAAAAAAAAAAAAALL;
  v22 = operator new(0x78uLL);
  *((_QWORD *)v22 + 1) = 0;
  *((_QWORD *)v22 + 2) = 0;
  *(_QWORD *)v22 = &off_24C8E3FA8;
  *a1 = Ari::AriClientGcd::AriClientGcd((void **)v22 + 3);
  a1[1] = (void **)v22;
  return (**((uint64_t (***)(void))v22 + 3))();
}

void sub_20E1E9BE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  uint64_t v17;

  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v17);
  _Unwind_Resume(a1);
}

Ari::AriClient *Ari::AriClient::AriClient(Ari::AriClient *this)
{
  NSObject *v2;
  dispatch_queue_t v3;

  *(_QWORD *)this = &unk_24C8E3D68;
  *((_QWORD *)this + 1) = 0;
  v2 = dispatch_queue_attr_make_with_qos_class(0, QOS_CLASS_DEFAULT, 0);
  v3 = dispatch_queue_create("AriHostIPC", v2);
  *((_QWORD *)this + 1) = v3;
  AriOsa::SWTrap(v3 == 0, (uint64_t)"ipcQueue == nullptr", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", (const char *)0x34);
  return this;
}

void Ari::AriClient::~AriClient(Ari::AriClient *this)
{
  NSObject *v1;

  *(_QWORD *)this = &unk_24C8E3D68;
  v1 = *((_QWORD *)this + 1);
  if (v1)
    dispatch_release(v1);
}

void **Ari::AriClientGcd::AriClientGcd(void **this)
{
  void *v2;

  *(_QWORD *)Ari::AriClient::AriClient((Ari::AriClient *)this) = &off_24C8E3DE0;
  v2 = dlopen("/usr/lib/libARIServer.dylib", 1);
  this[11] = v2;
  AriOsa::SWTrap(v2 == 0, (uint64_t)"rtlibHandle == NULL", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", (const char *)0x54);
  this[2] = dlsym(this[11], "AriRuntimeRegisterClient");
  this[3] = dlsym(this[11], "AriRuntimeDeregisterClient");
  this[4] = dlsym(this[11], "AriRuntimeSendRaw");
  this[5] = dlsym(this[11], "AriRuntimeRegisterIndication");
  this[6] = dlsym(this[11], "AriRuntimeRegisterAllIndications");
  this[7] = dlsym(this[11], "AriRuntimePushAllIndications");
  this[8] = dlsym(this[11], "AriRuntimeDeregisterIndication");
  this[9] = dlsym(this[11], "AriRuntimeNotifyAck");
  this[10] = dlsym(this[11], "AriRuntimeReportError");
  return this;
}

void sub_20E1E9DF4(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  NSObject *v3;

  *v1 = &unk_24C8E3D68;
  v3 = v1[1];
  if (v3)
    dispatch_release(v3);
  _Unwind_Resume(exception_object);
}

void Ari::AriClientGcd::~AriClientGcd(Ari::AriClientGcd *this)
{
  NSObject *v2;

  *(_QWORD *)this = &off_24C8E3DE0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *((_OWORD *)this + 3) = 0u;
  *((_OWORD *)this + 4) = 0u;
  *((_QWORD *)this + 10) = 0;
  dlclose(*((void **)this + 11));
  *((_QWORD *)this + 11) = 0;
  *(_QWORD *)this = &unk_24C8E3D68;
  v2 = *((_QWORD *)this + 1);
  if (v2)
    dispatch_release(v2);
}

{
  Ari::AriClientGcd::~AriClientGcd(this);
  JUMPOUT(0x212BB9B60);
}

void __clang_call_terminate(void *a1)
{
  __cxa_begin_catch(a1);
  std::terminate();
}

uint64_t Ari::AriClientGcd::registerClient(Ari::AriClientGcd *this, const char *a2, unsigned int *a3)
{
  uint64_t (*v3)(const char *, unsigned int *, _QWORD);

  v3 = (uint64_t (*)(const char *, unsigned int *, _QWORD))*((_QWORD *)this + 2);
  if (v3)
    return v3(a2, a3, *((_QWORD *)this + 1));
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::deregisterClient(Ari::AriClientGcd *this, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);

  v2 = (uint64_t (*)(uint64_t))*((_QWORD *)this + 3);
  if (v2)
    return v2(a2);
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::sendRaw(Ari::AriClientGcd *this, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(unsigned __int8 *, uint64_t, uint64_t);

  v4 = (uint64_t (*)(unsigned __int8 *, uint64_t, uint64_t))*((_QWORD *)this + 4);
  if (v4)
    return v4(a2, a3, a4);
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::regIndication(Ari::AriClientGcd *this, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)this + 5);
  if (v3)
    return v3(a2, a3);
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::regAllIndications(Ari::AriClientGcd *this, uint64_t a2)
{
  uint64_t (*v2)(uint64_t);

  v2 = (uint64_t (*)(uint64_t))*((_QWORD *)this + 6);
  if (v2)
    return v2(a2);
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::pushAllIndications(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 56);
  if (v3)
    return v3(a2, a3);
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::deregIndication(Ari::AriClientGcd *this, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t, uint64_t);

  v3 = (uint64_t (*)(uint64_t, uint64_t))*((_QWORD *)this + 8);
  if (v3)
    return v3(a2, a3);
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::sendNotifyAck(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 72);
  if (v4)
    return v4(a2, a3, a4);
  else
    return 0xFFFFFFFFLL;
}

uint64_t Ari::AriClientGcd::clientReportFatalErr(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t (*v4)(uint64_t, uint64_t, std::string *);
  uint64_t v7;
  std::string __p;

  v4 = *(uint64_t (**)(uint64_t, uint64_t, std::string *))(a1 + 80);
  if (!v4)
    return 0xFFFFFFFFLL;
  if (*(char *)(a4 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a4, *(_QWORD *)(a4 + 8));
  else
    __p = *(std::string *)a4;
  v7 = v4(a2, a3, &__p);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  return v7;
}

void sub_20E1EA034(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

Ari::AriClientXpc *Ari::AriClientXpc::AriClientXpc(Ari::AriClientXpc *this)
{
  Ari::AriClient *v2;
  xpc_connection_t mach_service;

  v2 = Ari::AriClient::AriClient(this);
  *((_QWORD *)v2 + 2) = 0;
  *((_QWORD *)v2 + 3) = 0;
  *(_QWORD *)v2 = &off_24C8E3E58;
  *((_QWORD *)v2 + 4) = 0;
  mach_service = xpc_connection_create_mach_service("com.apple.commcenter.ari.rt.xpc", *((dispatch_queue_t *)v2 + 1), 2uLL);
  *((_QWORD *)this + 4) = mach_service;
  AriOsa::SWTrap(mach_service == 0, (uint64_t)"connection == nullptr", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", (const char *)0xC6);
  return this;
}

void sub_20E1EA0C0(_Unwind_Exception *exception_object)
{
  _QWORD *v1;
  std::__shared_weak_count *v3;
  NSObject *v4;

  v3 = (std::__shared_weak_count *)v1[3];
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  *v1 = &unk_24C8E3D68;
  v4 = v1[1];
  if (v4)
    dispatch_release(v4);
  _Unwind_Resume(exception_object);
}

void Ari::AriClientXpc::~AriClientXpc(Ari::AriClientXpc *this)
{
  _xpc_connection_s *v2;
  std::__shared_weak_count *v3;
  NSObject *v4;

  *(_QWORD *)this = &off_24C8E3E58;
  v2 = (_xpc_connection_s *)*((_QWORD *)this + 4);
  if (v2)
  {
    xpc_connection_cancel(v2);
    xpc_release(*((xpc_object_t *)this + 4));
    *((_QWORD *)this + 4) = 0;
  }
  v3 = (std::__shared_weak_count *)*((_QWORD *)this + 3);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
  *(_QWORD *)this = &unk_24C8E3D68;
  v4 = *((_QWORD *)this + 1);
  if (v4)
    dispatch_release(v4);
}

{
  Ari::AriClientXpc::~AriClientXpc(this);
  JUMPOUT(0x212BB9B60);
}

void Ari::AriClientXpc::init(Ari::AriClientXpc *this)
{
  std::__shared_weak_count *v2;
  uint64_t v3;
  std::__shared_weak_count *v4;
  std::__shared_weak_count *v5;
  unint64_t *p_shared_weak_owners;
  unint64_t v7;
  unint64_t *p_shared_owners;
  unint64_t v9;
  _xpc_connection_s *v10;
  unint64_t v11;
  _QWORD v12[5];
  std::__shared_weak_count *v13;

  xpc_connection_set_target_queue(*((xpc_connection_t *)this + 4), *((dispatch_queue_t *)this + 1));
  v2 = (std::__shared_weak_count *)*((_QWORD *)this + 3);
  if (!v2 || (v3 = *((_QWORD *)this + 2), (v4 = std::__shared_weak_count::lock(v2)) == 0))
    std::__throw_bad_weak_ptr[abi:ne180100]();
  v5 = v4;
  p_shared_weak_owners = (unint64_t *)&v4->__shared_weak_owners_;
  do
    v7 = __ldxr(p_shared_weak_owners);
  while (__stxr(v7 + 1, p_shared_weak_owners));
  p_shared_owners = (unint64_t *)&v4->__shared_owners_;
  do
    v9 = __ldaxr(p_shared_owners);
  while (__stlxr(v9 - 1, p_shared_owners));
  if (!v9)
  {
    ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
    std::__shared_weak_count::__release_weak(v5);
  }
  v10 = (_xpc_connection_s *)*((_QWORD *)this + 4);
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1174405120;
  v12[2] = ___ZN3Ari12AriClientXpc4initEv_block_invoke;
  v12[3] = &__block_descriptor_tmp_0;
  v12[4] = v3;
  v13 = v5;
  do
    v11 = __ldxr(p_shared_weak_owners);
  while (__stxr(v11 + 1, p_shared_weak_owners));
  xpc_connection_set_event_handler(v10, v12);
  xpc_connection_resume(*((xpc_connection_t *)this + 4));
  if (v13)
    std::__shared_weak_count::__release_weak(v13);
  std::__shared_weak_count::__release_weak(v5);
}

void sub_20E1EA288(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  std::__shared_weak_count *v14;

  if (a14)
    std::__shared_weak_count::__release_weak(a14);
  std::__shared_weak_count::__release_weak(v14);
  _Unwind_Resume(a1);
}

void ___ZN3Ari12AriClientXpc4initEv_block_invoke(uint64_t a1, void *a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  int v7;
  size_t v8;
  const char *v9;
  size_t *v10;
  void **v11;
  AriHost *data;
  const char *v13;
  size_t *v14;
  AriHost *v15;
  int uint64;
  int v17;
  uint64_t v18;
  AriHost *v19;
  int v20;
  int int64;
  int v22;
  size_t v23;
  uint64_t v24;
  const char *v25;
  size_t *v26;
  AriHost *v27;
  unint64_t *p_shared_owners;
  unint64_t v29;
  void *__p[2];
  char v31;
  size_t length[2];
  char v33;
  std::__shared_weak_count *v35;

  v3 = *(std::__shared_weak_count **)(a1 + 40);
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v35 = v5;
    if (v5)
    {
      v6 = v5;
      if (*(_QWORD *)(a1 + 32))
      {
        if (MEMORY[0x212BB9F50](a2) == MEMORY[0x24BDACFA0])
        {
          switch(xpc_dictionary_get_uint64(a2, "AriCmd"))
          {
            case 0x2001u:
              length[0] = 0xAAAAAAAAAAAAAAAALL;
              data = (AriHost *)xpc_dictionary_get_data(a2, "AriMsg", length);
              AriHost::ClientInboundRespCB(data, (unsigned __int8 *)length[0]);
              break;
            case 0x2002u:
              length[0] = 0xAAAAAAAAAAAAAAAALL;
              v27 = (AriHost *)xpc_dictionary_get_data(a2, "AriMsg", length);
              AriHost::ClientInboundIndCB(v27, (unsigned __int8 *)length[0]);
              break;
            case 0x2003u:
              uint64 = xpc_dictionary_get_uint64(a2, "AriEvent");
              v17 = xpc_dictionary_get_uint64(a2, "AriCid");
              v18 = xpc_dictionary_get_uint64(a2, "AriToken");
              AriHost::NotifyEventCallback(uint64, v17, v18);
              break;
            case 0x2004u:
              v19 = (AriHost *)xpc_dictionary_get_uint64(a2, "context_id");
              v20 = xpc_dictionary_get_uint64(a2, "AriGmid");
              int64 = xpc_dictionary_get_int64(a2, "AriResult");
              if (v19)
                AriHost::CancelTrx(v19, v20, int64);
              break;
            default:
              AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "init_block_invoke", (uint64_t)length);
              v22 = v33;
              v23 = length[0];
              v24 = xpc_dictionary_get_uint64(a2, "AriCmd");
              v26 = length;
              if (v22 < 0)
                v26 = (size_t *)v23;
              Ari::Log((Ari *)8, "(%s:%d) unknown command 0x%llx", v25, v26, 261, v24);
              goto LABEL_27;
          }
        }
        else if (a2 == (void *)MEMORY[0x24BDACF30])
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "init_block_invoke", (uint64_t)length);
          if (v33 >= 0)
            v14 = length;
          else
            v14 = (size_t *)length[0];
          Ari::Log((Ari *)8, "(%s:%d) XPC connection interrupted", v13, v14, 267);
          if (v33 < 0)
            operator delete((void *)length[0]);
          AriHost::HandleConnectionError(v15);
        }
        else
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "init_block_invoke", (uint64_t)length);
          v7 = v33;
          v8 = length[0];
          asString(a2, (uint64_t)__p);
          v10 = length;
          if (v7 < 0)
            v10 = (size_t *)v8;
          if (v31 >= 0)
            v11 = __p;
          else
            v11 = (void **)__p[0];
          Ari::Log((Ari *)8, "(%s:%d) %s", v9, v10, 272, v11);
          if (v31 < 0)
            operator delete(__p[0]);
LABEL_27:
          if (v33 < 0)
            operator delete((void *)length[0]);
        }
      }
      p_shared_owners = (unint64_t *)&v6->__shared_owners_;
      do
        v29 = __ldaxr(p_shared_owners);
      while (__stlxr(v29 - 1, p_shared_owners));
      if (!v29)
      {
        ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
        std::__shared_weak_count::__release_weak(v6);
      }
    }
  }
}

void sub_20E1EA5C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24)
{
  uint64_t v24;

  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v24 - 64);
  _Unwind_Resume(a1);
}

uint64_t __copy_helper_block_e8_32c43_ZTSNSt3__18weak_ptrIN3Ari12AriClientXpcEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(result + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(result + 40) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 16);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

void __destroy_helper_block_e8_32c43_ZTSNSt3__18weak_ptrIN3Ari12AriClientXpcEEE(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 40);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

uint64_t Ari::AriClientXpc::registerClient(Ari::AriClientXpc *this, char *__s, unsigned int *a3, unsigned int a4)
{
  std::__shared_weak_count *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_weak_owners;
  unint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  xpc_object_t v16;
  _xpc_connection_s *v17;
  NSObject *v18;
  unint64_t v19;
  unint64_t *v20;
  unint64_t v21;
  const char *v22;
  void **v23;
  dispatch_time_t v24;
  const char *v25;
  void **v26;
  uint64_t v27;
  const char *v28;
  void **v29;
  const char *v30;
  void **v31;
  unsigned int v32;
  const char *v33;
  void **v34;
  std::__shared_weak_count *v35;
  unint64_t *v36;
  unint64_t v37;
  std::__shared_weak_count *v38;
  unint64_t *v39;
  unint64_t v40;
  uint64_t handler;
  uint64_t v43;
  void (*v44)(_QWORD *, void *);
  void *v45;
  uint64_t *v46;
  uint64_t v47;
  std::__shared_weak_count *v48;
  char *v49;
  unint64_t v50;
  std::__shared_weak_count *v51;
  void *__p[2];
  char v53;
  unint64_t v54;
  unint64_t v55;
  void *v56[2];
  char v57;
  uint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  int v61;

  v58 = 0;
  v59 = &v58;
  v60 = 0x2000000000;
  v61 = 0;
  if (__s && a3)
  {
    *a3 = 0;
    v54 = 0xAAAAAAAAAAAAAAAALL;
    v55 = 0xAAAAAAAAAAAAAAAALL;
    std::string::basic_string[abi:ne180100]<0>(__p, __s);
    AriDispatch::Semaphore::Create((uint64_t)__p, 0, &v54);
    if (v53 < 0)
      operator delete(__p[0]);
    v8 = (std::__shared_weak_count *)*((_QWORD *)this + 3);
    if (!v8 || (v9 = *((_QWORD *)this + 2), (v10 = std::__shared_weak_count::lock(v8)) == 0))
      std::__throw_bad_weak_ptr[abi:ne180100]();
    v11 = v10;
    p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
    do
      v13 = __ldxr(p_shared_weak_owners);
    while (__stxr(v13 + 1, p_shared_weak_owners));
    p_shared_owners = (unint64_t *)&v10->__shared_owners_;
    do
      v15 = __ldaxr(p_shared_owners);
    while (__stlxr(v15 - 1, p_shared_owners));
    if (!v15)
    {
      ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
      std::__shared_weak_count::__release_weak(v11);
    }
    v16 = xpc_dictionary_create(0, 0, 0);
    xpc_dictionary_set_uint64(v16, "AriCmd", 0x1010uLL);
    xpc_dictionary_set_string(v16, "AriCheckin", __s);
    xpc_dictionary_set_BOOL(v16, "ExpectsReply", 1);
    v17 = (_xpc_connection_s *)*((_QWORD *)this + 4);
    v18 = *((_QWORD *)this + 1);
    handler = MEMORY[0x24BDAC760];
    v43 = 1174405120;
    v44 = ___ZN3Ari12AriClientXpc14registerClientEPKcPjj_block_invoke;
    v45 = &unk_24C8E3EF8;
    v47 = v9;
    v48 = v11;
    do
      v19 = __ldxr(p_shared_weak_owners);
    while (__stxr(v19 + 1, p_shared_weak_owners));
    v46 = &v58;
    v49 = __s;
    v50 = v54;
    v51 = (std::__shared_weak_count *)v55;
    if (v55)
    {
      v20 = (unint64_t *)(v55 + 8);
      do
        v21 = __ldxr(v20);
      while (__stxr(v21 + 1, v20));
    }
    xpc_connection_send_message_with_reply(v17, v16, v18, &handler);
    xpc_release(v16);
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "registerClient", (uint64_t)v56);
    if (v57 >= 0)
      v23 = v56;
    else
      v23 = (void **)v56[0];
    Ari::Log((Ari *)4, "(%s:%d) waiting for registration reply to come back: %s", v22, v23, 324, __s);
    if (v57 < 0)
      operator delete(v56[0]);
    if (a4 == -1)
      v24 = -1;
    else
      v24 = dispatch_time(0, 1000000 * a4);
    if (dispatch_semaphore_wait(*(dispatch_semaphore_t *)(v54 + 40), v24))
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "registerClient", (uint64_t)v56);
      if (v57 >= 0)
        v29 = v56;
      else
        v29 = (void **)v56[0];
      Ari::Log((Ari *)8, "(%s:%d) Timeout waiting for registration response", v28, v29, 328);
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "registerClient", (uint64_t)v56);
      if (v57 >= 0)
        v31 = v56;
      else
        v31 = (void **)v56[0];
      Ari::Log((Ari *)4, "(%s:%d) Received client id 0x%x for %s", v30, v31, 332, *((unsigned int *)v59 + 6), __s, handler, v43, v44, v45, v46, v47);
      if (v57 < 0)
        operator delete(v56[0]);
      v32 = *((_DWORD *)v59 + 6);
      if (v32 + 1 > 1)
      {
        v27 = 0;
        *a3 = v32;
LABEL_50:
        v35 = v51;
        if (v51)
        {
          v36 = (unint64_t *)&v51->__shared_owners_;
          do
            v37 = __ldaxr(v36);
          while (__stlxr(v37 - 1, v36));
          if (!v37)
          {
            ((void (*)(std::__shared_weak_count *))v35->__on_zero_shared)(v35);
            std::__shared_weak_count::__release_weak(v35);
          }
        }
        if (v48)
          std::__shared_weak_count::__release_weak(v48);
        std::__shared_weak_count::__release_weak(v11);
        v38 = (std::__shared_weak_count *)v55;
        if (v55)
        {
          v39 = (unint64_t *)(v55 + 8);
          do
            v40 = __ldaxr(v39);
          while (__stlxr(v40 - 1, v39));
          if (!v40)
          {
            ((void (*)(std::__shared_weak_count *))v38->__on_zero_shared)(v38);
            std::__shared_weak_count::__release_weak(v38);
          }
        }
        goto LABEL_62;
      }
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "registerClient", (uint64_t)v56);
      if (v57 >= 0)
        v34 = v56;
      else
        v34 = (void **)v56[0];
      Ari::Log((Ari *)8, "(%s:%d) Invalid cid received: 0x%x", v33, v34, 335, *((unsigned int *)v59 + 6));
    }
    if (v57 < 0)
      operator delete(v56[0]);
    v27 = 0xFFFFFFFFLL;
    goto LABEL_50;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "registerClient", (uint64_t)v56);
  if (v57 >= 0)
    v26 = v56;
  else
    v26 = (void **)v56[0];
  Ari::Log((Ari *)8, "(%s:%d) name(%p) or cid(%p) is NULL", v25, v26, 284, __s, a3);
  if (v57 < 0)
    operator delete(v56[0]);
  v27 = 0xFFFFFFFFLL;
LABEL_62:
  _Block_object_dispose(&v58, 8);
  return v27;
}

void sub_20E1EAB0C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, std::__shared_weak_count *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *__p,uint64_t a24,int a25,__int16 a26,char a27,char a28,char a29)
{
  std::__shared_weak_count *v29;
  uint64_t v30;
  uint64_t v31;

  if (*(char *)(v31 - 113) < 0)
    operator delete(*(void **)(v31 - 136));
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v30);
  if (a19)
    std::__shared_weak_count::__release_weak(a19);
  std::__shared_weak_count::__release_weak(v29);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)&a29);
  _Block_object_dispose((const void *)(v31 - 112), 8);
  _Unwind_Resume(a1);
}

void ___ZN3Ari12AriClientXpc14registerClientEPKcPjj_block_invoke(_QWORD *a1, void *a2)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v5;
  std::__shared_weak_count *v6;
  int v7;
  void **v8;
  uint64_t v9;
  const char *v10;
  void **v11;
  void **v12;
  uint64_t uint64;
  const char *v14;
  void **v15;
  unint64_t *p_shared_owners;
  unint64_t v17;
  void *__p[2];
  char v19;
  void *v20[2];
  char v21;
  std::__shared_weak_count *v23;

  v3 = (std::__shared_weak_count *)a1[6];
  if (v3)
  {
    v5 = std::__shared_weak_count::lock(v3);
    v23 = v5;
    if (v5)
    {
      v6 = v5;
      if (!a1[5])
        goto LABEL_21;
      if (MEMORY[0x212BB9F50](a2) == MEMORY[0x24BDACFA0])
      {
        uint64 = xpc_dictionary_get_uint64(a2, "AriCmd");
        if ((_DWORD)uint64 == 40976)
        {
          *(_DWORD *)(*(_QWORD *)(a1[4] + 8) + 24) = xpc_dictionary_get_uint64(a2, "AriCid");
LABEL_20:
          dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1[8] + 40));
LABEL_21:
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v17 = __ldaxr(p_shared_owners);
          while (__stlxr(v17 - 1, p_shared_owners));
          if (!v17)
          {
            ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
            std::__shared_weak_count::__release_weak(v6);
          }
          return;
        }
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "registerClient_block_invoke", (uint64_t)v20);
        if (v21 >= 0)
          v15 = v20;
        else
          v15 = (void **)v20[0];
        Ari::Log((Ari *)8, "(%s:%d) Unexpected response message 0x%x", v14, v15, 312, uint64);
      }
      else
      {
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "registerClient_block_invoke", (uint64_t)v20);
        v7 = v21;
        v8 = (void **)v20[0];
        v9 = a1[7];
        asString(a2, (uint64_t)__p);
        v11 = v20;
        if (v7 < 0)
          v11 = v8;
        if (v19 >= 0)
          v12 = __p;
        else
          v12 = (void **)__p[0];
        Ari::Log((Ari *)8, "(%s:%d) Registration failed for client %s: %s", v10, v11, 317, v9, v12);
        if (v19 < 0)
          operator delete(__p[0]);
      }
      if (v21 < 0)
        operator delete(v20[0]);
      goto LABEL_20;
    }
  }
}

void sub_20E1EAD98(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, int a15, __int16 a16, char a17, char a18, void *__p, uint64_t a20,int a21,__int16 a22,char a23,char a24,char a25)
{
  if (a24 < 0)
    operator delete(__p);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)&a25);
  _Unwind_Resume(a1);
}

_QWORD *__copy_helper_block_e8_40c43_ZTSNSt3__18weak_ptrIN3Ari12AriClientXpcEEE64c51_ZTSNSt3__110shared_ptrIN11AriDispatch9SemaphoreEEE(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = a2[6];
  result[5] = a2[5];
  result[6] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 16);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  v5 = a2[9];
  result[8] = a2[8];
  result[9] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  return result;
}

void __destroy_helper_block_e8_40c43_ZTSNSt3__18weak_ptrIN3Ari12AriClientXpcEEE64c51_ZTSNSt3__110shared_ptrIN11AriDispatch9SemaphoreEEE(uint64_t a1)
{
  std::__shared_weak_count *v2;

  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](a1 + 64);
  v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

uint64_t Ari::AriClientXpc::deregisterClient(xpc_connection_t *this, uint64_t a2)
{
  const char *v4;
  void **v5;
  xpc_object_t v6;
  void *__p[2];
  char v9;

  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "deregisterClient", (uint64_t)__p);
  if (v9 >= 0)
    v5 = __p;
  else
    v5 = (void **)__p[0];
  Ari::Log((Ari *)0x20, "(%s:%d) deregister cid 0x%x", v4, v5, 348, a2);
  if (v9 < 0)
    operator delete(__p[0]);
  v6 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v6, "AriCmd", 0x1011uLL);
  xpc_dictionary_set_uint64(v6, "AriCid", a2);
  xpc_connection_send_message(this[4], v6);
  xpc_release(v6);
  return 0;
}

void sub_20E1EAF40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t Ari::AriClientXpc::sendRaw(xpc_connection_t *this, AriMsg *a2, unsigned int a3, unsigned int a4)
{
  size_t v7;
  AriMsg *BufHeader;
  uint64_t v9;
  BOOL v10;
  unint64_t v11;
  xpc_object_t v12;
  const char *v14;
  void **v15;
  void *__p[2];
  char v17;

  v7 = a3;
  BufHeader = AriMsg::GetBufHeader(a2, (const unsigned __int8 *)a3);
  if (BufHeader)
  {
    v9 = (unint64_t)*((unsigned int *)BufHeader + 2) >> 17;
    v10 = v9 < 0x100 || v9 == 0;
    v11 = (unint64_t)*((unsigned int *)BufHeader + 2) >> 17;
    if (!v10)
    {
      v12 = xpc_dictionary_create(0, 0, 0);
      xpc_dictionary_set_uint64(v12, "AriCmd", 0x1001uLL);
      xpc_dictionary_set_data(v12, "AriMsg", a2, v7);
      xpc_dictionary_set_uint64(v12, "context_id", v9);
      xpc_dictionary_set_uint64(v12, "AriMsgTO", a4);
      xpc_connection_send_message(this[4], v12);
      xpc_release(v12);
      return 0;
    }
  }
  else
  {
    v11 = 0x8000;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "sendRaw", (uint64_t)__p);
  if (v17 >= 0)
    v15 = __p;
  else
    v15 = (void **)__p[0];
  Ari::Log((Ari *)8, "(%s:%d) Invalid context id 0x%x", v14, v15, 364, v11);
  if (v17 < 0)
    operator delete(__p[0]);
  return 0xFFFFFFFFLL;
}

void sub_20E1EB0A8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t Ari::AriClientXpc::regIndication(xpc_connection_t *this, unsigned int a2, unsigned int a3)
{
  xpc_object_t v6;

  v6 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v6, "AriCmd", 0x1012uLL);
  xpc_dictionary_set_uint64(v6, "AriGmid", a2);
  xpc_dictionary_set_uint64(v6, "AriCid", a3);
  xpc_connection_send_message(this[4], v6);
  xpc_release(v6);
  return 0;
}

uint64_t Ari::AriClientXpc::pushAllIndications(uint64_t a1, unsigned int a2, uint64_t a3)
{
  xpc_object_t v6;
  xpc_object_t v7;
  uint64_t i;
  xpc_object_t v9;

  v6 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v6, "AriCmd", 0x1017uLL);
  xpc_dictionary_set_uint64(v6, "AriCid", a2);
  v7 = xpc_array_create(0, 0);
  for (i = *(_QWORD *)(a3 + 8); i != a3; i = *(_QWORD *)(i + 8))
  {
    v9 = xpc_uint64_create(*(unsigned int *)(i + 16));
    xpc_array_append_value(v7, v9);
    xpc_release(v9);
  }
  xpc_dictionary_set_value(v6, "AriGmidList", v7);
  xpc_release(v7);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), v6);
  xpc_release(v6);
  return 0;
}

uint64_t Ari::AriClientXpc::regAllIndications(xpc_connection_t *this, unsigned int a2)
{
  xpc_object_t v4;

  v4 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v4, "AriCmd", 0x1016uLL);
  xpc_dictionary_set_uint64(v4, "AriCid", a2);
  xpc_connection_send_message(this[4], v4);
  xpc_release(v4);
  return 0;
}

uint64_t Ari::AriClientXpc::deregIndication(xpc_connection_t *this, unsigned int a2, unsigned int a3)
{
  xpc_object_t v6;

  v6 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v6, "AriCmd", 0x1013uLL);
  xpc_dictionary_set_uint64(v6, "AriCid", a3);
  xpc_dictionary_set_uint64(v6, "AriGmid", a2);
  xpc_connection_send_message(this[4], v6);
  xpc_release(v6);
  return 0;
}

uint64_t Ari::AriClientXpc::sendNotifyAck(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  const char *v8;
  const char *v9;
  void **v10;
  xpc_object_t v11;
  void *__p[2];
  char v14;

  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "sendNotifyAck", (uint64_t)__p);
  if (a4 > 8)
    v9 = "UNKNOWN";
  else
    v9 = off_24C8E4038[a4];
  v10 = (void **)__p[0];
  if (v14 >= 0)
    v10 = __p;
  Ari::Log((Ari *)4, "(%s:%d) Sending reply for cid 0x%x event %s", v8, v10, 435, a2, v9);
  if (v14 < 0)
    operator delete(__p[0]);
  v11 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v11, "AriCmd", 0x1014uLL);
  xpc_dictionary_set_uint64(v11, "AriCid", (int)a2);
  xpc_dictionary_set_uint64(v11, "AriEvent", a4);
  xpc_dictionary_set_uint64(v11, "AriToken", a3);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), v11);
  xpc_release(v11);
  return 0;
}

void sub_20E1EB470(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t Ari::AriClientXpc::clientReportFatalErr(uint64_t a1, uint64_t a2, unsigned int a3, const char *a4)
{
  const char *v8;
  void **v9;
  uint64_t *v10;
  xpc_object_t v11;
  void *__p[2];
  char v14;

  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_client.cpp", "clientReportFatalErr", (uint64_t)__p);
  if (v14 >= 0)
    v9 = __p;
  else
    v9 = (void **)__p[0];
  v10 = (uint64_t *)a4;
  if (a4[23] < 0)
    v10 = *(uint64_t **)a4;
  Ari::Log((Ari *)0x20, "(%s:%d) Reporting error for cid 0x%x: %s", v8, v9, 450, a2, v10);
  if (v14 < 0)
    operator delete(__p[0]);
  v11 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_uint64(v11, "AriCmd", 0x1015uLL);
  xpc_dictionary_set_uint64(v11, "AriCid", (int)a2);
  xpc_dictionary_set_uint64(v11, "ErrorType", a3);
  if (a4[23] < 0)
    a4 = *(const char **)a4;
  xpc_dictionary_set_string(v11, "ErrorReason", a4);
  xpc_connection_send_message(*(xpc_connection_t *)(a1 + 32), v11);
  xpc_release(v11);
  return 0;
}

void sub_20E1EB5B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t Ari::AriClientGcd::isRemote(Ari::AriClientGcd *this)
{
  return 0;
}

uint64_t Ari::AriClientXpc::isRemote(Ari::AriClientXpc *this)
{
  return 1;
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  std::string *v5;
  std::string::size_type v6;
  std::string::size_type v7;
  std::string *v8;

  v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8)
      std::string::__throw_length_error[abi:ne180100]();
    v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17)
      v6 = __sz | 7;
    v7 = v6 + 1;
    v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    v5 = v8;
  }
  else
  {
    *((_BYTE *)&this->__r_.__value_.__s + 23) = __sz;
  }
  memmove(v5, __s, __sz + 1);
}

void std::string::__throw_length_error[abi:ne180100]()
{
  std::__throw_length_error[abi:ne180100]("basic_string");
}

_QWORD *std::string::basic_string[abi:ne180100]<0>(_QWORD *a1, char *__s)
{
  size_t v4;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8)
    std::string::__throw_length_error[abi:ne180100]();
  v5 = v4;
  if (v4 >= 0x17)
  {
    v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17)
      v7 = v4 | 7;
    v8 = v7 + 1;
    v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((_BYTE *)a1 + 23) = v4;
    v6 = a1;
    if (!v4)
      goto LABEL_9;
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((_BYTE *)v6 + v5) = 0;
  return a1;
}

void std::__shared_ptr_emplace<Ari::AriClientGcd>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C8E3FA8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<Ari::AriClientGcd>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C8E3FA8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

uint64_t std::__shared_ptr_emplace<Ari::AriClientGcd>::__on_zero_shared(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 8))(a1 + 24);
}

void std::__shared_ptr_emplace<Ari::AriClientXpc>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C8E3FF8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<Ari::AriClientXpc>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C8E3FF8;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

uint64_t std::__shared_ptr_emplace<Ari::AriClientXpc>::__on_zero_shared(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 + 24) + 8))(a1 + 24);
}

void std::__throw_bad_weak_ptr[abi:ne180100]()
{
  _QWORD *exception;

  exception = __cxa_allocate_exception(8uLL);
  *exception = MEMORY[0x24BEDB808] + 16;
  __cxa_throw(exception, MEMORY[0x24BEDB6D8], MEMORY[0x24BEDAC00]);
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK::ARI_CsiIceSecActivationRegisterReq_SDK(AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC838000, 0);
  *(_QWORD *)result = &off_24C8E4090;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC838000, 0);
  *(_QWORD *)result = &off_24C8E4090;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK::ARI_CsiIceSecActivationRegisterReq_SDK(AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4090;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4090;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK::~ARI_CsiIceSecActivationRegisterReq_SDK(AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4090;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK::~ARI_CsiIceSecActivationRegisterReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK::pack(AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 1uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK::unpack(AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK *this)
{
  _BYTE *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_BYTE *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 1, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  return v3;
}

void sub_20E1EBA40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecActivationRegisterReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58490880;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK::ARI_CsiIceSecActivationRegisterRespCb_SDK(AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD038000, 0);
  *(_QWORD *)result = &off_24C8E40C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD038000, 0);
  *(_QWORD *)result = &off_24C8E40C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK::ARI_CsiIceSecActivationRegisterRespCb_SDK(AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E40C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E40C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK::~ARI_CsiIceSecActivationRegisterRespCb_SDK(AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E40C8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK::~ARI_CsiIceSecActivationRegisterRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK::pack(AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK::unpack(AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1EBCC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecActivationRegisterRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50102272;
}

double AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK::ARI_CsiIceSecActivationRegisterIndCb_SDK(AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD838000, 0);
  *(_QWORD *)v1 = &off_24C8E4100;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD838000, 0);
  *(_QWORD *)v1 = &off_24C8E4100;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK::ARI_CsiIceSecActivationRegisterIndCb_SDK(AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4100;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4100;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK::~ARI_CsiIceSecActivationRegisterIndCb_SDK(AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_QWORD *)this = &off_24C8E4100;
  v2 = *((_QWORD *)this + 43);
  *((_QWORD *)this + 43) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 42);
  *((_QWORD *)this + 42) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 41);
  *((_QWORD *)this + 41) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40274DC3F3);
  v5 = *((_QWORD *)this + 40);
  *((_QWORD *)this + 40) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4080B1215BLL);
  v6 = *((_QWORD *)this + 39);
  *((_QWORD *)this + 39) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4080B1215BLL);
  v7 = *((_QWORD *)this + 38);
  *((_QWORD *)this + 38) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 37);
  *((_QWORD *)this + 37) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 36);
  *((_QWORD *)this + 36) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 35);
  *((_QWORD *)this + 35) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40B88D2812);
  v11 = *((_QWORD *)this + 34);
  *((_QWORD *)this + 34) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  v12 = *((_QWORD *)this + 33);
  *((_QWORD *)this + 33) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  v13 = *((_QWORD *)this + 32);
  *((_QWORD *)this + 32) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  v14 = *((_QWORD *)this + 31);
  *((_QWORD *)this + 31) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C40B88D2812);
  v15 = *((_QWORD *)this + 30);
  *((_QWORD *)this + 30) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  v16 = *((_QWORD *)this + 29);
  *((_QWORD *)this + 29) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4077774924);
  v17 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  v18 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v18)
    MEMORY[0x212BB9B60](v18, 0x1000C403E1C8BA9);
  v19 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v19)
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  v20 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v20)
    MEMORY[0x212BB9B60](v20, 0x1000C4077774924);
  v21 = *((_QWORD *)this + 24);
  *((_QWORD *)this + 24) = 0;
  if (v21)
    MEMORY[0x212BB9B60](v21, 0x1000C408DD1DBA6);
  v22 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C408DD1DBA6);
  v23 = *((_QWORD *)this + 22);
  *((_QWORD *)this + 22) = 0;
  if (v23)
    MEMORY[0x212BB9B60](v23, 0x1000C408DD1DBA6);
  v24 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C408DD1DBA6);
  v25 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C408DD1DBA6);
  v26 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v26)
    MEMORY[0x212BB9B60](v26, 0x1000C408DD1DBA6);
  v27 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C408DD1DBA6);
  v28 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v28)
    MEMORY[0x212BB9B60](v28, 0x1000C408DD1DBA6);
  v29 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v29)
    MEMORY[0x212BB9B60](v29, 0x1000C4080B1215BLL);
  v30 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v30)
    MEMORY[0x212BB9B60](v30, 0x1000C4080B1215BLL);
  v31 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v31)
    MEMORY[0x212BB9B60](v31, 0x1000C4077774924);
  v32 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v32)
    MEMORY[0x212BB9B60](v32, 0x1000C4077774924);
  v33 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v33)
    MEMORY[0x212BB9B60](v33, 0x1000C4080B1215BLL);
  v34 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v34)
    MEMORY[0x212BB9B60](v34, 0x1000C40B88D2812);
  v35 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v35)
    MEMORY[0x212BB9B60](v35, 0x1000C40EEF2B9B0);
  v36 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v36)
    MEMORY[0x212BB9B60](v36, 0x1000C40EEF2B9B0);
  v37 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v37)
    MEMORY[0x212BB9B60](v37, 0x1000C4077774924);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK::~ARI_CsiIceSecActivationRegisterIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK::pack(AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  const void *v18;
  const void *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;
  const void *v24;
  const void *v25;
  const void *v26;
  const void *v27;
  const void *v28;
  const void *v29;
  const void *v30;
  const void *v31;
  const void *v32;
  const void *v33;
  const void *v34;
  const void *v35;
  const void *v36;
  const void *v37;
  const void *v38;
  const void *v39;
  const void *v40;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 1uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x82uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x82uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x12uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0xAuLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 0xAuLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 0xAuLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, 0x1AuLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 0x1AuLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 0x1AuLL, 0), !(_DWORD)result))
                        {
                          v17 = (const void *)*((_QWORD *)this + 20);
                          if (!v17
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v17, 0x1AuLL, 0), !(_DWORD)result))
                          {
                            v18 = (const void *)*((_QWORD *)this + 21);
                            if (!v18
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v18, 0x1AuLL, 0), !(_DWORD)result))
                            {
                              v19 = (const void *)*((_QWORD *)this + 22);
                              if (!v19
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v19, 0x1AuLL, 0), !(_DWORD)result))
                              {
                                v20 = (const void *)*((_QWORD *)this + 23);
                                if (!v20
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v20, 0x1AuLL, 0),
                                      !(_DWORD)result))
                                {
                                  v21 = (const void *)*((_QWORD *)this + 24);
                                  if (!v21
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v21, 0x1AuLL, 0),
                                        !(_DWORD)result))
                                  {
                                    v22 = (const void *)*((_QWORD *)this + 25);
                                    if (!v22
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v22, 1uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v23 = (const void *)*((_QWORD *)this + 26);
                                      if (!v23
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v23, 4uLL, 0),
                                            !(_DWORD)result))
                                      {
                                        v24 = (const void *)*((_QWORD *)this + 27);
                                        if (!v24
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v24, 0xCuLL, 0),
                                              !(_DWORD)result))
                                        {
                                          v25 = (const void *)*((_QWORD *)this + 28);
                                          if (!v25
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v25, 1uLL, 0),
                                                !(_DWORD)result))
                                          {
                                            v26 = (const void *)*((_QWORD *)this + 29);
                                            if (!v26
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v26, 1uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v27 = (const void *)*((_QWORD *)this + 30);
                                              if (!v27
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v27, 1uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v28 = (const void *)*((_QWORD *)this + 31);
                                                if (!v28
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v28, 0x12uLL, 0), !(_DWORD)result))
                                                {
                                                  v29 = (const void *)*((_QWORD *)this + 32);
                                                  if (!v29
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 25, v29, 1uLL, 0), !(_DWORD)result))
                                                  {
                                                    v30 = (const void *)*((_QWORD *)this + 33);
                                                    if (!v30
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v30, 1uLL, 0), !(_DWORD)result))
                                                    {
                                                      v31 = (const void *)*((_QWORD *)this + 34);
                                                      if (!v31
                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v31, 1uLL, 0), !(_DWORD)result))
                                                      {
                                                        v32 = (const void *)*((_QWORD *)this + 35);
                                                        if (!v32
                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 28, v32, 0x12uLL, 0), !(_DWORD)result))
                                                        {
                                                          v33 = (const void *)*((_QWORD *)this + 36);
                                                          if (!v33
                                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v33, 1uLL, 0), !(_DWORD)result))
                                                          {
                                                            v34 = (const void *)*((_QWORD *)this + 37);
                                                            if (!v34
                                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v34, 1uLL, 0), !(_DWORD)result))
                                                            {
                                                              v35 = (const void *)*((_QWORD *)this + 38);
                                                              if (!v35
                                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 31, v35, 1uLL, 0), !(_DWORD)result))
                                                              {
                                                                v36 = (const void *)*((_QWORD *)this + 39);
                                                                if (!v36
                                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 32, v36, 0xAuLL, 0), !(_DWORD)result))
                                                                {
                                                                  v37 = (const void *)*((_QWORD *)this + 40);
                                                                  if (!v37
                                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 33, v37, 0xAuLL, 0), !(_DWORD)result))
                                                                  {
                                                                    v38 = (const void *)*((_QWORD *)this + 41);
                                                                    if (!v38
                                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 34, v38, 6uLL, 0), !(_DWORD)result))
                                                                    {
                                                                      v39 = (const void *)*((_QWORD *)this + 42);
                                                                      if (!v39
                                                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 35, v39, 1uLL, 0), !(_DWORD)result))
                                                                      {
                                                                        v40 = (const void *)*((_QWORD *)this + 43);
                                                                        if (!v40
                                                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 36, v40, 1uLL, 0), !(_DWORD)result))
                                                                        {
                                                                          result = 0;
                                                                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK::unpack(AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK *this)
{
  _BYTE *v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _QWORD *v19;
  _WORD *v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  _WORD *v25;
  _WORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  _BYTE *v35;
  _DWORD *v36;
  _DWORD *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  _QWORD *v41;
  _BYTE *v42;
  _BYTE *v43;
  _BYTE *v44;
  _QWORD *v45;
  _BYTE *v46;
  _BYTE *v47;
  _BYTE *v48;
  _WORD *v49;
  _WORD *v50;
  _WORD *v51;
  _BYTE *v52;
  _BYTE *v53;
  BOOL v55;

  v55 = 0;
  v2 = (_BYTE *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 1, &v55, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v55;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  }
  v55 = 0;
  v5 = operator new();
  *(_OWORD *)v5 = 0u;
  *(_OWORD *)(v5 + 16) = 0u;
  *(_OWORD *)(v5 + 32) = 0u;
  *(_OWORD *)(v5 + 48) = 0u;
  *(_OWORD *)(v5 + 64) = 0u;
  *(_OWORD *)(v5 + 80) = 0u;
  *(_OWORD *)(v5 + 96) = 0u;
  *(_OWORD *)(v5 + 112) = 0u;
  *(_WORD *)(v5 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, (void *)v5, 130, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40EEF2B9B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = operator new();
    v7 = *(_OWORD *)(v5 + 112);
    *(_OWORD *)(v6 + 96) = *(_OWORD *)(v5 + 96);
    *(_OWORD *)(v6 + 112) = v7;
    *(_WORD *)(v6 + 128) = *(_WORD *)(v5 + 128);
    v8 = *(_OWORD *)(v5 + 48);
    *(_OWORD *)(v6 + 32) = *(_OWORD *)(v5 + 32);
    *(_OWORD *)(v6 + 48) = v8;
    v9 = *(_OWORD *)(v5 + 80);
    *(_OWORD *)(v6 + 64) = *(_OWORD *)(v5 + 64);
    *(_OWORD *)(v6 + 80) = v9;
    v10 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_OWORD *)(v6 + 16) = v10;
    v11 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40EEF2B9B0);
    MEMORY[0x212BB9B60](v5, 0x1000C40EEF2B9B0);
  }
  v55 = 0;
  v12 = operator new();
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_OWORD *)(v12 + 80) = 0u;
  *(_OWORD *)(v12 + 96) = 0u;
  *(_OWORD *)(v12 + 112) = 0u;
  *(_WORD *)(v12 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, (void *)v12, 130, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40EEF2B9B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = operator new();
    v14 = *(_OWORD *)(v12 + 112);
    *(_OWORD *)(v13 + 96) = *(_OWORD *)(v12 + 96);
    *(_OWORD *)(v13 + 112) = v14;
    *(_WORD *)(v13 + 128) = *(_WORD *)(v12 + 128);
    v15 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(v13 + 48) = v15;
    v16 = *(_OWORD *)(v12 + 80);
    *(_OWORD *)(v13 + 64) = *(_OWORD *)(v12 + 64);
    *(_OWORD *)(v13 + 80) = v16;
    v17 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v12;
    *(_OWORD *)(v13 + 16) = v17;
    v18 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v13;
    if (v18)
      MEMORY[0x212BB9B60](v18, 0x1000C40EEF2B9B0);
    MEMORY[0x212BB9B60](v12, 0x1000C40EEF2B9B0);
  }
  v55 = 0;
  v19 = (_QWORD *)operator new();
  *v19 = 0;
  v19[1] = 0;
  *((_WORD *)v19 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v19, 18, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>((uint64_t *)this + 11, (uint64_t)v19);
    MEMORY[0x212BB9B60](v19, 0x1000C40B88D2812);
  }
  v55 = 0;
  v20 = (_WORD *)operator new();
  *(_QWORD *)v20 = 0;
  v20[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v20, 10, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v21 = operator new();
    *(_QWORD *)v21 = *(_QWORD *)v20;
    *(_WORD *)(v21 + 8) = v20[4];
    v22 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v21;
    if (v22)
      MEMORY[0x212BB9B60](v22, 0x1000C4080B1215BLL);
    MEMORY[0x212BB9B60](v20, 0x1000C4080B1215BLL);
  }
  v55 = 0;
  v23 = (_BYTE *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v23, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4077774924);
  }
  v55 = 0;
  v24 = (_BYTE *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v24, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C4077774924);
  }
  v55 = 0;
  v25 = (_WORD *)operator new();
  *(_QWORD *)v25 = 0;
  v25[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v25, 10, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 15, (uint64_t)v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4080B1215BLL);
  }
  v55 = 0;
  v26 = (_WORD *)operator new();
  *(_QWORD *)v26 = 0;
  v26[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v26, 10, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v26, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 16, (uint64_t)v26);
    MEMORY[0x212BB9B60](v26, 0x1000C4080B1215BLL);
  }
  v55 = 0;
  v27 = (_QWORD *)operator new();
  v27[1] = 0;
  v27[2] = 0;
  *v27 = 0;
  *((_WORD *)v27 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v27, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v27, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 17, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v28 = (_QWORD *)operator new();
  v28[1] = 0;
  v28[2] = 0;
  *v28 = 0;
  *((_WORD *)v28 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v28, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v28, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 18, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v29 = (_QWORD *)operator new();
  v29[1] = 0;
  v29[2] = 0;
  *v29 = 0;
  *((_WORD *)v29 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v29, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v29, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 19, v29);
    MEMORY[0x212BB9B60](v29, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v30 = (_QWORD *)operator new();
  v30[1] = 0;
  v30[2] = 0;
  *v30 = 0;
  *((_WORD *)v30 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v30, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v30, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 20, v30);
    MEMORY[0x212BB9B60](v30, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v31 = (_QWORD *)operator new();
  v31[1] = 0;
  v31[2] = 0;
  *v31 = 0;
  *((_WORD *)v31 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v31, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v31, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 21, v31);
    MEMORY[0x212BB9B60](v31, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v32 = (_QWORD *)operator new();
  v32[1] = 0;
  v32[2] = 0;
  *v32 = 0;
  *((_WORD *)v32 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v32, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v32, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 22, v32);
    MEMORY[0x212BB9B60](v32, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v33 = (_QWORD *)operator new();
  v33[1] = 0;
  v33[2] = 0;
  *v33 = 0;
  *((_WORD *)v33 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v33, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v33, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 23, v33);
    MEMORY[0x212BB9B60](v33, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v34 = (_QWORD *)operator new();
  v34[1] = 0;
  v34[2] = 0;
  *v34 = 0;
  *((_WORD *)v34 + 12) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v34, 26, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v34, 0x1000C408DD1DBA6);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>((uint64_t *)this + 24, v34);
    MEMORY[0x212BB9B60](v34, 0x1000C408DD1DBA6);
  }
  v55 = 0;
  v35 = (_BYTE *)operator new();
  *v35 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v35, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v35, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 25, v35);
    MEMORY[0x212BB9B60](v35, 0x1000C4077774924);
  }
  v55 = 0;
  v36 = (_DWORD *)operator new();
  *v36 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v36, 4, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 26, v36);
    MEMORY[0x212BB9B60](v36, 0x1000C4052888210);
  }
  v55 = 0;
  v37 = (_DWORD *)operator new();
  *(_QWORD *)v37 = 0;
  v37[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v37, 12, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v37, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 27, (uint64_t)v37);
    MEMORY[0x212BB9B60](v37, 0x1000C403E1C8BA9);
  }
  v55 = 0;
  v38 = (_BYTE *)operator new();
  *v38 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v38, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v38, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 28, v38);
    MEMORY[0x212BB9B60](v38, 0x1000C4077774924);
  }
  v55 = 0;
  v39 = (_BYTE *)operator new();
  *v39 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v39, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v39, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 29, v39);
    MEMORY[0x212BB9B60](v39, 0x1000C4077774924);
  }
  v55 = 0;
  v40 = (_BYTE *)operator new();
  *v40 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v40, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v40, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 30, v40);
    MEMORY[0x212BB9B60](v40, 0x1000C4077774924);
  }
  v55 = 0;
  v41 = (_QWORD *)operator new();
  *v41 = 0;
  v41[1] = 0;
  *((_WORD *)v41 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v41, 18, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v41, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>((uint64_t *)this + 31, (uint64_t)v41);
    MEMORY[0x212BB9B60](v41, 0x1000C40B88D2812);
  }
  v55 = 0;
  v42 = (_BYTE *)operator new();
  *v42 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 25, v42, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v42, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 32, v42);
    MEMORY[0x212BB9B60](v42, 0x1000C4077774924);
  }
  v55 = 0;
  v43 = (_BYTE *)operator new();
  *v43 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v43, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v43, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 33, v43);
    MEMORY[0x212BB9B60](v43, 0x1000C4077774924);
  }
  v55 = 0;
  v44 = (_BYTE *)operator new();
  *v44 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v44, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v44, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 34, v44);
    MEMORY[0x212BB9B60](v44, 0x1000C4077774924);
  }
  v55 = 0;
  v45 = (_QWORD *)operator new();
  *v45 = 0;
  v45[1] = 0;
  *((_WORD *)v45 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 28, v45, 18, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v45, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>((uint64_t *)this + 35, (uint64_t)v45);
    MEMORY[0x212BB9B60](v45, 0x1000C40B88D2812);
  }
  v55 = 0;
  v46 = (_BYTE *)operator new();
  *v46 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v46, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v46, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 36, v46);
    MEMORY[0x212BB9B60](v46, 0x1000C4077774924);
  }
  v55 = 0;
  v47 = (_BYTE *)operator new();
  *v47 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v47, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v47, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 37, v47);
    MEMORY[0x212BB9B60](v47, 0x1000C4077774924);
  }
  v55 = 0;
  v48 = (_BYTE *)operator new();
  *v48 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 31, v48, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v48, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 38, v48);
    MEMORY[0x212BB9B60](v48, 0x1000C4077774924);
  }
  v55 = 0;
  v49 = (_WORD *)operator new();
  *(_QWORD *)v49 = 0;
  v49[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 32, v49, 10, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v49, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 39, (uint64_t)v49);
    MEMORY[0x212BB9B60](v49, 0x1000C4080B1215BLL);
  }
  v55 = 0;
  v50 = (_WORD *)operator new();
  *(_QWORD *)v50 = 0;
  v50[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 33, v50, 10, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v50, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 40, (uint64_t)v50);
    MEMORY[0x212BB9B60](v50, 0x1000C4080B1215BLL);
  }
  v55 = 0;
  v51 = (_WORD *)operator new();
  *(_DWORD *)v51 = 0;
  v51[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 34, v51, 6, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v51, 0x1000C40274DC3F3);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsEpsApnAmbr>::operator=<IBICallPsEpsApnAmbr&,void>((uint64_t *)this + 41, (uint64_t)v51);
    MEMORY[0x212BB9B60](v51, 0x1000C40274DC3F3);
  }
  v55 = 0;
  v52 = (_BYTE *)operator new();
  *v52 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 35, v52, 1, &v55, 0);
  if ((_DWORD)v3 || !v55)
  {
    MEMORY[0x212BB9B60](v52, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 42, v52);
    MEMORY[0x212BB9B60](v52, 0x1000C4077774924);
  }
  v55 = 0;
  v53 = (_BYTE *)operator new();
  *v53 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 36, v53, 1, &v55, 0);
  if (!(_DWORD)v3 && v55)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 43, v53);
  MEMORY[0x212BB9B60](v53, 0x1000C4077774924);
  return v3;
}

void sub_20E1EDE4C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_WORD *)(v4 + 16) = *(_WORD *)(a2 + 16);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40B88D2812);
  return a1;
}

uint64_t *AriSdk::Tlv<CsiIceSecIccidType>::operator=<CsiIceSecIccidType&,void>(uint64_t *a1, _OWORD *a2)
{
  _OWORD *v4;
  uint64_t v5;

  v4 = (_OWORD *)operator new();
  *v4 = *a2;
  *(_OWORD *)((char *)v4 + 10) = *(_OWORD *)((char *)a2 + 10);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C408DD1DBA6);
  return a1;
}

BOOL AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecActivationRegisterIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -41713664;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK::ARI_CsiIceSecActivationTicketSetReq_SDK(AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC840000, 0);
  *(_QWORD *)result = &off_24C8E4138;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC840000, 0);
  *(_QWORD *)result = &off_24C8E4138;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK::ARI_CsiIceSecActivationTicketSetReq_SDK(AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4138;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4138;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK::~ARI_CsiIceSecActivationTicketSetReq_SDK(AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4138;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C402E6B90A7);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK::~ARI_CsiIceSecActivationTicketSetReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK::pack(AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x802uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0x802uLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 2050, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0x802uLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C402E6B90A7);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C402E6B90A7);
  return v3;
}

void sub_20E1EE36C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C402E6B90A7);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecActivationTicketSetReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58458112;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK::ARI_CsiIceSecActivationTicketSetRespCb_SDK(AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD040000, 0);
  *(_QWORD *)result = &off_24C8E4170;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD040000, 0);
  *(_QWORD *)result = &off_24C8E4170;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK::ARI_CsiIceSecActivationTicketSetRespCb_SDK(AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4170;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4170;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK::~ARI_CsiIceSecActivationTicketSetRespCb_SDK(AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4170;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK::~ARI_CsiIceSecActivationTicketSetRespCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK::pack(AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK::unpack(AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1EE5E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecActivationTicketSetRespCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50069504;
}

AriSdk::MsgBase *AriSdk::ARI_CheckRestoreCompletedReq_SDK::ARI_CheckRestoreCompletedReq_SDK(AriSdk::ARI_CheckRestoreCompletedReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC858000, 0);
  *(_QWORD *)result = &off_24C8E41A8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC858000, 0);
  *(_QWORD *)result = &off_24C8E41A8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CheckRestoreCompletedReq_SDK::ARI_CheckRestoreCompletedReq_SDK(AriSdk::ARI_CheckRestoreCompletedReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E41A8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E41A8;
  return result;
}

void AriSdk::ARI_CheckRestoreCompletedReq_SDK::~ARI_CheckRestoreCompletedReq_SDK(AriSdk::ARI_CheckRestoreCompletedReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CheckRestoreCompletedReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CheckRestoreCompletedReq_SDK::unpack(AriSdk::ARI_CheckRestoreCompletedReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CheckRestoreCompletedReq_SDK::hasDeclaredGmid(AriSdk::ARI_CheckRestoreCompletedReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58359808;
}

AriSdk::MsgBase *AriSdk::ARI_CheckRestoreCompletedRspCb_SDK::ARI_CheckRestoreCompletedRspCb_SDK(AriSdk::ARI_CheckRestoreCompletedRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD058000, 0);
  *(_QWORD *)result = &off_24C8E41E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD058000, 0);
  *(_QWORD *)result = &off_24C8E41E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CheckRestoreCompletedRspCb_SDK::ARI_CheckRestoreCompletedRspCb_SDK(AriSdk::ARI_CheckRestoreCompletedRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E41E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E41E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_CheckRestoreCompletedRspCb_SDK::~ARI_CheckRestoreCompletedRspCb_SDK(AriSdk::ARI_CheckRestoreCompletedRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E41E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40417DB209);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40417DB209);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CheckRestoreCompletedRspCb_SDK::~ARI_CheckRestoreCompletedRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CheckRestoreCompletedRspCb_SDK::pack(AriSdk::ARI_CheckRestoreCompletedRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x42uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x42uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CheckRestoreCompletedRspCb_SDK::unpack(AriMsg **this)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  AriMsg *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  AriMsg *v13;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = operator new();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_WORD *)(v2 + 64) = 0;
  v3 = AriMsg::unpack(this[6], 1, (void *)v2, 66, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40417DB209);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v5 = operator new();
    v6 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v5 + 32) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v5 + 48) = v6;
    *(_WORD *)(v5 + 64) = *(_WORD *)(v2 + 64);
    v7 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v2;
    *(_OWORD *)(v5 + 16) = v7;
    v8 = this[8];
    this[8] = (AriMsg *)v5;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C40417DB209);
    MEMORY[0x212BB9B60](v2, 0x1000C40417DB209);
  }
  v15 = 0;
  v9 = operator new();
  *(_OWORD *)v9 = 0u;
  *(_OWORD *)(v9 + 16) = 0u;
  *(_OWORD *)(v9 + 32) = 0u;
  *(_OWORD *)(v9 + 48) = 0u;
  *(_WORD *)(v9 + 64) = 0;
  v3 = AriMsg::unpack(this[6], 2, (void *)v9, 66, &v15, 0);
  if (!(_DWORD)v3 && v15)
  {
    v10 = operator new();
    v11 = *(_OWORD *)(v9 + 48);
    *(_OWORD *)(v10 + 32) = *(_OWORD *)(v9 + 32);
    *(_OWORD *)(v10 + 48) = v11;
    *(_WORD *)(v10 + 64) = *(_WORD *)(v9 + 64);
    v12 = *(_OWORD *)(v9 + 16);
    *(_OWORD *)v10 = *(_OWORD *)v9;
    *(_OWORD *)(v10 + 16) = v12;
    v13 = this[9];
    this[9] = (AriMsg *)v10;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C40417DB209);
  }
  MEMORY[0x212BB9B60](v9, 0x1000C40417DB209);
  return v3;
}

void sub_20E1EEB88(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40417DB209);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CheckRestoreCompletedRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CheckRestoreCompletedRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -49971200;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK::ARI_CsiSecCollectScrtBlobReq_SDK(AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC870000, 0);
  *(_QWORD *)result = &off_24C8E4218;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC870000, 0);
  *(_QWORD *)result = &off_24C8E4218;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK::ARI_CsiSecCollectScrtBlobReq_SDK(AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4218;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4218;
  return result;
}

void AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK::~ARI_CsiSecCollectScrtBlobReq_SDK(AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK::unpack(AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecCollectScrtBlobReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58261504;
}

double AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK::ARI_CsiSecCollectScrtBlobRspCb_SDK(AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD070000, 0);
  *(_QWORD *)v1 = &off_24C8E4250;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD070000, 0);
  *(_QWORD *)v1 = &off_24C8E4250;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK::ARI_CsiSecCollectScrtBlobRspCb_SDK(AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4250;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4250;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK::~ARI_CsiSecCollectScrtBlobRspCb_SDK(AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E4250;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK::~ARI_CsiSecCollectScrtBlobRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK::pack(AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK::unpack(AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x1000uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4096, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,4096ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E1EF0C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,4096ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] <= 0x1000)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 4096);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1EF1E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecCollectScrtBlobRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -49872896;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetChipIdReq_SDK::ARI_CsiSecGetChipIdReq_SDK(AriSdk::ARI_CsiSecGetChipIdReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC820000, 0);
  *(_QWORD *)result = &off_24C8E4288;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC820000, 0);
  *(_QWORD *)result = &off_24C8E4288;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetChipIdReq_SDK::ARI_CsiSecGetChipIdReq_SDK(AriSdk::ARI_CsiSecGetChipIdReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4288;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4288;
  return result;
}

void AriSdk::ARI_CsiSecGetChipIdReq_SDK::~ARI_CsiSecGetChipIdReq_SDK(AriSdk::ARI_CsiSecGetChipIdReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetChipIdReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecGetChipIdReq_SDK::unpack(AriSdk::ARI_CsiSecGetChipIdReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecGetChipIdReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetChipIdReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58589184;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetChipIdRspCb_SDK::ARI_CsiSecGetChipIdRspCb_SDK(AriSdk::ARI_CsiSecGetChipIdRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD020000, 0);
  *(_QWORD *)result = &off_24C8E42C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD020000, 0);
  *(_QWORD *)result = &off_24C8E42C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetChipIdRspCb_SDK::ARI_CsiSecGetChipIdRspCb_SDK(AriSdk::ARI_CsiSecGetChipIdRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E42C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E42C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSecGetChipIdRspCb_SDK::~ARI_CsiSecGetChipIdRspCb_SDK(AriSdk::ARI_CsiSecGetChipIdRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E42C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecGetChipIdRspCb_SDK::~ARI_CsiSecGetChipIdRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetChipIdRspCb_SDK::pack(AriSdk::ARI_CsiSecGetChipIdRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecGetChipIdRspCb_SDK::unpack(AriSdk::ARI_CsiSecGetChipIdRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1EF5EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSecGetChipIdRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetChipIdRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50200576;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetPkHashReq_SDK::ARI_CsiSecGetPkHashReq_SDK(AriSdk::ARI_CsiSecGetPkHashReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC828000, 0);
  *(_QWORD *)result = &off_24C8E42F8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC828000, 0);
  *(_QWORD *)result = &off_24C8E42F8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetPkHashReq_SDK::ARI_CsiSecGetPkHashReq_SDK(AriSdk::ARI_CsiSecGetPkHashReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E42F8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E42F8;
  return result;
}

void AriSdk::ARI_CsiSecGetPkHashReq_SDK::~ARI_CsiSecGetPkHashReq_SDK(AriSdk::ARI_CsiSecGetPkHashReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetPkHashReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecGetPkHashReq_SDK::unpack(AriSdk::ARI_CsiSecGetPkHashReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecGetPkHashReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetPkHashReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58556416;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetPkHashRspCb_SDK::ARI_CsiSecGetPkHashRspCb_SDK(AriSdk::ARI_CsiSecGetPkHashRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD028000, 0);
  *(_QWORD *)result = &off_24C8E4330;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD028000, 0);
  *(_QWORD *)result = &off_24C8E4330;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetPkHashRspCb_SDK::ARI_CsiSecGetPkHashRspCb_SDK(AriSdk::ARI_CsiSecGetPkHashRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4330;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4330;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSecGetPkHashRspCb_SDK::~ARI_CsiSecGetPkHashRspCb_SDK(AriSdk::ARI_CsiSecGetPkHashRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4330;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A995D64BLL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecGetPkHashRspCb_SDK::~ARI_CsiSecGetPkHashRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetPkHashRspCb_SDK::pack(AriSdk::ARI_CsiSecGetPkHashRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x22uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecGetPkHashRspCb_SDK::unpack(AriMsg **this)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;
  __int128 v6;
  AriMsg *v7;
  BOOL v9;

  v9 = 0;
  v2 = operator new();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_WORD *)(v2 + 32) = 0;
  v3 = AriMsg::unpack(this[6], 1, (void *)v2, 34, &v9, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v9;
  if (!v4)
  {
    v5 = operator new();
    v6 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)v5 = *(_OWORD *)v2;
    *(_OWORD *)(v5 + 16) = v6;
    *(_WORD *)(v5 + 32) = *(_WORD *)(v2 + 32);
    v7 = this[8];
    this[8] = (AriMsg *)v5;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40A995D64BLL);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40A995D64BLL);
  return v3;
}

void sub_20E1EFA60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A995D64BLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSecGetPkHashRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetPkHashRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50167808;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceFinishProvisionReq_SDK::ARI_CsiIceFinishProvisionReq_SDK(AriSdk::ARI_CsiIceFinishProvisionReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC810000, 0);
  *(_QWORD *)result = &off_24C8E4368;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC810000, 0);
  *(_QWORD *)result = &off_24C8E4368;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceFinishProvisionReq_SDK::ARI_CsiIceFinishProvisionReq_SDK(AriSdk::ARI_CsiIceFinishProvisionReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4368;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4368;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceFinishProvisionReq_SDK::~ARI_CsiIceFinishProvisionReq_SDK(AriSdk::ARI_CsiIceFinishProvisionReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4368;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40D496A851);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceFinishProvisionReq_SDK::~ARI_CsiIceFinishProvisionReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceFinishProvisionReq_SDK::pack(AriSdk::ARI_CsiIceFinishProvisionReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0xC02uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceFinishProvisionReq_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0xC02uLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 3074, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0xC02uLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40D496A851);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40D496A851);
  return v3;
}

void sub_20E1EFD18(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40D496A851);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceFinishProvisionReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceFinishProvisionReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58654720;
}

double AriSdk::ARI_CsiIceFinishProvisionResp_SDK::ARI_CsiIceFinishProvisionResp_SDK(AriSdk::ARI_CsiIceFinishProvisionResp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD010000, 0);
  *(_QWORD *)v1 = &off_24C8E43A0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD010000, 0);
  *(_QWORD *)v1 = &off_24C8E43A0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceFinishProvisionResp_SDK::ARI_CsiIceFinishProvisionResp_SDK(AriSdk::ARI_CsiIceFinishProvisionResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E43A0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E43A0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceFinishProvisionResp_SDK::~ARI_CsiIceFinishProvisionResp_SDK(AriSdk::ARI_CsiIceFinishProvisionResp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8E43A0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40EEF2B9B0);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40B88D2812);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40B88D2812);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceFinishProvisionResp_SDK::~ARI_CsiIceFinishProvisionResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceFinishProvisionResp_SDK::pack(AriSdk::ARI_CsiIceFinishProvisionResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x12uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x12uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x82uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceFinishProvisionResp_SDK::unpack(AriSdk::ARI_CsiIceFinishProvisionResp_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _OWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v2[1] = 0;
  *((_WORD *)v2 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 18, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>((uint64_t *)this + 8, (uint64_t)v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40B88D2812);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v6[1] = 0;
  *((_WORD *)v6 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 18, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40B88D2812);
  }
  v9 = 0;
  v7 = (_OWORD *)operator new();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  *((_WORD *)v7 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 130, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<CsiIceProvisionIMEIMultipleType>::operator=<CsiIceProvisionIMEIMultipleType&,void>((uint64_t *)this + 11, (uint64_t)v7);
  MEMORY[0x212BB9B60](v7, 0x1000C40EEF2B9B0);
  return v3;
}

void sub_20E1F0234(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40EEF2B9B0);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<CsiIceProvisionIMEIMultipleType>::operator=<CsiIceProvisionIMEIMultipleType&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 112) = v5;
  *(_WORD *)(v4 + 128) = *(_WORD *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *a1;
  *a1 = v4;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40EEF2B9B0);
  return a1;
}

BOOL AriSdk::ARI_CsiIceFinishProvisionResp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceFinishProvisionResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50266112;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK::ARI_CsiIceGetFactoryDebugEnabledReq_SDK(AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC830000, 0);
  *(_QWORD *)result = &off_24C8E43D8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC830000, 0);
  *(_QWORD *)result = &off_24C8E43D8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK::ARI_CsiIceGetFactoryDebugEnabledReq_SDK(AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E43D8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E43D8;
  return result;
}

void AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK::~ARI_CsiIceGetFactoryDebugEnabledReq_SDK(AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK::unpack(AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetFactoryDebugEnabledReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58523648;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK::ARI_CsiIceGetFactoryDebugEnabledResp_SDK(AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD030000, 0);
  *(_QWORD *)result = &off_24C8E4410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD030000, 0);
  *(_QWORD *)result = &off_24C8E4410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK::ARI_CsiIceGetFactoryDebugEnabledResp_SDK(AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK::~ARI_CsiIceGetFactoryDebugEnabledResp_SDK(AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4410;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK::~ARI_CsiIceGetFactoryDebugEnabledResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK::pack(AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK::unpack(AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1F070C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetFactoryDebugEnabledResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50135040;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetManifestStatusReq_SDK::ARI_CsiIceGetManifestStatusReq_SDK(AriSdk::ARI_CsiIceGetManifestStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC818000, 0);
  *(_QWORD *)result = &off_24C8E4448;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC818000, 0);
  *(_QWORD *)result = &off_24C8E4448;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceGetManifestStatusReq_SDK::ARI_CsiIceGetManifestStatusReq_SDK(AriSdk::ARI_CsiIceGetManifestStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4448;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4448;
  return result;
}

void AriSdk::ARI_CsiIceGetManifestStatusReq_SDK::~ARI_CsiIceGetManifestStatusReq_SDK(AriSdk::ARI_CsiIceGetManifestStatusReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetManifestStatusReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiIceGetManifestStatusReq_SDK::unpack(AriSdk::ARI_CsiIceGetManifestStatusReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIceGetManifestStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetManifestStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58621952;
}

double AriSdk::ARI_CsiIceGetManifestStatusResp_SDK::ARI_CsiIceGetManifestStatusResp_SDK(AriSdk::ARI_CsiIceGetManifestStatusResp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD018000, 0);
  *(_QWORD *)v1 = &off_24C8E4480;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD018000, 0);
  *(_QWORD *)v1 = &off_24C8E4480;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceGetManifestStatusResp_SDK::ARI_CsiIceGetManifestStatusResp_SDK(AriSdk::ARI_CsiIceGetManifestStatusResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4480;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4480;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceGetManifestStatusResp_SDK::~ARI_CsiIceGetManifestStatusResp_SDK(AriSdk::ARI_CsiIceGetManifestStatusResp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8E4480;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40EEF2B9B0);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40EEF2B9B0);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceGetManifestStatusResp_SDK::~ARI_CsiIceGetManifestStatusResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceGetManifestStatusResp_SDK::pack(AriSdk::ARI_CsiIceGetManifestStatusResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x82uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x82uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceGetManifestStatusResp_SDK::unpack(AriSdk::ARI_CsiIceGetManifestStatusResp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _WORD *v17;
  _WORD *v18;
  _WORD *v19;
  _DWORD *v20;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;

  v27 = 0;
  v2 = operator new();
  *(_OWORD *)v2 = 0u;
  *(_OWORD *)(v2 + 16) = 0u;
  *(_OWORD *)(v2 + 32) = 0u;
  *(_OWORD *)(v2 + 48) = 0u;
  *(_OWORD *)(v2 + 64) = 0u;
  *(_OWORD *)(v2 + 80) = 0u;
  *(_OWORD *)(v2 + 96) = 0u;
  *(_OWORD *)(v2 + 112) = 0u;
  *(_WORD *)(v2 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, (void *)v2, 130, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40EEF2B9B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v4 = operator new();
    v5 = *(_OWORD *)(v2 + 112);
    *(_OWORD *)(v4 + 96) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v4 + 112) = v5;
    *(_WORD *)(v4 + 128) = *(_WORD *)(v2 + 128);
    v6 = *(_OWORD *)(v2 + 48);
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v4 + 48) = v6;
    v7 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v4 + 64) = *(_OWORD *)(v2 + 64);
    *(_OWORD *)(v4 + 80) = v7;
    v8 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)v4 = *(_OWORD *)v2;
    *(_OWORD *)(v4 + 16) = v8;
    v9 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = v4;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C40EEF2B9B0);
    MEMORY[0x212BB9B60](v2, 0x1000C40EEF2B9B0);
  }
  v26 = 0;
  v10 = operator new();
  *(_OWORD *)v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(_OWORD *)(v10 + 32) = 0u;
  *(_OWORD *)(v10 + 48) = 0u;
  *(_OWORD *)(v10 + 64) = 0u;
  *(_OWORD *)(v10 + 80) = 0u;
  *(_OWORD *)(v10 + 96) = 0u;
  *(_OWORD *)(v10 + 112) = 0u;
  *(_WORD *)(v10 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, (void *)v10, 130, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40EEF2B9B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = operator new();
    v12 = *(_OWORD *)(v10 + 112);
    *(_OWORD *)(v11 + 96) = *(_OWORD *)(v10 + 96);
    *(_OWORD *)(v11 + 112) = v12;
    *(_WORD *)(v11 + 128) = *(_WORD *)(v10 + 128);
    v13 = *(_OWORD *)(v10 + 48);
    *(_OWORD *)(v11 + 32) = *(_OWORD *)(v10 + 32);
    *(_OWORD *)(v11 + 48) = v13;
    v14 = *(_OWORD *)(v10 + 80);
    *(_OWORD *)(v11 + 64) = *(_OWORD *)(v10 + 64);
    *(_OWORD *)(v11 + 80) = v14;
    v15 = *(_OWORD *)(v10 + 16);
    *(_OWORD *)v11 = *(_OWORD *)v10;
    *(_OWORD *)(v11 + 16) = v15;
    v16 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v11;
    if (v16)
      MEMORY[0x212BB9B60](v16, 0x1000C40EEF2B9B0);
    MEMORY[0x212BB9B60](v10, 0x1000C40EEF2B9B0);
  }
  v25 = 0;
  v17 = (_WORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v17, 2, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v17, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C40BDFB0063);
  }
  v24 = 0;
  v18 = (_WORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v18, 2, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v18, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v18);
    MEMORY[0x212BB9B60](v18, 0x1000C40BDFB0063);
  }
  v23 = 0;
  v19 = (_WORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v19, 2, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v19, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C40BDFB0063);
  }
  v22 = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v20, 4, &v22, 0);
  if (!(_DWORD)v3 && v22)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v20);
  MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  return v3;
}

void sub_20E1F1050(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceGetManifestStatusResp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceGetManifestStatusResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50233344;
}

AriSdk::MsgBase *AriSdk::ARI_GetPersonalizationParametersReq_SDK::ARI_GetPersonalizationParametersReq_SDK(AriSdk::ARI_GetPersonalizationParametersReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC860000, 0);
  *(_QWORD *)result = &off_24C8E44B8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC860000, 0);
  *(_QWORD *)result = &off_24C8E44B8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_GetPersonalizationParametersReq_SDK::ARI_GetPersonalizationParametersReq_SDK(AriSdk::ARI_GetPersonalizationParametersReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E44B8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E44B8;
  return result;
}

void AriSdk::ARI_GetPersonalizationParametersReq_SDK::~ARI_GetPersonalizationParametersReq_SDK(AriSdk::ARI_GetPersonalizationParametersReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_GetPersonalizationParametersReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_GetPersonalizationParametersReq_SDK::unpack(AriSdk::ARI_GetPersonalizationParametersReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_GetPersonalizationParametersReq_SDK::hasDeclaredGmid(AriSdk::ARI_GetPersonalizationParametersReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58327040;
}

double AriSdk::ARI_GetPersonalizationParametersRspCb_SDK::ARI_GetPersonalizationParametersRspCb_SDK(AriSdk::ARI_GetPersonalizationParametersRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD060000, 0);
  *(_QWORD *)v1 = &off_24C8E44F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD060000, 0);
  *(_QWORD *)v1 = &off_24C8E44F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_GetPersonalizationParametersRspCb_SDK::ARI_GetPersonalizationParametersRspCb_SDK(AriSdk::ARI_GetPersonalizationParametersRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E44F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E44F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_GetPersonalizationParametersRspCb_SDK::~ARI_GetPersonalizationParametersRspCb_SDK(AriSdk::ARI_GetPersonalizationParametersRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)this = &off_24C8E44F0;
  v2 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 16);
  if (v4)
  {
    *((_QWORD *)this + 17) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  v12 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_GetPersonalizationParametersRspCb_SDK::~ARI_GetPersonalizationParametersRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_GetPersonalizationParametersRspCb_SDK::pack(AriSdk::ARI_GetPersonalizationParametersRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;
  const void *v15;
  const void *v16;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 1uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (_BYTE *)*((_QWORD *)this + 16);
                  if (!v13
                    || (v14 = (_BYTE *)*((_QWORD *)this + 17), v13 == v14)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, v14 - v13, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, 4uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, 4uLL, 0), !(_DWORD)result))
                      {
                        result = 0;
                        *a2 = (AriMsg *)*((_QWORD *)this + 6);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_GetPersonalizationParametersRspCb_SDK::unpack(AriSdk::ARI_GetPersonalizationParametersRspCb_SDK *this)
{
  _BYTE *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _BYTE *v10;
  _BYTE *v11;
  _OWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  __n128 __p;
  uint64_t v17;
  size_t __sz;
  BOOL v19;

  __p.n128_u8[0] = 0;
  v2 = (_BYTE *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v19 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v12 = (_OWORD *)operator new[]();
  *v12 = 0u;
  v12[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 32, &v19, &__sz);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v12, (uint64_t)v12 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,32ul>::operator=((std::vector<int> *)((char *)this + 128), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v14, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v14);
  MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  return v3;
}

void sub_20E1F1D70(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,32ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x21)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 32);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1F1EF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_GetPersonalizationParametersRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_GetPersonalizationParametersRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -49938432;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK::ARI_CsiSecGetRFSelfTestNonceReq_SDK(AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC850000, 0);
  *(_QWORD *)result = &off_24C8E4528;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC850000, 0);
  *(_QWORD *)result = &off_24C8E4528;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK::ARI_CsiSecGetRFSelfTestNonceReq_SDK(AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4528;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4528;
  return result;
}

void AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK::~ARI_CsiSecGetRFSelfTestNonceReq_SDK(AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK::unpack(AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetRFSelfTestNonceReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58392576;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK(AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD050000, 0);
  *(_QWORD *)result = &off_24C8E4560;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD050000, 0);
  *(_QWORD *)result = &off_24C8E4560;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK(AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4560;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4560;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK::~ARI_CsiSecGetRFSelfTestNonceRspCb_SDK(AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4560;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408AA14F5FLL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK::~ARI_CsiSecGetRFSelfTestNonceRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK::pack(AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x24uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK::unpack(AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK *this)
{
  _OWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_OWORD *)operator new();
  *v2 = 0u;
  v2[1] = 0u;
  *((_DWORD *)v2 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 36, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<CsiSecNonce>::operator=<CsiSecNonce&,void>((uint64_t *)this + 8, (uint64_t)v2);
  MEMORY[0x212BB9B60](v2, 0x1000C408AA14F5FLL);
  return v3;
}

void sub_20E1F230C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408AA14F5FLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecGetRFSelfTestNonceRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50003968;
}

AriSdk::MsgBase *AriSdk::ARI_GetRfDiagnosticsReq_SDK::ARI_GetRfDiagnosticsReq_SDK(AriSdk::ARI_GetRfDiagnosticsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC868000, 0);
  *(_QWORD *)result = &off_24C8E4598;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC868000, 0);
  *(_QWORD *)result = &off_24C8E4598;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_GetRfDiagnosticsReq_SDK::ARI_GetRfDiagnosticsReq_SDK(AriSdk::ARI_GetRfDiagnosticsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4598;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4598;
  return result;
}

void AriSdk::ARI_GetRfDiagnosticsReq_SDK::~ARI_GetRfDiagnosticsReq_SDK(AriSdk::ARI_GetRfDiagnosticsReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_GetRfDiagnosticsReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_GetRfDiagnosticsReq_SDK::unpack(AriSdk::ARI_GetRfDiagnosticsReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_GetRfDiagnosticsReq_SDK::hasDeclaredGmid(AriSdk::ARI_GetRfDiagnosticsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58294272;
}

AriSdk::MsgBase *AriSdk::ARI_GetRfDiagnosticsRspCb_SDK::ARI_GetRfDiagnosticsRspCb_SDK(AriSdk::ARI_GetRfDiagnosticsRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD068000, 0);
  *(_QWORD *)result = &off_24C8E45D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD068000, 0);
  *(_QWORD *)result = &off_24C8E45D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_GetRfDiagnosticsRspCb_SDK::ARI_GetRfDiagnosticsRspCb_SDK(AriSdk::ARI_GetRfDiagnosticsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E45D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E45D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_GetRfDiagnosticsRspCb_SDK::~ARI_GetRfDiagnosticsRspCb_SDK(AriSdk::ARI_GetRfDiagnosticsRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E45D0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_GetRfDiagnosticsRspCb_SDK::~ARI_GetRfDiagnosticsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_GetRfDiagnosticsRspCb_SDK::pack(AriSdk::ARI_GetRfDiagnosticsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 1uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_GetRfDiagnosticsRspCb_SDK::unpack(AriSdk::ARI_GetRfDiagnosticsRspCb_SDK *this)
{
  _BYTE *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_BYTE *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 1, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1F280C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_GetRfDiagnosticsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_GetRfDiagnosticsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -49905664;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK::ARI_CsiSecRFSelfTestCompletionIndCb_SDK(AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD840000, 0);
  *(_QWORD *)result = &off_24C8E4608;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD840000, 0);
  *(_QWORD *)result = &off_24C8E4608;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK::ARI_CsiSecRFSelfTestCompletionIndCb_SDK(AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4608;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4608;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK::~ARI_CsiSecRFSelfTestCompletionIndCb_SDK(AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4608;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK::~ARI_CsiSecRFSelfTestCompletionIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK::pack(AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK::unpack(AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1F2A9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecRFSelfTestCompletionIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -41680896;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecReadSikPKeyReq_SDK::ARI_CsiSecReadSikPKeyReq_SDK(AriSdk::ARI_CsiSecReadSikPKeyReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC878000, 0);
  *(_QWORD *)result = &off_24C8E4640;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC878000, 0);
  *(_QWORD *)result = &off_24C8E4640;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiSecReadSikPKeyReq_SDK::ARI_CsiSecReadSikPKeyReq_SDK(AriSdk::ARI_CsiSecReadSikPKeyReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4640;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4640;
  return result;
}

void AriSdk::ARI_CsiSecReadSikPKeyReq_SDK::~ARI_CsiSecReadSikPKeyReq_SDK(AriSdk::ARI_CsiSecReadSikPKeyReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecReadSikPKeyReq_SDK::pack(uint64_t a1, _QWORD *a2)
{
  *a2 = 0;
  *a2 = *(_QWORD *)(a1 + 48);
  return 0;
}

uint64_t AriSdk::ARI_CsiSecReadSikPKeyReq_SDK::unpack(AriSdk::ARI_CsiSecReadSikPKeyReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiSecReadSikPKeyReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecReadSikPKeyReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58228736;
}

double AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK::ARI_CsiSecReadSikPKeyRspCb_SDK(AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD078000, 0);
  *(_QWORD *)v1 = &off_24C8E4678;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD078000, 0);
  *(_QWORD *)v1 = &off_24C8E4678;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK::ARI_CsiSecReadSikPKeyRspCb_SDK(AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4678;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4678;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK::~ARI_CsiSecReadSikPKeyRspCb_SDK(AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK *this)
{
  uint64_t v2;
  void *v3;

  *(_QWORD *)this = &off_24C8E4678;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = (void *)*((_QWORD *)this + 8);
  if (v3)
  {
    *((_QWORD *)this + 9) = v3;
    operator delete(v3);
  }
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK::~ARI_CsiSecReadSikPKeyRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK::pack(AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK *this, AriMsg **a2)
{
  _BYTE *v4;
  _BYTE *v5;
  BOOL v6;
  uint64_t result;
  const void *v8;

  *a2 = 0;
  v4 = (_BYTE *)*((_QWORD *)this + 8);
  v5 = (_BYTE *)*((_QWORD *)this + 9);
  if (v4)
    v6 = v4 == v5;
  else
    v6 = 1;
  if (v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, v5 - v4, 0), !(_DWORD)result))
  {
    v8 = (const void *)*((_QWORD *)this + 11);
    if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v8, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK::unpack(AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK *this)
{
  _OWORD *v2;
  uint64_t v3;
  void **v4;
  _BYTE *v5;
  void *v6;
  const char *v7;
  BOOL *v8;
  void *v9;
  _WORD *v10;
  void *__p;
  _BYTE *v13;
  uint64_t v14;
  size_t __sz;
  BOOL v16;
  BOOL v17[8];
  char v18;

  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v2 = (_OWORD *)operator new[]();
  *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[6] = 0u;
  v2[7] = 0u;
  *((_DWORD *)v2 + 32) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 132, &v16, &__sz);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    v14 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v2, (uint64_t)v2 + __sz, __sz);
    v4 = (void **)((char *)this + 64);
    v6 = __p;
    v5 = v13;
    if ((unint64_t)(v13 - (_BYTE *)__p) < 0x85)
    {
      v9 = *v4;
      if (*v4)
      {
        *((_QWORD *)this + 9) = v9;
        operator delete(v9);
        *v4 = 0;
        *((_QWORD *)this + 9) = 0;
        *((_QWORD *)this + 10) = 0;
        v6 = __p;
        v5 = v13;
      }
      *((_QWORD *)this + 8) = v6;
      *((_QWORD *)this + 9) = v5;
      *((_QWORD *)this + 10) = v14;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v17);
      if (v18 >= 0)
        v8 = v17;
      else
        v8 = *(BOOL **)v17;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v7, v8, 360, (char *)this + 64, v13 - (_BYTE *)__p, 132);
      if (v18 < 0)
        operator delete(*(void **)v17);
      if (__p)
      {
        v13 = __p;
        operator delete(__p);
      }
    }
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
  }
  v17[0] = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v10, 2, v17, 0);
  if (!(_DWORD)v3 && v17[0])
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E1F3084(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiSecReadSikPKeyRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -49840128;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC848000, 0);
  *(_QWORD *)result = &off_24C8E46B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC848000, 0);
  *(_QWORD *)result = &off_24C8E46B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E46B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E46B0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK::~ARI_CsiIceSecSendRFSelfTestTicketReq_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E46B0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4040BEE09CLL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK::~ARI_CsiIceSecSendRFSelfTestTicketReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK::pack(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x402uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0x402uLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 1026, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0x402uLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4040BEE09CLL);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4040BEE09CLL);
  return v3;
}

void sub_20E1F3398(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4040BEE09CLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58425344;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD048000, 0);
  *(_QWORD *)result = &off_24C8E46E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD048000, 0);
  *(_QWORD *)result = &off_24C8E46E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E46E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E46E8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK::~ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E46E8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK::~ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK::pack(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK::unpack(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1F3618(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50036736;
}

double AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFC880000, 0);
  *(_QWORD *)v1 = &off_24C8E4720;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFC880000, 0);
  *(_QWORD *)v1 = &off_24C8E4720;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4720;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E4720;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK::~ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8E4720;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK::~ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK::pack(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK::unpack(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x1000uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4096, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,4096ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E1F39A4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2Req_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58195968;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD080000, 0);
  *(_QWORD *)result = &off_24C8E4758;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFD080000, 0);
  *(_QWORD *)result = &off_24C8E4758;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4758;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4758;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK::~ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4758;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK::~ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK::pack(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK::unpack(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1F3C54(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceSecSendRFSelfTestTicketV2RspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -49807360;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceStartProvisionReq_SDK::ARI_CsiIceStartProvisionReq_SDK(AriSdk::ARI_CsiIceStartProvisionReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC808000, 0);
  *(_QWORD *)result = &off_24C8E4790;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xFC808000, 0);
  *(_QWORD *)result = &off_24C8E4790;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIceStartProvisionReq_SDK::ARI_CsiIceStartProvisionReq_SDK(AriSdk::ARI_CsiIceStartProvisionReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4790;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8E4790;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIceStartProvisionReq_SDK::~ARI_CsiIceStartProvisionReq_SDK(AriSdk::ARI_CsiIceStartProvisionReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8E4790;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40119540ACLL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceStartProvisionReq_SDK::~ARI_CsiIceStartProvisionReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceStartProvisionReq_SDK::pack(AriSdk::ARI_CsiIceStartProvisionReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0xFA0uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceStartProvisionReq_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0xFA0uLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 4000, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0xFA0uLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40119540ACLL);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40119540ACLL);
  return v3;
}

void sub_20E1F3F10(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40119540ACLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceStartProvisionReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceStartProvisionReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -58687488;
}

double AriSdk::ARI_CsiIceStartProvisionResp_SDK::ARI_CsiIceStartProvisionResp_SDK(AriSdk::ARI_CsiIceStartProvisionResp_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD008000, 0);
  *(_QWORD *)v1 = &off_24C8E47C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xFD008000, 0);
  *(_QWORD *)v1 = &off_24C8E47C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_CsiIceStartProvisionResp_SDK::ARI_CsiIceStartProvisionResp_SDK(AriSdk::ARI_CsiIceStartProvisionResp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E47C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8E47C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_CsiIceStartProvisionResp_SDK::~ARI_CsiIceStartProvisionResp_SDK(AriSdk::ARI_CsiIceStartProvisionResp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8E47C8;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40EEF2B9B0);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40B88D2812);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4040BEE09CLL);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40B88D2812);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40B88D2812);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIceStartProvisionResp_SDK::~ARI_CsiIceStartProvisionResp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIceStartProvisionResp_SDK::pack(AriSdk::ARI_CsiIceStartProvisionResp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x12uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x12uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0x402uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 0x12uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 0x82uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIceStartProvisionResp_SDK::unpack(AriSdk::ARI_CsiIceStartProvisionResp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  void *v11;
  uint64_t v12;
  _DWORD *v13;
  _QWORD *v14;
  _OWORD *v15;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;

  v24 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v24, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v24;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v23 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v22 = 0;
  v6 = (_WORD *)operator new();
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v6[8] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 18, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = operator new();
    *(_OWORD *)v7 = *(_OWORD *)v6;
    *(_WORD *)(v7 + 16) = v6[8];
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C40B88D2812);
    MEMORY[0x212BB9B60](v6, 0x1000C40B88D2812);
  }
  v21 = 0;
  v9 = (_QWORD *)operator new();
  *v9 = 0;
  v9[1] = 0;
  *((_WORD *)v9 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 18, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>((uint64_t *)this + 11, (uint64_t)v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40B88D2812);
  }
  v20 = 0;
  v10 = (void *)operator new();
  bzero(v10, 0x402uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 1026, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4040BEE09CLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (void *)operator new();
    memcpy(v11, v10, 0x402uLL);
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4040BEE09CLL);
    MEMORY[0x212BB9B60](v10, 0x1000C4040BEE09CLL);
  }
  v19 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v13, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v18 = 0;
  v14 = (_QWORD *)operator new();
  *v14 = 0;
  v14[1] = 0;
  *((_WORD *)v14 + 8) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v14, 18, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C40B88D2812);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIType>::operator=<CsiIceProvisionIMEIType&,void>((uint64_t *)this + 14, (uint64_t)v14);
    MEMORY[0x212BB9B60](v14, 0x1000C40B88D2812);
  }
  v17 = 0;
  v15 = (_OWORD *)operator new();
  *v15 = 0u;
  v15[1] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  v15[4] = 0u;
  v15[5] = 0u;
  v15[6] = 0u;
  v15[7] = 0u;
  *((_WORD *)v15 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v15, 130, &v17, 0);
  if (!(_DWORD)v3 && v17)
    AriSdk::Tlv<CsiIceProvisionIMEIMultipleType>::operator=<CsiIceProvisionIMEIMultipleType&,void>((uint64_t *)this + 15, (uint64_t)v15);
  MEMORY[0x212BB9B60](v15, 0x1000C40EEF2B9B0);
  return v3;
}

void sub_20E1F481C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40EEF2B9B0);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIceStartProvisionResp_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIceStartProvisionResp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -50298880;
}

uint64_t ARI_CsiSecGetChipIdRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -50200576)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1F4980(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetChipIdReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0xFC820000);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E1F4A20(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetChipIdReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0xFC820000);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E1F4ACC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetPkHashRspCb_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -50167808)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0x22uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1F4B90(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetPkHashReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0xFC828000);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E1F4C34(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiSecGetPkHashReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0xFC828000);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E1F4CE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceFinishProvisionResp_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -50266112)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0xACuLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1F4DA4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceFinishProvisionReq_ENC(char *a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v7;
  uint64_t v8;
  int *EncodedBuf;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14[2];
  unint64_t v15;

  v15 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v7 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v13 = v7;
  *(_OWORD *)v14 = v7;
  v11 = v7;
  v12 = v7;
  AriMsg::AriMsg((AriMsg *)&v11, 0xFC810000);
  v8 = AriMsg::packParam((AriMsg *)&v11, 1, a1, 0xC02uLL);
  if (!(_DWORD)v8)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v11, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v8 = 0;
      else
        v8 = 0xFFFFFFFFLL;
    }
    else
    {
      v8 = 0xFFFFFFFFLL;
    }
  }
  v14[0] = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v14[1]);
  return v8;
}

void sub_20E1F4E6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceFinishProvisionReq_BLK(char *a1, int *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t Ctx;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, 0xFC810000);
  Ctx = AriMsg::packParam((AriMsg *)&v9, 1, a1, 0xC02uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v9, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v9, a2);
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return Ctx;
}

void sub_20E1F4F44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetFactoryDebugEnabledResp_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -50135040)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1F5008(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetFactoryDebugEnabledReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0xFC830000);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E1F50A8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetFactoryDebugEnabledReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0xFC830000);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E1F5154(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetManifestStatusResp_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -50233344)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0x110uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1F5218(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetManifestStatusReq_ENC(uint64_t a1, int **a2, unsigned int *a3)
{
  __int128 v5;
  int *EncodedBuf;
  uint64_t v7;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v5 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v5 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v5;
  *(_OWORD *)v12 = v5;
  v9 = v5;
  v10 = v5;
  AriMsg::AriMsg((AriMsg *)&v9, 0xFC818000);
  if (a2)
  {
    EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v9, a3);
    *a2 = EncodedBuf;
    if (EncodedBuf)
      v7 = 0;
    else
      v7 = 0xFFFFFFFFLL;
  }
  else
  {
    v7 = 0xFFFFFFFFLL;
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return v7;
}

void sub_20E1F52BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceGetManifestStatusReq_BLK(int *a1, uint64_t a2)
{
  __int128 v4;
  uint64_t Ctx;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, 0xFC818000);
  Ctx = AriHost::Send((AriMsg *)&v7, *a1, a2, 0, 20000);
  if (!(_DWORD)Ctx)
    Ctx = AriMsg::extractCtx((AriMsg *)&v7, a1);
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return Ctx;
}

void sub_20E1F536C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceStartProvisionResp_Extract(const unsigned __int8 *a1, uint64_t a2, char *a3)
{
  __int128 v4;
  uint64_t v5;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  void *v10[2];
  unint64_t v11;

  v11 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v4 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v4 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v9 = v4;
  *(_OWORD *)v10 = v4;
  v7 = v4;
  v8 = v4;
  AriMsg::AriMsg((AriMsg *)&v7, a1, a2);
  v5 = HIDWORD(v11);
  if (!HIDWORD(v11))
  {
    if (((DWORD1(v7) << 15) | ((_DWORD)v7 << 26)) == -50298880)
      v5 = AriMsg::unparam((AriMsg *)&v7, 1, a3, 0x4C4uLL);
    else
      v5 = 4294967223;
  }
  v10[0] = 0;
  v8 = 0u;
  v9 = 0u;
  v7 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v10[1]);
  return v5;
}

void sub_20E1F5430(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceStartProvisionReq_ENC(char *a1, uint64_t a2, int **a3, unsigned int *a4)
{
  __int128 v7;
  uint64_t v8;
  int *EncodedBuf;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  void *v14[2];
  unint64_t v15;

  v15 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v7 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v7 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v13 = v7;
  *(_OWORD *)v14 = v7;
  v11 = v7;
  v12 = v7;
  AriMsg::AriMsg((AriMsg *)&v11, 0xFC808000);
  v8 = AriMsg::packParam((AriMsg *)&v11, 1, a1, 0xFA0uLL);
  if (!(_DWORD)v8)
  {
    if (a3)
    {
      EncodedBuf = AriMsg::getEncodedBuf((AriMsg *)&v11, a4);
      *a3 = EncodedBuf;
      if (EncodedBuf)
        v8 = 0;
      else
        v8 = 0xFFFFFFFFLL;
    }
    else
    {
      v8 = 0xFFFFFFFFLL;
    }
  }
  v14[0] = 0;
  v12 = 0u;
  v13 = 0u;
  v11 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v14[1]);
  return v8;
}

void sub_20E1F54FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIceStartProvisionReq_BLK(char *a1, int *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t Ctx;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  void *v12[2];
  unint64_t v13;

  v13 = 0xAAAAAAAAAAAAAAAALL;
  *(_QWORD *)&v6 = 0xAAAAAAAAAAAAAAAALL;
  *((_QWORD *)&v6 + 1) = 0xAAAAAAAAAAAAAAAALL;
  v11 = v6;
  *(_OWORD *)v12 = v6;
  v9 = v6;
  v10 = v6;
  AriMsg::AriMsg((AriMsg *)&v9, 0xFC808000);
  Ctx = AriMsg::packParam((AriMsg *)&v9, 1, a1, 0xFA0uLL);
  if (!(_DWORD)Ctx)
  {
    Ctx = AriHost::Send((AriMsg *)&v9, *a2, a3, 0, 20000);
    if (!(_DWORD)Ctx)
      Ctx = AriMsg::extractCtx((AriMsg *)&v9, a2);
  }
  v12[0] = 0;
  v10 = 0u;
  v11 = 0u;
  v9 = 0u;
  AriMsg::FreeTlvList((_QWORD *)v12[1]);
  return Ctx;
}

void sub_20E1F55D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_IBIEmergencyNumber_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEmergencyNumber_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessApduCmdReqData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessApduCmdReqData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessApduCmdRspData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessApduCmdRspData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessAppInfoParamExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessAppInfoParamExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessAppInfoParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessAppInfoParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessCardTypeInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessCardTypeInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessCardType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessCardType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessFileInfoRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessFileInfoRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessReadRecReqData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessReadRecReqData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessReadRecRspData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessReadRecRspData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessSearchPatern_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessSearchPatern_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessSimState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimAccessSimState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimApplicationActivity_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimApplicationActivity_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimApplicationId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimApplicationId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimChvAttempts_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimChvAttempts_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimChvStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimChvStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimEfAccessErrorCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimEfAccessErrorCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimEfAccessResType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimEfAccessResType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimErrorCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimErrorCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFcpInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFcpInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileEhrpdNaiData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileEhrpdNaiData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileHrpdNaiData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileHrpdNaiData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileMin_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileMin_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileMipNaiData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileMipNaiData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileReadBinReqData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileReadBinReqData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileReadBinRspData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileReadBinRspData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileSearchModeOption_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileSearchModeOption_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileSearchRecRspData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileSearchRecRspData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileSipNaiData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileSipNaiData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileUpdateBinReqData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimFileUpdateBinReqData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenResType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimGenResType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimHwEvent_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimHwEvent_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimIndicator_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimIndicator_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPathArray_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPathArray_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbAlpha_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbAlpha_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbLocation_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbLocation_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbNum_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbNum_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPinRequired_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPinRequired_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimReadCardRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimReadCardRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimReadRplmnRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimReadRplmnRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSearchRecordInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSearchRecordInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSupportedTestCmdType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimSupportedTestCmdType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimTrayStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimTrayStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimUpdateStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimUpdateStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICtsCellTimeData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICtsCellTimeData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICtsNetworkType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICtsNetworkType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIInt32_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIInt32_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIInt8_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIInt8_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpAbortReason_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpAbortReason_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpAddUtcModelSet_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpAddUtcModelSet_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpAdditionalInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpAdditionalInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpCellTimeAssistance_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpCellTimeAssistance_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDgpsElement_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDgpsElement_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDgpsStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDgpsStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDiscardReason_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDiscardReason_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDiscardedPosMsgType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpDiscardedPosMsgType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpEnvironment_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpEnvironment_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssAcquisitionAssistanceInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssAcquisitionAssistanceInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssAssistanceRequest_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssAssistanceRequest_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssAuxiliaryData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssAuxiliaryData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssBadSatelliteInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssBadSatelliteInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssCommonAlmanacData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssCommonAlmanacData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssLocationInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssLocationInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssMeasurementsShort_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssMeasurementsShort_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssMeasurements_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssMeasurements_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssNavDataGlonass_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssNavDataGlonass_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssTimeModelData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGanssTimeModelData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGlonassAlmanacElement_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGlonassAlmanacElement_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGnssTimeId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGnssTimeId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsAcquisitionElement_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsAcquisitionElement_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsAlmanacElement_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsAlmanacElement_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsEphemeris_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsEphemeris_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsMeasurements_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpGpsMeasurements_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpIs801LocationIndStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpIs801LocationIndStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpIs801LocationInd_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpIs801LocationInd_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocEstimate_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocEstimate_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocationInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocationInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocationRequestStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocationRequestStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocationServerErrorCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpLocationServerErrorCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpMeasurementAndEstimateAFLT_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpMeasurementAndEstimateAFLT_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpMethodType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpMethodType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpPosProtocol_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpPosProtocol_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpSessionInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpSessionInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpSessionProtocol_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpSessionProtocol_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpTowAssist_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpTowAssist_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpUtranSfnGpsUncertainty_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpUtranSfnGpsUncertainty_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpVelocityEstimate_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpVelocityEstimate_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpWlanMeasurements_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpWlanMeasurements_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpWlanReqInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBILpWlanReqInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsClsPositioningCapabilityReqParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsClsPositioningCapabilityReqParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsClsPositioningCapabilityRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsClsPositioningCapabilityRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISsLcsGpsAssistanceRequest_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISsLcsGpsAssistanceRequest_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallQos_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallQos_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIDouble_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIDouble_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIFloat32_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIFloat32_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPs3gpp2DataCallType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPs3gpp2DataCallType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsActivationStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsActivationStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsAuthenticationType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsAuthenticationType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsBandwidthEstimationInfo_V2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsBandwidthEstimationInfo_V2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsBreadModeState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsBreadModeState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsButterModeState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsButterModeState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConfiguredMaxBw_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConfiguredMaxBw_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConnectedStateSummary_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConnectedStateSummary_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConnectionStateType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConnectionStateType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConnectionTriggerType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsConnectionTriggerType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsCriticalPsSessionCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsCriticalPsSessionCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsCriticalPsSessionStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsCriticalPsSessionStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDTTReqInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDTTReqInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDTTRspCbInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDTTRspCbInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDataStallEnable_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDataStallEnable_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnSpecificIdentity_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnSpecificIdentity_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsAuthDN_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsAuthDN_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsProtType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsProtType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsRawPubKey_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsRawPubKey_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsRootCert_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDnsRootCert_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDownlinkBwEstimation_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDownlinkBwEstimation_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDropIPPacketsParams_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsDropIPPacketsParams_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEAPMessage_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEAPMessage_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEncryptionStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEncryptionStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEpsApnAmbr_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEpsApnAmbr_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEpsQos_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEpsQos_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEpsQos_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEpsQos_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEvsAudioBWType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEvsAudioBWType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEvsBitRateType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsEvsBitRateType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsIpAddr_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsIpAddr_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsIpType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsIpType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsKeepAliveFrameInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsKeepAliveFrameInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLlcSapi_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLlcSapi_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackModeAConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackModeAConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackPipeConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackPipeConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackTestMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLoopbackTestMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmBlob_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmBlob_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmDlThrpt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmDlThrpt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmFpV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmFpV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmFp_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmFp_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmLinkState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmLinkState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmQueryRspinfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmQueryRspinfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmTcApEnable_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmTcApEnable_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsLqmType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsNr5gNeighborCellInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsNr5gNeighborCellInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsNwPcoParams_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsNwPcoParams_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsOrigin_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsOrigin_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPDPReqType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPDPReqType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPacketFilter_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPacketFilter_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPacketFilter_V2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPacketFilter_V2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPagingWithPermIdInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPagingWithPermIdInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPdpContextId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPdpContextId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPipeInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPipeInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPipeParamApplicability_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPipeParamApplicability_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPowerCost_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsPowerCost_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQfi_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQfi_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos2g_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos2g_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos3g_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos3g_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos3g_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos3g_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos5g_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQos5g_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQosRule_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsQosRule_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsRLGSInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsRLGSInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsRadioPriority_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsRadioPriority_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsRqTimerInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsRqTimerInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSPKIPin_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSPKIPin_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsScreenLockStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsScreenLockStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsServCellInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsServCellInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSessionAmbr_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSessionAmbr_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSessionId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSessionId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSmCauseAccept_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSmCauseAccept_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSscMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSscMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsStatusIrat_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsStatusIrat_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsStopDataCallReason_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsStopDataCallReason_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsStreamingEnhancedBufferingState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsStreamingEnhancedBufferingState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSuspendCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSuspendCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSymptomsInfoHeader_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsSymptomsInfoHeader_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTCinfoDSinfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTCinfoDSinfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTCinfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTCinfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTempIDUpdateStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTempIDUpdateStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTransmitStateInfoType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsTransmitStateInfoType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsUeCapSecurityInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsUeCapSecurityInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsUplinkBwEstimation_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsUplinkBwEstimation_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsUrspConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsUrspConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsVoIPCallInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsVoIPCallInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsVoLTECodecType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsVoLTECodecType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsWiFiCallSimSlot_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsWiFiCallSimSlot_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsWrmSdmLocationDBCellPerRatInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallPsWrmSdmLocationDBCellPerRatInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICdmaPsRatType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICdmaPsRatType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIChar_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIChar_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsNssai_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICpsNssai_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsTestReqType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsTestReqType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMessageMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMessageMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPlmn_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPlmn_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsFilterCmd_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsFilterCmd_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsFilterRespCodeType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsFilterRespCodeType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsIPMaskFilterType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsIPMaskFilterType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsProtoType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsProtoType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsTCPUDPFilterType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPsTCPUDPFilterType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIQoEResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIQoEResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt64_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUInt64_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C830000u, 0);
  *(_QWORD *)result = &off_24C8F5AF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C830000u, 0);
  *(_QWORD *)result = &off_24C8F5AF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5AF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5AF8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK::~ARI_IBIEmbmsGetInterestedTMGIListReq_SDK(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8F5AF8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK::~ARI_IBIEmbmsGetInterestedTMGIListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK::pack(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK::unpack(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1F83B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2088960000;
}

double AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D030000u, 0);
  *(_QWORD *)v1 = &off_24C8F5B30;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D030000u, 0);
  *(_QWORD *)v1 = &off_24C8F5B30;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5B30;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5B30;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK::~ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F5B30;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK::~ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _OWORD *v6;
  void *__p[3];
  unint64_t v9;
  BOOL v10;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v10 = 0;
  v9 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[13] = 0u;
  v6[14] = 0u;
  v6[15] = 0u;
  v6[16] = 0u;
  v6[17] = 0u;
  v6[18] = 0u;
  v6[19] = 0u;
  v6[20] = 0u;
  v6[21] = 0u;
  v6[22] = 0u;
  v6[23] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 384, &v10, &v9);
  if (!(_DWORD)v3 && v10)
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBIEmbmsTMGIInfoParam>::__init_with_size[abi:ne180100]<IBIEmbmsTMGIInfoParam*,IBIEmbmsTMGIInfoParam*>(__p, v6, (uint64_t)v6 + 6 * (v9 / 6), v9 / 6);
    AriSdk::TlvArray<IBIEmbmsTMGIInfoParam,64ul>::operator=((uint64_t)this + 80, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80274DC3F3);
  return v3;
}

void sub_20E1F8858(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C80274DC3F3);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::TlvArray<IBIEmbmsTMGIInfoParam,64ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a2) >> 1) < 0x41)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 1), 64);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E1F89C8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetInterestedTMGIListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097348608;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK::ARI_IBIEmbmsGetSAIListReq_SDK(AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C838000u, 0);
  *(_QWORD *)result = &off_24C8F5B68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C838000u, 0);
  *(_QWORD *)result = &off_24C8F5B68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK::ARI_IBIEmbmsGetSAIListReq_SDK(AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5B68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5B68;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK::~ARI_IBIEmbmsGetSAIListReq_SDK(AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F5B68;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK::~ARI_IBIEmbmsGetSAIListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK::pack(AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK::unpack(AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1F8D0C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetSAIListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2088992768;
}

double AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK::ARI_IBIEmbmsGetSAIListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D038000u, 0);
  *(_QWORD *)v1 = &off_24C8F5BA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D038000u, 0);
  *(_QWORD *)v1 = &off_24C8F5BA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

double AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK::ARI_IBIEmbmsGetSAIListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5BA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5BA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK::~ARI_IBIEmbmsGetSAIListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C8F5BA0;
  v2 = (void *)*((_QWORD *)this + 21);
  if (v2)
  {
    *((_QWORD *)this + 22) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = (void *)*((_QWORD *)this + 17);
  if (v4)
  {
    *((_QWORD *)this + 18) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40EEF2B9B0);
  v8 = (void *)*((_QWORD *)this + 11);
  if (v8)
  {
    *((_QWORD *)this + 12) = v8;
    operator delete(v8);
  }
  v9 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK::~ARI_IBIEmbmsGetSAIListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;
  const void *v15;
  _BYTE *v16;
  _BYTE *v17;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 0x82uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 2uLL, 0), !(_DWORD)result))
              {
                v13 = (_BYTE *)*((_QWORD *)this + 17);
                if (!v13
                  || (v14 = (_BYTE *)*((_QWORD *)this + 18), v13 == v14)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, v14 - v13, 0), !(_DWORD)result))
                {
                  v15 = (const void *)*((_QWORD *)this + 20);
                  if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, 2uLL, 0), !(_DWORD)result))
                  {
                    v16 = (_BYTE *)*((_QWORD *)this + 21);
                    if (!v16
                      || (v17 = (_BYTE *)*((_QWORD *)this + 22), v16 == v17)
                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, v17 - v16, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  void *v7;
  _OWORD *v8;
  _DWORD *v9;
  _WORD *v10;
  _OWORD *v11;
  _WORD *v12;
  _OWORD *v13;
  __n128 __p;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x440uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1088, &v18, &v17);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8094668F84);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v16 = 0;
    __p = 0uLL;
    std::vector<IBIEmbmsInterFreqInfo>::__init_with_size[abi:ne180100]<IBIEmbmsInterFreqInfo*,IBIEmbmsInterFreqInfo*>(&__p, v7, (uint64_t)v7 + 136 * (v17 / 0x88), v17 / 0x88);
    AriSdk::TlvArray<IBIEmbmsInterFreqInfo,8ul>::operator=((uint64_t)this + 88, (uint64_t *)&__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v7, 0x1000C8094668F84);
  }
  __p.n128_u8[0] = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  *((_WORD *)v8 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 130, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40EEF2B9B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIMultipleType>::operator=<CsiIceProvisionIMEIMultipleType&,void>((uint64_t *)this + 14, (uint64_t)v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40EEF2B9B0);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v11 = (_OWORD *)operator new[]();
  *v11 = 0u;
  v11[1] = 0u;
  v11[2] = 0u;
  v11[3] = 0u;
  v11[4] = 0u;
  v11[5] = 0u;
  v11[6] = 0u;
  v11[7] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 128, &v18, &v17);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v16 = 0;
    __p = 0uLL;
    std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(&__p, v11, (uint64_t)v11 + 4 * (v17 >> 2), v17 >> 2);
    AriSdk::TlvArray<unsigned int,32ul>::operator=((std::vector<int> *)((char *)this + 136), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v11, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_WORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 20, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v13 = (_OWORD *)operator new[]();
  *v13 = 0u;
  v13[1] = 0u;
  v13[2] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[5] = 0u;
  v13[6] = 0u;
  v13[7] = 0u;
  v13[8] = 0u;
  v13[9] = 0u;
  v13[10] = 0u;
  v13[11] = 0u;
  v13[12] = 0u;
  v13[13] = 0u;
  v13[14] = 0u;
  v13[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 256, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    v16 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v13, (uint64_t)v13 + 2 * (v17 >> 1), v17 >> 1);
    AriSdk::TlvArray<unsigned short,128ul>::operator=((std::vector<int> *)this + 7, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v13, 0x1000C80BDFB0063);
  return v3;
}

void sub_20E1F9838(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C80BDFB0063);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::TlvArray<IBIEmbmsInterFreqInfo,8ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if (0xF0F0F0F0F0F0F0F1 * ((v4 - *a2) >> 3) < 9)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0xF0F0F0F0F0F0F0F1 * ((a2[1] - *a2) >> 3), 8);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E1F9A40(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<unsigned int,32ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x81)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 2, 32);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1F9B1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<unsigned short,128ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x101)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 1, 128);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E1F9BF8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetSAIListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097381376;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetServiceReq_SDK::ARI_IBIEmbmsGetServiceReq_SDK(AriSdk::ARI_IBIEmbmsGetServiceReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C810000u, 0);
  *(_QWORD *)result = &off_24C8F5BD8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C810000u, 0);
  *(_QWORD *)result = &off_24C8F5BD8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetServiceReq_SDK::ARI_IBIEmbmsGetServiceReq_SDK(AriSdk::ARI_IBIEmbmsGetServiceReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5BD8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5BD8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetServiceReq_SDK::~ARI_IBIEmbmsGetServiceReq_SDK(AriSdk::ARI_IBIEmbmsGetServiceReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8F5BD8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetServiceReq_SDK::~ARI_IBIEmbmsGetServiceReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetServiceReq_SDK::pack(AriSdk::ARI_IBIEmbmsGetServiceReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetServiceReq_SDK::unpack(AriSdk::ARI_IBIEmbmsGetServiceReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E1F9E64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsGetServiceReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetServiceReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2088828928;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK::ARI_IBIEmbmsGetServiceRspCb_SDK(AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D010000u, 0);
  *(_QWORD *)result = &off_24C8F5C10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D010000u, 0);
  *(_QWORD *)result = &off_24C8F5C10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK::ARI_IBIEmbmsGetServiceRspCb_SDK(AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5C10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5C10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK::~ARI_IBIEmbmsGetServiceRspCb_SDK(AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F5C10;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK::~ARI_IBIEmbmsGetServiceRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1FA290(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetServiceRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097217536;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK::ARI_IBIEmbmsGetServicesListReq_SDK(AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C818000u, 0);
  *(_QWORD *)result = &off_24C8F5C48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C818000u, 0);
  *(_QWORD *)result = &off_24C8F5C48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK::ARI_IBIEmbmsGetServicesListReq_SDK(AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5C48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5C48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK::~ARI_IBIEmbmsGetServicesListReq_SDK(AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F5C48;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK::~ARI_IBIEmbmsGetServicesListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK::pack(AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK::unpack(AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1FA6D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetServicesListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2088861696;
}

double AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK::ARI_IBIEmbmsGetServicesListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D018000u, 0);
  *(_QWORD *)v1 = &off_24C8F5C80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D018000u, 0);
  *(_QWORD *)v1 = &off_24C8F5C80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK::ARI_IBIEmbmsGetServicesListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5C80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5C80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK::~ARI_IBIEmbmsGetServicesListRspCb_SDK(AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8F5C80;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK::~ARI_IBIEmbmsGetServicesListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1FACD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetServicesListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097250304;
}

double AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK::ARI_IBIEmbmsGetServicesListIndCb_SDK(AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D830000u, 0);
  *(_QWORD *)v1 = &off_24C8F5CB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D830000u, 0);
  *(_QWORD *)v1 = &off_24C8F5CB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK::ARI_IBIEmbmsGetServicesListIndCb_SDK(AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5CB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5CB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK::~ARI_IBIEmbmsGetServicesListIndCb_SDK(AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8F5CB8;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 12);
  if (v4)
  {
    *((_QWORD *)this + 13) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK::~ARI_IBIEmbmsGetServicesListIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK::pack(AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK::unpack(AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _WORD *v7;
  void *v8;
  _DWORD *v9;
  _DWORD *v10;
  void *__p[3];
  unint64_t v13;
  BOOL v14;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v14 = 0;
  v13 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0x320uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 800, &v14, &v13);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBIEmbmsServiceInfo>::__init_with_size[abi:ne180100]<IBIEmbmsServiceInfo*,IBIEmbmsServiceInfo*>(__p, v8, (uint64_t)v8 + 8 * (v13 >> 3), v13 >> 3);
    AriSdk::TlvArray<IBIEmbmsServiceInfo,100ul>::operator=((uint64_t)this + 96, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
  }
  LOBYTE(__p[0]) = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E1FB4D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::TlvArray<IBIEmbmsServiceInfo,100ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if ((unint64_t)(v4 - *a2) < 0x321)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, (a2[1] - *a2) >> 3, 100);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E1FB664(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsGetServicesListIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2105737216;
}

double AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK::ARI_IBIEmbmsMBSFNAreaIndCb_SDK(AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D810000u, 0);
  *(_QWORD *)v1 = &off_24C8F5CF0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D810000u, 0);
  *(_QWORD *)v1 = &off_24C8F5CF0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK::ARI_IBIEmbmsMBSFNAreaIndCb_SDK(AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5CF0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5CF0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK::~ARI_IBIEmbmsMBSFNAreaIndCb_SDK(AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8F5CF0;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 11);
  if (v3)
  {
    *((_QWORD *)this + 12) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK::~ARI_IBIEmbmsMBSFNAreaIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK::pack(AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK::unpack(AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _BYTE *v8;
  _QWORD *v9;
  _DWORD *v10;
  __n128 __p;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v15 = 0;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  v9 = (_QWORD *)operator new[]();
  *v9 = 0;
  v9[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 16, &v15, &v14);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v9, 0x1000C80BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v9, (uint64_t)v9 + 2 * (v14 >> 1), v14 >> 1);
    AriSdk::TlvArray<unsigned short,8ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v9, 0x1000C80BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E1FBCB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsMBSFNAreaIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2105606144;
}

double AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK::ARI_IBIEmbmsSAIListIndCb_SDK(AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D820000u, 0);
  *(_QWORD *)v1 = &off_24C8F5D28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D820000u, 0);
  *(_QWORD *)v1 = &off_24C8F5D28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK::ARI_IBIEmbmsSAIListIndCb_SDK(AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5D28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5D28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK::~ARI_IBIEmbmsSAIListIndCb_SDK(AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8F5D28;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40EEF2B9B0);
  v4 = (void *)*((_QWORD *)this + 10);
  if (v4)
  {
    *((_QWORD *)this + 11) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK::~ARI_IBIEmbmsSAIListIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK::pack(AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 0x82uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK::unpack(AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  void *v6;
  _OWORD *v7;
  _DWORD *v8;
  void *__p[3];
  unint64_t v11;
  BOOL v12;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v12 = 0;
  v11 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x440uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1088, &v12, &v11);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8094668F84);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBIEmbmsInterFreqInfo>::__init_with_size[abi:ne180100]<IBIEmbmsInterFreqInfo*,IBIEmbmsInterFreqInfo*>(__p, v6, (uint64_t)v6 + 136 * (v11 / 0x88), v11 / 0x88);
    AriSdk::TlvArray<IBIEmbmsInterFreqInfo,8ul>::operator=((uint64_t)this + 80, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v6, 0x1000C8094668F84);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_OWORD *)operator new();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  *((_WORD *)v7 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 130, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40EEF2B9B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<CsiIceProvisionIMEIMultipleType>::operator=<CsiIceProvisionIMEIMultipleType&,void>((uint64_t *)this + 13, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40EEF2B9B0);
  }
  LOBYTE(__p[0]) = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E1FC364(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSAIListIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2105671680;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsServiceIndCb_SDK::ARI_IBIEmbmsServiceIndCb_SDK(AriSdk::ARI_IBIEmbmsServiceIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D808000u, 0);
  *(_QWORD *)result = &off_24C8F5D60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D808000u, 0);
  *(_QWORD *)result = &off_24C8F5D60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsServiceIndCb_SDK::ARI_IBIEmbmsServiceIndCb_SDK(AriSdk::ARI_IBIEmbmsServiceIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5D60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5D60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsServiceIndCb_SDK::~ARI_IBIEmbmsServiceIndCb_SDK(AriSdk::ARI_IBIEmbmsServiceIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F5D60;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsServiceIndCb_SDK::~ARI_IBIEmbmsServiceIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsServiceIndCb_SDK::pack(AriSdk::ARI_IBIEmbmsServiceIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsServiceIndCb_SDK::unpack(AriSdk::ARI_IBIEmbmsServiceIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1FC724(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsServiceIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsServiceIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2105573376;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK::ARI_IBIEmbmsServiceLossIndCb_SDK(AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D828000u, 0);
  *(_QWORD *)result = &off_24C8F5D98;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D828000u, 0);
  *(_QWORD *)result = &off_24C8F5D98;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK::ARI_IBIEmbmsServiceLossIndCb_SDK(AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5D98;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5D98;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK::~ARI_IBIEmbmsServiceLossIndCb_SDK(AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F5D98;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK::~ARI_IBIEmbmsServiceLossIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK::pack(AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK::unpack(AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1FCB9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsServiceLossIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2105704448;
}

double AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK::ARI_IBIEmbmsServicesListIndCb_SDK(AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D818000u, 0);
  *(_QWORD *)v1 = &off_24C8F5DD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7D818000u, 0);
  *(_QWORD *)v1 = &off_24C8F5DD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK::ARI_IBIEmbmsServicesListIndCb_SDK(AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5DD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5DD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK::~ARI_IBIEmbmsServicesListIndCb_SDK(AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8F5DD0;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 12);
  if (v4)
  {
    *((_QWORD *)this + 13) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK::~ARI_IBIEmbmsServicesListIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK::pack(AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK::unpack(AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _WORD *v7;
  void *v8;
  _DWORD *v9;
  _DWORD *v10;
  void *__p[3];
  unint64_t v13;
  BOOL v14;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v14 = 0;
  v13 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0x320uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 800, &v14, &v13);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBIEmbmsServiceInfo>::__init_with_size[abi:ne180100]<IBIEmbmsServiceInfo*,IBIEmbmsServiceInfo*>(__p, v8, (uint64_t)v8 + 8 * (v13 >> 3), v13 >> 3);
    AriSdk::TlvArray<IBIEmbmsServiceInfo,100ul>::operator=((uint64_t)this + 96, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
  }
  LOBYTE(__p[0]) = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E1FD388(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsServicesListIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2105638912;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK::ARI_IBIEmbmsSessionConfigReq_SDK(AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C820000u, 0);
  *(_QWORD *)result = &off_24C8F5E08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C820000u, 0);
  *(_QWORD *)result = &off_24C8F5E08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK::ARI_IBIEmbmsSessionConfigReq_SDK(AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5E08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5E08;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK::~ARI_IBIEmbmsSessionConfigReq_SDK(AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F5E08;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40274DC3F3);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK::~ARI_IBIEmbmsSessionConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK::pack(AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 6uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK::unpack(AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_WORD *)operator new();
  *(_DWORD *)v6 = 0;
  v6[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 6, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = operator new();
    *(_DWORD *)v7 = *(_DWORD *)v6;
    *(_WORD *)(v7 + 4) = v6[2];
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C40274DC3F3);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C40274DC3F3);
  return v3;
}

void sub_20E1FD87C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40274DC3F3);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSessionConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2088894464;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK::ARI_IBIEmbmsSessionConfigRspCb_SDK(AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D020000u, 0);
  *(_QWORD *)result = &off_24C8F5E40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D020000u, 0);
  *(_QWORD *)result = &off_24C8F5E40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK::ARI_IBIEmbmsSessionConfigRspCb_SDK(AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5E40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5E40;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK::~ARI_IBIEmbmsSessionConfigRspCb_SDK(AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F5E40;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK::~ARI_IBIEmbmsSessionConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1FDBE4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSessionConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097283072;
}

double AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7C840000u, 0);
  *(_QWORD *)v1 = &off_24C8F5E78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7C840000u, 0);
  *(_QWORD *)v1 = &off_24C8F5E78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5E78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5E78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK::~ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8F5E78;
  v2 = (void *)*((_QWORD *)this + 15);
  if (v2)
  {
    *((_QWORD *)this + 16) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 10);
  if (v5)
  {
    *((_QWORD *)this + 11) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK::~ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK::pack(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 2uLL, 0), !(_DWORD)result))
          {
            v12 = (_BYTE *)*((_QWORD *)this + 15);
            if (!v12
              || (v13 = (_BYTE *)*((_QWORD *)this + 16), v12 == v13)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, v13 - v12, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK::unpack(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  _WORD *v8;
  _OWORD *v9;
  __n128 __p;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v14 = 0;
  v13 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 128, &v14, &v13);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned int>::__init_with_size[abi:ne180100]<unsigned int *,unsigned int *>(&__p, v6, (uint64_t)v6 + 4 * (v13 >> 2), v13 >> 2);
    AriSdk::TlvArray<unsigned int,32ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v14 = 0;
  v13 = 0xAAAAAAAAAAAAAAAALL;
  v9 = (_OWORD *)operator new[]();
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  v9[7] = 0u;
  v9[8] = 0u;
  v9[9] = 0u;
  v9[10] = 0u;
  v9[11] = 0u;
  v9[12] = 0u;
  v9[13] = 0u;
  v9[14] = 0u;
  v9[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 256, &v14, &v13);
  if (!(_DWORD)v3 && v14)
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v9, (uint64_t)v9 + 2 * (v13 >> 1), v13 >> 1);
    AriSdk::TlvArray<unsigned short,128ul>::operator=((std::vector<int> *)this + 5, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v9, 0x1000C80BDFB0063);
  return v3;
}

void sub_20E1FE348(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C80BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2089025536;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D040000u, 0);
  *(_QWORD *)result = &off_24C8F5EB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D040000u, 0);
  *(_QWORD *)result = &off_24C8F5EB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5EB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5EB0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK::~ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F5EB0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK::~ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E1FE840(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSetInterestedSAIFreqRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097414144;
}

double AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7C828000u, 0);
  *(_QWORD *)v1 = &off_24C8F5EE8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x7C828000u, 0);
  *(_QWORD *)v1 = &off_24C8F5EE8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5EE8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F5EE8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK::~ARI_IBIEmbmsSetInterestedTMGIListReq_SDK(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F5EE8;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK::~ARI_IBIEmbmsSetInterestedTMGIListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK::pack(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK::unpack(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _OWORD *v6;
  void *__p[3];
  unint64_t v9;
  BOOL v10;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v10 = 0;
  v9 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[13] = 0u;
  v6[14] = 0u;
  v6[15] = 0u;
  v6[16] = 0u;
  v6[17] = 0u;
  v6[18] = 0u;
  v6[19] = 0u;
  v6[20] = 0u;
  v6[21] = 0u;
  v6[22] = 0u;
  v6[23] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 384, &v10, &v9);
  if (!(_DWORD)v3 && v10)
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBIEmbmsTMGIInfoParam>::__init_with_size[abi:ne180100]<IBIEmbmsTMGIInfoParam*,IBIEmbmsTMGIInfoParam*>(__p, v6, (uint64_t)v6 + 6 * (v9 / 6), v9 / 6);
    AriSdk::TlvArray<IBIEmbmsTMGIInfoParam,64ul>::operator=((uint64_t)this + 80, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80274DC3F3);
  return v3;
}

void sub_20E1FED00(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C80274DC3F3);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2088927232;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D028000u, 0);
  *(_QWORD *)result = &off_24C8F5F20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D028000u, 0);
  *(_QWORD *)result = &off_24C8F5F20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5F20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5F20;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK::~ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F5F20;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK::~ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1FF0A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSetInterestedTMGIListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097315840;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetServiceReq_SDK::ARI_IBIEmbmsSetServiceReq_SDK(AriSdk::ARI_IBIEmbmsSetServiceReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C808000u, 0);
  *(_QWORD *)result = &off_24C8F5F58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7C808000u, 0);
  *(_QWORD *)result = &off_24C8F5F58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetServiceReq_SDK::ARI_IBIEmbmsSetServiceReq_SDK(AriSdk::ARI_IBIEmbmsSetServiceReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5F58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5F58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSetServiceReq_SDK::~ARI_IBIEmbmsSetServiceReq_SDK(AriSdk::ARI_IBIEmbmsSetServiceReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F5F58;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSetServiceReq_SDK::~ARI_IBIEmbmsSetServiceReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSetServiceReq_SDK::pack(AriSdk::ARI_IBIEmbmsSetServiceReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSetServiceReq_SDK::unpack(AriSdk::ARI_IBIEmbmsSetServiceReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1FF400(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSetServiceReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSetServiceReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2088796160;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK::ARI_IBIEmbmsSetServiceRspCb_SDK(AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D008000u, 0);
  *(_QWORD *)result = &off_24C8F5F90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x7D008000u, 0);
  *(_QWORD *)result = &off_24C8F5F90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK::ARI_IBIEmbmsSetServiceRspCb_SDK(AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5F90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F5F90;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK::~ARI_IBIEmbmsSetServiceRspCb_SDK(AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F5F90;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK::~ARI_IBIEmbmsSetServiceRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK::pack(AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK::unpack(AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E1FF75C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEmbmsSetServiceRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 2097184768;
}

_QWORD *std::vector<IBIEmbmsTMGIInfoParam>::__init_with_size[abi:ne180100]<IBIEmbmsTMGIInfoParam*,IBIEmbmsTMGIInfoParam*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(6 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 6 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E1FF828(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<IBIEmbmsInterFreqInfo>::__init_with_size[abi:ne180100]<IBIEmbmsInterFreqInfo*,IBIEmbmsInterFreqInfo*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(136 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[17 * a4];
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E1FF8C0(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<IBIEmbmsServiceInfo>::__init_with_size[abi:ne180100]<IBIEmbmsServiceInfo*,IBIEmbmsServiceInfo*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(8 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[a4];
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E1FF950(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void AriOsa::OsLog(unsigned int a1, uint64_t a2, uint64_t a3)
{
  NSObject *v5;
  int v6;
  uint64_t v7;
  __int16 v8;
  uint64_t v9;
  uint64_t v10;

  v10 = *MEMORY[0x24BDAC8D0];
  if (a1 <= 0x20 && ((1 << a1) & 0x100010100) != 0)
  {
    v5 = osLogHandle;
    if (os_log_type_enabled((os_log_t)osLogHandle, OS_LOG_TYPE_DEFAULT))
    {
      v6 = 136446466;
      v7 = a2;
      v8 = 2082;
      v9 = a3;
      _os_log_impl(&dword_20E126000, v5, OS_LOG_TYPE_DEFAULT, "%{public}s: %{public}s", (uint8_t *)&v6, 0x16u);
    }
  }
}

void AriOsa::OsLogBuf(AriOsa *this, uint64_t a2, const char *a3, const void *a4)
{
  int v4;
  unsigned int v7;
  NSObject *v8;
  const char *v9;
  uint64_t *v10;
  _BOOL4 v11;
  unsigned int v12;
  uint64_t v13;
  __int16 v14;
  int v15;
  __int16 v16;
  const char *v17;
  uint64_t v18;

  v4 = (int)a4;
  v7 = this;
  v18 = *MEMORY[0x24BDAC8D0];
  v12 = this;
  if (std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(ARI_GMID_APPROVED_FOR_PUBLIC_LOGGING, &v12))
  {
    v8 = osLogHandle;
    if (!os_log_type_enabled((os_log_t)osLogHandle, OS_LOG_TYPE_DEFAULT))
      return;
    v12 = 136446722;
    v13 = a2;
    v14 = 1040;
    v15 = v4;
    v16 = 2098;
    v17 = a3;
    v9 = "%{public}s: Bin=[%{public,libTelephonyDecoder:ARI}.*P]";
  }
  else
  {
    v12 = v7;
    v10 = std::__hash_table<unsigned int,std::hash<unsigned int>,std::equal_to<unsigned int>,std::allocator<unsigned int>>::find<unsigned int>(&ARI_GMID_SENSITIVE_LOGGING, &v12);
    v8 = osLogHandle;
    v11 = os_log_type_enabled((os_log_t)osLogHandle, OS_LOG_TYPE_DEFAULT);
    if (v10)
    {
      if (!v11)
        return;
      v12 = 136315651;
      v13 = a2;
      v14 = 1040;
      v15 = v4;
      v16 = 2101;
      v17 = a3;
      v9 = "%s: Bin=[%{sensitive,libTelephonyDecoder:ARI}.*P]";
    }
    else
    {
      if (!v11)
        return;
      v12 = 136315650;
      v13 = a2;
      v14 = 1040;
      v15 = v4;
      v16 = 2096;
      v17 = a3;
      v9 = "%s: Bin=[%{libTelephonyDecoder:ARI}.*P]";
    }
  }
  _os_log_impl(&dword_20E126000, v8, OS_LOG_TYPE_DEFAULT, v9, (uint8_t *)&v12, 0x1Cu);
}

void asString(void *a1@<X0>, uint64_t a2@<X8>)
{
  char *v4;
  void *__p[3];

  if (a1)
  {
    v4 = (char *)MEMORY[0x212BB9ED8]();
    memset(__p, 170, sizeof(__p));
    std::string::basic_string[abi:ne180100]<0>(__p, v4);
    free(v4);
    if (MEMORY[0x212BB9F50](a1) == MEMORY[0x24BDACFB8])
    {
      std::operator+<char>();
      if (SHIBYTE(__p[2]) < 0)
        operator delete(__p[0]);
    }
    else
    {
      *(_OWORD *)a2 = *(_OWORD *)__p;
      *(void **)(a2 + 16) = __p[2];
    }
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>((_QWORD *)a2, "(null xpc object)");
  }
}

void sub_20E1FFCF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

os_log_t _GLOBAL__sub_I_ari_osa_ios_cpp()
{
  os_log_t result;

  result = os_log_create("com.apple.telephony.bb", "ARI");
  osLogHandle = (uint64_t)result;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetEfSmsReq_SDK::ARI_IBISimGetEfSmsReq_SDK(AriSdk::ARI_IBISimGetEfSmsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10878000u, 0);
  *(_QWORD *)result = &off_24C8F61D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10878000u, 0);
  *(_QWORD *)result = &off_24C8F61D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetEfSmsReq_SDK::ARI_IBISimGetEfSmsReq_SDK(AriSdk::ARI_IBISimGetEfSmsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F61D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F61D8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetEfSmsReq_SDK::~ARI_IBISimGetEfSmsReq_SDK(AriSdk::ARI_IBISimGetEfSmsReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F61D8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetEfSmsReq_SDK::~ARI_IBISimGetEfSmsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetEfSmsReq_SDK::pack(AriSdk::ARI_IBISimGetEfSmsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetEfSmsReq_SDK::unpack(AriSdk::ARI_IBISimGetEfSmsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E200048(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetEfSmsReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetEfSmsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277315584;
}

double AriSdk::ARI_IBISimGetEfSmsRspCb_SDK::ARI_IBISimGetEfSmsRspCb_SDK(AriSdk::ARI_IBISimGetEfSmsRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11078000u, 0);
  *(_QWORD *)v1 = &off_24C8F6210;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11078000u, 0);
  *(_QWORD *)v1 = &off_24C8F6210;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBISimGetEfSmsRspCb_SDK::ARI_IBISimGetEfSmsRspCb_SDK(AriSdk::ARI_IBISimGetEfSmsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6210;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6210;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetEfSmsRspCb_SDK::~ARI_IBISimGetEfSmsRspCb_SDK(AriSdk::ARI_IBISimGetEfSmsRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8F6210;
  v2 = (void *)*((_QWORD *)this + 14);
  if (v2)
  {
    *((_QWORD *)this + 15) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetEfSmsRspCb_SDK::~ARI_IBISimGetEfSmsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetEfSmsRspCb_SDK::pack(AriSdk::ARI_IBISimGetEfSmsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (_BYTE *)*((_QWORD *)this + 14);
              if (!v11
                || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, v12 - v11, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetEfSmsRspCb_SDK::unpack(AriSdk::ARI_IBISimGetEfSmsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  _DWORD *v8;
  _WORD *v9;
  _OWORD *v10;
  void **v11;
  _BYTE *v12;
  void *v13;
  const char *v14;
  BOOL *v15;
  void *v16;
  void *__p;
  _BYTE *v19;
  uint64_t v20;
  size_t __sz;
  BOOL v22;
  BOOL v23[8];
  char v24;

  v23[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v23, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v23[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v23[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, v23, 0);
  if ((_DWORD)v3 || !v23[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v23[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, v23, 0);
  if ((_DWORD)v3 || !v23[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v23[0] = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, v23, 0);
  if ((_DWORD)v3 || !v23[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v23[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, v23, 0);
  if ((_DWORD)v3 || !v23[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v23[0] = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 2, v23, 0);
  if ((_DWORD)v3 || !v23[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  v22 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  v10[7] = 0u;
  v10[8] = 0u;
  v10[9] = 0u;
  v10[10] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 176, &v22, &__sz);
  if (!(_DWORD)v3 && v22)
  {
    v19 = 0;
    v20 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    v11 = (void **)((char *)this + 112);
    v13 = __p;
    v12 = v19;
    if ((unint64_t)(v19 - (_BYTE *)__p) < 0xB1)
    {
      v16 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 15) = v16;
        operator delete(v16);
        *v11 = 0;
        *((_QWORD *)this + 15) = 0;
        *((_QWORD *)this + 16) = 0;
        v13 = __p;
        v12 = v19;
      }
      *((_QWORD *)this + 14) = v13;
      *((_QWORD *)this + 15) = v12;
      *((_QWORD *)this + 16) = v20;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v23);
      if (v24 >= 0)
        v15 = v23;
      else
        v15 = *(BOOL **)v23;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 112, v19 - (_BYTE *)__p, 176);
      if (v24 < 0)
        operator delete(*(void **)v23);
      if (__p)
      {
        v19 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  return v3;
}

void sub_20E2008EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetEfSmsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetEfSmsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285704192;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetMsgListReq_SDK::ARI_IBISimGetMsgListReq_SDK(AriSdk::ARI_IBISimGetMsgListReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10870000u, 0);
  *(_QWORD *)result = &off_24C8F6248;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10870000u, 0);
  *(_QWORD *)result = &off_24C8F6248;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetMsgListReq_SDK::ARI_IBISimGetMsgListReq_SDK(AriSdk::ARI_IBISimGetMsgListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6248;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6248;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetMsgListReq_SDK::~ARI_IBISimGetMsgListReq_SDK(AriSdk::ARI_IBISimGetMsgListReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F6248;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetMsgListReq_SDK::~ARI_IBISimGetMsgListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetMsgListReq_SDK::pack(AriSdk::ARI_IBISimGetMsgListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetMsgListReq_SDK::unpack(AriSdk::ARI_IBISimGetMsgListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E200CD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetMsgListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetMsgListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277282816;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetMsgListRspCb_SDK::ARI_IBISimGetMsgListRspCb_SDK(AriSdk::ARI_IBISimGetMsgListRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11070000u, 0);
  *(_QWORD *)result = &off_24C8F6280;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11070000u, 0);
  *(_QWORD *)result = &off_24C8F6280;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetMsgListRspCb_SDK::ARI_IBISimGetMsgListRspCb_SDK(AriSdk::ARI_IBISimGetMsgListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6280;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6280;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetMsgListRspCb_SDK::~ARI_IBISimGetMsgListRspCb_SDK(AriSdk::ARI_IBISimGetMsgListRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F6280;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C405655108DLL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetMsgListRspCb_SDK::~ARI_IBISimGetMsgListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetMsgListRspCb_SDK::pack(AriSdk::ARI_IBISimGetMsgListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x7FCuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetMsgListRspCb_SDK::unpack(AriSdk::ARI_IBISimGetMsgListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0x7FCuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2044, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (void *)operator new();
    memcpy(v7, v6, 0x7FCuLL);
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C405655108DLL);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C405655108DLL);
  return v3;
}

void sub_20E201148(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C405655108DLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetMsgListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetMsgListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285671424;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsGetServiceStatusReq_SDK::ARI_IBISmsGetServiceStatusReq_SDK(AriSdk::ARI_IBISmsGetServiceStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10858000u, 0);
  *(_QWORD *)result = &off_24C8F62B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10858000u, 0);
  *(_QWORD *)result = &off_24C8F62B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsGetServiceStatusReq_SDK::ARI_IBISmsGetServiceStatusReq_SDK(AriSdk::ARI_IBISmsGetServiceStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F62B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F62B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISmsGetServiceStatusReq_SDK::~ARI_IBISmsGetServiceStatusReq_SDK(AriSdk::ARI_IBISmsGetServiceStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F62B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsGetServiceStatusReq_SDK::~ARI_IBISmsGetServiceStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsGetServiceStatusReq_SDK::pack(AriSdk::ARI_IBISmsGetServiceStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsGetServiceStatusReq_SDK::unpack(AriSdk::ARI_IBISmsGetServiceStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2014B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsGetServiceStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsGetServiceStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277184512;
}

double AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK::ARI_IBISmsGetServiceStatusRspCb_SDK(AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11058000u, 0);
  *(_QWORD *)v1 = &off_24C8F62F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11058000u, 0);
  *(_QWORD *)v1 = &off_24C8F62F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK::ARI_IBISmsGetServiceStatusRspCb_SDK(AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F62F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F62F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK::~ARI_IBISmsGetServiceStatusRspCb_SDK(AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8F62F0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK::~ARI_IBISmsGetServiceStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK::pack(AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK::unpack(AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2019CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsGetServiceStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285573120;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetSmscAddressReq_SDK::ARI_IBISimGetSmscAddressReq_SDK(AriSdk::ARI_IBISimGetSmscAddressReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10850000u, 0);
  *(_QWORD *)result = &off_24C8F6328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10850000u, 0);
  *(_QWORD *)result = &off_24C8F6328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetSmscAddressReq_SDK::ARI_IBISimGetSmscAddressReq_SDK(AriSdk::ARI_IBISimGetSmscAddressReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6328;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetSmscAddressReq_SDK::~ARI_IBISimGetSmscAddressReq_SDK(AriSdk::ARI_IBISimGetSmscAddressReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F6328;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetSmscAddressReq_SDK::~ARI_IBISimGetSmscAddressReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetSmscAddressReq_SDK::pack(AriSdk::ARI_IBISimGetSmscAddressReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetSmscAddressReq_SDK::unpack(AriSdk::ARI_IBISimGetSmscAddressReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E201D30(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetSmscAddressReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetSmscAddressReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277151744;
}

double AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK::ARI_IBISimGetSmscAddressRspCb_SDK(AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11050000u, 0);
  *(_QWORD *)v1 = &off_24C8F6360;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11050000u, 0);
  *(_QWORD *)v1 = &off_24C8F6360;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK::ARI_IBISimGetSmscAddressRspCb_SDK(AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6360;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6360;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK::~ARI_IBISimGetSmscAddressRspCb_SDK(AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8F6360;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40837A7CCELL);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK::~ARI_IBISimGetSmscAddressRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK::pack(AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x17uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK::unpack(AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _QWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v7 + 15) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 23, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<IBISimSmscAddress>::operator=<IBISimSmscAddress&,void>((uint64_t *)this + 11, (uint64_t)v7);
  MEMORY[0x212BB9B60](v7, 0x1000C40837A7CCELL);
  return v3;
}

void sub_20E20224C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40837A7CCELL);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISimSmscAddress>::operator=<IBISimSmscAddress&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_QWORD *)(v4 + 15) = *(_QWORD *)(a2 + 15);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40837A7CCELL);
  return a1;
}

BOOL AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetSmscAddressRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285540352;
}

double AriSdk::ARI_IBISimMsgListIndCb_SDK::ARI_IBISimMsgListIndCb_SDK(AriSdk::ARI_IBISimMsgListIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11828000u, 0);
  *(_QWORD *)v1 = &off_24C8F6398;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11828000u, 0);
  *(_QWORD *)v1 = &off_24C8F6398;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimMsgListIndCb_SDK::ARI_IBISimMsgListIndCb_SDK(AriSdk::ARI_IBISimMsgListIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6398;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6398;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimMsgListIndCb_SDK::~ARI_IBISimMsgListIndCb_SDK(AriSdk::ARI_IBISimMsgListIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8F6398;
  v2 = (void *)*((_QWORD *)this + 11);
  if (v2)
  {
    *((_QWORD *)this + 12) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimMsgListIndCb_SDK::~ARI_IBISimMsgListIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimMsgListIndCb_SDK::pack(AriSdk::ARI_IBISimMsgListIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimMsgListIndCb_SDK::unpack(AriSdk::ARI_IBISimMsgListIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  void *v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  size_t v12;
  void **v13;
  const char *v14;
  void **v15;
  void *v16;
  unint64_t v18;
  BOOL v19;
  void *__p[2];
  char v21;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x7F8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2040, &v19, &v18);
  if (!(_DWORD)v3 && v19)
  {
    v8 = v18;
    if (v18 >= 8)
    {
      v12 = v18 & 0xFFFFFFFFFFFFFFF8;
      v9 = (char *)operator new(v18 & 0xFFFFFFFFFFFFFFF8);
      v11 = &v9[8 * (v8 >> 3)];
      memcpy(v9, v7, v12);
      v10 = &v9[v12];
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0;
    }
    v13 = (void **)((char *)this + 88);
    if ((unint64_t)(v10 - v9) < 0x7F9)
    {
      v16 = *v13;
      if (*v13)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v13 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v9;
      *((_QWORD *)this + 12) = v10;
      *((_QWORD *)this + 13) = v11;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v21 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, v13, (v10 - v9) >> 3, 255);
      if (v21 < 0)
        operator delete(__p[0]);
      if (v9)
        operator delete(v9);
    }
  }
  MEMORY[0x212BB9B48](v7, 0x1000C804A09149ALL);
  return v3;
}

void sub_20E2028F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C804A09149ALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimMsgListIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimMsgListIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 293765120;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK::ARI_IBISimMsgWaitIndicatorIndCb_SDK(AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11820000u, 0);
  *(_QWORD *)result = &off_24C8F63D0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11820000u, 0);
  *(_QWORD *)result = &off_24C8F63D0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK::ARI_IBISimMsgWaitIndicatorIndCb_SDK(AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F63D0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F63D0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK::~ARI_IBISimMsgWaitIndicatorIndCb_SDK(AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F63D0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4005A209FELL);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK::~ARI_IBISimMsgWaitIndicatorIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK::pack(AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK::unpack(AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4005A209FELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsNr5gNeighborCellInfo>::operator=<IBICallPsNr5gNeighborCellInfo&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4005A209FELL);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E202D94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimMsgWaitIndicatorIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 293732352;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK::ARI_IBIMsSimSetSmsTagReq_SDK(AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10880000u, 0);
  *(_QWORD *)result = &off_24C8F6408;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10880000u, 0);
  *(_QWORD *)result = &off_24C8F6408;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK::ARI_IBIMsSimSetSmsTagReq_SDK(AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6408;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6408;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK::~ARI_IBIMsSimSetSmsTagReq_SDK(AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F6408;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK::~ARI_IBIMsSimSetSmsTagReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK::pack(AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK::unpack(AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2031E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsSimSetSmsTagReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277348352;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSetSmsTagRspCb_SDK::ARI_IBISimSetSmsTagRspCb_SDK(AriSdk::ARI_IBISimSetSmsTagRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11080000u, 0);
  *(_QWORD *)result = &off_24C8F6440;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11080000u, 0);
  *(_QWORD *)result = &off_24C8F6440;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSetSmsTagRspCb_SDK::ARI_IBISimSetSmsTagRspCb_SDK(AriSdk::ARI_IBISimSetSmsTagRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6440;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6440;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimSetSmsTagRspCb_SDK::~ARI_IBISimSetSmsTagRspCb_SDK(AriSdk::ARI_IBISimSetSmsTagRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F6440;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimSetSmsTagRspCb_SDK::~ARI_IBISimSetSmsTagRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimSetSmsTagRspCb_SDK::pack(AriSdk::ARI_IBISimSetSmsTagRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimSetSmsTagRspCb_SDK::unpack(AriSdk::ARI_IBISimSetSmsTagRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E20362C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimSetSmsTagRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimSetSmsTagRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285736960;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSetSmscAddressReq_SDK::ARI_IBISimSetSmscAddressReq_SDK(AriSdk::ARI_IBISimSetSmscAddressReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10848000u, 0);
  *(_QWORD *)result = &off_24C8F6478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10848000u, 0);
  *(_QWORD *)result = &off_24C8F6478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSetSmscAddressReq_SDK::ARI_IBISimSetSmscAddressReq_SDK(AriSdk::ARI_IBISimSetSmscAddressReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6478;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimSetSmscAddressReq_SDK::~ARI_IBISimSetSmscAddressReq_SDK(AriSdk::ARI_IBISimSetSmscAddressReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F6478;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40837A7CCELL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimSetSmscAddressReq_SDK::~ARI_IBISimSetSmscAddressReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimSetSmscAddressReq_SDK::pack(AriSdk::ARI_IBISimSetSmscAddressReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x17uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimSetSmscAddressReq_SDK::unpack(AriSdk::ARI_IBISimSetSmscAddressReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _QWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v8 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)((char *)v6 + 15) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 23, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBISimSmscAddress>::operator=<IBISimSmscAddress&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40837A7CCELL);
  return v3;
}

void sub_20E203A74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40837A7CCELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimSetSmscAddressReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimSetSmscAddressReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277118976;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK::ARI_IBISimSetSmscAddressRspCb_SDK(AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11048000u, 0);
  *(_QWORD *)result = &off_24C8F64B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11048000u, 0);
  *(_QWORD *)result = &off_24C8F64B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK::ARI_IBISimSetSmscAddressRspCb_SDK(AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F64B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F64B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK::~ARI_IBISimSetSmscAddressRspCb_SDK(AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F64B0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK::~ARI_IBISimSetSmscAddressRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK::pack(AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK::unpack(AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E203EDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimSetSmscAddressRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285507584;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSmscAddressIndCb_SDK::ARI_IBISimSmscAddressIndCb_SDK(AriSdk::ARI_IBISimSmscAddressIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11810000u, 0);
  *(_QWORD *)result = &off_24C8F64E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11810000u, 0);
  *(_QWORD *)result = &off_24C8F64E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimSmscAddressIndCb_SDK::ARI_IBISimSmscAddressIndCb_SDK(AriSdk::ARI_IBISimSmscAddressIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F64E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F64E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimSmscAddressIndCb_SDK::~ARI_IBISimSmscAddressIndCb_SDK(AriSdk::ARI_IBISimSmscAddressIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F64E8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40837A7CCELL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimSmscAddressIndCb_SDK::~ARI_IBISimSmscAddressIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimSmscAddressIndCb_SDK::pack(AriSdk::ARI_IBISimSmscAddressIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x17uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimSmscAddressIndCb_SDK::unpack(AriSdk::ARI_IBISimSmscAddressIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v6[1] = 0;
  *(_QWORD *)((char *)v6 + 15) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 23, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBISimSmscAddress>::operator=<IBISimSmscAddress&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40837A7CCELL);
  return v3;
}

void sub_20E204320(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40837A7CCELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimSmscAddressIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimSmscAddressIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 293666816;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK::ARI_IBISmsConfirmSmsDataDownloadAck_SDK(AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10838000u, 1);
  *(_QWORD *)result = &off_24C8F6520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10838000u, 1);
  *(_QWORD *)result = &off_24C8F6520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK::ARI_IBISmsConfirmSmsDataDownloadAck_SDK(AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK::~ARI_IBISmsConfirmSmsDataDownloadAck_SDK(AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F6520;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK::~ARI_IBISmsConfirmSmsDataDownloadAck_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK::pack(AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK::unpack(AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E204774(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsConfirmSmsDataDownloadAck_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277053440;
}

double AriSdk::ARI_IBISmsDataDownloadReq_SDK::ARI_IBISmsDataDownloadReq_SDK(AriSdk::ARI_IBISmsDataDownloadReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x10828000u, 0);
  *(_QWORD *)v1 = &off_24C8F6558;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x10828000u, 0);
  *(_QWORD *)v1 = &off_24C8F6558;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISmsDataDownloadReq_SDK::ARI_IBISmsDataDownloadReq_SDK(AriSdk::ARI_IBISmsDataDownloadReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6558;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6558;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISmsDataDownloadReq_SDK::~ARI_IBISmsDataDownloadReq_SDK(AriSdk::ARI_IBISmsDataDownloadReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8F6558;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40D5DA979FLL);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsDataDownloadReq_SDK::~ARI_IBISmsDataDownloadReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsDataDownloadReq_SDK::pack(AriSdk::ARI_IBISmsDataDownloadReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0xB1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsDataDownloadReq_SDK::unpack(AriSdk::ARI_IBISmsDataDownloadReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  _OWORD *v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v16 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v15 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v14 = 0;
  v10 = (_OWORD *)operator new();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  v10[7] = 0u;
  v10[8] = 0u;
  v10[9] = 0u;
  v10[10] = 0u;
  *((_BYTE *)v10 + 176) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 177, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40D5DA979FLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBITpduData>::operator=<IBITpduData&,void>((uint64_t *)this + 12, (uint64_t)v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40D5DA979FLL);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v11, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E204EAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBITpduData>::operator=<IBITpduData&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v4 + 144) = v5;
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(a2 + 160);
  *(_BYTE *)(v4 + 176) = *(_BYTE *)(a2 + 176);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v9;
  v10 = *a1;
  *a1 = v4;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40D5DA979FLL);
  return a1;
}

BOOL AriSdk::ARI_IBISmsDataDownloadReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsDataDownloadReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 276987904;
}

double AriSdk::ARI_IBISmsDataDownloadRspCb_SDK::ARI_IBISmsDataDownloadRspCb_SDK(AriSdk::ARI_IBISmsDataDownloadRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11028000u, 0);
  *(_QWORD *)v1 = &off_24C8F6590;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11028000u, 0);
  *(_QWORD *)v1 = &off_24C8F6590;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISmsDataDownloadRspCb_SDK::ARI_IBISmsDataDownloadRspCb_SDK(AriSdk::ARI_IBISmsDataDownloadRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6590;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6590;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISmsDataDownloadRspCb_SDK::~ARI_IBISmsDataDownloadRspCb_SDK(AriSdk::ARI_IBISmsDataDownloadRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8F6590;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40C330D067);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsDataDownloadRspCb_SDK::~ARI_IBISmsDataDownloadRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsDataDownloadRspCb_SDK::pack(AriSdk::ARI_IBISmsDataDownloadRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x81uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsDataDownloadRspCb_SDK::unpack(AriSdk::ARI_IBISmsDataDownloadRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v18 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v17 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v16 = 0;
  v8 = operator new();
  *(_OWORD *)v8 = 0u;
  *(_OWORD *)(v8 + 16) = 0u;
  *(_OWORD *)(v8 + 32) = 0u;
  *(_OWORD *)(v8 + 48) = 0u;
  *(_OWORD *)(v8 + 64) = 0u;
  *(_OWORD *)(v8 + 80) = 0u;
  *(_OWORD *)(v8 + 96) = 0u;
  *(_OWORD *)(v8 + 112) = 0u;
  *(_BYTE *)(v8 + 128) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, (void *)v8, 129, &v16, 0);
  if (!(_DWORD)v3 && v16)
  {
    v9 = operator new();
    v10 = *(_OWORD *)(v8 + 112);
    *(_OWORD *)(v9 + 96) = *(_OWORD *)(v8 + 96);
    *(_OWORD *)(v9 + 112) = v10;
    *(_BYTE *)(v9 + 128) = *(_BYTE *)(v8 + 128);
    v11 = *(_OWORD *)(v8 + 48);
    *(_OWORD *)(v9 + 32) = *(_OWORD *)(v8 + 32);
    *(_OWORD *)(v9 + 48) = v11;
    v12 = *(_OWORD *)(v8 + 80);
    *(_OWORD *)(v9 + 64) = *(_OWORD *)(v8 + 64);
    *(_OWORD *)(v9 + 80) = v12;
    v13 = *(_OWORD *)(v8 + 16);
    *(_OWORD *)v9 = *(_OWORD *)v8;
    *(_OWORD *)(v9 + 16) = v13;
    v14 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v14)
      MEMORY[0x212BB9B60](v14, 0x1000C40C330D067);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C40C330D067);
  return v3;
}

void sub_20E2055E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40C330D067);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsDataDownloadRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsDataDownloadRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285376512;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK::ARI_IBISmsGetMsgWaitIndReq_SDK(AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10860000u, 0);
  *(_QWORD *)result = &off_24C8F65C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10860000u, 0);
  *(_QWORD *)result = &off_24C8F65C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK::ARI_IBISmsGetMsgWaitIndReq_SDK(AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F65C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F65C8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK::~ARI_IBISmsGetMsgWaitIndReq_SDK(AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8F65C8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK::~ARI_IBISmsGetMsgWaitIndReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK::pack(AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK::unpack(AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2058A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsGetMsgWaitIndReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277217280;
}

double AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK::ARI_IBISmsGetMsgWaitIndRspCb_SDK(AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11060000u, 0);
  *(_QWORD *)v1 = &off_24C8F6600;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11060000u, 0);
  *(_QWORD *)v1 = &off_24C8F6600;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK::ARI_IBISmsGetMsgWaitIndRspCb_SDK(AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6600;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6600;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK::~ARI_IBISmsGetMsgWaitIndRspCb_SDK(AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8F6600;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4005A209FELL);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK::~ARI_IBISmsGetMsgWaitIndRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK::pack(AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0xCuLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK::unpack(AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 12, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<IBICallPsNr5gNeighborCellInfo>::operator=<IBICallPsNr5gNeighborCellInfo&,void>((uint64_t *)this + 11, (uint64_t)v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4005A209FELL);
  return v3;
}

void sub_20E205DA4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4005A209FELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsGetMsgWaitIndRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285605888;
}

double AriSdk::ARI_IBISmsIncomingIndCb_SDK::ARI_IBISmsIncomingIndCb_SDK(AriSdk::ARI_IBISmsIncomingIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11808000u, 0);
  *(_QWORD *)v1 = &off_24C8F6638;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11808000u, 0);
  *(_QWORD *)v1 = &off_24C8F6638;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBISmsIncomingIndCb_SDK::ARI_IBISmsIncomingIndCb_SDK(AriSdk::ARI_IBISmsIncomingIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6638;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6638;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBISmsIncomingIndCb_SDK::~ARI_IBISmsIncomingIndCb_SDK(AriSdk::ARI_IBISmsIncomingIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8F6638;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40A60B3F59);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsIncomingIndCb_SDK::~ARI_IBISmsIncomingIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsIncomingIndCb_SDK::pack(AriSdk::ARI_IBISmsIncomingIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0xB8uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 0x104uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsIncomingIndCb_SDK::unpack(AriSdk::ARI_IBISmsIncomingIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _WORD *v7;
  _OWORD *v8;
  _DWORD *v9;
  _BYTE *v10;
  _DWORD *v11;
  _OWORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v18 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  *((_QWORD *)v8 + 22) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 184, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40A60B3F59);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISmsData>::operator=<IBISmsData&,void>((uint64_t *)this + 12, (uint64_t)v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40A60B3F59);
  }
  v17 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v16 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v15 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v14 = 0;
  v12 = (_OWORD *)operator new();
  *v12 = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  v12[3] = 0u;
  v12[4] = 0u;
  v12[5] = 0u;
  v12[6] = 0u;
  v12[7] = 0u;
  v12[8] = 0u;
  v12[9] = 0u;
  v12[10] = 0u;
  v12[11] = 0u;
  v12[12] = 0u;
  v12[13] = 0u;
  v12[14] = 0u;
  v12[15] = 0u;
  *((_DWORD *)v12 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 260, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<IBICdmaTpduData>::operator=<IBICdmaTpduData&,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C408757D331);
  return v3;
}

void sub_20E206758(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISmsData>::operator=<IBISmsData&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v4 + 144) = v5;
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(a2 + 160);
  *(_QWORD *)(v4 + 176) = *(_QWORD *)(a2 + 176);
  v6 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v6;
  v7 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 112) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v9;
  v10 = *a1;
  *a1 = v4;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40A60B3F59);
  return a1;
}

uint64_t *AriSdk::Tlv<IBICdmaTpduData>::operator=<IBICdmaTpduData&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x104uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C408757D331);
  return a1;
}

BOOL AriSdk::ARI_IBISmsIncomingIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsIncomingIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 293634048;
}

double AriSdk::ARI_IBISmsIncomingSmsAck_SDK::ARI_IBISmsIncomingSmsAck_SDK(AriSdk::ARI_IBISmsIncomingSmsAck_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x10820000u, 0);
  *(_QWORD *)v1 = &off_24C8F6670;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x10820000u, 0);
  *(_QWORD *)v1 = &off_24C8F6670;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISmsIncomingSmsAck_SDK::ARI_IBISmsIncomingSmsAck_SDK(AriSdk::ARI_IBISmsIncomingSmsAck_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6670;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6670;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISmsIncomingSmsAck_SDK::~ARI_IBISmsIncomingSmsAck_SDK(AriSdk::ARI_IBISmsIncomingSmsAck_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8F6670;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40D5DA979FLL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsIncomingSmsAck_SDK::~ARI_IBISmsIncomingSmsAck_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsIncomingSmsAck_SDK::pack(AriSdk::ARI_IBISmsIncomingSmsAck_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0xB1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsIncomingSmsAck_SDK::unpack(AriSdk::ARI_IBISmsIncomingSmsAck_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  _DWORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v9 = (_OWORD *)operator new();
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  v9[7] = 0u;
  v9[8] = 0u;
  v9[9] = 0u;
  v9[10] = 0u;
  *((_BYTE *)v9 + 176) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 177, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40D5DA979FLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBITpduData>::operator=<IBITpduData&,void>((uint64_t *)this + 11, (uint64_t)v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40D5DA979FLL);
  }
  v12 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E206F20(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsIncomingSmsAck_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsIncomingSmsAck_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 276955136;
}

double AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK::ARI_IBISmsDeliverySessionStatusCb_SDK(AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11020000u, 0);
  *(_QWORD *)v1 = &off_24C8F66A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11020000u, 0);
  *(_QWORD *)v1 = &off_24C8F66A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK::ARI_IBISmsDeliverySessionStatusCb_SDK(AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F66A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F66A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK::~ARI_IBISmsDeliverySessionStatusCb_SDK(AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8F66A8;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK::~ARI_IBISmsDeliverySessionStatusCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK::pack(AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK::unpack(AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v12 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E20757C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsDeliverySessionStatusCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285343744;
}

double AriSdk::ARI_IBISmsSendReq_V2_SDK::ARI_IBISmsSendReq_V2_SDK(AriSdk::ARI_IBISmsSendReq_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x10830000u, 0);
  *(_QWORD *)v1 = &off_24C8F66E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x10830000u, 0);
  *(_QWORD *)v1 = &off_24C8F66E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBISmsSendReq_V2_SDK::ARI_IBISmsSendReq_V2_SDK(AriSdk::ARI_IBISmsSendReq_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F66E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F66E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBISmsSendReq_V2_SDK::~ARI_IBISmsSendReq_V2_SDK(AriSdk::ARI_IBISmsSendReq_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8F66E0;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408757D331);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40A60B3F59);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsSendReq_V2_SDK::~ARI_IBISmsSendReq_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsSendReq_V2_SDK::pack(AriSdk::ARI_IBISmsSendReq_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0xB8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 2uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 0x104uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsSendReq_V2_SDK::unpack(AriSdk::ARI_IBISmsSendReq_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _BYTE *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  _WORD *v15;
  _OWORD *v16;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;

  v26 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v26, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v26;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v25 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  *((_QWORD *)v5 + 22) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 184, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40A60B3F59);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISmsData>::operator=<IBISmsData&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40A60B3F59);
  }
  v24 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v23 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v22 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 1, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v21 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v11, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v20 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v12, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = (_DWORD *)operator new();
    *v13 = *v12;
    v14 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v13;
    if (v14)
      MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v19 = 0;
  v15 = (_WORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v15, 2, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 15, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C40BDFB0063);
  }
  v18 = 0;
  v16 = (_OWORD *)operator new();
  *v16 = 0u;
  v16[1] = 0u;
  v16[2] = 0u;
  v16[3] = 0u;
  v16[4] = 0u;
  v16[5] = 0u;
  v16[6] = 0u;
  v16[7] = 0u;
  v16[8] = 0u;
  v16[9] = 0u;
  v16[10] = 0u;
  v16[11] = 0u;
  v16[12] = 0u;
  v16[13] = 0u;
  v16[14] = 0u;
  v16[15] = 0u;
  *((_DWORD *)v16 + 64) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v16, 260, &v18, 0);
  if (!(_DWORD)v3 && v18)
    AriSdk::Tlv<IBICdmaTpduData>::operator=<IBICdmaTpduData&,void>((uint64_t *)this + 16, v16);
  MEMORY[0x212BB9B60](v16, 0x1000C408757D331);
  return v3;
}

void sub_20E207FA0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408757D331);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsSendReq_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsSendReq_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277020672;
}

double AriSdk::ARI_IBISmsSendRspCb_V2_SDK::ARI_IBISmsSendRspCb_V2_SDK(AriSdk::ARI_IBISmsSendRspCb_V2_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11030000u, 0);
  *(_QWORD *)v1 = &off_24C8F6718;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11030000u, 0);
  *(_QWORD *)v1 = &off_24C8F6718;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBISmsSendRspCb_V2_SDK::ARI_IBISmsSendRspCb_V2_SDK(AriSdk::ARI_IBISmsSendRspCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6718;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6718;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBISmsSendRspCb_V2_SDK::~ARI_IBISmsSendRspCb_V2_SDK(AriSdk::ARI_IBISmsSendRspCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C8F6718;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsSendRspCb_V2_SDK::~ARI_IBISmsSendRspCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsSendRspCb_V2_SDK::pack(AriSdk::ARI_IBISmsSendRspCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v14, 2uLL, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsSendRspCb_V2_SDK::unpack(AriSdk::ARI_IBISmsSendRspCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  _WORD *v19;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;
  BOOL v29;
  BOOL v30;

  v30 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v30, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v30;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v29 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v28 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v28, 0);
  if ((_DWORD)v3 || !v28)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v27 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v26 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 4, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v25 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v11, 4, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v24 = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v12, 4, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  v23 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v13, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = (_DWORD *)operator new();
    *v14 = *v13;
    v15 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v14;
    if (v15)
      MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v22 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v16, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = (_DWORD *)operator new();
    *v17 = *v16;
    v18 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = v17;
    if (v18)
      MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  v21 = 0;
  v19 = (_WORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v19, 2, &v21, 0);
  if (!(_DWORD)v3 && v21)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 17, v19);
  MEMORY[0x212BB9B60](v19, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E208AE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsSendRspCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsSendRspCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285409280;
}

double AriSdk::ARI_IBISmsServiceIndCb_SDK::ARI_IBISmsServiceIndCb_SDK(AriSdk::ARI_IBISmsServiceIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11818000u, 0);
  *(_QWORD *)v1 = &off_24C8F6750;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x11818000u, 0);
  *(_QWORD *)v1 = &off_24C8F6750;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISmsServiceIndCb_SDK::ARI_IBISmsServiceIndCb_SDK(AriSdk::ARI_IBISmsServiceIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6750;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8F6750;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISmsServiceIndCb_SDK::~ARI_IBISmsServiceIndCb_SDK(AriSdk::ARI_IBISmsServiceIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8F6750;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsServiceIndCb_SDK::~ARI_IBISmsServiceIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsServiceIndCb_SDK::pack(AriSdk::ARI_IBISmsServiceIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsServiceIndCb_SDK::unpack(AriSdk::ARI_IBISmsServiceIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E209040(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsServiceIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsServiceIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 293699584;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK::ARI_IBISmsSetMsgWaitIndReq_SDK(AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10868000u, 0);
  *(_QWORD *)result = &off_24C8F6788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10868000u, 0);
  *(_QWORD *)result = &off_24C8F6788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK::ARI_IBISmsSetMsgWaitIndReq_SDK(AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F6788;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK::~ARI_IBISmsSetMsgWaitIndReq_SDK(AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8F6788;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4005A209FELL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK::~ARI_IBISmsSetMsgWaitIndReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK::pack(AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK::unpack(AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 12, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsNr5gNeighborCellInfo>::operator=<IBICallPsNr5gNeighborCellInfo&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4005A209FELL);
  return v3;
}

void sub_20E2093B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4005A209FELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsSetMsgWaitIndReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277250048;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK::ARI_IBISmsSetMsgWaitIndRspCb_SDK(AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11068000u, 0);
  *(_QWORD *)result = &off_24C8F67C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x11068000u, 0);
  *(_QWORD *)result = &off_24C8F67C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK::ARI_IBISmsSetMsgWaitIndRspCb_SDK(AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F67C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F67C0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK::~ARI_IBISmsSetMsgWaitIndRspCb_SDK(AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F67C0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK::~ARI_IBISmsSetMsgWaitIndRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK::pack(AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK::unpack(AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E209800(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsSetMsgWaitIndRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 285638656;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK::ARI_IBISmsSetSendMoreMessagesStatus_SDK(AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10840000u, 1);
  *(_QWORD *)result = &off_24C8F67F8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x10840000u, 1);
  *(_QWORD *)result = &off_24C8F67F8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK::ARI_IBISmsSetSendMoreMessagesStatus_SDK(AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F67F8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8F67F8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK::~ARI_IBISmsSetSendMoreMessagesStatus_SDK(AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8F67F8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK::~ARI_IBISmsSetSendMoreMessagesStatus_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK::pack(AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK::unpack(AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E209C78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK::hasDeclaredGmid(AriSdk::ARI_IBISmsSetSendMoreMessagesStatus_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 277086208;
}

uint64_t ARI_CsiIceProvisionCKeyHashType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionCKeyHashType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionEncSessionKeyType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionEncSessionKeyType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionIMEIMultipleType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionIMEIMultipleType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionIMEIType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionIMEIType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionMEIDType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionMEIDType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionManifestType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionManifestType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionPubkeyType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionPubkeyType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionSKeyHashType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionSKeyHashType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionSNUMType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceProvisionSNUMType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecActivationManifestType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecActivationManifestType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecActivationPubkeyHashType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecActivationPubkeyHashType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecActivationVersionType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecActivationVersionType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecBootstrapVersionType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecBootstrapVersionType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecFactoryActivationPubkeyHashType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecFactoryActivationPubkeyHashType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecGidType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecGidType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecGriVersionType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecGriVersionType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecIccidType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecIccidType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecImsiType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecImsiType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecMoringaDataType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecMoringaDataType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecPriVersionType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecPriVersionType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecRFSelfTestTicketType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIceSecRFSelfTestTicketType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecBMHash_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecBMHash_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecPkHashInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecPkHashInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecUnpersFtabHash_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiSecUnpersFtabHash_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt16_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt16_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt8_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaUInt8_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t Ari::LogConfig(uint64_t result, uint64_t (*a2)(AriOsa *__hidden this, unsigned int, const char *), void *a3)
{
  DefaultTransportTrafficLogger = a3;
  DefaultLogLevel = result;
  if (a2)
    DefaultStringLogger = a2;
  return result;
}

uint64_t Ari::LogConfig(uint64_t this, uint64_t (*a2)(AriOsa *__hidden this, unsigned int, const char *), void (*a3)(unsigned int, const char *))
{
  DefaultLogLevel = this;
  if (a2)
    DefaultStringLogger = a2;
  return this;
}

uint64_t Ari::GetLogLevels(Ari *this)
{
  return DefaultLogLevel;
}

void Ari::LoggerDisableNewLineAppending(Ari *this)
{
  DisableNewLineAppending = 1;
}

void Ari::Log(Ari *this, const char *a2, const char *a3, ...)
{
  size_t v5;
  char *v6;
  char *v7;
  const char *v8;
  va_list v9;
  int v10;
  uint64_t v11;
  va_list va;

  va_start(va, a3);
  v11 = *MEMORY[0x24BDAC8D0];
  if ((DefaultLogLevel & this) != 0)
  {
    if (DisableNewLineAppending)
      v5 = 256;
    else
      v5 = 257;
    v6 = (char *)AriOsa::MemAlloc((AriOsa *)4, v5);
    if (v6)
    {
      v7 = v6;
      *v6 = 0;
      va_copy(v9, va);
      vsnprintf(v6, 0x100uLL, a2, va);
      if ((DisableNewLineAppending & 1) == 0)
        *(_WORD *)&v7[strlen(v7)] = 10;
      if (DefaultStringLogger)
        DefaultStringLogger(this, v7, v8);
      else
        AriOsa::Log(this, v7, v8);
      AriOsa::OsLog(this, (uint64_t)"ari", (uint64_t)v7);
      free(v7);
    }
    else
    {
      v9 = (va_list)0xAAAAAAAAAAAAAAAALL;
      v10 = -1431655766;
      AriOsa::OsGetCurrentThreadName((AriOsa *)&v9, (char *)0xC);
      printf("%11s%s%s", (const char *)&v9, "[ERROR]: ", "MemAlloc returns NULL");
    }
  }
}

void Ari::LogBuf(Ari *this, const char *a2, const char *a3, unsigned __int8 *a4, char *a5, unsigned int a6)
{
  int v8;
  char *v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  const char *v16;
  const char *v17;
  unint64_t v19;
  int v20;
  uint64_t v21;

  v21 = *MEMORY[0x24BDAC8D0];
  if ((DefaultLogLevel & 0x40) != 0)
  {
    v8 = (int)a3;
    v11 = (char *)AriOsa::MemAlloc((AriOsa *)4, 0x140uLL);
    if (v11)
    {
      v12 = v11;
      *v11 = 0;
      v13 = v11 + 256;
      snprintf(v11, 0x100uLL, "[BUFF ]: (%s:%d) @%p %s[%zu] = {", a2, v8, a4, (const char *)this, (size_t)a5);
      if (a5)
      {
        v14 = 0;
        v15 = 0;
        while (1)
        {
          if ((v14 & 0xF) == 0)
          {
            strlcat(v12, "\n", 0x100uLL);
            Ari::Log((Ari *)0x40, "%s", v16, v12);
            *v12 = 0;
          }
          snprintf(v13, 0x40uLL, " 0X%02X", a4[v14]);
          strlcat(v12, v13, 0x100uLL);
          if (v14 >= a6 && !v15)
          {
            snprintf(v13, 0x40uLL, ", ... skipping after (%d) to last a few ... ", a6);
            strlcat(v12, v13, 0x100uLL);
            v15 = 1;
            v14 = (unint64_t)&a5[(a5 & 0xF) - 17];
          }
          if (++v14 >= (unint64_t)a5)
            break;
          strlcat(v12, ",", 0x100uLL);
        }
      }
      *((_DWORD *)v12 + 64) = 670589;
      strlcat(v12, v13, 0x100uLL);
      Ari::Log((Ari *)0x40, "%s", v17, v12);
      free(v12);
    }
    else
    {
      v19 = 0xAAAAAAAAAAAAAAAALL;
      v20 = -1431655766;
      AriOsa::OsGetCurrentThreadName((AriOsa *)&v19, (char *)0xC);
      printf("%11s%s%s", (const char *)&v19, "[ERROR]: ", "MemAlloc returns NULL");
    }
  }
}

void Ari::LogBuf(Ari *this, const char *a2, unsigned __int8 *a3)
{
  char *v6;
  char *v7;
  char *v8;
  unsigned __int8 *v9;
  const char *v10;
  const char *v11;
  unint64_t v12;
  int v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  if ((DefaultLogLevel & 0x100) != 0)
  {
    v6 = (char *)AriOsa::MemAlloc((AriOsa *)4, 0x140uLL);
    if (v6)
    {
      v7 = v6;
      *v6 = 0;
      v8 = v6 + 256;
      snprintf(v6, 0x100uLL, "[BUFF ]: %s[%zu] = {", (const char *)this, (size_t)a3);
      if (a3)
      {
        v9 = 0;
        do
        {
          if ((v9 & 0xF) == 0)
          {
            strlcat(v7, "\n", 0x100uLL);
            Ari::Log((Ari *)0x100, "%s", v10, v7);
            *v7 = 0;
          }
          snprintf(v8, 0x40uLL, " 0X%02X", v9[(_QWORD)a2]);
          strlcat(v7, v8, 0x100uLL);
          if (++v9 < a3)
            strlcat(v7, ",", 0x100uLL);
        }
        while (a3 != v9);
      }
      *((_DWORD *)v7 + 64) = 670589;
      strlcat(v7, v8, 0x100uLL);
      Ari::Log((Ari *)0x100, "%s", v11, v7);
      free(v7);
    }
    else
    {
      v12 = 0xAAAAAAAAAAAAAAAALL;
      v13 = -1431655766;
      AriOsa::OsGetCurrentThreadName((AriOsa *)&v12, (char *)0xC);
      printf("%11s%s%s", (const char *)&v12, "[ERROR]: ", "MemAlloc returns NULL");
    }
  }
}

void Ari::LogTransportBuf(uint64_t a1, AriOsa *a2, AriMsg *a3, const void *a4)
{
  const unsigned __int8 *v8;
  unsigned int BufMsgDir;
  const char *v10;
  void (*v11)(uint64_t, std::string *, AriOsa *, AriMsg *, const void *);
  uint64_t v12;
  std::string __p;

  v8 = (const unsigned __int8 *)(int)a4;
  BufMsgDir = AriMsg::GetBufMsgDir(a3, (const unsigned __int8 *)(int)a4);
  if (BufMsgDir > 2)
    v10 = "unknown";
  else
    v10 = off_24C8F8730[BufMsgDir];
  AriOsa::OsLogBuf(a2, (uint64_t)v10, (const char *)a3, a4);
  v11 = (void (*)(uint64_t, std::string *, AriOsa *, AriMsg *, const void *))DefaultTransportTrafficLogger;
  if (DefaultTransportTrafficLogger)
  {
    v12 = AriMsg::GetBufMsgDir(a3, v8);
    if (*(char *)(a1 + 23) < 0)
      std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
    else
      __p = *(std::string *)a1;
    v11(v12, &__p, a2, a3, a4);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      operator delete(__p.__r_.__value_.__l.__data_);
  }
}

void sub_20E20A96C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14)
{
  if (a14 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AriMsg::GetBufMsgDir(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *BufHeader;
  unsigned int v5;
  AriMsg *v6;
  uint64_t v7;
  uint64_t result;
  AriMsg *v9;
  int v10;
  int v11;
  int v12;

  BufHeader = AriMsg::GetBufHeader(this, a2);
  if (BufHeader)
  {
    v5 = (unsigned __int16)*((_DWORD *)BufHeader + 2) >> 6;
    if (v5 >= 0x100)
      return (v5 >> 8) - 1;
  }
  v6 = AriMsg::GetBufHeader(this, a2);
  if (v6)
    v7 = (*(_QWORD *)v6 >> 9) & 0xFC000000;
  else
    LODWORD(v7) = 0;
  v9 = AriMsg::GetBufHeader(this, a2);
  if (v9)
    v10 = (*((_DWORD *)v9 + 2) << 9) & 0x1FF8000;
  else
    v10 = 0;
  result = 0;
  v11 = v10 | v7;
  if (v11 > 67698687)
  {
    if (v11 > 68190207)
    {
      if (v11 != 68190208 && v11 != 68255744 && v11 != 68222976)
        return 0xFFFFFFFFLL;
      return 1;
    }
    if (v11 == 67698688)
      return result;
    v12 = 67731456;
LABEL_24:
    if (v11 == v12)
      return result;
    return 0xFFFFFFFFLL;
  }
  if (v11 > 67600383)
  {
    if (v11 == 67600384)
      return 1;
    v12 = 67665920;
    goto LABEL_24;
  }
  if (v11 != 67436544)
  {
    if (v11 == 67469312)
      return 2;
    return 0xFFFFFFFFLL;
  }
  return 1;
}

void AriMsg::AriMsg(AriMsg *this, unsigned int a2)
{
  Ari *v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  const char *v10;
  void **v11;
  void *__p[2];
  char v13;

  *((_QWORD *)this + 7) = 0;
  *((_QWORD *)this + 8) = 0xFFFFFFFF00008000;
  v3 = (Ari *)(a2 >> 26);
  v4 = (a2 >> 15) & 0x3FF;
  v5 = Ari::MsgDefById(v3, (a2 >> 15) & 0x3FF);
  if (v5 && *(_DWORD *)(v5 + 4))
  {
    v6 = 0;
    v7 = *(_OWORD *)v5;
    v8 = *(_OWORD *)(v5 + 16);
    v9 = *(_OWORD *)(v5 + 32);
    *((_QWORD *)this + 6) = *(_QWORD *)(v5 + 48);
    *((_OWORD *)this + 1) = v8;
    *((_OWORD *)this + 2) = v9;
    *(_OWORD *)this = v7;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
    if (v13 >= 0)
      v11 = __p;
    else
      v11 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) AriMsg(id) INVALID input gid(%d) mid((%03x)", v10, v11, 202, v3, v4);
    if (v13 < 0)
      operator delete(__p[0]);
    *((_QWORD *)this + 6) = 0;
    *((_OWORD *)this + 1) = 0u;
    *((_OWORD *)this + 2) = 0u;
    *(_OWORD *)this = 0u;
    v6 = -71;
  }
  *((_DWORD *)this + 17) = v6;
}

void sub_20E20ABD8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t Ari::MsgDefById(Ari *this, int a2)
{
  uint64_t result;
  int v3;

  if (((_DWORD)this - 64) < 0xFFFFFFC1)
    return 0;
  result = ARIMSGDEF_GROUPS[this];
  if (!result)
    return result;
  v3 = *(_DWORD *)(result + 4);
  if (!v3)
    return 0;
  while (v3 != a2)
  {
    v3 = *(_DWORD *)(result + 60);
    result += 56;
    if (!v3)
      return 0;
  }
  return result;
}

void AriMsg::AriMsg(AriMsg *this, const unsigned __int8 *a2, uint64_t a3)
{
  _QWORD *v6;
  const char *v7;
  void **v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  const char *v15;
  void **v16;
  const char *v17;
  void **v18;
  const char *v19;
  void **v20;
  int v21;
  const char *v22;
  void **v23;
  const unsigned __int8 *v24;
  unint64_t v25;
  unint64_t v26;
  int *v27;
  const char *v28;
  void **v29;
  uint64_t v30;
  BOOL v31;
  int *v32;
  unint64_t v33;
  const char *v34;
  void **v35;
  _OWORD *v36;
  __int128 v37;
  _QWORD *v38;
  const char *v39;
  void **v40;
  const char *v41;
  void **v42;
  unsigned int *v43;
  unsigned int v44;
  unsigned int *v45;
  uint64_t v46;
  unsigned int v47;
  const char *v48;
  void **v49;
  const char *v50;
  void **v51;
  const char *v52;
  void **v53;
  _OWORD *v54;
  uint64_t v55;
  void *__p[2];
  char v57;

  *((_QWORD *)this + 7) = 0;
  v6 = (_QWORD *)((char *)this + 56);
  *((_QWORD *)this + 8) = 0xFFFFFFFF00008000;
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
  if (v57 >= 0)
    v8 = __p;
  else
    v8 = (void **)__p[0];
  Ari::Log((Ari *)4, "(%s:%d) Extract msg from (msgBuf=%p) on obj(%p)", v7, v8, 232, a2, this);
  if (v57 < 0)
    operator delete(__p[0]);
  *((_QWORD *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  if (a2 && a3 > 0xB)
  {
    v9 = *(_QWORD *)a2 >> 49;
    if (*(_QWORD *)a2 == -1417756450 && (int)v9 + 12 <= a3)
    {
      v10 = Ari::MsgDefById((Ari *)((*(_QWORD *)a2 >> 35) & 0x3FLL), (unsigned __int16)*((_DWORD *)a2 + 2) >> 6);
      if (!v10)
      {
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
        if (v57 >= 0)
          v23 = __p;
        else
          v23 = (void **)__p[0];
        Ari::Log((Ari *)8, "(%s:%d) Id from AriMsg header in buffer @(%p) not found in SDK", v22, v23, 258, a2);
        if (v57 < 0)
          operator delete(__p[0]);
        v21 = -71;
        goto LABEL_28;
      }
      v11 = v10;
      v12 = *(_OWORD *)v10;
      v13 = *(_OWORD *)(v10 + 16);
      v14 = *(_OWORD *)(v10 + 32);
      *((_QWORD *)this + 6) = *(_QWORD *)(v10 + 48);
      *((_OWORD *)this + 1) = v13;
      *((_OWORD *)this + 2) = v14;
      *(_OWORD *)this = v12;
      *((_DWORD *)this + 16) = *((_DWORD *)a2 + 2) >> 17;
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
      if (v57 >= 0)
        v16 = __p;
      else
        v16 = (void **)__p[0];
      Ari::Log((Ari *)4, "(%s:%d) Decode  %s(%d-0x%03x) len(%zu) buf(%p) trx(0x%08x)", v15, v16, 275, *(_QWORD *)(v11 + 48), (*(_QWORD *)a2 >> 35) & 0x3FLL, (unsigned __int16)*((_DWORD *)a2 + 2) >> 6, (v9 + 12), a2, (unint64_t)*((unsigned int *)a2 + 2) >> 17);
      if (v57 < 0)
      {
        operator delete(__p[0]);
        if (!(_DWORD)v9)
        {
LABEL_66:
          v43 = *(unsigned int **)(v11 + 16);
          if (v43 && (v44 = *v43) != 0)
          {
            v45 = *(unsigned int **)(v11 + 16);
            while (1)
            {
              v46 = *v6;
              if (!*v6)
                break;
              while (*(_DWORD *)v46 != v44)
              {
                v46 = *(_QWORD *)(v46 + 48);
                if (!v46)
                {
                  v43 = v45;
                  goto LABEL_76;
                }
              }
              v21 = 0;
              v47 = v45[1];
              ++v45;
              v44 = v47;
              if (!v47)
                goto LABEL_28;
            }
LABEL_76:
            AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
            if (v57 >= 0)
              v49 = __p;
            else
              v49 = (void **)__p[0];
            Ari::Log((Ari *)8, "(%s:%d) Mandatory TLV id(%d) not present for msg (%s). Mark this msg invalid", v48, v49, 415, *v43, *(_QWORD *)(v11 + 48));
            if (v57 < 0)
              operator delete(__p[0]);
            *((_QWORD *)this + 6) = 0;
            *((_OWORD *)this + 1) = 0u;
            *((_OWORD *)this + 2) = 0u;
            *(_OWORD *)this = 0u;
            AriMsg::FreeTlvList(*((_QWORD **)this + 7));
            *((_QWORD *)this + 7) = 0;
            v21 = -81;
          }
          else
          {
            v21 = 0;
          }
          goto LABEL_28;
        }
      }
      else if (!(_DWORD)v9)
      {
        goto LABEL_66;
      }
      v54 = 0;
      v24 = a2 + 12;
      while (1)
      {
        v25 = *(unsigned int *)v24;
        v26 = v25 >> 18;
        v27 = Ari::TlvDefById((Ari *)*(unsigned int *)this, *((unsigned int *)this + 1), (v25 >> 1) & 0xFFF, 0);
        if (v27)
        {
          v32 = v27;
          v55 = v11;
          v33 = *(_QWORD *)(*((_QWORD *)v27 + 2) + 8) * *(unsigned int *)(*((_QWORD *)v27 + 2) + 32);
          if (v33 < v26)
          {
            AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
            v35 = __p;
            if (v57 < 0)
              v35 = (void **)__p[0];
            Ari::Log((Ari *)0x10, "(%s:%d) Received tlv with g(%d) m(0x%03x) tid(%d) len(%d) > exp(%zu), ignored", v34, v35, 312, (*(_QWORD *)a2 >> 35) & 0x3FLL, (unsigned __int16)*((_DWORD *)a2 + 2) >> 6, (*(_DWORD *)v24 >> 1) & 0xFFF, v26, v33);
LABEL_63:
            v11 = v55;
            if (v57 < 0)
              operator delete(__p[0]);
            v30 = v26 + 4;
            goto LABEL_43;
          }
          if ((unsigned __int16)*(_DWORD *)v24 >> 13 != (v27[1] & 7))
          {
            AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
            v42 = __p;
            if (v57 < 0)
              v42 = (void **)__p[0];
            Ari::Log((Ari *)0x10, "(%s:%d) Version mistmach for tlv with g(%d) m(0x%03x) tid(%d), got(%d) expecting(%d), ignored", v41, v42, 328, (*(_QWORD *)a2 >> 35) & 0x3FLL, (unsigned __int16)*((_DWORD *)a2 + 2) >> 6, (*(_DWORD *)v24 >> 1) & 0xFFF, (unsigned __int16)*(_DWORD *)v24 >> 13, *((unsigned __int8 *)v32 + 4));
            goto LABEL_63;
          }
          if ((unint64_t)v26 + 4 > v9)
          {
            AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
            if (v57 >= 0)
              v51 = __p;
            else
              v51 = (void **)__p[0];
            Ari::Log((Ari *)8, "(%s:%d) Tlv with g(%d) m(0x%03x) tid(%d) has len(%d) beyond end of msgBuf, message dropped", v50, v51, 342, (*(_QWORD *)a2 >> 35) & 0x3FLL, (unsigned __int16)*((_DWORD *)a2 + 2) >> 6, (*(_DWORD *)v24 >> 1) & 0xFFF, v26);
            if (v57 < 0)
              operator delete(__p[0]);
            *((_QWORD *)this + 6) = 0;
            *((_OWORD *)this + 1) = 0u;
            *((_OWORD *)this + 2) = 0u;
            *(_OWORD *)this = 0u;
            AriMsg::FreeTlvList(*((_QWORD **)this + 7));
            *((_QWORD *)this + 7) = 0;
            goto LABEL_27;
          }
          v36 = AriOsa::MemAlloc((AriOsa *)2, 0x40uLL);
          v11 = v55;
          if (!v36)
          {
            AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
            if (v57 >= 0)
              v53 = __p;
            else
              v53 = (void **)__p[0];
            Ari::Log((Ari *)8, "(%s:%d) MemAlloc failed for TLV", v52, v53, 355);
            if (v57 < 0)
              operator delete(__p[0]);
            *((_QWORD *)this + 6) = 0;
            *((_OWORD *)this + 1) = 0u;
            *((_OWORD *)this + 2) = 0u;
            *(_OWORD *)this = 0u;
            AriMsg::FreeTlvList(*((_QWORD **)this + 7));
            *((_QWORD *)this + 7) = 0;
            v21 = -82;
            goto LABEL_28;
          }
          v36[2] = 0u;
          v36[3] = 0u;
          *v36 = 0u;
          v36[1] = 0u;
          v37 = *((_OWORD *)v32 + 1);
          *v36 = *(_OWORD *)v32;
          v36[1] = v37;
          v38 = v54 + 3;
          if (!v54)
            v38 = v6;
          *v38 = v36;
          v54 = v36;
          *((_QWORD *)v36 + 4) = v26;
          *((_QWORD *)v36 + 5) = v24 + 4;
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
          v40 = __p;
          if (v57 < 0)
            v40 = (void **)__p[0];
          Ari::Log((Ari *)4, "(%s:%d) Extracted tlv %s(%d) len(%d) v(%d)", v39, v40, 391, *((_QWORD *)v32 + 3), (*(_DWORD *)v24 >> 1) & 0xFFF, v26, (unsigned __int16)*(_DWORD *)v24 >> 13);
          if (v57 < 0)
            operator delete(__p[0]);
          v30 = v26 + 4;
        }
        else
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
          v29 = __p;
          if (v57 < 0)
            v29 = (void **)__p[0];
          Ari::Log((Ari *)4, "(%s:%d) UNKNOWN tlv with g(%d) m(0x%03x) tid(%d), ignored", v28, v29, 296, (*(_QWORD *)a2 >> 35) & 0x3FLL, (unsigned __int16)*((_DWORD *)a2 + 2) >> 6, (*(_DWORD *)v24 >> 1) & 0xFFF);
          if (v57 < 0)
            operator delete(__p[0]);
          v30 = v26 + 4;
        }
LABEL_43:
        v24 += v30;
        v31 = __OFSUB__((_DWORD)v9, (_DWORD)v30);
        LODWORD(v9) = v9 - v30;
        if (((int)v9 < 0) ^ v31 | ((_DWORD)v9 == 0))
          goto LABEL_66;
      }
    }
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
    if (v57 >= 0)
      v20 = __p;
    else
      v20 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) msgBuf (%p) with invalid magic (0X%X) or an incomplete msg got(%d) exp(%zu)", v19, v20, 250, a2, *(unsigned int *)a2, a3, (v9 + 12));
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "AriMsg", (uint64_t)__p);
    if (v57 >= 0)
      v18 = __p;
    else
      v18 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) INVALID msgBuf (%p) or validSz(%d) is smaller than header", v17, v18, 240, a2, a3);
  }
  if (v57 < 0)
    operator delete(__p[0]);
LABEL_27:
  v21 = -74;
LABEL_28:
  *((_DWORD *)this + 17) = v21;
}

void sub_20E20B398(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *__p,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a27 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

int *Ari::TlvDefById(Ari *this, uint64_t a2, uint64_t a3, uint64_t a4)
{
  int *result;
  int v9;
  int v10;
  const char *v11;
  void **v12;
  uint64_t v13;
  const char *v14;
  void **v15;
  void *__p[2];
  char v17;

  result = (int *)Ari::MsgDefById(this, a2);
  if (!result)
    return result;
  result = (int *)*((_QWORD *)result + 3);
  if (!result)
    return result;
  v9 = *result;
  if (!*result)
  {
LABEL_6:
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "TlvDefById", (uint64_t)__p);
    if (v17 >= 0)
      v12 = __p;
    else
      v12 = (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) tid(%d) not found under gid(%d) mid(0x%03x)", v11, v12, 1234, a3, this, a2);
LABEL_10:
    if (v17 < 0)
      operator delete(__p[0]);
    return 0;
  }
  while (v9 != (_DWORD)a3)
  {
    v10 = result[8];
    result += 8;
    v9 = v10;
    if (!v10)
      goto LABEL_6;
  }
  if (a4)
  {
    v13 = **((_QWORD **)result + 2) * *(unsigned int *)(*((_QWORD *)result + 2) + 32);
    if (v13 != a4)
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "TlvDefById", (uint64_t)__p);
      if (v17 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)0x10, "(%s:%d) Found tid(%d) under gid(%d) mid(0x%03x) wrong sz(%zu) exp (%zu)", v14, v15, 1227, a3, this, a2, a4, v13);
      goto LABEL_10;
    }
  }
  return result;
}

void sub_20E20B518(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AriMsg::FreeTlvList(_QWORD *a1)
{
  _QWORD *v1;
  _QWORD *v2;
  void *v3;

  if (a1)
  {
    v1 = a1;
    do
    {
      v2 = v1;
      v1 = (_QWORD *)v1[6];
      if (*((_BYTE *)v2 + 56))
      {
        v3 = (void *)v2[5];
        if (v3)
          free(v3);
      }
      free(v2);
    }
    while (v1);
  }
}

uint64_t AriMsg::isValid(AriMsg *this, int a2)
{
  uint64_t result;

  result = *((unsigned int *)this + 17);
  if (!(_DWORD)result)
  {
    if (((*((_DWORD *)this + 1) << 15) | (*(_DWORD *)this << 26)) == a2)
      return 0;
    else
      return 4294967223;
  }
  return result;
}

uint64_t AriMsg::getGmid(AriMsg *this)
{
  if (*((_DWORD *)this + 17))
    return 0;
  else
    return ((*((_DWORD *)this + 1) << 15) | (*(_DWORD *)this << 26));
}

void AriMsg::~AriMsg(AriMsg *this)
{
  *((_QWORD *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  AriMsg::FreeTlvList(*((_QWORD **)this + 7));
  *((_QWORD *)this + 7) = 0;
}

{
  *((_QWORD *)this + 6) = 0;
  *((_OWORD *)this + 1) = 0u;
  *((_OWORD *)this + 2) = 0u;
  *(_OWORD *)this = 0u;
  AriMsg::FreeTlvList(*((_QWORD **)this + 7));
  *((_QWORD *)this + 7) = 0;
}

AriMsg *AriMsg::GetBufHeader(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *v3;
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  v3 = this;
  if (!this || (unint64_t)a2 < 0xC || *(_DWORD *)this != -1417756450)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "GetBufHeader", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) INVALID msgbuf (%p) len(%zu)", v4, v5, 458, v3, a2);
    if (v8 < 0)
      operator delete(__p[0]);
    return 0;
  }
  return v3;
}

void sub_20E20B6F8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

AriMsg *AriMsg::GetBufMsgSz(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *result;

  result = AriMsg::GetBufHeader(this, a2);
  if (result)
    return (AriMsg *)(*(_QWORD *)result >> 49);
  return result;
}

AriMsg *AriMsg::GetBufGmid(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *result;

  result = AriMsg::GetBufHeader(this, a2);
  if (result)
    return (AriMsg *)((*(_DWORD *)((_BYTE *)result + 3) & 0x1F800 | ((unsigned __int16)*((_DWORD *)result + 2) >> 6)) << 15);
  return result;
}

AriMsg *AriMsg::GetBufGid(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *result;

  result = AriMsg::GetBufHeader(this, a2);
  if (result)
    return (AriMsg *)((*(_QWORD *)result >> 35) & 0x3FLL);
  return result;
}

AriMsg *AriMsg::GetBufMid(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *result;

  result = AriMsg::GetBufHeader(this, a2);
  if (result)
    return (AriMsg *)((unsigned __int16)*((_DWORD *)result + 2) >> 6);
  return result;
}

AriMsg *AriMsg::GetBufAckOpt(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *result;

  result = AriMsg::GetBufHeader(this, a2);
  if (result)
    return (AriMsg *)(((unint64_t)*((unsigned int *)result + 2) >> 3) & 1);
  return result;
}

uint64_t AriMsg::SetBufSeq(AriMsg *this, const unsigned __int8 *a2, unsigned int a3)
{
  AriMsg *BufHeader;
  AriMsg *v5;
  uint64_t result;
  unint64_t v7;

  BufHeader = AriMsg::GetBufHeader(this, a2);
  if (!BufHeader)
    return 0xFFFFFFFFLL;
  v5 = BufHeader;
  result = 0;
  v7 = *(_QWORD *)v5 & 0xFFFE01FFFFFFFFFFLL | ((unint64_t)a3 << 41);
  *((_DWORD *)v5 + 2) = *((_DWORD *)v5 + 2) & 0xFFFFFFF8 | (a3 >> 8) & 7;
  *(_QWORD *)v5 = v7;
  return result;
}

uint64_t AriMsg::GetBufSeq(AriMsg *this, const unsigned __int8 *a2, int *a3, unsigned int *a4)
{
  AriMsg *BufHeader;
  uint64_t result;

  BufHeader = AriMsg::GetBufHeader(this, a2);
  result = 0xFFFFFFFFLL;
  if (a3)
  {
    if (BufHeader)
    {
      result = 0;
      *a3 = (*(_QWORD *)BufHeader >> 41) | ((*((_DWORD *)BufHeader + 2) & 7) << 8);
    }
  }
  return result;
}

unint64_t AriMsg::GetBufCtx(AriMsg *this, const unsigned __int8 *a2)
{
  AriMsg *BufHeader;

  BufHeader = AriMsg::GetBufHeader(this, a2);
  if (BufHeader)
    return (unint64_t)*((unsigned int *)BufHeader + 2) >> 17;
  else
    return 0x8000;
}

uint64_t AriMsg::SetBufCtx(AriMsg *this, const unsigned __int8 *a2, unsigned __int16 a3)
{
  AriMsg *BufHeader;
  AriMsg *v5;
  uint64_t result;

  BufHeader = AriMsg::GetBufHeader(this, a2);
  if (!BufHeader)
    return 0xFFFFFFFFLL;
  v5 = BufHeader;
  result = 0;
  *((_DWORD *)v5 + 2) = *((_DWORD *)v5 + 2) & 0x1FFFF | (a3 << 17);
  return result;
}

uint64_t AriMsg::pack(AriMsg *this, uint64_t a2, const void *a3, size_t a4)
{
  return AriMsg::pack(this, a2, a3, a4, 0);
}

uint64_t AriMsg::pack(AriMsg *this, uint64_t a2, const void *a3, size_t a4, char a5)
{
  uint64_t result;
  uint64_t v10;
  Ari *v11;
  BOOL v12;
  BOOL v13;
  const char *v14;
  void **v15;
  int *v17;
  int *v18;
  uint64_t v19;
  const char *v20;
  void **v21;
  const char *v22;
  void **v23;
  const char *v24;
  void **v25;
  uint64_t v26;
  uint64_t v27;
  _OWORD *v28;
  _QWORD *v29;
  __int128 v30;
  void *v31;
  void *v32;
  const char *v33;
  void **v34;
  const char *v35;
  void **v36;
  _QWORD *v37;
  const char *v38;
  void **v39;
  const char *v40;
  void **v41;
  void *__p[2];
  char v43;

  result = *((unsigned int *)this + 17);
  if ((_DWORD)result)
    return result;
  v10 = *((unsigned int *)this + 1);
  if ((v10 - 1024) < 0xFFFFFC01
    || ((v11 = (Ari *)*(unsigned int *)this, (_DWORD)v11) ? (v12 = a3 == 0) : (v12 = 1),
        !v12 ? (v13 = a4 >> 14 == 0) : (v13 = 0),
        !v13 || v11 >= 0x40))
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
    if (v43 >= 0)
      v15 = __p;
    else
      v15 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Invalid msg or input value v(%p) s(%zu)!", v14, v15, 622, a3, a4);
    if (v43 < 0)
      operator delete(__p[0]);
    return 4294967221;
  }
  v17 = Ari::TlvDefById(v11, v10, a2, 0);
  if (!v17)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
    if (v43 >= 0)
      v23 = __p;
    else
      v23 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) tid (%d) is not found under gid(%d) mid(0x%03x)", v22, v23, 629, a2, *(unsigned int *)this, *((unsigned int *)this + 1));
    if (v43 < 0)
      operator delete(__p[0]);
    return 4294967220;
  }
  v18 = v17;
  v19 = *((_QWORD *)v17 + 2);
  if (*(_QWORD *)v19 * (unint64_t)*(unsigned int *)(v19 + 32) < a4)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
    if (v43 >= 0)
      v21 = __p;
    else
      v21 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) trying to pack gid(%d) mid(0x%03x) tid(%d) with sz(%zu) > max size(%zu)", v20, v21, 636, *(unsigned int *)this, *((unsigned int *)this + 1), a2, a4, **((_QWORD **)v18 + 2) * *(unsigned int *)(*((_QWORD *)v18 + 2) + 32));
    if (v43 < 0)
      operator delete(__p[0]);
    return 4294967216;
  }
  if (a4 % *(_QWORD *)v19)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
    if (v43 >= 0)
      v25 = __p;
    else
      v25 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) trying to pack gid(%d) mid(0x%03x) tid(%d) with sz(%zu) not multiple of element sz(%zu)", v24, v25, 643, *(unsigned int *)this, *((unsigned int *)this + 1), a2, a4, **((_QWORD **)v18 + 2));
    if (v43 < 0)
      operator delete(__p[0]);
    return 4294967213;
  }
  v26 = *((_QWORD *)this + 7);
  if (!v26)
  {
    v27 = 0;
LABEL_44:
    v28 = AriOsa::MemAlloc((AriOsa *)2, 0x40uLL);
    if (v28)
    {
      v29 = v28;
      v28[2] = 0u;
      v28[3] = 0u;
      *v28 = 0u;
      v28[1] = 0u;
      v30 = *((_OWORD *)v18 + 1);
      *v28 = *(_OWORD *)v18;
      v28[1] = v30;
      if ((a5 & 1) == 0)
      {
        *((_QWORD *)v28 + 5) = a3;
        goto LABEL_61;
      }
      if (!a4)
      {
LABEL_61:
        v29[4] = a4;
        v37 = (_QWORD *)(v27 + 48);
        if (!v27)
          v37 = (_QWORD *)((char *)this + 56);
        *v37 = v29;
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
        if (v43 >= 0)
          v39 = __p;
        else
          v39 = (void **)__p[0];
        Ari::Log((Ari *)4, "(%s:%d) Pack tlv(%s) with tid(%d) size (%zu) raw(%p) for (%s)", v38, v39, 717, *((_QWORD *)v18 + 3), *v18, a4, a3, *((_QWORD *)this + 6));
        if (v43 < 0)
          operator delete(__p[0]);
        return 0;
      }
      v31 = AriOsa::MemAlloc((AriOsa *)2, a4);
      if (v31)
      {
        v32 = v31;
        memcpy(v31, a3, a4);
        v29[5] = v32;
        *((_BYTE *)v29 + 56) = 1;
        goto LABEL_61;
      }
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
      if (v43 >= 0)
        v41 = __p;
      else
        v41 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) MemAlloc failed for TLV buffer", v40, v41, 686);
      if (v43 < 0)
        operator delete(__p[0]);
      free(v29);
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
      if (v43 >= 0)
        v36 = __p;
      else
        v36 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) MemAlloc failed for TLV", v35, v36, 664);
      if (v43 < 0)
        operator delete(__p[0]);
    }
    return 4294967214;
  }
  while (1)
  {
    v27 = v26;
    if (*(_DWORD *)v26 == (_DWORD)a2)
      break;
    v26 = *(_QWORD *)(v26 + 48);
    if (!v26)
      goto LABEL_44;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "pack", (uint64_t)__p);
  if (v43 >= 0)
    v34 = __p;
  else
    v34 = (void **)__p[0];
  Ari::Log((Ari *)8, "(%s:%d) Duplicated TLV id %d", v33, v34, 654, a2);
  if (v43 < 0)
    operator delete(__p[0]);
  return 4294967219;
}

void sub_20E20BD6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AriMsg::packParam(AriMsg *this, uint64_t a2, char *a3, size_t a4)
{
  uint64_t result;
  int *v9;
  int *v10;
  size_t v11;
  const char *v12;
  void **v13;
  const char *v14;
  void **v15;
  const char *v16;
  void **v17;
  const char *v18;
  void **v19;
  void *__p[2];
  char v21;

  result = *((unsigned int *)this + 17);
  if (!(_DWORD)result)
  {
    if (a3)
    {
      v9 = Ari::TlvDefById((Ari *)*(unsigned int *)this, *((unsigned int *)this + 1), a2, 0);
      if (v9)
      {
        v10 = v9;
        v11 = **((_QWORD **)v9 + 2) * *(unsigned int *)(*((_QWORD *)v9 + 2) + 32);
        if (v11 + v9[2] <= a4)
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "packParam", (uint64_t)__p);
          if (v21 >= 0)
            v19 = __p;
          else
            v19 = (void **)__p[0];
          Ari::Log((Ari *)4, "(%s:%d) Pack tlv(%s) with tid(%d) len(%zu) with offset(%d) within param(%p)", v18, v19, 752, *((_QWORD *)v10 + 3), *v10, v11, v10[2], a3);
          if (v21 < 0)
            operator delete(__p[0]);
          return AriMsg::pack(this, a2, &a3[v10[2]], v11, 0);
        }
        else
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "packParam", (uint64_t)__p);
          if (v21 >= 0)
            v13 = __p;
          else
            v13 = (void **)__p[0];
          Ari::Log((Ari *)8, "(%s:%d) tid(%d) has offset(%d) and len(%zu) outside of param with sz(%zu)", v12, v13, 742, a2, v10[2], v11, a4);
          if (v21 < 0)
            operator delete(__p[0]);
          return 4294967216;
        }
      }
      else
      {
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "packParam", (uint64_t)__p);
        if (v21 >= 0)
          v17 = __p;
        else
          v17 = (void **)__p[0];
        Ari::Log((Ari *)8, "(%s:%d) tid (%d) is not found under gid(%d) mid(0x%x)", v16, v17, 735, a2, *(unsigned int *)this, *((unsigned int *)this + 1));
        if (v21 < 0)
          operator delete(__p[0]);
        return 4294967220;
      }
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "packParam", (uint64_t)__p);
      if (v21 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Invalid msg or input value v(%p)!", v14, v15, 728, 0);
      if (v21 < 0)
        operator delete(__p[0]);
      return 4294967221;
    }
  }
  return result;
}

void sub_20E20BFD4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

int *AriMsg::getEncodedBuf(AriMsg *this, unsigned int *a2)
{
  unsigned int v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  const char *v14;
  void **v15;
  const char *v16;
  void **v17;
  int *v18;
  const char *v20;
  void **v21;
  unsigned int *v22;
  unsigned int v23;
  unsigned int *v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  int *v28;
  unint64_t v29;
  unsigned int v30;
  unint64_t v31;
  int v32;
  const char *v33;
  void **v34;
  const char *v35;
  void **v36;
  int *v37;
  int *v38;
  uint64_t v39;
  unsigned int (*v40)(int *, _QWORD);
  int v41;
  void **v42;
  const char *v43;
  void **v44;
  const char *v45;
  void **v46;
  void *__p[2];
  char v48;

  if (*((_DWORD *)this + 17)
    || (*(_DWORD *)this - 64) < 0xFFFFFFC1
    || ((v4 = *((_DWORD *)this + 1)) != 0 ? (v5 = a2 == 0) : (v5 = 1), v5 || v4 >= 0x400))
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
    if (v48 >= 0)
      v17 = __p;
    else
      v17 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Invalid msg ID definitions!", v16, v17, 771);
    goto LABEL_23;
  }
  *a2 = 0;
  v6 = *((_QWORD *)this + 7);
  if (v6)
  {
    LODWORD(v7) = 0;
    LODWORD(v8) = 0;
    LODWORD(v9) = 0;
    v10 = *((_QWORD *)this + 7);
    do
    {
      if (!*(_DWORD *)v10
        || *(_DWORD *)v10 > 0xFFFu
        || (v11 = *(_QWORD *)(v10 + 16),
            v12 = *(_QWORD *)(v11 + 8),
            v13 = *(_QWORD *)(v10 + 32) / *(_QWORD *)v11 * v12,
            v13 >= 0x4000))
      {
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
        if (v48 >= 0)
          v21 = __p;
        else
          v21 = (void **)__p[0];
        Ari::Log((Ari *)8, "(%s:%d) Invalid tlv value found for msg(%s)!", v20, v21, 798, *((_QWORD *)this + 6));
        goto LABEL_23;
      }
      v9 = (v9 + 1);
      v8 = (v8 + *(_DWORD *)(v11 + 32) * v12 + 4);
      v7 = (v7 + v13 + 4);
      v10 = *(_QWORD *)(v10 + 48);
    }
    while (v10);
    if (v7 < 0x8000)
      goto LABEL_32;
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
    if (v48 >= 0)
      v15 = __p;
    else
      v15 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Message(%s) size (%d) is larger than max (%d)", v14, v15, 813, *((_QWORD *)this + 6), v7, 0x7FFFLL);
    goto LABEL_23;
  }
  v7 = 0;
  v8 = 0;
  v9 = 0;
LABEL_32:
  v22 = (unsigned int *)*((_QWORD *)this + 2);
  if (v22)
  {
    v23 = *v22;
    if (*v22)
    {
      v24 = (unsigned int *)*((_QWORD *)this + 2);
      while (1)
      {
        v25 = *((_QWORD *)this + 7);
        if (!v6)
          break;
        while (*(_DWORD *)v25 != v23)
        {
          v25 = *(_QWORD *)(v25 + 48);
          if (!v25)
          {
            v22 = v24;
            goto LABEL_61;
          }
        }
        v26 = v24[1];
        ++v24;
        v23 = v26;
        if (!v26)
          goto LABEL_40;
      }
LABEL_61:
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
      if (v48 >= 0)
        v44 = __p;
      else
        v44 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Message(%s)'s mandatory TLV (%d) not packed!", v43, v44, 836, *((_QWORD *)this + 6), *v22);
      goto LABEL_23;
    }
  }
LABEL_40:
  v27 = v7 + 12;
  v28 = (int *)AriOsa::MemAlloc((AriOsa *)1, (v7 + 12));
  if (!v28)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
    if (v48 >= 0)
      v46 = __p;
    else
      v46 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) MemAlloc failed for buffer sz (%zu)", v45, v46, 851, (v7 + 12));
LABEL_23:
    if (v48 < 0)
      operator delete(__p[0]);
    return 0;
  }
  v18 = v28;
  v28[2] = 0;
  *(_QWORD *)v28 = 2877210846;
  v29 = ((unint64_t)(*(_DWORD *)this & 0x3F) << 35) | 0xAB7EC0DE;
  v28[2] = 0;
  *(_QWORD *)v28 = v29;
  v30 = ((*((_DWORD *)this + 1) & 0x3FF) << 6) | (v7 >> 15);
  v31 = v29 | ((unint64_t)v7 << 49);
  *(_QWORD *)v28 = v31;
  v28[2] = v30;
  v32 = v30 | (*((_DWORD *)this + 16) << 17);
  *(_QWORD *)v28 = v31;
  v28[2] = v32;
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
  if (v48 >= 0)
    v34 = __p;
  else
    v34 = (void **)__p[0];
  Ari::Log((Ari *)4, "(%s:%d) Encode  %s(%d-0x%03x) len(%zu) buf(%p) tlv(%d) obj(%p)", v33, v34, 867, *((_QWORD *)this + 6), *(unsigned int *)this, *((unsigned int *)this + 1), (v7 + 12), v18, v9, this);
  if (v48 < 0)
    operator delete(__p[0]);
  if ((_DWORD)v8 != (_DWORD)v7)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
    v36 = v48 >= 0 ? __p : (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) msg(%p) with g(%d) m(0x%03x) msg-size def(%d) actual(%d)", v35, v36, 877, this, *(unsigned int *)this, *((unsigned int *)this + 1), v8, v7);
    if (v48 < 0)
      operator delete(__p[0]);
  }
  v37 = (int *)*((_QWORD *)this + 7);
  if (v37)
  {
    v38 = v18 + 3;
    while (1)
    {
      v39 = *((_QWORD *)v37 + 2);
      v40 = *(unsigned int (**)(int *, _QWORD))(v39 + 16);
      LODWORD(v39) = *((_QWORD *)v37 + 4) / *(_QWORD *)v39 * *(_DWORD *)(v39 + 8);
      *v38 = 0;
      v41 = *v37;
      *v38 = 2 * (*v37 & 0xFFF);
      *v38 = ((_DWORD)v39 << 18) | ((v37[1] & 7) << 13) | (2 * (v41 & 0xFFF));
      if (v40(v38 + 1, *((_QWORD *)v37 + 5)))
        break;
      v38 = (int *)((char *)v38 + ((unint64_t)*v38 >> 18) + 4);
      v37 = (int *)*((_QWORD *)v37 + 6);
      if (!v37)
        goto LABEL_56;
    }
    free(v18);
    return 0;
  }
LABEL_56:
  *a2 = v27;
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "getEncodedBuf", (uint64_t)__p);
  if (v48 >= 0)
    v42 = __p;
  else
    v42 = (void **)__p[0];
  Ari::LogBuf((Ari *)"mhdr", (const char *)v42, (const char *)0x38B, (unsigned __int8 *)v18, (char *)*a2, 0xA0u);
  if (v48 < 0)
    operator delete(__p[0]);
  return v18;
}

void sub_20E20C4F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void AriMsg::ReleaseEncodedMessage(AriMsg *this, unsigned __int8 *a2)
{
  const char *v3;
  void **v4;
  void *__p[2];
  char v6;

  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "ReleaseEncodedMessage", (uint64_t)__p);
  if (v6 >= 0)
    v4 = __p;
  else
    v4 = (void **)__p[0];
  Ari::Log((Ari *)4, "(%s:%d) freed as (%p)", v3, v4, 914, this);
  if (v6 < 0)
    operator delete(__p[0]);
  if (this)
    free(this);
}

void sub_20E20C5B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AriMsg::unpack(AriMsg *this, uint64_t a2, void *a3, uint64_t a4, BOOL *a5, unint64_t *a6)
{
  uint64_t result;
  int *v13;
  unsigned int *v14;
  uint64_t v15;
  BOOL v16;
  const char *v17;
  void **v18;
  const char *v19;
  void **v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  unint64_t v24;
  const char *v25;
  void **v26;
  const char *v27;
  void **v28;
  const char *v29;
  void **v30;
  int *v31;
  int v32;
  int *v33;
  int v34;
  uint64_t v35;
  const char *v36;
  void **v37;
  unint64_t v38;
  int *v39;
  int v40;
  int *v41;
  int v42;
  const char *v43;
  void **v44;
  const char *v45;
  void **v46;
  uint64_t (*v47)(void *, _QWORD, unint64_t, unint64_t);
  void *__p[2];
  char v49;

  result = *((unsigned int *)this + 17);
  if ((_DWORD)result)
    return result;
  if (a5)
    *a5 = 0;
  if (a6)
    *a6 = 0;
  if (!a3)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
    if (v49 >= 0)
      v18 = __p;
    else
      v18 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) AriMsg::unpack invalid Msg or input buff (%p)!", v17, v18, 939, 0);
    if (v49 < 0)
      operator delete(__p[0]);
    return 4294967217;
  }
  v13 = Ari::TlvDefById((Ari *)*(unsigned int *)this, *((unsigned int *)this + 1), a2, a4);
  if (!v13)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
    if (v49 >= 0)
      v20 = __p;
    else
      v20 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) tid (%d) is not found under gid(%d) mid (0x%03x) with defined sz(%zu)", v19, v20, 947, a2, *(unsigned int *)this, *((unsigned int *)this + 1), a4);
    if (v49 < 0)
      operator delete(__p[0]);
    return 4294967218;
  }
  v14 = (unsigned int *)v13;
  v15 = *((_QWORD *)this + 7);
  if (!v15)
  {
LABEL_12:
    if (!a5)
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
      if (v49 >= 0)
        v28 = __p;
      else
        v28 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Mandatory tlv with tid(%d) v(%d) is missing", v27, v28, 1028, *v14, *((unsigned __int8 *)v14 + 4));
      if (v49 < 0)
        operator delete(__p[0]);
      return 4294967215;
    }
    v16 = 0;
    goto LABEL_14;
  }
  while (*(_DWORD *)v15 != *v13)
  {
    v15 = *(_QWORD *)(v15 + 48);
    if (!v15)
      goto LABEL_12;
  }
  v21 = *(_QWORD *)(v15 + 32);
  v22 = *(uint64_t **)(v15 + 16);
  v23 = v22[1];
  v24 = v23 * *((unsigned int *)v22 + 8);
  if (v21 > v24)
  {
    if (!*((_DWORD *)this + 17))
    {
      v31 = (int *)*((_QWORD *)this + 2);
      if (v31)
      {
        v32 = *v31;
        if (*v31)
        {
          v33 = v31 + 1;
          while (v32 != (_DWORD)a2)
          {
            v34 = *v33++;
            v32 = v34;
            if (!v34)
              goto LABEL_29;
          }
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
          if (v49 >= 0)
            v44 = __p;
          else
            v44 = (void **)__p[0];
          Ari::Log((Ari *)8, "(%s:%d) trying to unpack mandatory TLV(%s) for MSG(%s) with packed sz(%zu) > defined max encoded size(%zu)", v43, v44, 972, *((_QWORD *)v14 + 3), *((_QWORD *)this + 6), v21, v24);
          if (v49 < 0)
            operator delete(__p[0]);
          return 4294967216;
        }
      }
    }
LABEL_29:
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
    if (v49 >= 0)
      v26 = __p;
    else
      v26 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) Dropping optional TLV(%s) for MSG(%s) with packed sz(%zu) > defined max encoded size(%zu)", v25, v26, 979, *((_QWORD *)v14 + 3), *((_QWORD *)this + 6), v21, v24);
    goto LABEL_45;
  }
  if (!(v21 % v23))
  {
    v35 = *v22;
    v47 = (uint64_t (*)(void *, _QWORD, unint64_t, unint64_t))v22[3];
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
    v37 = __p;
    if (v49 < 0)
      v37 = (void **)__p[0];
    v38 = v21 / v23 * v35;
    Ari::Log((Ari *)4, "(%s:%d) Unpack tlv(%s) with tid(%d) raw(%p) len(%zu) into origLen(%zu) for g(%d) m(0x%03x)", v36, v37, 1007, *(_QWORD *)(v15 + 24), *v14, *(_QWORD *)(v15 + 40), v21, v38, *(unsigned int *)this, *((unsigned int *)this + 1));
    if (v49 < 0)
      operator delete(__p[0]);
    result = v47(a3, *(_QWORD *)(v15 + 40), v23, v21 / v23);
    if ((_DWORD)result)
      return result;
    if (a6)
      *a6 = v38;
    if (!a5)
      return 0;
    v16 = 1;
LABEL_14:
    result = 0;
    *a5 = v16;
    return result;
  }
  if (*((_DWORD *)this + 17) || (v39 = (int *)*((_QWORD *)this + 2)) == 0 || (v40 = *v39) == 0)
  {
LABEL_41:
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
    if (v49 >= 0)
      v30 = __p;
    else
      v30 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Dropping optional TLV(%s) for MSG(%s) with packed sz(%zu) not multiple of element encoded size(%zu)", v29, v30, 995, *((_QWORD *)v14 + 3), *((_QWORD *)this + 6), v21, v23);
LABEL_45:
    if (v49 < 0)
      operator delete(__p[0]);
    return 0;
  }
  v41 = v39 + 1;
  while (v40 != (_DWORD)a2)
  {
    v42 = *v41++;
    v40 = v42;
    if (!v42)
      goto LABEL_41;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unpack", (uint64_t)__p);
  if (v49 >= 0)
    v46 = __p;
  else
    v46 = (void **)__p[0];
  Ari::Log((Ari *)8, "(%s:%d) trying to unpack mandatory TLV(%s) for MSG(%s) with packed sz(%zu) not multiple of element encoded size(%zu)", v45, v46, 988, *((_QWORD *)v14 + 3), *((_QWORD *)this + 6), v21, v23);
  if (v49 < 0)
    operator delete(__p[0]);
  return 4294967213;
}

void sub_20E20CA98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriMsg::isTlvMandatory(AriMsg *this, int a2)
{
  _BOOL8 result;
  int *v3;
  int v4;
  int *v5;
  int v6;

  if (*((_DWORD *)this + 17))
    return 0;
  v3 = (int *)*((_QWORD *)this + 2);
  if (!v3)
    return 0;
  v4 = *v3;
  if (!*v3)
    return 0;
  v5 = v3 + 1;
  do
  {
    result = v4 == a2;
    if (v4 == a2)
      break;
    v6 = *v5++;
    v4 = v6;
  }
  while (v6);
  return result;
}

uint64_t AriMsg::unparam(AriMsg *this, uint64_t a2, char *a3, unint64_t a4)
{
  uint64_t result;
  unsigned int *v7;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  const char *v14;
  void **v15;
  const char *v16;
  void **v17;
  const char *v18;
  void **v19;
  void *__p[2];
  char v21;

  result = *((unsigned int *)this + 17);
  if ((_DWORD)result)
    return result;
  if (a3)
  {
    v7 = (unsigned int *)*((_QWORD *)this + 7);
    if (!v7)
      return 0;
    while (1)
    {
      if (*((unsigned __int8 *)v7 + 5) == (_DWORD)a2)
      {
        v10 = (uint64_t *)*((_QWORD *)v7 + 2);
        v11 = *((unsigned int *)v10 + 8);
        v12 = *v10;
        v13 = *v10 * v11;
        if (v13 + (unint64_t)v7[2] > a4)
        {
          AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unparam", (uint64_t)__p);
          if (v21 >= 0)
            v19 = __p;
          else
            v19 = (void **)__p[0];
          Ari::Log((Ari *)8, "(%s:%d) Grp(%d) m(0x%03x) pos(%d) tid(%d) with offset(%d) + len(%zu)*dim(%d), but param sz is only (%zu)", v18, v19, 1079, *(unsigned int *)this, *((unsigned int *)this + 1), a2, *v7, v7[2], v12, v11, a4);
          if (v21 < 0)
            operator delete(__p[0]);
          return 4294967216;
        }
        AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unparam", (uint64_t)__p);
        v15 = __p;
        if (v21 < 0)
          v15 = (void **)__p[0];
        Ari::Log((Ari *)4, "(%s:%d) Tlv(%s) Grp(%d) m(0x%03x) pos(%d) tid(%d) w/ offset(%d) rawlen(%zu) into max origLen(%zu) param sz(%zu)", v14, v15, 1094, *((_QWORD *)v7 + 3), *(unsigned int *)this, *((unsigned int *)this + 1), a2, *v7, v7[2], *((_QWORD *)v7 + 4), v13, a4);
        if (v21 < 0)
          operator delete(__p[0]);
        result = AriMsg::unpack(this, *v7, &a3[v7[2]], v13, 0, 0);
        if ((_DWORD)result)
          return result;
      }
      v7 = (unsigned int *)*((_QWORD *)v7 + 6);
      if (!v7)
        return 0;
    }
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "unparam", (uint64_t)__p);
  if (v21 >= 0)
    v17 = __p;
  else
    v17 = (void **)__p[0];
  Ari::Log((Ari *)8, "(%s:%d) AriMsg::unparam invalid input AriMsg (%p) or  bufferr (%p)!", v16, v17, 1055, this, 0);
  if (v21 < 0)
    operator delete(__p[0]);
  return 4294967217;
}

void sub_20E20CD24(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *__p,uint64_t a21,int a22,__int16 a23,char a24,char a25)
{
  if (a25 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AriMsg::extractCtx(AriMsg *this, int *a2)
{
  const char *v2;
  void **v3;
  int v4;
  uint64_t result;
  void *__p[2];
  char v7;

  if (*((_DWORD *)this + 17) == -74)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "extractCtx", (uint64_t)__p);
    if (v7 >= 0)
      v3 = __p;
    else
      v3 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Corrupt or invalid message - cannot extract context id", v2, v3, 1131);
    if (v7 < 0)
      operator delete(__p[0]);
    return 0xFFFFFFFFLL;
  }
  v4 = *((_DWORD *)this + 16);
  if (v4 == 0x8000)
    return 0xFFFFFFFFLL;
  result = 0;
  *a2 = v4;
  return result;
}

void sub_20E20CDEC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AriMsg::updateCtx(AriMsg *this, int a2)
{
  uint64_t result;

  result = *((unsigned int *)this + 17);
  if (!(_DWORD)result)
    *((_DWORD *)this + 16) = a2;
  return result;
}

const char *Ari::MsgNameById(Ari *this)
{
  uint64_t v1;
  const char *result;
  uint64_t v3;

  v1 = Ari::MsgDefById((Ari *)(this >> 26), (this >> 15) & 0x3FF);
  result = "Unknown";
  if (v1)
  {
    v3 = *(_QWORD *)(v1 + 48);
    if (v3)
      return (const char *)v3;
  }
  return result;
}

uint64_t Ari::MsgDefByName(Ari *this, const char *a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  const char *v7;
  size_t v8;

  v3 = 1;
  while (!ARIMSGDEF_GROUPS[v3])
  {
LABEL_8:
    if (++v3 == 64)
      return 0;
  }
  v4 = 0;
  while (1)
  {
    v5 = Ari::MsgDefById((Ari *)v3, v4);
    if (v5)
    {
      v6 = v5;
      v7 = *(const char **)(v5 + 48);
      v8 = strlen(v7);
      if (!strncmp(v7, (const char *)this, v8) && v8 == strlen((const char *)this))
        return v6;
    }
    if (++v4 == 1023)
      goto LABEL_8;
  }
}

uint64_t Ari::TlvDefByName(Ari *this, const char *a2, const char *a3)
{
  uint64_t v5;
  uint64_t v6;
  size_t v7;
  int v8;
  const char *v9;
  void **v10;
  void *__p[2];
  char v13;

  v5 = Ari::MsgDefByName(this, a2);
  if (!v5)
    return 0;
  v6 = *(_QWORD *)(v5 + 24);
  if (!v6)
    return v6;
  if (!*(_DWORD *)v6)
  {
LABEL_7:
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "TlvDefByName", (uint64_t)__p);
    if (v13 >= 0)
      v10 = __p;
    else
      v10 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) tlv(%s) not found under msg(%s)", v9, v10, 1252, a2, this);
    if (v13 < 0)
      operator delete(__p[0]);
    return 0;
  }
  v7 = strlen(a2);
  while (strncmp(*(const char **)(v6 + 24), a2, v7))
  {
    v8 = *(_DWORD *)(v6 + 32);
    v6 += 32;
    if (!v8)
      goto LABEL_7;
  }
  return v6;
}

void sub_20E20CFE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void Ari::LogHeader(Ari *this, const unsigned __int8 *a2)
{
  uint64_t v3;
  const char *v4;
  const char *v5;
  void **v6;
  const char *v7;
  void **v8;
  const char *v9;
  void **v10;
  const char *v11;
  void **v12;
  const char *v13;
  void **v14;
  void *__p[2];
  char v16;

  AriOsa::SWTrap(this == 0, (uint64_t)"buf == NULL", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", (const char *)0x4EA);
  v3 = Ari::MsgDefById((Ari *)((*(_QWORD *)this >> 35) & 0x3FLL), (unsigned __int16)*((_DWORD *)this + 2) >> 6);
  if (v3)
    v4 = *(const char **)(v3 + 48);
  else
    v4 = " (NOT FOUND IN SDK)";
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "LogHeader", (uint64_t)__p);
  if (v16 >= 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  Ari::Log((Ari *)0x20, "(%s:%d) hdr->magic   = 0X%08X", v5, v6, 1269, *(unsigned int *)this);
  if (v16 < 0)
    operator delete(__p[0]);
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "LogHeader", (uint64_t)__p);
  if (v16 >= 0)
    v8 = __p;
  else
    v8 = (void **)__p[0];
  Ari::Log((Ari *)0x20, "(%s:%d) hdr->groupId = 0X%04X", v7, v8, 1270, (*(_QWORD *)this >> 35) & 0x3FLL);
  if (v16 < 0)
    operator delete(__p[0]);
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "LogHeader", (uint64_t)__p);
  if (v16 >= 0)
    v10 = __p;
  else
    v10 = (void **)__p[0];
  Ari::Log((Ari *)0x20, "(%s:%d) hdr->msgId   = 0X%04X (%s)", v9, v10, 1271, (unsigned __int16)*((_DWORD *)this + 2) >> 6, v4);
  if (v16 < 0)
    operator delete(__p[0]);
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "LogHeader", (uint64_t)__p);
  if (v16 >= 0)
    v12 = __p;
  else
    v12 = (void **)__p[0];
  Ari::Log((Ari *)0x20, "(%s:%d) hdr->length  = 0X%03d", v11, v12, 1272, *(_QWORD *)this >> 49);
  if (v16 < 0)
    operator delete(__p[0]);
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari.cpp", "LogHeader", (uint64_t)__p);
  if (v16 >= 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  Ari::Log((Ari *)0x20, "(%s:%d) hdr->ctx     = 0X%04X", v13, v14, 1273, (unint64_t)*((unsigned int *)this + 2) >> 17);
  if (v16 < 0)
    operator delete(__p[0]);
}

void sub_20E20D24C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t ARI_IBICallType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICallType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEAudioChannelModes_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEAudioChannelModes_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEAudioCodec_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEAudioCodec_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEAudioEVSCodec_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEAudioEVSCodec_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEDTMFCodes_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEDTMFCodes_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEEcnAttr_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEEcnAttr_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEEvsPrimaryCMR_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEEvsPrimaryCMR_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaCapability_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaCapability_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaDirection_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaDirection_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaSessionErrCodes_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaSessionErrCodes_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEMediaType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERTTCodec_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERTTCodec_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMEResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERtcpProfile_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERtcpProfile_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERtcpSdesItemType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERtcpSdesItemType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERtpInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERtpInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERttSessionTtyMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMERttSessionTtyMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMESessionID_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMESessionID_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMeRtcpSourceType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMeRtcpSourceType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMeRtcpXrProfile_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIImsMeRtcpXrProfile_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISipCallDirection_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISipCallDirection_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISipEventId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISipEventId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISipMsgId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISipMsgId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

double AriSdk::ARI_IBICbsConfigReq_SDK::ARI_IBICbsConfigReq_SDK(AriSdk::ARI_IBICbsConfigReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x14808000u, 0);
  *(_QWORD *)v1 = &off_24C8FABD8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x14808000u, 0);
  *(_QWORD *)v1 = &off_24C8FABD8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

double AriSdk::ARI_IBICbsConfigReq_SDK::ARI_IBICbsConfigReq_SDK(AriSdk::ARI_IBICbsConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FABD8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FABD8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

void AriSdk::ARI_IBICbsConfigReq_SDK::~ARI_IBICbsConfigReq_SDK(AriSdk::ARI_IBICbsConfigReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8FABD8;
  v2 = (void *)*((_QWORD *)this + 17);
  if (v2)
  {
    *((_QWORD *)this + 18) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = (void *)*((_QWORD *)this + 12);
  if (v5)
  {
    *((_QWORD *)this + 13) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4095AA964ELL);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICbsConfigReq_SDK::~ARI_IBICbsConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICbsConfigReq_SDK::pack(AriSdk::ARI_IBICbsConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x192uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 2uLL, 0), !(_DWORD)result))
              {
                v13 = (_BYTE *)*((_QWORD *)this + 17);
                if (!v13
                  || (v14 = (_BYTE *)*((_QWORD *)this + 18), v13 == v14)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, v14 - v13, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICbsConfigReq_SDK::unpack(AriSdk::ARI_IBICbsConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _OWORD *v8;
  _BYTE *v9;
  _WORD *v10;
  _OWORD *v11;
  void *__p;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  BOOL v17;

  LOBYTE(__p) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  v5[16] = 0u;
  v5[17] = 0u;
  v5[18] = 0u;
  v5[19] = 0u;
  v5[20] = 0u;
  v5[21] = 0u;
  v5[22] = 0u;
  v5[23] = 0u;
  v5[24] = 0u;
  *((_WORD *)v5 + 200) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 402, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4095AA964ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICbsMidRangeList>::operator=<IBICbsMidRangeList&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4095AA964ELL);
  }
  LOBYTE(__p) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v17 = 0;
  v16 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_OWORD *)operator new[]();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 256, &v17, &v16);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = 0;
    v15 = 0;
    __p = 0;
    std::vector<IBICdmaLanguage>::__init_with_size[abi:ne180100]<IBICdmaLanguage*,IBICdmaLanguage*>(&__p, v8, (uint64_t)v8 + 4 * (v16 >> 2), v16 >> 2);
    AriSdk::TlvArray<IBICdmaLanguage,64ul>::operator=((uint64_t)this + 96, (uint64_t *)&__p);
    if (__p)
      operator delete(__p);
    MEMORY[0x212BB9B48](v8, 0x1000C8052888210);
  }
  LOBYTE(__p) = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  LOBYTE(__p) = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  }
  v17 = 0;
  v16 = 0xAAAAAAAAAAAAAAAALL;
  v11 = (_OWORD *)operator new[]();
  *v11 = 0u;
  v11[1] = 0u;
  v11[2] = 0u;
  v11[3] = 0u;
  v11[4] = 0u;
  v11[5] = 0u;
  v11[6] = 0u;
  v11[7] = 0u;
  v11[8] = 0u;
  v11[9] = 0u;
  v11[10] = 0u;
  v11[11] = 0u;
  v11[12] = 0u;
  v11[13] = 0u;
  v11[14] = 0u;
  v11[15] = 0u;
  v11[16] = 0u;
  v11[17] = 0u;
  v11[18] = 0u;
  v11[19] = 0u;
  v11[20] = 0u;
  v11[21] = 0u;
  v11[22] = 0u;
  v11[23] = 0u;
  v11[24] = 0u;
  v11[25] = 0u;
  v11[26] = 0u;
  v11[27] = 0u;
  v11[28] = 0u;
  v11[29] = 0u;
  v11[30] = 0u;
  v11[31] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 512, &v17, &v16);
  if (!(_DWORD)v3 && v17)
  {
    v14 = 0;
    v15 = 0;
    __p = 0;
    std::vector<IBICbsCdmaServiceCategoryFields>::__init_with_size[abi:ne180100]<IBICbsCdmaServiceCategoryFields*,IBICbsCdmaServiceCategoryFields*>(&__p, v11, (uint64_t)v11 + 8 * (v16 >> 3), v16 >> 3);
    AriSdk::TlvArray<IBICbsCdmaServiceCategoryFields,64ul>::operator=((uint64_t)this + 136, (uint64_t *)&__p);
    if (__p)
      operator delete(__p);
  }
  MEMORY[0x212BB9B48](v11, 0x1000C80CE7E837CLL);
  return v3;
}

void sub_20E20E0AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C80CE7E837CLL);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBICbsMidRangeList>::operator=<IBICbsMidRangeList&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x192uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4095AA964ELL);
  return a1;
}

uint64_t AriSdk::TlvArray<IBICdmaLanguage,64ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if ((unint64_t)(v4 - *a2) < 0x101)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, (a2[1] - *a2) >> 2, 64);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E20E2E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t AriSdk::TlvArray<IBICbsCdmaServiceCategoryFields,64ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if ((unint64_t)(v4 - *a2) < 0x201)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, (a2[1] - *a2) >> 3, 64);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E20E3E8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICbsConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICbsConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 343965696;
}

AriSdk::MsgBase *AriSdk::ARI_IBICbsConfigRspCb_SDK::ARI_IBICbsConfigRspCb_SDK(AriSdk::ARI_IBICbsConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x15008000u, 0);
  *(_QWORD *)result = &off_24C8FAC10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x15008000u, 0);
  *(_QWORD *)result = &off_24C8FAC10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICbsConfigRspCb_SDK::ARI_IBICbsConfigRspCb_SDK(AriSdk::ARI_IBICbsConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAC10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAC10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICbsConfigRspCb_SDK::~ARI_IBICbsConfigRspCb_SDK(AriSdk::ARI_IBICbsConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FAC10;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICbsConfigRspCb_SDK::~ARI_IBICbsConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICbsConfigRspCb_SDK::pack(AriSdk::ARI_IBICbsConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICbsConfigRspCb_SDK::unpack(AriSdk::ARI_IBICbsConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E20E84C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICbsConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICbsConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 352354304;
}

AriSdk::MsgBase *AriSdk::ARI_IBICbsGetConfigReq_SDK::ARI_IBICbsGetConfigReq_SDK(AriSdk::ARI_IBICbsGetConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x14810000u, 0);
  *(_QWORD *)result = &off_24C8FAC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x14810000u, 0);
  *(_QWORD *)result = &off_24C8FAC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICbsGetConfigReq_SDK::ARI_IBICbsGetConfigReq_SDK(AriSdk::ARI_IBICbsGetConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICbsGetConfigReq_SDK::~ARI_IBICbsGetConfigReq_SDK(AriSdk::ARI_IBICbsGetConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FAC48;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICbsGetConfigReq_SDK::~ARI_IBICbsGetConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICbsGetConfigReq_SDK::pack(AriSdk::ARI_IBICbsGetConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICbsGetConfigReq_SDK::unpack(AriSdk::ARI_IBICbsGetConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E20EBA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICbsGetConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICbsGetConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 343998464;
}

double AriSdk::ARI_IBICbsGetConfigRspCb_SDK::ARI_IBICbsGetConfigRspCb_SDK(AriSdk::ARI_IBICbsGetConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x15010000u, 0);
  *(_QWORD *)v1 = &off_24C8FAC80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x15010000u, 0);
  *(_QWORD *)v1 = &off_24C8FAC80;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBICbsGetConfigRspCb_SDK::ARI_IBICbsGetConfigRspCb_SDK(AriSdk::ARI_IBICbsGetConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAC80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAC80;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBICbsGetConfigRspCb_SDK::~ARI_IBICbsGetConfigRspCb_SDK(AriSdk::ARI_IBICbsGetConfigRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8FAC80;
  v2 = (void *)*((_QWORD *)this + 18);
  if (v2)
  {
    *((_QWORD *)this + 19) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = (void *)*((_QWORD *)this + 13);
  if (v5)
  {
    *((_QWORD *)this + 14) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4095AA964ELL);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICbsGetConfigRspCb_SDK::~ARI_IBICbsGetConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICbsGetConfigRspCb_SDK::pack(AriSdk::ARI_IBICbsGetConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  _BYTE *v10;
  _BYTE *v11;
  const void *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x192uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (_BYTE *)*((_QWORD *)this + 13);
            if (!v10
              || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, v11 - v10, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 1uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 2uLL, 0), !(_DWORD)result))
                {
                  v14 = (_BYTE *)*((_QWORD *)this + 18);
                  if (!v14
                    || (v15 = (_BYTE *)*((_QWORD *)this + 19), v14 == v15)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v14, v15 - v14, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICbsGetConfigRspCb_SDK::unpack(AriSdk::ARI_IBICbsGetConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _OWORD *v9;
  _BYTE *v10;
  _WORD *v11;
  _OWORD *v12;
  void *__p;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  BOOL v18;

  LOBYTE(__p) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v6 = (_OWORD *)operator new();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[13] = 0u;
  v6[14] = 0u;
  v6[15] = 0u;
  v6[16] = 0u;
  v6[17] = 0u;
  v6[18] = 0u;
  v6[19] = 0u;
  v6[20] = 0u;
  v6[21] = 0u;
  v6[22] = 0u;
  v6[23] = 0u;
  v6[24] = 0u;
  *((_WORD *)v6 + 200) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 402, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4095AA964ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICbsMidRangeList>::operator=<IBICbsMidRangeList&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4095AA964ELL);
  }
  LOBYTE(__p) = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  LOBYTE(__p) = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v9 = (_OWORD *)operator new[]();
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  v9[7] = 0u;
  v9[8] = 0u;
  v9[9] = 0u;
  v9[10] = 0u;
  v9[11] = 0u;
  v9[12] = 0u;
  v9[13] = 0u;
  v9[14] = 0u;
  v9[15] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 256, &v18, &v17);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B48](v9, 0x1000C8052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v15 = 0;
    v16 = 0;
    __p = 0;
    std::vector<IBICdmaLanguage>::__init_with_size[abi:ne180100]<IBICdmaLanguage*,IBICdmaLanguage*>(&__p, v9, (uint64_t)v9 + 4 * (v17 >> 2), v17 >> 2);
    AriSdk::TlvArray<IBICdmaLanguage,64ul>::operator=((uint64_t)this + 104, (uint64_t *)&__p);
    if (__p)
      operator delete(__p);
    MEMORY[0x212BB9B48](v9, 0x1000C8052888210);
  }
  LOBYTE(__p) = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  LOBYTE(__p) = 0;
  v11 = (_WORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !(_BYTE)__p)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 17, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v12 = (_OWORD *)operator new[]();
  *v12 = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  v12[3] = 0u;
  v12[4] = 0u;
  v12[5] = 0u;
  v12[6] = 0u;
  v12[7] = 0u;
  v12[8] = 0u;
  v12[9] = 0u;
  v12[10] = 0u;
  v12[11] = 0u;
  v12[12] = 0u;
  v12[13] = 0u;
  v12[14] = 0u;
  v12[15] = 0u;
  v12[16] = 0u;
  v12[17] = 0u;
  v12[18] = 0u;
  v12[19] = 0u;
  v12[20] = 0u;
  v12[21] = 0u;
  v12[22] = 0u;
  v12[23] = 0u;
  v12[24] = 0u;
  v12[25] = 0u;
  v12[26] = 0u;
  v12[27] = 0u;
  v12[28] = 0u;
  v12[29] = 0u;
  v12[30] = 0u;
  v12[31] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 512, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    v15 = 0;
    v16 = 0;
    __p = 0;
    std::vector<IBICbsCdmaServiceCategoryFields>::__init_with_size[abi:ne180100]<IBICbsCdmaServiceCategoryFields*,IBICbsCdmaServiceCategoryFields*>(&__p, v12, (uint64_t)v12 + 8 * (v17 >> 3), v17 >> 3);
    AriSdk::TlvArray<IBICbsCdmaServiceCategoryFields,64ul>::operator=((uint64_t)this + 144, (uint64_t *)&__p);
    if (__p)
      operator delete(__p);
  }
  MEMORY[0x212BB9B48](v12, 0x1000C80CE7E837CLL);
  return v3;
}

void sub_20E20F5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C80CE7E837CLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICbsGetConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICbsGetConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 352387072;
}

double AriSdk::ARI_IBICbsMsgIndCb_SDK::ARI_IBICbsMsgIndCb_SDK(AriSdk::ARI_IBICbsMsgIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x15820000u, 0);
  *(_QWORD *)v1 = &off_24C8FACB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x15820000u, 0);
  *(_QWORD *)v1 = &off_24C8FACB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  return result;
}

double AriSdk::ARI_IBICbsMsgIndCb_SDK::ARI_IBICbsMsgIndCb_SDK(AriSdk::ARI_IBICbsMsgIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FACB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FACB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  return result;
}

void AriSdk::ARI_IBICbsMsgIndCb_SDK::~ARI_IBICbsMsgIndCb_SDK(AriSdk::ARI_IBICbsMsgIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)this = &off_24C8FACB8;
  v2 = (void *)*((_QWORD *)this + 21);
  if (v2)
  {
    *((_QWORD *)this + 22) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = (void *)*((_QWORD *)this + 14);
  if (v7)
  {
    *((_QWORD *)this + 15) = v7;
    operator delete(v7);
  }
  v8 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  v11 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  v12 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  v13 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICbsMsgIndCb_SDK::~ARI_IBICbsMsgIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICbsMsgIndCb_SDK::pack(AriSdk::ARI_IBICbsMsgIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  _BYTE *v17;
  _BYTE *v18;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (_BYTE *)*((_QWORD *)this + 14);
              if (!v11
                || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, v12 - v11, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v13, 4uLL, 0), !(_DWORD)result))
                {
                  v14 = (const void *)*((_QWORD *)this + 18);
                  if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v14, 4uLL, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v15, 4uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v16, 2uLL, 0), !(_DWORD)result))
                      {
                        v17 = (_BYTE *)*((_QWORD *)this + 21);
                        if (!v17
                          || (v18 = (_BYTE *)*((_QWORD *)this + 22), v17 == v18)
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v17, v18 - v17, 0), !(_DWORD)result))
                        {
                          result = 0;
                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICbsMsgIndCb_SDK::unpack(AriSdk::ARI_IBICbsMsgIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _WORD *v6;
  _WORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  void *v10;
  void **v11;
  _BYTE *v12;
  void *v13;
  const char *v14;
  void *p_c;
  void *v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  _DWORD *v23;
  _WORD *v24;
  void *v25;
  void *__p;
  _BYTE *v28;
  uint64_t v29;
  size_t __sz;
  BOOL v31;
  std::vector<int> __c;

  LOBYTE(__c.__begin_) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__c.__begin_) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__c.__begin_) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  LOBYTE(__c.__begin_) = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  LOBYTE(__c.__begin_) = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  LOBYTE(__c.__begin_) = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  LOBYTE(__c.__begin_) = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v31 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (void *)operator new[]();
  bzero(v10, 0x4E4uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1252, &v31, &__sz);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v28 = 0;
    v29 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    v11 = (void **)((char *)this + 112);
    v13 = __p;
    v12 = v28;
    if ((unint64_t)(v28 - (_BYTE *)__p) < 0x4E5)
    {
      v16 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 15) = v16;
        operator delete(v16);
        *v11 = 0;
        *((_QWORD *)this + 15) = 0;
        *((_QWORD *)this + 16) = 0;
        v13 = __p;
        v12 = v28;
      }
      *((_QWORD *)this + 14) = v13;
      *((_QWORD *)this + 15) = v12;
      *((_QWORD *)this + 16) = v29;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)&__c);
      if (SHIBYTE(__c.__end_cap_.__value_) >= 0)
        p_c = &__c;
      else
        p_c = __c.__begin_;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, p_c, 360, (char *)this + 112, v28 - (_BYTE *)__p, 1252);
      if (SHIBYTE(__c.__end_cap_.__value_) < 0)
        operator delete(__c.__begin_);
      if (__p)
      {
        v28 = __p;
        operator delete(__p);
      }
    }
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  }
  LOBYTE(__c.__begin_) = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v17, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v18 = (_DWORD *)operator new();
    *v18 = *v17;
    v19 = *((_QWORD *)this + 17);
    *((_QWORD *)this + 17) = v18;
    if (v19)
      MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  LOBYTE(__c.__begin_) = 0;
  v20 = (_DWORD *)operator new();
  *v20 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v20, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v21 = (_DWORD *)operator new();
    *v21 = *v20;
    v22 = *((_QWORD *)this + 18);
    *((_QWORD *)this + 18) = v21;
    if (v22)
      MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
  }
  LOBYTE(__c.__begin_) = 0;
  v23 = (_DWORD *)operator new();
  *v23 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v23, 4, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v23);
    MEMORY[0x212BB9B60](v23, 0x1000C4052888210);
  }
  LOBYTE(__c.__begin_) = 0;
  v24 = (_WORD *)operator new();
  *v24 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v24, 2, (BOOL *)&__c, 0);
  if ((_DWORD)v3 || !LOBYTE(__c.__begin_))
  {
    MEMORY[0x212BB9B60](v24, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 20, v24);
    MEMORY[0x212BB9B60](v24, 0x1000C40BDFB0063);
  }
  LOBYTE(__sz) = 0;
  __p = (void *)0xAAAAAAAAAAAAAAAALL;
  v25 = (void *)operator new[]();
  bzero(v25, 0x4DDuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v25, 1245, (BOOL *)&__sz, (unint64_t *)&__p);
  if (!(_DWORD)v3)
  {
    if ((_BYTE)__sz)
    {
      memset(&__c, 0, sizeof(__c));
      std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__c, v25, (uint64_t)__p + (_QWORD)v25, (size_t)__p);
      AriSdk::TlvArray<unsigned char,1245ul>::operator=((std::vector<int> *)this + 7, (__n128 *)&__c);
      if (__c.__begin_)
      {
        __c.__end_ = __c.__begin_;
        operator delete(__c.__begin_);
      }
    }
  }
  MEMORY[0x212BB9B48](v25, 0x1000C8077774924);
  return v3;
}

void sub_20E210404(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  void *v19;

  v19 = *(void **)(v17 - 56);
  if (v19)
  {
    *(_QWORD *)(v17 - 48) = v19;
    operator delete(v19);
  }
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,1245ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x4DE)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 1245);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2105C0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICbsMsgIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICbsMsgIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 360841216;
}

AriSdk::MsgBase *AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK::ARI_IBICbsMsgServiceReadyIndCb_SDK(AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x15828000u, 0);
  *(_QWORD *)result = &off_24C8FACF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x15828000u, 0);
  *(_QWORD *)result = &off_24C8FACF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK::ARI_IBICbsMsgServiceReadyIndCb_SDK(AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FACF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FACF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK::~ARI_IBICbsMsgServiceReadyIndCb_SDK(AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FACF0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK::~ARI_IBICbsMsgServiceReadyIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK::pack(AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK::unpack(AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E210904(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICbsMsgServiceReadyIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 360873984;
}

_QWORD *std::vector<IBICdmaLanguage>::__init_with_size[abi:ne180100]<IBICdmaLanguage*,IBICdmaLanguage*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(4 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = (char *)result + 4 * a4;
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E2109C8(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

_QWORD *std::vector<IBICbsCdmaServiceCategoryFields>::__init_with_size[abi:ne180100]<IBICbsCdmaServiceCategoryFields*,IBICbsCdmaServiceCategoryFields*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(8 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[a4];
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E210A58(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double AriSdk::ARI_IBISimAccessApduCmdReq_SDK::ARI_IBISimAccessApduCmdReq_SDK(AriSdk::ARI_IBISimAccessApduCmdReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C808000u, 0);
  *(_QWORD *)v1 = &off_24C8FADB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C808000u, 0);
  *(_QWORD *)v1 = &off_24C8FADB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimAccessApduCmdReq_SDK::ARI_IBISimAccessApduCmdReq_SDK(AriSdk::ARI_IBISimAccessApduCmdReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FADB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FADB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimAccessApduCmdReq_SDK::~ARI_IBISimAccessApduCmdReq_SDK(AriSdk::ARI_IBISimAccessApduCmdReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8FADB8;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4019D8AA6FLL);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4080B1215BLL);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessApduCmdReq_SDK::~ARI_IBISimAccessApduCmdReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessApduCmdReq_SDK::pack(AriSdk::ARI_IBISimAccessApduCmdReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0xAuLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x110uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessApduCmdReq_SDK::unpack(AriSdk::ARI_IBISimAccessApduCmdReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _WORD *v7;
  _WORD *v8;
  _OWORD *v9;
  void *v10;
  uint64_t v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v15 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v14 = 0;
  v8 = (_WORD *)operator new();
  *(_QWORD *)v8 = 0;
  v8[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 10, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 12, (uint64_t)v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4080B1215BLL);
  }
  v13 = 0;
  v9 = (_OWORD *)operator new();
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  v9[7] = 0u;
  v9[8] = 0u;
  v9[9] = 0u;
  v9[10] = 0u;
  v9[11] = 0u;
  v9[12] = 0u;
  v9[13] = 0u;
  v9[14] = 0u;
  v9[15] = 0u;
  v9[16] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 272, &v13, 0);
  if (!(_DWORD)v3 && v13)
  {
    v10 = (void *)operator new();
    memcpy(v10, v9, 0x110uLL);
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4019D8AA6FLL);
  }
  MEMORY[0x212BB9B60](v9, 0x1000C4019D8AA6FLL);
  return v3;
}

void sub_20E211154(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4019D8AA6FLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessApduCmdReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessApduCmdReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 746618880;
}

double AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK::ARI_IBISimAccessApduCmdRspCb_SDK(AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D008000u, 0);
  *(_QWORD *)v1 = &off_24C8FADF0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D008000u, 0);
  *(_QWORD *)v1 = &off_24C8FADF0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK::ARI_IBISimAccessApduCmdRspCb_SDK(AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FADF0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FADF0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK::~ARI_IBISimAccessApduCmdRspCb_SDK(AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8FADF0;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4015B00A97);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK::~ARI_IBISimAccessApduCmdRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK::pack(AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 0x314uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK::unpack(AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  _DWORD *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v18 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 1, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v17 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v16 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v15 = 0;
  v11 = (void *)operator new();
  bzero(v11, 0x314uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 788, &v15, 0);
  if (!(_DWORD)v3 && v15)
  {
    v12 = (void *)operator new();
    memcpy(v12, v11, 0x314uLL);
    v13 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C4015B00A97);
  }
  MEMORY[0x212BB9B60](v11, 0x1000C4015B00A97);
  return v3;
}

void sub_20E211A68(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4015B00A97);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessApduCmdRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755007488;
}

double AriSdk::ARI_IBISimAccessFcpReq_SDK::ARI_IBISimAccessFcpReq_SDK(AriSdk::ARI_IBISimAccessFcpReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C830000u, 0);
  *(_QWORD *)v1 = &off_24C8FAE28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C830000u, 0);
  *(_QWORD *)v1 = &off_24C8FAE28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimAccessFcpReq_SDK::ARI_IBISimAccessFcpReq_SDK(AriSdk::ARI_IBISimAccessFcpReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAE28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAE28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimAccessFcpReq_SDK::~ARI_IBISimAccessFcpReq_SDK(AriSdk::ARI_IBISimAccessFcpReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8FAE28;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4080B1215BLL);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessFcpReq_SDK::~ARI_IBISimAccessFcpReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessFcpReq_SDK::pack(AriSdk::ARI_IBISimAccessFcpReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 0xAuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessFcpReq_SDK::unpack(AriSdk::ARI_IBISimAccessFcpReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _WORD *v6;
  _WORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 1, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v16 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 2, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v15 = 0;
  v7 = (_WORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 10, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
  }
  v14 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v8, 1, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v13 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v9, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
  {
    v10 = (_DWORD *)operator new();
    *v10 = *v9;
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E2121B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessFcpReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessFcpReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 746782720;
}

double AriSdk::ARI_IBISimAccessFcpRspCb_SDK::ARI_IBISimAccessFcpRspCb_SDK(AriSdk::ARI_IBISimAccessFcpRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D030000u, 0);
  *(_QWORD *)v1 = &off_24C8FAE60;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D030000u, 0);
  *(_QWORD *)v1 = &off_24C8FAE60;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimAccessFcpRspCb_SDK::ARI_IBISimAccessFcpRspCb_SDK(AriSdk::ARI_IBISimAccessFcpRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAE60;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAE60;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimAccessFcpRspCb_SDK::~ARI_IBISimAccessFcpRspCb_SDK(AriSdk::ARI_IBISimAccessFcpRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8FAE60;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40C8F101BCLL);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4092CEF755);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessFcpRspCb_SDK::~ARI_IBISimAccessFcpRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessFcpRspCb_SDK::pack(AriSdk::ARI_IBISimAccessFcpRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v9, 0x6DCuLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v10, 0x1FEuLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessFcpRspCb_SDK::unpack(AriSdk::ARI_IBISimAccessFcpRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  _OWORD *v11;
  void *v12;
  uint64_t v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v17 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v16 = 0;
  v8 = (void *)operator new();
  bzero(v8, 0x6DCuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v8, 1756, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4092CEF755);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (void *)operator new();
    memcpy(v9, v8, 0x6DCuLL);
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4092CEF755);
    MEMORY[0x212BB9B60](v8, 0x1000C4092CEF755);
  }
  v15 = 0;
  v11 = (_OWORD *)operator new();
  *v11 = 0u;
  v11[1] = 0u;
  v11[2] = 0u;
  v11[3] = 0u;
  v11[4] = 0u;
  v11[5] = 0u;
  v11[6] = 0u;
  v11[7] = 0u;
  v11[8] = 0u;
  v11[9] = 0u;
  v11[10] = 0u;
  v11[11] = 0u;
  v11[12] = 0u;
  v11[13] = 0u;
  v11[14] = 0u;
  v11[15] = 0u;
  v11[16] = 0u;
  v11[17] = 0u;
  v11[18] = 0u;
  v11[19] = 0u;
  v11[20] = 0u;
  v11[21] = 0u;
  v11[22] = 0u;
  v11[23] = 0u;
  v11[24] = 0u;
  v11[25] = 0u;
  v11[26] = 0u;
  v11[27] = 0u;
  v11[28] = 0u;
  v11[29] = 0u;
  v11[30] = 0u;
  *(_OWORD *)((char *)v11 + 494) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v11, 510, &v15, 0);
  if (!(_DWORD)v3 && v15)
  {
    v12 = (void *)operator new();
    memcpy(v12, v11, 0x1FEuLL);
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C40C8F101BCLL);
  }
  MEMORY[0x212BB9B60](v11, 0x1000C40C8F101BCLL);
  return v3;
}

void sub_20E21298C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40C8F101BCLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessFcpRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessFcpRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755171328;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimAccessGetSimDataReq_SDK::ARI_IBISimAccessGetSimDataReq_SDK(AriSdk::ARI_IBISimAccessGetSimDataReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C810000u, 0);
  *(_QWORD *)result = &off_24C8FAE98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C810000u, 0);
  *(_QWORD *)result = &off_24C8FAE98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimAccessGetSimDataReq_SDK::ARI_IBISimAccessGetSimDataReq_SDK(AriSdk::ARI_IBISimAccessGetSimDataReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAE98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAE98;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimAccessGetSimDataReq_SDK::~ARI_IBISimAccessGetSimDataReq_SDK(AriSdk::ARI_IBISimAccessGetSimDataReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FAE98;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessGetSimDataReq_SDK::~ARI_IBISimAccessGetSimDataReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessGetSimDataReq_SDK::pack(AriSdk::ARI_IBISimAccessGetSimDataReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessGetSimDataReq_SDK::unpack(AriSdk::ARI_IBISimAccessGetSimDataReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E212C58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessGetSimDataReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessGetSimDataReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 746651648;
}

double AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK::ARI_IBISimAccessGetSimDataRspCb_SDK(AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D010000u, 0);
  *(_QWORD *)v1 = &off_24C8FAED0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_QWORD *)v1 + 26) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D010000u, 0);
  *(_QWORD *)v1 = &off_24C8FAED0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_QWORD *)v1 + 26) = 0;
  return result;
}

double AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK::ARI_IBISimAccessGetSimDataRspCb_SDK(AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAED0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_QWORD *)v3 + 26) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAED0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_QWORD *)v3 + 26) = 0;
  return result;
}

void AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK::~ARI_IBISimAccessGetSimDataRspCb_SDK(AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)this = &off_24C8FAED0;
  v2 = (void *)*((_QWORD *)this + 24);
  if (v2)
  {
    *((_QWORD *)this + 25) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = (void *)*((_QWORD *)this + 20);
  if (v4)
  {
    *((_QWORD *)this + 21) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4078998D37);
  v7 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C40ACC164F2);
  v14 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  v16 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK::~ARI_IBISimAccessGetSimDataRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK::pack(AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  _BYTE *v17;
  _BYTE *v18;
  const void *v19;
  _BYTE *v20;
  _BYTE *v21;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v8, 0x234uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 28, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v14, 1uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v15, 0x54uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 31, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          v17 = (_BYTE *)*((_QWORD *)this + 20);
                          if (!v17
                            || (v18 = (_BYTE *)*((_QWORD *)this + 21), v17 == v18)
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 32, v17, v18 - v17, 0), !(_DWORD)result))
                          {
                            v19 = (const void *)*((_QWORD *)this + 23);
                            if (!v19
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 33, v19, 2uLL, 0), !(_DWORD)result))
                            {
                              v20 = (_BYTE *)*((_QWORD *)this + 24);
                              if (!v20
                                || (v21 = (_BYTE *)*((_QWORD *)this + 25), v20 == v21)
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 34, v20, v21 - v20, 0),
                                    !(_DWORD)result))
                              {
                                result = 0;
                                *a2 = (AriMsg *)*((_QWORD *)this + 6);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK::unpack(AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  void *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _BYTE *v13;
  _OWORD *v14;
  _DWORD *v15;
  _WORD *v16;
  _WORD *v17;
  _OWORD *v18;
  __n128 __p;
  uint64_t v21;
  size_t __sz;
  BOOL v23;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (void *)operator new();
  bzero(v7, 0x234uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v7, 564, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40ACC164F2);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimAccessAppInfoParam>::operator=<IBISimAccessAppInfoParam&,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40ACC164F2);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v8, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 28, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v13, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v14 = (_OWORD *)operator new();
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  *((_DWORD *)v14 + 20) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v14, 84, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4078998D37);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimAccessAppInfoParamExt>::operator=<IBISimAccessAppInfoParamExt&,void>((uint64_t *)this + 18, (uint64_t)v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4078998D37);
  }
  __p.n128_u8[0] = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 31, v15, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  v23 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v16 = (_WORD *)operator new[]();
  *(_QWORD *)v16 = 0;
  v16[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 32, v16, 10, &v23, &__sz);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v21 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v16, (uint64_t)v16 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,10ul>::operator=((std::vector<int> *)((char *)this + 160), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v17 = (_WORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 33, v17, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v17, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 23, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C40BDFB0063);
  }
  v23 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v18 = (_OWORD *)operator new[]();
  *v18 = 0u;
  v18[1] = 0u;
  *((_BYTE *)v18 + 32) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 34, v18, 33, &v23, &__sz);
  if (!(_DWORD)v3 && v23)
  {
    v21 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v18, (uint64_t)v18 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,33ul>::operator=((std::vector<int> *)this + 8, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v18, 0x1000C8077774924);
  return v3;
}

void sub_20E213B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISimAccessAppInfoParam>::operator=<IBISimAccessAppInfoParam&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x234uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40ACC164F2);
  return a1;
}

uint64_t *AriSdk::Tlv<IBISimAccessAppInfoParamExt>::operator=<IBISimAccessAppInfoParamExt&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v5;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_DWORD *)(v4 + 80) = *(_DWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v6;
  v7 = *a1;
  *a1 = v4;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4078998D37);
  return a1;
}

std::vector<int> *AriSdk::TlvArray<unsigned char,10ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xB)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 10);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E213E04(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,33ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x22)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 33);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E213EDC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessGetSimDataRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755040256;
}

double AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK::ARI_IBISimAccessGetSimDataIndCb_SDK(AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D840000u, 0);
  *(_QWORD *)v1 = &off_24C8FAF08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_QWORD *)v1 + 26) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D840000u, 0);
  *(_QWORD *)v1 = &off_24C8FAF08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_QWORD *)v1 + 26) = 0;
  return result;
}

double AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK::ARI_IBISimAccessGetSimDataIndCb_SDK(AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAF08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_QWORD *)v3 + 26) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAF08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_QWORD *)v3 + 26) = 0;
  return result;
}

void AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK::~ARI_IBISimAccessGetSimDataIndCb_SDK(AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)this = &off_24C8FAF08;
  v2 = (void *)*((_QWORD *)this + 24);
  if (v2)
  {
    *((_QWORD *)this + 25) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 23);
  *((_QWORD *)this + 23) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = (void *)*((_QWORD *)this + 20);
  if (v4)
  {
    *((_QWORD *)this + 21) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4078998D37);
  v7 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C40ACC164F2);
  v13 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v14)
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  v15 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  v16 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK::~ARI_IBISimAccessGetSimDataIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK::pack(AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  _BYTE *v17;
  _BYTE *v18;
  const void *v19;
  _BYTE *v20;
  _BYTE *v21;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v9, 0x234uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 28, v14, 1uLL, 0), !(_DWORD)result))
                    {
                      v15 = (const void *)*((_QWORD *)this + 18);
                      if (!v15
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 29, v15, 0x54uLL, 0), !(_DWORD)result))
                      {
                        v16 = (const void *)*((_QWORD *)this + 19);
                        if (!v16
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 30, v16, 4uLL, 0), !(_DWORD)result))
                        {
                          v17 = (_BYTE *)*((_QWORD *)this + 20);
                          if (!v17
                            || (v18 = (_BYTE *)*((_QWORD *)this + 21), v17 == v18)
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 31, v17, v18 - v17, 0), !(_DWORD)result))
                          {
                            v19 = (const void *)*((_QWORD *)this + 23);
                            if (!v19
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 32, v19, 2uLL, 0), !(_DWORD)result))
                            {
                              v20 = (_BYTE *)*((_QWORD *)this + 24);
                              if (!v20
                                || (v21 = (_BYTE *)*((_QWORD *)this + 25), v20 == v21)
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 33, v20, v21 - v20, 0),
                                    !(_DWORD)result))
                              {
                                result = 0;
                                *a2 = (AriMsg *)*((_QWORD *)this + 6);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK::unpack(AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  void *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _BYTE *v13;
  _OWORD *v14;
  _DWORD *v15;
  _WORD *v16;
  _WORD *v17;
  _OWORD *v18;
  __n128 __p;
  uint64_t v21;
  size_t __sz;
  BOOL v23;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (void *)operator new();
  bzero(v8, 0x234uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v8, 564, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40ACC164F2);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimAccessAppInfoParam>::operator=<IBISimAccessAppInfoParam&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40ACC164F2);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 28, v13, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v14 = (_OWORD *)operator new();
  *v14 = 0u;
  v14[1] = 0u;
  v14[2] = 0u;
  v14[3] = 0u;
  v14[4] = 0u;
  *((_DWORD *)v14 + 20) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 29, v14, 84, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4078998D37);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimAccessAppInfoParamExt>::operator=<IBISimAccessAppInfoParamExt&,void>((uint64_t *)this + 18, (uint64_t)v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4078998D37);
  }
  __p.n128_u8[0] = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 30, v15, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  v23 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v16 = (_WORD *)operator new[]();
  *(_QWORD *)v16 = 0;
  v16[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 31, v16, 10, &v23, &__sz);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v21 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v16, (uint64_t)v16 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,10ul>::operator=((std::vector<int> *)((char *)this + 160), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v17 = (_WORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 32, v17, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v17, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 23, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C40BDFB0063);
  }
  v23 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v18 = (_OWORD *)operator new[]();
  *v18 = 0u;
  v18[1] = 0u;
  *((_BYTE *)v18 + 32) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 33, v18, 33, &v23, &__sz);
  if (!(_DWORD)v3 && v23)
  {
    v21 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v18, (uint64_t)v18 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,33ul>::operator=((std::vector<int> *)this + 8, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v18, 0x1000C8077774924);
  return v3;
}

void sub_20E214DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessGetSimDataIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 763625472;
}

double AriSdk::ARI_IBISimAccessReadRecordReq_SDK::ARI_IBISimAccessReadRecordReq_SDK(AriSdk::ARI_IBISimAccessReadRecordReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C880000u, 0);
  *(_QWORD *)v1 = &off_24C8FAF40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C880000u, 0);
  *(_QWORD *)v1 = &off_24C8FAF40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimAccessReadRecordReq_SDK::ARI_IBISimAccessReadRecordReq_SDK(AriSdk::ARI_IBISimAccessReadRecordReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAF40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAF40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimAccessReadRecordReq_SDK::~ARI_IBISimAccessReadRecordReq_SDK(AriSdk::ARI_IBISimAccessReadRecordReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FAF40;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40D7A84E51);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4080B1215BLL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessReadRecordReq_SDK::~ARI_IBISimAccessReadRecordReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessReadRecordReq_SDK::pack(AriSdk::ARI_IBISimAccessReadRecordReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 0xAuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v9, 0xCuLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessReadRecordReq_SDK::unpack(AriSdk::ARI_IBISimAccessReadRecordReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _WORD *v6;
  _WORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 2, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v13 = 0;
  v7 = (_WORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 10, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *(_QWORD *)v8 = 0;
  v8[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v8, 12, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = operator new();
    *(_QWORD *)v9 = *(_QWORD *)v8;
    *(_DWORD *)(v9 + 8) = v8[2];
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C40D7A84E51);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C40D7A84E51);
  return v3;
}

void sub_20E2154D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40D7A84E51);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessReadRecordReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessReadRecordReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747110400;
}

double AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK::ARI_IBISimAccessReadRecordRspCb_SDK(AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D080000u, 0);
  *(_QWORD *)v1 = &off_24C8FAF78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D080000u, 0);
  *(_QWORD *)v1 = &off_24C8FAF78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK::ARI_IBISimAccessReadRecordRspCb_SDK(AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAF78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAF78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK::~ARI_IBISimAccessReadRecordRspCb_SDK(AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FAF78;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40178720E3);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK::~ARI_IBISimAccessReadRecordRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK::pack(AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v9, 0x106uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK::unpack(AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  char *v8;
  void *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v13 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (char *)operator new();
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_OWORD *)v8 + 7) = 0u;
  *((_OWORD *)v8 + 8) = 0u;
  *((_OWORD *)v8 + 9) = 0u;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_OWORD *)v8 + 12) = 0u;
  *((_OWORD *)v8 + 13) = 0u;
  *((_OWORD *)v8 + 14) = 0u;
  *((_OWORD *)v8 + 15) = 0u;
  *(_QWORD *)(v8 + 254) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v8, 262, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (void *)operator new();
    memcpy(v9, v8, 0x106uLL);
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C40178720E3);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C40178720E3);
  return v3;
}

void sub_20E215B74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40178720E3);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimAccessReadRecordRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755499008;
}

double AriSdk::ARI_IBISimApplicationReq_SDK::ARI_IBISimApplicationReq_SDK(AriSdk::ARI_IBISimApplicationReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C828000u, 0);
  *(_QWORD *)v1 = &off_24C8FAFB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C828000u, 0);
  *(_QWORD *)v1 = &off_24C8FAFB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISimApplicationReq_SDK::ARI_IBISimApplicationReq_SDK(AriSdk::ARI_IBISimApplicationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAFB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FAFB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISimApplicationReq_SDK::~ARI_IBISimApplicationReq_SDK(AriSdk::ARI_IBISimApplicationReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8FAFB0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4075806E5BLL);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimApplicationReq_SDK::~ARI_IBISimApplicationReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimApplicationReq_SDK::pack(AriSdk::ARI_IBISimApplicationReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x11uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimApplicationReq_SDK::unpack(AriSdk::ARI_IBISimApplicationReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v6[1] = 0;
  *((_BYTE *)v6 + 16) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 17, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4075806E5BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimSecAuthIntegrityKey>::operator=<IBISimSecAuthIntegrityKey&,void>((uint64_t *)this + 10, (uint64_t)v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4075806E5BLL);
  }
  v9 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  return v3;
}

void sub_20E2160C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimApplicationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimApplicationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 746749952;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimApplicationRspCb_SDK::ARI_IBISimApplicationRspCb_SDK(AriSdk::ARI_IBISimApplicationRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D028000u, 0);
  *(_QWORD *)result = &off_24C8FAFE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D028000u, 0);
  *(_QWORD *)result = &off_24C8FAFE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimApplicationRspCb_SDK::ARI_IBISimApplicationRspCb_SDK(AriSdk::ARI_IBISimApplicationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAFE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FAFE8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimApplicationRspCb_SDK::~ARI_IBISimApplicationRspCb_SDK(AriSdk::ARI_IBISimApplicationRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FAFE8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimApplicationRspCb_SDK::~ARI_IBISimApplicationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimApplicationRspCb_SDK::pack(AriSdk::ARI_IBISimApplicationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimApplicationRspCb_SDK::unpack(AriSdk::ARI_IBISimApplicationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E216530(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimApplicationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimApplicationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755138560;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK::ARI_IBISimCdmaFullAccessIndCb_SDK(AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D858000u, 0);
  *(_QWORD *)result = &off_24C8FB020;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D858000u, 0);
  *(_QWORD *)result = &off_24C8FB020;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK::ARI_IBISimCdmaFullAccessIndCb_SDK(AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB020;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB020;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK::~ARI_IBISimCdmaFullAccessIndCb_SDK(AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FB020;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK::~ARI_IBISimCdmaFullAccessIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK::pack(AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK::unpack(AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2167D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimCdmaFullAccessIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 763723776;
}

double AriSdk::ARI_IBISimEccListIndCb_SDK::ARI_IBISimEccListIndCb_SDK(AriSdk::ARI_IBISimEccListIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D830000u, 0);
  *(_QWORD *)v1 = &off_24C8FB058;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D830000u, 0);
  *(_QWORD *)v1 = &off_24C8FB058;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBISimEccListIndCb_SDK::ARI_IBISimEccListIndCb_SDK(AriSdk::ARI_IBISimEccListIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB058;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB058;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBISimEccListIndCb_SDK::~ARI_IBISimEccListIndCb_SDK(AriSdk::ARI_IBISimEccListIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8FB058;
  v2 = (void *)*((_QWORD *)this + 18);
  if (v2)
  {
    *((_QWORD *)this + 19) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 14);
  if (v4)
  {
    *((_QWORD *)this + 15) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = (void *)*((_QWORD *)this + 10);
  if (v6)
  {
    *((_QWORD *)this + 11) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimEccListIndCb_SDK::~ARI_IBISimEccListIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimEccListIndCb_SDK::pack(AriSdk::ARI_IBISimEccListIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 1uLL, 0), !(_DWORD)result))
        {
          v11 = (_BYTE *)*((_QWORD *)this + 14);
          if (!v11
            || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, v12 - v11, 0), !(_DWORD)result))
          {
            v13 = (const void *)*((_QWORD *)this + 17);
            if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v13, 1uLL, 0), !(_DWORD)result))
            {
              v14 = (_BYTE *)*((_QWORD *)this + 18);
              if (!v14
                || (v15 = (_BYTE *)*((_QWORD *)this + 19), v14 == v15)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v14, v15 - v14, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimEccListIndCb_SDK::unpack(AriSdk::ARI_IBISimEccListIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  _BYTE *v7;
  _OWORD *v8;
  _BYTE *v9;
  _OWORD *v10;
  __n128 __p;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v15 = 0;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 160, &v15, &v14);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<IBIEmergencyNumber>::__init_with_size[abi:ne180100]<IBIEmergencyNumber*,IBIEmergencyNumber*>(&__p, v6, (uint64_t)v6 + 8 * (v14 >> 3), v14 >> 3);
    AriSdk::TlvArray<IBIEmergencyNumber,20ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v6, 0x1000C8000313F17);
  }
  __p.n128_u8[0] = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v15 = 0;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_OWORD *)operator new[]();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 80, &v15, &v14);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<IBIEmergencyNumber>::__init_with_size[abi:ne180100]<IBIEmergencyNumber*,IBIEmergencyNumber*>(&__p, v8, (uint64_t)v8 + 8 * (v14 >> 3), v14 >> 3);
    AriSdk::TlvArray<IBIEmergencyNumber,10ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v15 = 0;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  v10[7] = 0u;
  v10[8] = 0u;
  v10[9] = 0u;
  v10[10] = 0u;
  v10[11] = 0u;
  v10[12] = 0u;
  v10[13] = 0u;
  v10[14] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 240, &v15, &v14);
  if (!(_DWORD)v3 && v15)
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<IBIEmergencyNumber>::__init_with_size[abi:ne180100]<IBIEmergencyNumber*,IBIEmergencyNumber*>(&__p, v10, (uint64_t)v10 + 8 * (v14 >> 3), v14 >> 3);
    AriSdk::TlvArray<IBIEmergencyNumber,30ul>::operator=((std::vector<int> *)this + 6, &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
  }
  MEMORY[0x212BB9B48](v10, 0x1000C8000313F17);
  return v3;
}

void sub_20E21704C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C8000313F17);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<IBIEmergencyNumber,20ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xA1)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 3, 20);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2171AC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<IBIEmergencyNumber,10ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x51)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 3, 10);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E217288(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<IBIEmergencyNumber,30ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xF1)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, (uint64_t)(__c->n128_u64[1] - __c->n128_u64[0]) >> 3, 30);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E217364(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBISimEccListIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimEccListIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 763559936;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK::ARI_IBISimFileGetCdmaAuxInfoReq_SDK(AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8A8000u, 0);
  *(_QWORD *)result = &off_24C8FB090;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8A8000u, 0);
  *(_QWORD *)result = &off_24C8FB090;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK::ARI_IBISimFileGetCdmaAuxInfoReq_SDK(AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB090;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB090;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK::~ARI_IBISimFileGetCdmaAuxInfoReq_SDK(AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB090;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK::~ARI_IBISimFileGetCdmaAuxInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK::pack(AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK::unpack(AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2176A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileGetCdmaAuxInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747274240;
}

double AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK(AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D0A8000u, 0);
  *(_QWORD *)v1 = &off_24C8FB0C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D0A8000u, 0);
  *(_QWORD *)v1 = &off_24C8FB0C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK(AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB0C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB0C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK::~ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK(AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8FB0C8;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40F3A072B0);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40F3A072B0);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40C903D563);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40C903D563);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4080B1215BLL);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK::~ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK::pack(AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xAuLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x491uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x491uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x49uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 0x49uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 2uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK::unpack(AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _BYTE *v25;
  _WORD *v26;
  BOOL v28;
  BOOL v29;
  BOOL v30;
  BOOL v31;
  BOOL v32;
  BOOL v33;
  BOOL v34;
  BOOL v35;
  BOOL v36;

  v36 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v36, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v36;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v35 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v35, 0);
  if ((_DWORD)v3 || !v35)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v34 = 0;
  v6 = (_WORD *)operator new();
  *(_QWORD *)v6 = 0;
  v6[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 10, &v34, 0);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = operator new();
    *(_QWORD *)v7 = *(_QWORD *)v6;
    *(_WORD *)(v7 + 8) = v6[4];
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4080B1215BLL);
    MEMORY[0x212BB9B60](v6, 0x1000C4080B1215BLL);
  }
  v33 = 0;
  v9 = (void *)operator new();
  bzero(v9, 0x491uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 1169, &v33, 0);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40C903D563);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (void *)operator new();
    memcpy(v10, v9, 0x491uLL);
    v11 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40C903D563);
    MEMORY[0x212BB9B60](v9, 0x1000C40C903D563);
  }
  v32 = 0;
  v12 = (void *)operator new();
  bzero(v12, 0x491uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v12, 1169, &v32, 0);
  if ((_DWORD)v3 || !v32)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C40C903D563);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = (void *)operator new();
    memcpy(v13, v12, 0x491uLL);
    v14 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v13;
    if (v14)
      MEMORY[0x212BB9B60](v14, 0x1000C40C903D563);
    MEMORY[0x212BB9B60](v12, 0x1000C40C903D563);
  }
  v31 = 0;
  v15 = (_OWORD *)operator new();
  *v15 = 0u;
  v15[1] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  *(_OWORD *)((char *)v15 + 57) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v15, 73, &v31, 0);
  if ((_DWORD)v3 || !v31)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C40F3A072B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v16 = (_OWORD *)operator new();
    v17 = v15[3];
    v16[2] = v15[2];
    v16[3] = v17;
    *(_OWORD *)((char *)v16 + 57) = *(_OWORD *)((char *)v15 + 57);
    v18 = v15[1];
    *v16 = *v15;
    v16[1] = v18;
    v19 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v16;
    if (v19)
      MEMORY[0x212BB9B60](v19, 0x1000C40F3A072B0);
    MEMORY[0x212BB9B60](v15, 0x1000C40F3A072B0);
  }
  v30 = 0;
  v20 = (_OWORD *)operator new();
  *v20 = 0u;
  v20[1] = 0u;
  v20[2] = 0u;
  v20[3] = 0u;
  *(_OWORD *)((char *)v20 + 57) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v20, 73, &v30, 0);
  if ((_DWORD)v3 || !v30)
  {
    MEMORY[0x212BB9B60](v20, 0x1000C40F3A072B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v21 = (_OWORD *)operator new();
    v22 = v20[3];
    v21[2] = v20[2];
    v21[3] = v22;
    *(_OWORD *)((char *)v21 + 57) = *(_OWORD *)((char *)v20 + 57);
    v23 = v20[1];
    *v21 = *v20;
    v21[1] = v23;
    v24 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v21;
    if (v24)
      MEMORY[0x212BB9B60](v24, 0x1000C40F3A072B0);
    MEMORY[0x212BB9B60](v20, 0x1000C40F3A072B0);
  }
  v29 = 0;
  v25 = (_BYTE *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v25, 1, &v29, 0);
  if ((_DWORD)v3 || !v29)
  {
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
  }
  v28 = 0;
  v26 = (_WORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v26, 2, &v28, 0);
  if (!(_DWORD)v3 && v28)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 16, v26);
  MEMORY[0x212BB9B60](v26, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E21816C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileGetCdmaAuxInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755662848;
}

double AriSdk::ARI_IBISimFileReadBinaryReq_SDK::ARI_IBISimFileReadBinaryReq_SDK(AriSdk::ARI_IBISimFileReadBinaryReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C890000u, 0);
  *(_QWORD *)v1 = &off_24C8FB100;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C890000u, 0);
  *(_QWORD *)v1 = &off_24C8FB100;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimFileReadBinaryReq_SDK::ARI_IBISimFileReadBinaryReq_SDK(AriSdk::ARI_IBISimFileReadBinaryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB100;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB100;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimFileReadBinaryReq_SDK::~ARI_IBISimFileReadBinaryReq_SDK(AriSdk::ARI_IBISimFileReadBinaryReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FB100;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4080B1215BLL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileReadBinaryReq_SDK::~ARI_IBISimFileReadBinaryReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileReadBinaryReq_SDK::pack(AriSdk::ARI_IBISimFileReadBinaryReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 0xAuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileReadBinaryReq_SDK::unpack(AriSdk::ARI_IBISimFileReadBinaryReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _WORD *v6;
  _WORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 2, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v13 = 0;
  v7 = (_WORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 10, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v8, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E218820(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimFileReadBinaryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileReadBinaryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747175936;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK::ARI_IBISimFileReadBinaryRspCb_SDK(AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D090000u, 0);
  *(_QWORD *)result = &off_24C8FB138;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D090000u, 0);
  *(_QWORD *)result = &off_24C8FB138;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK::ARI_IBISimFileReadBinaryRspCb_SDK(AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB138;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB138;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK::~ARI_IBISimFileReadBinaryRspCb_SDK(AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FB138;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40E2063AD4);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40B705F878);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK::~ARI_IBISimFileReadBinaryRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK::pack(AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xE04uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK::unpack(AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  *((_DWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 20, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40B705F878);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimAccessFileInfoRspParam>::operator=<IBISimAccessFileInfoRspParam&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40B705F878);
  }
  v10 = 0;
  v6 = (void *)operator new();
  bzero(v6, 0xE04uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 3588, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (void *)operator new();
    memcpy(v7, v6, 0xE04uLL);
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C40E2063AD4);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C40E2063AD4);
  return v3;
}

void sub_20E218CE0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40E2063AD4);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISimAccessFileInfoRspParam>::operator=<IBISimAccessFileInfoRspParam&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_DWORD *)(v4 + 16) = *(_DWORD *)(a2 + 16);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40B705F878);
  return a1;
}

BOOL AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileReadBinaryRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755564544;
}

double AriSdk::ARI_IBISimFileSearchRecordReq_SDK::ARI_IBISimFileSearchRecordReq_SDK(AriSdk::ARI_IBISimFileSearchRecordReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C8B0000u, 0);
  *(_QWORD *)v1 = &off_24C8FB170;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C8B0000u, 0);
  *(_QWORD *)v1 = &off_24C8FB170;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  return result;
}

double AriSdk::ARI_IBISimFileSearchRecordReq_SDK::ARI_IBISimFileSearchRecordReq_SDK(AriSdk::ARI_IBISimFileSearchRecordReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB170;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB170;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  return result;
}

void AriSdk::ARI_IBISimFileSearchRecordReq_SDK::~ARI_IBISimFileSearchRecordReq_SDK(AriSdk::ARI_IBISimFileSearchRecordReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C8FB170;
  v2 = (void *)*((_QWORD *)this + 17);
  if (v2)
  {
    *((_QWORD *)this + 18) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
  v8 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  v9 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileSearchRecordReq_SDK::~ARI_IBISimFileSearchRecordReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileSearchRecordReq_SDK::pack(AriSdk::ARI_IBISimFileSearchRecordReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0xAuLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    v14 = (_BYTE *)*((_QWORD *)this + 17);
                    if (!v14
                      || (v15 = (_BYTE *)*((_QWORD *)this + 18), v14 == v15)
                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v14, v15 - v14, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileSearchRecordReq_SDK::unpack(AriSdk::ARI_IBISimFileSearchRecordReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _WORD *v7;
  _WORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _OWORD *v15;
  __n128 __p;
  uint64_t v18;
  size_t __sz;
  BOOL v20;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *(_QWORD *)v8 = 0;
  v8[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 10, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 12, (uint64_t)v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4080B1215BLL);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (_DWORD *)operator new();
    *v10 = *v9;
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v12, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v13, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v14 = (_BYTE *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v14, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  }
  v20 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v15 = (_OWORD *)operator new[]();
  *v15 = 0u;
  v15[1] = 0u;
  v15[2] = 0u;
  v15[3] = 0u;
  v15[4] = 0u;
  v15[5] = 0u;
  v15[6] = 0u;
  v15[7] = 0u;
  v15[8] = 0u;
  v15[9] = 0u;
  v15[10] = 0u;
  v15[11] = 0u;
  v15[12] = 0u;
  v15[13] = 0u;
  v15[14] = 0u;
  *(_OWORD *)((char *)v15 + 239) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v15, 255, &v20, &__sz);
  if (!(_DWORD)v3 && v20)
  {
    v18 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v15, (uint64_t)v15 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,255ul>::operator=((std::vector<int> *)((char *)this + 136), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v15, 0x1000C8077774924);
  return v3;
}

void sub_20E219828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,255ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x100)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 255);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2199B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBISimFileSearchRecordReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileSearchRecordReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747307008;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK::ARI_IBISimFileSearchRecordRspCb_SDK(AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0B0000u, 0);
  *(_QWORD *)result = &off_24C8FB1A8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0B0000u, 0);
  *(_QWORD *)result = &off_24C8FB1A8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK::ARI_IBISimFileSearchRecordRspCb_SDK(AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB1A8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB1A8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK::~ARI_IBISimFileSearchRecordRspCb_SDK(AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FB1A8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C402DF8315BLL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40B705F878);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK::~ARI_IBISimFileSearchRecordRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK::pack(AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x101uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK::unpack(AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  void *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  *((_DWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 20, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40B705F878);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimAccessFileInfoRspParam>::operator=<IBISimAccessFileInfoRspParam&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40B705F878);
  }
  v10 = 0;
  v6 = (_OWORD *)operator new();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[13] = 0u;
  v6[14] = 0u;
  v6[15] = 0u;
  *((_BYTE *)v6 + 256) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 257, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (void *)operator new();
    memcpy(v7, v6, 0x101uLL);
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C402DF8315BLL);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C402DF8315BLL);
  return v3;
}

void sub_20E219E3C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C402DF8315BLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileSearchRecordRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755695616;
}

double AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK::ARI_IBISimFileUpdateBinaryReq_SDK(AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C898000u, 0);
  *(_QWORD *)v1 = &off_24C8FB1E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C898000u, 0);
  *(_QWORD *)v1 = &off_24C8FB1E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK::ARI_IBISimFileUpdateBinaryReq_SDK(AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB1E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB1E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK::~ARI_IBISimFileUpdateBinaryReq_SDK(AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FB1E0;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40E2063AD4);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4080B1215BLL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK::~ARI_IBISimFileUpdateBinaryReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK::pack(AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 0xAuLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v9, 0xE04uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK::unpack(AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 2, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v13 = 0;
  v7 = (_WORD *)operator new();
  *(_QWORD *)v7 = 0;
  v7[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 10, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICpsNssai>::operator=<IBICpsNssai&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4080B1215BLL);
  }
  v12 = 0;
  v8 = (void *)operator new();
  bzero(v8, 0xE04uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v8, 3588, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (void *)operator new();
    memcpy(v9, v8, 0xE04uLL);
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C40E2063AD4);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C40E2063AD4);
  return v3;
}

void sub_20E21A49C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40E2063AD4);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileUpdateBinaryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747208704;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK::ARI_IBISimFileUpdateBinaryRspCb_SDK(AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D098000u, 0);
  *(_QWORD *)result = &off_24C8FB218;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D098000u, 0);
  *(_QWORD *)result = &off_24C8FB218;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK::ARI_IBISimFileUpdateBinaryRspCb_SDK(AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB218;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB218;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK::~ARI_IBISimFileUpdateBinaryRspCb_SDK(AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB218;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40B705F878);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK::~ARI_IBISimFileUpdateBinaryRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK::pack(AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK::unpack(AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  *((_DWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 20, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBISimAccessFileInfoRspParam>::operator=<IBISimAccessFileInfoRspParam&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40B705F878);
  return v3;
}

void sub_20E21A854(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40B705F878);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFileUpdateBinaryRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755597312;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFullAccessIndCb_SDK::ARI_IBISimFullAccessIndCb_SDK(AriSdk::ARI_IBISimFullAccessIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D818000u, 0);
  *(_QWORD *)result = &off_24C8FB250;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D818000u, 0);
  *(_QWORD *)result = &off_24C8FB250;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimFullAccessIndCb_SDK::ARI_IBISimFullAccessIndCb_SDK(AriSdk::ARI_IBISimFullAccessIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB250;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB250;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimFullAccessIndCb_SDK::~ARI_IBISimFullAccessIndCb_SDK(AriSdk::ARI_IBISimFullAccessIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FB250;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimFullAccessIndCb_SDK::~ARI_IBISimFullAccessIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimFullAccessIndCb_SDK::pack(AriSdk::ARI_IBISimFullAccessIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimFullAccessIndCb_SDK::unpack(AriSdk::ARI_IBISimFullAccessIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E21AAEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimFullAccessIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimFullAccessIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 763461632;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetEccListReq_SDK::ARI_IBISimGetEccListReq_SDK(AriSdk::ARI_IBISimGetEccListReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C848000u, 0);
  *(_QWORD *)result = &off_24C8FB288;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C848000u, 0);
  *(_QWORD *)result = &off_24C8FB288;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetEccListReq_SDK::ARI_IBISimGetEccListReq_SDK(AriSdk::ARI_IBISimGetEccListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB288;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB288;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetEccListReq_SDK::~ARI_IBISimGetEccListReq_SDK(AriSdk::ARI_IBISimGetEccListReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FB288;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetEccListReq_SDK::~ARI_IBISimGetEccListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetEccListReq_SDK::pack(AriSdk::ARI_IBISimGetEccListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetEccListReq_SDK::unpack(AriSdk::ARI_IBISimGetEccListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E21AD6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetEccListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetEccListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 746881024;
}

double AriSdk::ARI_IBISimGetEccListRspCb_SDK::ARI_IBISimGetEccListRspCb_SDK(AriSdk::ARI_IBISimGetEccListRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D048000u, 0);
  *(_QWORD *)v1 = &off_24C8FB2C0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D048000u, 0);
  *(_QWORD *)v1 = &off_24C8FB2C0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBISimGetEccListRspCb_SDK::ARI_IBISimGetEccListRspCb_SDK(AriSdk::ARI_IBISimGetEccListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB2C0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB2C0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetEccListRspCb_SDK::~ARI_IBISimGetEccListRspCb_SDK(AriSdk::ARI_IBISimGetEccListRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8FB2C0;
  v2 = (void *)*((_QWORD *)this + 18);
  if (v2)
  {
    *((_QWORD *)this + 19) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 14);
  if (v4)
  {
    *((_QWORD *)this + 15) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = (void *)*((_QWORD *)this + 10);
  if (v6)
  {
    *((_QWORD *)this + 11) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetEccListRspCb_SDK::~ARI_IBISimGetEccListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetEccListRspCb_SDK::pack(AriSdk::ARI_IBISimGetEccListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;
  const void *v13;
  _BYTE *v14;
  _BYTE *v15;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 1uLL, 0), !(_DWORD)result))
        {
          v11 = (_BYTE *)*((_QWORD *)this + 14);
          if (!v11
            || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, v12 - v11, 0), !(_DWORD)result))
          {
            v13 = (const void *)*((_QWORD *)this + 17);
            if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v13, 1uLL, 0), !(_DWORD)result))
            {
              v14 = (_BYTE *)*((_QWORD *)this + 18);
              if (!v14
                || (v15 = (_BYTE *)*((_QWORD *)this + 19), v14 == v15)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v14, v15 - v14, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetEccListRspCb_SDK::unpack(AriSdk::ARI_IBISimGetEccListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  _BYTE *v7;
  _OWORD *v8;
  _BYTE *v9;
  _OWORD *v10;
  __n128 __p;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v15 = 0;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 160, &v15, &v14);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<IBIEmergencyNumber>::__init_with_size[abi:ne180100]<IBIEmergencyNumber*,IBIEmergencyNumber*>(&__p, v6, (uint64_t)v6 + 8 * (v14 >> 3), v14 >> 3);
    AriSdk::TlvArray<IBIEmergencyNumber,20ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v6, 0x1000C8000313F17);
  }
  __p.n128_u8[0] = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v15 = 0;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_OWORD *)operator new[]();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 80, &v15, &v14);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<IBIEmergencyNumber>::__init_with_size[abi:ne180100]<IBIEmergencyNumber*,IBIEmergencyNumber*>(&__p, v8, (uint64_t)v8 + 8 * (v14 >> 3), v14 >> 3);
    AriSdk::TlvArray<IBIEmergencyNumber,10ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
    MEMORY[0x212BB9B48](v8, 0x1000C8000313F17);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v15 = 0;
  v14 = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  v10[7] = 0u;
  v10[8] = 0u;
  v10[9] = 0u;
  v10[10] = 0u;
  v10[11] = 0u;
  v10[12] = 0u;
  v10[13] = 0u;
  v10[14] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 240, &v15, &v14);
  if (!(_DWORD)v3 && v15)
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<IBIEmergencyNumber>::__init_with_size[abi:ne180100]<IBIEmergencyNumber*,IBIEmergencyNumber*>(&__p, v10, (uint64_t)v10 + 8 * (v14 >> 3), v14 >> 3);
    AriSdk::TlvArray<IBIEmergencyNumber,30ul>::operator=((std::vector<int> *)this + 6, &__p);
    if (__p.n128_u64[0])
      operator delete((void *)__p.n128_u64[0]);
  }
  MEMORY[0x212BB9B48](v10, 0x1000C8000313F17);
  return v3;
}

void sub_20E21B5F0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v10, 0x1000C8000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetEccListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetEccListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755269632;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK::ARI_IBISimGetFullAccessStatusReq_SDK(AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C850000u, 0);
  *(_QWORD *)result = &off_24C8FB2F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C850000u, 0);
  *(_QWORD *)result = &off_24C8FB2F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK::ARI_IBISimGetFullAccessStatusReq_SDK(AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB2F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB2F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK::~ARI_IBISimGetFullAccessStatusReq_SDK(AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FB2F8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK::~ARI_IBISimGetFullAccessStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK::pack(AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK::unpack(AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E21B8E0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetFullAccessStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 746913792;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK::ARI_IBISimGetFullAccessStatusRspCb_SDK(AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D050000u, 0);
  *(_QWORD *)result = &off_24C8FB330;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D050000u, 0);
  *(_QWORD *)result = &off_24C8FB330;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK::ARI_IBISimGetFullAccessStatusRspCb_SDK(AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB330;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB330;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK::~ARI_IBISimGetFullAccessStatusRspCb_SDK(AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB330;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK::~ARI_IBISimGetFullAccessStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK::pack(AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK::unpack(AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E21BC28(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetFullAccessStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755302400;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK::ARI_IBISimGetPhoneNumMetaInfoReq_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8B8000u, 0);
  *(_QWORD *)result = &off_24C8FB368;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8B8000u, 0);
  *(_QWORD *)result = &off_24C8FB368;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK::ARI_IBISimGetPhoneNumMetaInfoReq_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB368;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB368;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK::~ARI_IBISimGetPhoneNumMetaInfoReq_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB368;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK::~ARI_IBISimGetPhoneNumMetaInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK::pack(AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK::unpack(AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E21BF80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetPhoneNumMetaInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747339776;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0B8000u, 0);
  *(_QWORD *)result = &off_24C8FB3A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0B8000u, 0);
  *(_QWORD *)result = &off_24C8FB3A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB3A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB3A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK::~ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FB3A0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK::~ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK::pack(AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK::unpack(AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E21C208(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetPhoneNumMetaInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755728384;
}

double AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D860000u, 0);
  *(_QWORD *)v1 = &off_24C8FB3D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D860000u, 0);
  *(_QWORD *)v1 = &off_24C8FB3D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB3D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB3D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK::~ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK(AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8FB3D8;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK::~ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK::pack(AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK::unpack(AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  _WORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v15 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v14 = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 2, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v13 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v12 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E21C9A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetPhoneNumMetaInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 763756544;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK::ARI_IBISimGetPlmnModeBitReq_SDK(AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8A0000u, 0);
  *(_QWORD *)result = &off_24C8FB410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8A0000u, 0);
  *(_QWORD *)result = &off_24C8FB410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK::ARI_IBISimGetPlmnModeBitReq_SDK(AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB410;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK::~ARI_IBISimGetPlmnModeBitReq_SDK(AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FB410;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK::~ARI_IBISimGetPlmnModeBitReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK::pack(AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK::unpack(AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E21CC6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetPlmnModeBitReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747241472;
}

double AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK::ARI_IBISimGetPlmnModeBitRspCb_SDK(AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D0A0000u, 0);
  *(_QWORD *)v1 = &off_24C8FB448;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D0A0000u, 0);
  *(_QWORD *)v1 = &off_24C8FB448;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK::ARI_IBISimGetPlmnModeBitRspCb_SDK(AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB448;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB448;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK::~ARI_IBISimGetPlmnModeBitRspCb_SDK(AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C8FB448;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK::~ARI_IBISimGetPlmnModeBitRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK::pack(AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK::unpack(AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E21D16C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimGetPlmnModeBitRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755630080;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimHwEventIndCb_SDK::ARI_IBISimHwEventIndCb_SDK(AriSdk::ARI_IBISimHwEventIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D850000u, 0);
  *(_QWORD *)result = &off_24C8FB480;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D850000u, 0);
  *(_QWORD *)result = &off_24C8FB480;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimHwEventIndCb_SDK::ARI_IBISimHwEventIndCb_SDK(AriSdk::ARI_IBISimHwEventIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB480;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB480;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimHwEventIndCb_SDK::~ARI_IBISimHwEventIndCb_SDK(AriSdk::ARI_IBISimHwEventIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB480;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimHwEventIndCb_SDK::~ARI_IBISimHwEventIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimHwEventIndCb_SDK::pack(AriSdk::ARI_IBISimHwEventIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimHwEventIndCb_SDK::unpack(AriSdk::ARI_IBISimHwEventIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E21D504(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimHwEventIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimHwEventIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 763691008;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK::ARI_IBISimPlmnModeBitIndCb_SDK(AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D848000u, 0);
  *(_QWORD *)result = &off_24C8FB4B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D848000u, 0);
  *(_QWORD *)result = &off_24C8FB4B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK::ARI_IBISimPlmnModeBitIndCb_SDK(AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB4B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB4B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK::~ARI_IBISimPlmnModeBitIndCb_SDK(AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB4B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK::~ARI_IBISimPlmnModeBitIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK::pack(AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK::unpack(AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E21D85C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPlmnModeBitIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 763658240;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimReadPhoneNumReq_SDK::ARI_IBISimReadPhoneNumReq_SDK(AriSdk::ARI_IBISimReadPhoneNumReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8C0000u, 0);
  *(_QWORD *)result = &off_24C8FB4F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8C0000u, 0);
  *(_QWORD *)result = &off_24C8FB4F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimReadPhoneNumReq_SDK::ARI_IBISimReadPhoneNumReq_SDK(AriSdk::ARI_IBISimReadPhoneNumReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB4F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB4F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimReadPhoneNumReq_SDK::~ARI_IBISimReadPhoneNumReq_SDK(AriSdk::ARI_IBISimReadPhoneNumReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FB4F0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimReadPhoneNumReq_SDK::~ARI_IBISimReadPhoneNumReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimReadPhoneNumReq_SDK::pack(AriSdk::ARI_IBISimReadPhoneNumReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimReadPhoneNumReq_SDK::unpack(AriSdk::ARI_IBISimReadPhoneNumReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E21DC94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimReadPhoneNumReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimReadPhoneNumReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747372544;
}

double AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK::ARI_IBISimReadPhoneNumRspCb_SDK(AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D0C0000u, 0);
  *(_QWORD *)v1 = &off_24C8FB528;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D0C0000u, 0);
  *(_QWORD *)v1 = &off_24C8FB528;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK::ARI_IBISimReadPhoneNumRspCb_SDK(AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB528;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB528;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK::~ARI_IBISimReadPhoneNumRspCb_SDK(AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FB528;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4013417087);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4050308C2ALL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK::~ARI_IBISimReadPhoneNumRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK::pack(AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x16uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0xF3uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK::unpack(AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _QWORD *v7;
  char *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v11 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v7 + 14) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 22, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimPbNum>::operator=<IBISimPbNum&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
  }
  v10 = 0;
  v8 = (char *)operator new();
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_OWORD *)v8 + 7) = 0u;
  *((_OWORD *)v8 + 8) = 0u;
  *((_OWORD *)v8 + 9) = 0u;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_OWORD *)v8 + 12) = 0u;
  *((_OWORD *)v8 + 13) = 0u;
  *((_OWORD *)v8 + 14) = 0u;
  *(_DWORD *)(v8 + 239) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 243, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<IBISimPbAlpha>::operator=<IBISimPbAlpha&,void>((uint64_t *)this + 12, (uint64_t)v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4013417087);
  return v3;
}

void sub_20E21E2C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4013417087);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISimPbNum>::operator=<IBISimPbNum&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = operator new();
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_QWORD *)(v4 + 14) = *(_QWORD *)(a2 + 14);
  v5 = *a1;
  *a1 = v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4050308C2ALL);
  return a1;
}

uint64_t *AriSdk::Tlv<IBISimPbAlpha>::operator=<IBISimPbAlpha&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(v4 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(v4 + 208) = v5;
  *(_OWORD *)(v4 + 224) = *(_OWORD *)(a2 + 224);
  *(_DWORD *)(v4 + 239) = *(_DWORD *)(a2 + 239);
  v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v4 + 144) = v6;
  v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(v4 + 176) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 112) = v9;
  v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v10;
  v11 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v11;
  v12 = *a1;
  *a1 = v4;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4013417087);
  return a1;
}

BOOL AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimReadPhoneNumRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755761152;
}

double AriSdk::ARI_IBISimTestReq_SDK::ARI_IBISimTestReq_SDK(AriSdk::ARI_IBISimTestReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C838000u, 0);
  *(_QWORD *)v1 = &off_24C8FB560;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C838000u, 0);
  *(_QWORD *)v1 = &off_24C8FB560;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimTestReq_SDK::ARI_IBISimTestReq_SDK(AriSdk::ARI_IBISimTestReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB560;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB560;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimTestReq_SDK::~ARI_IBISimTestReq_SDK(AriSdk::ARI_IBISimTestReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FB560;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimTestReq_SDK::~ARI_IBISimTestReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimTestReq_SDK::pack(AriSdk::ARI_IBISimTestReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimTestReq_SDK::unpack(AriSdk::ARI_IBISimTestReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  char *v6;
  void **v7;
  _BYTE *v8;
  void *v9;
  const char *v10;
  BOOL *v11;
  void *v12;
  void *__p;
  _BYTE *v15;
  uint64_t v16;
  size_t __sz;
  BOOL v18;
  BOOL v19[8];
  char v20;

  v19[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v19, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v19[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, v19, 0);
  if ((_DWORD)v3 || !v19[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v18 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (char *)operator new[]();
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *(_QWORD *)(v6 + 62) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 70, &v18, &__sz);
  if (!(_DWORD)v3 && v18)
  {
    v15 = 0;
    v16 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)&v6[__sz], __sz);
    v7 = (void **)((char *)this + 80);
    v9 = __p;
    v8 = v15;
    if ((unint64_t)(v15 - (_BYTE *)__p) < 0x47)
    {
      v12 = *v7;
      if (*v7)
      {
        *((_QWORD *)this + 11) = v12;
        operator delete(v12);
        *v7 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
        v9 = __p;
        v8 = v15;
      }
      *((_QWORD *)this + 10) = v9;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v16;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v19);
      if (v20 >= 0)
        v11 = v19;
      else
        v11 = *(BOOL **)v19;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v10, v11, 360, (char *)this + 80, v15 - (_BYTE *)__p, 70);
      if (v20 < 0)
        operator delete(*(void **)v19);
      if (__p)
      {
        v15 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E21E940(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimTestReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimTestReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 746815488;
}

double AriSdk::ARI_IBISimTestRspCb_SDK::ARI_IBISimTestRspCb_SDK(AriSdk::ARI_IBISimTestRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D038000u, 0);
  *(_QWORD *)v1 = &off_24C8FB598;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2D038000u, 0);
  *(_QWORD *)v1 = &off_24C8FB598;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimTestRspCb_SDK::ARI_IBISimTestRspCb_SDK(AriSdk::ARI_IBISimTestRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB598;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB598;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimTestRspCb_SDK::~ARI_IBISimTestRspCb_SDK(AriSdk::ARI_IBISimTestRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8FB598;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C402DF8315BLL);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimTestRspCb_SDK::~ARI_IBISimTestRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimTestRspCb_SDK::pack(AriSdk::ARI_IBISimTestRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x101uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimTestRspCb_SDK::unpack(AriSdk::ARI_IBISimTestRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  _OWORD *v10;
  void *v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v19 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v9, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v18 = 0;
  v10 = (_OWORD *)operator new();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  v10[7] = 0u;
  v10[8] = 0u;
  v10[9] = 0u;
  v10[10] = 0u;
  v10[11] = 0u;
  v10[12] = 0u;
  v10[13] = 0u;
  v10[14] = 0u;
  v10[15] = 0u;
  *((_BYTE *)v10 + 256) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v10, 257, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C402DF8315BLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (void *)operator new();
    memcpy(v11, v10, 0x101uLL);
    v12 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C402DF8315BLL);
    MEMORY[0x212BB9B60](v10, 0x1000C402DF8315BLL);
  }
  v17 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v13, 4, &v17, 0);
  if (!(_DWORD)v3 && v17)
  {
    v14 = (_DWORD *)operator new();
    *v14 = *v13;
    v15 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v14;
    if (v15)
      MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  return v3;
}

void sub_20E21F140(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimTestRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimTestRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755204096;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimTrayStatusReq_SDK::ARI_IBISimTrayStatusReq_SDK(AriSdk::ARI_IBISimTrayStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8D0000u, 0);
  *(_QWORD *)result = &off_24C8FB5D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2C8D0000u, 0);
  *(_QWORD *)result = &off_24C8FB5D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimTrayStatusReq_SDK::ARI_IBISimTrayStatusReq_SDK(AriSdk::ARI_IBISimTrayStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB5D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB5D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimTrayStatusReq_SDK::~ARI_IBISimTrayStatusReq_SDK(AriSdk::ARI_IBISimTrayStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FB5D0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimTrayStatusReq_SDK::~ARI_IBISimTrayStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimTrayStatusReq_SDK::pack(AriSdk::ARI_IBISimTrayStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimTrayStatusReq_SDK::unpack(AriSdk::ARI_IBISimTrayStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E21F3F0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimTrayStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimTrayStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747438080;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimTrayStatusRspCb_SDK::ARI_IBISimTrayStatusRspCb_SDK(AriSdk::ARI_IBISimTrayStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0D0000u, 0);
  *(_QWORD *)result = &off_24C8FB608;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0D0000u, 0);
  *(_QWORD *)result = &off_24C8FB608;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimTrayStatusRspCb_SDK::ARI_IBISimTrayStatusRspCb_SDK(AriSdk::ARI_IBISimTrayStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB608;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB608;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimTrayStatusRspCb_SDK::~ARI_IBISimTrayStatusRspCb_SDK(AriSdk::ARI_IBISimTrayStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB608;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimTrayStatusRspCb_SDK::~ARI_IBISimTrayStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimTrayStatusRspCb_SDK::pack(AriSdk::ARI_IBISimTrayStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimTrayStatusRspCb_SDK::unpack(AriSdk::ARI_IBISimTrayStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E21F770(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimTrayStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimTrayStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755826688;
}

double AriSdk::ARI_IBISimWritePhoneNumReq_SDK::ARI_IBISimWritePhoneNumReq_SDK(AriSdk::ARI_IBISimWritePhoneNumReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C8C8000u, 0);
  *(_QWORD *)v1 = &off_24C8FB640;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x2C8C8000u, 0);
  *(_QWORD *)v1 = &off_24C8FB640;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimWritePhoneNumReq_SDK::ARI_IBISimWritePhoneNumReq_SDK(AriSdk::ARI_IBISimWritePhoneNumReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB640;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FB640;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimWritePhoneNumReq_SDK::~ARI_IBISimWritePhoneNumReq_SDK(AriSdk::ARI_IBISimWritePhoneNumReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FB640;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4013417087);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4050308C2ALL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimWritePhoneNumReq_SDK::~ARI_IBISimWritePhoneNumReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimWritePhoneNumReq_SDK::pack(AriSdk::ARI_IBISimWritePhoneNumReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x16uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0xF3uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimWritePhoneNumReq_SDK::unpack(AriSdk::ARI_IBISimWritePhoneNumReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _QWORD *v7;
  char *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v11 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v7 + 14) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 22, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimPbNum>::operator=<IBISimPbNum&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
  }
  v10 = 0;
  v8 = (char *)operator new();
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_OWORD *)v8 + 7) = 0u;
  *((_OWORD *)v8 + 8) = 0u;
  *((_OWORD *)v8 + 9) = 0u;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_OWORD *)v8 + 12) = 0u;
  *((_OWORD *)v8 + 13) = 0u;
  *((_OWORD *)v8 + 14) = 0u;
  *(_DWORD *)(v8 + 239) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 243, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<IBISimPbAlpha>::operator=<IBISimPbAlpha&,void>((uint64_t *)this + 12, (uint64_t)v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4013417087);
  return v3;
}

void sub_20E21FD8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4013417087);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimWritePhoneNumReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimWritePhoneNumReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 747405312;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK::ARI_IBISimWritePhoneNumRspCb_SDK(AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0C8000u, 0);
  *(_QWORD *)result = &off_24C8FB678;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x2D0C8000u, 0);
  *(_QWORD *)result = &off_24C8FB678;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK::ARI_IBISimWritePhoneNumRspCb_SDK(AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB678;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FB678;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK::~ARI_IBISimWritePhoneNumRspCb_SDK(AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FB678;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK::~ARI_IBISimWritePhoneNumRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK::pack(AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK::unpack(AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E220130(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimWritePhoneNumRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 755793920;
}

_QWORD *std::vector<IBIEmergencyNumber>::__init_with_size[abi:ne180100]<IBIEmergencyNumber*,IBIEmergencyNumber*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(8 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[a4];
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E2201F4(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

AriSdk::MsgBase *AriSdk::ARI_IBIConfiguredSimInfoReq_SDK::ARI_IBIConfiguredSimInfoReq_SDK(AriSdk::ARI_IBIConfiguredSimInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC88A0000, 0);
  *(_QWORD *)result = &off_24C8FBA88;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC88A0000, 0);
  *(_QWORD *)result = &off_24C8FBA88;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIConfiguredSimInfoReq_SDK::ARI_IBIConfiguredSimInfoReq_SDK(AriSdk::ARI_IBIConfiguredSimInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBA88;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBA88;
  return result;
}

void AriSdk::ARI_IBIConfiguredSimInfoReq_SDK::~ARI_IBIConfiguredSimInfoReq_SDK(AriSdk::ARI_IBIConfiguredSimInfoReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIConfiguredSimInfoReq_SDK::pack(AriSdk::ARI_IBIConfiguredSimInfoReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIConfiguredSimInfoReq_SDK::unpack(AriSdk::ARI_IBIConfiguredSimInfoReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIConfiguredSimInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIConfiguredSimInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930480128;
}

double AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK::ARI_IBIConfiguredSimInfoRspCb_SDK(AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC90A0000, 0);
  *(_QWORD *)v1 = &off_24C8FBAC0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC90A0000, 0);
  *(_QWORD *)v1 = &off_24C8FBAC0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK::ARI_IBIConfiguredSimInfoRspCb_SDK(AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBAC0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBAC0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK::~ARI_IBIConfiguredSimInfoRspCb_SDK(AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FBAC0;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 9);
  if (v3)
  {
    *((_QWORD *)this + 10) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK::~ARI_IBIConfiguredSimInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK::pack(AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    v8 = !v6 || v6 == v7;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      v9 = (const void *)*((_QWORD *)this + 12);
      if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v9, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK::unpack(AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _DWORD *v6;
  void *__p[3];
  unint64_t v9;
  BOOL v10;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  v9 = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_OWORD *)operator new[]();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  *((_QWORD *)v5 + 14) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 120, &v10, &v9);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B48](v5, 0x1000C80F45ADFEBLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBISimInfoStruct>::__init_with_size[abi:ne180100]<IBISimInfoStruct*,IBISimInfoStruct*>(__p, v5, (uint64_t)v5 + 24 * (v9 / 0x18), v9 / 0x18);
    AriSdk::TlvArray<IBISimInfoStruct,5ul>::operator=((uint64_t)this + 72, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v5, 0x1000C80F45ADFEBLL);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2207FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t AriSdk::TlvArray<IBISimInfoStruct,5ul>::operator=(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  const char *v6;
  void **v7;
  void *v8;
  void *__p[2];
  char v11;

  v5 = *a2;
  v4 = a2[1];
  if (0xAAAAAAAAAAAAAAABLL * ((v4 - *a2) >> 3) < 6)
  {
    v8 = *(void **)a1;
    if (*(_QWORD *)a1)
    {
      *(_QWORD *)(a1 + 8) = v8;
      operator delete(v8);
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      v5 = *a2;
      v4 = a2[1];
    }
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = a2[2];
    *a2 = 0;
    a2[1] = 0;
    a2[2] = 0;
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v11 >= 0)
      v7 = __p;
    else
      v7 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v6, v7, 360, a1, 0xAAAAAAAAAAAAAAABLL * ((a2[1] - *a2) >> 3), 5);
    if (v11 < 0)
      operator delete(__p[0]);
  }
  return a1;
}

void sub_20E22095C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIConfiguredSimInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922091520;
}

double AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK::ARI_IBIConfiguredSimInfoIndCb_SDK(AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9828000, 0);
  *(_QWORD *)v1 = &off_24C8FBAF8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9828000, 0);
  *(_QWORD *)v1 = &off_24C8FBAF8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK::ARI_IBIConfiguredSimInfoIndCb_SDK(AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBAF8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBAF8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK::~ARI_IBIConfiguredSimInfoIndCb_SDK(AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FBAF8;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 9);
  if (v3)
  {
    *((_QWORD *)this + 10) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK::~ARI_IBIConfiguredSimInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK::pack(AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    v8 = !v6 || v6 == v7;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      v9 = (const void *)*((_QWORD *)this + 12);
      if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v9, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK::unpack(AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  _DWORD *v6;
  void *__p[3];
  unint64_t v9;
  BOOL v10;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  v9 = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_OWORD *)operator new[]();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  *((_QWORD *)v5 + 14) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 120, &v10, &v9);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B48](v5, 0x1000C80F45ADFEBLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    memset(__p, 0, sizeof(__p));
    std::vector<IBISimInfoStruct>::__init_with_size[abi:ne180100]<IBISimInfoStruct*,IBISimInfoStruct*>(__p, v5, (uint64_t)v5 + 24 * (v9 / 0x18), v9 / 0x18);
    AriSdk::TlvArray<IBISimInfoStruct,5ul>::operator=((uint64_t)this + 72, (uint64_t *)__p);
    if (__p[0])
      operator delete(__p[0]);
    MEMORY[0x212BB9B48](v5, 0x1000C80F45ADFEBLL);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E220DE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p)
{
  uint64_t v10;

  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIConfiguredSimInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -914194432;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEnableVirtualSimReq_SDK::ARI_IBIEnableVirtualSimReq_SDK(AriSdk::ARI_IBIEnableVirtualSimReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC88B0000, 0);
  *(_QWORD *)result = &off_24C8FBB30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC88B0000, 0);
  *(_QWORD *)result = &off_24C8FBB30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEnableVirtualSimReq_SDK::ARI_IBIEnableVirtualSimReq_SDK(AriSdk::ARI_IBIEnableVirtualSimReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBB30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBB30;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEnableVirtualSimReq_SDK::~ARI_IBIEnableVirtualSimReq_SDK(AriSdk::ARI_IBIEnableVirtualSimReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FBB30;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEnableVirtualSimReq_SDK::~ARI_IBIEnableVirtualSimReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEnableVirtualSimReq_SDK::pack(AriSdk::ARI_IBIEnableVirtualSimReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEnableVirtualSimReq_SDK::unpack(AriSdk::ARI_IBIEnableVirtualSimReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E22109C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEnableVirtualSimReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEnableVirtualSimReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930414592;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK::ARI_IBIEnableVirtualSimRspCb_SDK(AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC90B0000, 0);
  *(_QWORD *)result = &off_24C8FBB68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC90B0000, 0);
  *(_QWORD *)result = &off_24C8FBB68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK::ARI_IBIEnableVirtualSimRspCb_SDK(AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBB68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBB68;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK::~ARI_IBIEnableVirtualSimRspCb_SDK(AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FBB68;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK::~ARI_IBIEnableVirtualSimRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK::pack(AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK::unpack(AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E221310(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEnableVirtualSimRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922025984;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK::ARI_IBIEnableVirtualSimIndCb_SDK(AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9838000, 0);
  *(_QWORD *)result = &off_24C8FBBA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9838000, 0);
  *(_QWORD *)result = &off_24C8FBBA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK::ARI_IBIEnableVirtualSimIndCb_SDK(AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBBA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBBA0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK::~ARI_IBIEnableVirtualSimIndCb_SDK(AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FBBA0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK::~ARI_IBIEnableVirtualSimIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK::pack(AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK::unpack(AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E22158C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEnableVirtualSimIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -914128896;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEosStatusReq_SDK::ARI_IBIEosStatusReq_SDK(AriSdk::ARI_IBIEosStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8888000, 0);
  *(_QWORD *)result = &off_24C8FBBD8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8888000, 0);
  *(_QWORD *)result = &off_24C8FBBD8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEosStatusReq_SDK::ARI_IBIEosStatusReq_SDK(AriSdk::ARI_IBIEosStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBBD8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBBD8;
  return result;
}

void AriSdk::ARI_IBIEosStatusReq_SDK::~ARI_IBIEosStatusReq_SDK(AriSdk::ARI_IBIEosStatusReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEosStatusReq_SDK::pack(AriSdk::ARI_IBIEosStatusReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIEosStatusReq_SDK::unpack(AriSdk::ARI_IBIEosStatusReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIEosStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEosStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930578432;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEosStatusRspCb_SDK::ARI_IBIEosStatusRspCb_SDK(AriSdk::ARI_IBIEosStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9088000, 0);
  *(_QWORD *)result = &off_24C8FBC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9088000, 0);
  *(_QWORD *)result = &off_24C8FBC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEosStatusRspCb_SDK::ARI_IBIEosStatusRspCb_SDK(AriSdk::ARI_IBIEosStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEosStatusRspCb_SDK::~ARI_IBIEosStatusRspCb_SDK(AriSdk::ARI_IBIEosStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FBC10;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEosStatusRspCb_SDK::~ARI_IBIEosStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEosStatusRspCb_SDK::pack(AriSdk::ARI_IBIEosStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEosStatusRspCb_SDK::unpack(AriSdk::ARI_IBIEosStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E221A90(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEosStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEosStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922189824;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEosStatusIndCb_SDK::ARI_IBIEosStatusIndCb_SDK(AriSdk::ARI_IBIEosStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9818000, 0);
  *(_QWORD *)result = &off_24C8FBC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9818000, 0);
  *(_QWORD *)result = &off_24C8FBC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIEosStatusIndCb_SDK::ARI_IBIEosStatusIndCb_SDK(AriSdk::ARI_IBIEosStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBC48;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIEosStatusIndCb_SDK::~ARI_IBIEosStatusIndCb_SDK(AriSdk::ARI_IBIEosStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FBC48;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIEosStatusIndCb_SDK::~ARI_IBIEosStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIEosStatusIndCb_SDK::pack(AriSdk::ARI_IBIEosStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIEosStatusIndCb_SDK::unpack(AriSdk::ARI_IBIEosStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E221DEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIEosStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIEosStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -914259968;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK::ARI_IBIMapModemInstanceToSimReq_SDK(AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC88A8000, 0);
  *(_QWORD *)result = &off_24C8FBC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC88A8000, 0);
  *(_QWORD *)result = &off_24C8FBC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK::ARI_IBIMapModemInstanceToSimReq_SDK(AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK::~ARI_IBIMapModemInstanceToSimReq_SDK(AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FBC80;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK::~ARI_IBIMapModemInstanceToSimReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK::pack(AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK::unpack(AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E222148(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMapModemInstanceToSimReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930447360;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK::ARI_IBIMapModemInstanceToSimRspCb_SDK(AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC90A8000, 0);
  *(_QWORD *)result = &off_24C8FBCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC90A8000, 0);
  *(_QWORD *)result = &off_24C8FBCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK::ARI_IBIMapModemInstanceToSimRspCb_SDK(AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK::~ARI_IBIMapModemInstanceToSimRspCb_SDK(AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FBCB8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK::~ARI_IBIMapModemInstanceToSimRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK::pack(AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK::unpack(AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2223D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMapModemInstanceToSimRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922058752;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK::ARI_IBIMapModemInstanceToSimIndCb_SDK(AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9830000, 0);
  *(_QWORD *)result = &off_24C8FBCF0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9830000, 0);
  *(_QWORD *)result = &off_24C8FBCF0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK::ARI_IBIMapModemInstanceToSimIndCb_SDK(AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBCF0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBCF0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK::~ARI_IBIMapModemInstanceToSimIndCb_SDK(AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FBCF0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK::~ARI_IBIMapModemInstanceToSimIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK::pack(AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK::unpack(AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E222800(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMapModemInstanceToSimIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -914161664;
}

double AriSdk::ARI_IBIVinylAuthPsoReq_SDK::ARI_IBIVinylAuthPsoReq_SDK(AriSdk::ARI_IBIVinylAuthPsoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8830000, 0);
  *(_QWORD *)v1 = &off_24C8FBD28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8830000, 0);
  *(_QWORD *)v1 = &off_24C8FBD28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylAuthPsoReq_SDK::ARI_IBIVinylAuthPsoReq_SDK(AriSdk::ARI_IBIVinylAuthPsoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBD28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBD28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylAuthPsoReq_SDK::~ARI_IBIVinylAuthPsoReq_SDK(AriSdk::ARI_IBIVinylAuthPsoReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FBD28;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylAuthPsoReq_SDK::~ARI_IBIVinylAuthPsoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylAuthPsoReq_SDK::pack(AriSdk::ARI_IBIVinylAuthPsoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylAuthPsoReq_SDK::unpack(AriSdk::ARI_IBIVinylAuthPsoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E222E38(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,3584ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xE01)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 3584);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E222F90(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIVinylAuthPsoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylAuthPsoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930938880;
}

double AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK::ARI_IBIVinylAuthPsoRspCb_SDK(AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9030000, 0);
  *(_QWORD *)v1 = &off_24C8FBD60;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9030000, 0);
  *(_QWORD *)v1 = &off_24C8FBD60;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK::ARI_IBIVinylAuthPsoRspCb_SDK(AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBD60;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBD60;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK::~ARI_IBIVinylAuthPsoRspCb_SDK(AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FBD60;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK::~ARI_IBIVinylAuthPsoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK::pack(AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK::unpack(AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E2235AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylAuthPsoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922550272;
}

double AriSdk::ARI_IBIVinylFinalizePsoReq_SDK::ARI_IBIVinylFinalizePsoReq_SDK(AriSdk::ARI_IBIVinylFinalizePsoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8838000, 0);
  *(_QWORD *)v1 = &off_24C8FBD98;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8838000, 0);
  *(_QWORD *)v1 = &off_24C8FBD98;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylFinalizePsoReq_SDK::ARI_IBIVinylFinalizePsoReq_SDK(AriSdk::ARI_IBIVinylFinalizePsoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBD98;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBD98;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylFinalizePsoReq_SDK::~ARI_IBIVinylFinalizePsoReq_SDK(AriSdk::ARI_IBIVinylFinalizePsoReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FBD98;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylFinalizePsoReq_SDK::~ARI_IBIVinylFinalizePsoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylFinalizePsoReq_SDK::pack(AriSdk::ARI_IBIVinylFinalizePsoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylFinalizePsoReq_SDK::unpack(AriSdk::ARI_IBIVinylFinalizePsoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E223C40(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylFinalizePsoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylFinalizePsoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930906112;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK::ARI_IBIVinylFinalizePsoRspCb_SDK(AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9038000, 0);
  *(_QWORD *)result = &off_24C8FBDD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9038000, 0);
  *(_QWORD *)result = &off_24C8FBDD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK::ARI_IBIVinylFinalizePsoRspCb_SDK(AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBDD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBDD0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK::~ARI_IBIVinylFinalizePsoRspCb_SDK(AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FBDD0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK::~ARI_IBIVinylFinalizePsoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK::pack(AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK::unpack(AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2240EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylFinalizePsoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922517504;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylGetDataReq_SDK::ARI_IBIVinylGetDataReq_SDK(AriSdk::ARI_IBIVinylGetDataReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8810000, 0);
  *(_QWORD *)result = &off_24C8FBE08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8810000, 0);
  *(_QWORD *)result = &off_24C8FBE08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylGetDataReq_SDK::ARI_IBIVinylGetDataReq_SDK(AriSdk::ARI_IBIVinylGetDataReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBE08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBE08;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylGetDataReq_SDK::~ARI_IBIVinylGetDataReq_SDK(AriSdk::ARI_IBIVinylGetDataReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FBE08;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylGetDataReq_SDK::~ARI_IBIVinylGetDataReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylGetDataReq_SDK::pack(AriSdk::ARI_IBIVinylGetDataReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylGetDataReq_SDK::unpack(AriSdk::ARI_IBIVinylGetDataReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E224458(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylGetDataReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylGetDataReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -931069952;
}

double AriSdk::ARI_IBIVinylGetDataRspCb_SDK::ARI_IBIVinylGetDataRspCb_SDK(AriSdk::ARI_IBIVinylGetDataRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9010000, 0);
  *(_QWORD *)v1 = &off_24C8FBE40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  *((_OWORD *)v1 + 23) = 0u;
  *((_OWORD *)v1 + 24) = 0u;
  *((_OWORD *)v1 + 25) = 0u;
  *((_OWORD *)v1 + 26) = 0u;
  *((_OWORD *)v1 + 27) = 0u;
  *((_OWORD *)v1 + 28) = 0u;
  *((_OWORD *)v1 + 29) = 0u;
  *((_OWORD *)v1 + 30) = 0u;
  *((_OWORD *)v1 + 31) = 0u;
  *((_OWORD *)v1 + 32) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9010000, 0);
  *(_QWORD *)v1 = &off_24C8FBE40;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_OWORD *)v1 + 14) = 0u;
  *((_OWORD *)v1 + 15) = 0u;
  *((_OWORD *)v1 + 16) = 0u;
  *((_OWORD *)v1 + 17) = 0u;
  *((_OWORD *)v1 + 18) = 0u;
  *((_OWORD *)v1 + 19) = 0u;
  *((_OWORD *)v1 + 20) = 0u;
  *((_OWORD *)v1 + 21) = 0u;
  *((_OWORD *)v1 + 22) = 0u;
  *((_OWORD *)v1 + 23) = 0u;
  *((_OWORD *)v1 + 24) = 0u;
  *((_OWORD *)v1 + 25) = 0u;
  *((_OWORD *)v1 + 26) = 0u;
  *((_OWORD *)v1 + 27) = 0u;
  *((_OWORD *)v1 + 28) = 0u;
  *((_OWORD *)v1 + 29) = 0u;
  *((_OWORD *)v1 + 30) = 0u;
  *((_OWORD *)v1 + 31) = 0u;
  *((_OWORD *)v1 + 32) = 0u;
  return result;
}

double AriSdk::ARI_IBIVinylGetDataRspCb_SDK::ARI_IBIVinylGetDataRspCb_SDK(AriSdk::ARI_IBIVinylGetDataRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBE40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_OWORD *)v3 + 25) = 0u;
  *((_OWORD *)v3 + 26) = 0u;
  *((_OWORD *)v3 + 27) = 0u;
  *((_OWORD *)v3 + 28) = 0u;
  *((_OWORD *)v3 + 29) = 0u;
  *((_OWORD *)v3 + 30) = 0u;
  *((_OWORD *)v3 + 31) = 0u;
  *((_OWORD *)v3 + 32) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBE40;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_OWORD *)v3 + 14) = 0u;
  *((_OWORD *)v3 + 15) = 0u;
  *((_OWORD *)v3 + 16) = 0u;
  *((_OWORD *)v3 + 17) = 0u;
  *((_OWORD *)v3 + 18) = 0u;
  *((_OWORD *)v3 + 19) = 0u;
  *((_OWORD *)v3 + 20) = 0u;
  *((_OWORD *)v3 + 21) = 0u;
  *((_OWORD *)v3 + 22) = 0u;
  *((_OWORD *)v3 + 23) = 0u;
  *((_OWORD *)v3 + 24) = 0u;
  *((_OWORD *)v3 + 25) = 0u;
  *((_OWORD *)v3 + 26) = 0u;
  *((_OWORD *)v3 + 27) = 0u;
  *((_OWORD *)v3 + 28) = 0u;
  *((_OWORD *)v3 + 29) = 0u;
  *((_OWORD *)v3 + 30) = 0u;
  *((_OWORD *)v3 + 31) = 0u;
  *((_OWORD *)v3 + 32) = 0u;
  return result;
}

void AriSdk::ARI_IBIVinylGetDataRspCb_SDK::~ARI_IBIVinylGetDataRspCb_SDK(AriSdk::ARI_IBIVinylGetDataRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  void *v12;
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  void *v18;
  void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_QWORD *)this = &off_24C8FBE40;
  v2 = (void *)*((_QWORD *)this + 63);
  if (v2)
  {
    *((_QWORD *)this + 64) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 62);
  *((_QWORD *)this + 62) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 61);
  *((_QWORD *)this + 61) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 60);
  *((_QWORD *)this + 60) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 59);
  *((_QWORD *)this + 59) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = (void *)*((_QWORD *)this + 56);
  if (v7)
  {
    *((_QWORD *)this + 57) = v7;
    operator delete(v7);
  }
  v8 = (void *)*((_QWORD *)this + 53);
  if (v8)
  {
    *((_QWORD *)this + 54) = v8;
    operator delete(v8);
  }
  v9 = (void *)*((_QWORD *)this + 50);
  if (v9)
  {
    *((_QWORD *)this + 51) = v9;
    operator delete(v9);
  }
  v10 = *((_QWORD *)this + 49);
  *((_QWORD *)this + 49) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  v11 = (void *)*((_QWORD *)this + 46);
  if (v11)
  {
    *((_QWORD *)this + 47) = v11;
    operator delete(v11);
  }
  v12 = (void *)*((_QWORD *)this + 43);
  if (v12)
  {
    *((_QWORD *)this + 44) = v12;
    operator delete(v12);
  }
  v13 = (void *)*((_QWORD *)this + 40);
  if (v13)
  {
    *((_QWORD *)this + 41) = v13;
    operator delete(v13);
  }
  v14 = (void *)*((_QWORD *)this + 37);
  if (v14)
  {
    *((_QWORD *)this + 38) = v14;
    operator delete(v14);
  }
  v15 = (void *)*((_QWORD *)this + 34);
  if (v15)
  {
    *((_QWORD *)this + 35) = v15;
    operator delete(v15);
  }
  v16 = (void *)*((_QWORD *)this + 31);
  if (v16)
  {
    *((_QWORD *)this + 32) = v16;
    operator delete(v16);
  }
  v17 = (void *)*((_QWORD *)this + 28);
  if (v17)
  {
    *((_QWORD *)this + 29) = v17;
    operator delete(v17);
  }
  v18 = (void *)*((_QWORD *)this + 25);
  if (v18)
  {
    *((_QWORD *)this + 26) = v18;
    operator delete(v18);
  }
  v19 = (void *)*((_QWORD *)this + 22);
  if (v19)
  {
    *((_QWORD *)this + 23) = v19;
    operator delete(v19);
  }
  v20 = (void *)*((_QWORD *)this + 19);
  if (v20)
  {
    *((_QWORD *)this + 20) = v20;
    operator delete(v20);
  }
  v21 = (void *)*((_QWORD *)this + 16);
  if (v21)
  {
    *((_QWORD *)this + 17) = v21;
    operator delete(v21);
  }
  v22 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v22)
    MEMORY[0x212BB9B60](v22, 0x1000C4077774924);
  v23 = (void *)*((_QWORD *)this + 12);
  if (v23)
  {
    *((_QWORD *)this + 13) = v23;
    operator delete(v23);
  }
  v24 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v24)
    MEMORY[0x212BB9B60](v24, 0x1000C40BDFB0063);
  v25 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v25)
    MEMORY[0x212BB9B60](v25, 0x1000C4077774924);
  v26 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v26)
    MEMORY[0x212BB9B60](v26, 0x1000C4052888210);
  v27 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v27)
    MEMORY[0x212BB9B60](v27, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylGetDataRspCb_SDK::~ARI_IBIVinylGetDataRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylGetDataRspCb_SDK::pack(AriSdk::ARI_IBIVinylGetDataRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _BYTE *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  _BYTE *v20;
  _BYTE *v21;
  _BYTE *v22;
  _BYTE *v23;
  _BYTE *v24;
  _BYTE *v25;
  _BYTE *v26;
  _BYTE *v27;
  _BYTE *v28;
  _BYTE *v29;
  _BYTE *v30;
  _BYTE *v31;
  _BYTE *v32;
  _BYTE *v33;
  const void *v34;
  _BYTE *v35;
  _BYTE *v36;
  _BYTE *v37;
  _BYTE *v38;
  _BYTE *v39;
  _BYTE *v40;
  const void *v41;
  const void *v42;
  const void *v43;
  const void *v44;
  _BYTE *v45;
  _BYTE *v46;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
            {
              v12 = (_BYTE *)*((_QWORD *)this + 16);
              if (!v12
                || (v13 = (_BYTE *)*((_QWORD *)this + 17), v12 == v13)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, v13 - v12, 0), !(_DWORD)result))
              {
                v14 = (_BYTE *)*((_QWORD *)this + 19);
                if (!v14
                  || (v15 = (_BYTE *)*((_QWORD *)this + 20), v14 == v15)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v14, v15 - v14, 0), !(_DWORD)result))
                {
                  v16 = (_BYTE *)*((_QWORD *)this + 22);
                  if (!v16
                    || (v17 = (_BYTE *)*((_QWORD *)this + 23), v16 == v17)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v16, v17 - v16, 0), !(_DWORD)result))
                  {
                    v18 = (_BYTE *)*((_QWORD *)this + 25);
                    if (!v18
                      || (v19 = (_BYTE *)*((_QWORD *)this + 26), v18 == v19)
                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v18, v19 - v18, 0), !(_DWORD)result))
                    {
                      v20 = (_BYTE *)*((_QWORD *)this + 28);
                      if (!v20
                        || (v21 = (_BYTE *)*((_QWORD *)this + 29), v20 == v21)
                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v20, v21 - v20, 0), !(_DWORD)result))
                      {
                        v22 = (_BYTE *)*((_QWORD *)this + 31);
                        if (!v22
                          || (v23 = (_BYTE *)*((_QWORD *)this + 32), v22 == v23)
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v22, v23 - v22, 0), !(_DWORD)result))
                        {
                          v24 = (_BYTE *)*((_QWORD *)this + 34);
                          if (!v24
                            || (v25 = (_BYTE *)*((_QWORD *)this + 35), v24 == v25)
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v24, v25 - v24, 0), !(_DWORD)result))
                          {
                            v26 = (_BYTE *)*((_QWORD *)this + 37);
                            if (!v26
                              || (v27 = (_BYTE *)*((_QWORD *)this + 38), v26 == v27)
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v26, v27 - v26, 0), !(_DWORD)result))
                            {
                              v28 = (_BYTE *)*((_QWORD *)this + 40);
                              if (!v28
                                || (v29 = (_BYTE *)*((_QWORD *)this + 41), v28 == v29)
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v28, v29 - v28, 0),
                                    !(_DWORD)result))
                              {
                                v30 = (_BYTE *)*((_QWORD *)this + 43);
                                if (!v30
                                  || (v31 = (_BYTE *)*((_QWORD *)this + 44), v30 == v31)
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v30, v31 - v30, 0),
                                      !(_DWORD)result))
                                {
                                  v32 = (_BYTE *)*((_QWORD *)this + 46);
                                  if (!v32
                                    || (v33 = (_BYTE *)*((_QWORD *)this + 47), v32 == v33)
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v32, v33 - v32, 0),
                                        !(_DWORD)result))
                                  {
                                    v34 = (const void *)*((_QWORD *)this + 49);
                                    if (!v34
                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v34, 2uLL, 0),
                                          !(_DWORD)result))
                                    {
                                      v35 = (_BYTE *)*((_QWORD *)this + 50);
                                      if (!v35
                                        || (v36 = (_BYTE *)*((_QWORD *)this + 51), v35 == v36)
                                        || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v35, v36 - v35, 0),
                                            !(_DWORD)result))
                                      {
                                        v37 = (_BYTE *)*((_QWORD *)this + 53);
                                        if (!v37
                                          || (v38 = (_BYTE *)*((_QWORD *)this + 54), v37 == v38)
                                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v37, v38 - v37, 0),
                                              !(_DWORD)result))
                                        {
                                          v39 = (_BYTE *)*((_QWORD *)this + 56);
                                          if (!v39
                                            || (v40 = (_BYTE *)*((_QWORD *)this + 57), v39 == v40)
                                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v39, v40 - v39, 0),
                                                !(_DWORD)result))
                                          {
                                            v41 = (const void *)*((_QWORD *)this + 59);
                                            if (!v41
                                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 23, v41, 2uLL, 0),
                                                  !(_DWORD)result))
                                            {
                                              v42 = (const void *)*((_QWORD *)this + 60);
                                              if (!v42
                                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 24, v42, 2uLL, 0),
                                                    !(_DWORD)result))
                                              {
                                                v43 = (const void *)*((_QWORD *)this + 61);
                                                if (!v43
                                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 25, v43, 1uLL, 0),
                                                      !(_DWORD)result))
                                                {
                                                  v44 = (const void *)*((_QWORD *)this + 62);
                                                  if (!v44
                                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 26, v44, 2uLL, 0), !(_DWORD)result))
                                                  {
                                                    v45 = (_BYTE *)*((_QWORD *)this + 63);
                                                    if (!v45
                                                      || (v46 = (_BYTE *)*((_QWORD *)this + 64), v45 == v46)
                                                      || (result = AriMsg::pack(*((AriMsg **)this + 6), 27, v45, v46 - v45, 0), !(_DWORD)result))
                                                    {
                                                      result = 0;
                                                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylGetDataRspCb_SDK::unpack(AriSdk::ARI_IBIVinylGetDataRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _WORD *v7;
  _QWORD *v8;
  _BYTE *v9;
  _OWORD *v10;
  _QWORD *v11;
  _QWORD *v12;
  _QWORD *v13;
  _OWORD *v14;
  _QWORD *v15;
  _BYTE *v16;
  _QWORD *v17;
  _OWORD *v18;
  _QWORD *v19;
  _BYTE *v20;
  _WORD *v21;
  _QWORD *v22;
  _BYTE *v23;
  _OWORD *v24;
  _WORD *v25;
  _WORD *v26;
  _BYTE *v27;
  _WORD *v28;
  void *v29;
  __n128 __p;
  uint64_t v32;
  size_t __sz;
  BOOL v34;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_QWORD *)operator new[]();
  *v8 = 0;
  v8[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 16, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 32, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,32ul>::operator=((std::vector<int> *)((char *)this + 128), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v11 = (_QWORD *)operator new[]();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 8, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v11, (uint64_t)v11 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,8ul>::operator=((std::vector<int> *)((char *)this + 152), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v12 = (_QWORD *)operator new[]();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 8, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v12, (uint64_t)v12 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,8ul>::operator=((std::vector<int> *)((char *)this + 176), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v12, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v13 = (_QWORD *)operator new[]();
  *v13 = 0;
  v13[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 16, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v13, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v13, (uint64_t)v13 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 200), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v13, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v14 = (_OWORD *)operator new[]();
  *v14 = 0u;
  v14[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v14, 32, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v14, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v14, (uint64_t)v14 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,32ul>::operator=((std::vector<int> *)((char *)this + 224), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v14, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v15 = (_QWORD *)operator new[]();
  *v15 = 0;
  v15[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v15, 16, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v15, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v15, (uint64_t)v15 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 248), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v15, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v16 = (_BYTE *)operator new[]();
  *(_WORD *)v16 = 0;
  v16[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v16, 3, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v16, (uint64_t)&v16[__sz], __sz);
    AriSdk::TlvArray<unsigned char,3ul>::operator=((std::vector<int> *)((char *)this + 272), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v17 = (_QWORD *)operator new[]();
  *v17 = 0;
  v17[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v17, 16, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v17, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v17, (uint64_t)v17 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 296), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v17, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v18 = (_OWORD *)operator new[]();
  *v18 = 0u;
  v18[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v18, 32, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v18, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v18, (uint64_t)v18 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,32ul>::operator=((std::vector<int> *)((char *)this + 320), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v18, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v19 = (_QWORD *)operator new[]();
  *v19 = 0;
  v19[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v19, 16, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v19, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v19, (uint64_t)v19 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 344), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v19, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v20 = (_BYTE *)operator new[]();
  *(_WORD *)v20 = 0;
  v20[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v20, 3, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v20, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v20, (uint64_t)&v20[__sz], __sz);
    AriSdk::TlvArray<unsigned char,3ul>::operator=((std::vector<int> *)((char *)this + 368), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v20, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v21 = (_WORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v21, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v21, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 49, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C40BDFB0063);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v22 = (_QWORD *)operator new[]();
  *v22 = 0;
  v22[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v22, 16, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v22, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v22, (uint64_t)v22 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 400), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v22, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v23 = (_BYTE *)operator new[]();
  *(_WORD *)v23 = 0;
  v23[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v23, 3, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v23, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v23, (uint64_t)&v23[__sz], __sz);
    AriSdk::TlvArray<unsigned char,3ul>::operator=((std::vector<int> *)((char *)this + 424), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v23, 0x1000C8077774924);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v24 = (_OWORD *)operator new[]();
  *v24 = 0u;
  v24[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v24, 32, &v34, &__sz);
  if ((_DWORD)v3 || !v34)
  {
    MEMORY[0x212BB9B48](v24, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v24, (uint64_t)v24 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,32ul>::operator=((std::vector<int> *)((char *)this + 448), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v24, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v25 = (_WORD *)operator new();
  *v25 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 23, v25, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v25, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 59, v25);
    MEMORY[0x212BB9B60](v25, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v26 = (_WORD *)operator new();
  *v26 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 24, v26, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v26, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 60, v26);
    MEMORY[0x212BB9B60](v26, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v27 = (_BYTE *)operator new();
  *v27 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 25, v27, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v27, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 61, v27);
    MEMORY[0x212BB9B60](v27, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v28 = (_WORD *)operator new();
  *v28 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 26, v28, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v28, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 62, v28);
    MEMORY[0x212BB9B60](v28, 0x1000C40BDFB0063);
  }
  v34 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v29 = (void *)operator new[]();
  bzero(v29, 0x3E8uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 27, v29, 1000, &v34, &__sz);
  if (!(_DWORD)v3 && v34)
  {
    v32 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v29, (uint64_t)v29 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,1000ul>::operator=((std::vector<int> *)this + 21, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v29, 0x1000C8077774924);
  return v3;
}

void sub_20E225FA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,8ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 9)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 8);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2261E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,1000ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x3E9)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 1000);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2262BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIVinylGetDataRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylGetDataRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922681344;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylGetEidReq_SDK::ARI_IBIVinylGetEidReq_SDK(AriSdk::ARI_IBIVinylGetEidReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8808000, 0);
  *(_QWORD *)result = &off_24C8FBE78;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8808000, 0);
  *(_QWORD *)result = &off_24C8FBE78;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylGetEidReq_SDK::ARI_IBIVinylGetEidReq_SDK(AriSdk::ARI_IBIVinylGetEidReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBE78;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBE78;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylGetEidReq_SDK::~ARI_IBIVinylGetEidReq_SDK(AriSdk::ARI_IBIVinylGetEidReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FBE78;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylGetEidReq_SDK::~ARI_IBIVinylGetEidReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylGetEidReq_SDK::pack(AriSdk::ARI_IBIVinylGetEidReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylGetEidReq_SDK::unpack(AriSdk::ARI_IBIVinylGetEidReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E22652C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylGetEidReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylGetEidReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -931102720;
}

double AriSdk::ARI_IBIVinylGetEidRspCb_SDK::ARI_IBIVinylGetEidRspCb_SDK(AriSdk::ARI_IBIVinylGetEidRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9008000, 0);
  *(_QWORD *)v1 = &off_24C8FBEB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9008000, 0);
  *(_QWORD *)v1 = &off_24C8FBEB0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylGetEidRspCb_SDK::ARI_IBIVinylGetEidRspCb_SDK(AriSdk::ARI_IBIVinylGetEidRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBEB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBEB0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylGetEidRspCb_SDK::~ARI_IBIVinylGetEidRspCb_SDK(AriSdk::ARI_IBIVinylGetEidRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FBEB0;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylGetEidRspCb_SDK::~ARI_IBIVinylGetEidRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylGetEidRspCb_SDK::pack(AriSdk::ARI_IBIVinylGetEidRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylGetEidRspCb_SDK::unpack(AriSdk::ARI_IBIVinylGetEidRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  __n128 __p;
  uint64_t v9;
  size_t __sz;
  BOOL v11;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v11 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_QWORD *)operator new[]();
  *v6 = 0;
  v6[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 16, &v11, &__sz);
  if (!(_DWORD)v3 && v11)
  {
    v9 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E2269A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylGetEidRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylGetEidRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922714112;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK::ARI_IBIVinylHwIdSimConfigReq_SDK(AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8898000, 0);
  *(_QWORD *)result = &off_24C8FBEE8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8898000, 0);
  *(_QWORD *)result = &off_24C8FBEE8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK::ARI_IBIVinylHwIdSimConfigReq_SDK(AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBEE8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FBEE8;
  return result;
}

void AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK::~ARI_IBIVinylHwIdSimConfigReq_SDK(AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK::pack(AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK::unpack(AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylHwIdSimConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930512896;
}

double AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK::ARI_IBIVinylHwIdSimConfigRspCb_SDK(AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9098000, 0);
  *(_QWORD *)v1 = &off_24C8FBF20;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9098000, 0);
  *(_QWORD *)v1 = &off_24C8FBF20;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK::ARI_IBIVinylHwIdSimConfigRspCb_SDK(AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBF20;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBF20;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK::~ARI_IBIVinylHwIdSimConfigRspCb_SDK(AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FBF20;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK::~ARI_IBIVinylHwIdSimConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK::pack(AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 1uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK::unpack(AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK *this)
{
  _BYTE *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  unint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  size_t v10;
  void **v11;
  const char *v12;
  void **v13;
  void *v14;
  unint64_t v16;
  BOOL v17;
  void *__p[2];
  char v19;

  LOBYTE(__p[0]) = 0;
  v2 = (_BYTE *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  }
  v17 = 0;
  v16 = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_QWORD *)operator new[]();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 16, &v17, &v16);
  if (!(_DWORD)v3 && v17)
  {
    v6 = v16;
    if (v16 >= 4)
    {
      v10 = v16 & 0xFFFFFFFFFFFFFFFCLL;
      v7 = (char *)operator new(v16 & 0xFFFFFFFFFFFFFFFCLL);
      v9 = &v7[4 * (v6 >> 2)];
      memcpy(v7, v5, v10);
      v8 = &v7[v10];
    }
    else
    {
      v7 = 0;
      v8 = 0;
      v9 = 0;
    }
    v11 = (void **)((char *)this + 72);
    if ((unint64_t)(v8 - v7) < 0x11)
    {
      v14 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 10) = v14;
        operator delete(v14);
        *v11 = 0;
        *((_QWORD *)this + 10) = 0;
        *((_QWORD *)this + 11) = 0;
      }
      *((_QWORD *)this + 9) = v7;
      *((_QWORD *)this + 10) = v8;
      *((_QWORD *)this + 11) = v9;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v19 >= 0)
        v13 = __p;
      else
        v13 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v12, v13, 360, v11, (v8 - v7) >> 2, 4);
      if (v19 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8052888210);
  return v3;
}

void sub_20E226FE4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C8052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylHwIdSimConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922124288;
}

double AriSdk::ARI_IBIVinylInitPsoReq_SDK::ARI_IBIVinylInitPsoReq_SDK(AriSdk::ARI_IBIVinylInitPsoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8828000, 0);
  *(_QWORD *)v1 = &off_24C8FBF58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8828000, 0);
  *(_QWORD *)v1 = &off_24C8FBF58;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylInitPsoReq_SDK::ARI_IBIVinylInitPsoReq_SDK(AriSdk::ARI_IBIVinylInitPsoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBF58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBF58;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylInitPsoReq_SDK::~ARI_IBIVinylInitPsoReq_SDK(AriSdk::ARI_IBIVinylInitPsoReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FBF58;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylInitPsoReq_SDK::~ARI_IBIVinylInitPsoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylInitPsoReq_SDK::pack(AriSdk::ARI_IBIVinylInitPsoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylInitPsoReq_SDK::unpack(AriSdk::ARI_IBIVinylInitPsoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E227668(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylInitPsoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylInitPsoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930971648;
}

double AriSdk::ARI_IBIVinylInitPsoRspCb_SDK::ARI_IBIVinylInitPsoRspCb_SDK(AriSdk::ARI_IBIVinylInitPsoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9028000, 0);
  *(_QWORD *)v1 = &off_24C8FBF90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9028000, 0);
  *(_QWORD *)v1 = &off_24C8FBF90;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylInitPsoRspCb_SDK::ARI_IBIVinylInitPsoRspCb_SDK(AriSdk::ARI_IBIVinylInitPsoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBF90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBF90;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylInitPsoRspCb_SDK::~ARI_IBIVinylInitPsoRspCb_SDK(AriSdk::ARI_IBIVinylInitPsoRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FBF90;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylInitPsoRspCb_SDK::~ARI_IBIVinylInitPsoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylInitPsoRspCb_SDK::pack(AriSdk::ARI_IBIVinylInitPsoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylInitPsoRspCb_SDK::unpack(AriSdk::ARI_IBIVinylInitPsoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E227D10(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylInitPsoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylInitPsoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922583040;
}

double AriSdk::ARI_IBIVinylInstallFwReq_SDK::ARI_IBIVinylInstallFwReq_SDK(AriSdk::ARI_IBIVinylInstallFwReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8870000, 0);
  *(_QWORD *)v1 = &off_24C8FBFC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8870000, 0);
  *(_QWORD *)v1 = &off_24C8FBFC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIVinylInstallFwReq_SDK::ARI_IBIVinylInstallFwReq_SDK(AriSdk::ARI_IBIVinylInstallFwReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBFC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FBFC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIVinylInstallFwReq_SDK::~ARI_IBIVinylInstallFwReq_SDK(AriSdk::ARI_IBIVinylInstallFwReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C8FBFC8;
  v2 = (void *)*((_QWORD *)this + 13);
  if (v2)
  {
    *((_QWORD *)this + 14) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylInstallFwReq_SDK::~ARI_IBIVinylInstallFwReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylInstallFwReq_SDK::pack(AriSdk::ARI_IBIVinylInstallFwReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  _BYTE *v10;
  _BYTE *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (_BYTE *)*((_QWORD *)this + 13);
            if (!v10
              || (v11 = (_BYTE *)*((_QWORD *)this + 14), v10 == v11)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, v11 - v10, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylInstallFwReq_SDK::unpack(AriSdk::ARI_IBIVinylInstallFwReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _BYTE *v7;
  _WORD *v8;
  void *v9;
  void **v10;
  _BYTE *v11;
  void *v12;
  const char *v13;
  BOOL *v14;
  void *v15;
  void *__p;
  _BYTE *v18;
  uint64_t v19;
  size_t __sz;
  BOOL v21;
  BOOL v22[8];
  char v23;

  v22[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v22[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, v22, 0);
  if ((_DWORD)v3 || !v22[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v22[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, v22, 0);
  if ((_DWORD)v3 || !v22[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v22[0] = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, v22, 0);
  if ((_DWORD)v3 || !v22[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v22[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, v22, 0);
  if ((_DWORD)v3 || !v22[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v21 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v9 = (void *)operator new[]();
  bzero(v9, 0xF5AuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 3930, &v21, &__sz);
  if (!(_DWORD)v3 && v21)
  {
    v18 = 0;
    v19 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v9, (uint64_t)v9 + __sz, __sz);
    v10 = (void **)((char *)this + 104);
    v12 = __p;
    v11 = v18;
    if ((unint64_t)(v18 - (_BYTE *)__p) < 0xF5B)
    {
      v15 = *v10;
      if (*v10)
      {
        *((_QWORD *)this + 14) = v15;
        operator delete(v15);
        *v10 = 0;
        *((_QWORD *)this + 14) = 0;
        *((_QWORD *)this + 15) = 0;
        v12 = __p;
        v11 = v18;
      }
      *((_QWORD *)this + 13) = v12;
      *((_QWORD *)this + 14) = v11;
      *((_QWORD *)this + 15) = v19;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v22);
      if (v23 >= 0)
        v14 = v22;
      else
        v14 = *(BOOL **)v22;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, (char *)this + 104, v18 - (_BYTE *)__p, 3930);
      if (v23 < 0)
        operator delete(*(void **)v22);
      if (__p)
      {
        v18 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v9, 0x1000C8077774924);
  return v3;
}

void sub_20E228500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylInstallFwReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylInstallFwReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930676736;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylInstallFwRspCb_SDK::ARI_IBIVinylInstallFwRspCb_SDK(AriSdk::ARI_IBIVinylInstallFwRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9070000, 0);
  *(_QWORD *)result = &off_24C8FC000;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9070000, 0);
  *(_QWORD *)result = &off_24C8FC000;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylInstallFwRspCb_SDK::ARI_IBIVinylInstallFwRspCb_SDK(AriSdk::ARI_IBIVinylInstallFwRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC000;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC000;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylInstallFwRspCb_SDK::~ARI_IBIVinylInstallFwRspCb_SDK(AriSdk::ARI_IBIVinylInstallFwRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FC000;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylInstallFwRspCb_SDK::~ARI_IBIVinylInstallFwRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylInstallFwRspCb_SDK::pack(AriSdk::ARI_IBIVinylInstallFwRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylInstallFwRspCb_SDK::unpack(AriSdk::ARI_IBIVinylInstallFwRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2289C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylInstallFwRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylInstallFwRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922288128;
}

double AriSdk::ARI_IBIVinylInstallVadReq_SDK::ARI_IBIVinylInstallVadReq_SDK(AriSdk::ARI_IBIVinylInstallVadReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8868000, 0);
  *(_QWORD *)v1 = &off_24C8FC038;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8868000, 0);
  *(_QWORD *)v1 = &off_24C8FC038;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylInstallVadReq_SDK::ARI_IBIVinylInstallVadReq_SDK(AriSdk::ARI_IBIVinylInstallVadReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC038;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC038;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylInstallVadReq_SDK::~ARI_IBIVinylInstallVadReq_SDK(AriSdk::ARI_IBIVinylInstallVadReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FC038;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylInstallVadReq_SDK::~ARI_IBIVinylInstallVadReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylInstallVadReq_SDK::pack(AriSdk::ARI_IBIVinylInstallVadReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylInstallVadReq_SDK::unpack(AriSdk::ARI_IBIVinylInstallVadReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E229010(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylInstallVadReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylInstallVadReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930709504;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylInstallVadRspCb_SDK::ARI_IBIVinylInstallVadRspCb_SDK(AriSdk::ARI_IBIVinylInstallVadRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9068000, 0);
  *(_QWORD *)result = &off_24C8FC070;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9068000, 0);
  *(_QWORD *)result = &off_24C8FC070;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylInstallVadRspCb_SDK::ARI_IBIVinylInstallVadRspCb_SDK(AriSdk::ARI_IBIVinylInstallVadRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC070;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC070;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylInstallVadRspCb_SDK::~ARI_IBIVinylInstallVadRspCb_SDK(AriSdk::ARI_IBIVinylInstallVadRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FC070;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylInstallVadRspCb_SDK::~ARI_IBIVinylInstallVadRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylInstallVadRspCb_SDK::pack(AriSdk::ARI_IBIVinylInstallVadRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylInstallVadRspCb_SDK::unpack(AriSdk::ARI_IBIVinylInstallVadRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2294AC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylInstallVadRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylInstallVadRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922320896;
}

double AriSdk::ARI_IBIVinylLPASigningReq_SDK::ARI_IBIVinylLPASigningReq_SDK(AriSdk::ARI_IBIVinylLPASigningReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8880000, 0);
  *(_QWORD *)v1 = &off_24C8FC0A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8880000, 0);
  *(_QWORD *)v1 = &off_24C8FC0A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylLPASigningReq_SDK::ARI_IBIVinylLPASigningReq_SDK(AriSdk::ARI_IBIVinylLPASigningReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC0A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC0A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylLPASigningReq_SDK::~ARI_IBIVinylLPASigningReq_SDK(AriSdk::ARI_IBIVinylLPASigningReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FC0A8;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylLPASigningReq_SDK::~ARI_IBIVinylLPASigningReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylLPASigningReq_SDK::pack(AriSdk::ARI_IBIVinylLPASigningReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylLPASigningReq_SDK::unpack(AriSdk::ARI_IBIVinylLPASigningReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E229AF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylLPASigningReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylLPASigningReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930611200;
}

double AriSdk::ARI_IBIVinylLPASigningRspCb_SDK::ARI_IBIVinylLPASigningRspCb_SDK(AriSdk::ARI_IBIVinylLPASigningRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9080000, 0);
  *(_QWORD *)v1 = &off_24C8FC0E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9080000, 0);
  *(_QWORD *)v1 = &off_24C8FC0E0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylLPASigningRspCb_SDK::ARI_IBIVinylLPASigningRspCb_SDK(AriSdk::ARI_IBIVinylLPASigningRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC0E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC0E0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylLPASigningRspCb_SDK::~ARI_IBIVinylLPASigningRspCb_SDK(AriSdk::ARI_IBIVinylLPASigningRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FC0E0;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylLPASigningRspCb_SDK::~ARI_IBIVinylLPASigningRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylLPASigningRspCb_SDK::pack(AriSdk::ARI_IBIVinylLPASigningRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylLPASigningRspCb_SDK::unpack(AriSdk::ARI_IBIVinylLPASigningRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E22A184(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylLPASigningRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylLPASigningRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922222592;
}

double AriSdk::ARI_IBIVinylSecureAkaReq_SDK::ARI_IBIVinylSecureAkaReq_SDK(AriSdk::ARI_IBIVinylSecureAkaReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8890000, 0);
  *(_QWORD *)v1 = &off_24C8FC118;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8890000, 0);
  *(_QWORD *)v1 = &off_24C8FC118;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylSecureAkaReq_SDK::ARI_IBIVinylSecureAkaReq_SDK(AriSdk::ARI_IBIVinylSecureAkaReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC118;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC118;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylSecureAkaReq_SDK::~ARI_IBIVinylSecureAkaReq_SDK(AriSdk::ARI_IBIVinylSecureAkaReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FC118;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylSecureAkaReq_SDK::~ARI_IBIVinylSecureAkaReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylSecureAkaReq_SDK::pack(AriSdk::ARI_IBIVinylSecureAkaReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylSecureAkaReq_SDK::unpack(AriSdk::ARI_IBIVinylSecureAkaReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E22A810(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylSecureAkaReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylSecureAkaReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930545664;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK::ARI_IBIVinylSecureAkaRspCb_SDK(AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9090000, 0);
  *(_QWORD *)result = &off_24C8FC150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9090000, 0);
  *(_QWORD *)result = &off_24C8FC150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK::ARI_IBIVinylSecureAkaRspCb_SDK(AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC150;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK::~ARI_IBIVinylSecureAkaRspCb_SDK(AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FC150;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK::~ARI_IBIVinylSecureAkaRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK::pack(AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK::unpack(AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E22ABBC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylSecureAkaRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922157056;
}

double AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK::ARI_IBIVinylSecureAkaInbCb_SDK(AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9820000, 0);
  *(_QWORD *)v1 = &off_24C8FC188;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9820000, 0);
  *(_QWORD *)v1 = &off_24C8FC188;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK::ARI_IBIVinylSecureAkaInbCb_SDK(AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC188;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC188;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK::~ARI_IBIVinylSecureAkaInbCb_SDK(AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8FC188;
  v2 = (void *)*((_QWORD *)this + 14);
  if (v2)
  {
    *((_QWORD *)this + 15) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK::~ARI_IBIVinylSecureAkaInbCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK::pack(AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (_BYTE *)*((_QWORD *)this + 14);
              if (!v11
                || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, v12 - v11, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK::unpack(AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _WORD *v7;
  _WORD *v8;
  _WORD *v9;
  void *v10;
  __n128 __p;
  uint64_t v13;
  size_t __sz;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (void *)operator new[]();
  bzero(v10, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 3584, &v15, &__sz);
  if (!(_DWORD)v3 && v15)
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  return v3;
}

void sub_20E22B394(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylSecureAkaInbCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -914227200;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylStatusReq_SDK::ARI_IBIVinylStatusReq_SDK(AriSdk::ARI_IBIVinylStatusReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8878000, 0);
  *(_QWORD *)result = &off_24C8FC1C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8878000, 0);
  *(_QWORD *)result = &off_24C8FC1C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylStatusReq_SDK::ARI_IBIVinylStatusReq_SDK(AriSdk::ARI_IBIVinylStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC1C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC1C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylStatusReq_SDK::~ARI_IBIVinylStatusReq_SDK(AriSdk::ARI_IBIVinylStatusReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FC1C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylStatusReq_SDK::~ARI_IBIVinylStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylStatusReq_SDK::pack(AriSdk::ARI_IBIVinylStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylStatusReq_SDK::unpack(AriSdk::ARI_IBIVinylStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E22B684(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930643968;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylStatusRspCb_SDK::ARI_IBIVinylStatusRspCb_SDK(AriSdk::ARI_IBIVinylStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9078000, 0);
  *(_QWORD *)result = &off_24C8FC1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9078000, 0);
  *(_QWORD *)result = &off_24C8FC1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylStatusRspCb_SDK::ARI_IBIVinylStatusRspCb_SDK(AriSdk::ARI_IBIVinylStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylStatusRspCb_SDK::~ARI_IBIVinylStatusRspCb_SDK(AriSdk::ARI_IBIVinylStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FC1F8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylStatusRspCb_SDK::~ARI_IBIVinylStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylStatusRspCb_SDK::pack(AriSdk::ARI_IBIVinylStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylStatusRspCb_SDK::unpack(AriSdk::ARI_IBIVinylStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E22B9D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922255360;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylStatusIndCb_SDK::ARI_IBIVinylStatusIndCb_SDK(AriSdk::ARI_IBIVinylStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9808000, 0);
  *(_QWORD *)result = &off_24C8FC230;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9808000, 0);
  *(_QWORD *)result = &off_24C8FC230;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylStatusIndCb_SDK::ARI_IBIVinylStatusIndCb_SDK(AriSdk::ARI_IBIVinylStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC230;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC230;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylStatusIndCb_SDK::~ARI_IBIVinylStatusIndCb_SDK(AriSdk::ARI_IBIVinylStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FC230;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylStatusIndCb_SDK::~ARI_IBIVinylStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylStatusIndCb_SDK::pack(AriSdk::ARI_IBIVinylStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylStatusIndCb_SDK::unpack(AriSdk::ARI_IBIVinylStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E22BD34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -914325504;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylSwitchModeReq_SDK::ARI_IBIVinylSwitchModeReq_SDK(AriSdk::ARI_IBIVinylSwitchModeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8860000, 0);
  *(_QWORD *)result = &off_24C8FC268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8860000, 0);
  *(_QWORD *)result = &off_24C8FC268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylSwitchModeReq_SDK::ARI_IBIVinylSwitchModeReq_SDK(AriSdk::ARI_IBIVinylSwitchModeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylSwitchModeReq_SDK::~ARI_IBIVinylSwitchModeReq_SDK(AriSdk::ARI_IBIVinylSwitchModeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C8FC268;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylSwitchModeReq_SDK::~ARI_IBIVinylSwitchModeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylSwitchModeReq_SDK::pack(AriSdk::ARI_IBIVinylSwitchModeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylSwitchModeReq_SDK::unpack(AriSdk::ARI_IBIVinylSwitchModeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E22C088(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylSwitchModeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylSwitchModeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930742272;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK::ARI_IBIVinylSwitchModeRspCb_SDK(AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9060000, 0);
  *(_QWORD *)result = &off_24C8FC2A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC9060000, 0);
  *(_QWORD *)result = &off_24C8FC2A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK::ARI_IBIVinylSwitchModeRspCb_SDK(AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC2A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC2A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK::~ARI_IBIVinylSwitchModeRspCb_SDK(AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C8FC2A0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK::~ARI_IBIVinylSwitchModeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK::pack(AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK::unpack(AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E22C4CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylSwitchModeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922353664;
}

double AriSdk::ARI_IBIVinylTapeReq_SDK::ARI_IBIVinylTapeReq_SDK(AriSdk::ARI_IBIVinylTapeReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8820000, 0);
  *(_QWORD *)v1 = &off_24C8FC2D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8820000, 0);
  *(_QWORD *)v1 = &off_24C8FC2D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylTapeReq_SDK::ARI_IBIVinylTapeReq_SDK(AriSdk::ARI_IBIVinylTapeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC2D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC2D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylTapeReq_SDK::~ARI_IBIVinylTapeReq_SDK(AriSdk::ARI_IBIVinylTapeReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8FC2D8;
  v2 = (void *)*((_QWORD *)this + 14);
  if (v2)
  {
    *((_QWORD *)this + 15) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylTapeReq_SDK::~ARI_IBIVinylTapeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylTapeReq_SDK::pack(AriSdk::ARI_IBIVinylTapeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (_BYTE *)*((_QWORD *)this + 14);
              if (!v11
                || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, v12 - v11, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylTapeReq_SDK::unpack(AriSdk::ARI_IBIVinylTapeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _WORD *v8;
  _WORD *v9;
  void *v10;
  __n128 __p;
  uint64_t v13;
  size_t __sz;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (void *)operator new[]();
  bzero(v10, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 3584, &v15, &__sz);
  if (!(_DWORD)v3 && v15)
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  return v3;
}

void sub_20E22CCBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylTapeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylTapeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -931004416;
}

double AriSdk::ARI_IBIVinylTapeRspCb_SDK::ARI_IBIVinylTapeRspCb_SDK(AriSdk::ARI_IBIVinylTapeRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9020000, 0);
  *(_QWORD *)v1 = &off_24C8FC310;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9020000, 0);
  *(_QWORD *)v1 = &off_24C8FC310;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIVinylTapeRspCb_SDK::ARI_IBIVinylTapeRspCb_SDK(AriSdk::ARI_IBIVinylTapeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC310;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC310;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIVinylTapeRspCb_SDK::~ARI_IBIVinylTapeRspCb_SDK(AriSdk::ARI_IBIVinylTapeRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8FC310;
  v2 = (void *)*((_QWORD *)this + 15);
  if (v2)
  {
    *((_QWORD *)this + 16) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylTapeRspCb_SDK::~ARI_IBIVinylTapeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylTapeRspCb_SDK::pack(AriSdk::ARI_IBIVinylTapeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 2uLL, 0), !(_DWORD)result))
              {
                v12 = (_BYTE *)*((_QWORD *)this + 15);
                if (!v12
                  || (v13 = (_BYTE *)*((_QWORD *)this + 16), v12 == v13)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, v13 - v12, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylTapeRspCb_SDK::unpack(AriSdk::ARI_IBIVinylTapeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _WORD *v8;
  _WORD *v9;
  _WORD *v10;
  void *v11;
  __n128 __p;
  uint64_t v14;
  size_t __sz;
  BOOL v16;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v11 = (void *)operator new[]();
  bzero(v11, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 3584, &v16, &__sz);
  if (!(_DWORD)v3 && v16)
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v11, (uint64_t)v11 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 5, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  return v3;
}

void sub_20E22D5D4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylTapeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylTapeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922615808;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylTapeCapsReq_SDK::ARI_IBIVinylTapeCapsReq_SDK(AriSdk::ARI_IBIVinylTapeCapsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8858000, 0);
  *(_QWORD *)result = &off_24C8FC348;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xC8858000, 0);
  *(_QWORD *)result = &off_24C8FC348;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIVinylTapeCapsReq_SDK::ARI_IBIVinylTapeCapsReq_SDK(AriSdk::ARI_IBIVinylTapeCapsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC348;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C8FC348;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylTapeCapsReq_SDK::~ARI_IBIVinylTapeCapsReq_SDK(AriSdk::ARI_IBIVinylTapeCapsReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C8FC348;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylTapeCapsReq_SDK::~ARI_IBIVinylTapeCapsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylTapeCapsReq_SDK::pack(AriSdk::ARI_IBIVinylTapeCapsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylTapeCapsReq_SDK::unpack(AriSdk::ARI_IBIVinylTapeCapsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E22D8CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylTapeCapsReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylTapeCapsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930775040;
}

double AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK::ARI_IBIVinylTapeCapsRspCb_SDK(AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9058000, 0);
  *(_QWORD *)v1 = &off_24C8FC380;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9058000, 0);
  *(_QWORD *)v1 = &off_24C8FC380;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK::ARI_IBIVinylTapeCapsRspCb_SDK(AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC380;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC380;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK::~ARI_IBIVinylTapeCapsRspCb_SDK(AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C8FC380;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK::~ARI_IBIVinylTapeCapsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK::pack(AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 1uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 1uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 1uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK::unpack(AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _BYTE *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v19 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v18 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 1, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v17 = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v16 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 1, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v15 = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  }
  v14 = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 1, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  return v3;
}

void sub_20E22E21C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylTapeCapsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922386432;
}

double AriSdk::ARI_IBIVinylTapeIndCb_SDK::ARI_IBIVinylTapeIndCb_SDK(AriSdk::ARI_IBIVinylTapeIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9810000, 0);
  *(_QWORD *)v1 = &off_24C8FC3B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9810000, 0);
  *(_QWORD *)v1 = &off_24C8FC3B8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIVinylTapeIndCb_SDK::ARI_IBIVinylTapeIndCb_SDK(AriSdk::ARI_IBIVinylTapeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC3B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC3B8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIVinylTapeIndCb_SDK::~ARI_IBIVinylTapeIndCb_SDK(AriSdk::ARI_IBIVinylTapeIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C8FC3B8;
  v2 = (void *)*((_QWORD *)this + 15);
  if (v2)
  {
    *((_QWORD *)this + 16) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylTapeIndCb_SDK::~ARI_IBIVinylTapeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylTapeIndCb_SDK::pack(AriSdk::ARI_IBIVinylTapeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  _BYTE *v12;
  _BYTE *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 2uLL, 0), !(_DWORD)result))
              {
                v12 = (_BYTE *)*((_QWORD *)this + 15);
                if (!v12
                  || (v13 = (_BYTE *)*((_QWORD *)this + 16), v12 == v13)
                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, v13 - v12, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylTapeIndCb_SDK::unpack(AriSdk::ARI_IBIVinylTapeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _WORD *v8;
  _WORD *v9;
  _WORD *v10;
  void *v11;
  __n128 __p;
  uint64_t v14;
  size_t __sz;
  BOOL v16;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v11 = (void *)operator new[]();
  bzero(v11, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 3584, &v16, &__sz);
  if (!(_DWORD)v3 && v16)
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v11, (uint64_t)v11 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 5, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  return v3;
}

void sub_20E22EB14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylTapeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylTapeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -914292736;
}

double AriSdk::ARI_IBIVinylValidatePsoReq_SDK::ARI_IBIVinylValidatePsoReq_SDK(AriSdk::ARI_IBIVinylValidatePsoReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8840000, 0);
  *(_QWORD *)v1 = &off_24C8FC3F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC8840000, 0);
  *(_QWORD *)v1 = &off_24C8FC3F0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylValidatePsoReq_SDK::ARI_IBIVinylValidatePsoReq_SDK(AriSdk::ARI_IBIVinylValidatePsoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC3F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC3F0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylValidatePsoReq_SDK::~ARI_IBIVinylValidatePsoReq_SDK(AriSdk::ARI_IBIVinylValidatePsoReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FC3F0;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylValidatePsoReq_SDK::~ARI_IBIVinylValidatePsoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylValidatePsoReq_SDK::pack(AriSdk::ARI_IBIVinylValidatePsoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylValidatePsoReq_SDK::unpack(AriSdk::ARI_IBIVinylValidatePsoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E22F1B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylValidatePsoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylValidatePsoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -930873344;
}

double AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK::ARI_IBIVinylValidatePsoRspCb_SDK(AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9040000, 0);
  *(_QWORD *)v1 = &off_24C8FC428;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xC9040000, 0);
  *(_QWORD *)v1 = &off_24C8FC428;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK::ARI_IBIVinylValidatePsoRspCb_SDK(AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC428;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC428;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK::~ARI_IBIVinylValidatePsoRspCb_SDK(AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C8FC428;
  v2 = (void *)*((_QWORD *)this + 12);
  if (v2)
  {
    *((_QWORD *)this + 13) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK::~ARI_IBIVinylValidatePsoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK::pack(AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK::unpack(AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _WORD *v7;
  void *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (void *)operator new[]();
  bzero(v8, 0xE00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 3584, &v13, &__sz);
  if (!(_DWORD)v3 && v13)
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)v8 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3584ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  return v3;
}

void sub_20E22F844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIVinylValidatePsoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -922484736;
}

_QWORD *std::vector<IBISimInfoStruct>::__init_with_size[abi:ne180100]<IBISimInfoStruct*,IBISimInfoStruct*>(_QWORD *result, const void *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v7;
  _QWORD *v8;
  size_t v9;

  if (a4)
  {
    v7 = result;
    result = operator new(24 * a4);
    v8 = result;
    *v7 = result;
    v7[1] = result;
    v7[2] = &result[3 * a4];
    v9 = a3 - (_QWORD)a2;
    if (v9)
      result = memcpy(result, a2, v9);
    v7[1] = (char *)v8 + v9;
  }
  return result;
}

void sub_20E22F968(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

double AriSdk::ARI_CsiAwdsAddConfigReq_SDK::ARI_CsiAwdsAddConfigReq_SDK(AriSdk::ARI_CsiAwdsAddConfigReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCCCA8000, 0);
  *(_QWORD *)v1 = &off_24C8FC898;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xCCCA8000, 0);
  *(_QWORD *)v1 = &off_24C8FC898;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_CsiAwdsAddConfigReq_SDK::ARI_CsiAwdsAddConfigReq_SDK(AriSdk::ARI_CsiAwdsAddConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC898;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C8FC898;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_CsiAwdsAddConfigReq_SDK::~ARI_CsiAwdsAddConfigReq_SDK(AriSdk::ARI_CsiAwdsAddConfigReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C8FC898;
  v2 = (void *)*((_QWORD *)this + 14);
  if (v2)
  {
    *((_QWORD *)this + 15) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiAwdsAddConfigReq_SDK::~ARI_CsiAwdsAddConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiAwdsAddConfigReq_SDK::pack(AriSdk::ARI_CsiAwdsAddConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  _BYTE *v11;
  _BYTE *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
            {
              v11 = (_BYTE *)*((_QWORD *)this + 14);
              if (!v11
                || (v12 = (_BYTE *)*((_QWORD *)this + 15), v11 == v12)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, v12 - v11, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_CsiAwdsAddConfigReq_SDK::unpack(AriSdk::ARI_CsiAwdsAddConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  _WORD *v8;
  _BYTE *v9;
  void *v10;
  __n128 __p;
  uint64_t v13;
  size_t __sz;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (void *)operator new[]();
  bzero(v10, 0xF00uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 3840, &v15, &__sz);
  if (!(_DWORD)v3 && v15)
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,3840ul>::operator=((std::vector<int> *)((char *)this + 112), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  return v3;
}

