void sub_20E2AC864(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  AriMsg::~AriMsg((AriMsg *)&a9);
  _Unwind_Resume(a1);
}

uint64_t ARI_CsiIdcTestModeCmd_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIdcTestModeCmd_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIdcTestModeParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIdcTestModeParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIdcTestModeResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_CsiIdcTestModeResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcCellConfigExtCfg_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcCellConfigExtCfg_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcGnssStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcGnssStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcRTConfigEx_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcRTConfigEx_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcRadio1Param_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIIdcRadio1Param_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcCellConfigExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcCellConfigExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcCellConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcCellConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcEventType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcEventType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTArbiterStats_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTArbiterStats_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTLinkQConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTLinkQConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTLinkQReport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTLinkQReport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTRArbiterStatsConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTRArbiterStatsConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTScanFreqConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRTScanFreqConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRxTxCounter_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcRxTxCounter_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcWifiBandWidth_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaIdcWifiBandWidth_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaInt8_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_UtaInt8_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCamAntBlockPwrLmtPolicyConfigBundleV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCamAntBlockPwrLmtPolicyConfigBundleV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCamAntBlockPwrLmtPolicyConfigBundleV3_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCamAntBlockPwrLmtPolicyConfigBundleV3_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCamAntBlockPwrLmtPolicyConfigBundle_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCamAntBlockPwrLmtPolicyConfigBundle_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCameraStatusV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCameraStatusV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCameraStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCameraStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCellConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCellConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCellImdGnssMitigationPolicyConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCellImdGnssMitigationPolicyConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCnvAntBlockPwrLmtPolicyConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCnvAntBlockPwrLmtPolicyConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCriticalCarrierConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCriticalCarrierConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCriticalCarrierConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcCriticalCarrierConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcEventConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcEventConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcLaaConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcLaaConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcLaaConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcLaaConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcLaaMeasInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcLaaMeasInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcMiscConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcMiscConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcMiscConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcMiscConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTScanFreqConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTScanFreqConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTScanFreqConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTScanFreqConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiRxConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiRxConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiRxConfigV3_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiRxConfigV3_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiRxConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiRxConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiTxConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiTxConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiTxConfigV3_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiTxConfigV3_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiTxConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcRTSpmiTxConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTimeSharingConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTimeSharingConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTunerArbitrationConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTunerArbitrationConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTunerArbitrationConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTunerArbitrationConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTunerVoterConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTunerVoterConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxActConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxActConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxAntMappingTable_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxAntMappingTable_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxBlankingConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxBlankingConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxPowerLimitingConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcTxPowerLimitingConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUsbEnhAntBlockPwrLmtPolicyConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUsbEnhAntBlockPwrLmtPolicyConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbAntBlockPwrLmtPolicyConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbAntBlockPwrLmtPolicyConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbAntBlockPwrLmtPolicyConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbAntBlockPwrLmtPolicyConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbRtActivityMitigationPolicyConfigV2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbRtActivityMitigationPolicyConfigV2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbRtActivityMitigationPolicyConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcUwbRtActivityMitigationPolicyConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcWiFiAntBlockPwrLmtPolicyConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_t_s_UtaIdcWiFiAntBlockPwrLmtPolicyConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINet2gBandstatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINet2gBandstatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINet3gBandstatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINet3gBandstatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandConfiguration_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandConfiguration_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettings3gppExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettings3gppExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettingsExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettingsExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettings_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettings_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettings_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetBandSettings_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetCdmaBandStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetCdmaBandStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetConfigureNetworkModeError_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetConfigureNetworkModeError_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetDuplexMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetDuplexMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEnabledRatsExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEnabledRatsExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEnabledRats_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEnabledRats_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEnabledRats_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEnabledRats_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetExtLteBandstatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetExtLteBandstatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetLteBandstatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetLteBandstatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNRBandstatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNRBandstatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredRatSettingExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredRatSettingExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredRatSetting_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredRatSetting_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredRatSetting_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredRatSetting_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatModeSettingExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatModeSettingExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatModeSetting_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatModeSetting_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatModeSetting_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatModeSetting_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatReleaseVersionType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatReleaseVersionType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatReleaseVersion_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRatReleaseVersion_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUmtsTddBandStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUmtsTddBandStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetVoiceDomainPreference_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetVoiceDomainPreference_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetVoimsCallRatSwitchResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetVoimsCallRatSwitchResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRatSwitchStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRatSwitchStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRatSwitchType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRatSwitchType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

AriSdk::MsgBase *AriSdk::ARI_IBISsAbortReq_SDK::ARI_IBISsAbortReq_SDK(AriSdk::ARI_IBISsAbortReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x18820000u, 0);
  *(_QWORD *)result = &off_24C9232F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x18820000u, 0);
  *(_QWORD *)result = &off_24C9232F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISsAbortReq_SDK::ARI_IBISsAbortReq_SDK(AriSdk::ARI_IBISsAbortReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9232F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9232F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISsAbortReq_SDK::~ARI_IBISsAbortReq_SDK(AriSdk::ARI_IBISsAbortReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9232F0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsAbortReq_SDK::~ARI_IBISsAbortReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsAbortReq_SDK::pack(AriSdk::ARI_IBISsAbortReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsAbortReq_SDK::unpack(AriSdk::ARI_IBISsAbortReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2ADD80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsAbortReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsAbortReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 411172864;
}

AriSdk::MsgBase *AriSdk::ARI_IBISsAbortRspCb_SDK::ARI_IBISsAbortRspCb_SDK(AriSdk::ARI_IBISsAbortRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x19020000u, 0);
  *(_QWORD *)result = &off_24C923328;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x19020000u, 0);
  *(_QWORD *)result = &off_24C923328;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISsAbortRspCb_SDK::ARI_IBISsAbortRspCb_SDK(AriSdk::ARI_IBISsAbortRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C923328;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C923328;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISsAbortRspCb_SDK::~ARI_IBISsAbortRspCb_SDK(AriSdk::ARI_IBISsAbortRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C923328;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsAbortRspCb_SDK::~ARI_IBISsAbortRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsAbortRspCb_SDK::pack(AriSdk::ARI_IBISsAbortRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsAbortRspCb_SDK::unpack(AriSdk::ARI_IBISsAbortRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2ADFF4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsAbortRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsAbortRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 419561472;
}

double AriSdk::ARI_IBISsCallBarringReq_V1_SDK::ARI_IBISsCallBarringReq_V1_SDK(AriSdk::ARI_IBISsCallBarringReq_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18848000u, 0);
  *(_QWORD *)v1 = &off_24C923360;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18848000u, 0);
  *(_QWORD *)v1 = &off_24C923360;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBISsCallBarringReq_V1_SDK::ARI_IBISsCallBarringReq_V1_SDK(AriSdk::ARI_IBISsCallBarringReq_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923360;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923360;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBISsCallBarringReq_V1_SDK::~ARI_IBISsCallBarringReq_V1_SDK(AriSdk::ARI_IBISsCallBarringReq_V1_SDK *this)
{
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C923360;
  v2 = (void *)*((_QWORD *)this + 18);
  if (v2)
  {
    *((_QWORD *)this + 19) = v2;
    operator delete(v2);
  }
  v3 = (void *)*((_QWORD *)this + 15);
  if (v3)
  {
    *((_QWORD *)this + 16) = v3;
    operator delete(v3);
  }
  v4 = (void *)*((_QWORD *)this + 12);
  if (v4)
  {
    *((_QWORD *)this + 13) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsCallBarringReq_V1_SDK::~ARI_IBISsCallBarringReq_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsCallBarringReq_V1_SDK::pack(AriSdk::ARI_IBISsCallBarringReq_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  _BYTE *v12;
  _BYTE *v13;
  _BYTE *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (_BYTE *)*((_QWORD *)this + 15);
            if (!v11
              || (v12 = (_BYTE *)*((_QWORD *)this + 16), v11 == v12)
              || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, v12 - v11, 0), !(_DWORD)result))
            {
              v13 = (_BYTE *)*((_QWORD *)this + 18);
              if (!v13
                || (v14 = (_BYTE *)*((_QWORD *)this + 19), v13 == v14)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, v14 - v13, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsCallBarringReq_V1_SDK::unpack(AriSdk::ARI_IBISsCallBarringReq_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _BYTE *v9;
  _BYTE *v10;
  __n128 __p;
  uint64_t v13;
  size_t __sz;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v8 = (_BYTE *)operator new[]();
  *(_DWORD *)v8 = 0;
  v8[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 5, &v15, &__sz);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v8, (uint64_t)&v8[__sz], __sz);
    AriSdk::TlvArray<unsigned char,5ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v8, 0x1000C8077774924);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v9 = (_BYTE *)operator new[]();
  *(_DWORD *)v9 = 0;
  v9[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 5, &v15, &__sz);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v9, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v9, (uint64_t)&v9[__sz], __sz);
    AriSdk::TlvArray<unsigned char,5ul>::operator=((std::vector<int> *)this + 5, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v9, 0x1000C8077774924);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_BYTE *)operator new[]();
  *(_DWORD *)v10 = 0;
  v10[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v10, 5, &v15, &__sz);
  if (!(_DWORD)v3 && v15)
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v10, (uint64_t)&v10[__sz], __sz);
    AriSdk::TlvArray<unsigned char,5ul>::operator=((std::vector<int> *)this + 6, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  return v3;
}

void sub_20E2AE844(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,5ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 6)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 5);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2AE994(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBISsCallBarringReq_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsCallBarringReq_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 411336704;
}

double AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK::ARI_IBISsCallBarringRspCb_V1_SDK(AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19048000u, 0);
  *(_QWORD *)v1 = &off_24C923398;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19048000u, 0);
  *(_QWORD *)v1 = &off_24C923398;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK::ARI_IBISsCallBarringRspCb_V1_SDK(AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923398;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923398;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK::~ARI_IBISsCallBarringRspCb_V1_SDK(AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C923398;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 11);
  if (v4)
  {
    *((_QWORD *)this + 12) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK::~ARI_IBISsCallBarringRspCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK::pack(AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 0x14uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK::unpack(AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _OWORD *v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  size_t v12;
  void **v13;
  const char *v14;
  void **v15;
  void *v16;
  _BYTE *v17;
  _QWORD *v18;
  unint64_t v20;
  BOOL v21;
  void *__p[2];
  char v23;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v21 = 0;
  v20 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 96, &v21, &v20);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8090D0E795);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = v20;
    if (v20 >= 8)
    {
      v12 = v20 & 0xFFFFFFFFFFFFFFF8;
      v9 = (char *)operator new(v20 & 0xFFFFFFFFFFFFFFF8);
      v11 = &v9[8 * (v8 >> 3)];
      memcpy(v9, v7, v12);
      v10 = &v9[v12];
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0;
    }
    v13 = (void **)((char *)this + 88);
    if ((unint64_t)(v10 - v9) < 0x61)
    {
      v16 = *v13;
      if (*v13)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v13 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v9;
      *((_QWORD *)this + 12) = v10;
      *((_QWORD *)this + 13) = v11;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v23 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 88, (v10 - v9) >> 3, 12);
      if (v23 < 0)
        operator delete(__p[0]);
      if (v9)
        operator delete(v9);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8090D0E795);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_BYTE *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v17, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = 0;
  v18[1] = 0;
  *((_DWORD *)v18 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v18, 20, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 15, (uint64_t)v18);
  MEMORY[0x212BB9B60](v18, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E2AF14C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsCallBarringRspCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 419725312;
}

double AriSdk::ARI_IBISsCallForwardReq_SDK::ARI_IBISsCallForwardReq_SDK(AriSdk::ARI_IBISsCallForwardReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18808000u, 0);
  *(_QWORD *)v1 = &off_24C9233D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18808000u, 0);
  *(_QWORD *)v1 = &off_24C9233D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBISsCallForwardReq_SDK::ARI_IBISsCallForwardReq_SDK(AriSdk::ARI_IBISsCallForwardReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9233D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9233D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBISsCallForwardReq_SDK::~ARI_IBISsCallForwardReq_SDK(AriSdk::ARI_IBISsCallForwardReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C9233D0;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40AEA0F7BFLL);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsCallForwardReq_SDK::~ARI_IBISsCallForwardReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsCallForwardReq_SDK::pack(AriSdk::ARI_IBISsCallForwardReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 0x53uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsCallForwardReq_SDK::unpack(AriSdk::ARI_IBISsCallForwardReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;

  v24 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v24, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v24;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v23 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v22 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v21 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v20 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 1, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v19 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (_DWORD *)operator new();
    *v10 = *v9;
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v18 = 0;
  v12 = operator new();
  *(_OWORD *)v12 = 0u;
  *(_OWORD *)(v12 + 16) = 0u;
  *(_OWORD *)(v12 + 32) = 0u;
  *(_OWORD *)(v12 + 48) = 0u;
  *(_OWORD *)(v12 + 64) = 0u;
  *(_DWORD *)(v12 + 79) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, (void *)v12, 83, &v18, 0);
  if (!(_DWORD)v3 && v18)
  {
    v13 = operator new();
    v14 = *(_OWORD *)(v12 + 48);
    *(_OWORD *)(v13 + 32) = *(_OWORD *)(v12 + 32);
    *(_OWORD *)(v13 + 48) = v14;
    *(_OWORD *)(v13 + 64) = *(_OWORD *)(v12 + 64);
    *(_DWORD *)(v13 + 79) = *(_DWORD *)(v12 + 79);
    v15 = *(_OWORD *)(v12 + 16);
    *(_OWORD *)v13 = *(_OWORD *)v12;
    *(_OWORD *)(v13 + 16) = v15;
    v16 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v13;
    if (v16)
      MEMORY[0x212BB9B60](v16, 0x1000C40AEA0F7BFLL);
  }
  MEMORY[0x212BB9B60](v12, 0x1000C40AEA0F7BFLL);
  return v3;
}

void sub_20E2AFA1C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40AEA0F7BFLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsCallForwardReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsCallForwardReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 411074560;
}

double AriSdk::ARI_IBISsCallForwardRspCb_SDK::ARI_IBISsCallForwardRspCb_SDK(AriSdk::ARI_IBISsCallForwardRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19008000u, 0);
  *(_QWORD *)v1 = &off_24C923408;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19008000u, 0);
  *(_QWORD *)v1 = &off_24C923408;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBISsCallForwardRspCb_SDK::ARI_IBISsCallForwardRspCb_SDK(AriSdk::ARI_IBISsCallForwardRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923408;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923408;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBISsCallForwardRspCb_SDK::~ARI_IBISsCallForwardRspCb_SDK(AriSdk::ARI_IBISsCallForwardRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C923408;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 11);
  if (v4)
  {
    *((_QWORD *)this + 12) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsCallForwardRspCb_SDK::~ARI_IBISsCallForwardRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsCallForwardRspCb_SDK::pack(AriSdk::ARI_IBISsCallForwardRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 0x14uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsCallForwardRspCb_SDK::unpack(AriSdk::ARI_IBISsCallForwardRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  void *v7;
  char *v8;
  char *v9;
  unint64_t v10;
  size_t v11;
  void **v12;
  unint64_t v13;
  const char *v14;
  void **v15;
  void *v16;
  _BYTE *v17;
  _QWORD *v18;
  unint64_t v20;
  BOOL v21;
  void *__p[2];
  char v23;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v21 = 0;
  v20 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x690uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1680, &v21, &v20);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C806F6D828DLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v20 >= 0x8C)
    {
      v10 = v20 / 0x8C;
      v11 = 140 * (v20 / 0x8C);
      v8 = (char *)operator new(v11);
      v9 = &v8[140 * v10];
      memcpy(v8, v7, v11);
    }
    else
    {
      v8 = 0;
      v9 = 0;
    }
    v12 = (void **)((char *)this + 88);
    v13 = 0xAF8AF8AF8AF8AF8BLL * ((v9 - v8) >> 2);
    if (v13 < 0xD)
    {
      v16 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v12 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v9;
      *((_QWORD *)this + 13) = v9;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v23 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 88, v13, 12);
      if (v23 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C806F6D828DLL);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_BYTE *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v17, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = 0;
  v18[1] = 0;
  *((_DWORD *)v18 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v18, 20, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 15, (uint64_t)v18);
  MEMORY[0x212BB9B60](v18, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E2B0248(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsCallForwardRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsCallForwardRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 419463168;
}

double AriSdk::ARI_IBISsCallWaitingReq_SDK::ARI_IBISsCallWaitingReq_SDK(AriSdk::ARI_IBISsCallWaitingReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18838000u, 0);
  *(_QWORD *)v1 = &off_24C923440;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18838000u, 0);
  *(_QWORD *)v1 = &off_24C923440;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBISsCallWaitingReq_SDK::ARI_IBISsCallWaitingReq_SDK(AriSdk::ARI_IBISsCallWaitingReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923440;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923440;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBISsCallWaitingReq_SDK::~ARI_IBISsCallWaitingReq_SDK(AriSdk::ARI_IBISsCallWaitingReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C923440;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsCallWaitingReq_SDK::~ARI_IBISsCallWaitingReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsCallWaitingReq_SDK::pack(AriSdk::ARI_IBISsCallWaitingReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsCallWaitingReq_SDK::unpack(AriSdk::ARI_IBISsCallWaitingReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2B07E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsCallWaitingReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsCallWaitingReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 411271168;
}

double AriSdk::ARI_IBISsCallWaitingRspCb_SDK::ARI_IBISsCallWaitingRspCb_SDK(AriSdk::ARI_IBISsCallWaitingRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19038000u, 0);
  *(_QWORD *)v1 = &off_24C923478;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19038000u, 0);
  *(_QWORD *)v1 = &off_24C923478;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBISsCallWaitingRspCb_SDK::ARI_IBISsCallWaitingRspCb_SDK(AriSdk::ARI_IBISsCallWaitingRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923478;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923478;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBISsCallWaitingRspCb_SDK::~ARI_IBISsCallWaitingRspCb_SDK(AriSdk::ARI_IBISsCallWaitingRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C923478;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 11);
  if (v4)
  {
    *((_QWORD *)this + 12) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsCallWaitingRspCb_SDK::~ARI_IBISsCallWaitingRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsCallWaitingRspCb_SDK::pack(AriSdk::ARI_IBISsCallWaitingRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 0x14uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsCallWaitingRspCb_SDK::unpack(AriSdk::ARI_IBISsCallWaitingRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _OWORD *v7;
  unint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  size_t v12;
  void **v13;
  const char *v14;
  void **v15;
  void *v16;
  _BYTE *v17;
  _QWORD *v18;
  unint64_t v20;
  BOOL v21;
  void *__p[2];
  char v23;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v21 = 0;
  v20 = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 96, &v21, &v20);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8090D0E795);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = v20;
    if (v20 >= 8)
    {
      v12 = v20 & 0xFFFFFFFFFFFFFFF8;
      v9 = (char *)operator new(v20 & 0xFFFFFFFFFFFFFFF8);
      v11 = &v9[8 * (v8 >> 3)];
      memcpy(v9, v7, v12);
      v10 = &v9[v12];
    }
    else
    {
      v9 = 0;
      v10 = 0;
      v11 = 0;
    }
    v13 = (void **)((char *)this + 88);
    if ((unint64_t)(v10 - v9) < 0x61)
    {
      v16 = *v13;
      if (*v13)
      {
        *((_QWORD *)this + 12) = v16;
        operator delete(v16);
        *v13 = 0;
        *((_QWORD *)this + 12) = 0;
        *((_QWORD *)this + 13) = 0;
      }
      *((_QWORD *)this + 11) = v9;
      *((_QWORD *)this + 12) = v10;
      *((_QWORD *)this + 13) = v11;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v23 >= 0)
        v15 = __p;
      else
        v15 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v14, v15, 360, (char *)this + 88, (v10 - v9) >> 3, 12);
      if (v23 < 0)
        operator delete(__p[0]);
      if (v9)
        operator delete(v9);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8090D0E795);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_BYTE *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v17, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_QWORD *)operator new();
  *v18 = 0;
  v18[1] = 0;
  *((_DWORD *)v18 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v18, 20, (BOOL *)__p, 0);
  if (!(_DWORD)v3 && LOBYTE(__p[0]))
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 15, (uint64_t)v18);
  MEMORY[0x212BB9B60](v18, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E2B0FC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;

  MEMORY[0x212BB9B60](v21, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsCallWaitingRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsCallWaitingRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 419659776;
}

double AriSdk::ARI_IBISsExtendedUssdReq_SDK::ARI_IBISsExtendedUssdReq_SDK(AriSdk::ARI_IBISsExtendedUssdReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18810000u, 0);
  *(_QWORD *)v1 = &off_24C9234B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x18810000u, 0);
  *(_QWORD *)v1 = &off_24C9234B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBISsExtendedUssdReq_SDK::ARI_IBISsExtendedUssdReq_SDK(AriSdk::ARI_IBISsExtendedUssdReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9234B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9234B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBISsExtendedUssdReq_SDK::~ARI_IBISsExtendedUssdReq_SDK(AriSdk::ARI_IBISsExtendedUssdReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C9234B0;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = (void *)*((_QWORD *)this + 9);
  if (v7)
  {
    *((_QWORD *)this + 10) = v7;
    operator delete(v7);
  }
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsExtendedUssdReq_SDK::~ARI_IBISsExtendedUssdReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsExtendedUssdReq_SDK::pack(AriSdk::ARI_IBISsExtendedUssdReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    v8 = !v6 || v6 == v7;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      v9 = (const void *)*((_QWORD *)this + 12);
      if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v9, 2uLL, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 1uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsExtendedUssdReq_SDK::unpack(AriSdk::ARI_IBISsExtendedUssdReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  char *v5;
  _WORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  _DWORD *v11;
  _BYTE *v12;
  __n128 __p;
  uint64_t v15;
  size_t __sz;
  BOOL v17;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (char *)operator new[]();
  *(_OWORD *)v5 = 0u;
  *((_OWORD *)v5 + 1) = 0u;
  *((_OWORD *)v5 + 2) = 0u;
  *((_OWORD *)v5 + 3) = 0u;
  *((_OWORD *)v5 + 4) = 0u;
  *((_OWORD *)v5 + 5) = 0u;
  *((_OWORD *)v5 + 6) = 0u;
  *((_OWORD *)v5 + 7) = 0u;
  *((_OWORD *)v5 + 8) = 0u;
  *((_OWORD *)v5 + 9) = 0u;
  *((_OWORD *)v5 + 10) = 0u;
  *(_QWORD *)(v5 + 175) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 183, &v17, &__sz);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v15 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v5, (uint64_t)&v5[__sz], __sz);
    AriSdk::TlvArray<char,183ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_BYTE *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 1, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  return v3;
}

void sub_20E2B1870(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<char,183ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xB8)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 183);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2B19D8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBISsExtendedUssdReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsExtendedUssdReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 411107328;
}

double AriSdk::ARI_IBISsExtendedUssdRspCb_SDK::ARI_IBISsExtendedUssdRspCb_SDK(AriSdk::ARI_IBISsExtendedUssdRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19010000u, 0);
  *(_QWORD *)v1 = &off_24C9234E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19010000u, 0);
  *(_QWORD *)v1 = &off_24C9234E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBISsExtendedUssdRspCb_SDK::ARI_IBISsExtendedUssdRspCb_SDK(AriSdk::ARI_IBISsExtendedUssdRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9234E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9234E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBISsExtendedUssdRspCb_SDK::~ARI_IBISsExtendedUssdRspCb_SDK(AriSdk::ARI_IBISsExtendedUssdRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C9234E8;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = (void *)*((_QWORD *)this + 11);
  if (v6)
  {
    *((_QWORD *)this + 12) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C40A86A77D5);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsExtendedUssdRspCb_SDK::~ARI_IBISsExtendedUssdRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsExtendedUssdRspCb_SDK::pack(AriSdk::ARI_IBISsExtendedUssdRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 2uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 1uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v13, 1uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsExtendedUssdRspCb_SDK::unpack(AriSdk::ARI_IBISsExtendedUssdRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _DWORD *v6;
  char *v7;
  _WORD *v8;
  _BYTE *v9;
  _DWORD *v10;
  _BYTE *v11;
  __n128 __p;
  uint64_t v14;
  size_t __sz;
  BOOL v16;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  *((_DWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 20, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 9, (uint64_t)v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40A86A77D5);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (char *)operator new[]();
  *(_OWORD *)v7 = 0u;
  *((_OWORD *)v7 + 1) = 0u;
  *((_OWORD *)v7 + 2) = 0u;
  *((_OWORD *)v7 + 3) = 0u;
  *((_OWORD *)v7 + 4) = 0u;
  *((_OWORD *)v7 + 5) = 0u;
  *((_OWORD *)v7 + 6) = 0u;
  *((_OWORD *)v7 + 7) = 0u;
  *((_OWORD *)v7 + 8) = 0u;
  *((_OWORD *)v7 + 9) = 0u;
  *((_OWORD *)v7 + 10) = 0u;
  *(_QWORD *)(v7 + 175) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 183, &v16, &__sz);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v7, (uint64_t)&v7[__sz], __sz);
    AriSdk::TlvArray<char,183ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_BYTE *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v11, 1, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  return v3;
}

void sub_20E2B228C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsExtendedUssdRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsExtendedUssdRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 419495936;
}

AriSdk::MsgBase *AriSdk::ARI_IBISsIdentificationReq_SDK::ARI_IBISsIdentificationReq_SDK(AriSdk::ARI_IBISsIdentificationReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x18830000u, 0);
  *(_QWORD *)result = &off_24C923520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x18830000u, 0);
  *(_QWORD *)result = &off_24C923520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISsIdentificationReq_SDK::ARI_IBISsIdentificationReq_SDK(AriSdk::ARI_IBISsIdentificationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C923520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C923520;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISsIdentificationReq_SDK::~ARI_IBISsIdentificationReq_SDK(AriSdk::ARI_IBISsIdentificationReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C923520;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsIdentificationReq_SDK::~ARI_IBISsIdentificationReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsIdentificationReq_SDK::pack(AriSdk::ARI_IBISsIdentificationReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsIdentificationReq_SDK::unpack(AriSdk::ARI_IBISsIdentificationReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2B2754(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsIdentificationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsIdentificationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 411238400;
}

double AriSdk::ARI_IBISsIdentificationRspCb_SDK::ARI_IBISsIdentificationRspCb_SDK(AriSdk::ARI_IBISsIdentificationRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19030000u, 0);
  *(_QWORD *)v1 = &off_24C923558;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19030000u, 0);
  *(_QWORD *)v1 = &off_24C923558;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISsIdentificationRspCb_SDK::ARI_IBISsIdentificationRspCb_SDK(AriSdk::ARI_IBISsIdentificationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923558;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923558;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISsIdentificationRspCb_SDK::~ARI_IBISsIdentificationRspCb_SDK(AriSdk::ARI_IBISsIdentificationRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C923558;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40A86A77D5);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsIdentificationRspCb_SDK::~ARI_IBISsIdentificationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsIdentificationRspCb_SDK::pack(AriSdk::ARI_IBISsIdentificationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x14uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsIdentificationRspCb_SDK::unpack(AriSdk::ARI_IBISsIdentificationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v15 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v14 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 12);
    *((_QWORD *)this + 12) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_QWORD *)operator new();
  *v11 = 0;
  v11[1] = 0;
  *((_DWORD *)v11 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v11, 20, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<AriGroupAttribParam>::operator=<AriGroupAttribParam&,void>((uint64_t *)this + 13, (uint64_t)v11);
  MEMORY[0x212BB9B60](v11, 0x1000C40A86A77D5);
  return v3;
}

void sub_20E2B2E58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40A86A77D5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsIdentificationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsIdentificationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 419627008;
}

double AriSdk::ARI_IBISsUssdIndCb_SDK::ARI_IBISsUssdIndCb_SDK(AriSdk::ARI_IBISsUssdIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19808000u, 0);
  *(_QWORD *)v1 = &off_24C923590;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x19808000u, 0);
  *(_QWORD *)v1 = &off_24C923590;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBISsUssdIndCb_SDK::ARI_IBISsUssdIndCb_SDK(AriSdk::ARI_IBISsUssdIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923590;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C923590;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBISsUssdIndCb_SDK::~ARI_IBISsUssdIndCb_SDK(AriSdk::ARI_IBISsUssdIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C923590;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = (void *)*((_QWORD *)this + 10);
  if (v6)
  {
    *((_QWORD *)this + 11) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISsUssdIndCb_SDK::~ARI_IBISsUssdIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISsUssdIndCb_SDK::pack(AriSdk::ARI_IBISsUssdIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 2uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 4uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v13, 1uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISsUssdIndCb_SDK::unpack(AriSdk::ARI_IBISsUssdIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  char *v6;
  _WORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _BYTE *v10;
  __n128 __p;
  uint64_t v13;
  size_t __sz;
  BOOL v15;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v15 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (char *)operator new[]();
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *((_OWORD *)v6 + 4) = 0u;
  *((_OWORD *)v6 + 5) = 0u;
  *((_OWORD *)v6 + 6) = 0u;
  *((_OWORD *)v6 + 7) = 0u;
  *((_OWORD *)v6 + 8) = 0u;
  *((_OWORD *)v6 + 9) = 0u;
  *((_OWORD *)v6 + 10) = 0u;
  *(_QWORD *)(v6 + 175) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 183, &v15, &__sz);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v13 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)&v6[__sz], __sz);
    AriSdk::TlvArray<char,183ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 1, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 16, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  return v3;
}

void sub_20E2B368C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISsUssdIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISsUssdIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 427851776;
}

uint64_t ARI_IBIApacsType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIApacsType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIApacs_status_resp_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIApacs_status_resp_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICsgInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICsgInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIDateTime_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIDateTime_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsNetIcelapsfetchdata_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsNetIcelapsfetchdata_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsNetlapsfetchdata_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsNetlapsfetchdata_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetAdditionalUpdateResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetAdditionalUpdateResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApBatterySaverModeType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApBatterySaverModeType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApScreenLockStatusType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApScreenLockStatusType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApScreenStatusType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApScreenStatusType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApSleepStatusType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApSleepStatusType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApTetheringStatusType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetApTetheringStatusType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetCNConnectionType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetCNConnectionType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEmergencyFallbackSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEmergencyFallbackSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEmergencyServiceSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEmergencyServiceSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEonsSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetEonsSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetError_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetError_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetFdStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetFdStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetFdorRejectCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetFdorRejectCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetGetPlmnNameInfoResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetGetPlmnNameInfoResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetImsVoPSSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetImsVoPSSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetInterworkingWithoutN26Support_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetInterworkingWithoutN26Support_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetLcsViaCsSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetLcsViaCsSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetLcsViaPsSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetLcsViaPsSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetMBMSSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetMBMSSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetMPSIndicator_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetMPSIndicator_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetMax15BearerSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetMax15BearerSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNetworkFeatureAdditionalInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNetworkFeatureAdditionalInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNrRatModeDisable_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNrRatModeDisable_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNrRoamingConfig_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNrRoamingConfig_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfoRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfoRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfoRspParam_v2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfoRspParam_v2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfo_v2_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetNssaiInfo_v2_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmnId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmnId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmnNameInfo_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmnNameInfo_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmnScanList_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmnScanList_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmn_V1_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPlmn_V1_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredNssaiInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPreferredNssaiInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiCdma1xInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiCdma1xInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiCdmaEvdoInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiCdmaEvdoInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiListExt_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiListExt_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiList_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiList_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiRecord_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetPssiRecord_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRegistrationMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRegistrationMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRegistrationRejectCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRegistrationRejectCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRegistrationStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRegistrationStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRestrictDcNrIndicator_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetRestrictDcNrIndicator_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetSmsViaPsSignallingSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetSmsViaPsSignallingSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUEPolicyResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUEPolicyResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUserCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUserCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUserPlaneCIoTOptimizationSupport_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBINetUserPlaneCIoTOptimizationSupport_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPlmnPriorityInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPlmnPriorityInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPlmnWAcT_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPlmnWAcT_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBITai_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBITai_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK::ARI_CsiIpcCtrlPathTestDataIndCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51838000u, 0);
  *(_QWORD *)result = &off_24C928400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51838000u, 0);
  *(_QWORD *)result = &off_24C928400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK::ARI_CsiIpcCtrlPathTestDataIndCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928400;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK::~ARI_CsiIpcCtrlPathTestDataIndCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C928400;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C402633B4A5);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK::~ARI_CsiIpcCtrlPathTestDataIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0xC04uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0xC04uLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 3076, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0xC04uLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C402633B4A5);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C402633B4A5);
  return v3;
}

void sub_20E2B45D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C402633B4A5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestDataIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1367572480;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK::ARI_CsiIpcCtrlPathTestDataOpReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50840000u, 0);
  *(_QWORD *)result = &off_24C928438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50840000u, 0);
  *(_QWORD *)result = &off_24C928438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK::ARI_CsiIpcCtrlPathTestDataOpReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928438;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK::~ARI_CsiIpcCtrlPathTestDataOpReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C928438;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK::~ARI_CsiIpcCtrlPathTestDataOpReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B4888(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestDataOpReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1350828032;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51040000u, 0);
  *(_QWORD *)result = &off_24C928470;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51040000u, 0);
  *(_QWORD *)result = &off_24C928470;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928470;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928470;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK::~ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C928470;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK::~ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B4B34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestDataOpRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1359216640;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK::ARI_CsiIpcCtrlPathTestInitReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50818000u, 0);
  *(_QWORD *)result = &off_24C9284A8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50818000u, 0);
  *(_QWORD *)result = &off_24C9284A8;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK::ARI_CsiIpcCtrlPathTestInitReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9284A8;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9284A8;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK::~ARI_CsiIpcCtrlPathTestInitReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK::unpack(AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestInitReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1350664192;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK::ARI_CsiIpcCtrlPathTestInitRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51018000u, 0);
  *(_QWORD *)result = &off_24C9284E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51018000u, 0);
  *(_QWORD *)result = &off_24C9284E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK::ARI_CsiIpcCtrlPathTestInitRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9284E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9284E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK::~ARI_CsiIpcCtrlPathTestInitRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9284E0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK::~ARI_CsiIpcCtrlPathTestInitRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK::unpack(AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B4F60(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestInitRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1359052800;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK::ARI_CsiIpcCtrlPathTestSendDataReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50830000u, 0);
  *(_QWORD *)result = &off_24C928518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50830000u, 0);
  *(_QWORD *)result = &off_24C928518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK::ARI_CsiIpcCtrlPathTestSendDataReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928518;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK::~ARI_CsiIpcCtrlPathTestSendDataReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C928518;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C402633B4A5);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK::~ARI_CsiIpcCtrlPathTestSendDataReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0xC04uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK::unpack(AriMsg **this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0xC04uLL);
  v3 = AriMsg::unpack(this[6], 1, v2, 3076, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0xC04uLL);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C402633B4A5);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C402633B4A5);
  return v3;
}

void sub_20E2B5218(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C402633B4A5);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestSendDataReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1350762496;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51030000u, 0);
  *(_QWORD *)result = &off_24C928550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51030000u, 0);
  *(_QWORD *)result = &off_24C928550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928550;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK::~ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C928550;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK::~ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B54C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestSendDataRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1359151104;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK::ARI_CsiIpcCtrlPathTestSrcReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50848000u, 0);
  *(_QWORD *)result = &off_24C928588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50848000u, 0);
  *(_QWORD *)result = &off_24C928588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK::ARI_CsiIpcCtrlPathTestSrcReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928588;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK::~ARI_CsiIpcCtrlPathTestSrcReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C928588;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK::~ARI_CsiIpcCtrlPathTestSrcReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B5778(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestSrcReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1350860800;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51048000u, 0);
  *(_QWORD *)result = &off_24C9285C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51048000u, 0);
  *(_QWORD *)result = &off_24C9285C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9285C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9285C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK::~ARI_CsiIpcCtrlPathTestSrcRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9285C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4027586B93);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK::~ARI_CsiIpcCtrlPathTestSrcRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x1CuLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK::unpack(AriMsg **this)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = operator new();
  *(_QWORD *)(v2 + 8) = 0;
  *(_QWORD *)(v2 + 16) = 0;
  *(_QWORD *)v2 = 0;
  *(_DWORD *)(v2 + 24) = 0;
  v3 = AriMsg::unpack(this[6], 1, (void *)v2, 28, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (_OWORD *)operator new();
    *v5 = *(_OWORD *)v2;
    *(_OWORD *)((char *)v5 + 12) = *(_OWORD *)(v2 + 12);
    v6 = this[8];
    this[8] = (AriMsg *)v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4027586B93);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4027586B93);
  return v3;
}

void sub_20E2B5A40(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4027586B93);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestSrcRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1359249408;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50828000u, 0);
  *(_QWORD *)result = &off_24C9285F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50828000u, 0);
  *(_QWORD *)result = &off_24C9285F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9285F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9285F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK::~ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9285F8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK::~ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0x10uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v2[1] = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 16, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_OWORD *)v5 = *(_OWORD *)v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40451B5BE8);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C40451B5BE8);
  return v3;
}

void sub_20E2B5CF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40451B5BE8);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1350729728;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51028000u, 0);
  *(_QWORD *)result = &off_24C928630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51028000u, 0);
  *(_QWORD *)result = &off_24C928630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928630;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK::~ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C928630;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK::~ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK::unpack(AriMsg **this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_DWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B5FB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestSrcCfgRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1359118336;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK::ARI_CsiIpcCtrlPathTestUnInitReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50820000u, 0);
  *(_QWORD *)result = &off_24C928668;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x50820000u, 0);
  *(_QWORD *)result = &off_24C928668;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK::ARI_CsiIpcCtrlPathTestUnInitReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928668;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C928668;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK::~ARI_CsiIpcCtrlPathTestUnInitReq_SDK(AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK::unpack(AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestUnInitReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1350696960;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51020000u, 0);
  *(_QWORD *)result = &off_24C9286A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x51020000u, 0);
  *(_QWORD *)result = &off_24C9286A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9286A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9286A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK::~ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK(AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9286A0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK::~ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK::pack(AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK::unpack(AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B63CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_CsiIpcCtrlPathTestUnInitRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1359085568;
}

uint64_t ARI_IBISimPb2gDescriptor_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPb2gDescriptor_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPb3gDescriptor_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPb3gDescriptor_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbBaseEntry_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbBaseEntry_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbCacheStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbCacheStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbControlRecord_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbControlRecord_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbEccValue_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbEccValue_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbLocationInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbLocationInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbUsimEntry_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbUsimEntry_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbUsimPbLocation_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISimPbUsimPbLocation_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEmergencyTransmissionResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIEmergencyTransmissionResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsActivationType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsActivationType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsDeactivationCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsDeactivationCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsDiscListParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsDiscListParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsDiscoveryMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsDiscoveryMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsFailureCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsFailureCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsInterfaceId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsInterfaceId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsMasterLikelihood_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsMasterLikelihood_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsRelayLikelihood_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsRelayLikelihood_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsSystemStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsSystemStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsUserId_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIOgrsUserId_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPDP_ContextList_t_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIPDP_ContextList_t_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRemotePeerConfiguration_t_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIRemotePeerConfiguration_t_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUserList_t_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIUserList_t_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

double AriSdk::ARI_IBIStwActivateReq_SDK::ARI_IBIStwActivateReq_SDK(AriSdk::ARI_IBIStwActivateReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8808000, 0);
  *(_QWORD *)v1 = &off_24C92BB68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8808000, 0);
  *(_QWORD *)v1 = &off_24C92BB68;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIStwActivateReq_SDK::ARI_IBIStwActivateReq_SDK(AriSdk::ARI_IBIStwActivateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BB68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BB68;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIStwActivateReq_SDK::~ARI_IBIStwActivateReq_SDK(AriSdk::ARI_IBIStwActivateReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C92BB68;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4015033FCELL);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4042A86FECLL);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4044B5EFC8);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C400A747E1ELL);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwActivateReq_SDK::~ARI_IBIStwActivateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwActivateReq_SDK::pack(AriSdk::ARI_IBIStwActivateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x28uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x88uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x84uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 0x984uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwActivateReq_SDK::unpack(AriSdk::ARI_IBIStwActivateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  _OWORD *v11;
  _OWORD *v12;
  _OWORD *v13;
  _DWORD *v14;
  void *v15;
  _DWORD *v16;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;

  v26 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v26, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v26;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v5 = (_DWORD *)operator new();
    *v5 = *v2;
    v6 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v25 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v7, 4, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v24 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v10, 1, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v23 = 0;
  v11 = (_OWORD *)operator new();
  *v11 = 0u;
  v11[1] = 0u;
  *((_QWORD *)v11 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v11, 40, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C400A747E1ELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwSecurityParam>::operator=<IBIStwSecurityParam&,void>((uint64_t *)this + 11, (uint64_t)v11);
    MEMORY[0x212BB9B60](v11, 0x1000C400A747E1ELL);
  }
  v22 = 0;
  v12 = (_OWORD *)operator new();
  *v12 = 0u;
  v12[1] = 0u;
  v12[2] = 0u;
  v12[3] = 0u;
  v12[4] = 0u;
  v12[5] = 0u;
  v12[6] = 0u;
  v12[7] = 0u;
  *((_QWORD *)v12 + 16) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v12, 136, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4044B5EFC8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwFreqList>::operator=<IBIStwFreqList&,void>((uint64_t *)this + 12, (uint64_t)v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4044B5EFC8);
  }
  v21 = 0;
  v13 = (_OWORD *)operator new();
  *v13 = 0u;
  v13[1] = 0u;
  v13[2] = 0u;
  v13[3] = 0u;
  v13[4] = 0u;
  v13[5] = 0u;
  v13[6] = 0u;
  v13[7] = 0u;
  *((_DWORD *)v13 + 32) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v13, 132, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4042A86FECLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwGpsParam>::operator=<IBIStwGpsParam&,void>((uint64_t *)this + 13, (uint64_t)v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4042A86FECLL);
  }
  v20 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v14, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v19 = 0;
  v15 = (void *)operator new();
  bzero(v15, 0x984uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v15, 2436, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4015033FCELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwGnssHeatMapParam>::operator=<IBIStwGnssHeatMapParam&,void>((uint64_t *)this + 15, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4015033FCELL);
  }
  v18 = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v16, 4, &v18, 0);
  if (!(_DWORD)v3 && v18)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v16);
  MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  return v3;
}

void sub_20E2B72C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBIStwSecurityParam>::operator=<IBIStwSecurityParam&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v5;
  *(_QWORD *)(v4 + 32) = *(_QWORD *)(a2 + 32);
  v6 = *a1;
  *a1 = v4;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C400A747E1ELL);
  return a1;
}

uint64_t *AriSdk::Tlv<IBIStwFreqList>::operator=<IBIStwFreqList&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 112) = v5;
  *(_QWORD *)(v4 + 128) = *(_QWORD *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *a1;
  *a1 = v4;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4044B5EFC8);
  return a1;
}

uint64_t *AriSdk::Tlv<IBIStwGpsParam>::operator=<IBIStwGpsParam&,void>(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;

  v4 = operator new();
  v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 112) = v5;
  *(_DWORD *)(v4 + 128) = *(_DWORD *)(a2 + 128);
  v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 48) = v6;
  v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 80) = v7;
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)v4 = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 16) = v8;
  v9 = *a1;
  *a1 = v4;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4042A86FECLL);
  return a1;
}

uint64_t *AriSdk::Tlv<IBIStwGnssHeatMapParam>::operator=<IBIStwGnssHeatMapParam&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x984uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4015033FCELL);
  return a1;
}

BOOL AriSdk::ARI_IBIStwActivateReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwActivateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662667264;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwActivateRspCb_SDK::ARI_IBIStwActivateRspCb_SDK(AriSdk::ARI_IBIStwActivateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9008000, 0);
  *(_QWORD *)result = &off_24C92BBA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9008000, 0);
  *(_QWORD *)result = &off_24C92BBA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwActivateRspCb_SDK::ARI_IBIStwActivateRspCb_SDK(AriSdk::ARI_IBIStwActivateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BBA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BBA0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwActivateRspCb_SDK::~ARI_IBIStwActivateRspCb_SDK(AriSdk::ARI_IBIStwActivateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BBA0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwActivateRspCb_SDK::~ARI_IBIStwActivateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwActivateRspCb_SDK::pack(AriSdk::ARI_IBIStwActivateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwActivateRspCb_SDK::unpack(AriSdk::ARI_IBIStwActivateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2B789C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwActivateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwActivateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654278656;
}

double AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK::ARI_IBIStwDataMsgTxCancelReq_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8910000, 0);
  *(_QWORD *)v1 = &off_24C92BBD8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8910000, 0);
  *(_QWORD *)v1 = &off_24C92BBD8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK::ARI_IBIStwDataMsgTxCancelReq_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BBD8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BBD8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK::~ARI_IBIStwDataMsgTxCancelReq_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BBD8;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK::~ARI_IBIStwDataMsgTxCancelReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK::pack(AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK::unpack(AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_QWORD *)operator new[]();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 16, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E2B7C2C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDataMsgTxCancelReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -661585920;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK::ARI_IBIStwDataMsgTxCancelRspCb_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9110000, 0);
  *(_QWORD *)result = &off_24C92BC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9110000, 0);
  *(_QWORD *)result = &off_24C92BC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK::ARI_IBIStwDataMsgTxCancelRspCb_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BC10;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK::~ARI_IBIStwDataMsgTxCancelRspCb_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BC10;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK::~ARI_IBIStwDataMsgTxCancelRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK::pack(AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK::unpack(AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2B7FB0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDataMsgTxCancelRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653197312;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9870000, 0);
  *(_QWORD *)result = &off_24C92BC48;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9870000, 0);
  *(_QWORD *)result = &off_24C92BC48;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BC48;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BC48;
  return result;
}

void AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK::~ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK(AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK::pack(AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK::unpack(AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDataMsgTxCancelAllCompleteIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645464064;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK::ARI_IBIStwDeActivateCompleteIndCb_SDK(AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9808000, 0);
  *(_QWORD *)result = &off_24C92BC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9808000, 0);
  *(_QWORD *)result = &off_24C92BC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK::ARI_IBIStwDeActivateCompleteIndCb_SDK(AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BC80;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK::~ARI_IBIStwDeActivateCompleteIndCb_SDK(AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BC80;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK::~ARI_IBIStwDeActivateCompleteIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK::pack(AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0xCuLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK::unpack(AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  v5[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 12, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C403E1C8BA9);
  return v3;
}

void sub_20E2B84B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C403E1C8BA9);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDeActivateCompleteIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645890048;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeActivateReq_SDK::ARI_IBIStwDeActivateReq_SDK(AriSdk::ARI_IBIStwDeActivateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8810000, 0);
  *(_QWORD *)result = &off_24C92BCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8810000, 0);
  *(_QWORD *)result = &off_24C92BCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeActivateReq_SDK::ARI_IBIStwDeActivateReq_SDK(AriSdk::ARI_IBIStwDeActivateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BCB8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwDeActivateReq_SDK::~ARI_IBIStwDeActivateReq_SDK(AriSdk::ARI_IBIStwDeActivateReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C92BCB8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDeActivateReq_SDK::~ARI_IBIStwDeActivateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDeActivateReq_SDK::pack(AriSdk::ARI_IBIStwDeActivateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDeActivateReq_SDK::unpack(AriSdk::ARI_IBIStwDeActivateReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2B8740(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDeActivateReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDeActivateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662634496;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeActivateRspCb_SDK::ARI_IBIStwDeActivateRspCb_SDK(AriSdk::ARI_IBIStwDeActivateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9010000, 0);
  *(_QWORD *)result = &off_24C92BCF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9010000, 0);
  *(_QWORD *)result = &off_24C92BCF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeActivateRspCb_SDK::ARI_IBIStwDeActivateRspCb_SDK(AriSdk::ARI_IBIStwDeActivateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BCF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BCF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwDeActivateRspCb_SDK::~ARI_IBIStwDeActivateRspCb_SDK(AriSdk::ARI_IBIStwDeActivateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BCF0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDeActivateRspCb_SDK::~ARI_IBIStwDeActivateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDeActivateRspCb_SDK::pack(AriSdk::ARI_IBIStwDeActivateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDeActivateRspCb_SDK::unpack(AriSdk::ARI_IBIStwDeActivateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2B8A88(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDeActivateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDeActivateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654245888;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeviceOrientationReq_SDK::ARI_IBIStwDeviceOrientationReq_SDK(AriSdk::ARI_IBIStwDeviceOrientationReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8868000, 0);
  *(_QWORD *)result = &off_24C92BD28;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8868000, 0);
  *(_QWORD *)result = &off_24C92BD28;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeviceOrientationReq_SDK::ARI_IBIStwDeviceOrientationReq_SDK(AriSdk::ARI_IBIStwDeviceOrientationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BD28;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BD28;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwDeviceOrientationReq_SDK::~ARI_IBIStwDeviceOrientationReq_SDK(AriSdk::ARI_IBIStwDeviceOrientationReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92BD28;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDeviceOrientationReq_SDK::~ARI_IBIStwDeviceOrientationReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDeviceOrientationReq_SDK::pack(AriSdk::ARI_IBIStwDeviceOrientationReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDeviceOrientationReq_SDK::unpack(AriSdk::ARI_IBIStwDeviceOrientationReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<float>::operator=<float &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2B8EC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<float>::operator=<float &,void>(uint64_t *a1, _DWORD *a2)
{
  _DWORD *v4;
  uint64_t v5;

  v4 = (_DWORD *)operator new();
  *v4 = *a2;
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return a1;
}

BOOL AriSdk::ARI_IBIStwDeviceOrientationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDeviceOrientationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662274048;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK::ARI_IBIStwDeviceOrientationRspCb_SDK(AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9068000, 0);
  *(_QWORD *)result = &off_24C92BD60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9068000, 0);
  *(_QWORD *)result = &off_24C92BD60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK::ARI_IBIStwDeviceOrientationRspCb_SDK(AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BD60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BD60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK::~ARI_IBIStwDeviceOrientationRspCb_SDK(AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BD60;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK::~ARI_IBIStwDeviceOrientationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK::pack(AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK::unpack(AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2B9290(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDeviceOrientationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653885440;
}

double AriSdk::ARI_IBIStwDiagCommandReq_SDK::ARI_IBIStwDiagCommandReq_SDK(AriSdk::ARI_IBIStwDiagCommandReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8870000, 0);
  *(_QWORD *)v1 = &off_24C92BD98;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8870000, 0);
  *(_QWORD *)v1 = &off_24C92BD98;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwDiagCommandReq_SDK::ARI_IBIStwDiagCommandReq_SDK(AriSdk::ARI_IBIStwDiagCommandReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BD98;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BD98;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwDiagCommandReq_SDK::~ARI_IBIStwDiagCommandReq_SDK(AriSdk::ARI_IBIStwDiagCommandReq_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BD98;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDiagCommandReq_SDK::~ARI_IBIStwDiagCommandReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDiagCommandReq_SDK::pack(AriSdk::ARI_IBIStwDiagCommandReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDiagCommandReq_SDK::unpack(AriSdk::ARI_IBIStwDiagCommandReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x800uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2048, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,2048ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E2B9624(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<unsigned char,2048ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x801)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 2048);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2B9744(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBIStwDiagCommandReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDiagCommandReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662241280;
}

double AriSdk::ARI_IBIStwDiagCommandRspCb_SDK::ARI_IBIStwDiagCommandRspCb_SDK(AriSdk::ARI_IBIStwDiagCommandRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9070000, 0);
  *(_QWORD *)v1 = &off_24C92BDD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9070000, 0);
  *(_QWORD *)v1 = &off_24C92BDD0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwDiagCommandRspCb_SDK::ARI_IBIStwDiagCommandRspCb_SDK(AriSdk::ARI_IBIStwDiagCommandRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BDD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BDD0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwDiagCommandRspCb_SDK::~ARI_IBIStwDiagCommandRspCb_SDK(AriSdk::ARI_IBIStwDiagCommandRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C92BDD0;
  v2 = (void *)*((_QWORD *)this + 11);
  if (v2)
  {
    *((_QWORD *)this + 12) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDiagCommandRspCb_SDK::~ARI_IBIStwDiagCommandRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDiagCommandRspCb_SDK::pack(AriSdk::ARI_IBIStwDiagCommandRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDiagCommandRspCb_SDK::unpack(AriSdk::ARI_IBIStwDiagCommandRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  void *v7;
  __n128 __p;
  uint64_t v10;
  size_t __sz;
  BOOL v12;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v12 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (void *)operator new[]();
  bzero(v7, 0x800uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2048, &v12, &__sz);
  if (!(_DWORD)v3 && v12)
  {
    v10 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v7, (uint64_t)v7 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,2048ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  return v3;
}

void sub_20E2B9C7C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDiagCommandRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDiagCommandRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653852672;
}

double AriSdk::ARI_IBIStwDiagCommandIndCb_SDK::ARI_IBIStwDiagCommandIndCb_SDK(AriSdk::ARI_IBIStwDiagCommandIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9850000, 0);
  *(_QWORD *)v1 = &off_24C92BE08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9850000, 0);
  *(_QWORD *)v1 = &off_24C92BE08;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwDiagCommandIndCb_SDK::ARI_IBIStwDiagCommandIndCb_SDK(AriSdk::ARI_IBIStwDiagCommandIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BE08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BE08;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwDiagCommandIndCb_SDK::~ARI_IBIStwDiagCommandIndCb_SDK(AriSdk::ARI_IBIStwDiagCommandIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BE08;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwDiagCommandIndCb_SDK::~ARI_IBIStwDiagCommandIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwDiagCommandIndCb_SDK::pack(AriSdk::ARI_IBIStwDiagCommandIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwDiagCommandIndCb_SDK::unpack(AriSdk::ARI_IBIStwDiagCommandIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x800uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 2048, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,2048ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E2BA050(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwDiagCommandIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwDiagCommandIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645595136;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGetCapabilityReq_SDK::ARI_IBIStwGetCapabilityReq_SDK(AriSdk::ARI_IBIStwGetCapabilityReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8860000, 0);
  *(_QWORD *)result = &off_24C92BE40;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8860000, 0);
  *(_QWORD *)result = &off_24C92BE40;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGetCapabilityReq_SDK::ARI_IBIStwGetCapabilityReq_SDK(AriSdk::ARI_IBIStwGetCapabilityReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BE40;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BE40;
  return result;
}

void AriSdk::ARI_IBIStwGetCapabilityReq_SDK::~ARI_IBIStwGetCapabilityReq_SDK(AriSdk::ARI_IBIStwGetCapabilityReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwGetCapabilityReq_SDK::pack(AriSdk::ARI_IBIStwGetCapabilityReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwGetCapabilityReq_SDK::unpack(AriSdk::ARI_IBIStwGetCapabilityReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwGetCapabilityReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwGetCapabilityReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662306816;
}

double AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK::ARI_IBIStwGetCapabilityRspCb_SDK(AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9060000, 0);
  *(_QWORD *)v1 = &off_24C92BE78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9060000, 0);
  *(_QWORD *)v1 = &off_24C92BE78;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK::ARI_IBIStwGetCapabilityRspCb_SDK(AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BE78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BE78;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK::~ARI_IBIStwGetCapabilityRspCb_SDK(AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C92BE78;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK::~ARI_IBIStwGetCapabilityRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK::pack(AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK::unpack(AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2BA730(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwGetCapabilityRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653918208;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGetServiceInfoReq_SDK::ARI_IBIStwGetServiceInfoReq_SDK(AriSdk::ARI_IBIStwGetServiceInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8830000, 0);
  *(_QWORD *)result = &off_24C92BEB0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8830000, 0);
  *(_QWORD *)result = &off_24C92BEB0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGetServiceInfoReq_SDK::ARI_IBIStwGetServiceInfoReq_SDK(AriSdk::ARI_IBIStwGetServiceInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BEB0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BEB0;
  return result;
}

void AriSdk::ARI_IBIStwGetServiceInfoReq_SDK::~ARI_IBIStwGetServiceInfoReq_SDK(AriSdk::ARI_IBIStwGetServiceInfoReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwGetServiceInfoReq_SDK::pack(AriSdk::ARI_IBIStwGetServiceInfoReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwGetServiceInfoReq_SDK::unpack(AriSdk::ARI_IBIStwGetServiceInfoReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwGetServiceInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwGetServiceInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662503424;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK::ARI_IBIStwGetServiceInfoRspCb_SDK(AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9030000, 0);
  *(_QWORD *)result = &off_24C92BEE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9030000, 0);
  *(_QWORD *)result = &off_24C92BEE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK::ARI_IBIStwGetServiceInfoRspCb_SDK(AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BEE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BEE8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK::~ARI_IBIStwGetServiceInfoRspCb_SDK(AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BEE8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK::~ARI_IBIStwGetServiceInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK::pack(AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK::unpack(AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BAC34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwGetServiceInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654114816;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK::ARI_IBIStwGpsDataUpdateReq_SDK(AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8858000, 0);
  *(_QWORD *)result = &off_24C92BF20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8858000, 0);
  *(_QWORD *)result = &off_24C92BF20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK::ARI_IBIStwGpsDataUpdateReq_SDK(AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BF20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BF20;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK::~ARI_IBIStwGpsDataUpdateReq_SDK(AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92BF20;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4015033FCELL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4044B5EFC8);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4042A86FECLL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK::~ARI_IBIStwGpsDataUpdateReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK::pack(AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 0x84uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x88uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x984uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK::unpack(AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK *this)
{
  _OWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  void *v5;
  BOOL v7;
  BOOL v8;
  BOOL v9;

  v9 = 0;
  v2 = (_OWORD *)operator new();
  *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[6] = 0u;
  v2[7] = 0u;
  *((_DWORD *)v2 + 32) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 132, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4042A86FECLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwGpsParam>::operator=<IBIStwGpsParam&,void>((uint64_t *)this + 8, (uint64_t)v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4042A86FECLL);
  }
  v8 = 0;
  v4 = (_OWORD *)operator new();
  *v4 = 0u;
  v4[1] = 0u;
  v4[2] = 0u;
  v4[3] = 0u;
  v4[4] = 0u;
  v4[5] = 0u;
  v4[6] = 0u;
  v4[7] = 0u;
  *((_QWORD *)v4 + 16) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v4, 136, &v8, 0);
  if ((_DWORD)v3 || !v8)
  {
    MEMORY[0x212BB9B60](v4, 0x1000C4044B5EFC8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwFreqList>::operator=<IBIStwFreqList&,void>((uint64_t *)this + 9, (uint64_t)v4);
    MEMORY[0x212BB9B60](v4, 0x1000C4044B5EFC8);
  }
  v7 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x984uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 2436, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBIStwGnssHeatMapParam>::operator=<IBIStwGnssHeatMapParam&,void>((uint64_t *)this + 10, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4015033FCELL);
  return v3;
}

void sub_20E2BB098(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4015033FCELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwGpsDataUpdateReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662339584;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK::ARI_IBIStwGpsDataUpdateRspCb_SDK(AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9058000, 0);
  *(_QWORD *)result = &off_24C92BF58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9058000, 0);
  *(_QWORD *)result = &off_24C92BF58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK::ARI_IBIStwGpsDataUpdateRspCb_SDK(AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BF58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BF58;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK::~ARI_IBIStwGpsDataUpdateRspCb_SDK(AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92BF58;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK::~ARI_IBIStwGpsDataUpdateRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK::pack(AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK::unpack(AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BB41C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwGpsDataUpdateRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653950976;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK(AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9840000, 0);
  *(_QWORD *)result = &off_24C92BF90;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9840000, 0);
  *(_QWORD *)result = &off_24C92BF90;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK(AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BF90;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92BF90;
  return result;
}

void AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK::~ARI_IBIStwGpsDataUpdateNeededIndCb_SDK(AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK::pack(AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK::unpack(AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwGpsDataUpdateNeededIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645660672;
}

double AriSdk::ARI_IBIStwIQConfigReq_SDK::ARI_IBIStwIQConfigReq_SDK(AriSdk::ARI_IBIStwIQConfigReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C98000, 0);
  *(_QWORD *)v1 = &off_24C92BFC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C98000, 0);
  *(_QWORD *)v1 = &off_24C92BFC8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwIQConfigReq_SDK::ARI_IBIStwIQConfigReq_SDK(AriSdk::ARI_IBIStwIQConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BFC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92BFC8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwIQConfigReq_SDK::~ARI_IBIStwIQConfigReq_SDK(AriSdk::ARI_IBIStwIQConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C92BFC8;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwIQConfigReq_SDK::~ARI_IBIStwIQConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwIQConfigReq_SDK::pack(AriSdk::ARI_IBIStwIQConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwIQConfigReq_SDK::unpack(AriSdk::ARI_IBIStwIQConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  _WORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_WORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v11, 2, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2BBB44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwIQConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwIQConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -657883136;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwIQConfigRspCb_SDK::ARI_IBIStwIQConfigRspCb_SDK(AriSdk::ARI_IBIStwIQConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9498000, 0);
  *(_QWORD *)result = &off_24C92C000;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9498000, 0);
  *(_QWORD *)result = &off_24C92C000;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwIQConfigRspCb_SDK::ARI_IBIStwIQConfigRspCb_SDK(AriSdk::ARI_IBIStwIQConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C000;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C000;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwIQConfigRspCb_SDK::~ARI_IBIStwIQConfigRspCb_SDK(AriSdk::ARI_IBIStwIQConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C000;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwIQConfigRspCb_SDK::~ARI_IBIStwIQConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwIQConfigRspCb_SDK::pack(AriSdk::ARI_IBIStwIQConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwIQConfigRspCb_SDK::unpack(AriSdk::ARI_IBIStwIQConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BBEC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwIQConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwIQConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -649494528;
}

double AriSdk::ARI_IBIStwIncomingDataIndCb_SDK::ARI_IBIStwIncomingDataIndCb_SDK(AriSdk::ARI_IBIStwIncomingDataIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9838000, 0);
  *(_QWORD *)v1 = &off_24C92C038;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9838000, 0);
  *(_QWORD *)v1 = &off_24C92C038;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIStwIncomingDataIndCb_SDK::ARI_IBIStwIncomingDataIndCb_SDK(AriSdk::ARI_IBIStwIncomingDataIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C038;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C038;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIStwIncomingDataIndCb_SDK::~ARI_IBIStwIncomingDataIndCb_SDK(AriSdk::ARI_IBIStwIncomingDataIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92C038;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwIncomingDataIndCb_SDK::~ARI_IBIStwIncomingDataIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwIncomingDataIndCb_SDK::pack(AriSdk::ARI_IBIStwIncomingDataIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwIncomingDataIndCb_SDK::unpack(AriSdk::ARI_IBIStwIncomingDataIndCb_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  void *v6;
  __n128 __p;
  uint64_t v9;
  size_t __sz;
  BOOL v11;

  __p.n128_u8[0] = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v11 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x400uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1024, &v11, &__sz);
  if (!(_DWORD)v3 && v11)
  {
    v9 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,1024ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E2BC340(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwIncomingDataIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwIncomingDataIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645693440;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK::ARI_IBIStwInitiateRegistrationReq_SDK(AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8880000, 0);
  *(_QWORD *)result = &off_24C92C070;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8880000, 0);
  *(_QWORD *)result = &off_24C92C070;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK::ARI_IBIStwInitiateRegistrationReq_SDK(AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C070;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C070;
  return result;
}

void AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK::~ARI_IBIStwInitiateRegistrationReq_SDK(AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK::pack(AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK::unpack(AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwInitiateRegistrationReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662175744;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK::ARI_IBIStwInitiateRegistrationRspCb_SDK(AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9080000, 0);
  *(_QWORD *)result = &off_24C92C0A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9080000, 0);
  *(_QWORD *)result = &off_24C92C0A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK::ARI_IBIStwInitiateRegistrationRspCb_SDK(AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C0A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C0A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK::~ARI_IBIStwInitiateRegistrationRspCb_SDK(AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C0A8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK::~ARI_IBIStwInitiateRegistrationRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK::pack(AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK::unpack(AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BC884(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwInitiateRegistrationRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653787136;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK::ARI_IBIStwMmcDumpConfigReq_SDK(AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8CA0000, 0);
  *(_QWORD *)result = &off_24C92C0E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8CA0000, 0);
  *(_QWORD *)result = &off_24C92C0E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK::ARI_IBIStwMmcDumpConfigReq_SDK(AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C0E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C0E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK::~ARI_IBIStwMmcDumpConfigReq_SDK(AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C0E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK::~ARI_IBIStwMmcDumpConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK::pack(AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK::unpack(AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2BCBD4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwMmcDumpConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -657850368;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK::ARI_IBIStwMmcDumpConfigRspCb_SDK(AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD94A0000, 0);
  *(_QWORD *)result = &off_24C92C118;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD94A0000, 0);
  *(_QWORD *)result = &off_24C92C118;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK::ARI_IBIStwMmcDumpConfigRspCb_SDK(AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C118;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C118;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK::~ARI_IBIStwMmcDumpConfigRspCb_SDK(AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C118;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK::~ARI_IBIStwMmcDumpConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK::pack(AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK::unpack(AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BCF34(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwMmcDumpConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -649461760;
}

double AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK::ARI_IBIStwOverrideConcurTmrReq_SDK(AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C90000, 0);
  *(_QWORD *)v1 = &off_24C92C150;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C90000, 0);
  *(_QWORD *)v1 = &off_24C92C150;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK::ARI_IBIStwOverrideConcurTmrReq_SDK(AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C150;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C150;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK::~ARI_IBIStwOverrideConcurTmrReq_SDK(AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)this = &off_24C92C150;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  v8 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  v9 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  v10 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK::~ARI_IBIStwOverrideConcurTmrReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK::pack(AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 2uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 2uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 2uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 2uLL, 0), !(_DWORD)result))
                  {
                    result = 0;
                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK::unpack(AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _WORD *v7;
  _WORD *v8;
  _WORD *v9;
  _WORD *v10;
  _WORD *v11;
  _WORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 2, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v21 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v20 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v19 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v18 = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v17 = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 2, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  }
  v16 = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 2, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  }
  v15 = 0;
  v11 = (_WORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 2, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  }
  v14 = 0;
  v12 = (_WORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 2, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2BD880(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwOverrideConcurTmrReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -657915904;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK::ARI_IBIStwOverrideConcurTmrRspCb_SDK(AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9490000, 0);
  *(_QWORD *)result = &off_24C92C188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9490000, 0);
  *(_QWORD *)result = &off_24C92C188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK::ARI_IBIStwOverrideConcurTmrRspCb_SDK(AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C188;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK::~ARI_IBIStwOverrideConcurTmrRspCb_SDK(AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C188;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK::~ARI_IBIStwOverrideConcurTmrRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK::pack(AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK::unpack(AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BDC08(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwOverrideConcurTmrRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -649527296;
}

double AriSdk::ARI_IBIStwOverrideConfigReq_SDK::ARI_IBIStwOverrideConfigReq_SDK(AriSdk::ARI_IBIStwOverrideConfigReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C80000, 0);
  *(_QWORD *)v1 = &off_24C92C1C0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C80000, 0);
  *(_QWORD *)v1 = &off_24C92C1C0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwOverrideConfigReq_SDK::ARI_IBIStwOverrideConfigReq_SDK(AriSdk::ARI_IBIStwOverrideConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C1C0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C1C0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwOverrideConfigReq_SDK::~ARI_IBIStwOverrideConfigReq_SDK(AriSdk::ARI_IBIStwOverrideConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_QWORD *)this = &off_24C92C1C0;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  v9 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4000313F17);
  v10 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4000313F17);
  v11 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwOverrideConfigReq_SDK::~ARI_IBIStwOverrideConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwOverrideConfigReq_SDK::pack(AriSdk::ARI_IBIStwOverrideConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
                {
                  v13 = (const void *)*((_QWORD *)this + 16);
                  if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 4uLL, 0), !(_DWORD)result))
                  {
                    v14 = (const void *)*((_QWORD *)this + 17);
                    if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v14, 4uLL, 0), !(_DWORD)result))
                    {
                      result = 0;
                      *a2 = (AriMsg *)*((_QWORD *)this + 6);
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwOverrideConfigReq_SDK::unpack(AriSdk::ARI_IBIStwOverrideConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE *v7;
  _DWORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  _DWORD *v17;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;
  BOOL v23;
  BOOL v24;
  BOOL v25;
  BOOL v26;
  BOOL v27;
  BOOL v28;

  v28 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v28, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v28;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v27 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 8, &v27, 0);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  }
  v26 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v26, 0);
  if ((_DWORD)v3 || !v26)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  v25 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, &v25, 0);
  if ((_DWORD)v3 || !v25)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v24 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v24, 0);
  if ((_DWORD)v3 || !v24)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v23 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v23, 0);
  if ((_DWORD)v3 || !v23)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v22 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v22, 0);
  if ((_DWORD)v3 || !v22)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = (_DWORD *)operator new();
    *v11 = *v10;
    v12 = *((_QWORD *)this + 14);
    *((_QWORD *)this + 14) = v11;
    if (v12)
      MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  v21 = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v13, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  v20 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v14, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v15 = (_DWORD *)operator new();
    *v15 = *v14;
    v16 = *((_QWORD *)this + 16);
    *((_QWORD *)this + 16) = v15;
    if (v16)
      MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  v19 = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v17, 4, &v19, 0);
  if (!(_DWORD)v3 && v19)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v17);
  MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  return v3;
}

void sub_20E2BE698(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwOverrideConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwOverrideConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -657981440;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK::ARI_IBIStwOverrideConfigRspCb_SDK(AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9480000, 0);
  *(_QWORD *)result = &off_24C92C1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9480000, 0);
  *(_QWORD *)result = &off_24C92C1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK::ARI_IBIStwOverrideConfigRspCb_SDK(AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C1F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK::~ARI_IBIStwOverrideConfigRspCb_SDK(AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C1F8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK::~ARI_IBIStwOverrideConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK::pack(AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK::unpack(AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BEA48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwOverrideConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -649592832;
}

double AriSdk::ARI_IBIStwOverrideTmrReq_SDK::ARI_IBIStwOverrideTmrReq_SDK(AriSdk::ARI_IBIStwOverrideTmrReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C88000, 0);
  *(_QWORD *)v1 = &off_24C92C230;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8C88000, 0);
  *(_QWORD *)v1 = &off_24C92C230;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwOverrideTmrReq_SDK::ARI_IBIStwOverrideTmrReq_SDK(AriSdk::ARI_IBIStwOverrideTmrReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C230;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C230;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwOverrideTmrReq_SDK::~ARI_IBIStwOverrideTmrReq_SDK(AriSdk::ARI_IBIStwOverrideTmrReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C92C230;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwOverrideTmrReq_SDK::~ARI_IBIStwOverrideTmrReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwOverrideTmrReq_SDK::pack(AriSdk::ARI_IBIStwOverrideTmrReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 2uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwOverrideTmrReq_SDK::unpack(AriSdk::ARI_IBIStwOverrideTmrReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  _WORD *v5;
  _WORD *v6;
  _WORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 2, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v11 = 0;
  v5 = (_WORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 2, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  }
  v10 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v9 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2BEF58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwOverrideTmrReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwOverrideTmrReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -657948672;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK::ARI_IBIStwOverrideTmrRspCb_SDK(AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9488000, 0);
  *(_QWORD *)result = &off_24C92C268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9488000, 0);
  *(_QWORD *)result = &off_24C92C268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK::ARI_IBIStwOverrideTmrRspCb_SDK(AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C268;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK::~ARI_IBIStwOverrideTmrRspCb_SDK(AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C268;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK::~ARI_IBIStwOverrideTmrRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK::pack(AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK::unpack(AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2BF2C4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwOverrideTmrRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -649560064;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwQueryReq_SDK::ARI_IBIStwQueryReq_SDK(AriSdk::ARI_IBIStwQueryReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8CA8000, 0);
  *(_QWORD *)result = &off_24C92C2A0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8CA8000, 0);
  *(_QWORD *)result = &off_24C92C2A0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwQueryReq_SDK::ARI_IBIStwQueryReq_SDK(AriSdk::ARI_IBIStwQueryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C2A0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C2A0;
  return result;
}

void AriSdk::ARI_IBIStwQueryReq_SDK::~ARI_IBIStwQueryReq_SDK(AriSdk::ARI_IBIStwQueryReq_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwQueryReq_SDK::pack(AriSdk::ARI_IBIStwQueryReq_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwQueryReq_SDK::unpack(AriSdk::ARI_IBIStwQueryReq_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwQueryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwQueryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -657817600;
}

double AriSdk::ARI_IBIStwQueryRspCb_SDK::ARI_IBIStwQueryRspCb_SDK(AriSdk::ARI_IBIStwQueryRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD94A8000, 0);
  *(_QWORD *)v1 = &off_24C92C2D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD94A8000, 0);
  *(_QWORD *)v1 = &off_24C92C2D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIStwQueryRspCb_SDK::ARI_IBIStwQueryRspCb_SDK(AriSdk::ARI_IBIStwQueryRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C2D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C2D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIStwQueryRspCb_SDK::~ARI_IBIStwQueryRspCb_SDK(AriSdk::ARI_IBIStwQueryRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C92C2D8;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwQueryRspCb_SDK::~ARI_IBIStwQueryRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwQueryRspCb_SDK::pack(AriSdk::ARI_IBIStwQueryRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwQueryRspCb_SDK::unpack(AriSdk::ARI_IBIStwQueryRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v15 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v14 = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 1, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  v13 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v12 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E2BFC24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwQueryRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwQueryRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -649428992;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK::ARI_IBIStwRequestStateChangeIndCb_SDK(AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9810000, 0);
  *(_QWORD *)result = &off_24C92C310;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9810000, 0);
  *(_QWORD *)result = &off_24C92C310;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK::ARI_IBIStwRequestStateChangeIndCb_SDK(AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C310;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C310;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK::~ARI_IBIStwRequestStateChangeIndCb_SDK(AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92C310;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK::~ARI_IBIStwRequestStateChangeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK::pack(AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK::unpack(AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v5 = (_DWORD *)operator new();
    *v5 = *v2;
    v6 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2C00CC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwRequestStateChangeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645857280;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwResumeReq_SDK::ARI_IBIStwResumeReq_SDK(AriSdk::ARI_IBIStwResumeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8820000, 0);
  *(_QWORD *)result = &off_24C92C348;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8820000, 0);
  *(_QWORD *)result = &off_24C92C348;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwResumeReq_SDK::ARI_IBIStwResumeReq_SDK(AriSdk::ARI_IBIStwResumeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C348;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C348;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwResumeReq_SDK::~ARI_IBIStwResumeReq_SDK(AriSdk::ARI_IBIStwResumeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92C348;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4015033FCELL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4044B5EFC8);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4042A86FECLL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwResumeReq_SDK::~ARI_IBIStwResumeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwResumeReq_SDK::pack(AriSdk::ARI_IBIStwResumeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 0x84uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 0x88uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0x984uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwResumeReq_SDK::unpack(AriSdk::ARI_IBIStwResumeReq_SDK *this)
{
  _OWORD *v2;
  uint64_t v3;
  _OWORD *v4;
  void *v5;
  BOOL v7;
  BOOL v8;
  BOOL v9;

  v9 = 0;
  v2 = (_OWORD *)operator new();
  *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  v2[3] = 0u;
  v2[4] = 0u;
  v2[5] = 0u;
  v2[6] = 0u;
  v2[7] = 0u;
  *((_DWORD *)v2 + 32) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 132, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4042A86FECLL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwGpsParam>::operator=<IBIStwGpsParam&,void>((uint64_t *)this + 8, (uint64_t)v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4042A86FECLL);
  }
  v8 = 0;
  v4 = (_OWORD *)operator new();
  *v4 = 0u;
  v4[1] = 0u;
  v4[2] = 0u;
  v4[3] = 0u;
  v4[4] = 0u;
  v4[5] = 0u;
  v4[6] = 0u;
  v4[7] = 0u;
  *((_QWORD *)v4 + 16) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v4, 136, &v8, 0);
  if ((_DWORD)v3 || !v8)
  {
    MEMORY[0x212BB9B60](v4, 0x1000C4044B5EFC8);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBIStwFreqList>::operator=<IBIStwFreqList&,void>((uint64_t *)this + 9, (uint64_t)v4);
    MEMORY[0x212BB9B60](v4, 0x1000C4044B5EFC8);
  }
  v7 = 0;
  v5 = (void *)operator new();
  bzero(v5, 0x984uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 2436, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBIStwGnssHeatMapParam>::operator=<IBIStwGnssHeatMapParam&,void>((uint64_t *)this + 10, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4015033FCELL);
  return v3;
}

void sub_20E2C0530(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4015033FCELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwResumeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwResumeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662568960;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwResumeRspCb_SDK::ARI_IBIStwResumeRspCb_SDK(AriSdk::ARI_IBIStwResumeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9020000, 0);
  *(_QWORD *)result = &off_24C92C380;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9020000, 0);
  *(_QWORD *)result = &off_24C92C380;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwResumeRspCb_SDK::ARI_IBIStwResumeRspCb_SDK(AriSdk::ARI_IBIStwResumeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C380;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C380;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwResumeRspCb_SDK::~ARI_IBIStwResumeRspCb_SDK(AriSdk::ARI_IBIStwResumeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C380;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwResumeRspCb_SDK::~ARI_IBIStwResumeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwResumeRspCb_SDK::pack(AriSdk::ARI_IBIStwResumeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwResumeRspCb_SDK::unpack(AriSdk::ARI_IBIStwResumeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C08A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwResumeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwResumeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654180352;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK::ARI_IBIStwSarBackoffTimeReq_SDK(AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8900000, 0);
  *(_QWORD *)result = &off_24C92C3B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8900000, 0);
  *(_QWORD *)result = &off_24C92C3B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK::ARI_IBIStwSarBackoffTimeReq_SDK(AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C3B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C3B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK::~ARI_IBIStwSarBackoffTimeReq_SDK(AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C92C3B8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK::~ARI_IBIStwSarBackoffTimeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK::pack(AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK::unpack(AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 8, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E2C0B24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSarBackoffTimeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -661651456;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK::ARI_IBIStwSarBackoffTimeRspCb_SDK(AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9100000, 0);
  *(_QWORD *)result = &off_24C92C3F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9100000, 0);
  *(_QWORD *)result = &off_24C92C3F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK::ARI_IBIStwSarBackoffTimeRspCb_SDK(AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C3F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C3F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK::~ARI_IBIStwSarBackoffTimeRspCb_SDK(AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C3F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK::~ARI_IBIStwSarBackoffTimeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK::pack(AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK::unpack(AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C0E6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSarBackoffTimeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653262848;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSecConfigReq_SDK::ARI_IBIStwSecConfigReq_SDK(AriSdk::ARI_IBIStwSecConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8828000, 0);
  *(_QWORD *)result = &off_24C92C428;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8828000, 0);
  *(_QWORD *)result = &off_24C92C428;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSecConfigReq_SDK::ARI_IBIStwSecConfigReq_SDK(AriSdk::ARI_IBIStwSecConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C428;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C428;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSecConfigReq_SDK::~ARI_IBIStwSecConfigReq_SDK(AriSdk::ARI_IBIStwSecConfigReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C92C428;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C400A747E1ELL);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSecConfigReq_SDK::~ARI_IBIStwSecConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSecConfigReq_SDK::pack(AriSdk::ARI_IBIStwSecConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 0x28uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSecConfigReq_SDK::unpack(AriSdk::ARI_IBIStwSecConfigReq_SDK *this)
{
  _OWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_OWORD *)operator new();
  *v2 = 0u;
  v2[1] = 0u;
  *((_QWORD *)v2 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 40, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<IBIStwSecurityParam>::operator=<IBIStwSecurityParam&,void>((uint64_t *)this + 8, (uint64_t)v2);
  MEMORY[0x212BB9B60](v2, 0x1000C400A747E1ELL);
  return v3;
}

void sub_20E2C10F8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C400A747E1ELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSecConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSecConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662536192;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSecConfigRspCb_SDK::ARI_IBIStwSecConfigRspCb_SDK(AriSdk::ARI_IBIStwSecConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9028000, 0);
  *(_QWORD *)result = &off_24C92C460;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9028000, 0);
  *(_QWORD *)result = &off_24C92C460;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSecConfigRspCb_SDK::ARI_IBIStwSecConfigRspCb_SDK(AriSdk::ARI_IBIStwSecConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C460;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C460;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSecConfigRspCb_SDK::~ARI_IBIStwSecConfigRspCb_SDK(AriSdk::ARI_IBIStwSecConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C460;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSecConfigRspCb_SDK::~ARI_IBIStwSecConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSecConfigRspCb_SDK::pack(AriSdk::ARI_IBIStwSecConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSecConfigRspCb_SDK::unpack(AriSdk::ARI_IBIStwSecConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C144C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSecConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSecConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654147584;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK::ARI_IBIStwSecConfigUpdNeededIndCb_SDK(AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9818000, 0);
  *(_QWORD *)result = &off_24C92C498;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9818000, 0);
  *(_QWORD *)result = &off_24C92C498;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK::ARI_IBIStwSecConfigUpdNeededIndCb_SDK(AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C498;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C498;
  return result;
}

void AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK::~ARI_IBIStwSecConfigUpdNeededIndCb_SDK(AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK::pack(AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK::unpack(AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSecConfigUpdNeededIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645824512;
}

double AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK::ARI_IBIStwSecConfigUsageIndCb_SDK(AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9820000, 0);
  *(_QWORD *)v1 = &off_24C92C4D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9820000, 0);
  *(_QWORD *)v1 = &off_24C92C4D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK::ARI_IBIStwSecConfigUsageIndCb_SDK(AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C4D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C4D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK::~ARI_IBIStwSecConfigUsageIndCb_SDK(AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C4D0;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C403E1C8BA9);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK::~ARI_IBIStwSecConfigUsageIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK::pack(AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 0xCuLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK::unpack(AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *(_QWORD *)v2 = 0;
  v2[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 12, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBINetEnabledRats>::operator=<IBINetEnabledRats&,void>((uint64_t *)this + 8, (uint64_t)v2);
    MEMORY[0x212BB9B60](v2, 0x1000C403E1C8BA9);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (_OWORD *)operator new[]();
  *v5 = 0u;
  v5[1] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 32, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,32ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E2C1994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSecConfigUsageIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645791744;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendAckReq_SDK::ARI_IBIStwSendAckReq_SDK(AriSdk::ARI_IBIStwSendAckReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8840000, 0);
  *(_QWORD *)result = &off_24C92C508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8840000, 0);
  *(_QWORD *)result = &off_24C92C508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendAckReq_SDK::ARI_IBIStwSendAckReq_SDK(AriSdk::ARI_IBIStwSendAckReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C508;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSendAckReq_SDK::~ARI_IBIStwSendAckReq_SDK(AriSdk::ARI_IBIStwSendAckReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C92C508;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendAckReq_SDK::~ARI_IBIStwSendAckReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendAckReq_SDK::pack(AriSdk::ARI_IBIStwSendAckReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 2uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendAckReq_SDK::unpack(AriSdk::ARI_IBIStwSendAckReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 2, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2C1C44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendAckReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendAckReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662437888;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendAckRspCb_SDK::ARI_IBIStwSendAckRspCb_SDK(AriSdk::ARI_IBIStwSendAckRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9040000, 0);
  *(_QWORD *)result = &off_24C92C540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9040000, 0);
  *(_QWORD *)result = &off_24C92C540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendAckRspCb_SDK::ARI_IBIStwSendAckRspCb_SDK(AriSdk::ARI_IBIStwSendAckRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C540;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSendAckRspCb_SDK::~ARI_IBIStwSendAckRspCb_SDK(AriSdk::ARI_IBIStwSendAckRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C540;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendAckRspCb_SDK::~ARI_IBIStwSendAckRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendAckRspCb_SDK::pack(AriSdk::ARI_IBIStwSendAckRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendAckRspCb_SDK::unpack(AriSdk::ARI_IBIStwSendAckRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C1F8C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendAckRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendAckRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654049280;
}

double AriSdk::ARI_IBIStwSendFileReq_SDK::ARI_IBIStwSendFileReq_SDK(AriSdk::ARI_IBIStwSendFileReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8878000, 0);
  *(_QWORD *)v1 = &off_24C92C578;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8878000, 0);
  *(_QWORD *)v1 = &off_24C92C578;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwSendFileReq_SDK::ARI_IBIStwSendFileReq_SDK(AriSdk::ARI_IBIStwSendFileReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C578;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C578;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwSendFileReq_SDK::~ARI_IBIStwSendFileReq_SDK(AriSdk::ARI_IBIStwSendFileReq_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C578;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendFileReq_SDK::~ARI_IBIStwSendFileReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendFileReq_SDK::pack(AriSdk::ARI_IBIStwSendFileReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendFileReq_SDK::unpack(AriSdk::ARI_IBIStwSendFileReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  void **v6;
  _BYTE *v7;
  void *v8;
  const char *v9;
  BOOL *v10;
  void *v11;
  void *__p;
  _BYTE *v14;
  uint64_t v15;
  size_t __sz;
  BOOL v17;
  BOOL v18[8];
  char v19;

  v18[0] = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 2, v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v17 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x406uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1030, &v17, &__sz);
  if (!(_DWORD)v3 && v17)
  {
    v14 = 0;
    v15 = 0;
    __p = 0;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    v6 = (void **)((char *)this + 72);
    v8 = __p;
    v7 = v14;
    if ((unint64_t)(v14 - (_BYTE *)__p) < 0x407)
    {
      v11 = *v6;
      if (*v6)
      {
        *((_QWORD *)this + 10) = v11;
        operator delete(v11);
        *v6 = 0;
        *((_QWORD *)this + 10) = 0;
        *((_QWORD *)this + 11) = 0;
        v8 = __p;
        v7 = v14;
      }
      *((_QWORD *)this + 9) = v8;
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v15;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v18);
      if (v19 >= 0)
        v10 = v18;
      else
        v10 = *(BOOL **)v18;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v9, v10, 360, (char *)this + 72, v14 - (_BYTE *)__p, 1030);
      if (v19 < 0)
        operator delete(*(void **)v18);
      if (__p)
      {
        v14 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E2C23C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendFileReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendFileReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662208512;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendFileRspCb_SDK::ARI_IBIStwSendFileRspCb_SDK(AriSdk::ARI_IBIStwSendFileRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9078000, 0);
  *(_QWORD *)result = &off_24C92C5B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9078000, 0);
  *(_QWORD *)result = &off_24C92C5B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendFileRspCb_SDK::ARI_IBIStwSendFileRspCb_SDK(AriSdk::ARI_IBIStwSendFileRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C5B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C5B0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSendFileRspCb_SDK::~ARI_IBIStwSendFileRspCb_SDK(AriSdk::ARI_IBIStwSendFileRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92C5B0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendFileRspCb_SDK::~ARI_IBIStwSendFileRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendFileRspCb_SDK::pack(AriSdk::ARI_IBIStwSendFileRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendFileRspCb_SDK::unpack(AriSdk::ARI_IBIStwSendFileRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2C284C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendFileRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendFileRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653819904;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK::ARI_IBIStwSendFileStatusIndCb_SDK(AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9858000, 0);
  *(_QWORD *)result = &off_24C92C5E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9858000, 0);
  *(_QWORD *)result = &off_24C92C5E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK::ARI_IBIStwSendFileStatusIndCb_SDK(AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C5E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C5E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK::~ARI_IBIStwSendFileStatusIndCb_SDK(AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C5E8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK::~ARI_IBIStwSendFileStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK::pack(AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 1uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK::unpack(AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK *this)
{
  _BYTE *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_BYTE *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 1, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C2BF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendFileStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645562368;
}

double AriSdk::ARI_IBIStwSendMsgReq_SDK::ARI_IBIStwSendMsgReq_SDK(AriSdk::ARI_IBIStwSendMsgReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8838000, 0);
  *(_QWORD *)v1 = &off_24C92C620;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8838000, 0);
  *(_QWORD *)v1 = &off_24C92C620;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwSendMsgReq_SDK::ARI_IBIStwSendMsgReq_SDK(AriSdk::ARI_IBIStwSendMsgReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C620;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C620;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwSendMsgReq_SDK::~ARI_IBIStwSendMsgReq_SDK(AriSdk::ARI_IBIStwSendMsgReq_SDK *this)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;

  *(_QWORD *)this = &off_24C92C620;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 12);
  if (v3)
  {
    *((_QWORD *)this + 13) = v3;
    operator delete(v3);
  }
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = (void *)*((_QWORD *)this + 8);
  if (v5)
  {
    *((_QWORD *)this + 9) = v5;
    operator delete(v5);
  }
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendMsgReq_SDK::~ARI_IBIStwSendMsgReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendMsgReq_SDK::pack(AriSdk::ARI_IBIStwSendMsgReq_SDK *this, AriMsg **a2)
{
  _BYTE *v4;
  _BYTE *v5;
  BOOL v6;
  uint64_t result;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  BOOL v11;
  const void *v12;

  *a2 = 0;
  v4 = (_BYTE *)*((_QWORD *)this + 8);
  v5 = (_BYTE *)*((_QWORD *)this + 9);
  if (v4)
    v6 = v4 == v5;
  else
    v6 = 1;
  if (v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, v5 - v4, 0), !(_DWORD)result))
  {
    v8 = (const void *)*((_QWORD *)this + 11);
    if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v8, 1uLL, 0), !(_DWORD)result))
    {
      v9 = (_BYTE *)*((_QWORD *)this + 12);
      v10 = (_BYTE *)*((_QWORD *)this + 13);
      v11 = !v9 || v9 == v10;
      if (v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v9, v10 - v9, 0), !(_DWORD)result))
      {
        v12 = (const void *)*((_QWORD *)this + 15);
        if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v12, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendMsgReq_SDK::unpack(AriSdk::ARI_IBIStwSendMsgReq_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v2 = (_QWORD *)operator new[]();
  *v2 = 0;
  v2[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 16, &v14, &__sz);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v2, (uint64_t)v2 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 64), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  v6[5] = 0u;
  v6[6] = 0u;
  v6[7] = 0u;
  v6[8] = 0u;
  v6[9] = 0u;
  v6[10] = 0u;
  v6[11] = 0u;
  v6[12] = 0u;
  v6[13] = 0u;
  v6[14] = 0u;
  *(_OWORD *)((char *)v6 + 239) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 255, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,255ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3)
  {
    if (__p.n128_u8[0])
    {
      v8 = (_DWORD *)operator new();
      *v8 = *v7;
      v9 = *((_QWORD *)this + 15);
      *((_QWORD *)this + 15) = v8;
      if (v9)
        MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    }
  }
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2C31E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendMsgReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendMsgReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662470656;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendMsgRspCb_SDK::ARI_IBIStwSendMsgRspCb_SDK(AriSdk::ARI_IBIStwSendMsgRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9038000, 0);
  *(_QWORD *)result = &off_24C92C658;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9038000, 0);
  *(_QWORD *)result = &off_24C92C658;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSendMsgRspCb_SDK::ARI_IBIStwSendMsgRspCb_SDK(AriSdk::ARI_IBIStwSendMsgRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C658;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C658;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSendMsgRspCb_SDK::~ARI_IBIStwSendMsgRspCb_SDK(AriSdk::ARI_IBIStwSendMsgRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C658;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendMsgRspCb_SDK::~ARI_IBIStwSendMsgRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendMsgRspCb_SDK::pack(AriSdk::ARI_IBIStwSendMsgRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendMsgRspCb_SDK::unpack(AriSdk::ARI_IBIStwSendMsgRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C3594(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendMsgRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendMsgRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654082048;
}

double AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK::ARI_IBIStwSendMsgStatusIndCb_SDK(AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9830000, 0);
  *(_QWORD *)v1 = &off_24C92C690;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9830000, 0);
  *(_QWORD *)v1 = &off_24C92C690;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK::ARI_IBIStwSendMsgStatusIndCb_SDK(AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C690;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C690;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK::~ARI_IBIStwSendMsgStatusIndCb_SDK(AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK *this)
{
  uint64_t v2;
  void *v3;

  *(_QWORD *)this = &off_24C92C690;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = (void *)*((_QWORD *)this + 8);
  if (v3)
  {
    *((_QWORD *)this + 9) = v3;
    operator delete(v3);
  }
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK::~ARI_IBIStwSendMsgStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK::pack(AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK *this, AriMsg **a2)
{
  _BYTE *v4;
  _BYTE *v5;
  BOOL v6;
  uint64_t result;
  const void *v8;

  *a2 = 0;
  v4 = (_BYTE *)*((_QWORD *)this + 8);
  v5 = (_BYTE *)*((_QWORD *)this + 9);
  if (v4)
    v6 = v4 == v5;
  else
    v6 = 1;
  if (v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, v5 - v4, 0), !(_DWORD)result))
  {
    v8 = (const void *)*((_QWORD *)this + 11);
    if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v8, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK::unpack(AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK *this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v2 = (_QWORD *)operator new[]();
  *v2 = 0;
  v2[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 16, &v10, &__sz);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v2, (uint64_t)v2 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,16ul>::operator=((std::vector<int> *)((char *)this + 64), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v2, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C3924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSendMsgStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645726208;
}

double AriSdk::ARI_IBIStwServiceInfoIndCb_SDK::ARI_IBIStwServiceInfoIndCb_SDK(AriSdk::ARI_IBIStwServiceInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9828000, 0);
  *(_QWORD *)v1 = &off_24C92C6C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9828000, 0);
  *(_QWORD *)v1 = &off_24C92C6C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBIStwServiceInfoIndCb_SDK::ARI_IBIStwServiceInfoIndCb_SDK(AriSdk::ARI_IBIStwServiceInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C6C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C6C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBIStwServiceInfoIndCb_SDK::~ARI_IBIStwServiceInfoIndCb_SDK(AriSdk::ARI_IBIStwServiceInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C92C6C8;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwServiceInfoIndCb_SDK::~ARI_IBIStwServiceInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwServiceInfoIndCb_SDK::pack(AriSdk::ARI_IBIStwServiceInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 1uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwServiceInfoIndCb_SDK::unpack(AriSdk::ARI_IBIStwServiceInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  _BYTE *v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  _DWORD *v14;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;
  BOOL v21;
  BOOL v22;

  v22 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v22, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v22;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v21 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v21, 0);
  if ((_DWORD)v3 || !v21)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v20 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v20, 0);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v19 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v8 = (_DWORD *)operator new();
    *v8 = *v7;
    v9 = *((_QWORD *)this + 11);
    *((_QWORD *)this + 11) = v8;
    if (v9)
      MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v18 = 0;
  v10 = (_BYTE *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 1, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 12, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  }
  v17 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = (_DWORD *)operator new();
    *v12 = *v11;
    v13 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v12;
    if (v13)
      MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  v16 = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v14, 4, &v16, 0);
  if (!(_DWORD)v3 && v16)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v14);
  MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  return v3;
}

void sub_20E2C4174(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwServiceInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwServiceInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645758976;
}

double AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK::ARI_IBIStwServiceOutageInfoIndCb_SDK(AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9868000, 0);
  *(_QWORD *)v1 = &off_24C92C700;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9868000, 0);
  *(_QWORD *)v1 = &off_24C92C700;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK::ARI_IBIStwServiceOutageInfoIndCb_SDK(AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C700;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C700;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK::~ARI_IBIStwServiceOutageInfoIndCb_SDK(AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92C700;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK::~ARI_IBIStwServiceOutageInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK::pack(AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK::unpack(AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  unint64_t v17;
  BOOL v18;
  void *__p[2];
  char v20;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x500uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1280, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    if (v17 >= 0x14)
    {
      v9 = v17 / 0x14;
      v10 = 20 * (v17 / 0x14);
      v7 = (char *)operator new(v10);
      v8 = &v7[20 * v9];
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0xCCCCCCCCCCCCCCCDLL * ((v8 - v7) >> 2);
    if (v12 < 0x41)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v20 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, v11, v12, 64);
      if (v20 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80B4868423);
  return v3;
}

void sub_20E2C46FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80B4868423);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwServiceOutageInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645496832;
}

double AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK::ARI_IBIStwSetBroadcastInfoBlobReq_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8908000, 0);
  *(_QWORD *)v1 = &off_24C92C738;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD8908000, 0);
  *(_QWORD *)v1 = &off_24C92C738;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK::ARI_IBIStwSetBroadcastInfoBlobReq_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C738;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C738;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK::~ARI_IBIStwSetBroadcastInfoBlobReq_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C738;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK::~ARI_IBIStwSetBroadcastInfoBlobReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK::pack(AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK::unpack(AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x1000uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4096, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,4096ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E2C4AE8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSetBroadcastInfoBlobReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -661618688;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9108000, 0);
  *(_QWORD *)result = &off_24C92C770;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9108000, 0);
  *(_QWORD *)result = &off_24C92C770;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C770;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C770;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK::~ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C770;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK::~ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK::pack(AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK::unpack(AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C4E78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSetBroadcastInfoBlobRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653230080;
}

double AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9860000, 0);
  *(_QWORD *)v1 = &off_24C92C7A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0xD9860000, 0);
  *(_QWORD *)v1 = &off_24C92C7A8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C7A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C92C7A8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK::~ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK(AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C7A8;
  v2 = (void *)*((_QWORD *)this + 9);
  if (v2)
  {
    *((_QWORD *)this + 10) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK::~ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK::pack(AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  _BYTE *v6;
  _BYTE *v7;
  BOOL v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 2uLL, 0), !(_DWORD)result))
  {
    v6 = (_BYTE *)*((_QWORD *)this + 9);
    v7 = (_BYTE *)*((_QWORD *)this + 10);
    if (v6)
      v8 = v6 == v7;
    else
      v8 = 1;
    if (v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, v7 - v6, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK::unpack(AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK *this)
{
  _WORD *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  __n128 __p;
  uint64_t v8;
  size_t __sz;
  BOOL v10;

  __p.n128_u8[0] = 0;
  v2 = (_WORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  }
  v10 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v5 = (void *)operator new[]();
  bzero(v5, 0x1000uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4096, &v10, &__sz);
  if (!(_DWORD)v3 && v10)
  {
    v8 = 0;
    __p = 0uLL;
    std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char *,unsigned char *>(&__p, v5, (uint64_t)v5 + __sz, __sz);
    AriSdk::TlvArray<unsigned char,4096ul>::operator=((std::vector<int> *)this + 3, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
  }
  MEMORY[0x212BB9B48](v5, 0x1000C8077774924);
  return v3;
}

void sub_20E2C520C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v11, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSetBroadcastInfoBlobIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645529600;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK::ARI_IBIStwSetConcurrencyConfigReq_SDK(AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8850000, 0);
  *(_QWORD *)result = &off_24C92C7E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8850000, 0);
  *(_QWORD *)result = &off_24C92C7E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK::ARI_IBIStwSetConcurrencyConfigReq_SDK(AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C7E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C7E0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK::~ARI_IBIStwSetConcurrencyConfigReq_SDK(AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C92C7E0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK::~ARI_IBIStwSetConcurrencyConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK::pack(AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK::unpack(AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2C54BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSetConcurrencyConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662372352;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK::ARI_IBIStwSetConcurrencyConfigRspCb_SDK(AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9050000, 0);
  *(_QWORD *)result = &off_24C92C818;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9050000, 0);
  *(_QWORD *)result = &off_24C92C818;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK::ARI_IBIStwSetConcurrencyConfigRspCb_SDK(AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C818;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C818;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK::~ARI_IBIStwSetConcurrencyConfigRspCb_SDK(AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C818;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK::~ARI_IBIStwSetConcurrencyConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK::pack(AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK::unpack(AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C5804(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSetConcurrencyConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -653983744;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetS4ConfigReq_SDK::ARI_IBIStwSetS4ConfigReq_SDK(AriSdk::ARI_IBIStwSetS4ConfigReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8848000, 0);
  *(_QWORD *)result = &off_24C92C850;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8848000, 0);
  *(_QWORD *)result = &off_24C92C850;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetS4ConfigReq_SDK::ARI_IBIStwSetS4ConfigReq_SDK(AriSdk::ARI_IBIStwSetS4ConfigReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C850;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C850;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSetS4ConfigReq_SDK::~ARI_IBIStwSetS4ConfigReq_SDK(AriSdk::ARI_IBIStwSetS4ConfigReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C92C850;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4000313F17);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40A2380605);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSetS4ConfigReq_SDK::~ARI_IBIStwSetS4ConfigReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSetS4ConfigReq_SDK::pack(AriSdk::ARI_IBIStwSetS4ConfigReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 0x1162uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 8uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSetS4ConfigReq_SDK::unpack(AriSdk::ARI_IBIStwSetS4ConfigReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  BOOL v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (void *)operator new();
  bzero(v2, 0x1162uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4450, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C40A2380605);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v5 = (void *)operator new();
    memcpy(v5, v2, 0x1162uLL);
    v6 = *((_QWORD *)this + 8);
    *((_QWORD *)this + 8) = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C40A2380605);
    MEMORY[0x212BB9B60](v2, 0x1000C40A2380605);
  }
  v13 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v7, 8, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 9, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4000313F17);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2C5CB8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSetS4ConfigReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSetS4ConfigReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662405120;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK::ARI_IBIStwSetS4ConfigRspCb_SDK(AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9048000, 0);
  *(_QWORD *)result = &off_24C92C888;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9048000, 0);
  *(_QWORD *)result = &off_24C92C888;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK::ARI_IBIStwSetS4ConfigRspCb_SDK(AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C888;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C888;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK::~ARI_IBIStwSetS4ConfigRspCb_SDK(AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C888;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK::~ARI_IBIStwSetS4ConfigRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK::pack(AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK::unpack(AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C603C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSetS4ConfigRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654016512;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSuspendReq_SDK::ARI_IBIStwSuspendReq_SDK(AriSdk::ARI_IBIStwSuspendReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8818000, 0);
  *(_QWORD *)result = &off_24C92C8C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD8818000, 0);
  *(_QWORD *)result = &off_24C92C8C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSuspendReq_SDK::ARI_IBIStwSuspendReq_SDK(AriSdk::ARI_IBIStwSuspendReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C8C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C8C0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSuspendReq_SDK::~ARI_IBIStwSuspendReq_SDK(AriSdk::ARI_IBIStwSuspendReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C8C0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSuspendReq_SDK::~ARI_IBIStwSuspendReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSuspendReq_SDK::pack(AriSdk::ARI_IBIStwSuspendReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSuspendReq_SDK::unpack(AriSdk::ARI_IBIStwSuspendReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C63D0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSuspendReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSuspendReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -662601728;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSuspendRspCb_SDK::ARI_IBIStwSuspendRspCb_SDK(AriSdk::ARI_IBIStwSuspendRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9018000, 0);
  *(_QWORD *)result = &off_24C92C8F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9018000, 0);
  *(_QWORD *)result = &off_24C92C8F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwSuspendRspCb_SDK::ARI_IBIStwSuspendRspCb_SDK(AriSdk::ARI_IBIStwSuspendRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C8F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C8F8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIStwSuspendRspCb_SDK::~ARI_IBIStwSuspendRspCb_SDK(AriSdk::ARI_IBIStwSuspendRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92C8F8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIStwSuspendRspCb_SDK::~ARI_IBIStwSuspendRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwSuspendRspCb_SDK::pack(AriSdk::ARI_IBIStwSuspendRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIStwSuspendRspCb_SDK::unpack(AriSdk::ARI_IBIStwSuspendRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2C672C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIStwSuspendRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwSuspendRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -654213120;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK::ARI_IBIStwUnableToFindServiceIndCb_SDK(AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9848000, 0);
  *(_QWORD *)result = &off_24C92C930;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xD9848000, 0);
  *(_QWORD *)result = &off_24C92C930;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK::ARI_IBIStwUnableToFindServiceIndCb_SDK(AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C930;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92C930;
  return result;
}

void AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK::~ARI_IBIStwUnableToFindServiceIndCb_SDK(AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK *this)
{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
}

{
  char *v1;

  *(_QWORD *)this = &unk_24C8DB478;
  v1 = (char *)this + 8;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)v1);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK::pack(AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK *this, AriMsg **a2)
{
  *a2 = 0;
  *a2 = (AriMsg *)*((_QWORD *)this + 6);
  return 0;
}

uint64_t AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK::unpack(AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK *this)
{
  return 0;
}

BOOL AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIStwUnableToFindServiceIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -645627904;
}

uint64_t ARI_IBIInt64_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIInt64_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwCadenceType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwCadenceType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwChannelType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwChannelType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwConnectionStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwConnectionStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwDeActivationReason_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwDeActivationReason_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwFileProcStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwFileProcStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwFreqList_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwFreqList_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwFuzzedLocation_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwFuzzedLocation_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwGnssHeatMapParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwGnssHeatMapParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwGpsParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwGpsParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwPreambleFormat_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwPreambleFormat_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwProtocolMode_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwProtocolMode_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwQosPriority_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwQosPriority_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwRegistrationStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwRegistrationStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwRequestedState_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwRequestedState_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwResult_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwResult_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwS4ConfigData_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwS4ConfigData_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSecurityInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSecurityInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSecurityParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSecurityParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwServiceOutageInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwServiceOutageInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwServiceType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwServiceType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSrvDomainPref_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSrvDomainPref_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSuspendReason_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwSuspendReason_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwTleSegmentInfo_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwTleSegmentInfo_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwTrafficDataRate_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwTrafficDataRate_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwUxCongestionStatus_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIStwUxCongestionStatus_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsAcceptCallReq_SDK::ARI_IBICallCsAcceptCallReq_SDK(AriSdk::ARI_IBICallCsAcceptCallReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8818000u, 0);
  *(_QWORD *)result = &off_24C92FFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8818000u, 0);
  *(_QWORD *)result = &off_24C92FFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsAcceptCallReq_SDK::ARI_IBICallCsAcceptCallReq_SDK(AriSdk::ARI_IBICallCsAcceptCallReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92FFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C92FFF0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsAcceptCallReq_SDK::~ARI_IBICallCsAcceptCallReq_SDK(AriSdk::ARI_IBICallCsAcceptCallReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C92FFF0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsAcceptCallReq_SDK::~ARI_IBICallCsAcceptCallReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsAcceptCallReq_SDK::pack(AriSdk::ARI_IBICallCsAcceptCallReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsAcceptCallReq_SDK::unpack(AriSdk::ARI_IBICallCsAcceptCallReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E2C7220(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsAcceptCallReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsAcceptCallReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142704640;
}

double AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK::ARI_IBICallCsAcceptCallRspCb_SDK(AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9018000u, 0);
  *(_QWORD *)v1 = &off_24C930028;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9018000u, 0);
  *(_QWORD *)v1 = &off_24C930028;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK::ARI_IBICallCsAcceptCallRspCb_SDK(AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930028;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930028;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK::~ARI_IBICallCsAcceptCallRspCb_SDK(AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C930028;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK::~ARI_IBICallCsAcceptCallRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK::pack(AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK::unpack(AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2C7744(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsAcceptCallRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151093248;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsAutoAnswerReq_SDK::ARI_IBICallCsAutoAnswerReq_SDK(AriSdk::ARI_IBICallCsAutoAnswerReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8898000u, 0);
  *(_QWORD *)result = &off_24C930060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8898000u, 0);
  *(_QWORD *)result = &off_24C930060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsAutoAnswerReq_SDK::ARI_IBICallCsAutoAnswerReq_SDK(AriSdk::ARI_IBICallCsAutoAnswerReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930060;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsAutoAnswerReq_SDK::~ARI_IBICallCsAutoAnswerReq_SDK(AriSdk::ARI_IBICallCsAutoAnswerReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930060;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsAutoAnswerReq_SDK::~ARI_IBICallCsAutoAnswerReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsAutoAnswerReq_SDK::pack(AriSdk::ARI_IBICallCsAutoAnswerReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsAutoAnswerReq_SDK::unpack(AriSdk::ARI_IBICallCsAutoAnswerReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2C7C14(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsAutoAnswerReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsAutoAnswerReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143228928;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK::ARI_IBICallCsAutoAnswerRspCb_SDK(AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9098000u, 0);
  *(_QWORD *)result = &off_24C930098;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9098000u, 0);
  *(_QWORD *)result = &off_24C930098;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK::ARI_IBICallCsAutoAnswerRspCb_SDK(AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930098;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930098;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK::~ARI_IBICallCsAutoAnswerRspCb_SDK(AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930098;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK::~ARI_IBICallCsAutoAnswerRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK::pack(AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 8uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK::unpack(AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_QWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 8, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_QWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  return v3;
}

void sub_20E2C8094(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsAutoAnswerRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151617536;
}

double AriSdk::ARI_IBICallCsBurstDtmfReq_SDK::ARI_IBICallCsBurstDtmfReq_SDK(AriSdk::ARI_IBICallCsBurstDtmfReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x88B0000u, 0);
  *(_QWORD *)v1 = &off_24C9300D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x88B0000u, 0);
  *(_QWORD *)v1 = &off_24C9300D0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsBurstDtmfReq_SDK::ARI_IBICallCsBurstDtmfReq_SDK(AriSdk::ARI_IBICallCsBurstDtmfReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9300D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9300D0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsBurstDtmfReq_SDK::~ARI_IBICallCsBurstDtmfReq_SDK(AriSdk::ARI_IBICallCsBurstDtmfReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C9300D0;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 11);
  if (v4)
  {
    *((_QWORD *)this + 12) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsBurstDtmfReq_SDK::~ARI_IBICallCsBurstDtmfReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsBurstDtmfReq_SDK::pack(AriSdk::ARI_IBICallCsBurstDtmfReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsBurstDtmfReq_SDK::unpack(AriSdk::ARI_IBICallCsBurstDtmfReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _OWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v7[8] = 0u;
  v7[9] = 0u;
  v7[10] = 0u;
  v7[11] = 0u;
  v7[12] = 0u;
  v7[13] = 0u;
  v7[14] = 0u;
  *(_OWORD *)((char *)v7 + 239) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 255, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v7, (uint64_t)v7 + __sz, __sz);
    AriSdk::TlvArray<char,255ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E2C87C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<char,255ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x100)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 255);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2C8914(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICallCsBurstDtmfReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsBurstDtmfReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143327232;
}

double AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK::ARI_IBICallCsBurstDtmfRspCb_SDK(AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x90B0000u, 0);
  *(_QWORD *)v1 = &off_24C930108;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x90B0000u, 0);
  *(_QWORD *)v1 = &off_24C930108;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK::ARI_IBICallCsBurstDtmfRspCb_SDK(AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930108;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930108;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK::~ARI_IBICallCsBurstDtmfRspCb_SDK(AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C930108;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK::~ARI_IBICallCsBurstDtmfRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK::pack(AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 1uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK::unpack(AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 1, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  return v3;
}

void sub_20E2C8E08(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsBurstDtmfRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151715840;
}

double AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK::ARI_IBICallCsBurstDtmfIndCb_SDK(AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x98A8000u, 0);
  *(_QWORD *)v1 = &off_24C930140;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x98A8000u, 0);
  *(_QWORD *)v1 = &off_24C930140;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_QWORD *)v1 + 16) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK::ARI_IBICallCsBurstDtmfIndCb_SDK(AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930140;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930140;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_QWORD *)v3 + 16) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK::~ARI_IBICallCsBurstDtmfIndCb_SDK(AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C930140;
  v2 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 12);
  if (v4)
  {
    *((_QWORD *)this + 13) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK::~ARI_IBICallCsBurstDtmfIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK::pack(AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v12, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK::unpack(AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _BYTE *v9;
  _OWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  __n128 __p;
  uint64_t v15;
  size_t __sz;
  BOOL v17;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_BYTE *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  }
  v17 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  v10[5] = 0u;
  v10[6] = 0u;
  v10[7] = 0u;
  v10[8] = 0u;
  v10[9] = 0u;
  v10[10] = 0u;
  v10[11] = 0u;
  v10[12] = 0u;
  v10[13] = 0u;
  v10[14] = 0u;
  *(_OWORD *)((char *)v10 + 239) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 255, &v17, &__sz);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v15 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    AriSdk::TlvArray<char,255ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v12, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  return v3;
}

void sub_20E2C9660(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsBurstDtmfIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 160071680;
}

double AriSdk::ARI_IBICallCsCallStatusIndCb_SDK::ARI_IBICallCsCallStatusIndCb_SDK(AriSdk::ARI_IBICallCsCallStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9878000u, 0);
  *(_QWORD *)v1 = &off_24C930178;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_QWORD *)v1 + 28) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9878000u, 0);
  *(_QWORD *)v1 = &off_24C930178;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  *((_OWORD *)v1 + 11) = 0u;
  *((_OWORD *)v1 + 12) = 0u;
  *((_OWORD *)v1 + 13) = 0u;
  *((_QWORD *)v1 + 28) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsCallStatusIndCb_SDK::ARI_IBICallCsCallStatusIndCb_SDK(AriSdk::ARI_IBICallCsCallStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930178;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_QWORD *)v3 + 28) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930178;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  *((_OWORD *)v3 + 11) = 0u;
  *((_OWORD *)v3 + 12) = 0u;
  *((_OWORD *)v3 + 13) = 0u;
  *((_QWORD *)v3 + 28) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsCallStatusIndCb_SDK::~ARI_IBICallCsCallStatusIndCb_SDK(AriSdk::ARI_IBICallCsCallStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)this = &off_24C930178;
  v2 = *((_QWORD *)this + 28);
  *((_QWORD *)this + 28) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 27);
  *((_QWORD *)this + 27) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 26);
  *((_QWORD *)this + 26) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4005A209FELL);
  v5 = *((_QWORD *)this + 25);
  *((_QWORD *)this + 25) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = (void *)*((_QWORD *)this + 22);
  if (v6)
  {
    *((_QWORD *)this + 23) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4077774924);
  v11 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  v12 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  v13 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  v14 = (void *)*((_QWORD *)this + 12);
  if (v14)
  {
    *((_QWORD *)this + 13) = v14;
    operator delete(v14);
  }
  v15 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v15)
    MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  v16 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v16)
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  v17 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v17)
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  v18 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v18)
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsCallStatusIndCb_SDK::~ARI_IBICallCsCallStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsCallStatusIndCb_SDK::pack(AriSdk::ARI_IBICallCsCallStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  _BYTE *v9;
  _BYTE *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;
  _BYTE *v18;
  _BYTE *v19;
  const void *v20;
  const void *v21;
  const void *v22;
  const void *v23;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (_BYTE *)*((_QWORD *)this + 12);
          if (!v9
            || (v10 = (_BYTE *)*((_QWORD *)this + 13), v9 == v10)
            || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, v10 - v9, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 4uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, 1uLL, 0), !(_DWORD)result))
                {
                  v14 = (const void *)*((_QWORD *)this + 18);
                  if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v14, 1uLL, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v15, 1uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v16, 4uLL, 0), !(_DWORD)result))
                      {
                        v17 = (const void *)*((_QWORD *)this + 21);
                        if (!v17
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v17, 4uLL, 0), !(_DWORD)result))
                        {
                          v18 = (_BYTE *)*((_QWORD *)this + 22);
                          if (!v18
                            || (v19 = (_BYTE *)*((_QWORD *)this + 23), v18 == v19)
                            || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v18, v19 - v18, 0), !(_DWORD)result))
                          {
                            v20 = (const void *)*((_QWORD *)this + 25);
                            if (!v20
                              || (result = AriMsg::pack(*((AriMsg **)this + 6), 19, v20, 4uLL, 0), !(_DWORD)result))
                            {
                              v21 = (const void *)*((_QWORD *)this + 26);
                              if (!v21
                                || (result = AriMsg::pack(*((AriMsg **)this + 6), 20, v21, 0xCuLL, 0), !(_DWORD)result))
                              {
                                v22 = (const void *)*((_QWORD *)this + 27);
                                if (!v22
                                  || (result = AriMsg::pack(*((AriMsg **)this + 6), 21, v22, 2uLL, 0), !(_DWORD)result))
                                {
                                  v23 = (const void *)*((_QWORD *)this + 28);
                                  if (!v23
                                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 22, v23, 4uLL, 0),
                                        !(_DWORD)result))
                                  {
                                    result = 0;
                                    *a2 = (AriMsg *)*((_QWORD *)this + 6);
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsCallStatusIndCb_SDK::unpack(AriSdk::ARI_IBICallCsCallStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  _DWORD *v9;
  _OWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;
  _DWORD *v16;
  _DWORD *v17;
  _OWORD *v18;
  _DWORD *v19;
  _DWORD *v20;
  _WORD *v21;
  _DWORD *v22;
  __n128 __p;
  uint64_t v25;
  size_t __sz;
  BOOL v27;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v27 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v10 = (_OWORD *)operator new[]();
  *v10 = 0u;
  v10[1] = 0u;
  v10[2] = 0u;
  v10[3] = 0u;
  v10[4] = 0u;
  *((_WORD *)v10 + 40) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v10, 82, &v27, &__sz);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v25 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v10, (uint64_t)v10 + __sz, __sz);
    AriSdk::TlvArray<char,82ul>::operator=((std::vector<int> *)this + 4, &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v10, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_BYTE *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v13, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 17, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v14 = (_BYTE *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v14, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 18, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v15 = (_BYTE *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v15, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 19, v15);
    MEMORY[0x212BB9B60](v15, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v16 = (_DWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v16, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v17 = (_DWORD *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v17, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4052888210);
  }
  v27 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v18 = (_OWORD *)operator new[]();
  *v18 = 0u;
  v18[1] = 0u;
  v18[2] = 0u;
  v18[3] = 0u;
  v18[4] = 0u;
  v18[5] = 0u;
  v18[6] = 0u;
  v18[7] = 0u;
  v18[8] = 0u;
  v18[9] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v18, 160, &v27, &__sz);
  if ((_DWORD)v3 || !v27)
  {
    MEMORY[0x212BB9B48](v18, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v25 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v18, (uint64_t)v18 + __sz, __sz);
    AriSdk::TlvArray<char,160ul>::operator=((std::vector<int> *)((char *)this + 176), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v18, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v19 = (_DWORD *)operator new();
  *v19 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 19, v19, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 25, v19);
    MEMORY[0x212BB9B60](v19, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v20 = (_DWORD *)operator new();
  *(_QWORD *)v20 = 0;
  v20[2] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 20, v20, 12, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v20, 0x1000C4005A209FELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBICallPsNr5gNeighborCellInfo>::operator=<IBICallPsNr5gNeighborCellInfo&,void>((uint64_t *)this + 26, (uint64_t)v20);
    MEMORY[0x212BB9B60](v20, 0x1000C4005A209FELL);
  }
  __p.n128_u8[0] = 0;
  v21 = (_WORD *)operator new();
  *v21 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 21, v21, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v21, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 27, v21);
    MEMORY[0x212BB9B60](v21, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v22 = (_DWORD *)operator new();
  *v22 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 22, v22, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 28, v22);
  MEMORY[0x212BB9B60](v22, 0x1000C4052888210);
  return v3;
}

void sub_20E2CA7B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

std::vector<int> *AriSdk::TlvArray<char,82ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0x53)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 82);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2CA980(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

std::vector<int> *AriSdk::TlvArray<char,160ul>::operator=(std::vector<int> *this, __n128 *__c)
{
  const char *v4;
  void **v5;
  void *__p[2];
  char v8;

  if (__c->n128_u64[1] - __c->n128_u64[0] < 0xA1)
  {
    std::vector<char>::__move_assign((uint64_t)this, __c);
  }
  else
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
    if (v8 >= 0)
      v5 = __p;
    else
      v5 = (void **)__p[0];
    Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v4, v5, 360, this, __c->n128_u64[1] - __c->n128_u64[0], 160);
    if (v8 < 0)
      operator delete(__p[0]);
  }
  return this;
}

void sub_20E2CAA58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL AriSdk::ARI_IBICallCsCallStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsCallStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159875072;
}

double AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK::ARI_IBICallCsCallingNameInfoIndCb_SDK(AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9868000u, 0);
  *(_QWORD *)v1 = &off_24C9301B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9868000u, 0);
  *(_QWORD *)v1 = &off_24C9301B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK::ARI_IBICallCsCallingNameInfoIndCb_SDK(AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9301B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9301B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK::~ARI_IBICallCsCallingNameInfoIndCb_SDK(AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C9301B0;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = (void *)*((_QWORD *)this + 11);
  if (v4)
  {
    *((_QWORD *)this + 12) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK::~ARI_IBICallCsCallingNameInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK::pack(AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v10, 1uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v11, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK::unpack(AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _WORD *v6;
  _OWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  v7[5] = 0u;
  v7[6] = 0u;
  v7[7] = 0u;
  v7[8] = 0u;
  v7[9] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 160, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v7, (uint64_t)v7 + __sz, __sz);
    AriSdk::TlvArray<char,160ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E2CB154(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsCallingNameInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159809536;
}

double AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x88C0000u, 0);
  *(_QWORD *)v1 = &off_24C9301E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x88C0000u, 0);
  *(_QWORD *)v1 = &off_24C9301E8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9301E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9301E8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK::~ARI_IBICallCsCdmaVerifySpcCodeReq_SDK(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C9301E8;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK::~ARI_IBICallCsCdmaVerifySpcCodeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK::pack(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK::unpack(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  void **v7;
  _BYTE *v8;
  void *v9;
  const char *v10;
  BOOL *v11;
  void *v12;
  void *__p;
  _BYTE *v15;
  uint64_t v16;
  size_t __sz;
  BOOL v18;
  BOOL v19[8];
  char v20;

  v19[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, v19, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v19[0];
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, v19, 0);
  if ((_DWORD)v3 || !v19[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v18 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_DWORD *)operator new[]();
  *v6 = 0;
  *(_DWORD *)((char *)v6 + 3) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 7, &v18, &__sz);
  if (!(_DWORD)v3 && v18)
  {
    v15 = 0;
    v16 = 0;
    __p = 0;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    v7 = (void **)((char *)this + 80);
    v9 = __p;
    v8 = v15;
    if ((unint64_t)(v15 - (_BYTE *)__p) < 8)
    {
      v12 = *v7;
      if (*v7)
      {
        *((_QWORD *)this + 11) = v12;
        operator delete(v12);
        *v7 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
        v9 = __p;
        v8 = v15;
      }
      *((_QWORD *)this + 10) = v9;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v16;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)v19);
      if (v20 >= 0)
        v11 = v19;
      else
        v11 = *(BOOL **)v19;
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v10, v11, 360, (char *)this + 80, v15 - (_BYTE *)__p, 7);
      if (v20 < 0)
        operator delete(*(void **)v19);
      if (__p)
      {
        v15 = __p;
        operator delete(__p);
      }
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  return v3;
}

void sub_20E2CB6DC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__p, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;

  if (*(char *)(v17 - 33) < 0)
    operator delete(*(void **)(v17 - 56));
  if (__p)
    operator delete(__p);
  MEMORY[0x212BB9B48](v16, 0x1000C8077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143392768;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x90C0000u, 0);
  *(_QWORD *)result = &off_24C930220;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x90C0000u, 0);
  *(_QWORD *)result = &off_24C930220;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930220;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930220;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK::~ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930220;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK::~ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK::pack(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK::unpack(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2CBBAC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsCdmaVerifySpcCodeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151781376;
}

double AriSdk::ARI_IBICallCsConnectedIndCb_SDK::ARI_IBICallCsConnectedIndCb_SDK(AriSdk::ARI_IBICallCsConnectedIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9820000u, 0);
  *(_QWORD *)v1 = &off_24C930258;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9820000u, 0);
  *(_QWORD *)v1 = &off_24C930258;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsConnectedIndCb_SDK::ARI_IBICallCsConnectedIndCb_SDK(AriSdk::ARI_IBICallCsConnectedIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930258;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930258;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsConnectedIndCb_SDK::~ARI_IBICallCsConnectedIndCb_SDK(AriSdk::ARI_IBICallCsConnectedIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C930258;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = (void *)*((_QWORD *)this + 10);
  if (v4)
  {
    *((_QWORD *)this + 11) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsConnectedIndCb_SDK::~ARI_IBICallCsConnectedIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsConnectedIndCb_SDK::pack(AriSdk::ARI_IBICallCsConnectedIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsConnectedIndCb_SDK::unpack(AriSdk::ARI_IBICallCsConnectedIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  __n128 __p;
  uint64_t v11;
  size_t __sz;
  BOOL v13;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v13 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  *((_WORD *)v6 + 40) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 82, &v13, &__sz);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v11 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<char,82ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2CC1EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsConnectedIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsConnectedIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159514624;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsCrssReq_SDK::ARI_IBICallCsCrssReq_SDK(AriSdk::ARI_IBICallCsCrssReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8888000u, 0);
  *(_QWORD *)result = &off_24C930290;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8888000u, 0);
  *(_QWORD *)result = &off_24C930290;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsCrssReq_SDK::ARI_IBICallCsCrssReq_SDK(AriSdk::ARI_IBICallCsCrssReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930290;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930290;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsCrssReq_SDK::~ARI_IBICallCsCrssReq_SDK(AriSdk::ARI_IBICallCsCrssReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C930290;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsCrssReq_SDK::~ARI_IBICallCsCrssReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsCrssReq_SDK::pack(AriSdk::ARI_IBICallCsCrssReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsCrssReq_SDK::unpack(AriSdk::ARI_IBICallCsCrssReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2CC5D8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsCrssReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsCrssReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143163392;
}

double AriSdk::ARI_IBICallCsCrssRspCb_SDK::ARI_IBICallCsCrssRspCb_SDK(AriSdk::ARI_IBICallCsCrssRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9088000u, 0);
  *(_QWORD *)v1 = &off_24C9302C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9088000u, 0);
  *(_QWORD *)v1 = &off_24C9302C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsCrssRspCb_SDK::ARI_IBICallCsCrssRspCb_SDK(AriSdk::ARI_IBICallCsCrssRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9302C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9302C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsCrssRspCb_SDK::~ARI_IBICallCsCrssRspCb_SDK(AriSdk::ARI_IBICallCsCrssRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C9302C8;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsCrssRspCb_SDK::~ARI_IBICallCsCrssRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsCrssRspCb_SDK::pack(AriSdk::ARI_IBICallCsCrssRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsCrssRspCb_SDK::unpack(AriSdk::ARI_IBICallCsCrssRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2CCAEC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsCrssRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsCrssRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151552000;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK::ARI_IBICallCsDisconnectedIndCb_SDK(AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9830000u, 0);
  *(_QWORD *)result = &off_24C930300;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9830000u, 0);
  *(_QWORD *)result = &off_24C930300;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK::ARI_IBICallCsDisconnectedIndCb_SDK(AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930300;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930300;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK::~ARI_IBICallCsDisconnectedIndCb_SDK(AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930300;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK::~ARI_IBICallCsDisconnectedIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK::pack(AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK::unpack(AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2CCF44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsDisconnectedIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159580160;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK(AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9888000u, 0);
  *(_QWORD *)result = &off_24C930338;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9888000u, 0);
  *(_QWORD *)result = &off_24C930338;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK(AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930338;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930338;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK::~ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK(AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C930338;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK::~ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK::pack(AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK::unpack(AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2CD2EC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsEmergencyCallIntermediateStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159940608;
}

double AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK::ARI_IBICallCsEmergencyNumberListIndCb_SDK(AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9870000u, 0);
  *(_QWORD *)v1 = &off_24C930370;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9870000u, 0);
  *(_QWORD *)v1 = &off_24C930370;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_QWORD *)v1 + 18) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK::ARI_IBICallCsEmergencyNumberListIndCb_SDK(AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930370;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930370;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_QWORD *)v3 + 18) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK::~ARI_IBICallCsEmergencyNumberListIndCb_SDK(AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C930370;
  v2 = (void *)*((_QWORD *)this + 16);
  if (v2)
  {
    *((_QWORD *)this + 17) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4000313F17);
  v6 = (void *)*((_QWORD *)this + 10);
  if (v6)
  {
    *((_QWORD *)this + 11) = v6;
    operator delete(v6);
  }
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK::~ARI_IBICallCsEmergencyNumberListIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK::pack(AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 8uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 4uLL, 0), !(_DWORD)result))
            {
              v13 = (_BYTE *)*((_QWORD *)this + 16);
              if (!v13
                || (v14 = (_BYTE *)*((_QWORD *)this + 17), v13 == v14)
                || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v13, v14 - v13, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK::unpack(AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  char *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  _QWORD *v16;
  _BYTE *v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  void *v21;
  char *v22;
  char *v23;
  unint64_t v24;
  size_t v25;
  void **v26;
  unint64_t v27;
  const char *v28;
  void **v29;
  void *v30;
  unint64_t v32;
  BOOL v33;
  void *__p[2];
  char v35;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v33 = 0;
  v32 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (char *)operator new[]();
  *(_OWORD *)v6 = 0u;
  *((_OWORD *)v6 + 1) = 0u;
  *((_OWORD *)v6 + 2) = 0u;
  *((_OWORD *)v6 + 3) = 0u;
  *(_QWORD *)(v6 + 62) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 70, &v33, &v32);
  if ((_DWORD)v3 || !v33)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C80DEAB1946);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    if (v32 >= 7)
    {
      v9 = v32 / 7;
      v10 = 7 * (v32 / 7);
      v7 = operator new(v10);
      v8 = (uint64_t)v7 + 8 * v9 - v9;
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0x6DB6DB6DB6DB6DB7 * (v8 - (_QWORD)v7);
    if (v12 < 0xB)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v35 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, (char *)this + 80, v12, 10);
      if (v35 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C80DEAB1946);
  }
  LOBYTE(__p[0]) = 0;
  v16 = (_QWORD *)operator new();
  *v16 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v16, 8, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v16, 0x1000C4000313F17);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<AriStatusTlv>::operator=<AriStatusTlv&,void>((uint64_t *)this + 13, v16);
    MEMORY[0x212BB9B60](v16, 0x1000C4000313F17);
  }
  LOBYTE(__p[0]) = 0;
  v17 = (_BYTE *)operator new();
  *v17 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v17, 1, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v17);
    MEMORY[0x212BB9B60](v17, 0x1000C4077774924);
  }
  LOBYTE(__p[0]) = 0;
  v18 = (_DWORD *)operator new();
  *v18 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v18, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v19 = (_DWORD *)operator new();
    *v19 = *v18;
    v20 = *((_QWORD *)this + 15);
    *((_QWORD *)this + 15) = v19;
    if (v20)
      MEMORY[0x212BB9B60](v20, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v18, 0x1000C4052888210);
  }
  v33 = 0;
  v32 = 0xAAAAAAAAAAAAAAAALL;
  v21 = (void *)operator new[]();
  bzero(v21, 0x14A0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v21, 5280, &v33, &v32);
  if (!(_DWORD)v3 && v33)
  {
    if (v32 >= 0x108)
    {
      v24 = v32 / 0x108;
      v25 = 264 * (v32 / 0x108);
      v22 = (char *)operator new(v25);
      v23 = &v22[264 * v24];
      memcpy(v22, v21, v25);
    }
    else
    {
      v22 = 0;
      v23 = 0;
    }
    v26 = (void **)((char *)this + 128);
    v27 = 0xF83E0F83E0F83E1 * ((v23 - v22) >> 3);
    if (v27 < 0x15)
    {
      v30 = *v26;
      if (*v26)
      {
        *((_QWORD *)this + 17) = v30;
        operator delete(v30);
        *v26 = 0;
        *((_QWORD *)this + 17) = 0;
        *((_QWORD *)this + 18) = 0;
      }
      *((_QWORD *)this + 16) = v22;
      *((_QWORD *)this + 17) = v23;
      *((_QWORD *)this + 18) = v23;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v35 >= 0)
        v29 = __p;
      else
        v29 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v28, v29, 360, v26, v27, 20);
      if (v35 < 0)
        operator delete(__p[0]);
      if (v22)
        operator delete(v22);
    }
  }
  MEMORY[0x212BB9B48](v21, 0x1000C800E1E4D96);
  return v3;
}

void sub_20E2CDCFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C800E1E4D96);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsEmergencyNumberListIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159842304;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetEccListReq_SDK::ARI_IBICallCsGetEccListReq_SDK(AriSdk::ARI_IBICallCsGetEccListReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8870000u, 0);
  *(_QWORD *)result = &off_24C9303A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8870000u, 0);
  *(_QWORD *)result = &off_24C9303A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetEccListReq_SDK::ARI_IBICallCsGetEccListReq_SDK(AriSdk::ARI_IBICallCsGetEccListReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9303A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9303A8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsGetEccListReq_SDK::~ARI_IBICallCsGetEccListReq_SDK(AriSdk::ARI_IBICallCsGetEccListReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9303A8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsGetEccListReq_SDK::~ARI_IBICallCsGetEccListReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsGetEccListReq_SDK::pack(AriSdk::ARI_IBICallCsGetEccListReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsGetEccListReq_SDK::unpack(AriSdk::ARI_IBICallCsGetEccListReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2CE044(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsGetEccListReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsGetEccListReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143065088;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetEccListRspCb_SDK::ARI_IBICallCsGetEccListRspCb_SDK(AriSdk::ARI_IBICallCsGetEccListRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9070000u, 0);
  *(_QWORD *)result = &off_24C9303E0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9070000u, 0);
  *(_QWORD *)result = &off_24C9303E0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetEccListRspCb_SDK::ARI_IBICallCsGetEccListRspCb_SDK(AriSdk::ARI_IBICallCsGetEccListRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9303E0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9303E0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsGetEccListRspCb_SDK::~ARI_IBICallCsGetEccListRspCb_SDK(AriSdk::ARI_IBICallCsGetEccListRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C9303E0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40904FC776);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsGetEccListRspCb_SDK::~ARI_IBICallCsGetEccListRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsGetEccListRspCb_SDK::pack(AriSdk::ARI_IBICallCsGetEccListRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 0xF1uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsGetEccListRspCb_SDK::unpack(AriSdk::ARI_IBICallCsGetEccListRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  BOOL v17;
  BOOL v18;
  BOOL v19;

  v19 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v19, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v19;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v18 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v17 = 0;
  v6 = operator new();
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_OWORD *)(v6 + 112) = 0u;
  *(_OWORD *)(v6 + 128) = 0u;
  *(_OWORD *)(v6 + 144) = 0u;
  *(_OWORD *)(v6 + 160) = 0u;
  *(_OWORD *)(v6 + 176) = 0u;
  *(_OWORD *)(v6 + 192) = 0u;
  *(_OWORD *)(v6 + 208) = 0u;
  *(_OWORD *)(v6 + 224) = 0u;
  *(_BYTE *)(v6 + 240) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, (void *)v6, 241, &v17, 0);
  if (!(_DWORD)v3 && v17)
  {
    v7 = operator new();
    v8 = *(_OWORD *)(v6 + 208);
    *(_OWORD *)(v7 + 192) = *(_OWORD *)(v6 + 192);
    *(_OWORD *)(v7 + 208) = v8;
    *(_OWORD *)(v7 + 224) = *(_OWORD *)(v6 + 224);
    *(_BYTE *)(v7 + 240) = *(_BYTE *)(v6 + 240);
    v9 = *(_OWORD *)(v6 + 144);
    *(_OWORD *)(v7 + 128) = *(_OWORD *)(v6 + 128);
    *(_OWORD *)(v7 + 144) = v9;
    v10 = *(_OWORD *)(v6 + 176);
    *(_OWORD *)(v7 + 160) = *(_OWORD *)(v6 + 160);
    *(_OWORD *)(v7 + 176) = v10;
    v11 = *(_OWORD *)(v6 + 80);
    *(_OWORD *)(v7 + 64) = *(_OWORD *)(v6 + 64);
    *(_OWORD *)(v7 + 80) = v11;
    v12 = *(_OWORD *)(v6 + 112);
    *(_OWORD *)(v7 + 96) = *(_OWORD *)(v6 + 96);
    *(_OWORD *)(v7 + 112) = v12;
    v13 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)v7 = *(_OWORD *)v6;
    *(_OWORD *)(v7 + 16) = v13;
    v14 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(v7 + 32) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(v7 + 48) = v14;
    v15 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v15)
      MEMORY[0x212BB9B60](v15, 0x1000C40904FC776);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C40904FC776);
  return v3;
}

void sub_20E2CE50C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40904FC776);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsGetEccListRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsGetEccListRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151453696;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK(AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x88A0000u, 0);
  *(_QWORD *)result = &off_24C930418;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x88A0000u, 0);
  *(_QWORD *)result = &off_24C930418;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK(AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930418;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930418;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK::~ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK(AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C930418;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK::~ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK::pack(AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK::unpack(AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2CE7A0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsGetTtyDeviceModeReq_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143261696;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK(AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x90A0000u, 0);
  *(_QWORD *)result = &off_24C930450;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x90A0000u, 0);
  *(_QWORD *)result = &off_24C930450;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK(AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930450;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930450;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK::~ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK(AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930450;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK::~ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK::pack(AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK::unpack(AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2CEBCC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsGetTtyDeviceModeRspCb_V2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151650304;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsHoldCallReq_SDK::ARI_IBICallCsHoldCallReq_SDK(AriSdk::ARI_IBICallCsHoldCallReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8828000u, 0);
  *(_QWORD *)result = &off_24C930488;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8828000u, 0);
  *(_QWORD *)result = &off_24C930488;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsHoldCallReq_SDK::ARI_IBICallCsHoldCallReq_SDK(AriSdk::ARI_IBICallCsHoldCallReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930488;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930488;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsHoldCallReq_SDK::~ARI_IBICallCsHoldCallReq_SDK(AriSdk::ARI_IBICallCsHoldCallReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C930488;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsHoldCallReq_SDK::~ARI_IBICallCsHoldCallReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsHoldCallReq_SDK::pack(AriSdk::ARI_IBICallCsHoldCallReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsHoldCallReq_SDK::unpack(AriSdk::ARI_IBICallCsHoldCallReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2CEE58(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsHoldCallReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsHoldCallReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142770176;
}

double AriSdk::ARI_IBICallCsHoldCallRspCb_SDK::ARI_IBICallCsHoldCallRspCb_SDK(AriSdk::ARI_IBICallCsHoldCallRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9028000u, 0);
  *(_QWORD *)v1 = &off_24C9304C0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9028000u, 0);
  *(_QWORD *)v1 = &off_24C9304C0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsHoldCallRspCb_SDK::ARI_IBICallCsHoldCallRspCb_SDK(AriSdk::ARI_IBICallCsHoldCallRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9304C0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9304C0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsHoldCallRspCb_SDK::~ARI_IBICallCsHoldCallRspCb_SDK(AriSdk::ARI_IBICallCsHoldCallRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C9304C0;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsHoldCallRspCb_SDK::~ARI_IBICallCsHoldCallRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsHoldCallRspCb_SDK::pack(AriSdk::ARI_IBICallCsHoldCallRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsHoldCallRspCb_SDK::unpack(AriSdk::ARI_IBICallCsHoldCallRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2CF364(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsHoldCallRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsHoldCallRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151158784;
}

double AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK::ARI_IBICallCsIncomingCallIndCb_SDK(AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9838000u, 0);
  *(_QWORD *)v1 = &off_24C9304F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9838000u, 0);
  *(_QWORD *)v1 = &off_24C9304F8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_OWORD *)v1 + 10) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK::ARI_IBICallCsIncomingCallIndCb_SDK(AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9304F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9304F8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_OWORD *)v3 + 10) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK::~ARI_IBICallCsIncomingCallIndCb_SDK(AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)this = &off_24C9304F8;
  v2 = *((_QWORD *)this + 21);
  *((_QWORD *)this + 21) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 18);
  *((_QWORD *)this + 18) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4077774924);
  v10 = (void *)*((_QWORD *)this + 11);
  if (v10)
  {
    *((_QWORD *)this + 12) = v10;
    operator delete(v10);
  }
  v11 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4077774924);
  v13 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v13)
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK::~ARI_IBICallCsIncomingCallIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK::pack(AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  _BYTE *v8;
  _BYTE *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;
  const void *v15;
  const void *v16;
  const void *v17;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (_BYTE *)*((_QWORD *)this + 11);
        if (!v8
          || (v9 = (_BYTE *)*((_QWORD *)this + 12), v8 == v9)
          || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, v9 - v8, 0), !(_DWORD)result))
        {
          v10 = (const void *)*((_QWORD *)this + 14);
          if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 1uLL, 0), !(_DWORD)result))
          {
            v11 = (const void *)*((_QWORD *)this + 15);
            if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
            {
              v12 = (const void *)*((_QWORD *)this + 16);
              if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v12, 4uLL, 0), !(_DWORD)result))
              {
                v13 = (const void *)*((_QWORD *)this + 17);
                if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v13, 4uLL, 0), !(_DWORD)result))
                {
                  v14 = (const void *)*((_QWORD *)this + 18);
                  if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 15, v14, 4uLL, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v15, 4uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v16, 4uLL, 0), !(_DWORD)result))
                      {
                        v17 = (const void *)*((_QWORD *)this + 21);
                        if (!v17
                          || (result = AriMsg::pack(*((AriMsg **)this + 6), 18, v17, 4uLL, 0), !(_DWORD)result))
                        {
                          result = 0;
                          *a2 = (AriMsg *)*((_QWORD *)this + 6);
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK::unpack(AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _OWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  _DWORD *v12;
  _DWORD *v13;
  _DWORD *v14;
  _DWORD *v15;
  __n128 __p;
  uint64_t v18;
  size_t __sz;
  BOOL v20;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v20 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v7 = (_OWORD *)operator new[]();
  *v7 = 0u;
  v7[1] = 0u;
  v7[2] = 0u;
  v7[3] = 0u;
  v7[4] = 0u;
  *((_WORD *)v7 + 40) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 82, &v20, &__sz);
  if ((_DWORD)v3 || !v20)
  {
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v18 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v7, (uint64_t)v7 + __sz, __sz);
    AriSdk::TlvArray<char,82ul>::operator=((std::vector<int> *)((char *)this + 88), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v7, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v12 = (_DWORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 15, v12, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 18, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v13 = (_DWORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v13, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 19, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v14 = (_DWORD *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v14, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 20, v14);
    MEMORY[0x212BB9B60](v14, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v15 = (_DWORD *)operator new();
  *v15 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 18, v15, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 21, v15);
  MEMORY[0x212BB9B60](v15, 0x1000C4052888210);
  return v3;
}

void sub_20E2CFFA8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsIncomingCallIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159612928;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsJoinCallsReq_SDK::ARI_IBICallCsJoinCallsReq_SDK(AriSdk::ARI_IBICallCsJoinCallsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8840000u, 0);
  *(_QWORD *)result = &off_24C930530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8840000u, 0);
  *(_QWORD *)result = &off_24C930530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsJoinCallsReq_SDK::ARI_IBICallCsJoinCallsReq_SDK(AriSdk::ARI_IBICallCsJoinCallsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930530;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsJoinCallsReq_SDK::~ARI_IBICallCsJoinCallsReq_SDK(AriSdk::ARI_IBICallCsJoinCallsReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C930530;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsJoinCallsReq_SDK::~ARI_IBICallCsJoinCallsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsJoinCallsReq_SDK::pack(AriSdk::ARI_IBICallCsJoinCallsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsJoinCallsReq_SDK::unpack(AriSdk::ARI_IBICallCsJoinCallsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2D02BC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsJoinCallsReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsJoinCallsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142868480;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK::ARI_IBICallCsJoinCallsRspCb_SDK(AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9040000u, 0);
  *(_QWORD *)result = &off_24C930568;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9040000u, 0);
  *(_QWORD *)result = &off_24C930568;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK::ARI_IBICallCsJoinCallsRspCb_SDK(AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930568;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930568;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK::~ARI_IBICallCsJoinCallsRspCb_SDK(AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930568;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK::~ARI_IBICallCsJoinCallsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK::pack(AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK::unpack(AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2D06E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsJoinCallsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151257088;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK::ARI_IBICallCsOtaspStatusIndCb_SDK(AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x98B8000u, 0);
  *(_QWORD *)result = &off_24C9305A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x98B8000u, 0);
  *(_QWORD *)result = &off_24C9305A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK::ARI_IBICallCsOtaspStatusIndCb_SDK(AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9305A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9305A0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK::~ARI_IBICallCsOtaspStatusIndCb_SDK(AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C9305A0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK::~ARI_IBICallCsOtaspStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK::pack(AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK::unpack(AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
  {
    v7 = (_DWORD *)operator new();
    *v7 = *v6;
    v8 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v8)
      MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2D0B64(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsOtaspStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 160137216;
}

double AriSdk::ARI_IBICallCsReleaseCallReq_SDK::ARI_IBICallCsReleaseCallReq_SDK(AriSdk::ARI_IBICallCsReleaseCallReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x8810000u, 0);
  *(_QWORD *)v1 = &off_24C9305D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x8810000u, 0);
  *(_QWORD *)v1 = &off_24C9305D8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsReleaseCallReq_SDK::ARI_IBICallCsReleaseCallReq_SDK(AriSdk::ARI_IBICallCsReleaseCallReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9305D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9305D8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsReleaseCallReq_SDK::~ARI_IBICallCsReleaseCallReq_SDK(AriSdk::ARI_IBICallCsReleaseCallReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C9305D8;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsReleaseCallReq_SDK::~ARI_IBICallCsReleaseCallReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsReleaseCallReq_SDK::pack(AriSdk::ARI_IBICallCsReleaseCallReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsReleaseCallReq_SDK::unpack(AriSdk::ARI_IBICallCsReleaseCallReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2D1088(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsReleaseCallReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsReleaseCallReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142671872;
}

double AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK::ARI_IBICallCsReleaseCallRspCb_SDK(AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9010000u, 0);
  *(_QWORD *)v1 = &off_24C930610;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9010000u, 0);
  *(_QWORD *)v1 = &off_24C930610;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK::ARI_IBICallCsReleaseCallRspCb_SDK(AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930610;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930610;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK::~ARI_IBICallCsReleaseCallRspCb_SDK(AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C930610;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK::~ARI_IBICallCsReleaseCallRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK::pack(AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK::unpack(AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _BYTE *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2D1694(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsReleaseCallRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151060480;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsRetrieveCallReq_SDK::ARI_IBICallCsRetrieveCallReq_SDK(AriSdk::ARI_IBICallCsRetrieveCallReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8830000u, 0);
  *(_QWORD *)result = &off_24C930648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8830000u, 0);
  *(_QWORD *)result = &off_24C930648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsRetrieveCallReq_SDK::ARI_IBICallCsRetrieveCallReq_SDK(AriSdk::ARI_IBICallCsRetrieveCallReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930648;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsRetrieveCallReq_SDK::~ARI_IBICallCsRetrieveCallReq_SDK(AriSdk::ARI_IBICallCsRetrieveCallReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C930648;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsRetrieveCallReq_SDK::~ARI_IBICallCsRetrieveCallReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsRetrieveCallReq_SDK::pack(AriSdk::ARI_IBICallCsRetrieveCallReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsRetrieveCallReq_SDK::unpack(AriSdk::ARI_IBICallCsRetrieveCallReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2D1938(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsRetrieveCallReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsRetrieveCallReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142802944;
}

double AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK::ARI_IBICallCsRetrieveCallRspCb_SDK(AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9030000u, 0);
  *(_QWORD *)v1 = &off_24C930680;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9030000u, 0);
  *(_QWORD *)v1 = &off_24C930680;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK::ARI_IBICallCsRetrieveCallRspCb_SDK(AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930680;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930680;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK::~ARI_IBICallCsRetrieveCallRspCb_SDK(AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C930680;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK::~ARI_IBICallCsRetrieveCallRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK::pack(AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK::unpack(AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2D1E38(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsRetrieveCallRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151191552;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetClirModeReq_SDK::ARI_IBICallCsSetClirModeReq_SDK(AriSdk::ARI_IBICallCsSetClirModeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8858000u, 1);
  *(_QWORD *)result = &off_24C9306B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8858000u, 1);
  *(_QWORD *)result = &off_24C9306B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetClirModeReq_SDK::ARI_IBICallCsSetClirModeReq_SDK(AriSdk::ARI_IBICallCsSetClirModeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9306B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9306B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSetClirModeReq_SDK::~ARI_IBICallCsSetClirModeReq_SDK(AriSdk::ARI_IBICallCsSetClirModeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9306B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetClirModeReq_SDK::~ARI_IBICallCsSetClirModeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetClirModeReq_SDK::pack(AriSdk::ARI_IBICallCsSetClirModeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetClirModeReq_SDK::unpack(AriSdk::ARI_IBICallCsSetClirModeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2D21B0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetClirModeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetClirModeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142966784;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK::ARI_IBICallCsSetPrefPrivacyReq_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x88B8000u, 0);
  *(_QWORD *)result = &off_24C9306F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x88B8000u, 0);
  *(_QWORD *)result = &off_24C9306F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK::ARI_IBICallCsSetPrefPrivacyReq_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9306F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9306F0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK::~ARI_IBICallCsSetPrefPrivacyReq_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9306F0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK::~ARI_IBICallCsSetPrefPrivacyReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK::pack(AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK::unpack(AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2D250C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetPrefPrivacyReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143360000;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK::ARI_IBICallCsSetPrefPrivacyRspCb_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x90B8000u, 0);
  *(_QWORD *)result = &off_24C930728;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x90B8000u, 0);
  *(_QWORD *)result = &off_24C930728;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK::ARI_IBICallCsSetPrefPrivacyRspCb_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930728;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930728;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK::~ARI_IBICallCsSetPrefPrivacyRspCb_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930728;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK::~ARI_IBICallCsSetPrefPrivacyRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK::pack(AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK::unpack(AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2D294C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetPrefPrivacyRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151748608;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK::ARI_IBICallCsSetPrefPrivacyIndCb_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x98B0000u, 0);
  *(_QWORD *)result = &off_24C930760;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x98B0000u, 0);
  *(_QWORD *)result = &off_24C930760;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK::ARI_IBICallCsSetPrefPrivacyIndCb_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930760;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930760;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK::~ARI_IBICallCsSetPrefPrivacyIndCb_SDK(AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C930760;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK::~ARI_IBICallCsSetPrefPrivacyIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK::pack(AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK::unpack(AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2D2CA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetPrefPrivacyIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 160104448;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK::ARI_IBICallCsSetTtyDeviceModeReq_SDK(AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8860000u, 0);
  *(_QWORD *)result = &off_24C930798;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8860000u, 0);
  *(_QWORD *)result = &off_24C930798;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK::ARI_IBICallCsSetTtyDeviceModeReq_SDK(AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930798;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930798;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK::~ARI_IBICallCsSetTtyDeviceModeReq_SDK(AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C930798;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK::~ARI_IBICallCsSetTtyDeviceModeReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK::pack(AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK::unpack(AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2D2FF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetTtyDeviceModeReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142999552;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK(AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9060000u, 0);
  *(_QWORD *)result = &off_24C9307D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x9060000u, 0);
  *(_QWORD *)result = &off_24C9307D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK(AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9307D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9307D0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK::~ARI_IBICallCsSetTtyDeviceModeRspCb_SDK(AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9307D0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK::~ARI_IBICallCsSetTtyDeviceModeRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK::pack(AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK::unpack(AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2D3348(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetTtyDeviceModeRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151388160;
}

double AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK::ARI_IBICallCsSetupVoiceCallReq_SDK(AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x8808000u, 0);
  *(_QWORD *)v1 = &off_24C930808;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x8808000u, 0);
  *(_QWORD *)v1 = &off_24C930808;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK::ARI_IBICallCsSetupVoiceCallReq_SDK(AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930808;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930808;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK::~ARI_IBICallCsSetupVoiceCallReq_SDK(AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C930808;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = (void *)*((_QWORD *)this + 10);
  if (v7)
  {
    *((_QWORD *)this + 11) = v7;
    operator delete(v7);
  }
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK::~ARI_IBICallCsSetupVoiceCallReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK::pack(AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v12, 4uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v13, 4uLL, 0), !(_DWORD)result))
              {
                v14 = (const void *)*((_QWORD *)this + 17);
                if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v14, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK::unpack(AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  __n128 __p;
  uint64_t v14;
  size_t __sz;
  BOOL v16;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  *((_WORD *)v6 + 40) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 82, &v16, &__sz);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<char,82ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v11, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E2D3C04(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetupVoiceCallReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142639104;
}

double AriSdk::ARI_IBICallCsSetupCallRspCb_SDK::ARI_IBICallCsSetupCallRspCb_SDK(AriSdk::ARI_IBICallCsSetupCallRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9008000u, 0);
  *(_QWORD *)v1 = &off_24C930840;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9008000u, 0);
  *(_QWORD *)v1 = &off_24C930840;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsSetupCallRspCb_SDK::ARI_IBICallCsSetupCallRspCb_SDK(AriSdk::ARI_IBICallCsSetupCallRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930840;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930840;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSetupCallRspCb_SDK::~ARI_IBICallCsSetupCallRspCb_SDK(AriSdk::ARI_IBICallCsSetupCallRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C930840;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetupCallRspCb_SDK::~ARI_IBICallCsSetupCallRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetupCallRspCb_SDK::pack(AriSdk::ARI_IBICallCsSetupCallRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetupCallRspCb_SDK::unpack(AriSdk::ARI_IBICallCsSetupCallRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v12 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2D4270(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetupCallRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetupCallRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151027712;
}

double AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK::ARI_IBICallCsSetupVoiceCallReq_V1_SDK(AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x88A8000u, 0);
  *(_QWORD *)v1 = &off_24C930878;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x88A8000u, 0);
  *(_QWORD *)v1 = &off_24C930878;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK::ARI_IBICallCsSetupVoiceCallReq_V1_SDK(AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930878;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930878;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK::~ARI_IBICallCsSetupVoiceCallReq_V1_SDK(AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)this = &off_24C930878;
  v2 = *((_QWORD *)this + 17);
  *((_QWORD *)this + 17) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 16);
  *((_QWORD *)this + 16) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = (void *)*((_QWORD *)this + 10);
  if (v7)
  {
    *((_QWORD *)this + 11) = v7;
    operator delete(v7);
  }
  v8 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  v9 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK::~ARI_IBICallCsSetupVoiceCallReq_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK::pack(AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;
  const void *v13;
  const void *v14;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 13, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 14, v12, 4uLL, 0), !(_DWORD)result))
            {
              v13 = (const void *)*((_QWORD *)this + 16);
              if (!v13 || (result = AriMsg::pack(*((AriMsg **)this + 6), 16, v13, 4uLL, 0), !(_DWORD)result))
              {
                v14 = (const void *)*((_QWORD *)this + 17);
                if (!v14 || (result = AriMsg::pack(*((AriMsg **)this + 6), 17, v14, 4uLL, 0), !(_DWORD)result))
                {
                  result = 0;
                  *a2 = (AriMsg *)*((_QWORD *)this + 6);
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK::unpack(AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  _DWORD *v10;
  _DWORD *v11;
  __n128 __p;
  uint64_t v14;
  size_t __sz;
  BOOL v16;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  *((_WORD *)v6 + 40) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 82, &v16, &__sz);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v14 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<char,82ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 13, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 14, v9, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 16, v10, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 16, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 17, v11, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 17, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E2D4B58(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetupVoiceCallReq_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143294464;
}

double AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK::ARI_IBICallCsSetupCallRspCb_V1_SDK(AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x90A8000u, 0);
  *(_QWORD *)v1 = &off_24C9308B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x90A8000u, 0);
  *(_QWORD *)v1 = &off_24C9308B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK::ARI_IBICallCsSetupCallRspCb_V1_SDK(AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9308B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9308B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK::~ARI_IBICallCsSetupCallRspCb_V1_SDK(AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C9308B0;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK::~ARI_IBICallCsSetupCallRspCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK::pack(AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK::unpack(AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v11 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E2D5298(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSetupCallRspCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151683072;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSplitMptyReq_SDK::ARI_IBICallCsSplitMptyReq_SDK(AriSdk::ARI_IBICallCsSplitMptyReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8838000u, 0);
  *(_QWORD *)result = &off_24C9308E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8838000u, 0);
  *(_QWORD *)result = &off_24C9308E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSplitMptyReq_SDK::ARI_IBICallCsSplitMptyReq_SDK(AriSdk::ARI_IBICallCsSplitMptyReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9308E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9308E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSplitMptyReq_SDK::~ARI_IBICallCsSplitMptyReq_SDK(AriSdk::ARI_IBICallCsSplitMptyReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9308E8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSplitMptyReq_SDK::~ARI_IBICallCsSplitMptyReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSplitMptyReq_SDK::pack(AriSdk::ARI_IBICallCsSplitMptyReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSplitMptyReq_SDK::unpack(AriSdk::ARI_IBICallCsSplitMptyReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E2D5624(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSplitMptyReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSplitMptyReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142835712;
}

double AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK::ARI_IBICallCsSplitMptyRspCb_SDK(AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9038000u, 0);
  *(_QWORD *)v1 = &off_24C930920;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9038000u, 0);
  *(_QWORD *)v1 = &off_24C930920;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK::ARI_IBICallCsSplitMptyRspCb_SDK(AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930920;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930920;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK::~ARI_IBICallCsSplitMptyRspCb_SDK(AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C930920;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK::~ARI_IBICallCsSplitMptyRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK::pack(AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK::unpack(AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2D5B48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSplitMptyRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151224320;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsStartDtmfReq_SDK::ARI_IBICallCsStartDtmfReq_SDK(AriSdk::ARI_IBICallCsStartDtmfReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8848000u, 0);
  *(_QWORD *)result = &off_24C930958;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8848000u, 0);
  *(_QWORD *)result = &off_24C930958;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsStartDtmfReq_SDK::ARI_IBICallCsStartDtmfReq_SDK(AriSdk::ARI_IBICallCsStartDtmfReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930958;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930958;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsStartDtmfReq_SDK::~ARI_IBICallCsStartDtmfReq_SDK(AriSdk::ARI_IBICallCsStartDtmfReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C930958;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsStartDtmfReq_SDK::~ARI_IBICallCsStartDtmfReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsStartDtmfReq_SDK::pack(AriSdk::ARI_IBICallCsStartDtmfReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsStartDtmfReq_SDK::unpack(AriSdk::ARI_IBICallCsStartDtmfReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v8 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  return v3;
}

void sub_20E2D5FA8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsStartDtmfReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsStartDtmfReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142901248;
}

double AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK::ARI_IBICallCsStartDtmfRspCb_SDK(AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9048000u, 0);
  *(_QWORD *)v1 = &off_24C930990;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9048000u, 0);
  *(_QWORD *)v1 = &off_24C930990;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK::ARI_IBICallCsStartDtmfRspCb_SDK(AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930990;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930990;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK::~ARI_IBICallCsStartDtmfRspCb_SDK(AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C930990;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK::~ARI_IBICallCsStartDtmfRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK::pack(AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK::unpack(AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v12 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2D65B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsStartDtmfRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151289856;
}

double AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK::ARI_IBICallCsStartDtmfIndCb_SDK(AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9890000u, 0);
  *(_QWORD *)v1 = &off_24C9309C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9890000u, 0);
  *(_QWORD *)v1 = &off_24C9309C8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK::ARI_IBICallCsStartDtmfIndCb_SDK(AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9309C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9309C8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK::~ARI_IBICallCsStartDtmfIndCb_SDK(AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C9309C8;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK::~ARI_IBICallCsStartDtmfIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK::pack(AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK::unpack(AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v12 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 1, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2D6BD0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsStartDtmfIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 159973376;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsStopDtmfReq_SDK::ARI_IBICallCsStopDtmfReq_SDK(AriSdk::ARI_IBICallCsStopDtmfReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8850000u, 0);
  *(_QWORD *)result = &off_24C930A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8850000u, 0);
  *(_QWORD *)result = &off_24C930A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsStopDtmfReq_SDK::ARI_IBICallCsStopDtmfReq_SDK(AriSdk::ARI_IBICallCsStopDtmfReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsStopDtmfReq_SDK::~ARI_IBICallCsStopDtmfReq_SDK(AriSdk::ARI_IBICallCsStopDtmfReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C930A00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsStopDtmfReq_SDK::~ARI_IBICallCsStopDtmfReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsStopDtmfReq_SDK::pack(AriSdk::ARI_IBICallCsStopDtmfReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsStopDtmfReq_SDK::unpack(AriSdk::ARI_IBICallCsStopDtmfReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  return v3;
}

void sub_20E2D6F48(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsStopDtmfReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsStopDtmfReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142934016;
}

double AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK::ARI_IBICallCsStopDtmfExtRspCb_SDK(AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9050000u, 0);
  *(_QWORD *)v1 = &off_24C930A38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9050000u, 0);
  *(_QWORD *)v1 = &off_24C930A38;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK::ARI_IBICallCsStopDtmfExtRspCb_SDK(AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930A38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930A38;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK::~ARI_IBICallCsStopDtmfExtRspCb_SDK(AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C930A38;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK::~ARI_IBICallCsStopDtmfExtRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK::pack(AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK::unpack(AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2D7460(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsStopDtmfExtRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151322624;
}

double AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK::ARI_IBICallCsStopDtmfIndCb_SDK(AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9898000u, 0);
  *(_QWORD *)v1 = &off_24C930A70;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9898000u, 0);
  *(_QWORD *)v1 = &off_24C930A70;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK::ARI_IBICallCsStopDtmfIndCb_SDK(AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930A70;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930A70;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK::~ARI_IBICallCsStopDtmfIndCb_SDK(AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C930A70;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK::~ARI_IBICallCsStopDtmfIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK::pack(AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK::unpack(AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2D7990(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsStopDtmfIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 160006144;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSwapCallsReq_SDK::ARI_IBICallCsSwapCallsReq_SDK(AriSdk::ARI_IBICallCsSwapCallsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8820000u, 0);
  *(_QWORD *)result = &off_24C930AA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8820000u, 0);
  *(_QWORD *)result = &off_24C930AA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsSwapCallsReq_SDK::ARI_IBICallCsSwapCallsReq_SDK(AriSdk::ARI_IBICallCsSwapCallsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930AA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930AA8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSwapCallsReq_SDK::~ARI_IBICallCsSwapCallsReq_SDK(AriSdk::ARI_IBICallCsSwapCallsReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C930AA8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSwapCallsReq_SDK::~ARI_IBICallCsSwapCallsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSwapCallsReq_SDK::pack(AriSdk::ARI_IBICallCsSwapCallsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSwapCallsReq_SDK::unpack(AriSdk::ARI_IBICallCsSwapCallsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2D7C30(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSwapCallsReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSwapCallsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 142737408;
}

double AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK::ARI_IBICallCsSwapCallsRspCb_SDK(AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9020000u, 0);
  *(_QWORD *)v1 = &off_24C930AE0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9020000u, 0);
  *(_QWORD *)v1 = &off_24C930AE0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK::ARI_IBICallCsSwapCallsRspCb_SDK(AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930AE0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930AE0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK::~ARI_IBICallCsSwapCallsRspCb_SDK(AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C930AE0;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK::~ARI_IBICallCsSwapCallsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK::pack(AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 1uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 4uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK::unpack(AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _BYTE *v6;
  _DWORD *v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v12 = 0;
  v6 = (_BYTE *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 1, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  }
  v11 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2D8214(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsSwapCallsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151126016;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsTransferCallsReq_SDK::ARI_IBICallCsTransferCallsReq_SDK(AriSdk::ARI_IBICallCsTransferCallsReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8890000u, 0);
  *(_QWORD *)result = &off_24C930B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x8890000u, 0);
  *(_QWORD *)result = &off_24C930B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsTransferCallsReq_SDK::ARI_IBICallCsTransferCallsReq_SDK(AriSdk::ARI_IBICallCsTransferCallsReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C930B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsTransferCallsReq_SDK::~ARI_IBICallCsTransferCallsReq_SDK(AriSdk::ARI_IBICallCsTransferCallsReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C930B18;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsTransferCallsReq_SDK::~ARI_IBICallCsTransferCallsReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsTransferCallsReq_SDK::pack(AriSdk::ARI_IBICallCsTransferCallsReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsTransferCallsReq_SDK::unpack(AriSdk::ARI_IBICallCsTransferCallsReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2D84B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsTransferCallsReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsTransferCallsReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 143196160;
}

double AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK::ARI_IBICallCsTransferCallsRspCb_SDK(AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9090000u, 0);
  *(_QWORD *)v1 = &off_24C930B50;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x9090000u, 0);
  *(_QWORD *)v1 = &off_24C930B50;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK::ARI_IBICallCsTransferCallsRspCb_SDK(AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930B50;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C930B50;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK::~ARI_IBICallCsTransferCallsRspCb_SDK(AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C930B50;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4077774924);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK::~ARI_IBICallCsTransferCallsRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK::pack(AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK::unpack(AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _DWORD *v6;
  _DWORD *v7;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 1, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v10 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v10, 0);
  if ((_DWORD)v3 || !v10)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v9 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
  MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  return v3;
}

void sub_20E2D89B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsTransferCallsRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 151584768;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK::ARI_IBICallCsVoimsANBRQReq_SDK(AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x40818000u, 0);
  *(_QWORD *)result = &off_24C931080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x40818000u, 0);
  *(_QWORD *)result = &off_24C931080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK::ARI_IBICallCsVoimsANBRQReq_SDK(AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931080;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK::~ARI_IBICallCsVoimsANBRQReq_SDK(AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C931080;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK::~ARI_IBICallCsVoimsANBRQReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK::pack(AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK::unpack(AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2D8E14(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsANBRQReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1082228736;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK::ARI_IBICallCsVoimsANBRQRspCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41018000u, 0);
  *(_QWORD *)result = &off_24C9310B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41018000u, 0);
  *(_QWORD *)result = &off_24C9310B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK::ARI_IBICallCsVoimsANBRQRspCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9310B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9310B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK::~ARI_IBICallCsVoimsANBRQRspCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9310B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK::~ARI_IBICallCsVoimsANBRQRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2D9178(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsANBRQRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1090617344;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK::ARI_IBICallCsVoimsANBRIndCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41828000u, 0);
  *(_QWORD *)result = &off_24C9310F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41828000u, 0);
  *(_QWORD *)result = &off_24C9310F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK::ARI_IBICallCsVoimsANBRIndCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9310F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9310F0;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK::~ARI_IBICallCsVoimsANBRIndCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C9310F0;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK::~ARI_IBICallCsVoimsANBRIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2D95B8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsANBRIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1099071488;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x40820000u, 0);
  *(_QWORD *)result = &off_24C931128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x40820000u, 0);
  *(_QWORD *)result = &off_24C931128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931128;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK::~ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C931128;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK::~ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK::pack(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK::unpack(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2D9840(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1082261504;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41020000u, 0);
  *(_QWORD *)result = &off_24C931160;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41020000u, 0);
  *(_QWORD *)result = &off_24C931160;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931160;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931160;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK::~ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C931160;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK::~ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2D9C6C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1090650112;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41830000u, 0);
  *(_QWORD *)result = &off_24C931198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41830000u, 0);
  *(_QWORD *)result = &off_24C931198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931198;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK::~ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C931198;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK::~ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2D9FC4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsANBRProhibitTimerIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1099104256;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41820000u, 0);
  *(_QWORD *)result = &off_24C9311D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41820000u, 0);
  *(_QWORD *)result = &off_24C9311D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9311D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9311D0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK::~ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9311D0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK::~ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2DA240(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsCallRetryFailureIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1099038720;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41810000u, 0);
  *(_QWORD *)result = &off_24C931208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41810000u, 0);
  *(_QWORD *)result = &off_24C931208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931208;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK::~ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C931208;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK::~ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2DA5C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsCallRetryInitiatedIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1098973184;
}

double AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x41818000u, 0);
  *(_QWORD *)v1 = &off_24C931240;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x41818000u, 0);
  *(_QWORD *)v1 = &off_24C931240;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  return result;
}

double AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C931240;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C931240;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK::~ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK(AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C931240;
  v2 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4077774924);
  v4 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = (void *)*((_QWORD *)this + 10);
  if (v5)
  {
    *((_QWORD *)this + 11) = v5;
    operator delete(v5);
  }
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4077774924);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK::~ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;
  const void *v10;
  const void *v11;
  const void *v12;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 1uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      v9 = !v7 || v7 == v8;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, v8 - v7, 0), !(_DWORD)result))
      {
        v10 = (const void *)*((_QWORD *)this + 13);
        if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v10, 4uLL, 0), !(_DWORD)result))
        {
          v11 = (const void *)*((_QWORD *)this + 14);
          if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v11, 1uLL, 0), !(_DWORD)result))
          {
            v12 = (const void *)*((_QWORD *)this + 15);
            if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v12, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _BYTE *v5;
  _OWORD *v6;
  _DWORD *v7;
  _BYTE *v8;
  _DWORD *v9;
  __n128 __p;
  uint64_t v12;
  size_t __sz;
  BOOL v14;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_BYTE *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  }
  v14 = 0;
  __sz = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v6[3] = 0u;
  v6[4] = 0u;
  *((_WORD *)v6 + 40) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 82, &v14, &__sz);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v12 = 0;
    __p = 0uLL;
    std::vector<char>::__init_with_size[abi:ne180100]<char *,char *>(&__p, v6, (uint64_t)v6 + __sz, __sz);
    AriSdk::TlvArray<char,82ul>::operator=((std::vector<int> *)((char *)this + 80), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v6, 0x1000C8077774924);
  }
  __p.n128_u8[0] = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v8 = (_BYTE *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 1, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 14, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4077774924);
  }
  __p.n128_u8[0] = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 15, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E2DACC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsCallRetrySetupIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1099005952;
}

double AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK::ARI_IBICallCsVoimsSessionTransferReq_SDK(AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x40808000u, 0);
  *(_QWORD *)v1 = &off_24C931278;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x40808000u, 0);
  *(_QWORD *)v1 = &off_24C931278;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK::ARI_IBICallCsVoimsSessionTransferReq_SDK(AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C931278;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C931278;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK::~ARI_IBICallCsVoimsSessionTransferReq_SDK(AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C931278;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK::~ARI_IBICallCsVoimsSessionTransferReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK::pack(AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK::unpack(AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  void *v6;
  char *v7;
  char *v8;
  unint64_t v9;
  size_t v10;
  void **v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  void *v15;
  unint64_t v17;
  BOOL v18;
  void *__p[2];
  char v20;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (void *)operator new[]();
  bzero(v6, 0x288uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 648, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    if (v17 >= 0x6C)
    {
      v9 = v17 / 0x6C;
      v10 = 108 * (v17 / 0x6C);
      v7 = (char *)operator new(v10);
      v8 = &v7[108 * v9];
      memcpy(v7, v6, v10);
    }
    else
    {
      v7 = 0;
      v8 = 0;
    }
    v11 = (void **)((char *)this + 80);
    v12 = 0x84BDA12F684BDA13 * ((v8 - v7) >> 2);
    if (v12 < 7)
    {
      v15 = *v11;
      if (*v11)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v11 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v7;
      *((_QWORD *)this + 11) = v8;
      *((_QWORD *)this + 12) = v8;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v20 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, v11, v12, 6);
      if (v20 < 0)
        operator delete(__p[0]);
      if (v7)
        operator delete(v7);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C80CFC2CD8ELL);
  return v3;
}

void sub_20E2DB290(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C80CFC2CD8ELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsSessionTransferReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1082163200;
}

double AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK::ARI_IBICallCsVoimsSessionTransferRspCb_SDK(AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x41008000u, 0);
  *(_QWORD *)v1 = &off_24C9312B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x41008000u, 0);
  *(_QWORD *)v1 = &off_24C9312B0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK::ARI_IBICallCsVoimsSessionTransferRspCb_SDK(AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9312B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C9312B0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK::~ARI_IBICallCsVoimsSessionTransferRspCb_SDK(AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK *this)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C9312B0;
  v2 = (void *)*((_QWORD *)this + 10);
  if (v2)
  {
    *((_QWORD *)this + 11) = v2;
    operator delete(v2);
  }
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK::~ARI_IBICallCsVoimsSessionTransferRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  _BYTE *v7;
  _BYTE *v8;
  BOOL v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (_BYTE *)*((_QWORD *)this + 10);
      v8 = (_BYTE *)*((_QWORD *)this + 11);
      if (v7)
        v9 = v7 == v8;
      else
        v9 = 1;
      if (v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, v8 - v7, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  unint64_t v7;
  char *v8;
  char *v9;
  char *v10;
  size_t v11;
  void **v12;
  const char *v13;
  void **v14;
  void *v15;
  unint64_t v17;
  BOOL v18;
  void *__p[2];
  char v20;

  LOBYTE(__p[0]) = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = LOBYTE(__p[0]) == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  LOBYTE(__p[0]) = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)__p, 0);
  if ((_DWORD)v3 || !LOBYTE(__p[0]))
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v17 = 0xAAAAAAAAAAAAAAAALL;
  v6 = (_OWORD *)operator new[]();
  *v6 = 0u;
  v6[1] = 0u;
  v6[2] = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 48, &v18, &v17);
  if (!(_DWORD)v3 && v18)
  {
    v7 = v17;
    if (v17 >= 8)
    {
      v11 = v17 & 0xFFFFFFFFFFFFFFF8;
      v8 = (char *)operator new(v17 & 0xFFFFFFFFFFFFFFF8);
      v10 = &v8[8 * (v7 >> 3)];
      memcpy(v8, v6, v11);
      v9 = &v8[v11];
    }
    else
    {
      v8 = 0;
      v9 = 0;
      v10 = 0;
    }
    v12 = (void **)((char *)this + 80);
    if ((unint64_t)(v9 - v8) < 0x31)
    {
      v15 = *v12;
      if (*v12)
      {
        *((_QWORD *)this + 11) = v15;
        operator delete(v15);
        *v12 = 0;
        *((_QWORD *)this + 11) = 0;
        *((_QWORD *)this + 12) = 0;
      }
      *((_QWORD *)this + 10) = v8;
      *((_QWORD *)this + 11) = v9;
      *((_QWORD *)this + 12) = v10;
    }
    else
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/inc/ari_sdk_msg.h", "operator=", (uint64_t)__p);
      if (v20 >= 0)
        v14 = __p;
      else
        v14 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) Array assignment too large(%p), got(%zu) max(%zu)", v13, v14, 360, v12, (v9 - v8) >> 3, 6);
      if (v20 < 0)
        operator delete(__p[0]);
      if (v8)
        operator delete(v8);
    }
  }
  MEMORY[0x212BB9B48](v6, 0x1000C804A09149ALL);
  return v3;
}

void sub_20E2DB824(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  uint64_t v21;
  void *v22;

  if (a21 < 0)
    operator delete(__p);
  if (v22)
    operator delete(v22);
  MEMORY[0x212BB9B48](v21, 0x1000C804A09149ALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsSessionTransferRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1090551808;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK(AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41808000u, 0);
  *(_QWORD *)result = &off_24C9312E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41808000u, 0);
  *(_QWORD *)result = &off_24C9312E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK(AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9312E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9312E8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK::~ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK(AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C9312E8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C405A4B087ELL);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK::~ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK::pack(AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x28CuLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK::unpack(AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (void *)operator new();
  bzero(v8, 0x28CuLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 652, &v12, 0);
  if (!(_DWORD)v3 && v12)
  {
    v9 = (void *)operator new();
    memcpy(v9, v8, 0x28CuLL);
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C405A4B087ELL);
  }
  MEMORY[0x212BB9B60](v8, 0x1000C405A4B087ELL);
  return v3;
}

void sub_20E2DBD2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C405A4B087ELL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBICallCsVoimsSrvccHoStatusIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1098940416;
}

double AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x40810000u, 0);
  *(_QWORD *)v1 = &off_24C931320;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x40810000u, 0);
  *(_QWORD *)v1 = &off_24C931320;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  return result;
}

double AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C931320;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C931320;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  return result;
}

void AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK::~ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)this = &off_24C931320;
  v2 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK::~ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK::pack(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 4uLL, 0), !(_DWORD)result))
        {
          result = 0;
          *a2 = (AriMsg *)*((_QWORD *)this + 6);
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK::unpack(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  _DWORD *v11;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v8, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v9 = (_DWORD *)operator new();
    *v9 = *v8;
    v10 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v9;
    if (v10)
      MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v13 = 0;
  v11 = (_DWORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v11, 4, &v13, 0);
  if (!(_DWORD)v3 && v13)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v11);
  MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  return v3;
}

void sub_20E2DC2C0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1082195968;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41010000u, 0);
  *(_QWORD *)result = &off_24C931358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x41010000u, 0);
  *(_QWORD *)result = &off_24C931358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C931358;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK::~ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C931358;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK::~ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK::pack(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK::unpack(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2DC620(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsCallCsVoimsProvideMMTelSessionStatusRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1090584576;
}

void IDMgr::IDMgr(IDMgr *this, unsigned int a2, unsigned int a3)
{
  unint64_t v3;

  *(_DWORD *)this = a2;
  *((_DWORD *)this + 1) = a3;
  *((_QWORD *)this + 2) = 0;
  *((_QWORD *)this + 1) = (char *)this + 16;
  *((_QWORD *)this + 3) = 0;
  *((_QWORD *)this + 5) = 0;
  *((_QWORD *)this + 4) = (char *)this + 40;
  *((_QWORD *)this + 6) = 0;
  v3 = __PAIR64__(a3, a2);
  std::__tree<IDMgr::Range>::__emplace_unique_key_args<IDMgr::Range,IDMgr::Range>((uint64_t **)this + 1, (int *)&v3, (uint64_t *)&v3);
}

void sub_20E2DC6E4(_Unwind_Exception *a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD **v3;
  _QWORD **v4;

  std::__tree<IDMgr::Range>::destroy(v2, *v4);
  std::__tree<IDMgr::Range>::destroy(v1, *v3);
  _Unwind_Resume(a1);
}

uint64_t *IDMgr::reset(IDMgr *this)
{
  uint64_t **v2;
  _QWORD *v3;
  _QWORD *v5;

  v2 = (uint64_t **)((char *)this + 8);
  v3 = (_QWORD *)((char *)this + 16);
  std::__tree<IDMgr::Range>::destroy((uint64_t)this + 8, *((_QWORD **)this + 2));
  *((_QWORD *)this + 1) = v3;
  *((_QWORD *)this + 3) = 0;
  *v3 = 0;
  std::__tree<IDMgr::Range>::destroy((uint64_t)this + 32, *((_QWORD **)this + 5));
  *((_QWORD *)this + 4) = (char *)this + 40;
  *((_QWORD *)this + 6) = 0;
  *((_QWORD *)this + 5) = 0;
  v5 = *(_QWORD **)this;
  return std::__tree<IDMgr::Range>::__emplace_unique_key_args<IDMgr::Range,IDMgr::Range>(v2, (int *)&v5, (uint64_t *)&v5);
}

BOOL IDMgr::allocate(uint64_t **this, int *a2, int a3)
{
  _BOOL8 v6;
  _BOOL8 v7;
  const char *v8;
  void **v9;
  void *__p[2];
  char v12;

  v6 = IDMgr::_allocate((uint64_t)this, a2, this + 1);
  v7 = v6;
  if (!v6 && a3)
  {
    v7 = IDMgr::_allocate(v6, a2, this + 4);
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "allocate", (uint64_t)__p);
    if (v12 >= 0)
      v9 = __p;
    else
      v9 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) parkedRangeSet is used for allocation.", v8, v9, 41);
    if (v12 < 0)
      operator delete(__p[0]);
  }
  return v7;
}

void sub_20E2DC83C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL IDMgr::_allocate(uint64_t a1, _DWORD *a2, uint64_t **a3)
{
  uint64_t *v3;
  uint64_t *v6;
  int v7;
  int v8;
  uint64_t v10;

  v3 = a3[2];
  if (v3)
  {
    v6 = *a3;
    v7 = *((_DWORD *)*a3 + 7);
    v8 = *((_DWORD *)*a3 + 8);
    std::__tree<IDMgr::Range>::__remove_node_pointer(a3, *a3);
    operator delete(v6);
    if (v7 < v8)
    {
      LODWORD(v10) = v7 + 1;
      HIDWORD(v10) = v8;
      std::__tree<IDMgr::Range>::__emplace_unique_key_args<IDMgr::Range,IDMgr::Range>(a3, (int *)&v10, &v10);
    }
    if (a2)
      *a2 = v7;
  }
  return v3 != 0;
}

uint64_t IDMgr::allocate(IDMgr *this, uint64_t a2)
{
  const char *v5;
  void **v6;
  void *__p[2];
  char v8;

  if ((IDMgr::_allocate((unsigned int *)this, a2, (uint64_t **)this + 1) & 1) != 0)
    return 1;
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "allocate", (uint64_t)__p);
  if (v8 >= 0)
    v6 = __p;
  else
    v6 = (void **)__p[0];
  Ari::Log((Ari *)0x10, "(%s:%d) parkedRangeSet is checked for allocation on %d.", v5, v6, 50, a2);
  if (v8 < 0)
    operator delete(__p[0]);
  return IDMgr::_allocate((unsigned int *)this, a2, (uint64_t **)this + 4);
}

void sub_20E2DC990(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t IDMgr::_allocate(unsigned int *a1, uint64_t a2, uint64_t **a3)
{
  const char *v5;
  void **v6;
  uint64_t v8;
  void *v9;
  int v10;
  int v11;
  void *__p[2];
  char v14;

  if ((int)*a1 > (int)a2 || (int)a1[1] < (int)a2)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_allocate", (uint64_t)__p);
    if (v14 >= 0)
      v6 = __p;
    else
      v6 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) %d is out of bound for the manager [%d %d]", v5, v6, 101, a2, *a1, a1[1]);
    if (v14 < 0)
      operator delete(__p[0]);
    return 0;
  }
  LODWORD(__p[0]) = a2;
  HIDWORD(__p[0]) = a2;
  v8 = std::__tree<IDMgr::Range>::find<IDMgr::Range>((uint64_t)a3, (int *)__p);
  if (a3 + 1 == (uint64_t **)v8)
    return 0;
  v9 = (void *)v8;
  v11 = *(_DWORD *)(v8 + 28);
  v10 = *(_DWORD *)(v8 + 32);
  std::__tree<IDMgr::Range>::__remove_node_pointer(a3, (uint64_t *)v8);
  operator delete(v9);
  if (v11 < (int)a2)
  {
    LODWORD(__p[0]) = v11;
    HIDWORD(__p[0]) = a2 - 1;
    std::__tree<IDMgr::Range>::__emplace_unique_key_args<IDMgr::Range,IDMgr::Range>(a3, (int *)__p, (uint64_t *)__p);
  }
  if (v10 > (int)a2)
  {
    LODWORD(__p[0]) = a2 + 1;
    HIDWORD(__p[0]) = v10;
    std::__tree<IDMgr::Range>::__emplace_unique_key_args<IDMgr::Range,IDMgr::Range>(a3, (int *)__p, (uint64_t *)__p);
  }
  return 1;
}

void sub_20E2DCAE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

BOOL IDMgr::isAlloc(IDMgr *this, int a2)
{
  IDMgr *v5;
  IDMgr *v6;
  int v8;
  int v9;

  if (*((_DWORD *)this + 1) < a2 || *(_DWORD *)this > a2)
    return 0;
  v8 = a2;
  v9 = a2;
  v5 = (IDMgr *)std::__tree<IDMgr::Range>::find<IDMgr::Range>((uint64_t)this + 8, &v8);
  v8 = a2;
  v9 = a2;
  v6 = (IDMgr *)std::__tree<IDMgr::Range>::find<IDMgr::Range>((uint64_t)this + 32, &v8);
  return (IDMgr *)((char *)this + 16) == v5 && (IDMgr *)((char *)this + 40) == v6;
}

uint64_t IDMgr::free(IDMgr *this, uint64_t a2, int a3)
{
  uint64_t v3;

  v3 = 8;
  if (a3)
    v3 = 32;
  return IDMgr::_free((unsigned int *)this, a2, (uint64_t)this + v3);
}

uint64_t IDMgr::_free(unsigned int *a1, uint64_t a2, uint64_t a3)
{
  const char *v5;
  void **v6;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  BOOL v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  const char *v22;
  void **v23;
  uint64_t v24;
  BOOL v25;
  int v26;
  const char *v27;
  void **v28;
  const char *v29;
  void **v30;
  const char *v31;
  void **v32;
  const char *v33;
  void **v34;
  const char *v35;
  void **v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  const char *v41;
  void **v42;
  const char *v43;
  void **v44;
  const char *v45;
  void **v46;
  const char *v47;
  void **v48;
  const char *v49;
  void **v50;
  const char *v51;
  void *__p[2];
  char v53;

  if ((int)*a1 > (int)a2 || (int)a1[1] < (int)a2)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
    if (v53 >= 0)
      v6 = __p;
    else
      v6 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) %d is out of bound for the manager [%d %d]", v5, v6, 127, a2, *a1, a1[1]);
LABEL_7:
    if (v53 < 0)
      operator delete(__p[0]);
    return 0;
  }
  LODWORD(__p[0]) = a2;
  HIDWORD(__p[0]) = a2;
  v9 = std::__tree<IDMgr::Range>::find<IDMgr::Range>(a3, (int *)__p);
  v10 = (uint64_t *)(a3 + 8);
  if (a3 + 8 != v9 && *(_DWORD *)(v9 + 28) <= (int)a2 && *(_DWORD *)(v9 + 32) >= (int)a2)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
    if (v53 >= 0)
      v30 = __p;
    else
      v30 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) %d is already freed", v29, v30, 134, a2);
    goto LABEL_7;
  }
  if (!*(_QWORD *)(a3 + 16))
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
    if (v53 >= 0)
      v23 = __p;
    else
      v23 = (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) First free after a full allocation %d", v22, v23, 140, a2);
    goto LABEL_95;
  }
  v11 = *v10;
  if (!*v10)
  {
    v24 = a3 + 8;
    do
    {
      v21 = *(_QWORD *)(v24 + 16);
      v25 = *(_QWORD *)v21 == v24;
      v24 = v21;
    }
    while (v25);
    goto LABEL_35;
  }
  v12 = a3 + 8;
  v13 = *v10;
  do
  {
    v14 = *(_DWORD *)(v13 + 28);
    v15 = v14 <= (int)a2;
    if (v14 <= (int)a2)
      v16 = (uint64_t *)(v13 + 8);
    else
      v16 = (uint64_t *)v13;
    if (!v15)
      v12 = v13;
    v13 = *v16;
  }
  while (*v16);
  if ((uint64_t *)v12 == v10)
  {
    do
    {
      v21 = v11;
      v11 = *(_QWORD *)(v11 + 8);
    }
    while (v11);
LABEL_35:
    if ((uint64_t *)v21 == v10)
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
      if (v53 >= 0)
        v32 = __p;
      else
        v32 = (void **)__p[0];
      Ari::Log((Ari *)8, "(%s:%d) targetSet is empty! This is likely not invoked atomically", v31, v32, 155);
      if (v53 < 0)
        operator delete(__p[0]);
      AriOsa::SWTrap(1, (uint64_t)"true", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x9C);
      return 0;
    }
    if (*(_DWORD *)(v21 + 32) + 1 == (_DWORD)a2)
    {
      v26 = *(_DWORD *)(v21 + 28);
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
      if (v53 >= 0)
        v28 = __p;
      else
        v28 = (void **)__p[0];
      Ari::Log((Ari *)4, "(%s:%d) Upper free range merged %d", v27, v28, 165, a2);
      if (v53 < 0)
        operator delete(__p[0]);
      std::__tree<IDMgr::Range>::__remove_node_pointer((uint64_t **)a3, (uint64_t *)v21);
      operator delete((void *)v21);
      LODWORD(__p[0]) = v26;
      goto LABEL_98;
    }
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
    if (v53 >= 0)
      v34 = __p;
    else
      v34 = (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) New upper free range %d", v33, v34, 169, a2);
    goto LABEL_95;
  }
  v18 = *(unsigned int *)(v12 + 28);
  v17 = *(unsigned int *)(v12 + 32);
  if (v12 == *(_QWORD *)a3)
  {
    if ((_DWORD)v18 - 1 == (_DWORD)a2)
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
      if (v53 >= 0)
        v36 = __p;
      else
        v36 = (void **)__p[0];
      Ari::Log((Ari *)4, "(%s:%d) Lower free range merged %d", v35, v36, 181, a2);
      goto LABEL_77;
    }
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
    if (v53 >= 0)
      v46 = __p;
    else
      v46 = (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) New lower free range %d ", v45, v46, 188, a2);
LABEL_95:
    if (v53 < 0)
      operator delete(__p[0]);
    LODWORD(__p[0]) = a2;
    goto LABEL_98;
  }
  v19 = *(_QWORD *)v12;
  if (*(_QWORD *)v12)
  {
    do
    {
      v20 = v19;
      v19 = *(_QWORD *)(v19 + 8);
    }
    while (v19);
  }
  else
  {
    v37 = v12;
    do
    {
      v20 = *(_QWORD *)(v37 + 16);
      v25 = *(_QWORD *)v20 == v37;
      v37 = v20;
    }
    while (v25);
  }
  v38 = *(unsigned int *)(v20 + 32);
  v39 = v18 - 1;
  if ((_DWORD)v38 + 1 != (_DWORD)a2)
  {
    if (v39 == (_DWORD)a2)
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
      if (v53 >= 0)
        v44 = __p;
      else
        v44 = (void **)__p[0];
      Ari::Log((Ari *)4, "(%s:%d) Merge with upper[%d %d]", v43, v44, 206, v18, v17);
LABEL_77:
      if (v53 < 0)
        operator delete(__p[0]);
      std::__tree<IDMgr::Range>::__remove_node_pointer((uint64_t **)a3, (uint64_t *)v12);
      operator delete((void *)v12);
      LODWORD(__p[0]) = a2;
      goto LABEL_80;
    }
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
    if (v53 >= 0)
      v50 = __p;
    else
      v50 = (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) New independent middle range %d", v49, v50, 215, a2);
    goto LABEL_95;
  }
  v40 = *(unsigned int *)(v20 + 28);
  if (v39 != (_DWORD)a2)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
    if (v53 >= 0)
      v48 = __p;
    else
      v48 = (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) Merge with lower[%d %d] ", v47, v48, 211, v40, v38);
    if (v53 < 0)
      operator delete(__p[0]);
    std::__tree<IDMgr::Range>::__remove_node_pointer((uint64_t **)a3, (uint64_t *)v20);
    operator delete((void *)v20);
    LODWORD(__p[0]) = v40;
LABEL_98:
    HIDWORD(__p[0]) = a2;
    goto LABEL_99;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "_free", (uint64_t)__p);
  if (v53 >= 0)
    v42 = __p;
  else
    v42 = (void **)__p[0];
  Ari::Log((Ari *)4, "(%s:%d) Merg middle lower[%d %d] upper[%d %d]", v41, v42, 200, v40, v38, v18, v17);
  if (v53 < 0)
    operator delete(__p[0]);
  std::__tree<IDMgr::Range>::__remove_node_pointer((uint64_t **)a3, (uint64_t *)v12);
  operator delete((void *)v12);
  std::__tree<IDMgr::Range>::__remove_node_pointer((uint64_t **)a3, (uint64_t *)v20);
  operator delete((void *)v20);
  LODWORD(__p[0]) = v40;
LABEL_80:
  HIDWORD(__p[0]) = v17;
LABEL_99:
  std::__tree<IDMgr::Range>::__emplace_unique_key_args<IDMgr::Range,IDMgr::Range>((uint64_t **)a3, (int *)__p, (uint64_t *)__p);
  IDMgr::dump((IDMgr *)a1, 0, v51);
  return 1;
}

void sub_20E2DD1C4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void IDMgr::dump(IDMgr *this, char a2, const char *a3)
{
  const char *v4;
  IDMgr *v5;
  IDMgr *v6;
  IDMgr *v7;
  BOOL v8;
  const char *v9;
  const char *v10;
  IDMgr *v11;
  IDMgr *v12;
  IDMgr *v13;

  if ((a2 & 1) != 0 || (DefaultLogLevel & 4) != 0)
  {
    Ari::Log((Ari *)0x100, "=== IDgmr(%p) ===\nFree ranges: %zu\n", a3, this, *((_QWORD *)this + 3));
    v5 = (IDMgr *)*((_QWORD *)this + 1);
    if (v5 != (IDMgr *)((char *)this + 16))
    {
      do
      {
        Ari::Log((Ari *)0x100, "{0x%04x, 0x%04x},\n", v4, *((unsigned int *)v5 + 7), *((unsigned int *)v5 + 8));
        v6 = (IDMgr *)*((_QWORD *)v5 + 1);
        if (v6)
        {
          do
          {
            v7 = v6;
            v6 = *(IDMgr **)v6;
          }
          while (v6);
        }
        else
        {
          do
          {
            v7 = (IDMgr *)*((_QWORD *)v5 + 2);
            v8 = *(_QWORD *)v7 == (_QWORD)v5;
            v5 = v7;
          }
          while (!v8);
        }
        v5 = v7;
      }
      while (v7 != (IDMgr *)((char *)this + 16));
    }
    Ari::Log((Ari *)0x100, "{-1, -1}\n", v4);
    Ari::Log((Ari *)0x100, "Parked ranges: %zu\n", v9, *((_QWORD *)this + 6));
    v11 = (IDMgr *)*((_QWORD *)this + 4);
    if (v11 != (IDMgr *)((char *)this + 40))
    {
      do
      {
        Ari::Log((Ari *)0x100, "{0x%04x, 0x%04x},\n", v10, *((unsigned int *)v11 + 7), *((unsigned int *)v11 + 8));
        v12 = (IDMgr *)*((_QWORD *)v11 + 1);
        if (v12)
        {
          do
          {
            v13 = v12;
            v12 = *(IDMgr **)v12;
          }
          while (v12);
        }
        else
        {
          do
          {
            v13 = (IDMgr *)*((_QWORD *)v11 + 2);
            v8 = *(_QWORD *)v13 == (_QWORD)v11;
            v11 = v13;
          }
          while (!v8);
        }
        v11 = v13;
      }
      while (v13 != (IDMgr *)((char *)this + 40));
    }
    Ari::Log((Ari *)0x100, "{-1, -1}\n\n", v10);
  }
}

Ari::MsgSet *Ari::MsgSet::MsgSet(Ari::MsgSet *this, char *a2)
{
  _QWORD *v3;

  v3 = std::string::basic_string[abi:ne180100]<0>(this, a2);
  v3[7] = 0;
  *(_OWORD *)(v3 + 5) = 0u;
  *(_OWORD *)(v3 + 3) = 0u;
  *((_DWORD *)v3 + 16) = 1065353216;
  *((_QWORD *)this + 3) = dispatch_semaphore_create(1);
  return this;
}

{
  _QWORD *v3;

  v3 = std::string::basic_string[abi:ne180100]<0>(this, a2);
  v3[7] = 0;
  *(_OWORD *)(v3 + 5) = 0u;
  *(_OWORD *)(v3 + 3) = 0u;
  *((_DWORD *)v3 + 16) = 1065353216;
  *((_QWORD *)this + 3) = dispatch_semaphore_create(1);
  return this;
}

void Ari::MsgSet::~MsgSet(Ari::MsgSet *this)
{
  NSObject *v2;
  _QWORD *v3;
  _QWORD *v4;
  void *v5;

  v2 = *((_QWORD *)this + 3);
  if (v2)
    dispatch_release(v2);
  v3 = (_QWORD *)*((_QWORD *)this + 6);
  if (v3)
  {
    do
    {
      v4 = (_QWORD *)*v3;
      operator delete(v3);
      v3 = v4;
    }
    while (v4);
  }
  v5 = (void *)*((_QWORD *)this + 4);
  *((_QWORD *)this + 4) = 0;
  if (v5)
    operator delete(v5);
  if (*((char *)this + 23) < 0)
    operator delete(*(void **)this);
}

uint64_t Ari::MsgSet::add(Ari::MsgSet *this, int a2, int a3)
{
  return Ari::MsgSet::add(this, (a3 << 15) | (a2 << 26));
}

uint64_t Ari::MsgSet::add(Ari::MsgSet *this, unsigned int a2)
{
  Ari *v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int *v7;
  _BOOL8 v8;
  void **v9;
  const char *v10;
  void **v11;
  dispatch_semaphore_t v12;
  const char *v13;
  void **v14;
  unint64_t v16;
  unint64_t v17;
  uint8x8_t v18;
  unint64_t v19;
  uint64_t **v20;
  uint64_t *i;
  unint64_t v22;
  _QWORD *v23;
  float v24;
  float v25;
  _BOOL8 v26;
  unint64_t v27;
  unint64_t v28;
  int8x8_t prime;
  void *v30;
  void *v31;
  uint64_t v32;
  _QWORD *v33;
  unint64_t v34;
  uint8x8_t v35;
  unint64_t v36;
  uint8x8_t v37;
  uint64_t v38;
  _QWORD *v39;
  unint64_t v40;
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  const char *v44;
  void **v45;
  dispatch_semaphore_t v46;
  void *v47;
  void *__p[2];
  char v49;

  v4 = (Ari *)(a2 >> 26);
  v5 = (a2 >> 15) & 0x3FF;
  v6 = Ari::MsgDefById(v4, (a2 >> 15) & 0x3FF);
  if (v6)
  {
    v7 = (unsigned int *)v6;
    v8 = dispatch_semaphore_wait(*((dispatch_semaphore_t *)this + 3), 0xFFFFFFFFFFFFFFFFLL) != 0;
    AriOsa::SWTrap(v8, (uint64_t)"AriOsa::OsMutexTake(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x10C);
    v9 = (void **)((char *)this + 32);
    if (std::__hash_table<std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ARIMSGDEF const*>>>::find<unsigned int>((_QWORD *)this + 4, a2))
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "add", (uint64_t)__p);
      if (v49 >= 0)
        v11 = __p;
      else
        v11 = (void **)__p[0];
      v12 = (dispatch_semaphore_t)this;
      if (*((char *)this + 23) < 0)
        v12 = *(dispatch_semaphore_t *)this;
      Ari::Log((Ari *)0x20, "(%s:%d) %s(%d-%x) already in %s", v10, v11, 281, *((_QWORD *)v7 + 6), *v7, v7[1], v12);
LABEL_96:
      if (v49 < 0)
        operator delete(__p[0]);
      dispatch_semaphore_signal(*((dispatch_semaphore_t *)this + 3));
      AriOsa::SWTrap(0, (uint64_t)"AriOsa::OsMutexGive(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x11C);
      return 0;
    }
    v16 = a2;
    v17 = *((_QWORD *)this + 5);
    if (v17)
    {
      v18 = (uint8x8_t)vcnt_s8((int8x8_t)v17);
      v18.i16[0] = vaddlv_u8(v18);
      if (v18.u32[0] > 1uLL)
      {
        v19 = a2;
        if (v17 <= a2)
          v19 = a2 % v17;
      }
      else
      {
        v19 = ((_DWORD)v17 - 1) & a2;
      }
      v20 = (uint64_t **)*((_QWORD *)*v9 + v19);
      if (v20)
      {
        for (i = *v20; i; i = (uint64_t *)*i)
        {
          v22 = i[1];
          if (v22 == a2)
          {
            if (*((_DWORD *)i + 4) == a2)
              goto LABEL_90;
          }
          else
          {
            if (v18.u32[0] > 1uLL)
            {
              if (v22 >= v17)
                v22 %= v17;
            }
            else
            {
              v22 &= v17 - 1;
            }
            if (v22 != v19)
              break;
          }
        }
      }
    }
    else
    {
      v19 = 0xAAAAAAAAAAAAAAAALL;
    }
    v23 = operator new(0x20uLL);
    *v23 = 0;
    v23[1] = a2;
    *((_DWORD *)v23 + 4) = a2;
    v23[3] = v7;
    v24 = (float)(unint64_t)(*((_QWORD *)this + 7) + 1);
    v25 = *((float *)this + 16);
    if (v17 && (float)(v25 * (float)v17) >= v24)
    {
      v16 = v19;
      goto LABEL_80;
    }
    v26 = 1;
    if (v17 >= 3)
      v26 = (v17 & (v17 - 1)) != 0;
    v27 = v26 | (2 * v17);
    v28 = vcvtps_u32_f32(v24 / v25);
    if (v27 <= v28)
      prime = (int8x8_t)v28;
    else
      prime = (int8x8_t)v27;
    if (*(_QWORD *)&prime == 1)
    {
      prime = (int8x8_t)2;
    }
    else if ((*(_QWORD *)&prime & (*(_QWORD *)&prime - 1)) != 0)
    {
      prime = (int8x8_t)std::__next_prime(*(_QWORD *)&prime);
      v17 = *((_QWORD *)this + 5);
    }
    if (*(_QWORD *)&prime <= v17)
    {
      if (*(_QWORD *)&prime >= v17)
        goto LABEL_76;
      v36 = vcvtps_u32_f32((float)*((unint64_t *)this + 7) / *((float *)this + 16));
      if (v17 < 3 || (v37 = (uint8x8_t)vcnt_s8((int8x8_t)v17), v37.i16[0] = vaddlv_u8(v37), v37.u32[0] > 1uLL))
      {
        v36 = std::__next_prime(v36);
      }
      else
      {
        v38 = 1 << -(char)__clz(v36 - 1);
        if (v36 >= 2)
          v36 = v38;
      }
      if (*(_QWORD *)&prime <= v36)
        prime = (int8x8_t)v36;
      if (*(_QWORD *)&prime >= v17)
      {
        v17 = *((_QWORD *)this + 5);
        goto LABEL_76;
      }
      if (!*(_QWORD *)&prime)
      {
        v47 = *v9;
        *v9 = 0;
        if (v47)
          operator delete(v47);
        v17 = 0;
        *((_QWORD *)this + 5) = 0;
        goto LABEL_76;
      }
    }
    if (*(_QWORD *)&prime >> 61)
      std::__throw_bad_array_new_length[abi:ne180100]();
    v30 = operator new(8 * *(_QWORD *)&prime);
    v31 = *v9;
    *v9 = v30;
    if (v31)
      operator delete(v31);
    v32 = 0;
    *((int8x8_t *)this + 5) = prime;
    do
      *((_QWORD *)*v9 + v32++) = 0;
    while (*(_QWORD *)&prime != v32);
    v33 = (_QWORD *)*((_QWORD *)this + 6);
    if (v33)
    {
      v34 = v33[1];
      v35 = (uint8x8_t)vcnt_s8(prime);
      v35.i16[0] = vaddlv_u8(v35);
      if (v35.u32[0] > 1uLL)
      {
        if (v34 >= *(_QWORD *)&prime)
          v34 %= *(_QWORD *)&prime;
      }
      else
      {
        v34 &= *(_QWORD *)&prime - 1;
      }
      *((_QWORD *)*v9 + v34) = (char *)this + 48;
      v39 = (_QWORD *)*v33;
      if (*v33)
      {
        do
        {
          v40 = v39[1];
          if (v35.u32[0] > 1uLL)
          {
            if (v40 >= *(_QWORD *)&prime)
              v40 %= *(_QWORD *)&prime;
          }
          else
          {
            v40 &= *(_QWORD *)&prime - 1;
          }
          if (v40 != v34)
          {
            if (!*((_QWORD *)*v9 + v40))
            {
              *((_QWORD *)*v9 + v40) = v33;
              goto LABEL_72;
            }
            *v33 = *v39;
            *v39 = **((_QWORD **)*v9 + v40);
            **((_QWORD **)*v9 + v40) = v39;
            v39 = v33;
          }
          v40 = v34;
LABEL_72:
          v33 = v39;
          v39 = (_QWORD *)*v39;
          v34 = v40;
        }
        while (v39);
      }
    }
    v17 = (unint64_t)prime;
LABEL_76:
    if ((v17 & (v17 - 1)) != 0)
    {
      if (v17 <= v16)
        v16 %= v17;
    }
    else
    {
      v16 = ((_DWORD)v17 - 1) & v16;
    }
LABEL_80:
    v41 = *v9;
    v42 = (_QWORD *)*((_QWORD *)*v9 + v16);
    if (v42)
    {
      *v23 = *v42;
    }
    else
    {
      *v23 = *((_QWORD *)this + 6);
      *((_QWORD *)this + 6) = v23;
      v41[v16] = (char *)this + 48;
      if (!*v23)
        goto LABEL_89;
      v43 = *(_QWORD *)(*v23 + 8);
      if ((v17 & (v17 - 1)) != 0)
      {
        if (v43 >= v17)
          v43 %= v17;
      }
      else
      {
        v43 &= v17 - 1;
      }
      v42 = (char *)*v9 + 8 * v43;
    }
    *v42 = v23;
LABEL_89:
    ++*((_QWORD *)this + 7);
LABEL_90:
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "add", (uint64_t)__p);
    if (v49 >= 0)
      v45 = __p;
    else
      v45 = (void **)__p[0];
    v46 = (dispatch_semaphore_t)this;
    if (*((char *)this + 23) < 0)
      v46 = *(dispatch_semaphore_t *)this;
    Ari::Log((Ari *)0x200, "(%s:%d) @@%s add %s", v44, v45, 277, v46, *((_QWORD *)v7 + 6));
    goto LABEL_96;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "add", (uint64_t)__p);
  if (v49 >= 0)
    v14 = __p;
  else
    v14 = (void **)__p[0];
  if (*((char *)this + 23) < 0)
    this = *(Ari::MsgSet **)this;
  Ari::Log((Ari *)0x10, "(%s:%d) %s: Can not find gmid(%d-%x) in SDK", v13, v14, 263, this, v4, v5);
  if (v49 < 0)
    operator delete(__p[0]);
  return 4294967225;
}

void sub_20E2DDA24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  void *v21;

  operator delete(v21);
  _Unwind_Resume(a1);
}

uint64_t Ari::MsgSet::remove(dispatch_semaphore_t *this, unsigned int a2)
{
  _BOOL8 v4;
  _QWORD *v5;
  uint64_t *v6;
  uint64_t *v7;
  const char *v8;
  void **v9;
  dispatch_semaphore_t v10;
  int8x8_t v11;
  NSObject *v12;
  unint64_t v13;
  uint8x8_t v14;
  const char *v15;
  void **v16;
  dispatch_semaphore_t v17;
  uint64_t *v18;
  uint64_t *v19;
  dispatch_semaphore_t *v20;
  dispatch_semaphore_t v21;
  unint64_t isa;
  unint64_t v23;
  void *__p[2];
  char v26;

  v4 = dispatch_semaphore_wait(this[3], 0xFFFFFFFFFFFFFFFFLL) != 0;
  AriOsa::SWTrap(v4, (uint64_t)"AriOsa::OsMutexTake(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x123);
  v5 = this + 4;
  v6 = std::__hash_table<std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ARIMSGDEF const*>>>::find<unsigned int>(this + 4, a2);
  if (v6)
  {
    v7 = v6;
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "remove", (uint64_t)__p);
    if (v26 >= 0)
      v9 = __p;
    else
      v9 = (void **)__p[0];
    v10 = (dispatch_semaphore_t)this;
    if (*((char *)this + 23) < 0)
      v10 = *this;
    Ari::Log((Ari *)0x200, "(%s:%d) @@%s rmv %s", v8, v9, 300, v10, *(_QWORD *)(v7[3] + 48));
    if (v26 < 0)
      operator delete(__p[0]);
    v11 = (int8x8_t)this[5];
    v12 = *v7;
    v13 = v7[1];
    v14 = (uint8x8_t)vcnt_s8(v11);
    v14.i16[0] = vaddlv_u8(v14);
    if (v14.u32[0] > 1uLL)
    {
      if (v13 >= *(_QWORD *)&v11)
        v13 %= *(_QWORD *)&v11;
    }
    else
    {
      v13 &= *(_QWORD *)&v11 - 1;
    }
    v19 = *(uint64_t **)(*v5 + 8 * v13);
    do
    {
      v20 = (dispatch_semaphore_t *)v19;
      v19 = (uint64_t *)*v19;
    }
    while (v19 != v7);
    if (v20 == this + 6)
      goto LABEL_33;
    v21 = v20[1];
    if (v14.u32[0] > 1uLL)
    {
      if ((unint64_t)v21 >= *(_QWORD *)&v11)
        v21 = (dispatch_semaphore_t)((unint64_t)v21 % *(_QWORD *)&v11);
    }
    else
    {
      v21 = (dispatch_semaphore_t)((unint64_t)v21 & (*(_QWORD *)&v11 - 1));
    }
    if (v21 != (dispatch_semaphore_t)v13)
    {
LABEL_33:
      if (v12)
      {
        isa = (unint64_t)v12[1].isa;
        if (v14.u32[0] > 1uLL)
        {
          v23 = (unint64_t)v12[1].isa;
          if (isa >= *(_QWORD *)&v11)
            v23 = isa % *(_QWORD *)&v11;
        }
        else
        {
          v23 = isa & (*(_QWORD *)&v11 - 1);
        }
        if (v23 == v13)
          goto LABEL_37;
      }
      *(_QWORD *)(*v5 + 8 * v13) = 0;
      v12 = *v7;
    }
    if (!v12)
    {
LABEL_43:
      *v20 = v12;
      *v7 = 0;
      this[7] = (dispatch_semaphore_t)((char *)this[7] - 1);
      v18 = v7;
      goto LABEL_44;
    }
    isa = (unint64_t)v12[1].isa;
LABEL_37:
    if (v14.u32[0] > 1uLL)
    {
      if (isa >= *(_QWORD *)&v11)
        isa %= *(_QWORD *)&v11;
    }
    else
    {
      isa &= *(_QWORD *)&v11 - 1;
    }
    if (isa != v13)
    {
      *(_QWORD *)(*v5 + 8 * isa) = v20;
      v12 = *v7;
    }
    goto LABEL_43;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "remove", (uint64_t)__p);
  if (v26 >= 0)
    v16 = __p;
  else
    v16 = (void **)__p[0];
  v17 = (dispatch_semaphore_t)this;
  if (*((char *)this + 23) < 0)
    v17 = *this;
  Ari::Log((Ari *)0x10, "(%s:%d) Attempt to remove gmid(%d-%x) not in %s", v15, v16, 305, a2 >> 26, (a2 >> 15) & 0x3FF, v17);
  if (v26 < 0)
  {
    v18 = (uint64_t *)__p[0];
LABEL_44:
    operator delete(v18);
  }
  dispatch_semaphore_signal(this[3]);
  AriOsa::SWTrap(0, (uint64_t)"AriOsa::OsMutexGive(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x134);
  return 0;
}

void sub_20E2DDD00(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  if (a19 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t Ari::MsgSet::operator[](uint64_t a1, unsigned int a2)
{
  _BOOL8 v4;
  uint64_t *v5;
  uint64_t v6;

  v4 = dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 24), 0xFFFFFFFFFFFFFFFFLL) != 0;
  AriOsa::SWTrap(v4, (uint64_t)"AriOsa::OsMutexTake(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x13B);
  v5 = std::__hash_table<std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ARIMSGDEF const*>>>::find<unsigned int>((_QWORD *)(a1 + 32), a2);
  if (v5)
    v6 = v5[3];
  else
    v6 = 0;
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 24));
  AriOsa::SWTrap(0, (uint64_t)"AriOsa::OsMutexGive(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x145);
  return v6;
}

uint64_t Ari::MsgSet::foreach(uint64_t a1, uint64_t a2)
{
  _BOOL8 v4;
  _QWORD *i;
  uint64_t v6;
  uint64_t v8;

  v4 = dispatch_semaphore_wait(*(dispatch_semaphore_t *)(a1 + 24), 0xFFFFFFFFFFFFFFFFLL) != 0;
  AriOsa::SWTrap(v4, (uint64_t)"AriOsa::OsMutexTake(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x14B);
  AriOsa::SWTrap(*(_QWORD *)(a2 + 24) == 0, (uint64_t)"handler == NULL", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x14C);
  for (i = *(_QWORD **)(a1 + 48); i; i = (_QWORD *)*i)
  {
    v8 = i[3];
    v6 = *(_QWORD *)(a2 + 24);
    if (!v6)
      std::__throw_bad_function_call[abi:ne180100]();
    (*(void (**)(uint64_t, uint64_t *))(*(_QWORD *)v6 + 48))(v6, &v8);
  }
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 24));
  return AriOsa::SWTrap(0, (uint64_t)"AriOsa::OsMutexGive(mtx) == ARI_RESULT_ERR", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x157);
}

std::string *Ari::ScopeTimer::ScopeTimer(std::string *this, __int128 *a2, int a3, int a4)
{
  __int128 v7;

  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(this, *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v7 = *a2;
    this->__r_.__value_.__r.__words[2] = *((_QWORD *)a2 + 2);
    *(_OWORD *)&this->__r_.__value_.__l.__data_ = v7;
  }
  LODWORD(this[1].__r_.__value_.__l.__data_) = a3;
  HIDWORD(this[1].__r_.__value_.__r.__words[0]) = a4;
  LODWORD(this[1].__r_.__value_.__r.__words[1]) = 0;
  LODWORD(this[1].__r_.__value_.__r.__words[1]) = (int)(std::chrono::system_clock::now().__d_.__rep_ - AriOsa_Init_Time)
                                                / 1000;
  return this;
}

void Ari::ScopeTimer::~ScopeTimer(Ari::ScopeTimer *this)
{
  uint64_t v2;
  const char *v3;
  void **v4;
  Ari::ScopeTimer *v5;
  void *__p[2];
  char v7;

  v2 = ((int)(std::chrono::system_clock::now().__d_.__rep_ - AriOsa_Init_Time) / 1000
                    - *((_DWORD *)this + 8));
  if (v2 >= *((_DWORD *)this + 6))
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "~ScopeTimer", (uint64_t)__p);
    if (v7 >= 0)
      v4 = __p;
    else
      v4 = (void **)__p[0];
    v5 = this;
    if (*((char *)this + 23) < 0)
      v5 = *(Ari::ScopeTimer **)this;
    Ari::Log((Ari *)0x10, "(%s:%d) %s delay(%d) exceeds warning level(%d) ", v3, v4, 361, v5, v2, *((unsigned int *)this + 6));
    if (v7 < 0)
      operator delete(__p[0]);
    AriOsa::SWTrap(v2 >= *((_DWORD *)this + 7), (uint64_t)"delta >= trapLimit", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x16A);
  }
  if (*((char *)this + 23) < 0)
    operator delete(*(void **)this);
}

uint64_t AriFramer_HeaderMagicScan(const unsigned __int8 *a1, unint64_t a2, unsigned int *a3, unint64_t *a4)
{
  unsigned int *v5;
  BOOL v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  const char *v13;
  void **v14;
  uint64_t v15;
  AriOsa *v16;
  std::string::value_type *v17;
  const char *v18;
  const char *v19;
  void **v20;
  uint64_t v21;
  int v22;
  unsigned int *v23;
  const char *v24;
  AriOsa *v25;
  uint64_t v26;
  std::string::value_type *v27;
  AriOsa *v28;
  std::string::value_type *v29;
  const char *v30;
  void **v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  const char *v36;
  void **v37;
  uint64_t result;
  unint64_t v39;
  const char *v40;
  void **v41;
  uint64_t v42;
  const char *v43;
  void **v44;
  const char *v45;
  void **v46;
  unsigned int *v47;
  void *__p[2];
  char v49;

  v5 = a3;
  if (a1)
    v8 = a3 == 0;
  else
    v8 = 1;
  v10 = v8 || a4 == 0;
  AriOsa::SWTrap(v10, (uint64_t)"(startIndex == NULL) || (buf == NULL) || (msgLen == NULL)", "/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", (const char *)0x182);
  *v5 = -1;
  if (!a2)
    return 0;
  if (a2 < 4 || *(_DWORD *)a1 != -1417756450)
  {
    v15 = 0;
    v16 = (AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp";
    v17 = "AriFramer_HeaderMagicScan";
    v18 = "(%s:%d) Start over @index %d to scan header magic byte0 0X%02X.";
    while (1)
    {
      AriOsa::LogSrcInfo(v16, v17, (uint64_t)__p);
      if (v49 >= 0)
        v20 = __p;
      else
        v20 = (void **)__p[0];
      Ari::Log((Ari *)0x10, v18, v19, v20, 402, v15, 222);
      if (v49 < 0)
        operator delete(__p[0]);
      *v5 = -1;
      if (a2 <= (int)v15)
        return 0;
      v21 = 0;
      v22 = v15;
      while (a1[(int)v15 + v21] != 222)
      {
        ++v22;
        if (a2 - (int)v15 == ++v21)
          return 0;
      }
      v23 = v5;
      v24 = v18;
      v25 = v16;
      v26 = v21 + v15;
      v47 = v23;
      *v23 = v26;
      v27 = v17;
      v28 = v25;
      v29 = v27;
      AriOsa::LogSrcInfo(v25, v27, (uint64_t)__p);
      if (v49 >= 0)
        v31 = __p;
      else
        v31 = (void **)__p[0];
      Ari::Log((Ari *)0x10, "(%s:%d) Skipping additional %d bytes and found header magic byte0 0X%02X.", v30, v31, 409, v21 + v15, 222);
      if (v49 < 0)
        operator delete(__p[0]);
      if (*v47 == -1)
        return 0;
      v32 = v26 + 1;
      v33 = (int)v26 + 1;
      if (v33 >= a2)
        break;
      if (a1[v33] != 192)
        goto LABEL_43;
      v32 = v26 + 2;
      v33 = (int)v26 + 2;
      if (v33 >= a2)
      {
        v42 = (v15 + v21 + 2);
        goto LABEL_62;
      }
      if (a1[v33] == 126)
      {
        v34 = v26 + 3;
        v33 = (int)v26 + 3;
        if (v33 >= a2)
        {
          v42 = (v22 + 3);
          goto LABEL_62;
        }
        if (a1[v33] == 171)
        {
          v42 = (v15 + v21 + 3);
          goto LABEL_62;
        }
        v16 = v28;
        v15 = v34;
      }
      else
      {
LABEL_43:
        v15 = v32;
        v16 = v28;
      }
      v17 = v29;
      v18 = v24;
      v5 = v47;
    }
    v42 = (v15 + v21 + 1);
LABEL_62:
    v5 = v47;
    if (v33 >= a2)
    {
      AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "AriFramer_HeaderMagicScan", (uint64_t)__p);
      if (v49 >= 0)
        v46 = __p;
      else
        v46 = (void **)__p[0];
      Ari::Log((Ari *)0x10, "(%s:%d) Exhausted lenth %d bytes but failed to find header magic word.", v45, v46, 427, v42);
      goto LABEL_73;
    }
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "AriFramer_HeaderMagicScan", (uint64_t)__p);
    if (v49 >= 0)
      v44 = __p;
    else
      v44 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) Scanned total %d bytes and found header magic word.", v43, v44, 431, (v42 + 1));
    if (v49 < 0)
      operator delete(__p[0]);
    v11 = (int)*v47;
    goto LABEL_14;
  }
  v11 = 0;
  *v5 = 0;
LABEL_14:
  v12 = a2 - v11;
  if (v12 <= 0xB)
  {
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "AriFramer_HeaderMagicScan", (uint64_t)__p);
    if (v49 >= 0)
      v14 = __p;
    else
      v14 = (void **)__p[0];
    Ari::Log((Ari *)0x10, "(%s:%d) Found magic word @index %d but usefulSz (%zu) is too small for a header.", v13, v14, 438, *v5, v12);
LABEL_73:
    if (v49 < 0)
      operator delete(__p[0]);
    return 0;
  }
  v35 = *(_QWORD *)&a1[v11] >> 49;
  if ((_DWORD)v35 != 0x7FFF)
  {
    v39 = (v35 + 12);
    if (v12 >= v39)
    {
      *a4 = v39;
      return 1;
    }
    AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "AriFramer_HeaderMagicScan", (uint64_t)__p);
    if (v49 >= 0)
      v41 = __p;
    else
      v41 = (void **)__p[0];
    Ari::Log((Ari *)4, "(%s:%d) Found ARI_IPC_HEADER @index %d but usefulSz (%zu) is too small for a msg->len(%zu).", v40, v41, 453, *v5, v12, (*(_QWORD *)&a1[v11] >> 49) + 12);
    goto LABEL_73;
  }
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/common/src/ari_utils.cpp", "AriFramer_HeaderMagicScan", (uint64_t)__p);
  if (v49 >= 0)
    v37 = __p;
  else
    v37 = (void **)__p[0];
  Ari::Log((Ari *)0x10, "(%s:%d) Data with valid magic but illegal size (%d). Ignoring...", v36, v37, 446, *(_QWORD *)&a1[v11] >> 49);
  if (v49 < 0)
    operator delete(__p[0]);
  result = 0;
  *v5 = -1;
  return result;
}

void sub_20E2DE4E0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, void *__p, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  if (a21 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

void GetBufDigest(AriMsg *a1@<X0>, char *a2@<X2>, const unsigned __int8 *a3@<X1>, uint64_t a4@<X8>)
{
  AriMsg *BufHeader;
  AriMsg *v9;
  unint64_t v10;
  Ari *v11;
  int v12;
  AriMsg *v13;
  int v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  unsigned __int16 v19;
  std::string *v20;
  std::string *v21;
  __int128 v22;
  const std::string::value_type *v23;
  std::string::size_type v24;
  size_t v25;
  std::string *v26;
  __int128 v27;
  std::string *v28;
  __int128 v29;
  std::string *v30;
  std::string::size_type size;
  std::string *v32;
  __int128 v33;
  std::string *v34;
  __int128 v35;
  size_t v36;
  std::string *v37;
  __int128 v38;
  std::string *v39;
  __int128 v40;
  const std::string::value_type *v41;
  std::string::size_type v42;
  void *v43;
  std::string *v44;
  __int128 v45;
  std::string *v46;
  __int128 v47;
  size_t v48;
  std::string *v49;
  __int128 v50;
  std::string *v51;
  __int128 v52;
  const std::string::value_type *v53;
  std::string::size_type v54;
  std::string *v55;
  std::string::size_type v56;
  std::string *v57;
  __int128 v58;
  std::string *v59;
  __int128 v60;
  const std::string::value_type *v61;
  std::string::size_type v62;
  size_t v63;
  std::string *v64;
  __int128 v65;
  std::string *v66;
  __int128 v67;
  const std::string::value_type *v68;
  std::string::size_type v69;
  size_t v70;
  std::string *v71;
  __int128 v72;
  std::string *v73;
  __int128 v74;
  const std::string::value_type *v75;
  std::string::size_type v76;
  size_t v77;
  std::string *v78;
  __int128 v79;
  std::string *v80;
  __int128 v81;
  std::string v82;
  std::string v83;
  std::string v84;
  std::string v85;
  std::string v86;
  std::string v87;
  std::string v88;
  __int128 v89;
  int64_t v90;
  char __str[24];
  uint64_t v92;

  v92 = *MEMORY[0x24BDAC8D0];
  memset(__str, 170, 19);
  BufHeader = AriMsg::GetBufHeader(a1, a3);
  if (!BufHeader)
  {
    std::string::basic_string[abi:ne180100]<0>((_QWORD *)a4, "INVALID AriMsg buffer.");
    return;
  }
  v9 = BufHeader;
  v10 = *((unsigned int *)BufHeader + 2);
  v11 = (Ari *)((*(_QWORD *)BufHeader >> 35) & 0x3FLL);
  v12 = (unsigned __int16)v10 >> 6;
  v13 = AriMsg::GetBufHeader(a1, a3);
  if (v13)
    v14 = (*(_QWORD *)v13 >> 41) | ((*((_DWORD *)v13 + 2) & 7) << 8);
  else
    v14 = 0;
  v15 = v10 >> 17;
  v16 = Ari::MsgDefById(v11, v12);
  v17 = v16;
  *(_QWORD *)(a4 + 8) = 0;
  *(_QWORD *)(a4 + 16) = 0;
  *(_QWORD *)a4 = 0;
  if (v16)
  {
    v18 = *(unsigned __int8 *)(v16 + 8);
    if (v18 == 2 || v18 == 1)
    {
      *(_BYTE *)(a4 + 23) = 6;
      v19 = 15933;
    }
    else
    {
      *(_BYTE *)(a4 + 23) = 6;
      if (v18)
        v19 = 15932;
      else
        v19 = 15676;
    }
    *(_DWORD *)a4 = v19 | 0x41200000;
    strcpy((char *)(a4 + 4), "P(");
    if (!a2)
      goto LABEL_27;
  }
  else
  {
    *(_BYTE *)(a4 + 23) = 3;
    *(_DWORD *)a4 = 2641985;
    if (!a2)
      goto LABEL_27;
  }
  if (!*a2)
  {
LABEL_27:
    snprintf(__str, 0x13uLL, "cln#%02d)", v15 >> 8);
    v25 = strlen(__str);
    std::string::append((std::string *)a4, __str, v25);
    goto LABEL_28;
  }
  v20 = (std::string *)std::string::basic_string[abi:ne180100]<0>(&v88, a2);
  v21 = std::string::append(v20, ")", 1uLL);
  v22 = *(_OWORD *)&v21->__r_.__value_.__l.__data_;
  v90 = v21->__r_.__value_.__r.__words[2];
  v89 = v22;
  v21->__r_.__value_.__l.__size_ = 0;
  v21->__r_.__value_.__r.__words[2] = 0;
  v21->__r_.__value_.__r.__words[0] = 0;
  if (v90 >= 0)
    v23 = (const std::string::value_type *)&v89;
  else
    v23 = (const std::string::value_type *)v89;
  if (v90 >= 0)
    v24 = HIBYTE(v90);
  else
    v24 = *((_QWORD *)&v89 + 1);
  std::string::append((std::string *)a4, v23, v24);
  if (SHIBYTE(v90) < 0)
    operator delete((void *)v89);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
LABEL_28:
  snprintf(__str, 0x13uLL, "%03x", v12);
  if (v17)
  {
    std::string::basic_string[abi:ne180100]<0>(&v83, *(char **)(v17 + 48));
    v26 = std::string::insert(&v83, 0, " ", 1uLL);
    v27 = *(_OWORD *)&v26->__r_.__value_.__l.__data_;
    v84.__r_.__value_.__r.__words[2] = v26->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v84.__r_.__value_.__l.__data_ = v27;
    v26->__r_.__value_.__l.__size_ = 0;
    v26->__r_.__value_.__r.__words[2] = 0;
    v26->__r_.__value_.__r.__words[0] = 0;
    v28 = std::string::append(&v84, "(", 1uLL);
    v29 = *(_OWORD *)&v28->__r_.__value_.__l.__data_;
    v85.__r_.__value_.__r.__words[2] = v28->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v85.__r_.__value_.__l.__data_ = v29;
    v28->__r_.__value_.__l.__size_ = 0;
    v28->__r_.__value_.__r.__words[2] = 0;
    v28->__r_.__value_.__r.__words[0] = 0;
    std::to_string(&v82, v11);
    if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v30 = &v82;
    else
      v30 = (std::string *)v82.__r_.__value_.__r.__words[0];
    if ((v82.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v82.__r_.__value_.__r.__words[2]);
    else
      size = v82.__r_.__value_.__l.__size_;
    v32 = std::string::append(&v85, (const std::string::value_type *)v30, size);
    v33 = *(_OWORD *)&v32->__r_.__value_.__l.__data_;
    v86.__r_.__value_.__r.__words[2] = v32->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v33;
    v32->__r_.__value_.__l.__size_ = 0;
    v32->__r_.__value_.__r.__words[2] = 0;
    v32->__r_.__value_.__r.__words[0] = 0;
    v34 = std::string::append(&v86, "-", 1uLL);
    v35 = *(_OWORD *)&v34->__r_.__value_.__l.__data_;
    v87.__r_.__value_.__r.__words[2] = v34->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v35;
    v34->__r_.__value_.__l.__size_ = 0;
    v34->__r_.__value_.__r.__words[2] = 0;
    v34->__r_.__value_.__r.__words[0] = 0;
    v36 = strlen(__str);
    v37 = std::string::append(&v87, __str, v36);
    v38 = *(_OWORD *)&v37->__r_.__value_.__l.__data_;
    v88.__r_.__value_.__r.__words[2] = v37->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v38;
    v37->__r_.__value_.__l.__size_ = 0;
    v37->__r_.__value_.__r.__words[2] = 0;
    v37->__r_.__value_.__r.__words[0] = 0;
    v39 = std::string::append(&v88, ")", 1uLL);
    v40 = *(_OWORD *)&v39->__r_.__value_.__l.__data_;
    v90 = v39->__r_.__value_.__r.__words[2];
    v89 = v40;
    v39->__r_.__value_.__l.__size_ = 0;
    v39->__r_.__value_.__r.__words[2] = 0;
    v39->__r_.__value_.__r.__words[0] = 0;
    if (v90 >= 0)
      v41 = (const std::string::value_type *)&v89;
    else
      v41 = (const std::string::value_type *)v89;
    if (v90 >= 0)
      v42 = HIBYTE(v90);
    else
      v42 = *((_QWORD *)&v89 + 1);
    std::string::append((std::string *)a4, v41, v42);
    if (SHIBYTE(v90) < 0)
      operator delete((void *)v89);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
    if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v87.__r_.__value_.__l.__data_);
    if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v86.__r_.__value_.__l.__data_);
    if (SHIBYTE(v82.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v82.__r_.__value_.__l.__data_);
    if (SHIBYTE(v85.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v85.__r_.__value_.__l.__data_);
    if (SHIBYTE(v84.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v84.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v83.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_74;
    v43 = (void *)v83.__r_.__value_.__r.__words[0];
  }
  else
  {
    std::to_string(&v85, v11);
    v44 = std::string::insert(&v85, 0, " MSG(", 5uLL);
    v45 = *(_OWORD *)&v44->__r_.__value_.__l.__data_;
    v86.__r_.__value_.__r.__words[2] = v44->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v86.__r_.__value_.__l.__data_ = v45;
    v44->__r_.__value_.__l.__size_ = 0;
    v44->__r_.__value_.__r.__words[2] = 0;
    v44->__r_.__value_.__r.__words[0] = 0;
    v46 = std::string::append(&v86, "-", 1uLL);
    v47 = *(_OWORD *)&v46->__r_.__value_.__l.__data_;
    v87.__r_.__value_.__r.__words[2] = v46->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v87.__r_.__value_.__l.__data_ = v47;
    v46->__r_.__value_.__l.__size_ = 0;
    v46->__r_.__value_.__r.__words[2] = 0;
    v46->__r_.__value_.__r.__words[0] = 0;
    v48 = strlen(__str);
    v49 = std::string::append(&v87, __str, v48);
    v50 = *(_OWORD *)&v49->__r_.__value_.__l.__data_;
    v88.__r_.__value_.__r.__words[2] = v49->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v50;
    v49->__r_.__value_.__l.__size_ = 0;
    v49->__r_.__value_.__r.__words[2] = 0;
    v49->__r_.__value_.__r.__words[0] = 0;
    v51 = std::string::append(&v88, ")", 1uLL);
    v52 = *(_OWORD *)&v51->__r_.__value_.__l.__data_;
    v90 = v51->__r_.__value_.__r.__words[2];
    v89 = v52;
    v51->__r_.__value_.__l.__size_ = 0;
    v51->__r_.__value_.__r.__words[2] = 0;
    v51->__r_.__value_.__r.__words[0] = 0;
    if (v90 >= 0)
      v53 = (const std::string::value_type *)&v89;
    else
      v53 = (const std::string::value_type *)v89;
    if (v90 >= 0)
      v54 = HIBYTE(v90);
    else
      v54 = *((_QWORD *)&v89 + 1);
    std::string::append((std::string *)a4, v53, v54);
    if (SHIBYTE(v90) < 0)
      operator delete((void *)v89);
    if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v88.__r_.__value_.__l.__data_);
    if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v87.__r_.__value_.__l.__data_);
    if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v86.__r_.__value_.__l.__data_);
    if ((SHIBYTE(v85.__r_.__value_.__r.__words[2]) & 0x80000000) == 0)
      goto LABEL_74;
    v43 = (void *)v85.__r_.__value_.__r.__words[0];
  }
  operator delete(v43);
LABEL_74:
  std::string::basic_string[abi:ne180100]<0>(&v87, " SZ(");
  std::to_string(&v86, (*(_QWORD *)v9 >> 49) + 12);
  if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v55 = &v86;
  else
    v55 = (std::string *)v86.__r_.__value_.__r.__words[0];
  if ((v86.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
    v56 = HIBYTE(v86.__r_.__value_.__r.__words[2]);
  else
    v56 = v86.__r_.__value_.__l.__size_;
  v57 = std::string::append(&v87, (const std::string::value_type *)v55, v56);
  v58 = *(_OWORD *)&v57->__r_.__value_.__l.__data_;
  v88.__r_.__value_.__r.__words[2] = v57->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v58;
  v57->__r_.__value_.__l.__size_ = 0;
  v57->__r_.__value_.__r.__words[2] = 0;
  v57->__r_.__value_.__r.__words[0] = 0;
  v59 = std::string::append(&v88, ") ", 2uLL);
  v60 = *(_OWORD *)&v59->__r_.__value_.__l.__data_;
  v90 = v59->__r_.__value_.__r.__words[2];
  v89 = v60;
  v59->__r_.__value_.__l.__size_ = 0;
  v59->__r_.__value_.__r.__words[2] = 0;
  v59->__r_.__value_.__r.__words[0] = 0;
  if (v90 >= 0)
    v61 = (const std::string::value_type *)&v89;
  else
    v61 = (const std::string::value_type *)v89;
  if (v90 >= 0)
    v62 = HIBYTE(v90);
  else
    v62 = *((_QWORD *)&v89 + 1);
  std::string::append((std::string *)a4, v61, v62);
  if (SHIBYTE(v90) < 0)
    operator delete((void *)v89);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  if (SHIBYTE(v86.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v86.__r_.__value_.__l.__data_);
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v87.__r_.__value_.__l.__data_);
  snprintf(__str, 0x13uLL, "0x%04x", v15);
  std::string::basic_string[abi:ne180100]<0>(&v87, "TRX(");
  v63 = strlen(__str);
  v64 = std::string::append(&v87, __str, v63);
  v65 = *(_OWORD *)&v64->__r_.__value_.__l.__data_;
  v88.__r_.__value_.__r.__words[2] = v64->__r_.__value_.__r.__words[2];
  *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v65;
  v64->__r_.__value_.__l.__size_ = 0;
  v64->__r_.__value_.__r.__words[2] = 0;
  v64->__r_.__value_.__r.__words[0] = 0;
  v66 = std::string::append(&v88, ") ", 2uLL);
  v67 = *(_OWORD *)&v66->__r_.__value_.__l.__data_;
  v90 = v66->__r_.__value_.__r.__words[2];
  v89 = v67;
  v66->__r_.__value_.__l.__size_ = 0;
  v66->__r_.__value_.__r.__words[2] = 0;
  v66->__r_.__value_.__r.__words[0] = 0;
  if (v90 >= 0)
    v68 = (const std::string::value_type *)&v89;
  else
    v68 = (const std::string::value_type *)v89;
  if (v90 >= 0)
    v69 = HIBYTE(v90);
  else
    v69 = *((_QWORD *)&v89 + 1);
  std::string::append((std::string *)a4, v68, v69);
  if (SHIBYTE(v90) < 0)
    operator delete((void *)v89);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v87.__r_.__value_.__l.__data_);
  snprintf(__str, 0x13uLL, "0x%03x", v14);
  if (v17 && *(_BYTE *)(v17 + 8))
  {
    std::string::basic_string[abi:ne180100]<0>(&v87, "BB.SEQ(");
    v70 = strlen(__str);
    v71 = std::string::append(&v87, __str, v70);
    v72 = *(_OWORD *)&v71->__r_.__value_.__l.__data_;
    v88.__r_.__value_.__r.__words[2] = v71->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v72;
    v71->__r_.__value_.__l.__size_ = 0;
    v71->__r_.__value_.__r.__words[2] = 0;
    v71->__r_.__value_.__r.__words[0] = 0;
    v73 = std::string::append(&v88, ")", 1uLL);
    v74 = *(_OWORD *)&v73->__r_.__value_.__l.__data_;
    v90 = v73->__r_.__value_.__r.__words[2];
    v89 = v74;
    v73->__r_.__value_.__l.__size_ = 0;
    v73->__r_.__value_.__r.__words[2] = 0;
    v73->__r_.__value_.__r.__words[0] = 0;
    if (v90 >= 0)
      v75 = (const std::string::value_type *)&v89;
    else
      v75 = (const std::string::value_type *)v89;
    if (v90 >= 0)
      v76 = HIBYTE(v90);
    else
      v76 = *((_QWORD *)&v89 + 1);
  }
  else
  {
    std::string::basic_string[abi:ne180100]<0>(&v87, "AP.SEQ(");
    v77 = strlen(__str);
    v78 = std::string::append(&v87, __str, v77);
    v79 = *(_OWORD *)&v78->__r_.__value_.__l.__data_;
    v88.__r_.__value_.__r.__words[2] = v78->__r_.__value_.__r.__words[2];
    *(_OWORD *)&v88.__r_.__value_.__l.__data_ = v79;
    v78->__r_.__value_.__l.__size_ = 0;
    v78->__r_.__value_.__r.__words[2] = 0;
    v78->__r_.__value_.__r.__words[0] = 0;
    v80 = std::string::append(&v88, ")", 1uLL);
    v81 = *(_OWORD *)&v80->__r_.__value_.__l.__data_;
    v90 = v80->__r_.__value_.__r.__words[2];
    v89 = v81;
    v80->__r_.__value_.__l.__size_ = 0;
    v80->__r_.__value_.__r.__words[2] = 0;
    v80->__r_.__value_.__r.__words[0] = 0;
    if (v90 >= 0)
      v75 = (const std::string::value_type *)&v89;
    else
      v75 = (const std::string::value_type *)v89;
    if (v90 >= 0)
      v76 = HIBYTE(v90);
    else
      v76 = *((_QWORD *)&v89 + 1);
  }
  std::string::append((std::string *)a4, v75, v76);
  if (SHIBYTE(v90) < 0)
    operator delete((void *)v89);
  if (SHIBYTE(v88.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v88.__r_.__value_.__l.__data_);
  if (SHIBYTE(v87.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v87.__r_.__value_.__l.__data_);
}

void sub_20E2DEDE4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, void *a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28,uint64_t a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,uint64_t a36,void *a37,uint64_t a38,int a39,__int16 a40,char a41,char a42,uint64_t a43,void *__p,uint64_t a45,int a46,__int16 a47,char a48,char a49)
{
  uint64_t v49;
  uint64_t v50;

  if (*(char *)(v50 - 121) < 0)
    operator delete(*(void **)(v50 - 144));
  if (*(char *)(v50 - 153) < 0)
    operator delete(*(void **)(v50 - 176));
  if (a49 < 0)
    operator delete(__p);
  if (*(char *)(v49 + 23) < 0)
    operator delete(*(void **)v49);
  _Unwind_Resume(exception_object);
}

_QWORD *make_shared_buffer@<X0>(const unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  const unsigned __int8 *v4;
  const void *v5;

  *a3 = 0xAAAAAAAAAAAAAAAALL;
  a3[1] = 0xAAAAAAAAAAAAAAAALL;
  v4 = &a1[a2];
  v5 = a1;
  return std::allocate_shared[abi:ne180100]<std::vector<unsigned char>,std::allocator<std::vector<unsigned char>>,unsigned char const*&,unsigned char const*,void>(&v5, (uint64_t *)&v4, a3);
}

void ari_util::hex(ari_util *this@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  ari_util *v3;
  ari_util *v5;
  char v6;
  unsigned int v7;
  char v8;

  a3->__r_.__value_.__r.__words[0] = 0;
  a3->__r_.__value_.__l.__size_ = 0;
  a3->__r_.__value_.__r.__words[2] = 0;
  if (a2 >= 1)
  {
    v3 = this;
    v5 = (ari_util *)((char *)this + a2);
    do
    {
      if (*(unsigned __int8 *)v3 >= 0xA0u)
        v6 = 87;
      else
        v6 = 48;
      std::string::push_back(a3, v6 + (*(_BYTE *)v3 >> 4));
      v7 = *(_BYTE *)v3 & 0xF;
      if (v7 >= 0xA)
        v8 = 87;
      else
        v8 = 48;
      std::string::push_back(a3, v8 + v7);
      v3 = (ari_util *)((char *)v3 + 1);
    }
    while (v3 < v5);
  }
}

void sub_20E2DF1DC(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *ari_util::to_rle@<X0>(ari_util *this@<X0>, uint64_t a2@<X1>, std::string *a3@<X8>)
{
  memset(a3, 170, sizeof(std::string));
  ari_util::hex(this, a2, a3);
  return ari_util::to_rle(a3);
}

void sub_20E2DF230(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 + 23) < 0)
    operator delete(*(void **)v1);
  _Unwind_Resume(exception_object);
}

std::string *ari_util::to_rle(std::string *a1)
{
  std::string::size_type v2;
  unsigned __int8 *v3;
  std::string::size_type size;
  uint64_t v5;
  unsigned __int8 *v6;
  unsigned __int8 *v7;
  unsigned __int8 *v8;
  std::string *v9;
  std::string::size_type v10;
  uint64_t v11;
  int v12;
  unsigned __int8 *v13;
  std::string::size_type v14;
  _QWORD v16[4];
  uint64_t v17;
  unsigned __int8 *v18;
  unsigned __int8 *v19;

  v2 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  if (SHIBYTE(a1->__r_.__value_.__r.__words[2]) < 0)
  {
    v3 = (unsigned __int8 *)a1->__r_.__value_.__r.__words[0];
    size = a1->__r_.__value_.__l.__size_;
  }
  else
  {
    v3 = (unsigned __int8 *)a1;
    size = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  }
  v5 = 0;
  v19 = v3;
  v6 = &v3[size];
  v17 = 0;
  v18 = v6;
  v16[0] = &v17;
  v16[1] = &v19;
  v7 = v3;
  v16[2] = a1;
  v16[3] = &v18;
  if ((v2 & 0x80) != 0)
    goto LABEL_6;
LABEL_5:
  v8 = (unsigned __int8 *)a1 + v2;
  v9 = a1;
  v10 = v2;
  while (v7 != v8)
  {
    if (v6 == (unsigned __int8 *)((char *)v9 + v10) || *v6 == *v7)
    {
      v17 = ++v5;
    }
    else
    {
      ari_util::to_rle(std::string &)::$_0::operator()((uint64_t)v16);
      v17 = 1;
      v2 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
      v5 = 1;
    }
    v18 = v3;
    v6 = v7++;
    ++v3;
    if ((v2 & 0x80) == 0)
      goto LABEL_5;
LABEL_6:
    v9 = (std::string *)a1->__r_.__value_.__r.__words[0];
    v10 = a1->__r_.__value_.__l.__size_;
    v8 = (unsigned __int8 *)(a1->__r_.__value_.__r.__words[0] + v10);
  }
  ari_util::to_rle(std::string &)::$_0::operator()((uint64_t)v16);
  v11 = HIBYTE(a1->__r_.__value_.__r.__words[2]);
  v12 = (char)v11;
  v13 = (unsigned __int8 *)a1 + v11;
  if (v12 >= 0)
  {
    v14 = (std::string::size_type)a1;
  }
  else
  {
    v13 = (unsigned __int8 *)(a1->__r_.__value_.__r.__words[0] + a1->__r_.__value_.__l.__size_);
    v14 = a1->__r_.__value_.__r.__words[0];
  }
  return std::string::erase(a1, (std::string::size_type)&v19[-v14], v13 - v19);
}

void ari_util::to_rle(std::string &)::$_0::operator()(uint64_t a1)
{
  std::string::size_type v2;
  _QWORD *v3;
  _BYTE *v4;
  std::string *v5;
  std::string::size_type size;
  std::string::size_type v7;
  std::string *v8;
  std::string::size_type v9;
  _QWORD *v10;
  _BYTE *v11;
  _QWORD *v12;
  _BYTE *v13;
  std::string *v14;
  std::string::size_type v15;
  std::string v16;

  v2 = **(_QWORD **)a1;
  if (v2 < 5)
  {
    v14 = *(std::string **)(a1 + 16);
    v15 = *(_QWORD *)(a1 + 16);
    if (SHIBYTE(v14->__r_.__value_.__r.__words[2]) < 0)
      v15 = v14->__r_.__value_.__r.__words[0];
    std::string::replace(v14, **(_QWORD **)(a1 + 8) - v15, v2, v2, ***(_BYTE ***)(a1 + 24));
    **(_QWORD **)(a1 + 8) += **(_QWORD **)a1;
  }
  else
  {
    v3 = *(_QWORD **)(a1 + 8);
    v4 = (_BYTE *)(*v3)++;
    *v4 = 60;
    memset(&v16, 170, sizeof(v16));
    std::to_string(&v16, **(_QWORD **)a1);
    v5 = *(std::string **)(a1 + 16);
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    else
      size = v16.__r_.__value_.__l.__size_;
    v7 = *(_QWORD *)(a1 + 16);
    if (SHIBYTE(v5->__r_.__value_.__r.__words[2]) < 0)
      v7 = v5->__r_.__value_.__r.__words[0];
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0)
      v8 = &v16;
    else
      v8 = (std::string *)v16.__r_.__value_.__r.__words[0];
    std::string::replace(v5, **(_QWORD **)(a1 + 8) - v7, size, (const std::string::value_type *)v8, size);
    v9 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
    if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0)
      v9 = v16.__r_.__value_.__l.__size_;
    v10 = *(_QWORD **)(a1 + 8);
    v11 = (_BYTE *)(*v10 + v9);
    *v10 = v11 + 1;
    *v11 = 62;
    LOBYTE(v11) = ***(_BYTE ***)(a1 + 24);
    v12 = *(_QWORD **)(a1 + 8);
    v13 = (_BYTE *)(*v12)++;
    *v13 = (_BYTE)v11;
    if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
      operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_20E2DF4D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0)
    operator delete(__p);
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<IDMgr::Range>::__emplace_unique_key_args<IDMgr::Range,IDMgr::Range>(uint64_t **a1, int *a2, uint64_t *a3)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t **v7;
  uint64_t v9;

  v9 = 0xAAAAAAAAAAAAAAAALL;
  v5 = std::__tree<IDMgr::Range>::__find_equal<IDMgr::Range>((uint64_t)a1, &v9, a2);
  v6 = (uint64_t *)*v5;
  if (!*v5)
  {
    v7 = (uint64_t **)v5;
    v6 = (uint64_t *)operator new(0x28uLL);
    *(uint64_t *)((char *)v6 + 28) = *a3;
    std::__tree<IDMgr::Range>::__insert_node_at(a1, v9, v7, v6);
  }
  return v6;
}

uint64_t *std::__tree<IDMgr::Range>::__find_equal<IDMgr::Range>(uint64_t a1, _QWORD *a2, int *a3)
{
  uint64_t *result;
  uint64_t *v4;
  uint64_t *v5;
  int v6;
  int v7;
  uint64_t *v8;
  int v9;

  v5 = *(uint64_t **)(a1 + 8);
  result = (uint64_t *)(a1 + 8);
  v4 = v5;
  if (v5)
  {
    v6 = *a3;
    if (*a3 <= a3[1])
      v7 = a3[1];
    else
      v7 = *a3;
    do
    {
      while (1)
      {
        v8 = v4;
        v9 = *((_DWORD *)v4 + 7);
        if (v9 <= v7)
          break;
        v4 = (uint64_t *)*v8;
        result = v8;
        if (!*v8)
          goto LABEL_16;
      }
      if (v9 >= v6 || *((_DWORD *)v8 + 8) >= v6)
        break;
      result = v8 + 1;
      v4 = (uint64_t *)v8[1];
    }
    while (v4);
  }
  else
  {
    v8 = result;
  }
LABEL_16:
  *a2 = v8;
  return result;
}

uint64_t *std::__tree<IDMgr::Range>::__insert_node_at(uint64_t **a1, uint64_t a2, uint64_t **a3, uint64_t *a4)
{
  uint64_t *v5;
  uint64_t *result;

  *a4 = 0;
  a4[1] = 0;
  a4[2] = a2;
  *a3 = a4;
  v5 = (uint64_t *)**a1;
  if (v5)
  {
    *a1 = v5;
    a4 = *a3;
  }
  result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(a1[1], a4);
  a1[2] = (uint64_t *)((char *)a1[2] + 1);
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  _BYTE *v5;
  int v6;
  uint64_t v7;
  int v8;
  uint64_t **v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *((_BYTE *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      v2 = (uint64_t *)a2[2];
      if (*((_BYTE *)v2 + 24))
        return result;
      v3 = (uint64_t *)v2[2];
      v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        v7 = v3[1];
        if (!v7 || (v8 = *(unsigned __int8 *)(v7 + 24), v5 = (_BYTE *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            v9 = (uint64_t **)a2[2];
          }
          else
          {
            v9 = (uint64_t **)v2[1];
            v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              v10[2] = (uint64_t)v2;
              v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = v9;
            *v9 = v2;
            v2[2] = (uint64_t)v9;
            v3 = v9[2];
            v2 = (uint64_t *)*v3;
          }
          *((_BYTE *)v9 + 24) = 1;
          *((_BYTE *)v3 + 24) = 0;
          v13 = v2[1];
          *v3 = v13;
          if (v13)
            *(_QWORD *)(v13 + 16) = v3;
          v2[2] = v3[2];
          *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          v11 = a2[1];
          *v2 = v11;
          if (v11)
          {
            *(_QWORD *)(v11 + 16) = v2;
            v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(_QWORD *)(v2[2] + 8 * (*(_QWORD *)v2[2] != (_QWORD)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((_BYTE *)a2 + 24) = 1;
        *((_BYTE *)v3 + 24) = 0;
        v2 = (uint64_t *)v3[1];
        v12 = *v2;
        v3[1] = *v2;
        if (v12)
          *(_QWORD *)(v12 + 16) = v3;
        v2[2] = v3[2];
        *(_QWORD *)(v3[2] + 8 * (*(_QWORD *)v3[2] != (_QWORD)v3)) = v2;
        *v2 = (uint64_t)v3;
LABEL_27:
        v3[2] = (uint64_t)v2;
        return result;
      }
      *((_BYTE *)v2 + 24) = 1;
      a2 = v3;
      *((_BYTE *)v3 + 24) = v3 == result;
      *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

uint64_t std::__tree<IDMgr::Range>::find<IDMgr::Range>(uint64_t a1, int *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;
  _BOOL4 v8;
  BOOL v9;
  uint64_t *v10;
  int v11;

  v4 = *(_QWORD *)(a1 + 8);
  v2 = a1 + 8;
  v3 = v4;
  if (!v4)
    return v2;
  v5 = *a2;
  v6 = v2;
  do
  {
    v7 = *(_DWORD *)(v3 + 28) < v5;
    v8 = *(_DWORD *)(v3 + 32) < v5;
    v9 = !v7 || !v8;
    if (v7 && v8)
      v10 = (uint64_t *)(v3 + 8);
    else
      v10 = (uint64_t *)v3;
    if (v9)
      v6 = v3;
    v3 = *v10;
  }
  while (*v10);
  if (v6 == v2)
    return v2;
  v11 = *(_DWORD *)(v6 + 28);
  if (v5 < v11 && a2[1] < v11)
    return v2;
  return v6;
}

uint64_t *std::__tree<IDMgr::Range>::__remove_node_pointer(uint64_t **a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t *v4;
  BOOL v5;
  uint64_t *v6;

  v2 = (uint64_t *)a2[1];
  if (v2)
  {
    do
    {
      v3 = v2;
      v2 = (uint64_t *)*v2;
    }
    while (v2);
  }
  else
  {
    v4 = a2;
    do
    {
      v3 = (uint64_t *)v4[2];
      v5 = *v3 == (_QWORD)v4;
      v4 = v3;
    }
    while (!v5);
  }
  if (*a1 == a2)
    *a1 = v3;
  v6 = a1[1];
  a1[2] = (uint64_t *)((char *)a1[2] - 1);
  std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(v6, a2);
  return v3;
}

uint64_t *std::__tree_remove[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  int v5;
  uint64_t **v6;
  uint64_t *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v2 = *a2;
  v3 = a2;
  if (*a2)
  {
    v4 = (uint64_t *)a2[1];
    if (!v4)
    {
      v3 = a2;
      goto LABEL_7;
    }
    do
    {
      v3 = v4;
      v4 = (uint64_t *)*v4;
    }
    while (v4);
  }
  v2 = v3[1];
  if (v2)
  {
LABEL_7:
    v5 = 0;
    *(_QWORD *)(v2 + 16) = v3[2];
    goto LABEL_8;
  }
  v5 = 1;
LABEL_8:
  v6 = (uint64_t **)v3[2];
  v7 = *v6;
  if (*v6 == v3)
  {
    *v6 = (uint64_t *)v2;
    if (v3 == result)
    {
      v7 = 0;
      result = (uint64_t *)v2;
    }
    else
    {
      v7 = v6[1];
    }
  }
  else
  {
    v6[1] = (uint64_t *)v2;
  }
  v8 = *((unsigned __int8 *)v3 + 24);
  if (v3 != a2)
  {
    v9 = a2[2];
    v3[2] = v9;
    *(_QWORD *)(v9 + 8 * (*(_QWORD *)a2[2] != (_QWORD)a2)) = v3;
    v11 = *a2;
    v10 = a2[1];
    *(_QWORD *)(v11 + 16) = v3;
    *v3 = v11;
    v3[1] = v10;
    if (v10)
      *(_QWORD *)(v10 + 16) = v3;
    *((_BYTE *)v3 + 24) = *((_BYTE *)a2 + 24);
    if (result == a2)
      result = v3;
  }
  if (!v8 || !result)
    return result;
  if (!v5)
  {
    *(_BYTE *)(v2 + 24) = 1;
    return result;
  }
  while (1)
  {
    v12 = v7[2];
    if (*(uint64_t **)v12 != v7)
      break;
    if (!*((_BYTE *)v7 + 24))
    {
      *((_BYTE *)v7 + 24) = 1;
      *(_BYTE *)(v12 + 24) = 0;
      v18 = v7[1];
      *(_QWORD *)v12 = v18;
      if (v18)
        *(_QWORD *)(v18 + 16) = v12;
      v7[2] = *(_QWORD *)(v12 + 16);
      *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v7;
      v7[1] = v12;
      *(_QWORD *)(v12 + 16) = v7;
      if (result == (uint64_t *)v12)
        result = v7;
      v7 = *(uint64_t **)v12;
    }
    v19 = (_QWORD *)*v7;
    if (*v7 && !*((_BYTE *)v19 + 24))
      goto LABEL_68;
    v20 = (uint64_t *)v7[1];
    if (v20 && !*((_BYTE *)v20 + 24))
    {
      if (v19 && !*((_BYTE *)v19 + 24))
      {
LABEL_68:
        v20 = v7;
      }
      else
      {
        *((_BYTE *)v20 + 24) = 1;
        *((_BYTE *)v7 + 24) = 0;
        v26 = *v20;
        v7[1] = *v20;
        if (v26)
          *(_QWORD *)(v26 + 16) = v7;
        v20[2] = v7[2];
        *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v20;
        *v20 = (uint64_t)v7;
        v7[2] = (uint64_t)v20;
        v19 = v7;
      }
      v23 = v20[2];
      *((_BYTE *)v20 + 24) = *(_BYTE *)(v23 + 24);
      *(_BYTE *)(v23 + 24) = 1;
      *((_BYTE *)v19 + 24) = 1;
      v24 = *(uint64_t **)v23;
      v27 = *(_QWORD *)(*(_QWORD *)v23 + 8);
      *(_QWORD *)v23 = v27;
      if (v27)
        *(_QWORD *)(v27 + 16) = v23;
      v24[2] = *(_QWORD *)(v23 + 16);
      *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
      v24[1] = v23;
      goto LABEL_72;
    }
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (*((_BYTE *)v17 + 24))
      v21 = v17 == result;
    else
      v21 = 1;
    if (v21)
      goto LABEL_53;
LABEL_49:
    v7 = *(uint64_t **)(v17[2] + 8 * (*(_QWORD *)v17[2] == (_QWORD)v17));
  }
  if (!*((_BYTE *)v7 + 24))
  {
    *((_BYTE *)v7 + 24) = 1;
    *(_BYTE *)(v12 + 24) = 0;
    v13 = *(uint64_t **)(v12 + 8);
    v14 = *v13;
    *(_QWORD *)(v12 + 8) = *v13;
    if (v14)
      *(_QWORD *)(v14 + 16) = v12;
    v13[2] = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(*(_QWORD *)(v12 + 16) + 8 * (**(_QWORD **)(v12 + 16) != v12)) = v13;
    *v13 = v12;
    *(_QWORD *)(v12 + 16) = v13;
    if (result == (uint64_t *)*v7)
      result = v7;
    v7 = *(uint64_t **)(*v7 + 8);
  }
  v15 = (_QWORD *)*v7;
  if (!*v7 || *((_BYTE *)v15 + 24))
  {
    v16 = (uint64_t *)v7[1];
    if (v16 && !*((_BYTE *)v16 + 24))
      goto LABEL_59;
    *((_BYTE *)v7 + 24) = 0;
    v17 = (uint64_t *)v7[2];
    if (v17 == result)
    {
      v17 = result;
LABEL_53:
      *((_BYTE *)v17 + 24) = 1;
      return result;
    }
    if (!*((_BYTE *)v17 + 24))
      goto LABEL_53;
    goto LABEL_49;
  }
  v16 = (uint64_t *)v7[1];
  if (v16 && !*((_BYTE *)v16 + 24))
  {
LABEL_59:
    v15 = v7;
  }
  else
  {
    *((_BYTE *)v15 + 24) = 1;
    *((_BYTE *)v7 + 24) = 0;
    v22 = v15[1];
    *v7 = v22;
    if (v22)
      *(_QWORD *)(v22 + 16) = v7;
    v15[2] = v7[2];
    *(_QWORD *)(v7[2] + 8 * (*(_QWORD *)v7[2] != (_QWORD)v7)) = v15;
    v15[1] = v7;
    v7[2] = (uint64_t)v15;
    v16 = v7;
  }
  v23 = v15[2];
  *((_BYTE *)v15 + 24) = *(_BYTE *)(v23 + 24);
  *(_BYTE *)(v23 + 24) = 1;
  *((_BYTE *)v16 + 24) = 1;
  v24 = *(uint64_t **)(v23 + 8);
  v25 = *v24;
  *(_QWORD *)(v23 + 8) = *v24;
  if (v25)
    *(_QWORD *)(v25 + 16) = v23;
  v24[2] = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(*(_QWORD *)(v23 + 16) + 8 * (**(_QWORD **)(v23 + 16) != v23)) = v24;
  *v24 = v23;
LABEL_72:
  *(_QWORD *)(v23 + 16) = v24;
  return result;
}

uint64_t *std::__hash_table<std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ARIMSGDEF const*>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ARIMSGDEF const*>>>::find<unsigned int>(_QWORD *a1, unsigned int a2)
{
  unint64_t v2;
  uint8x8_t v3;
  unint64_t v4;
  uint64_t **v5;
  uint64_t *result;
  unint64_t v7;

  v2 = a1[1];
  if (!v2)
    return 0;
  v3 = (uint8x8_t)vcnt_s8((int8x8_t)v2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.u32[0] > 1uLL)
  {
    v4 = a2;
    if (v2 <= a2)
      v4 = a2 % v2;
  }
  else
  {
    v4 = ((_DWORD)v2 - 1) & a2;
  }
  v5 = *(uint64_t ***)(*a1 + 8 * v4);
  if (!v5)
    return 0;
  for (result = *v5; result; result = (uint64_t *)*result)
  {
    v7 = result[1];
    if (v7 == a2)
    {
      if (*((_DWORD *)result + 4) == a2)
        return result;
    }
    else
    {
      if (v3.u32[0] > 1uLL)
      {
        if (v7 >= v2)
          v7 %= v2;
      }
      else
      {
        v7 &= v2 - 1;
      }
      if (v7 != v4)
        return 0;
    }
  }
  return result;
}

_QWORD *std::allocate_shared[abi:ne180100]<std::vector<unsigned char>,std::allocator<std::vector<unsigned char>>,unsigned char const*&,unsigned char const*,void>@<X0>(const void **a1@<X1>, uint64_t *a2@<X2>, _QWORD *a3@<X8>)
{
  _QWORD *v6;
  _QWORD *result;

  v6 = operator new(0x30uLL);
  result = std::__shared_ptr_emplace<std::vector<unsigned char>>::__shared_ptr_emplace[abi:ne180100]<unsigned char const*&,unsigned char const*,std::allocator<std::vector<unsigned char>>,0>(v6, a1, a2);
  *a3 = v6 + 3;
  a3[1] = v6;
  return result;
}

void sub_20E2DFD18(_Unwind_Exception *a1)
{
  void *v1;

  operator delete(v1);
  _Unwind_Resume(a1);
}

_QWORD *std::__shared_ptr_emplace<std::vector<unsigned char>>::__shared_ptr_emplace[abi:ne180100]<unsigned char const*&,unsigned char const*,std::allocator<std::vector<unsigned char>>,0>(_QWORD *a1, const void **a2, uint64_t *a3)
{
  const void *v4;
  uint64_t v5;

  a1[1] = 0;
  a1[2] = 0;
  *a1 = &off_24C9314E0;
  v4 = *a2;
  v5 = *a3;
  a1[4] = 0;
  a1[5] = 0;
  a1[3] = 0;
  std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char const*,unsigned char const*>(a1 + 3, v4, v5, v5 - (_QWORD)v4);
  return a1;
}

void sub_20E2DFD74(_Unwind_Exception *a1)
{
  std::__shared_weak_count *v1;

  std::__shared_weak_count::~__shared_weak_count(v1);
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<std::vector<unsigned char>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9314E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<std::vector<unsigned char>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9314E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

void std::__shared_ptr_emplace<std::vector<unsigned char>>::__on_zero_shared(uint64_t a1)
{
  void *v2;

  v2 = *(void **)(a1 + 24);
  if (v2)
  {
    *(_QWORD *)(a1 + 32) = v2;
    operator delete(v2);
  }
}

_QWORD *std::vector<unsigned char>::__init_with_size[abi:ne180100]<unsigned char const*,unsigned char const*>(_QWORD *result, const void *a2, uint64_t a3, size_t __sz)
{
  _QWORD *v6;
  uint64_t v7;
  size_t v8;

  if (__sz)
  {
    v6 = result;
    result = std::vector<unsigned char>::__vallocate[abi:ne180100](result, __sz);
    v7 = v6[1];
    v8 = a3 - (_QWORD)a2;
    if (v8)
      result = memmove((void *)v6[1], a2, v8);
    v6[1] = v7 + v8;
  }
  return result;
}

void sub_20E2DFE40(_Unwind_Exception *exception_object)
{
  uint64_t v1;
  void *v3;

  v3 = *(void **)v1;
  if (*(_QWORD *)v1)
  {
    *(_QWORD *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ARI_IBICbsCause_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsCause_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsCdmaServiceCategoryFields_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsCdmaServiceCategoryFields_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsEtwsWarningType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsEtwsWarningType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsMidRangeList_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsMidRangeList_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICbsType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICdmaLanguage_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBICdmaLanguage_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

AriSdk::MsgBase *AriSdk::ARI_IBIAlignmentCheckReq_SDK::ARI_IBIAlignmentCheckReq_SDK(AriSdk::ARI_IBIAlignmentCheckReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8808000, 0);
  *(_QWORD *)result = &off_24C932308;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8808000, 0);
  *(_QWORD *)result = &off_24C932308;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIAlignmentCheckReq_SDK::ARI_IBIAlignmentCheckReq_SDK(AriSdk::ARI_IBIAlignmentCheckReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932308;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932308;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIAlignmentCheckReq_SDK::~ARI_IBIAlignmentCheckReq_SDK(AriSdk::ARI_IBIAlignmentCheckReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C932308;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIAlignmentCheckReq_SDK::~ARI_IBIAlignmentCheckReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIAlignmentCheckReq_SDK::pack(AriSdk::ARI_IBIAlignmentCheckReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x28uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIAlignmentCheckReq_SDK::unpack(AriSdk::ARI_IBIAlignmentCheckReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _OWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_OWORD *)operator new();
  *v6 = 0u;
  v6[1] = 0u;
  *((_QWORD *)v6 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 40, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 10, (uint64_t)v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E03A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIAlignmentCheckReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIAlignmentCheckReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467973632;
}

AriSdk::MsgBase *AriSdk::ARI_IBIAlignmentCheckRspCb_SDK::ARI_IBIAlignmentCheckRspCb_SDK(AriSdk::ARI_IBIAlignmentCheckRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9008000, 0);
  *(_QWORD *)result = &off_24C932340;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9008000, 0);
  *(_QWORD *)result = &off_24C932340;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIAlignmentCheckRspCb_SDK::ARI_IBIAlignmentCheckRspCb_SDK(AriSdk::ARI_IBIAlignmentCheckRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932340;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932340;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIAlignmentCheckRspCb_SDK::~ARI_IBIAlignmentCheckRspCb_SDK(AriSdk::ARI_IBIAlignmentCheckRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932340;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIAlignmentCheckRspCb_SDK::~ARI_IBIAlignmentCheckRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIAlignmentCheckRspCb_SDK::pack(AriSdk::ARI_IBIAlignmentCheckRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIAlignmentCheckRspCb_SDK::unpack(AriSdk::ARI_IBIAlignmentCheckRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2E0718(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIAlignmentCheckRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIAlignmentCheckRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1459585024;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK::ARI_IBIDeprecatedMsgInheritedReq1_SDK(AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8830000, 0);
  *(_QWORD *)result = &off_24C932378;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8830000, 0);
  *(_QWORD *)result = &off_24C932378;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK::ARI_IBIDeprecatedMsgInheritedReq1_SDK(AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932378;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932378;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK::~ARI_IBIDeprecatedMsgInheritedReq1_SDK(AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932378;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK::~ARI_IBIDeprecatedMsgInheritedReq1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK::pack(AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK::unpack(AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E0A74(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedMsgInheritedReq1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467809792;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK::ARI_IBIDeprecatedMsgInheritedRsp1_SDK(AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9030000, 0);
  *(_QWORD *)result = &off_24C9323B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9030000, 0);
  *(_QWORD *)result = &off_24C9323B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK::ARI_IBIDeprecatedMsgInheritedRsp1_SDK(AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9323B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9323B0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK::~ARI_IBIDeprecatedMsgInheritedRsp1_SDK(AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9323B0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK::~ARI_IBIDeprecatedMsgInheritedRsp1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK::pack(AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK::unpack(AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E0DDC(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedMsgInheritedRsp1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1459421184;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgInd1_SDK::ARI_IBIDeprecatedMsgInd1_SDK(AriSdk::ARI_IBIDeprecatedMsgInd1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9860000, 0);
  *(_QWORD *)result = &off_24C9323E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9860000, 0);
  *(_QWORD *)result = &off_24C9323E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgInd1_SDK::ARI_IBIDeprecatedMsgInd1_SDK(AriSdk::ARI_IBIDeprecatedMsgInd1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9323E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9323E8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedMsgInd1_SDK::~ARI_IBIDeprecatedMsgInd1_SDK(AriSdk::ARI_IBIDeprecatedMsgInd1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9323E8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedMsgInd1_SDK::~ARI_IBIDeprecatedMsgInd1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgInd1_SDK::pack(AriSdk::ARI_IBIDeprecatedMsgInd1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgInd1_SDK::unpack(AriSdk::ARI_IBIDeprecatedMsgInd1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E1144(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedMsgInd1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedMsgInd1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1450835968;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK::ARI_IBIDeprecatedInheritedReq1_SDK(AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8818000, 0);
  *(_QWORD *)result = &off_24C932420;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8818000, 0);
  *(_QWORD *)result = &off_24C932420;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK::ARI_IBIDeprecatedInheritedReq1_SDK(AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932420;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932420;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK::~ARI_IBIDeprecatedInheritedReq1_SDK(AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932420;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK::~ARI_IBIDeprecatedInheritedReq1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK::pack(AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK::unpack(AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E14B4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedInheritedReq1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467908096;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK::ARI_IBIDeprecatedInheritedRsp1_SDK(AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9018000, 0);
  *(_QWORD *)result = &off_24C932458;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9018000, 0);
  *(_QWORD *)result = &off_24C932458;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK::ARI_IBIDeprecatedInheritedRsp1_SDK(AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932458;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932458;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK::~ARI_IBIDeprecatedInheritedRsp1_SDK(AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932458;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK::~ARI_IBIDeprecatedInheritedRsp1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK::pack(AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK::unpack(AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E1828(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedInheritedRsp1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1459519488;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgReq1_SDK::ARI_IBIDeprecatedMsgReq1_SDK(AriSdk::ARI_IBIDeprecatedMsgReq1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8838000, 0);
  *(_QWORD *)result = &off_24C932490;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8838000, 0);
  *(_QWORD *)result = &off_24C932490;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgReq1_SDK::ARI_IBIDeprecatedMsgReq1_SDK(AriSdk::ARI_IBIDeprecatedMsgReq1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932490;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932490;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedMsgReq1_SDK::~ARI_IBIDeprecatedMsgReq1_SDK(AriSdk::ARI_IBIDeprecatedMsgReq1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932490;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedMsgReq1_SDK::~ARI_IBIDeprecatedMsgReq1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgReq1_SDK::pack(AriSdk::ARI_IBIDeprecatedMsgReq1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgReq1_SDK::unpack(AriSdk::ARI_IBIDeprecatedMsgReq1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E1B9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedMsgReq1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedMsgReq1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467777024;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK::ARI_IBIDeprecatedMsgRsp1_SDK(AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9038000, 0);
  *(_QWORD *)result = &off_24C9324C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9038000, 0);
  *(_QWORD *)result = &off_24C9324C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK::ARI_IBIDeprecatedMsgRsp1_SDK(AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9324C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9324C8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK::~ARI_IBIDeprecatedMsgRsp1_SDK(AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9324C8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK::~ARI_IBIDeprecatedMsgRsp1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK::pack(AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK::unpack(AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E1F10(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedMsgRsp1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1459388416;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK::ARI_IBINonDeprecatedMsgReq1_SDK(AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8840000, 0);
  *(_QWORD *)result = &off_24C932500;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8840000, 0);
  *(_QWORD *)result = &off_24C932500;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK::ARI_IBINonDeprecatedMsgReq1_SDK(AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932500;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932500;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK::~ARI_IBINonDeprecatedMsgReq1_SDK(AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932500;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK::~ARI_IBINonDeprecatedMsgReq1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK::pack(AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK::unpack(AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E227C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINonDeprecatedMsgReq1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467744256;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK::ARI_IBINonDeprecatedMsgRsp1_SDK(AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9040000, 0);
  *(_QWORD *)result = &off_24C932538;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9040000, 0);
  *(_QWORD *)result = &off_24C932538;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK::ARI_IBINonDeprecatedMsgRsp1_SDK(AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932538;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932538;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK::~ARI_IBINonDeprecatedMsgRsp1_SDK(AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932538;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK::~ARI_IBINonDeprecatedMsgRsp1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK::pack(AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK::unpack(AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E25E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINonDeprecatedMsgRsp1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1459355648;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedReq1_SDK::ARI_IBIDeprecatedReq1_SDK(AriSdk::ARI_IBIDeprecatedReq1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8820000, 0);
  *(_QWORD *)result = &off_24C932570;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8820000, 0);
  *(_QWORD *)result = &off_24C932570;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedReq1_SDK::ARI_IBIDeprecatedReq1_SDK(AriSdk::ARI_IBIDeprecatedReq1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932570;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932570;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedReq1_SDK::~ARI_IBIDeprecatedReq1_SDK(AriSdk::ARI_IBIDeprecatedReq1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932570;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedReq1_SDK::~ARI_IBIDeprecatedReq1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedReq1_SDK::pack(AriSdk::ARI_IBIDeprecatedReq1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedReq1_SDK::unpack(AriSdk::ARI_IBIDeprecatedReq1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E294C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedReq1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedReq1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467875328;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedRsp1_SDK::ARI_IBIDeprecatedRsp1_SDK(AriSdk::ARI_IBIDeprecatedRsp1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9020000, 0);
  *(_QWORD *)result = &off_24C9325A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9020000, 0);
  *(_QWORD *)result = &off_24C9325A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIDeprecatedRsp1_SDK::ARI_IBIDeprecatedRsp1_SDK(AriSdk::ARI_IBIDeprecatedRsp1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9325A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9325A8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIDeprecatedRsp1_SDK::~ARI_IBIDeprecatedRsp1_SDK(AriSdk::ARI_IBIDeprecatedRsp1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9325A8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIDeprecatedRsp1_SDK::~ARI_IBIDeprecatedRsp1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIDeprecatedRsp1_SDK::pack(AriSdk::ARI_IBIDeprecatedRsp1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIDeprecatedRsp1_SDK::unpack(AriSdk::ARI_IBIDeprecatedRsp1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E2CB4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIDeprecatedRsp1_SDK::hasDeclaredGmid(AriSdk::ARI_IBIDeprecatedRsp1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1459486720;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedReq1_SDK::ARI_IBINonDeprecatedReq1_SDK(AriSdk::ARI_IBINonDeprecatedReq1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8828000, 0);
  *(_QWORD *)result = &off_24C9325E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8828000, 0);
  *(_QWORD *)result = &off_24C9325E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedReq1_SDK::ARI_IBINonDeprecatedReq1_SDK(AriSdk::ARI_IBINonDeprecatedReq1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9325E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9325E0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINonDeprecatedReq1_SDK::~ARI_IBINonDeprecatedReq1_SDK(AriSdk::ARI_IBINonDeprecatedReq1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9325E0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINonDeprecatedReq1_SDK::~ARI_IBINonDeprecatedReq1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINonDeprecatedReq1_SDK::pack(AriSdk::ARI_IBINonDeprecatedReq1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINonDeprecatedReq1_SDK::unpack(AriSdk::ARI_IBINonDeprecatedReq1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E3024(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINonDeprecatedReq1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINonDeprecatedReq1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467842560;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedRsp1_SDK::ARI_IBINonDeprecatedRsp1_SDK(AriSdk::ARI_IBINonDeprecatedRsp1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9028000, 0);
  *(_QWORD *)result = &off_24C932618;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9028000, 0);
  *(_QWORD *)result = &off_24C932618;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBINonDeprecatedRsp1_SDK::ARI_IBINonDeprecatedRsp1_SDK(AriSdk::ARI_IBINonDeprecatedRsp1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932618;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932618;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBINonDeprecatedRsp1_SDK::~ARI_IBINonDeprecatedRsp1_SDK(AriSdk::ARI_IBINonDeprecatedRsp1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C932618;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4045BD7913);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBINonDeprecatedRsp1_SDK::~ARI_IBINonDeprecatedRsp1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBINonDeprecatedRsp1_SDK::pack(AriSdk::ARI_IBINonDeprecatedRsp1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x28uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBINonDeprecatedRsp1_SDK::unpack(AriSdk::ARI_IBINonDeprecatedRsp1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  *((_QWORD *)v5 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 40, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<IBICallPsQos5g>::operator=<IBICallPsQos5g&,void>((uint64_t *)this + 9, (uint64_t)v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4045BD7913);
  return v3;
}

void sub_20E2E3398(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4045BD7913);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBINonDeprecatedRsp1_SDK::hasDeclaredGmid(AriSdk::ARI_IBINonDeprecatedRsp1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1459453952;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9808000, 0);
  *(_QWORD *)result = &off_24C932650;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9808000, 0);
  *(_QWORD *)result = &off_24C932650;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932650;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932650;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK::~ARI_IBIPeriodicCounterForcedWakeIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C932650;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK::~ARI_IBIPeriodicCounterForcedWakeIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK::pack(AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E3630(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterForcedWakeIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1451196416;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK::ARI_IBIPeriodicCounterWakeableIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9810000, 0);
  *(_QWORD *)result = &off_24C932688;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9810000, 0);
  *(_QWORD *)result = &off_24C932688;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK::ARI_IBIPeriodicCounterWakeableIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932688;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932688;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK::~ARI_IBIPeriodicCounterWakeableIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C932688;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK::~ARI_IBIPeriodicCounterWakeableIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK::pack(AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E38A8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterWakeableIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1451163648;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9818000, 0);
  *(_QWORD *)result = &off_24C9326C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9818000, 0);
  *(_QWORD *)result = &off_24C9326C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9326C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9326C0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK::~ARI_IBIPeriodicCounterNonWakeableIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9326C0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK::~ARI_IBIPeriodicCounterNonWakeableIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK::pack(AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E3B24(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterNonWakeableIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1451130880;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK::ARI_IBIPeriodicCounterBufferAllIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9820000, 0);
  *(_QWORD *)result = &off_24C9326F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9820000, 0);
  *(_QWORD *)result = &off_24C9326F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK::ARI_IBIPeriodicCounterBufferAllIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9326F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9326F8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK::~ARI_IBIPeriodicCounterBufferAllIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9326F8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK::~ARI_IBIPeriodicCounterBufferAllIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK::pack(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E3D9C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1451098112;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK::ARI_IBIPeriodicCounterBufferLastIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9828000, 0);
  *(_QWORD *)result = &off_24C932730;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9828000, 0);
  *(_QWORD *)result = &off_24C932730;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK::ARI_IBIPeriodicCounterBufferLastIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932730;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932730;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK::~ARI_IBIPeriodicCounterBufferLastIndCb_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C932730;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK::~ARI_IBIPeriodicCounterBufferLastIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK::pack(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E4018(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1451065344;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9830000, 0);
  *(_QWORD *)result = &off_24C932768;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9830000, 0);
  *(_QWORD *)result = &off_24C932768;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932768;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932768;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK::~ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C932768;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK::~ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK::pack(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E4290(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1451032576;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9838000, 0);
  *(_QWORD *)result = &off_24C9327A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9838000, 0);
  *(_QWORD *)result = &off_24C9327A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9327A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9327A0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK::~ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9327A0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK::~ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK::pack(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E450C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterBufferAllIndCb_v3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1450999808;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9840000, 0);
  *(_QWORD *)result = &off_24C9327D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9840000, 0);
  *(_QWORD *)result = &off_24C9327D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9327D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9327D8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK::~ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9327D8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK::~ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK::pack(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E4784(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v2_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1450967040;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9848000, 0);
  *(_QWORD *)result = &off_24C932810;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9848000, 0);
  *(_QWORD *)result = &off_24C932810;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932810;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932810;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK::~ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C932810;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK::~ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK::pack(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK::unpack(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E4A00(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicCounterBufferLastIndCb_v3_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1450934272;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK::ARI_IBIPeriodicFloatSingleIndCb_SDK(AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9850000, 0);
  *(_QWORD *)result = &off_24C932848;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9850000, 0);
  *(_QWORD *)result = &off_24C932848;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK::ARI_IBIPeriodicFloatSingleIndCb_SDK(AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932848;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932848;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK::~ARI_IBIPeriodicFloatSingleIndCb_SDK(AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C932848;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK::~ARI_IBIPeriodicFloatSingleIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK::pack(AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK::unpack(AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<float>::operator=<float &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E4C78(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicFloatSingleIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1450901504;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK::ARI_IBIPeriodicFloatDoubleIndCb_SDK(AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9858000, 0);
  *(_QWORD *)result = &off_24C932880;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA9858000, 0);
  *(_QWORD *)result = &off_24C932880;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK::ARI_IBIPeriodicFloatDoubleIndCb_SDK(AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932880;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C932880;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK::~ARI_IBIPeriodicFloatDoubleIndCb_SDK(AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C932880;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK::~ARI_IBIPeriodicFloatDoubleIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK::pack(AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 8uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK::unpack(AriMsg **this)
{
  _QWORD *v2;
  uint64_t v3;
  BOOL v4;
  AriMsg *v5;
  AriMsg *v6;
  BOOL v8;

  v8 = 0;
  v2 = (_QWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(this[6], 1, v2, 8, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (!v4)
  {
    v5 = (AriMsg *)operator new();
    *(_QWORD *)v5 = *v2;
    v6 = this[8];
    this[8] = v5;
    if (v6)
      MEMORY[0x212BB9B60](v6, 0x1000C4000313F17);
  }
  MEMORY[0x212BB9B60](v2, 0x1000C4000313F17);
  return v3;
}

void sub_20E2E4F2C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4000313F17);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPeriodicFloatDoubleIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1450868736;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPlaygroundInit_SDK::ARI_IBIPlaygroundInit_SDK(AriSdk::ARI_IBIPlaygroundInit_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8810000, 1);
  *(_QWORD *)result = &off_24C9328B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0xA8810000, 1);
  *(_QWORD *)result = &off_24C9328B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIPlaygroundInit_SDK::ARI_IBIPlaygroundInit_SDK(AriSdk::ARI_IBIPlaygroundInit_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9328B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9328B8;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIPlaygroundInit_SDK::~ARI_IBIPlaygroundInit_SDK(AriSdk::ARI_IBIPlaygroundInit_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9328B8;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIPlaygroundInit_SDK::~ARI_IBIPlaygroundInit_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIPlaygroundInit_SDK::pack(AriSdk::ARI_IBIPlaygroundInit_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIPlaygroundInit_SDK::unpack(AriSdk::ARI_IBIPlaygroundInit_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E51A4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIPlaygroundInit_SDK::hasDeclaredGmid(AriSdk::ARI_IBIPlaygroundInit_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == -1467940864;
}

uint64_t ARI_IBIMsSsLcsMtlrRejectIndParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsSsLcsMtlrRejectIndParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsSsLcsPositioningCapabilityReqParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsSsLcsPositioningCapabilityReqParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsSsLcsPositioningCapabilityRspParam_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIMsSsLcsPositioningCapabilityRspParam_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISsLcsMtlrNotificationIndCbParams_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISsLcsMtlrNotificationIndCbParams_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISsLcsMtlrNotificationRspParams_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBISsLcsMtlrNotificationRspParams_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccClockControlIndCbParams_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccClockControlIndCbParams_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccClockControlReqParams_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccClockControlReqParams_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccClockControlRspCbParams_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccClockControlRspCbParams_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccLtlIndType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccLtlIndType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccLtlInfoType_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccLtlInfoType_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccPeripheral_ENC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

uint64_t ARI_IBIXccPeripheral_DEC_F(void *a1, const void *a2, uint64_t a3, uint64_t a4)
{
  memcpy(a1, a2, a4 * a3);
  return 0;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK::ARI_IBISimPbCacheLoadIndCb_SDK(AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39810000u, 0);
  *(_QWORD *)result = &off_24C9339C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39810000u, 0);
  *(_QWORD *)result = &off_24C9339C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK::ARI_IBISimPbCacheLoadIndCb_SDK(AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9339C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9339C8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK::~ARI_IBISimPbCacheLoadIndCb_SDK(AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C9339C8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK::~ARI_IBISimPbCacheLoadIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK::pack(AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK::unpack(AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  uint64_t v7;
  _DWORD *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;

  v12 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v12, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v12;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v11 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v6 = (_DWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v10 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v8, 4, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  return v3;
}

void sub_20E2E5870(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbCacheLoadIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 964755456;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK::ARI_IBISimPbGetMetaInfoReq_SDK(AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38850000u, 0);
  *(_QWORD *)result = &off_24C933A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38850000u, 0);
  *(_QWORD *)result = &off_24C933A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK::ARI_IBISimPbGetMetaInfoReq_SDK(AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933A00;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK::~ARI_IBISimPbGetMetaInfoReq_SDK(AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C933A00;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK::~ARI_IBISimPbGetMetaInfoReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK::pack(AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK::unpack(AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2E5BC8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbGetMetaInfoReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 948240384;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK::ARI_IBISimPbGetMetaInfoRspCb_SDK(AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39050000u, 0);
  *(_QWORD *)result = &off_24C933A38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39050000u, 0);
  *(_QWORD *)result = &off_24C933A38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK::ARI_IBISimPbGetMetaInfoRspCb_SDK(AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933A38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933A38;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK::~ARI_IBISimPbGetMetaInfoRspCb_SDK(AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C933A38;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK::~ARI_IBISimPbGetMetaInfoRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK::pack(AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK::unpack(AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E5E44(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbGetMetaInfoRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956628992;
}

double AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK::ARI_IBISimPbGetMetaInfoIndCb_SDK(AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39848000u, 0);
  *(_QWORD *)v1 = &off_24C933A70;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39848000u, 0);
  *(_QWORD *)v1 = &off_24C933A70;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK::ARI_IBISimPbGetMetaInfoIndCb_SDK(AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933A70;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933A70;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK::~ARI_IBISimPbGetMetaInfoIndCb_SDK(AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C933A70;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4077774924);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK::~ARI_IBISimPbGetMetaInfoIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK::pack(AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 1uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v11, 4uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK::unpack(AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _BYTE *v7;
  _WORD *v8;
  _DWORD *v9;
  _DWORD *v10;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;

  v18 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v18, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v18;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v17 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v16 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v15 = 0;
  v7 = (_BYTE *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 1, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4077774924);
  }
  v14 = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 2, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v13 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  }
  v12 = 0;
  v10 = (_DWORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v10, 4, &v12, 0);
  if (!(_DWORD)v3 && v12)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 14, v10);
  MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  return v3;
}

void sub_20E2E65E8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbGetMetaInfoIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 964984832;
}

double AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39830000u, 0);
  *(_QWORD *)v1 = &off_24C933AA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39830000u, 0);
  *(_QWORD *)v1 = &off_24C933AA8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933AA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933AA8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK::~ARI_IBISimPbGetMetaInformationIndCb_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C933AA8;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4073C3B260);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4073C3B260);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40E0CEA734);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK::~ARI_IBISimPbGetMetaInformationIndCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK::pack(AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 0x78uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 0x3F0uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 0x3F0uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK::unpack(AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  void *v12;
  void *v13;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;

  v19 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v19, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v19;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v18 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v17 = 0;
  v6 = operator new();
  *(_OWORD *)v6 = 0u;
  *(_OWORD *)(v6 + 16) = 0u;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  *(_OWORD *)(v6 + 64) = 0u;
  *(_OWORD *)(v6 + 80) = 0u;
  *(_OWORD *)(v6 + 96) = 0u;
  *(_QWORD *)(v6 + 112) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, (void *)v6, 120, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40E0CEA734);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v7 = operator new();
    v8 = *(_OWORD *)(v6 + 80);
    *(_OWORD *)(v7 + 64) = *(_OWORD *)(v6 + 64);
    *(_OWORD *)(v7 + 80) = v8;
    *(_OWORD *)(v7 + 96) = *(_OWORD *)(v6 + 96);
    *(_QWORD *)(v7 + 112) = *(_QWORD *)(v6 + 112);
    v9 = *(_OWORD *)(v6 + 16);
    *(_OWORD *)v7 = *(_OWORD *)v6;
    *(_OWORD *)(v7 + 16) = v9;
    v10 = *(_OWORD *)(v6 + 48);
    *(_OWORD *)(v7 + 32) = *(_OWORD *)(v6 + 32);
    *(_OWORD *)(v7 + 48) = v10;
    v11 = *((_QWORD *)this + 10);
    *((_QWORD *)this + 10) = v7;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40E0CEA734);
    MEMORY[0x212BB9B60](v6, 0x1000C40E0CEA734);
  }
  v16 = 0;
  v12 = (void *)operator new();
  bzero(v12, 0x3F0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v12, 1008, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v12, 0x1000C4073C3B260);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimPb3gDescriptor>::operator=<IBISimPb3gDescriptor&,void>((uint64_t *)this + 11, v12);
    MEMORY[0x212BB9B60](v12, 0x1000C4073C3B260);
  }
  v15 = 0;
  v13 = (void *)operator new();
  bzero(v13, 0x3F0uLL);
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v13, 1008, &v15, 0);
  if (!(_DWORD)v3 && v15)
    AriSdk::Tlv<IBISimPb3gDescriptor>::operator=<IBISimPb3gDescriptor&,void>((uint64_t *)this + 12, v13);
  MEMORY[0x212BB9B60](v13, 0x1000C4073C3B260);
  return v3;
}

void sub_20E2E6C94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4073C3B260);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISimPb3gDescriptor>::operator=<IBISimPb3gDescriptor&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x3F0uLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4073C3B260);
  return a1;
}

BOOL AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbGetMetaInformationIndCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 964886528;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK::ARI_IBISimPbGetMetaInformationReq_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38838000u, 0);
  *(_QWORD *)result = &off_24C933AE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38838000u, 0);
  *(_QWORD *)result = &off_24C933AE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK::ARI_IBISimPbGetMetaInformationReq_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933AE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933AE0;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK::~ARI_IBISimPbGetMetaInformationReq_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C933AE0;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK::~ARI_IBISimPbGetMetaInformationReq_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK::pack(AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK::unpack(AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2E7098(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbGetMetaInformationReq_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 948142080;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39038000u, 0);
  *(_QWORD *)result = &off_24C933B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39038000u, 0);
  *(_QWORD *)result = &off_24C933B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933B18;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK::~ARI_IBISimPbGetMetaInformationRspCb_V1_SDK(AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C933B18;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK::~ARI_IBISimPbGetMetaInformationRspCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK::pack(AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK::unpack(AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E7320(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbGetMetaInformationRspCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956530688;
}

double AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK::ARI_IBISimPbLocationIndCb_V1_SDK(AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39838000u, 0);
  *(_QWORD *)v1 = &off_24C933B50;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39838000u, 0);
  *(_QWORD *)v1 = &off_24C933B50;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK::ARI_IBISimPbLocationIndCb_V1_SDK(AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933B50;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933B50;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK::~ARI_IBISimPbLocationIndCb_V1_SDK(AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C933B50;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK::~ARI_IBISimPbLocationIndCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK::pack(AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v8, 4uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v9, 4uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v10, 4uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK::unpack(AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _DWORD *v7;
  _DWORD *v8;
  _DWORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v7 = (_DWORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v7, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  }
  v12 = 0;
  v8 = (_DWORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v8, 4, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  }
  v11 = 0;
  v9 = (_DWORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v9, 4, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 13, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C4052888210);
  return v3;
}

void sub_20E2E79E4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbLocationIndCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 964919296;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbLocationReq_V1_SDK::ARI_IBISimPbLocationReq_V1_SDK(AriSdk::ARI_IBISimPbLocationReq_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38840000u, 0);
  *(_QWORD *)result = &off_24C933B88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38840000u, 0);
  *(_QWORD *)result = &off_24C933B88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbLocationReq_V1_SDK::ARI_IBISimPbLocationReq_V1_SDK(AriSdk::ARI_IBISimPbLocationReq_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933B88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933B88;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbLocationReq_V1_SDK::~ARI_IBISimPbLocationReq_V1_SDK(AriSdk::ARI_IBISimPbLocationReq_V1_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C933B88;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbLocationReq_V1_SDK::~ARI_IBISimPbLocationReq_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbLocationReq_V1_SDK::pack(AriSdk::ARI_IBISimPbLocationReq_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbLocationReq_V1_SDK::unpack(AriSdk::ARI_IBISimPbLocationReq_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E7C84(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbLocationReq_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbLocationReq_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 948174848;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK::ARI_IBISimPbGetLocationRspCb_V1_SDK(AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39040000u, 0);
  *(_QWORD *)result = &off_24C933BC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39040000u, 0);
  *(_QWORD *)result = &off_24C933BC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK::ARI_IBISimPbGetLocationRspCb_V1_SDK(AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933BC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933BC0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK::~ARI_IBISimPbGetLocationRspCb_V1_SDK(AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C933BC0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK::~ARI_IBISimPbGetLocationRspCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK::pack(AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK::unpack(AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2E7EF8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbGetLocationRspCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956563456;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbReadEntryReq_SDK::ARI_IBISimPbReadEntryReq_SDK(AriSdk::ARI_IBISimPbReadEntryReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38810000u, 0);
  *(_QWORD *)result = &off_24C933BF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38810000u, 0);
  *(_QWORD *)result = &off_24C933BF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbReadEntryReq_SDK::ARI_IBISimPbReadEntryReq_SDK(AriSdk::ARI_IBISimPbReadEntryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933BF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933BF8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbReadEntryReq_SDK::~ARI_IBISimPbReadEntryReq_SDK(AriSdk::ARI_IBISimPbReadEntryReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C933BF8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbReadEntryReq_SDK::~ARI_IBISimPbReadEntryReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbReadEntryReq_SDK::pack(AriSdk::ARI_IBISimPbReadEntryReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbReadEntryReq_SDK::unpack(AriSdk::ARI_IBISimPbReadEntryReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2E8324(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbReadEntryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbReadEntryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 947978240;
}

double AriSdk::ARI_IBISimPbReadEntryRspCb_SDK::ARI_IBISimPbReadEntryRspCb_SDK(AriSdk::ARI_IBISimPbReadEntryRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39010000u, 0);
  *(_QWORD *)v1 = &off_24C933C30;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39010000u, 0);
  *(_QWORD *)v1 = &off_24C933C30;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_OWORD *)v1 + 7) = 0u;
  *((_OWORD *)v1 + 8) = 0u;
  *((_OWORD *)v1 + 9) = 0u;
  *((_QWORD *)v1 + 20) = 0;
  return result;
}

double AriSdk::ARI_IBISimPbReadEntryRspCb_SDK::ARI_IBISimPbReadEntryRspCb_SDK(AriSdk::ARI_IBISimPbReadEntryRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933C30;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933C30;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_OWORD *)v3 + 7) = 0u;
  *((_OWORD *)v3 + 8) = 0u;
  *((_OWORD *)v3 + 9) = 0u;
  *((_QWORD *)v3 + 20) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbReadEntryRspCb_SDK::~ARI_IBISimPbReadEntryRspCb_SDK(AriSdk::ARI_IBISimPbReadEntryRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)this = &off_24C933C30;
  v2 = *((_QWORD *)this + 20);
  *((_QWORD *)this + 20) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4077774924);
  v3 = *((_QWORD *)this + 19);
  *((_QWORD *)this + 19) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = (void *)*((_QWORD *)this + 16);
  if (v4)
  {
    *((_QWORD *)this + 17) = v4;
    operator delete(v4);
  }
  v5 = *((_QWORD *)this + 15);
  *((_QWORD *)this + 15) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C40627F77AELL);
  v8 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  v9 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v9)
    MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  v10 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v10)
    MEMORY[0x212BB9B60](v10, 0x1000C4052888210);
  v11 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v11)
    MEMORY[0x212BB9B60](v11, 0x1000C4052888210);
  v12 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v12)
    MEMORY[0x212BB9B60](v12, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbReadEntryRspCb_SDK::~ARI_IBISimPbReadEntryRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbReadEntryRspCb_SDK::pack(AriSdk::ARI_IBISimPbReadEntryRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;
  const void *v12;
  _BYTE *v13;
  _BYTE *v14;
  const void *v15;
  const void *v16;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x12CuLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 2uLL, 0), !(_DWORD)result))
              {
                v12 = (const void *)*((_QWORD *)this + 15);
                if (!v12 || (result = AriMsg::pack(*((AriMsg **)this + 6), 9, v12, 2uLL, 0), !(_DWORD)result))
                {
                  v13 = (_BYTE *)*((_QWORD *)this + 16);
                  if (!v13
                    || (v14 = (_BYTE *)*((_QWORD *)this + 17), v13 == v14)
                    || (result = AriMsg::pack(*((AriMsg **)this + 6), 10, v13, v14 - v13, 0), !(_DWORD)result))
                  {
                    v15 = (const void *)*((_QWORD *)this + 19);
                    if (!v15 || (result = AriMsg::pack(*((AriMsg **)this + 6), 11, v15, 2uLL, 0), !(_DWORD)result))
                    {
                      v16 = (const void *)*((_QWORD *)this + 20);
                      if (!v16 || (result = AriMsg::pack(*((AriMsg **)this + 6), 12, v16, 1uLL, 0), !(_DWORD)result))
                      {
                        result = 0;
                        *a2 = (AriMsg *)*((_QWORD *)this + 6);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbReadEntryRspCb_SDK::unpack(AriSdk::ARI_IBISimPbReadEntryRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _WORD *v8;
  _OWORD *v9;
  _WORD *v10;
  _WORD *v11;
  _QWORD *v12;
  _WORD *v13;
  _BYTE *v14;
  __n128 __p;
  uint64_t v17;
  unint64_t v18;
  BOOL v19;

  __p.n128_u8[0] = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = __p.n128_u8[0] == 0;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  __p.n128_u8[0] = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v9 = (_OWORD *)operator new();
  *v9 = 0u;
  v9[1] = 0u;
  v9[2] = 0u;
  v9[3] = 0u;
  v9[4] = 0u;
  v9[5] = 0u;
  v9[6] = 0u;
  v9[7] = 0u;
  v9[8] = 0u;
  v9[9] = 0u;
  v9[10] = 0u;
  v9[11] = 0u;
  v9[12] = 0u;
  v9[13] = 0u;
  v9[14] = 0u;
  v9[15] = 0u;
  v9[16] = 0u;
  v9[17] = 0u;
  *(_OWORD *)((char *)v9 + 284) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 300, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40627F77AELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimPbBaseEntry>::operator=<IBISimPbBaseEntry&,void>((uint64_t *)this + 13, v9);
    MEMORY[0x212BB9B60](v9, 0x1000C40627F77AELL);
  }
  __p.n128_u8[0] = 0;
  v10 = (_WORD *)operator new();
  *v10 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v10, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v10);
    MEMORY[0x212BB9B60](v10, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v11 = (_WORD *)operator new();
  *v11 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 9, v11, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 15, v11);
    MEMORY[0x212BB9B60](v11, 0x1000C40BDFB0063);
  }
  v19 = 0;
  v18 = 0xAAAAAAAAAAAAAAAALL;
  v12 = (_QWORD *)operator new[]();
  *v12 = 0;
  v12[1] = 0;
  *((_DWORD *)v12 + 4) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 10, v12, 20, &v19, &v18);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B48](v12, 0x1000C80BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v17 = 0;
    __p = 0uLL;
    std::vector<unsigned short>::__init_with_size[abi:ne180100]<unsigned short *,unsigned short *>(&__p, v12, (uint64_t)v12 + 2 * (v18 >> 1), v18 >> 1);
    AriSdk::TlvArray<unsigned short,10ul>::operator=((std::vector<int> *)((char *)this + 128), &__p);
    if (__p.n128_u64[0])
    {
      __p.n128_u64[1] = __p.n128_u64[0];
      operator delete((void *)__p.n128_u64[0]);
    }
    MEMORY[0x212BB9B48](v12, 0x1000C80BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v13 = (_WORD *)operator new();
  *v13 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 11, v13, 2, (BOOL *)&__p, 0);
  if ((_DWORD)v3 || !__p.n128_u8[0])
  {
    MEMORY[0x212BB9B60](v13, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 19, v13);
    MEMORY[0x212BB9B60](v13, 0x1000C40BDFB0063);
  }
  __p.n128_u8[0] = 0;
  v14 = (_BYTE *)operator new();
  *v14 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 12, v14, 1, (BOOL *)&__p, 0);
  if (!(_DWORD)v3 && __p.n128_u8[0])
    AriSdk::Tlv<unsigned char>::operator=<unsigned char &,void>((uint64_t *)this + 20, v14);
  MEMORY[0x212BB9B60](v14, 0x1000C4077774924);
  return v3;
}

void sub_20E2E8EA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11)
{
  uint64_t v11;

  MEMORY[0x212BB9B60](v11, 0x1000C4077774924);
  _Unwind_Resume(a1);
}

uint64_t *AriSdk::Tlv<IBISimPbBaseEntry>::operator=<IBISimPbBaseEntry&,void>(uint64_t *a1, const void *a2)
{
  void *v4;
  uint64_t v5;

  v4 = (void *)operator new();
  memcpy(v4, a2, 0x12CuLL);
  v5 = *a1;
  *a1 = (uint64_t)v4;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40627F77AELL);
  return a1;
}

BOOL AriSdk::ARI_IBISimPbReadEntryRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbReadEntryRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956366848;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbReadRecReq_SDK::ARI_IBISimPbReadRecReq_SDK(AriSdk::ARI_IBISimPbReadRecReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38858000u, 0);
  *(_QWORD *)result = &off_24C933C68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38858000u, 0);
  *(_QWORD *)result = &off_24C933C68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbReadRecReq_SDK::ARI_IBISimPbReadRecReq_SDK(AriSdk::ARI_IBISimPbReadRecReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933C68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933C68;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbReadRecReq_SDK::~ARI_IBISimPbReadRecReq_SDK(AriSdk::ARI_IBISimPbReadRecReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C933C68;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbReadRecReq_SDK::~ARI_IBISimPbReadRecReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbReadRecReq_SDK::pack(AriSdk::ARI_IBISimPbReadRecReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbReadRecReq_SDK::unpack(AriSdk::ARI_IBISimPbReadRecReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2E9400(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbReadRecReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbReadRecReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 948273152;
}

double AriSdk::ARI_IBISimPbReadRecRspCb_SDK::ARI_IBISimPbReadRecRspCb_SDK(AriSdk::ARI_IBISimPbReadRecRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39058000u, 0);
  *(_QWORD *)v1 = &off_24C933CA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39058000u, 0);
  *(_QWORD *)v1 = &off_24C933CA0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimPbReadRecRspCb_SDK::ARI_IBISimPbReadRecRspCb_SDK(AriSdk::ARI_IBISimPbReadRecRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933CA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933CA0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbReadRecRspCb_SDK::~ARI_IBISimPbReadRecRspCb_SDK(AriSdk::ARI_IBISimPbReadRecRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C933CA0;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4013417087);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4050308C2ALL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbReadRecRspCb_SDK::~ARI_IBISimPbReadRecRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbReadRecRspCb_SDK::pack(AriSdk::ARI_IBISimPbReadRecRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x16uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0xF3uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbReadRecRspCb_SDK::unpack(AriSdk::ARI_IBISimPbReadRecRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _QWORD *v7;
  char *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v11 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v7 + 14) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 22, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimPbNum>::operator=<IBISimPbNum&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
  }
  v10 = 0;
  v8 = (char *)operator new();
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_OWORD *)v8 + 7) = 0u;
  *((_OWORD *)v8 + 8) = 0u;
  *((_OWORD *)v8 + 9) = 0u;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_OWORD *)v8 + 12) = 0u;
  *((_OWORD *)v8 + 13) = 0u;
  *((_OWORD *)v8 + 14) = 0u;
  *(_DWORD *)(v8 + 239) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 243, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<IBISimPbAlpha>::operator=<IBISimPbAlpha&,void>((uint64_t *)this + 12, (uint64_t)v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4013417087);
  return v3;
}

void sub_20E2E9A38(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4013417087);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbReadRecRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbReadRecRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956661760;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK::ARI_IBISimPbUsimPbReadyIndCb_SDK(AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39808000u, 0);
  *(_QWORD *)result = &off_24C933CD8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39808000u, 0);
  *(_QWORD *)result = &off_24C933CD8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK::ARI_IBISimPbUsimPbReadyIndCb_SDK(AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933CD8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933CD8;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK::~ARI_IBISimPbUsimPbReadyIndCb_SDK(AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C933CD8;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK::~ARI_IBISimPbUsimPbReadyIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK::pack(AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK::unpack(AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2E9EC0(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbUsimPbReadyIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 964722688;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39840000u, 0);
  *(_QWORD *)result = &off_24C933D10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39840000u, 0);
  *(_QWORD *)result = &off_24C933D10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933D10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933D10;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK::~ARI_IBISimPbUsimPbSelectIndCb_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C933D10;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK::~ARI_IBISimPbUsimPbSelectIndCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK::pack(AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK::unpack(AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2EA300(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbUsimPbSelectIndCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 964952064;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK::ARI_IBISimPbUsimPbSelectReq_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38848000u, 0);
  *(_QWORD *)result = &off_24C933D48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x38848000u, 0);
  *(_QWORD *)result = &off_24C933D48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK::ARI_IBISimPbUsimPbSelectReq_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933D48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933D48;
  *((_QWORD *)result + 9) = 0;
  *((_QWORD *)result + 10) = 0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK::~ARI_IBISimPbUsimPbSelectReq_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)this = &off_24C933D48;
  v2 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  v4 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK::~ARI_IBISimPbUsimPbSelectReq_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK::pack(AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        result = 0;
        *a2 = (AriMsg *)*((_QWORD *)this + 6);
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK::unpack(AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  BOOL v8;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v9, 0);
  if ((_DWORD)v3 || !v9)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v8 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v8, 0);
  if (!(_DWORD)v3 && v8)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
  MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  return v3;
}

void sub_20E2EA744(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbUsimPbSelectReq_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 948207616;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39048000u, 0);
  *(_QWORD *)result = &off_24C933D80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39048000u, 0);
  *(_QWORD *)result = &off_24C933D80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933D80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933D80;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK::~ARI_IBISimPbUsimPbSelectRspCb_V1_SDK(AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C933D80;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK::~ARI_IBISimPbUsimPbSelectRspCb_V1_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK::pack(AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK::unpack(AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2EA9D4(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbUsimPbSelectRspCb_V1_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956596224;
}

double AriSdk::ARI_IBISimPbWriteEntryReq_SDK::ARI_IBISimPbWriteEntryReq_SDK(AriSdk::ARI_IBISimPbWriteEntryReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x38828000u, 0);
  *(_QWORD *)v1 = &off_24C933DB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x38828000u, 0);
  *(_QWORD *)v1 = &off_24C933DB8;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  *((_QWORD *)v1 + 14) = 0;
  return result;
}

double AriSdk::ARI_IBISimPbWriteEntryReq_SDK::ARI_IBISimPbWriteEntryReq_SDK(AriSdk::ARI_IBISimPbWriteEntryReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933DB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933DB8;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  *((_QWORD *)v3 + 14) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbWriteEntryReq_SDK::~ARI_IBISimPbWriteEntryReq_SDK(AriSdk::ARI_IBISimPbWriteEntryReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)this = &off_24C933DB8;
  v2 = *((_QWORD *)this + 14);
  *((_QWORD *)this + 14) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40345711B0);
  v4 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40627F77AELL);
  v5 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C40BDFB0063);
  v6 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  v7 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  v8 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v8)
    MEMORY[0x212BB9B60](v8, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbWriteEntryReq_SDK::~ARI_IBISimPbWriteEntryReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbWriteEntryReq_SDK::pack(AriSdk::ARI_IBISimPbWriteEntryReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;
  const void *v11;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0x12CuLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 0x1E6uLL, 0), !(_DWORD)result))
            {
              v11 = (const void *)*((_QWORD *)this + 14);
              if (!v11 || (result = AriMsg::pack(*((AriMsg **)this + 6), 8, v11, 2uLL, 0), !(_DWORD)result))
              {
                result = 0;
                *a2 = (AriMsg *)*((_QWORD *)this + 6);
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbWriteEntryReq_SDK::unpack(AriSdk::ARI_IBISimPbWriteEntryReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _WORD *v7;
  _OWORD *v8;
  char *v9;
  void *v10;
  uint64_t v11;
  _WORD *v12;
  BOOL v14;
  BOOL v15;
  BOOL v16;
  BOOL v17;
  BOOL v18;
  BOOL v19;
  BOOL v20;

  v20 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v20, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v20;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v19 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v19, 0);
  if ((_DWORD)v3 || !v19)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v18 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v18, 0);
  if ((_DWORD)v3 || !v18)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v17 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, &v17, 0);
  if ((_DWORD)v3 || !v17)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v16 = 0;
  v8 = (_OWORD *)operator new();
  *v8 = 0u;
  v8[1] = 0u;
  v8[2] = 0u;
  v8[3] = 0u;
  v8[4] = 0u;
  v8[5] = 0u;
  v8[6] = 0u;
  v8[7] = 0u;
  v8[8] = 0u;
  v8[9] = 0u;
  v8[10] = 0u;
  v8[11] = 0u;
  v8[12] = 0u;
  v8[13] = 0u;
  v8[14] = 0u;
  v8[15] = 0u;
  v8[16] = 0u;
  v8[17] = 0u;
  *(_OWORD *)((char *)v8 + 284) = 0u;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 300, &v16, 0);
  if ((_DWORD)v3 || !v16)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40627F77AELL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimPbBaseEntry>::operator=<IBISimPbBaseEntry&,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40627F77AELL);
  }
  v15 = 0;
  v9 = (char *)operator new();
  *(_OWORD *)v9 = 0u;
  *((_OWORD *)v9 + 1) = 0u;
  *((_OWORD *)v9 + 2) = 0u;
  *((_OWORD *)v9 + 3) = 0u;
  *((_OWORD *)v9 + 4) = 0u;
  *((_OWORD *)v9 + 5) = 0u;
  *((_OWORD *)v9 + 6) = 0u;
  *((_OWORD *)v9 + 7) = 0u;
  *((_OWORD *)v9 + 8) = 0u;
  *((_OWORD *)v9 + 9) = 0u;
  *((_OWORD *)v9 + 10) = 0u;
  *((_OWORD *)v9 + 11) = 0u;
  *((_OWORD *)v9 + 12) = 0u;
  *((_OWORD *)v9 + 13) = 0u;
  *((_OWORD *)v9 + 14) = 0u;
  *((_OWORD *)v9 + 15) = 0u;
  *((_OWORD *)v9 + 16) = 0u;
  *((_OWORD *)v9 + 17) = 0u;
  *((_OWORD *)v9 + 18) = 0u;
  *((_OWORD *)v9 + 19) = 0u;
  *((_OWORD *)v9 + 20) = 0u;
  *((_OWORD *)v9 + 21) = 0u;
  *((_OWORD *)v9 + 22) = 0u;
  *((_OWORD *)v9 + 23) = 0u;
  *((_OWORD *)v9 + 24) = 0u;
  *((_OWORD *)v9 + 25) = 0u;
  *((_OWORD *)v9 + 26) = 0u;
  *((_OWORD *)v9 + 27) = 0u;
  *((_OWORD *)v9 + 28) = 0u;
  *((_OWORD *)v9 + 29) = 0u;
  *(_QWORD *)(v9 + 478) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 486, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v9, 0x1000C40345711B0);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    v10 = (void *)operator new();
    memcpy(v10, v9, 0x1E6uLL);
    v11 = *((_QWORD *)this + 13);
    *((_QWORD *)this + 13) = v10;
    if (v11)
      MEMORY[0x212BB9B60](v11, 0x1000C40345711B0);
    MEMORY[0x212BB9B60](v9, 0x1000C40345711B0);
  }
  v14 = 0;
  v12 = (_WORD *)operator new();
  *v12 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 8, v12, 2, &v14, 0);
  if (!(_DWORD)v3 && v14)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 14, v12);
  MEMORY[0x212BB9B60](v12, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2EB228(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbWriteEntryReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbWriteEntryReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 948076544;
}

double AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK::ARI_IBISimPbWriteEntryRspCb_SDK(AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39028000u, 0);
  *(_QWORD *)v1 = &off_24C933DF0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x39028000u, 0);
  *(_QWORD *)v1 = &off_24C933DF0;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_OWORD *)v1 + 6) = 0u;
  return result;
}

double AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK::ARI_IBISimPbWriteEntryRspCb_SDK(AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933DF0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933DF0;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_OWORD *)v3 + 6) = 0u;
  return result;
}

void AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK::~ARI_IBISimPbWriteEntryRspCb_SDK(AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)this = &off_24C933DF0;
  v2 = *((_QWORD *)this + 13);
  *((_QWORD *)this + 13) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40BDFB0063);
  v3 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C40BDFB0063);
  v4 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  v7 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v7)
    MEMORY[0x212BB9B60](v7, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK::~ARI_IBISimPbWriteEntryRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK::pack(AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;
  const void *v10;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 4uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 2uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 2uLL, 0), !(_DWORD)result))
          {
            v10 = (const void *)*((_QWORD *)this + 13);
            if (!v10 || (result = AriMsg::pack(*((AriMsg **)this + 6), 7, v10, 2uLL, 0), !(_DWORD)result))
            {
              result = 0;
              *a2 = (AriMsg *)*((_QWORD *)this + 6);
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK::unpack(AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _DWORD *v6;
  _WORD *v7;
  _WORD *v8;
  _WORD *v9;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  BOOL v16;

  v16 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v16, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v16;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v15 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v15, 0);
  if ((_DWORD)v3 || !v15)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v14 = 0;
  v6 = (_DWORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 4, &v14, 0);
  if ((_DWORD)v3 || !v14)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  }
  v13 = 0;
  v7 = (_WORD *)operator new();
  *v7 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 2, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 11, v7);
    MEMORY[0x212BB9B60](v7, 0x1000C40BDFB0063);
  }
  v12 = 0;
  v8 = (_WORD *)operator new();
  *v8 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 2, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 12, v8);
    MEMORY[0x212BB9B60](v8, 0x1000C40BDFB0063);
  }
  v11 = 0;
  v9 = (_WORD *)operator new();
  *v9 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 7, v9, 2, &v11, 0);
  if (!(_DWORD)v3 && v11)
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 13, v9);
  MEMORY[0x212BB9B60](v9, 0x1000C40BDFB0063);
  return v3;
}

void sub_20E2EB94C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40BDFB0063);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbWriteEntryRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956465152;
}

double AriSdk::ARI_IBISimPbWriteRecReq_SDK::ARI_IBISimPbWriteRecReq_SDK(AriSdk::ARI_IBISimPbWriteRecReq_SDK *this)
{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x38860000u, 0);
  *(_QWORD *)v1 = &off_24C933E28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v1;
  double result;

  v1 = AriSdk::MsgBase::MsgBase(this, 0x38860000u, 0);
  *(_QWORD *)v1 = &off_24C933E28;
  result = 0.0;
  *((_OWORD *)v1 + 4) = 0u;
  *((_OWORD *)v1 + 5) = 0u;
  *((_QWORD *)v1 + 12) = 0;
  return result;
}

double AriSdk::ARI_IBISimPbWriteRecReq_SDK::ARI_IBISimPbWriteRecReq_SDK(AriSdk::ARI_IBISimPbWriteRecReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933E28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

{
  AriSdk::MsgBase *v3;
  double result;

  v3 = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)v3 = &off_24C933E28;
  result = 0.0;
  *((_OWORD *)v3 + 4) = 0u;
  *((_OWORD *)v3 + 5) = 0u;
  *((_QWORD *)v3 + 12) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbWriteRecReq_SDK::~ARI_IBISimPbWriteRecReq_SDK(AriSdk::ARI_IBISimPbWriteRecReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)this = &off_24C933E28;
  v2 = *((_QWORD *)this + 12);
  *((_QWORD *)this + 12) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4013417087);
  v3 = *((_QWORD *)this + 11);
  *((_QWORD *)this + 11) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4050308C2ALL);
  v4 = *((_QWORD *)this + 10);
  *((_QWORD *)this + 10) = 0;
  if (v4)
    MEMORY[0x212BB9B60](v4, 0x1000C40BDFB0063);
  v5 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v5)
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  v6 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v6)
    MEMORY[0x212BB9B60](v6, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbWriteRecReq_SDK::~ARI_IBISimPbWriteRecReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbWriteRecReq_SDK::pack(AriSdk::ARI_IBISimPbWriteRecReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;
  const void *v7;
  const void *v8;
  const void *v9;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      v7 = (const void *)*((_QWORD *)this + 10);
      if (!v7 || (result = AriMsg::pack(*((AriMsg **)this + 6), 4, v7, 2uLL, 0), !(_DWORD)result))
      {
        v8 = (const void *)*((_QWORD *)this + 11);
        if (!v8 || (result = AriMsg::pack(*((AriMsg **)this + 6), 5, v8, 0x16uLL, 0), !(_DWORD)result))
        {
          v9 = (const void *)*((_QWORD *)this + 12);
          if (!v9 || (result = AriMsg::pack(*((AriMsg **)this + 6), 6, v9, 0xF3uLL, 0), !(_DWORD)result))
          {
            result = 0;
            *a2 = (AriMsg *)*((_QWORD *)this + 6);
          }
        }
      }
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbWriteRecReq_SDK::unpack(AriSdk::ARI_IBISimPbWriteRecReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  _WORD *v6;
  _QWORD *v7;
  char *v8;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;

  v14 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v14, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v14;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v13 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v13, 0);
  if ((_DWORD)v3 || !v13)
  {
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
    MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  }
  v12 = 0;
  v6 = (_WORD *)operator new();
  *v6 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 4, v6, 2, &v12, 0);
  if ((_DWORD)v3 || !v12)
  {
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<unsigned short>::operator=<unsigned short &,void>((uint64_t *)this + 10, v6);
    MEMORY[0x212BB9B60](v6, 0x1000C40BDFB0063);
  }
  v11 = 0;
  v7 = (_QWORD *)operator new();
  *v7 = 0;
  v7[1] = 0;
  *(_QWORD *)((char *)v7 + 14) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 5, v7, 22, &v11, 0);
  if ((_DWORD)v3 || !v11)
  {
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<IBISimPbNum>::operator=<IBISimPbNum&,void>((uint64_t *)this + 11, (uint64_t)v7);
    MEMORY[0x212BB9B60](v7, 0x1000C4050308C2ALL);
  }
  v10 = 0;
  v8 = (char *)operator new();
  *(_OWORD *)v8 = 0u;
  *((_OWORD *)v8 + 1) = 0u;
  *((_OWORD *)v8 + 2) = 0u;
  *((_OWORD *)v8 + 3) = 0u;
  *((_OWORD *)v8 + 4) = 0u;
  *((_OWORD *)v8 + 5) = 0u;
  *((_OWORD *)v8 + 6) = 0u;
  *((_OWORD *)v8 + 7) = 0u;
  *((_OWORD *)v8 + 8) = 0u;
  *((_OWORD *)v8 + 9) = 0u;
  *((_OWORD *)v8 + 10) = 0u;
  *((_OWORD *)v8 + 11) = 0u;
  *((_OWORD *)v8 + 12) = 0u;
  *((_OWORD *)v8 + 13) = 0u;
  *((_OWORD *)v8 + 14) = 0u;
  *(_DWORD *)(v8 + 239) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 6, v8, 243, &v10, 0);
  if (!(_DWORD)v3 && v10)
    AriSdk::Tlv<IBISimPbAlpha>::operator=<IBISimPbAlpha&,void>((uint64_t *)this + 12, (uint64_t)v8);
  MEMORY[0x212BB9B60](v8, 0x1000C4013417087);
  return v3;
}

void sub_20E2EBF94(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4013417087);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbWriteRecReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbWriteRecReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 948305920;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbWriteRecRspCb_SDK::ARI_IBISimPbWriteRecRspCb_SDK(AriSdk::ARI_IBISimPbWriteRecRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39060000u, 0);
  *(_QWORD *)result = &off_24C933E60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x39060000u, 0);
  *(_QWORD *)result = &off_24C933E60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBISimPbWriteRecRspCb_SDK::ARI_IBISimPbWriteRecRspCb_SDK(AriSdk::ARI_IBISimPbWriteRecRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933E60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C933E60;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBISimPbWriteRecRspCb_SDK::~ARI_IBISimPbWriteRecRspCb_SDK(AriSdk::ARI_IBISimPbWriteRecRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C933E60;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBISimPbWriteRecRspCb_SDK::~ARI_IBISimPbWriteRecRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBISimPbWriteRecRspCb_SDK::pack(AriSdk::ARI_IBISimPbWriteRecRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 3, v6, 4uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBISimPbWriteRecRspCb_SDK::unpack(AriSdk::ARI_IBISimPbWriteRecRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  BOOL v7;
  BOOL v8;

  v8 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v8, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v8;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v7 = 0;
  v5 = (_DWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 3, v5, 4, &v7, 0);
  if (!(_DWORD)v3 && v7)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 9, v5);
  MEMORY[0x212BB9B60](v5, 0x1000C4052888210);
  return v3;
}

void sub_20E2EC32C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBISimPbWriteRecRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBISimPbWriteRecRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 956694528;
}

void AriDispatch::Semaphore::Create(uint64_t a1@<X0>, intptr_t a2@<X1>, _QWORD *a3@<X8>)
{
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  std::__shared_weak_count *shared_owners;
  unint64_t v9;
  unint64_t *p_shared_weak_owners;
  unint64_t v11;
  unint64_t v12;
  unint64_t *v13;
  unint64_t v14;
  unint64_t v15;
  std::string __p;
  std::string v17;

  v6 = (std::__shared_weak_count *)operator new(0x48uLL);
  v6->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v6->__shared_owners_;
  v6->__shared_weak_owners_ = 0;
  v6->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9341F0;
  if (*(char *)(a1 + 23) < 0)
    std::string::__init_copy_ctor_external(&__p, *(const std::string::value_type **)a1, *(_QWORD *)(a1 + 8));
  else
    __p = *(std::string *)a1;
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    std::string::__init_copy_ctor_external(&v17, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
  else
    v17 = __p;
  AriDispatch::Semaphore::Semaphore((uint64_t)&v6[1], (__int128 *)&v17, a2);
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0)
    operator delete(v17.__r_.__value_.__l.__data_);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
    operator delete(__p.__r_.__value_.__l.__data_);
  shared_owners = (std::__shared_weak_count *)v6[1].__shared_owners_;
  if (shared_owners)
  {
    if (shared_owners->__shared_owners_ != -1)
      goto LABEL_24;
    do
      v9 = __ldxr(p_shared_owners);
    while (__stxr(v9 + 1, p_shared_owners));
    p_shared_weak_owners = (unint64_t *)&v6->__shared_weak_owners_;
    do
      v11 = __ldxr(p_shared_weak_owners);
    while (__stxr(v11 + 1, p_shared_weak_owners));
    v6[1].__vftable = (std::__shared_weak_count_vtbl *)&v6[1];
    v6[1].__shared_owners_ = (uint64_t)v6;
    std::__shared_weak_count::__release_weak(shared_owners);
  }
  else
  {
    do
      v12 = __ldxr(p_shared_owners);
    while (__stxr(v12 + 1, p_shared_owners));
    v13 = (unint64_t *)&v6->__shared_weak_owners_;
    do
      v14 = __ldxr(v13);
    while (__stxr(v14 + 1, v13));
    v6[1].__vftable = (std::__shared_weak_count_vtbl *)&v6[1];
    v6[1].__shared_owners_ = (uint64_t)v6;
  }
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
    std::__shared_weak_count::__release_weak(v6);
  }
LABEL_24:
  *a3 = v6 + 1;
  a3[1] = v6;
}

void sub_20E2EC500(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21)
{
  std::__shared_weak_count *v21;
  void *v23;

  if (a14 < 0)
    operator delete(__p);
  std::__shared_weak_count::~__shared_weak_count(v21);
  operator delete(v23);
  _Unwind_Resume(a1);
}

uint64_t AriDispatch::Semaphore::Semaphore(uint64_t a1, __int128 *a2, intptr_t value)
{
  _OWORD *v5;
  __int128 v6;
  const char *v7;
  void **v8;
  _OWORD *v9;
  void *__p[2];
  char v12;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  v5 = (_OWORD *)(a1 + 16);
  if (*((char *)a2 + 23) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)(a1 + 16), *(const std::string::value_type **)a2, *((_QWORD *)a2 + 1));
  }
  else
  {
    v6 = *a2;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 2);
    *v5 = v6;
  }
  *(_QWORD *)(a1 + 40) = dispatch_semaphore_create(value);
  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_dispatch.cpp", "Semaphore", (uint64_t)__p);
  if (v12 >= 0)
    v8 = __p;
  else
    v8 = (void **)__p[0];
  v9 = v5;
  if (*(char *)(a1 + 39) < 0)
    v9 = *(_OWORD **)v5;
  Ari::Log((Ari *)4, "(%s:%d) allocated %p for owner %s", v7, v8, 33, *(_QWORD *)(a1 + 40), v9);
  if (v12 < 0)
    operator delete(__p[0]);
  return a1;
}

void sub_20E2EC628(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, int a16, __int16 a17, char a18, char a19)
{
  uint64_t v19;
  std::__shared_weak_count *v21;

  v21 = *(std::__shared_weak_count **)(v19 + 8);
  if (v21)
    std::__shared_weak_count::__release_weak(v21);
  _Unwind_Resume(exception_object);
}

void AriDispatch::Semaphore::~Semaphore(AriDispatch::Semaphore *this)
{
  const char *v2;
  void **v3;
  void **v4;
  char *v5;
  std::__shared_weak_count *v6;
  void *__p[2];
  char v8;

  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_dispatch.cpp", "~Semaphore", (uint64_t)__p);
  if (v8 >= 0)
    v3 = __p;
  else
    v3 = (void **)__p[0];
  v4 = (void **)((char *)this + 16);
  v5 = (char *)this + 16;
  if (*((char *)this + 39) < 0)
    v5 = (char *)*v4;
  Ari::Log((Ari *)4, "(%s:%d) releasing %p for owner %s", v2, v3, 38, *((_QWORD *)this + 5), v5);
  if (v8 < 0)
    operator delete(__p[0]);
  dispatch_release(*((dispatch_object_t *)this + 5));
  if (*((char *)this + 39) < 0)
    operator delete(*v4);
  v6 = (std::__shared_weak_count *)*((_QWORD *)this + 1);
  if (v6)
    std::__shared_weak_count::__release_weak(v6);
}

BOOL AriDispatch::Semaphore::wait(dispatch_semaphore_t *this, dispatch_time_t a2)
{
  return dispatch_semaphore_wait(this[5], a2) == 0;
}

intptr_t AriDispatch::Semaphore::signal(dispatch_semaphore_t *this)
{
  return dispatch_semaphore_signal(this[5]);
}

void AriDispatch::Timer::Create(NSObject *this@<X0>, _QWORD *a2@<X8>)
{
  std::__shared_weak_count *v5;
  unint64_t *p_shared_owners;
  unint64_t v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  unint64_t v10;

  v5 = (std::__shared_weak_count *)operator new(0x40uLL);
  v5->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v5->__shared_owners_;
  v5->__shared_weak_owners_ = 0;
  v5->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934240;
  v5[1].__shared_weak_owners_ = (uint64_t)this;
  v5[2].__vftable = (std::__shared_weak_count_vtbl *)dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, this);
  LOBYTE(v5[2].__shared_owners_) = 0;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  p_shared_weak_owners = (unint64_t *)&v5->__shared_weak_owners_;
  do
    v9 = __ldxr(p_shared_weak_owners);
  while (__stxr(v9 + 1, p_shared_weak_owners));
  v5[1].__vftable = (std::__shared_weak_count_vtbl *)&v5[1];
  v5[1].__shared_owners_ = (uint64_t)v5;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v5->__on_zero_shared)(v5);
    std::__shared_weak_count::__release_weak(v5);
  }
  *a2 = v5 + 1;
  a2[1] = v5;
}

AriDispatch::Timer *AriDispatch::Timer::Timer(AriDispatch::Timer *this, dispatch_queue_t queue)
{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = queue;
  *((_QWORD *)this + 3) = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, queue);
  *((_BYTE *)this + 32) = 0;
  return this;
}

{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = queue;
  *((_QWORD *)this + 3) = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, queue);
  *((_BYTE *)this + 32) = 0;
  return this;
}

void AriDispatch::Timer::safeReleaseTimer(AriDispatch::Timer *this)
{
  NSObject *v2;

  v2 = *((_QWORD *)this + 3);
  if (v2)
  {
    if (!*((_BYTE *)this + 32))
    {
      dispatch_source_cancel(v2);
      dispatch_activate(*((dispatch_object_t *)this + 3));
      v2 = *((_QWORD *)this + 3);
    }
    dispatch_release(v2);
    *((_QWORD *)this + 3) = 0;
  }
}

NSObject *AriDispatch::Timer::resetTimer(AriDispatch::Timer *this)
{
  NSObject *result;

  result = *((_QWORD *)this + 3);
  if (result)
  {
    result = dispatch_source_testcancel(result);
    if (result)
    {
      AriDispatch::Timer::safeReleaseTimer(this);
      result = dispatch_source_create(MEMORY[0x24BDACA18], 0, 0, *((dispatch_queue_t *)this + 2));
      *((_QWORD *)this + 3) = result;
      *((_BYTE *)this + 32) = 0;
    }
  }
  return result;
}

void AriDispatch::Timer::~Timer(std::__shared_weak_count **this)
{
  std::__shared_weak_count *v2;

  AriDispatch::Timer::cancel((AriDispatch::Timer *)this);
  AriDispatch::Timer::safeReleaseTimer((AriDispatch::Timer *)this);
  v2 = this[1];
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void AriDispatch::Timer::cancel(AriDispatch::Timer *this)
{
  NSObject *v1;

  v1 = *((_QWORD *)this + 3);
  if (v1)
  {
    if (!dispatch_source_testcancel(*((dispatch_source_t *)this + 3)))
      dispatch_source_cancel(v1);
  }
}

void AriDispatch::Timer::set(uint64_t a1, dispatch_time_t a2, void *a3)
{
  AriDispatch::Timer::setPeriodic(a1, a2, 0xFFFFFFFFFFFFFFFFLL, a3);
}

void AriDispatch::Timer::setPeriodic(uint64_t a1, dispatch_time_t a2, uint64_t a3, void *a4)
{
  if (*(_QWORD *)(a1 + 24))
  {
    AriDispatch::Timer::resetTimer((AriDispatch::Timer *)a1);
    dispatch_source_set_timer(*(dispatch_source_t *)(a1 + 24), a2, a3, 0xBEBC200uLL);
    dispatch_source_set_event_handler(*(dispatch_source_t *)(a1 + 24), a4);
    dispatch_activate(*(dispatch_object_t *)(a1 + 24));
    *(_BYTE *)(a1 + 32) = 1;
  }
}

_QWORD *AriDispatch::Once::Once(_QWORD *this)
{
  *this = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

{
  *this = 0;
  this[1] = 0;
  this[2] = 0;
  return this;
}

void AriDispatch::Once::~Once(AriDispatch::Once *this)
{
  std::__shared_weak_count *v1;

  v1 = (std::__shared_weak_count *)*((_QWORD *)this + 1);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

{
  std::__shared_weak_count *v1;

  v1 = (std::__shared_weak_count *)*((_QWORD *)this + 1);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void AriDispatch::Once::Create(_QWORD *a1@<X8>)
{
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  unint64_t *p_shared_owners;
  _QWORD *v6;
  unint64_t v7;
  unint64_t *p_shared_weak_owners;
  unint64_t v9;
  unint64_t v10;

  v3 = (std::__shared_weak_count *)operator new(0x30uLL);
  v4 = v3;
  v3->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  v3->__shared_weak_owners_ = 0;
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934290;
  v6 = &v3[1].__vftable;
  v3[1].__shared_weak_owners_ = 0;
  do
    v7 = __ldxr(p_shared_owners);
  while (__stxr(v7 + 1, p_shared_owners));
  p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
  do
    v9 = __ldxr(p_shared_weak_owners);
  while (__stxr(v9 + 1, p_shared_weak_owners));
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)&v3[1];
  v3[1].__shared_owners_ = (uint64_t)v3;
  do
    v10 = __ldaxr(p_shared_owners);
  while (__stlxr(v10 - 1, p_shared_owners));
  if (!v10)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v4);
  }
  *a1 = v6;
  a1[1] = v4;
}

void AriDispatch::Once::runOnce(uint64_t a1, void *a2)
{
  dispatch_once_t *v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 16);
  v2 = (dispatch_once_t *)(a1 + 16);
  if (v3 != -1)
    dispatch_once(v2, a2);
}

AriDispatch::Group *AriDispatch::Group::Group(AriDispatch::Group *this)
{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = dispatch_group_create();
  return this;
}

{
  *(_QWORD *)this = 0;
  *((_QWORD *)this + 1) = 0;
  *((_QWORD *)this + 2) = dispatch_group_create();
  return this;
}

void AriDispatch::Group::Create(_QWORD *a1@<X8>)
{
  std::__shared_weak_count *v3;
  unint64_t *p_shared_owners;
  unint64_t v5;
  unint64_t *p_shared_weak_owners;
  unint64_t v7;
  unint64_t v8;

  v3 = (std::__shared_weak_count *)operator new(0x30uLL);
  v3->__shared_owners_ = 0;
  p_shared_owners = (unint64_t *)&v3->__shared_owners_;
  v3->__shared_weak_owners_ = 0;
  v3->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9342E0;
  v3[1].__shared_weak_owners_ = (uint64_t)dispatch_group_create();
  do
    v5 = __ldxr(p_shared_owners);
  while (__stxr(v5 + 1, p_shared_owners));
  p_shared_weak_owners = (unint64_t *)&v3->__shared_weak_owners_;
  do
    v7 = __ldxr(p_shared_weak_owners);
  while (__stxr(v7 + 1, p_shared_weak_owners));
  v3[1].__vftable = (std::__shared_weak_count_vtbl *)&v3[1];
  v3[1].__shared_owners_ = (uint64_t)v3;
  do
    v8 = __ldaxr(p_shared_owners);
  while (__stlxr(v8 - 1, p_shared_owners));
  if (!v8)
  {
    ((void (*)(std::__shared_weak_count *))v3->__on_zero_shared)(v3);
    std::__shared_weak_count::__release_weak(v3);
  }
  *a1 = v3 + 1;
  a1[1] = v3;
}

void AriDispatch::Group::~Group(AriDispatch::Group *this)
{
  NSObject *v2;
  std::__shared_weak_count *v3;

  v2 = *((_QWORD *)this + 2);
  if (v2)
  {
    dispatch_release(v2);
    *((_QWORD *)this + 2) = 0;
  }
  v3 = (std::__shared_weak_count *)*((_QWORD *)this + 1);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

void AriDispatch::Group::enter(dispatch_group_t *this)
{
  dispatch_group_enter(this[2]);
}

void AriDispatch::Group::leave(dispatch_group_t *this)
{
  dispatch_group_leave(this[2]);
}

uint64_t AriDispatch::Group::get(AriDispatch::Group *this)
{
  return *((_QWORD *)this + 2);
}

void AriDispatch::Group::async(uint64_t a1, NSObject *a2, void *a3)
{
  dispatch_group_async(*(dispatch_group_t *)(a1 + 16), a2, a3);
}

BOOL AriDispatch::Group::wait(AriDispatch::Group *this, unsigned int a2)
{
  NSObject *v2;
  dispatch_time_t v3;

  v2 = *((_QWORD *)this + 2);
  v3 = dispatch_time(0, 1000000 * a2);
  return dispatch_group_wait(v2, v3) == 0;
}

void AriDispatch::Group::notify(uint64_t *a1, NSObject *a2, uint64_t a3)
{
  _QWORD v3[5];

  v3[0] = MEMORY[0x24BDAC760];
  v3[1] = 0x40000000;
  v3[2] = ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_sU13block_pointerFvvE_block_invoke;
  v3[3] = &unk_24C9340A0;
  v3[4] = a3;
  AriDispatch::Group::notify(a1, a2, 0xFFFFFFFFFFFFFFFFLL, (uint64_t)v3);
}

void AriDispatch::Group::notify(uint64_t *a1, NSObject *this, dispatch_time_t a3, uint64_t a4)
{
  std::__shared_weak_count *v8;
  uint64_t v9;
  std::__shared_weak_count *v10;
  std::__shared_weak_count *v11;
  unint64_t *p_shared_weak_owners;
  unint64_t v13;
  unint64_t *p_shared_owners;
  unint64_t v15;
  dispatch_time_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t *v22;
  unint64_t v23;
  NSObject *v24;
  unint64_t v25;
  unint64_t *v26;
  unint64_t v27;
  unint64_t *v28;
  unint64_t v29;
  std::__shared_weak_count *v30;
  unint64_t *v31;
  unint64_t v32;
  std::__shared_weak_count *v33;
  unint64_t *v34;
  unint64_t v35;
  std::__shared_weak_count *v36;
  unint64_t *v37;
  unint64_t v38;
  std::__shared_weak_count *v39;
  unint64_t *v40;
  unint64_t v41;
  std::__shared_weak_count *v42;
  unint64_t *v43;
  unint64_t v44;
  _QWORD block[6];
  std::__shared_weak_count *v46;
  unint64_t v47;
  std::__shared_weak_count *v48;
  uint64_t v49;
  std::__shared_weak_count *v50;
  NSObject *v51;
  _QWORD v52[6];
  std::__shared_weak_count *v53;
  unint64_t v54;
  std::__shared_weak_count *v55;
  NSObject *v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;

  v59 = 0xAAAAAAAAAAAAAAAALL;
  v60 = 0xAAAAAAAAAAAAAAAALL;
  AriDispatch::Timer::Create(this, &v59);
  v57 = 0xAAAAAAAAAAAAAAAALL;
  v58 = 0xAAAAAAAAAAAAAAAALL;
  AriDispatch::Once::Create(&v57);
  v8 = (std::__shared_weak_count *)a1[1];
  if (!v8 || (v9 = *a1, (v10 = std::__shared_weak_count::lock(v8)) == 0))
    std::__throw_bad_weak_ptr[abi:ne180100]();
  v11 = v10;
  p_shared_weak_owners = (unint64_t *)&v10->__shared_weak_owners_;
  do
    v13 = __ldxr(p_shared_weak_owners);
  while (__stxr(v13 + 1, p_shared_weak_owners));
  p_shared_owners = (unint64_t *)&v10->__shared_owners_;
  do
    v15 = __ldaxr(p_shared_owners);
  while (__stlxr(v15 - 1, p_shared_owners));
  if (!v15)
  {
    ((void (*)(std::__shared_weak_count *))v10->__on_zero_shared)(v10);
    std::__shared_weak_count::__release_weak(v11);
  }
  v16 = a3;
  v17 = v59;
  v18 = MEMORY[0x24BDAC760];
  v52[0] = MEMORY[0x24BDAC760];
  v52[1] = 1174405120;
  v52[2] = ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke;
  v52[3] = &unk_24C934118;
  v52[5] = v9;
  v53 = v11;
  do
    v19 = __ldxr(p_shared_weak_owners);
  while (__stxr(v19 + 1, p_shared_weak_owners));
  v20 = v57;
  v21 = v58;
  v54 = v57;
  v55 = (std::__shared_weak_count *)v58;
  if (v58)
  {
    v22 = (unint64_t *)(v58 + 8);
    do
      v23 = __ldxr(v22);
    while (__stxr(v23 + 1, v22));
  }
  v56 = this;
  v52[4] = a4;
  AriDispatch::Timer::setPeriodic(v17, v16, 0xFFFFFFFFFFFFFFFFLL, v52);
  v24 = a1[2];
  block[0] = v18;
  block[1] = 1174405120;
  block[2] = ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_9;
  block[3] = &unk_24C9341B0;
  block[5] = v9;
  v46 = v11;
  do
    v25 = __ldxr(p_shared_weak_owners);
  while (__stxr(v25 + 1, p_shared_weak_owners));
  v47 = v20;
  v48 = (std::__shared_weak_count *)v21;
  if (v21)
  {
    v26 = (unint64_t *)(v21 + 8);
    do
      v27 = __ldxr(v26);
    while (__stxr(v27 + 1, v26));
  }
  v49 = v17;
  v50 = (std::__shared_weak_count *)v60;
  if (v60)
  {
    v28 = (unint64_t *)(v60 + 8);
    do
      v29 = __ldxr(v28);
    while (__stxr(v29 + 1, v28));
  }
  v51 = this;
  block[4] = a4;
  dispatch_group_notify(v24, this, block);
  v30 = v50;
  if (v50)
  {
    v31 = (unint64_t *)&v50->__shared_owners_;
    do
      v32 = __ldaxr(v31);
    while (__stlxr(v32 - 1, v31));
    if (!v32)
    {
      ((void (*)(std::__shared_weak_count *))v30->__on_zero_shared)(v30);
      std::__shared_weak_count::__release_weak(v30);
    }
  }
  v33 = v48;
  if (v48)
  {
    v34 = (unint64_t *)&v48->__shared_owners_;
    do
      v35 = __ldaxr(v34);
    while (__stlxr(v35 - 1, v34));
    if (!v35)
    {
      ((void (*)(std::__shared_weak_count *))v33->__on_zero_shared)(v33);
      std::__shared_weak_count::__release_weak(v33);
    }
  }
  if (v46)
    std::__shared_weak_count::__release_weak(v46);
  v36 = v55;
  if (v55)
  {
    v37 = (unint64_t *)&v55->__shared_owners_;
    do
      v38 = __ldaxr(v37);
    while (__stlxr(v38 - 1, v37));
    if (!v38)
    {
      ((void (*)(std::__shared_weak_count *))v36->__on_zero_shared)(v36);
      std::__shared_weak_count::__release_weak(v36);
    }
  }
  if (v53)
    std::__shared_weak_count::__release_weak(v53);
  std::__shared_weak_count::__release_weak(v11);
  v39 = (std::__shared_weak_count *)v58;
  if (v58)
  {
    v40 = (unint64_t *)(v58 + 8);
    do
      v41 = __ldaxr(v40);
    while (__stlxr(v41 - 1, v40));
    if (!v41)
    {
      ((void (*)(std::__shared_weak_count *))v39->__on_zero_shared)(v39);
      std::__shared_weak_count::__release_weak(v39);
    }
  }
  v42 = (std::__shared_weak_count *)v60;
  if (v60)
  {
    v43 = (unint64_t *)(v60 + 8);
    do
      v44 = __ldaxr(v43);
    while (__stlxr(v44 - 1, v43));
    if (!v44)
    {
      ((void (*)(std::__shared_weak_count *))v42->__on_zero_shared)(v42);
      std::__shared_weak_count::__release_weak(v42);
    }
  }
}

void sub_20E2ED09C(_Unwind_Exception *a1)
{
  uint64_t v1;

  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v1 - 120);
  _Unwind_Resume(a1);
}

uint64_t ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_sU13block_pointerFvvE_block_invoke(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

void AriDispatch::Group::notify(uint64_t *a1, NSObject *a2, unsigned int a3, uint64_t a4)
{
  dispatch_time_t v7;

  v7 = dispatch_time(0, 1000000 * a3);
  AriDispatch::Group::notify(a1, a2, v7, a4);
}

void ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  uint64_t v6;
  dispatch_once_t *v7;
  uint64_t v8;
  unint64_t *p_shared_owners;
  unint64_t v10;
  _QWORD v11[6];

  v2 = (std::__shared_weak_count *)a1[6];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[5])
      {
        v5 = a1[7];
        v11[0] = MEMORY[0x24BDAC760];
        v11[1] = 0x40000000;
        v11[2] = ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_2;
        v11[3] = &unk_24C9340F0;
        v6 = a1[9];
        v11[4] = a1[4];
        v11[5] = v6;
        v8 = *(_QWORD *)(v5 + 16);
        v7 = (dispatch_once_t *)(v5 + 16);
        if (v8 != -1)
          dispatch_once(v7, v11);
      }
      p_shared_owners = (unint64_t *)&v4->__shared_owners_;
      do
        v10 = __ldaxr(p_shared_owners);
      while (__stlxr(v10 - 1, p_shared_owners));
      if (!v10)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_2(uint64_t a1)
{
  const char *v2;
  void **v3;
  NSObject *v4;
  _QWORD block[5];
  void *v6[2];
  char v7;

  AriOsa::LogSrcInfo((AriOsa *)"/Library/Caches/com.apple.xbs/Sources/AppleRemoteInvocation/ari_host/src/ari_host_dispatch.cpp", "notify_block_invoke_2", (uint64_t)v6);
  if (v7 >= 0)
    v3 = v6;
  else
    v3 = (void **)v6[0];
  Ari::Log((Ari *)4, "(%s:%d) Timeout waiting on dispatch group!", v2, v3, 234);
  if (v7 < 0)
    operator delete(v6[0]);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_3;
  block[3] = &unk_24C9340C8;
  v4 = *(NSObject **)(a1 + 40);
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async(v4, block);
}

void sub_20E2ED2A0(_Unwind_Exception *exception_object)
{
  uint64_t v1;

  if (*(char *)(v1 - 17) < 0)
    operator delete(*(void **)(v1 - 40));
  _Unwind_Resume(exception_object);
}

uint64_t ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_3(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

_QWORD *__copy_helper_block_e8_40c44_ZTSNSt3__18weak_ptrIN11AriDispatch5GroupEEE56c46_ZTSNSt3__110shared_ptrIN11AriDispatch4OnceEEE(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;

  v2 = a2[6];
  result[5] = a2[5];
  result[6] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 16);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  v5 = a2[8];
  result[7] = a2[7];
  result[8] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  return result;
}

void __destroy_helper_block_e8_40c44_ZTSNSt3__18weak_ptrIN11AriDispatch5GroupEEE56c46_ZTSNSt3__110shared_ptrIN11AriDispatch4OnceEEE(uint64_t a1)
{
  std::__shared_weak_count *v2;

  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](a1 + 56);
  v2 = *(std::__shared_weak_count **)(a1 + 48);
  if (v2)
    std::__shared_weak_count::__release_weak(v2);
}

void ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_9(_QWORD *a1)
{
  std::__shared_weak_count *v2;
  std::__shared_weak_count *v3;
  std::__shared_weak_count *v4;
  uint64_t v5;
  std::__shared_weak_count *v6;
  unint64_t *p_shared_owners;
  unint64_t v8;
  uint64_t v9;
  dispatch_once_t *v10;
  uint64_t v11;
  unint64_t *v12;
  unint64_t v13;
  unint64_t *v14;
  unint64_t v15;
  _QWORD v16[6];
  std::__shared_weak_count *v17;
  uint64_t v18;

  v2 = (std::__shared_weak_count *)a1[6];
  if (v2)
  {
    v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      v4 = v3;
      if (a1[5])
      {
        v5 = a1[7];
        v16[0] = MEMORY[0x24BDAC760];
        v16[1] = 1174405120;
        v16[2] = ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_2_10;
        v16[3] = &unk_24C934178;
        v6 = (std::__shared_weak_count *)a1[10];
        v16[5] = a1[9];
        v17 = v6;
        if (v6)
        {
          p_shared_owners = (unint64_t *)&v6->__shared_owners_;
          do
            v8 = __ldxr(p_shared_owners);
          while (__stxr(v8 + 1, p_shared_owners));
        }
        v9 = a1[4];
        v18 = a1[11];
        v16[4] = v9;
        v11 = *(_QWORD *)(v5 + 16);
        v10 = (dispatch_once_t *)(v5 + 16);
        if (v11 == -1)
        {
          if (v6)
          {
LABEL_9:
            v12 = (unint64_t *)&v6->__shared_owners_;
            do
              v13 = __ldaxr(v12);
            while (__stlxr(v13 - 1, v12));
            if (!v13)
            {
              ((void (*)(std::__shared_weak_count *))v6->__on_zero_shared)(v6);
              std::__shared_weak_count::__release_weak(v6);
            }
          }
        }
        else
        {
          dispatch_once(v10, v16);
          v6 = v17;
          if (v17)
            goto LABEL_9;
        }
      }
      v14 = (unint64_t *)&v4->__shared_owners_;
      do
        v15 = __ldaxr(v14);
      while (__stlxr(v15 - 1, v14));
      if (!v15)
      {
        ((void (*)(std::__shared_weak_count *))v4->__on_zero_shared)(v4);
        std::__shared_weak_count::__release_weak(v4);
      }
    }
  }
}

void ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_2_10(uint64_t a1)
{
  NSObject *v2;
  _QWORD block[5];

  AriDispatch::Timer::cancel(*(AriDispatch::Timer **)(a1 + 40));
  v2 = *(NSObject **)(a1 + 56);
  block[0] = MEMORY[0x24BDAC760];
  block[1] = 0x40000000;
  block[2] = ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_3_11;
  block[3] = &unk_24C934150;
  block[4] = *(_QWORD *)(a1 + 32);
  dispatch_async(v2, block);
}

uint64_t ___ZN11AriDispatch5Group6notifyEP16dispatch_queue_syU13block_pointerFvbE_block_invoke_3_11(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a1 + 32) + 16))();
}

uint64_t __copy_helper_block_e8_40c47_ZTSNSt3__110shared_ptrIN11AriDispatch5TimerEEE(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;

  v2 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(result + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(result + 48) = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 8);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  return result;
}

uint64_t __destroy_helper_block_e8_40c47_ZTSNSt3__110shared_ptrIN11AriDispatch5TimerEEE(uint64_t a1)
{
  return std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](a1 + 40);
}

_QWORD *__copy_helper_block_e8_40c44_ZTSNSt3__18weak_ptrIN11AriDispatch5GroupEEE56c46_ZTSNSt3__110shared_ptrIN11AriDispatch4OnceEEE72c47_ZTSNSt3__110shared_ptrIN11AriDispatch5TimerEEE(_QWORD *result, _QWORD *a2)
{
  uint64_t v2;
  unint64_t *v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t *v9;
  unint64_t v10;

  v2 = a2[6];
  result[5] = a2[5];
  result[6] = v2;
  if (v2)
  {
    v3 = (unint64_t *)(v2 + 16);
    do
      v4 = __ldxr(v3);
    while (__stxr(v4 + 1, v3));
  }
  v5 = a2[8];
  result[7] = a2[7];
  result[8] = v5;
  if (v5)
  {
    v6 = (unint64_t *)(v5 + 8);
    do
      v7 = __ldxr(v6);
    while (__stxr(v7 + 1, v6));
  }
  v8 = a2[10];
  result[9] = a2[9];
  result[10] = v8;
  if (v8)
  {
    v9 = (unint64_t *)(v8 + 8);
    do
      v10 = __ldxr(v9);
    while (__stxr(v10 + 1, v9));
  }
  return result;
}

void __destroy_helper_block_e8_40c44_ZTSNSt3__18weak_ptrIN11AriDispatch5GroupEEE56c46_ZTSNSt3__110shared_ptrIN11AriDispatch4OnceEEE72c47_ZTSNSt3__110shared_ptrIN11AriDispatch5TimerEEE(uint64_t a1)
{
  uint64_t v2;
  std::__shared_weak_count *v3;

  v2 = a1 + 56;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](a1 + 72);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100](v2);
  v3 = *(std::__shared_weak_count **)(a1 + 48);
  if (v3)
    std::__shared_weak_count::__release_weak(v3);
}

AriDispatch::Queue *AriDispatch::Queue::Queue(AriDispatch::Queue *this, dispatch_object_t object)
{
  *(_QWORD *)this = object;
  if (object)
    dispatch_retain(object);
  return this;
}

{
  *(_QWORD *)this = object;
  if (object)
    dispatch_retain(object);
  return this;
}

void AriDispatch::Queue::Create(NSObject *this@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v5;

  v5 = operator new(0x20uLL);
  v5[1] = 0;
  v5[2] = 0;
  *v5 = &off_24C934330;
  v5[3] = this;
  if (this)
    dispatch_retain(this);
  *a2 = v5 + 3;
  a2[1] = v5;
}

void AriDispatch::Queue::~Queue(NSObject **this)
{
  NSObject *v1;

  v1 = *this;
  if (v1)
    dispatch_release(v1);
}

{
  NSObject *v1;

  v1 = *this;
  if (v1)
    dispatch_release(v1);
}

uint64_t AriDispatch::Queue::get(AriDispatch::Queue *this)
{
  return *(_QWORD *)this;
}

void std::__shared_ptr_emplace<AriDispatch::Semaphore::Create(std::string,long)::SemaphoreNoPrivate,std::allocator<AriDispatch::Semaphore::Create(std::string,long)::SemaphoreNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9341F0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AriDispatch::Semaphore::Create(std::string,long)::SemaphoreNoPrivate,std::allocator<AriDispatch::Semaphore::Create(std::string,long)::SemaphoreNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9341F0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

void std::__shared_ptr_emplace<AriDispatch::Semaphore::Create(std::string,long)::SemaphoreNoPrivate,std::allocator<AriDispatch::Semaphore::Create(std::string,long)::SemaphoreNoPrivate>>::__on_zero_shared(uint64_t a1)
{
  AriDispatch::Semaphore::~Semaphore((AriDispatch::Semaphore *)(a1 + 24));
}

void std::__shared_ptr_emplace<AriDispatch::Timer::Create(dispatch_queue_s *)::TimerNoPrivate,std::allocator<AriDispatch::Timer::Create(dispatch_queue_s *)::TimerNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934240;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AriDispatch::Timer::Create(dispatch_queue_s *)::TimerNoPrivate,std::allocator<AriDispatch::Timer::Create(dispatch_queue_s *)::TimerNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934240;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

void std::__shared_ptr_emplace<AriDispatch::Timer::Create(dispatch_queue_s *)::TimerNoPrivate,std::allocator<AriDispatch::Timer::Create(dispatch_queue_s *)::TimerNoPrivate>>::__on_zero_shared(uint64_t a1)
{
  AriDispatch::Timer::~Timer((std::__shared_weak_count **)(a1 + 24));
}

void std::__shared_ptr_emplace<AriDispatch::Once::Create(void)::OnceNoPrivate,std::allocator<AriDispatch::Once::Create(void)::OnceNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934290;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AriDispatch::Once::Create(void)::OnceNoPrivate,std::allocator<AriDispatch::Once::Create(void)::OnceNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934290;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

void std::__shared_ptr_emplace<AriDispatch::Once::Create(void)::OnceNoPrivate,std::allocator<AriDispatch::Once::Create(void)::OnceNoPrivate>>::__on_zero_shared(uint64_t a1)
{
  std::__shared_weak_count *v1;

  v1 = *(std::__shared_weak_count **)(a1 + 32);
  if (v1)
    std::__shared_weak_count::__release_weak(v1);
}

void std::__shared_ptr_emplace<AriDispatch::Group::Create(void)::GroupNoPrivate,std::allocator<AriDispatch::Group::Create(void)::GroupNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9342E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AriDispatch::Group::Create(void)::GroupNoPrivate,std::allocator<AriDispatch::Group::Create(void)::GroupNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C9342E0;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

void std::__shared_ptr_emplace<AriDispatch::Group::Create(void)::GroupNoPrivate,std::allocator<AriDispatch::Group::Create(void)::GroupNoPrivate>>::__on_zero_shared(uint64_t a1)
{
  AriDispatch::Group::~Group((AriDispatch::Group *)(a1 + 24));
}

void std::__shared_ptr_emplace<AriDispatch::Queue::Create(dispatch_queue_s *)::QueueNoPrivate,std::allocator<AriDispatch::Queue::Create(dispatch_queue_s *)::QueueNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934330;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<AriDispatch::Queue::Create(dispatch_queue_s *)::QueueNoPrivate,std::allocator<AriDispatch::Queue::Create(dispatch_queue_s *)::QueueNoPrivate>>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&off_24C934330;
  std::__shared_weak_count::~__shared_weak_count(a1);
  JUMPOUT(0x212BB9B60);
}

void std::__shared_ptr_emplace<AriDispatch::Queue::Create(dispatch_queue_s *)::QueueNoPrivate,std::allocator<AriDispatch::Queue::Create(dispatch_queue_s *)::QueueNoPrivate>>::__on_zero_shared(uint64_t a1)
{
  NSObject *v1;

  v1 = *(NSObject **)(a1 + 24);
  if (v1)
    dispatch_release(v1);
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55800000u, 0);
  *(_QWORD *)result = &off_24C934580;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55800000u, 0);
  *(_QWORD *)result = &off_24C934580;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934580;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934580;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK::~ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C934580;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C408252E8FDLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK::~ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK::pack(AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x148uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK::unpack(AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _OWORD *v5;
  void *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_OWORD *)operator new();
  *v5 = 0u;
  v5[1] = 0u;
  v5[2] = 0u;
  v5[3] = 0u;
  v5[4] = 0u;
  v5[5] = 0u;
  v5[6] = 0u;
  v5[7] = 0u;
  v5[8] = 0u;
  v5[9] = 0u;
  v5[10] = 0u;
  v5[11] = 0u;
  v5[12] = 0u;
  v5[13] = 0u;
  v5[14] = 0u;
  v5[15] = 0u;
  v5[16] = 0u;
  v5[17] = 0u;
  v5[18] = 0u;
  v5[19] = 0u;
  *((_QWORD *)v5 + 40) = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 328, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (void *)operator new();
    memcpy(v6, v5, 0x148uLL);
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C408252E8FDLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C408252E8FDLL);
  return v3;
}

void sub_20E2EDBE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C408252E8FDLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsSsLcsMtlrNotificationIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1434451968;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x54800000u, 0);
  *(_QWORD *)result = &off_24C9345B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x54800000u, 0);
  *(_QWORD *)result = &off_24C9345B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9345B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9345B8;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK::~ARI_IBIMsSsLcsMtlrNotificationRsp_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C9345B8;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C404A09149ALL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK::~ARI_IBIMsSsLcsMtlrNotificationRsp_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK::pack(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK::unpack(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C404A09149ALL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C404A09149ALL);
  return v3;
}

void sub_20E2EDF80(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C404A09149ALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRsp_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1417674752;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55000000u, 0);
  *(_QWORD *)result = &off_24C9345F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55000000u, 0);
  *(_QWORD *)result = &off_24C9345F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9345F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C9345F0;
  *((_QWORD *)result + 8) = 0;
  return result;
}

void AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK::~ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK *this)
{
  uint64_t v2;

  *(_QWORD *)this = &off_24C9345F0;
  v2 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK::~ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK::pack(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    result = 0;
    *a2 = (AriMsg *)*((_QWORD *)this + 6);
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK::unpack(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  BOOL v6;

  v6 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v6, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v6;
  if (!v4)
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
  MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  return v3;
}

void sub_20E2EE20C(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C4052888210);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsSsLcsMtlrNotificationRspAckCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1426063360;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55808000u, 0);
  *(_QWORD *)result = &off_24C934628;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55808000u, 0);
  *(_QWORD *)result = &off_24C934628;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934628;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934628;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK::~ARI_IBIMsSsLcsMtlrRejectIndCb_SDK(AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C934628;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C404A09149ALL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK::~ARI_IBIMsSsLcsMtlrRejectIndCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK::pack(AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 8uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK::unpack(AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 8, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_QWORD *)operator new();
    *v6 = *v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C404A09149ALL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C404A09149ALL);
  return v3;
}

void sub_20E2EE594(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C404A09149ALL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsSsLcsMtlrRejectIndCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1434484736;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x54808000u, 0);
  *(_QWORD *)result = &off_24C934660;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x54808000u, 0);
  *(_QWORD *)result = &off_24C934660;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934660;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934660;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK::~ARI_IBIMsSsLcsPositioningCapabilityReq_SDK(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C934660;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C407D226C2BLL);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK::~ARI_IBIMsSsLcsPositioningCapabilityReq_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK::pack(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x10uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK::unpack(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _QWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_QWORD *)operator new();
  *v5 = 0;
  v5[1] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 16, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = (_OWORD *)operator new();
    *v6 = *(_OWORD *)v5;
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C407D226C2BLL);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C407D226C2BLL);
  return v3;
}

void sub_20E2EE938(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C407D226C2BLL);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityReq_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1417707520;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK *this)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55008000u, 0);
  *(_QWORD *)result = &off_24C934698;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, 0x55008000u, 0);
  *(_QWORD *)result = &off_24C934698;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

AriSdk::MsgBase *AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK *this, unsigned __int8 *a2, uint64_t a3)
{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934698;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

{
  AriSdk::MsgBase *result;

  result = AriSdk::MsgBase::MsgBase(this, a2, a3);
  *(_QWORD *)result = &off_24C934698;
  *((_QWORD *)result + 8) = 0;
  *((_QWORD *)result + 9) = 0;
  return result;
}

void AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK::~ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK *this)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)this = &off_24C934698;
  v2 = *((_QWORD *)this + 9);
  *((_QWORD *)this + 9) = 0;
  if (v2)
    MEMORY[0x212BB9B60](v2, 0x1000C40B68A9B53);
  v3 = *((_QWORD *)this + 8);
  *((_QWORD *)this + 8) = 0;
  if (v3)
    MEMORY[0x212BB9B60](v3, 0x1000C4052888210);
  *(_QWORD *)this = &unk_24C8DB478;
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 48);
  std::shared_ptr<std::vector<unsigned char> const>::~shared_ptr[abi:ne180100]((uint64_t)this + 8);
}

{
  AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK::~ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK(this);
  JUMPOUT(0x212BB9B60);
}

uint64_t AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK::pack(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK *this, AriMsg **a2)
{
  const void *v4;
  uint64_t result;
  const void *v6;

  *a2 = 0;
  v4 = (const void *)*((_QWORD *)this + 8);
  if (!v4 || (result = AriMsg::pack(*((AriMsg **)this + 6), 1, v4, 4uLL, 0), !(_DWORD)result))
  {
    v6 = (const void *)*((_QWORD *)this + 9);
    if (!v6 || (result = AriMsg::pack(*((AriMsg **)this + 6), 2, v6, 0x14uLL, 0), !(_DWORD)result))
    {
      result = 0;
      *a2 = (AriMsg *)*((_QWORD *)this + 6);
    }
  }
  return result;
}

uint64_t AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK::unpack(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK *this)
{
  _DWORD *v2;
  uint64_t v3;
  BOOL v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v9;
  BOOL v10;

  v10 = 0;
  v2 = (_DWORD *)operator new();
  *v2 = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 1, v2, 4, &v10, 0);
  if ((_DWORD)v3)
    v4 = 1;
  else
    v4 = !v10;
  if (v4)
  {
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
    if ((_DWORD)v3)
      return v3;
  }
  else
  {
    AriSdk::Tlv<int>::operator=<int &,void>((uint64_t *)this + 8, v2);
    MEMORY[0x212BB9B60](v2, 0x1000C4052888210);
  }
  v9 = 0;
  v5 = (_DWORD *)operator new();
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  v5[4] = 0;
  v3 = AriMsg::unpack(*((AriMsg **)this + 6), 2, v5, 20, &v9, 0);
  if (!(_DWORD)v3 && v9)
  {
    v6 = operator new();
    *(_OWORD *)v6 = *(_OWORD *)v5;
    *(_DWORD *)(v6 + 16) = v5[4];
    v7 = *((_QWORD *)this + 9);
    *((_QWORD *)this + 9) = v6;
    if (v7)
      MEMORY[0x212BB9B60](v7, 0x1000C40B68A9B53);
  }
  MEMORY[0x212BB9B60](v5, 0x1000C40B68A9B53);
  return v3;
}

void sub_20E2EECE8(_Unwind_Exception *a1)
{
  uint64_t v1;

  MEMORY[0x212BB9B60](v1, 0x1000C40B68A9B53);
  _Unwind_Resume(a1);
}

BOOL AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK::hasDeclaredGmid(AriSdk::ARI_IBIMsSsLcsPositioningCapabilityRspCb_SDK *this)
{
  return ((*((_DWORD *)this + 9) << 15) | (*((_DWORD *)this + 10) << 26)) == 1426096128;
}

void CFNotificationCenterAddObserver(CFNotificationCenterRef center, const void *observer, CFNotificationCallback callBack, CFStringRef name, const void *object, CFNotificationSuspensionBehavior suspensionBehavior)
{
  MEMORY[0x24BDBC038](center, observer, callBack, name, object, suspensionBehavior);
}

CFNotificationCenterRef CFNotificationCenterGetDarwinNotifyCenter(void)
{
  return (CFNotificationCenterRef)MEMORY[0x24BDBC048]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x24BDAC730](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x24BDAC780](exception_object);
}

const std::locale::facet *__cdecl std::locale::use_facet(const std::locale *this, std::locale::id *a2)
{
  return (const std::locale::facet *)MEMORY[0x24BEDAA60](this, a2);
}

std::locale std::ios_base::getloc(const std::ios_base *this)
{
  return (std::locale)MEMORY[0x24BEDAA70](this);
}

std::logic_error *__cdecl std::logic_error::logic_error(std::logic_error *this, const char *a2)
{
  return (std::logic_error *)MEMORY[0x24BEDAAA8](this, a2);
}

std::bad_array_new_length *__cdecl std::bad_array_new_length::bad_array_new_length(std::bad_array_new_length *this)
{
  return (std::bad_array_new_length *)MEMORY[0x24BEDABB0](this);
}

size_t std::__next_prime(size_t __n)
{
  return MEMORY[0x24BEDABE8](__n);
}

void std::string::__grow_by_and_replace(std::string *this, std::string::size_type __old_cap, std::string::size_type __delta_cap, std::string::size_type __old_sz, std::string::size_type __n_copy, std::string::size_type __n_del, std::string::size_type __n_add, const std::string::value_type *__p_new_stuff)
{
  MEMORY[0x24BEDAC08](this, __old_cap, __delta_cap, __old_sz, __n_copy, __n_del, __n_add, __p_new_stuff);
}

std::string *__cdecl std::string::erase(std::string *this, std::string::size_type __pos, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x24BEDAC20](this, __pos, __n);
}

std::string *__cdecl std::string::append(std::string *this, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x24BEDAC40](this, __s, __n);
}

std::string *__cdecl std::string::insert(std::string *this, std::string::size_type __pos, const std::string::value_type *__s, std::string::size_type __n)
{
  return (std::string *)MEMORY[0x24BEDAC88](this, __pos, __s, __n);
}

std::string *__cdecl std::string::replace(std::string *this, std::string::size_type __pos, std::string::size_type __n1, const std::string::value_type *__s, std::string::size_type __n2)
{
  return (std::string *)MEMORY[0x24BEDACA8](this, __pos, __n1, __s, __n2);
}

std::string *__cdecl std::string::replace(std::string *this, std::string::size_type __pos, std::string::size_type __n1, std::string::size_type __n2, std::string::value_type __c)
{
  return (std::string *)MEMORY[0x24BEDACB0](this, __pos, __n1, __n2, __c);
}

void std::string::push_back(std::string *this, std::string::value_type __c)
{
  MEMORY[0x24BEDACC8](this, __c);
}

void std::string::~string(std::string *this)
{
  MEMORY[0x24BEDACF0](this);
}

std::string *__cdecl std::string::operator=(std::string *this, const std::string *__str)
{
  return (std::string *)MEMORY[0x24BEDAD00](this, __str);
}

uint64_t std::ostream::sentry::sentry()
{
  return MEMORY[0x24BEDAEF8]();
}

uint64_t std::ostream::sentry::~sentry()
{
  return MEMORY[0x24BEDAF00]();
}

uint64_t std::ostream::~ostream()
{
  return MEMORY[0x24BEDAF10]();
}

uint64_t std::ostream::operator<<()
{
  return MEMORY[0x24BEDAF48]();
}

{
  return MEMORY[0x24BEDAF50]();
}

{
  return MEMORY[0x24BEDAF78]();
}

uint64_t std::iostream::~basic_iostream()
{
  return MEMORY[0x24BEDB010]();
}

uint64_t std::streambuf::basic_streambuf()
{
  return MEMORY[0x24BEDB048]();
}

uint64_t std::streambuf::~streambuf()
{
  return MEMORY[0x24BEDB050]();
}

void std::__shared_weak_count::__release_weak(std::__shared_weak_count *this)
{
  MEMORY[0x24BEDB180](this);
}

std::__shared_weak_count *__cdecl std::__shared_weak_count::lock(std::__shared_weak_count *this)
{
  return (std::__shared_weak_count *)MEMORY[0x24BEDB188](this);
}

void std::__shared_weak_count::~__shared_weak_count(std::__shared_weak_count *this)
{
  MEMORY[0x24BEDB190](this);
}

void std::mutex::lock(std::mutex *this)
{
  MEMORY[0x24BEDB368](this);
}

void std::mutex::unlock(std::mutex *this)
{
  MEMORY[0x24BEDB370](this);
}

void std::mutex::~mutex(std::mutex *this)
{
  MEMORY[0x24BEDB380](this);
}

std::chrono::system_clock::time_point std::chrono::system_clock::now(void)
{
  return (std::chrono::system_clock::time_point)MEMORY[0x24BEDB3F0]();
}

void std::locale::~locale(std::locale *this)
{
  MEMORY[0x24BEDB448](this);
}

void std::ios_base::__set_badbit_and_consider_rethrow(std::ios_base *this)
{
  MEMORY[0x24BEDB500](this);
}

void std::ios_base::init(std::ios_base *this, void *__sb)
{
  MEMORY[0x24BEDB518](this, __sb);
}

void std::ios_base::clear(std::ios_base *this, std::ios_base::iostate __state)
{
  MEMORY[0x24BEDB530](this, *(_QWORD *)&__state);
}

uint64_t std::ios::~ios()
{
  return MEMORY[0x24BEDB5E8]();
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, unsigned int __val)
{
  return (std::string *)MEMORY[0x24BEDB610](retstr, *(_QWORD *)&__val);
}

std::string *__cdecl std::to_string(std::string *__return_ptr retstr, unint64_t __val)
{
  return (std::string *)MEMORY[0x24BEDB620](retstr, __val);
}

uint64_t std::operator+<char>()
{
  return MEMORY[0x24BEDB638]();
}

void std::exception::~exception(std::exception *this)
{
  MEMORY[0x24BEDB688](this);
}

void std::terminate(void)
{
  MEMORY[0x24BEDB6C0]();
}

uint64_t operator delete[]()
{
  return off_24C8CD950();
}

void operator delete(void *__p)
{
  off_24C8CD958(__p);
}

uint64_t operator delete()
{
  return off_24C8CD960();
}

uint64_t operator new[]()
{
  return off_24C8CD968();
}

void *__cdecl operator new(size_t __sz)
{
  return (void *)off_24C8CD970(__sz);
}

uint64_t operator new()
{
  return off_24C8CD978();
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x24BDAC7A0](a1, a2, *(_QWORD *)&a3, a4);
}

void *__cxa_allocate_exception(size_t thrown_size)
{
  return (void *)MEMORY[0x24BEDB8F8](thrown_size);
}

int __cxa_atexit(void (*lpfunc)(void *), void *obj, void *lpdso_handle)
{
  return MEMORY[0x24BDAC7B0](lpfunc, obj, lpdso_handle);
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x24BEDB910](a1);
}

void __cxa_end_catch(void)
{
  MEMORY[0x24BEDB928]();
}

void __cxa_free_exception(void *a1)
{
  MEMORY[0x24BEDB930](a1);
}

void __cxa_guard_abort(__guard *a1)
{
  MEMORY[0x24BEDB940](a1);
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x24BEDB948](a1);
}

void __cxa_guard_release(__guard *a1)
{
  MEMORY[0x24BEDB950](a1);
}

void __cxa_rethrow(void)
{
  MEMORY[0x24BEDB958]();
}

void __cxa_throw(void *a1, struct type_info *lptinfo, void (*a3)(void *))
{
  MEMORY[0x24BEDB960](a1, lptinfo, a3);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

void dispatch_activate(dispatch_object_t object)
{
  MEMORY[0x24BDADC58](object);
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADCC0](queue, block);
}

dispatch_queue_global_t dispatch_get_global_queue(intptr_t identifier, uintptr_t flags)
{
  return (dispatch_queue_global_t)MEMORY[0x24BDADDA8](identifier, flags);
}

void dispatch_group_async(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADDB8](group, queue, block);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void dispatch_group_notify(dispatch_group_t group, dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADDE0](group, queue, block);
}

intptr_t dispatch_group_wait(dispatch_group_t group, dispatch_time_t timeout)
{
  return MEMORY[0x24BDADDF0](group, timeout);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x24BDADE98](predicate, block);
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_qos_class(dispatch_queue_attr_t attr, dispatch_qos_class_t qos_class, int relative_priority)
{
  return (dispatch_queue_attr_t)MEMORY[0x24BDADEC8](attr, *(_QWORD *)&qos_class, *(_QWORD *)&relative_priority);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x24BDADED0](label, attr);
}

const char *__cdecl dispatch_queue_get_label(dispatch_queue_t queue)
{
  return (const char *)MEMORY[0x24BDADEE0](queue);
}

void dispatch_release(dispatch_object_t object)
{
  MEMORY[0x24BDADF10](object);
}

void dispatch_resume(dispatch_object_t object)
{
  MEMORY[0x24BDADF18](object);
}

void dispatch_retain(dispatch_object_t object)
{
  MEMORY[0x24BDADF20](object);
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return (dispatch_semaphore_t)MEMORY[0x24BDADF28](value);
}

intptr_t dispatch_semaphore_signal(dispatch_semaphore_t dsema)
{
  return MEMORY[0x24BDADF30](dsema);
}

intptr_t dispatch_semaphore_wait(dispatch_semaphore_t dsema, dispatch_time_t timeout)
{
  return MEMORY[0x24BDADF38](dsema, timeout);
}

void dispatch_source_cancel(dispatch_source_t source)
{
  MEMORY[0x24BDADF68](source);
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x24BDADF70](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
  MEMORY[0x24BDADFB0](source, handler);
}

void dispatch_source_set_timer(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway)
{
  MEMORY[0x24BDADFD0](source, start, interval, leeway);
}

intptr_t dispatch_source_testcancel(dispatch_source_t source)
{
  return MEMORY[0x24BDADFD8](source);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x24BDADFE8](queue, block);
}

dispatch_time_t dispatch_time(dispatch_time_t when, int64_t delta)
{
  return MEMORY[0x24BDADFF8](when, delta);
}

int dlclose(void *__handle)
{
  return MEMORY[0x24BDAE060](__handle);
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x24BDAE070](__path, *(_QWORD *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x24BDAE088](__handle, __symbol);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

const char *getprogname(void)
{
  return (const char *)MEMORY[0x24BDAE6E8]();
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x24BDAED78](size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x24BDAEE78](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x24BDAEEA8](__b, *(_QWORD *)&__c, __len);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x24BDAF368](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

int printf(const char *a1, ...)
{
  return MEMORY[0x24BDAF6A8](a1);
}

int snprintf(char *__str, size_t __size, const char *__format, ...)
{
  return MEMORY[0x24BDAFE40](__str, __size, __format);
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x24BDAFEF0](__s1, __s2);
}

size_t strlcat(char *__dst, const char *__source, size_t __size)
{
  return MEMORY[0x24BDAFF30](__dst, __source, __size);
}

size_t strlen(const char *__s)
{
  return MEMORY[0x24BDAFF40](__s);
}

int strncmp(const char *__s1, const char *__s2, size_t __n)
{
  return MEMORY[0x24BDAFF68](__s1, __s2, __n);
}

char *__cdecl strrchr(char *__s, int __c)
{
  return (char *)MEMORY[0x24BDAFFA8](__s, *(_QWORD *)&__c);
}

char *__cdecl strstr(char *__s1, const char *__s2)
{
  return (char *)MEMORY[0x24BDAFFC8](__s1, __s2);
}

int vsnprintf(char *__str, size_t __size, const char *__format, va_list a4)
{
  return MEMORY[0x24BDB0448](__str, __size, __format, a4);
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
  MEMORY[0x24BDB0630](xarray, value);
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x24BDB0640](objects, count);
}

void xpc_connection_cancel(xpc_connection_t connection)
{
  MEMORY[0x24BDB0718](connection);
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x24BDB0740](name, targetq, flags);
}

void xpc_connection_resume(xpc_connection_t connection)
{
  MEMORY[0x24BDB0798](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x24BDB07A8](connection, message);
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
  MEMORY[0x24BDB07B0](connection, message, replyq, handler);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x24BDB07C8](connection, handler);
}

void xpc_connection_set_target_queue(xpc_connection_t connection, dispatch_queue_t targetq)
{
  MEMORY[0x24BDB07E8](connection, targetq);
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x24BDB0820](object);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x24BDB08C0](keys, values, count);
}

const void *__cdecl xpc_dictionary_get_data(xpc_object_t xdict, const char *key, size_t *length)
{
  return (const void *)MEMORY[0x24BDB0918](xdict, key, length);
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0938](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x24BDB0958](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
  MEMORY[0x24BDB0978](xdict, key, value);
}

void xpc_dictionary_set_data(xpc_object_t xdict, const char *key, const void *bytes, size_t length)
{
  MEMORY[0x24BDB0988](xdict, key, bytes, length);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x24BDB09C8](xdict, key, string);
}

void xpc_dictionary_set_uint64(xpc_object_t xdict, const char *key, uint64_t value)
{
  MEMORY[0x24BDB09D0](xdict, key, value);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x24BDB09E0](xdict, key, value);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x24BDB0A70](object);
}

void xpc_release(xpc_object_t object)
{
  MEMORY[0x24BDB0AE0](object);
}

